ng30704
==== Thu 25 Sep 2025 10:13:05 AM EDT | job 50158532 | node ng30704 ====
model= instance= sa_anneal=
SLURM_JOB_GPUS=2
CUDA_VISIBLE_DEVICES=0
0, GPU-be273b36-cd6c-6dee-3fee-e2a496d18305, NVIDIA A100-SXM4-40GB
/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/tsp.py:49: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model_opt.load_state_dict(torch.load("/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/vca.pth", map_location=device), strict=True)
/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/tsp.py:62: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  heuristic_samples_idx = torch.load(heuristic_samples_file, map_location=device)
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(121.5733, device='cuda:0', dtype=torch.float64)
tensor([-2.3180, -4.8303, -3.1569, -7.8147, -3.7654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(90.0628, device='cuda:0', dtype=torch.float64)
tensor([-2.5081, -5.1201, -3.0569, -4.5738, -3.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(87.5967, device='cuda:0', dtype=torch.float64)
tensor([-2.4235, -5.2131, -3.0822, -4.0288, -4.4124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(55.1437, device='cuda:0', dtype=torch.float64)
tensor([-2.4798, -4.3680, -3.0295, -3.4801, -4.7926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(47.4659, device='cuda:0', dtype=torch.float64)
tensor([-2.4816, -4.6787, -2.9718, -4.2841, -4.9506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(48.9463, device='cuda:0', dtype=torch.float64)
tensor([-2.2923, -5.1852, -2.9254, -6.9136, -5.3023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(59.5767, device='cuda:0', dtype=torch.float64)
tensor([-2.0441, -4.2387, -2.8229, -5.4161, -5.2841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(49.8260, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -3.4005, -2.7954, -4.0040, -4.6084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(31.2878, device='cuda:0', dtype=torch.float64)
tensor([-1.7689, -3.3270, -2.8519, -4.0237, -4.0066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4190, device='cuda:0', dtype=torch.float64)
tensor([-1.7710, -3.6788, -2.9603, -4.2203, -3.6519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.9352, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -3.8458, -3.0587, -4.4383, -3.5221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4122, device='cuda:0', dtype=torch.float64)
tensor([-2.2425, -3.6146, -3.1506, -4.5709, -3.4979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.8253, device='cuda:0', dtype=torch.float64)
tensor([-2.2261, -3.2693, -3.2384, -4.4492, -3.4531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.2060, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -3.0341, -3.3094, -4.1106, -3.3640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.8660, device='cuda:0', dtype=torch.float64)
tensor([-1.6683, -2.8514, -3.4103, -3.8212, -3.2773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9524, device='cuda:0', dtype=torch.float64)
tensor([-1.6191, -2.7558, -3.5428, -3.6581, -3.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.3829, device='cuda:0', dtype=torch.float64)
tensor([-1.6192, -2.7370, -3.5242, -3.5503, -3.2140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.1735, device='cuda:0', dtype=torch.float64)
tensor([-1.6542, -2.7670, -3.4004, -3.4661, -3.2658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.7328, device='cuda:0', dtype=torch.float64)
tensor([-1.7211, -2.8360, -3.3551, -3.3908, -3.3695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.2283, device='cuda:0', dtype=torch.float64)
tensor([-1.8117, -2.9470, -3.4105, -3.3121, -3.4818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.0565, device='cuda:0', dtype=torch.float64)
tensor([-1.9127, -3.1028, -3.5128, -3.2363, -3.5676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.6274, device='cuda:0', dtype=torch.float64)
tensor([-2.0083, -3.2561, -3.6062, -3.1663, -3.5997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.6095, device='cuda:0', dtype=torch.float64)
tensor([-2.0905, -3.3325, -3.6316, -3.1082, -3.5862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2215, device='cuda:0', dtype=torch.float64)
tensor([-2.1598, -3.3175, -3.5840, -3.0682, -3.5564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3232, device='cuda:0', dtype=torch.float64)
tensor([-2.2170, -3.2686, -3.4898, -3.0445, -3.5322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0743, device='cuda:0', dtype=torch.float64)
tensor([-2.2691, -3.2435, -3.4040, -3.0354, -3.5278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1711, device='cuda:0', dtype=torch.float64)
tensor([-2.3164, -3.2300, -3.3300, -3.0336, -3.5294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2597, device='cuda:0', dtype=torch.float64)
tensor([-2.3561, -3.2154, -3.2717, -3.0376, -3.5243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4635, device='cuda:0', dtype=torch.float64)
tensor([-2.3854, -3.1951, -3.2250, -3.0474, -3.5069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5609, device='cuda:0', dtype=torch.float64)
tensor([-2.3994, -3.1697, -3.1870, -3.0594, -3.4771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3568, device='cuda:0', dtype=torch.float64)
tensor([-2.4066, -3.1499, -3.1581, -3.0756, -3.4465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0747, device='cuda:0', dtype=torch.float64)
tensor([-2.4040, -3.1387, -3.1360, -3.0960, -3.4167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2848, device='cuda:0', dtype=torch.float64)
tensor([-2.3907, -3.1393, -3.1174, -3.1156, -3.3884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3776, device='cuda:0', dtype=torch.float64)
tensor([-2.3640, -3.1524, -3.1005, -3.1340, -3.3592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1287, device='cuda:0', dtype=torch.float64)
tensor([-2.3295, -3.1782, -3.0872, -3.1534, -3.3332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0397, device='cuda:0', dtype=torch.float64)
tensor([-2.3021, -3.2222, -3.0785, -3.1741, -3.3130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2290, device='cuda:0', dtype=torch.float64)
tensor([-2.2821, -3.2859, -3.0740, -3.1977, -3.2987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9812, device='cuda:0', dtype=torch.float64)
tensor([-2.2678, -3.3666, -3.0727, -3.2221, -3.2898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8991, device='cuda:0', dtype=torch.float64)
tensor([-2.2594, -3.4599, -3.0732, -3.2435, -3.2846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9548, device='cuda:0', dtype=torch.float64)
tensor([-2.2552, -3.5655, -3.0747, -3.2643, -3.2826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7133, device='cuda:0', dtype=torch.float64)
tensor([-2.2549, -3.6771, -3.0771, -3.2832, -3.2836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9139, device='cuda:0', dtype=torch.float64)
tensor([-2.2571, -3.7924, -3.0797, -3.3027, -3.2866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8255, device='cuda:0', dtype=torch.float64)
tensor([-2.2612, -3.9062, -3.0837, -3.3206, -3.2914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9616, device='cuda:0', dtype=torch.float64)
tensor([-2.2668, -4.0262, -3.0881, -3.3389, -3.2970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9450, device='cuda:0', dtype=torch.float64)
tensor([-2.2733, -4.1483, -3.0937, -3.3564, -3.3041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6947, device='cuda:0', dtype=torch.float64)
tensor([-2.2823, -4.2677, -3.1007, -3.3696, -3.3124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6773, device='cuda:0', dtype=torch.float64)
tensor([-2.2925, -4.3718, -3.1089, -3.3834, -3.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7404, device='cuda:0', dtype=torch.float64)
tensor([-2.3038, -4.4721, -3.1172, -3.3966, -3.3314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6791, device='cuda:0', dtype=torch.float64)
tensor([-2.3173, -4.5716, -3.1258, -3.4099, -3.3428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9108, device='cuda:0', dtype=torch.float64)
tensor([-2.3321, -4.6702, -3.1347, -3.4204, -3.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4113, device='cuda:0', dtype=torch.float64)
tensor([-2.3474, -4.7641, -3.1431, -3.4313, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5052, device='cuda:0', dtype=torch.float64)
tensor([-2.3636, -4.8539, -3.1515, -3.4439, -3.3794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6118, device='cuda:0', dtype=torch.float64)
tensor([-2.3799, -4.9446, -3.1596, -3.4564, -3.3922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5278, device='cuda:0', dtype=torch.float64)
tensor([-2.3951, -5.0200, -3.1676, -3.4672, -3.4052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6483, device='cuda:0', dtype=torch.float64)
tensor([-2.4108, -5.0930, -3.1764, -3.4799, -3.4189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4038, device='cuda:0', dtype=torch.float64)
tensor([-2.4270, -5.1605, -3.1849, -3.4926, -3.4329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4365, device='cuda:0', dtype=torch.float64)
tensor([-2.4428, -5.2276, -3.1935, -3.5053, -3.4466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4884, device='cuda:0', dtype=torch.float64)
tensor([-2.4587, -5.2828, -3.2021, -3.5192, -3.4606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4816, device='cuda:0', dtype=torch.float64)
tensor([-2.4753, -5.3315, -3.2106, -3.5332, -3.4745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5238, device='cuda:0', dtype=torch.float64)
tensor([-2.4922, -5.3705, -3.2196, -3.5443, -3.4885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3055, device='cuda:0', dtype=torch.float64)
tensor([-2.5083, -5.4025, -3.2286, -3.5539, -3.5024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3021, device='cuda:0', dtype=torch.float64)
tensor([-2.5248, -5.4302, -3.2373, -3.5657, -3.5163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2766, device='cuda:0', dtype=torch.float64)
tensor([-2.5406, -5.4552, -3.2456, -3.5772, -3.5296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2593, device='cuda:0', dtype=torch.float64)
tensor([-2.5568, -5.4755, -3.2535, -3.5880, -3.5424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3340, device='cuda:0', dtype=torch.float64)
tensor([-2.5729, -5.4953, -3.2609, -3.5984, -3.5547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1502, device='cuda:0', dtype=torch.float64)
tensor([-2.5885, -5.5163, -3.2682, -3.6084, -3.5666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1815, device='cuda:0', dtype=torch.float64)
tensor([-2.6032, -5.5353, -3.2751, -3.6190, -3.5778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1772, device='cuda:0', dtype=torch.float64)
tensor([-2.6169, -5.5483, -3.2815, -3.6297, -3.5884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1706, device='cuda:0', dtype=torch.float64)
tensor([-2.6305, -5.5589, -3.2875, -3.6396, -3.5987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1387, device='cuda:0', dtype=torch.float64)
tensor([-2.6435, -5.5689, -3.2930, -3.6482, -3.6083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1094, device='cuda:0', dtype=torch.float64)
tensor([-2.6551, -5.5768, -3.2981, -3.6553, -3.6169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1122, device='cuda:0', dtype=torch.float64)
tensor([-2.6655, -5.5826, -3.3025, -3.6618, -3.6247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1100, device='cuda:0', dtype=torch.float64)
tensor([-2.6748, -5.5885, -3.3064, -3.6683, -3.6317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1252, device='cuda:0', dtype=torch.float64)
tensor([-2.6831, -5.5931, -3.3098, -3.6746, -3.6379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0930, device='cuda:0', dtype=torch.float64)
tensor([-2.6906, -5.5964, -3.3129, -3.6804, -3.6437], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_101343.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(130.2310, device='cuda:0', dtype=torch.float64)
tensor([-2.2823, -4.6145, -3.0838, -7.3631, -3.7261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(94.1524, device='cuda:0', dtype=torch.float64)
tensor([-2.4494, -5.0102, -3.0336, -4.3688, -3.8834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(89.3653, device='cuda:0', dtype=torch.float64)
tensor([-2.4210, -5.1652, -3.0474, -3.9291, -4.4529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(57.0466, device='cuda:0', dtype=torch.float64)
tensor([-2.4882, -4.3516, -3.0054, -3.4465, -4.8185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.5672, device='cuda:0', dtype=torch.float64)
tensor([-2.4550, -4.8490, -2.9538, -4.7284, -4.9723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(60.4978, device='cuda:0', dtype=torch.float64)
tensor([-2.2114, -4.8675, -2.8795, -6.2749, -5.2372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.8524, device='cuda:0', dtype=torch.float64)
tensor([-1.9580, -3.7711, -2.7929, -4.2006, -4.9285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(47.6488, device='cuda:0', dtype=torch.float64)
tensor([-1.7952, -3.2560, -2.8045, -3.9425, -4.2680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.1925, device='cuda:0', dtype=torch.float64)
tensor([-1.7416, -3.4605, -2.8920, -4.1266, -3.7818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.7961, device='cuda:0', dtype=torch.float64)
tensor([-1.7852, -3.8061, -3.0049, -4.3381, -3.5476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.4981, device='cuda:0', dtype=torch.float64)
tensor([-2.0133, -3.7034, -3.1029, -4.4766, -3.4933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.1793, device='cuda:0', dtype=torch.float64)
tensor([-2.1492, -3.3207, -3.1958, -4.4287, -3.4520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.7347, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -3.0356, -3.2666, -4.1102, -3.3601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(30.4850, device='cuda:0', dtype=torch.float64)
tensor([-1.6485, -2.8332, -3.3594, -3.8070, -3.2664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.2249, device='cuda:0', dtype=torch.float64)
tensor([-1.6024, -2.7298, -3.4540, -3.6229, -3.2061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.7314, device='cuda:0', dtype=torch.float64)
tensor([-1.6187, -2.7209, -3.3956, -3.4950, -3.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.3401, device='cuda:0', dtype=torch.float64)
tensor([-1.6810, -2.7758, -3.3066, -3.3902, -3.2921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6299, device='cuda:0', dtype=torch.float64)
tensor([-1.7820, -2.8892, -3.3366, -3.2949, -3.4258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.8051, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -3.0618, -3.4325, -3.1998, -3.5266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.7376, device='cuda:0', dtype=torch.float64)
tensor([-2.0093, -3.2181, -3.4950, -3.1125, -3.5424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.5400, device='cuda:0', dtype=torch.float64)
tensor([-2.0988, -3.2593, -3.4698, -3.0514, -3.5172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.2244, device='cuda:0', dtype=torch.float64)
tensor([-2.1703, -3.2202, -3.3824, -3.0186, -3.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.8446, device='cuda:0', dtype=torch.float64)
tensor([-2.2232, -3.1765, -3.2767, -3.0054, -3.4877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.0783, device='cuda:0', dtype=torch.float64)
tensor([-2.2536, -3.1339, -3.1881, -3.0058, -3.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.5175, device='cuda:0', dtype=torch.float64)
tensor([-2.2554, -3.0810, -3.1209, -3.0175, -3.3963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.6005, device='cuda:0', dtype=torch.float64)
tensor([-2.2245, -3.0294, -3.0748, -3.0422, -3.3246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.2541, device='cuda:0', dtype=torch.float64)
tensor([-2.1567, -3.0005, -3.0457, -3.0768, -3.2527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3326, device='cuda:0', dtype=torch.float64)
tensor([-2.0639, -3.0114, -3.0316, -3.1148, -3.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2188, device='cuda:0', dtype=torch.float64)
tensor([-1.9660, -3.0405, -3.0297, -3.1516, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9510, device='cuda:0', dtype=torch.float64)
tensor([-1.8791, -3.0369, -3.0357, -3.1856, -3.0887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7056, device='cuda:0', dtype=torch.float64)
tensor([-1.8089, -2.9758, -3.0444, -3.2155, -3.0608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6109, device='cuda:0', dtype=torch.float64)
tensor([-1.7561, -2.8763, -3.0512, -3.2395, -3.0478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2750, device='cuda:0', dtype=torch.float64)
tensor([-1.7201, -2.7791, -3.0535, -3.2535, -3.0494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4121, device='cuda:0', dtype=torch.float64)
tensor([-1.7003, -2.7049, -3.0490, -3.2569, -3.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5062, device='cuda:0', dtype=torch.float64)
tensor([-1.6953, -2.6519, -3.0371, -3.2498, -3.0882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0431, device='cuda:0', dtype=torch.float64)
tensor([-1.7025, -2.6165, -3.0199, -3.2349, -3.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5814, device='cuda:0', dtype=torch.float64)
tensor([-1.7198, -2.5965, -2.9979, -3.2162, -3.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0586, device='cuda:0', dtype=torch.float64)
tensor([-1.7460, -2.5900, -2.9743, -3.1952, -3.2046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7874, device='cuda:0', dtype=torch.float64)
tensor([-1.7786, -2.5941, -2.9495, -3.1745, -3.2489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3701, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6065, -2.9246, -3.1564, -3.2914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8417, device='cuda:0', dtype=torch.float64)
tensor([-1.8545, -2.6252, -2.9015, -3.1413, -3.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9914, device='cuda:0', dtype=torch.float64)
tensor([-1.8910, -2.6477, -2.8815, -3.1303, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1045, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.6711, -2.8648, -3.1239, -3.3871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3403, device='cuda:0', dtype=torch.float64)
tensor([-1.9475, -2.6924, -2.8502, -3.1192, -3.4003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2131, device='cuda:0', dtype=torch.float64)
tensor([-1.9655, -2.7100, -2.8379, -3.1162, -3.4038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9489, device='cuda:0', dtype=torch.float64)
tensor([-1.9782, -2.7230, -2.8278, -3.1138, -3.4002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1092, device='cuda:0', dtype=torch.float64)
tensor([-1.9838, -2.7309, -2.8182, -3.1134, -3.3894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8240, device='cuda:0', dtype=torch.float64)
tensor([-1.9849, -2.7349, -2.8096, -3.1138, -3.3750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8125, device='cuda:0', dtype=torch.float64)
tensor([-1.9807, -2.7346, -2.8032, -3.1158, -3.3580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7407, device='cuda:0', dtype=torch.float64)
tensor([-1.9723, -2.7315, -2.7981, -3.1193, -3.3394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4661, device='cuda:0', dtype=torch.float64)
tensor([-1.9632, -2.7283, -2.7949, -3.1232, -3.3221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4329, device='cuda:0', dtype=torch.float64)
tensor([-1.9526, -2.7242, -2.7934, -3.1291, -3.3058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3855, device='cuda:0', dtype=torch.float64)
tensor([-1.9426, -2.7212, -2.7937, -3.1355, -3.2943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4492, device='cuda:0', dtype=torch.float64)
tensor([-1.9345, -2.7196, -2.7946, -3.1429, -3.2860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4070, device='cuda:0', dtype=torch.float64)
tensor([-1.9290, -2.7181, -2.7973, -3.1490, -3.2814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3365, device='cuda:0', dtype=torch.float64)
tensor([-1.9265, -2.7175, -2.7996, -3.1544, -3.2795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3434, device='cuda:0', dtype=torch.float64)
tensor([-1.9254, -2.7174, -2.8039, -3.1593, -3.2809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7017, device='cuda:0', dtype=torch.float64)
tensor([-1.9251, -2.7172, -2.8082, -3.1638, -3.2841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0754, device='cuda:0', dtype=torch.float64)
tensor([-1.9265, -2.7174, -2.8121, -3.1672, -3.2884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1788, device='cuda:0', dtype=torch.float64)
tensor([-1.9286, -2.7185, -2.8156, -3.1698, -3.2931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-1.9321, -2.7208, -2.8206, -3.1726, -3.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([-1.9380, -2.7249, -2.8227, -3.1737, -3.3064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0526, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.7293, -2.8244, -3.1745, -3.3136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2057, device='cuda:0', dtype=torch.float64)
tensor([-1.9517, -2.7347, -2.8261, -3.1754, -3.3213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3362, device='cuda:0', dtype=torch.float64)
tensor([-1.9605, -2.7406, -2.8270, -3.1766, -3.3298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9184, device='cuda:0', dtype=torch.float64)
tensor([-1.9707, -2.7457, -2.8289, -3.1781, -3.3393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2163, device='cuda:0', dtype=torch.float64)
tensor([-1.9816, -2.7512, -2.8312, -3.1785, -3.3477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1365, device='cuda:0', dtype=torch.float64)
tensor([-1.9938, -2.7568, -2.8323, -3.1784, -3.3566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2026, device='cuda:0', dtype=torch.float64)
tensor([-2.0069, -2.7627, -2.8336, -3.1792, -3.3650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0394, device='cuda:0', dtype=torch.float64)
tensor([-2.0203, -2.7693, -2.8352, -3.1790, -3.3719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0603, device='cuda:0', dtype=torch.float64)
tensor([-2.0343, -2.7770, -2.8374, -3.1777, -3.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2473, device='cuda:0', dtype=torch.float64)
tensor([-2.0489, -2.7859, -2.8393, -3.1771, -3.3905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0982, device='cuda:0', dtype=torch.float64)
tensor([-2.0638, -2.7952, -2.8419, -3.1770, -3.4003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0352, device='cuda:0', dtype=torch.float64)
tensor([-2.0794, -2.8052, -2.8448, -3.1771, -3.4102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1458, device='cuda:0', dtype=torch.float64)
tensor([-2.0947, -2.8152, -2.8486, -3.1789, -3.4203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2573, device='cuda:0', dtype=torch.float64)
tensor([-2.1132, -2.8274, -2.8513, -3.1811, -3.4325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9745, device='cuda:0', dtype=torch.float64)
tensor([-2.1347, -2.8400, -2.8544, -3.1831, -3.4466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0738, device='cuda:0', dtype=torch.float64)
tensor([-2.1573, -2.8521, -2.8589, -3.1869, -3.4634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0855, device='cuda:0', dtype=torch.float64)
tensor([-2.1808, -2.8651, -2.8642, -3.1938, -3.4824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3188, device='cuda:0', dtype=torch.float64)
tensor([-2.2059, -2.8789, -2.8708, -3.2012, -3.5007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9006, device='cuda:0', dtype=torch.float64)
tensor([-2.2301, -2.8929, -2.8786, -3.2092, -3.5186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0538, device='cuda:0', dtype=torch.float64)
tensor([-2.2554, -2.9075, -2.8875, -3.2173, -3.5374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0883, device='cuda:0', dtype=torch.float64)
tensor([-2.2840, -2.9239, -2.8965, -3.2274, -3.5599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1003, device='cuda:0', dtype=torch.float64)
tensor([-2.3140, -2.9412, -2.9067, -3.2366, -3.5836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8621, device='cuda:0', dtype=torch.float64)
tensor([-2.3436, -2.9591, -2.9170, -3.2480, -3.6066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9424, device='cuda:0', dtype=torch.float64)
tensor([-2.3743, -2.9774, -2.9272, -3.2618, -3.6292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9294, device='cuda:0', dtype=torch.float64)
tensor([-2.4072, -2.9955, -2.9377, -3.2765, -3.6514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9930, device='cuda:0', dtype=torch.float64)
tensor([-2.4420, -3.0153, -2.9489, -3.2908, -3.6757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0406, device='cuda:0', dtype=torch.float64)
tensor([-2.4776, -3.0353, -2.9606, -3.3059, -3.7013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0012, device='cuda:0', dtype=torch.float64)
tensor([-2.5146, -3.0572, -2.9737, -3.3240, -3.7284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6783, device='cuda:0', dtype=torch.float64)
tensor([-2.5507, -3.0787, -2.9880, -3.3428, -3.7557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8495, device='cuda:0', dtype=torch.float64)
tensor([-2.5859, -3.1017, -3.0021, -3.3621, -3.7823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1156, device='cuda:0', dtype=torch.float64)
tensor([-2.6196, -3.1234, -3.0156, -3.3808, -3.8077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7571, device='cuda:0', dtype=torch.float64)
tensor([-2.6530, -3.1455, -3.0297, -3.3994, -3.8333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7338, device='cuda:0', dtype=torch.float64)
tensor([-2.6881, -3.1686, -3.0459, -3.4184, -3.8597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7812, device='cuda:0', dtype=torch.float64)
tensor([-2.7240, -3.1925, -3.0612, -3.4390, -3.8863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8497, device='cuda:0', dtype=torch.float64)
tensor([-2.7589, -3.2159, -3.0770, -3.4623, -3.9134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7121, device='cuda:0', dtype=torch.float64)
tensor([-2.7939, -3.2394, -3.0925, -3.4837, -3.9403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7741, device='cuda:0', dtype=torch.float64)
tensor([-2.8301, -3.2640, -3.1094, -3.5066, -3.9698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7019, device='cuda:0', dtype=torch.float64)
tensor([-2.8649, -3.2866, -3.1265, -3.5289, -3.9975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7158, device='cuda:0', dtype=torch.float64)
tensor([-2.8992, -3.3087, -3.1446, -3.5553, -4.0268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6942, device='cuda:0', dtype=torch.float64)
tensor([-2.9308, -3.3294, -3.1621, -3.5820, -4.0536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7554, device='cuda:0', dtype=torch.float64)
tensor([-2.9626, -3.3504, -3.1794, -3.6113, -4.0780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8208, device='cuda:0', dtype=torch.float64)
tensor([-2.9953, -3.3705, -3.1969, -3.6438, -4.1025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6425, device='cuda:0', dtype=torch.float64)
tensor([-3.0283, -3.3905, -3.2138, -3.6775, -4.1275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6945, device='cuda:0', dtype=torch.float64)
tensor([-3.0615, -3.4115, -3.2317, -3.7134, -4.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6441, device='cuda:0', dtype=torch.float64)
tensor([-3.0940, -3.4317, -3.2502, -3.7507, -4.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5377, device='cuda:0', dtype=torch.float64)
tensor([-3.1263, -3.4519, -3.2686, -3.7907, -4.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5678, device='cuda:0', dtype=torch.float64)
tensor([-3.1587, -3.4724, -3.2854, -3.8313, -4.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5522, device='cuda:0', dtype=torch.float64)
tensor([-3.1917, -3.4936, -3.3034, -3.8747, -4.2419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5665, device='cuda:0', dtype=torch.float64)
tensor([-3.2269, -3.5160, -3.3208, -3.9204, -4.2640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7060, device='cuda:0', dtype=torch.float64)
tensor([-3.2650, -3.5389, -3.3401, -3.9722, -4.2890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5620, device='cuda:0', dtype=torch.float64)
tensor([-3.3028, -3.5617, -3.3610, -4.0238, -4.3141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5059, device='cuda:0', dtype=torch.float64)
tensor([-3.3402, -3.5843, -3.3808, -4.0756, -4.3396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5703, device='cuda:0', dtype=torch.float64)
tensor([-3.3785, -3.6065, -3.4012, -4.1281, -4.3654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5301, device='cuda:0', dtype=torch.float64)
tensor([-3.4180, -3.6288, -3.4213, -4.1855, -4.3907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4067, device='cuda:0', dtype=torch.float64)
tensor([-3.4578, -3.6524, -3.4412, -4.2430, -4.4156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4757, device='cuda:0', dtype=torch.float64)
tensor([-3.4978, -3.6745, -3.4609, -4.3007, -4.4389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4972, device='cuda:0', dtype=torch.float64)
tensor([-3.5381, -3.6958, -3.4801, -4.3591, -4.4629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5077, device='cuda:0', dtype=torch.float64)
tensor([-3.5780, -3.7167, -3.4980, -4.4142, -4.4864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3833, device='cuda:0', dtype=torch.float64)
tensor([-3.6177, -3.7369, -3.5154, -4.4697, -4.5096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4372, device='cuda:0', dtype=torch.float64)
tensor([-3.6615, -3.7567, -3.5322, -4.5270, -4.5330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3331, device='cuda:0', dtype=torch.float64)
tensor([-3.7058, -3.7771, -3.5491, -4.5854, -4.5558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3869, device='cuda:0', dtype=torch.float64)
tensor([-3.7512, -3.7982, -3.5660, -4.6444, -4.5796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4128, device='cuda:0', dtype=torch.float64)
tensor([-3.7993, -3.8217, -3.5834, -4.7055, -4.6051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3393, device='cuda:0', dtype=torch.float64)
tensor([-3.8468, -3.8442, -3.6007, -4.7651, -4.6303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3041, device='cuda:0', dtype=torch.float64)
tensor([-3.8919, -3.8645, -3.6158, -4.8194, -4.6519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3329, device='cuda:0', dtype=torch.float64)
tensor([-3.9368, -3.8834, -3.6307, -4.8691, -4.6729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3108, device='cuda:0', dtype=torch.float64)
tensor([-3.9821, -3.9016, -3.6457, -4.9188, -4.6936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3421, device='cuda:0', dtype=torch.float64)
tensor([-4.0239, -3.9174, -3.6602, -4.9659, -4.7137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2688, device='cuda:0', dtype=torch.float64)
tensor([-4.0667, -3.9325, -3.6740, -5.0114, -4.7334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2857, device='cuda:0', dtype=torch.float64)
tensor([-4.1086, -3.9469, -3.6880, -5.0575, -4.7527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2793, device='cuda:0', dtype=torch.float64)
tensor([-4.1529, -3.9611, -3.7014, -5.1010, -4.7716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2523, device='cuda:0', dtype=torch.float64)
tensor([-4.1918, -3.9735, -3.7128, -5.1385, -4.7879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2288, device='cuda:0', dtype=torch.float64)
tensor([-4.2330, -3.9865, -3.7247, -5.1773, -4.8049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2665, device='cuda:0', dtype=torch.float64)
tensor([-4.2730, -3.9981, -3.7351, -5.2108, -4.8207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2257, device='cuda:0', dtype=torch.float64)
tensor([-4.3089, -4.0094, -3.7442, -5.2429, -4.8344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2083, device='cuda:0', dtype=torch.float64)
tensor([-4.3428, -4.0196, -3.7523, -5.2732, -4.8462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1776, device='cuda:0', dtype=torch.float64)
tensor([-4.3728, -4.0305, -3.7601, -5.3021, -4.8580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1813, device='cuda:0', dtype=torch.float64)
tensor([-4.3994, -4.0405, -3.7677, -5.3294, -4.8691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1871, device='cuda:0', dtype=torch.float64)
tensor([-4.4193, -4.0496, -3.7742, -5.3527, -4.8786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1514, device='cuda:0', dtype=torch.float64)
tensor([-4.4361, -4.0579, -3.7801, -5.3724, -4.8872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1810, device='cuda:0', dtype=torch.float64)
tensor([-4.4497, -4.0655, -3.7848, -5.3878, -4.8937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2168, device='cuda:0', dtype=torch.float64)
tensor([-4.4589, -4.0719, -3.7886, -5.3994, -4.8989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1704, device='cuda:0', dtype=torch.float64)
tensor([-4.4670, -4.0771, -3.7920, -5.4098, -4.9036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1221, device='cuda:0', dtype=torch.float64)
tensor([-4.4688, -4.0811, -3.7943, -5.4154, -4.9074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1682, device='cuda:0', dtype=torch.float64)
tensor([-4.4674, -4.0832, -3.7955, -5.4159, -4.9092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1463, device='cuda:0', dtype=torch.float64)
tensor([-4.4636, -4.0839, -3.7958, -5.4122, -4.9098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1424, device='cuda:0', dtype=torch.float64)
tensor([-4.4555, -4.0834, -3.7959, -5.4047, -4.9089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1406, device='cuda:0', dtype=torch.float64)
tensor([-4.4437, -4.0810, -3.7949, -5.3943, -4.9063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1684, device='cuda:0', dtype=torch.float64)
tensor([-4.4309, -4.0772, -3.7936, -5.3804, -4.9032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1495, device='cuda:0', dtype=torch.float64)
tensor([-4.4141, -4.0730, -3.7913, -5.3632, -4.8989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1843, device='cuda:0', dtype=torch.float64)
tensor([-4.3955, -4.0676, -3.7880, -5.3443, -4.8931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1453, device='cuda:0', dtype=torch.float64)
tensor([-4.3728, -4.0610, -3.7838, -5.3227, -4.8869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1570, device='cuda:0', dtype=torch.float64)
tensor([-4.3486, -4.0535, -3.7792, -5.3001, -4.8799], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_101343.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(134.5593, device='cuda:0', dtype=torch.float64)
tensor([-2.2667, -4.5183, -3.0533, -7.1503, -3.7092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(96.0977, device='cuda:0', dtype=torch.float64)
tensor([-2.4246, -4.9727, -3.0239, -4.2848, -3.8856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(90.2761, device='cuda:0', dtype=torch.float64)
tensor([-2.4207, -5.1432, -3.0338, -3.8881, -4.4752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(58.1039, device='cuda:0', dtype=torch.float64)
tensor([-2.4914, -4.3555, -2.9963, -3.4663, -4.8350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(55.2501, device='cuda:0', dtype=torch.float64)
tensor([-2.4414, -4.9154, -2.9466, -4.9824, -4.9835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(66.5494, device='cuda:0', dtype=torch.float64)
tensor([-2.1765, -4.6998, -2.8598, -5.8732, -5.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(68.2129, device='cuda:0', dtype=torch.float64)
tensor([-1.9233, -3.6111, -2.7855, -3.9301, -4.7680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(46.5004, device='cuda:0', dtype=torch.float64)
tensor([-1.7725, -3.2315, -2.8134, -3.9383, -4.1369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.5520, device='cuda:0', dtype=torch.float64)
tensor([-1.7345, -3.5426, -2.9135, -4.1852, -3.7038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.7149, device='cuda:0', dtype=torch.float64)
tensor([-1.8046, -3.8313, -3.0244, -4.3923, -3.5187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.8588, device='cuda:0', dtype=torch.float64)
tensor([-2.0667, -3.6068, -3.1236, -4.4910, -3.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.3679, device='cuda:0', dtype=torch.float64)
tensor([-2.0274, -3.2066, -3.2109, -4.3342, -3.4170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.2559, device='cuda:0', dtype=torch.float64)
tensor([-1.7266, -2.9400, -3.2777, -3.9757, -3.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.8065, device='cuda:0', dtype=torch.float64)
tensor([-1.6119, -2.7700, -3.3903, -3.7159, -3.2285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.0708, device='cuda:0', dtype=torch.float64)
tensor([-1.5995, -2.7116, -3.4162, -3.5531, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4275, device='cuda:0', dtype=torch.float64)
tensor([-1.6436, -2.7361, -3.3134, -3.4266, -3.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9730, device='cuda:0', dtype=torch.float64)
tensor([-1.7347, -2.8263, -3.2907, -3.3175, -3.3529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.3364, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.9869, -3.3745, -3.2164, -3.4825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.2473, device='cuda:0', dtype=torch.float64)
tensor([-1.9790, -3.1782, -3.4626, -3.1234, -3.5348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.4888, device='cuda:0', dtype=torch.float64)
tensor([-2.0781, -3.2551, -3.4565, -3.0534, -3.5180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.4704, device='cuda:0', dtype=torch.float64)
tensor([-2.1540, -3.2145, -3.3698, -3.0136, -3.4977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8183, device='cuda:0', dtype=torch.float64)
tensor([-2.2062, -3.1623, -3.2595, -2.9959, -3.4805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.2864, device='cuda:0', dtype=torch.float64)
tensor([-2.2312, -3.1109, -3.1649, -2.9944, -3.4377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.4854, device='cuda:0', dtype=torch.float64)
tensor([-2.2223, -3.0482, -3.0952, -3.0095, -3.3638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.2914, device='cuda:0', dtype=torch.float64)
tensor([-2.1702, -2.9885, -3.0491, -3.0409, -3.2790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9124, device='cuda:0', dtype=torch.float64)
tensor([-2.0794, -2.9651, -3.0258, -3.0848, -3.2004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.4975, device='cuda:0', dtype=torch.float64)
tensor([-1.9705, -2.9936, -3.0206, -3.1316, -3.1329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.7262, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -3.0245, -3.0270, -3.1762, -3.0804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3525, device='cuda:0', dtype=torch.float64)
tensor([-1.7851, -2.9834, -3.0375, -3.2154, -3.0463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4046, device='cuda:0', dtype=torch.float64)
tensor([-1.7244, -2.8712, -3.0449, -3.2445, -3.0330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9242, device='cuda:0', dtype=torch.float64)
tensor([-1.6849, -2.7547, -3.0461, -3.2609, -3.0391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3525, device='cuda:0', dtype=torch.float64)
tensor([-1.6658, -2.6693, -3.0376, -3.2622, -3.0617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2635, device='cuda:0', dtype=torch.float64)
tensor([-1.6656, -2.6151, -3.0192, -3.2489, -3.0981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4633, device='cuda:0', dtype=torch.float64)
tensor([-1.6820, -2.5859, -2.9923, -3.2246, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6388, device='cuda:0', dtype=torch.float64)
tensor([-1.7121, -2.5779, -2.9603, -3.1948, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5885, device='cuda:0', dtype=torch.float64)
tensor([-1.7514, -2.5862, -2.9270, -3.1653, -3.2562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0582, device='cuda:0', dtype=torch.float64)
tensor([-1.7959, -2.6066, -2.8945, -3.1402, -3.3085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7474, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.6342, -2.8654, -3.1216, -3.3515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0747, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.6634, -2.8395, -3.1096, -3.3793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6241, device='cuda:0', dtype=torch.float64)
tensor([-1.9094, -2.6892, -2.8163, -3.1028, -3.3891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6219, device='cuda:0', dtype=torch.float64)
tensor([-1.9288, -2.7077, -2.7960, -3.0992, -3.3833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6314, device='cuda:0', dtype=torch.float64)
tensor([-1.9365, -2.7172, -2.7796, -3.0985, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4421, device='cuda:0', dtype=torch.float64)
tensor([-1.9333, -2.7182, -2.7679, -3.1008, -3.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0238, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.7134, -2.7610, -3.1060, -3.3128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4497, device='cuda:0', dtype=torch.float64)
tensor([-1.9057, -2.7065, -2.7587, -3.1139, -3.2868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0243, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.6995, -2.7598, -3.1242, -3.2647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1005, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.6933, -2.7630, -3.1354, -3.2486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1239, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.6880, -2.7678, -3.1474, -3.2389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0621, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6839, -2.7738, -3.1587, -3.2350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0726, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.6815, -2.7801, -3.1686, -3.2361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8385, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6804, -2.7846, -3.1771, -3.2407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7483, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6809, -2.7867, -3.1831, -3.2468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6167, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.6823, -2.7865, -3.1866, -3.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6272, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.6848, -2.7841, -3.1877, -3.2597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6071, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.6870, -2.7802, -3.1868, -3.2631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6478, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.6892, -2.7740, -3.1836, -3.2633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5760, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.6910, -2.7679, -3.1799, -3.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6127, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.6909, -2.7634, -3.1767, -3.2583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3771, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.6900, -2.7612, -3.1742, -3.2540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2965, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6879, -2.7615, -3.1737, -3.2488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2919, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.6845, -2.7643, -3.1751, -3.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4830, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.6798, -2.7690, -3.1784, -3.2396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3335, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.6740, -2.7759, -3.1832, -3.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4211, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6678, -2.7847, -3.1896, -3.2383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2818, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.6610, -2.7947, -3.1961, -3.2414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1102, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6544, -2.8056, -3.2019, -3.2458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1205, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6488, -2.8160, -3.2073, -3.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1775, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6451, -2.8238, -3.2124, -3.2558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2857, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.6424, -2.8300, -3.2169, -3.2602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2772, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6419, -2.8337, -3.2198, -3.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0174, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.6433, -2.8362, -3.2194, -3.2639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1793, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6461, -2.8364, -3.2188, -3.2644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2520, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.6503, -2.8375, -3.2169, -3.2639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2107, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.6559, -2.8378, -3.2138, -3.2627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-1.8693, -2.6622, -2.8365, -3.2102, -3.2607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9325, device='cuda:0', dtype=torch.float64)
tensor([-1.8759, -2.6691, -2.8342, -3.2056, -3.2586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2376, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.6755, -2.8309, -3.2001, -3.2579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1102, device='cuda:0', dtype=torch.float64)
tensor([-1.8911, -2.6804, -2.8284, -3.1949, -3.2593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0432, device='cuda:0', dtype=torch.float64)
tensor([-1.8970, -2.6848, -2.8263, -3.1920, -3.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2571, device='cuda:0', dtype=torch.float64)
tensor([-1.9024, -2.6881, -2.8248, -3.1897, -3.2636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9065, device='cuda:0', dtype=torch.float64)
tensor([-1.9062, -2.6913, -2.8243, -3.1875, -3.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0671, device='cuda:0', dtype=torch.float64)
tensor([-1.9091, -2.6933, -2.8242, -3.1865, -3.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2423, device='cuda:0', dtype=torch.float64)
tensor([-1.9104, -2.6942, -2.8246, -3.1863, -3.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8860, device='cuda:0', dtype=torch.float64)
tensor([-1.9098, -2.6939, -2.8254, -3.1850, -3.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8791, device='cuda:0', dtype=torch.float64)
tensor([-1.9074, -2.6924, -2.8254, -3.1837, -3.2588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1851, device='cuda:0', dtype=torch.float64)
tensor([-1.9054, -2.6901, -2.8262, -3.1857, -3.2575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9405, device='cuda:0', dtype=torch.float64)
tensor([-1.9026, -2.6865, -2.8275, -3.1868, -3.2550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0676, device='cuda:0', dtype=torch.float64)
tensor([-1.8997, -2.6820, -2.8301, -3.1886, -3.2528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1472, device='cuda:0', dtype=torch.float64)
tensor([-1.8971, -2.6786, -2.8332, -3.1901, -3.2500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0869, device='cuda:0', dtype=torch.float64)
tensor([-1.8971, -2.6771, -2.8352, -3.1914, -3.2496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9713, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.6758, -2.8387, -3.1929, -3.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9627, device='cuda:0', dtype=torch.float64)
tensor([-1.8930, -2.6752, -2.8410, -3.1937, -3.2447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0913, device='cuda:0', dtype=torch.float64)
tensor([-1.8906, -2.6756, -2.8432, -3.1944, -3.2412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0405, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.6768, -2.8449, -3.1948, -3.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1071, device='cuda:0', dtype=torch.float64)
tensor([-1.8853, -2.6778, -2.8473, -3.1943, -3.2313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8225, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.6791, -2.8492, -3.1947, -3.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1196, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.6810, -2.8500, -3.1964, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9748, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.6832, -2.8508, -3.1963, -3.2266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1772, device='cuda:0', dtype=torch.float64)
tensor([-1.8868, -2.6854, -2.8531, -3.1973, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9605, device='cuda:0', dtype=torch.float64)
tensor([-1.8890, -2.6872, -2.8569, -3.1981, -3.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0667, device='cuda:0', dtype=torch.float64)
tensor([-1.8928, -2.6900, -2.8616, -3.1980, -3.2419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0738, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.6933, -2.8652, -3.1974, -3.2497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0314, device='cuda:0', dtype=torch.float64)
tensor([-1.9036, -2.6971, -2.8693, -3.1967, -3.2565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0752, device='cuda:0', dtype=torch.float64)
tensor([-1.9087, -2.7000, -2.8743, -3.1965, -3.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9912, device='cuda:0', dtype=torch.float64)
tensor([-1.9125, -2.7024, -2.8791, -3.1974, -3.2673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1232, device='cuda:0', dtype=torch.float64)
tensor([-1.9185, -2.7055, -2.8832, -3.1963, -3.2694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1984, device='cuda:0', dtype=torch.float64)
tensor([-1.9221, -2.7070, -2.8846, -3.1965, -3.2670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0926, device='cuda:0', dtype=torch.float64)
tensor([-1.9250, -2.7086, -2.8847, -3.1965, -3.2639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3702, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.7080, -2.8845, -3.1965, -3.2570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0222, device='cuda:0', dtype=torch.float64)
tensor([-1.9274, -2.7071, -2.8835, -3.1963, -3.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0452, device='cuda:0', dtype=torch.float64)
tensor([-1.9301, -2.7064, -2.8810, -3.1974, -3.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1417, device='cuda:0', dtype=torch.float64)
tensor([-1.9342, -2.7075, -2.8793, -3.1993, -3.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3005, device='cuda:0', dtype=torch.float64)
tensor([-1.9404, -2.7086, -2.8782, -3.2006, -3.2375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1100, device='cuda:0', dtype=torch.float64)
tensor([-1.9461, -2.7097, -2.8754, -3.2040, -3.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2167, device='cuda:0', dtype=torch.float64)
tensor([-1.9525, -2.7096, -2.8734, -3.2055, -3.2395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7004, device='cuda:0', dtype=torch.float64)
tensor([-1.9613, -2.7105, -2.8720, -3.2049, -3.2443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0479, device='cuda:0', dtype=torch.float64)
tensor([-1.9694, -2.7121, -2.8727, -3.2039, -3.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0840, device='cuda:0', dtype=torch.float64)
tensor([-1.9777, -2.7150, -2.8724, -3.2017, -3.2585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0021, device='cuda:0', dtype=torch.float64)
tensor([-1.9842, -2.7174, -2.8729, -3.2018, -3.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1992, device='cuda:0', dtype=torch.float64)
tensor([-1.9886, -2.7191, -2.8744, -3.2027, -3.2667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0664, device='cuda:0', dtype=torch.float64)
tensor([-1.9921, -2.7218, -2.8752, -3.2024, -3.2682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0448, device='cuda:0', dtype=torch.float64)
tensor([-1.9942, -2.7254, -2.8746, -3.2028, -3.2694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1098, device='cuda:0', dtype=torch.float64)
tensor([-1.9956, -2.7270, -2.8755, -3.2043, -3.2728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5016, device='cuda:0', dtype=torch.float64)
tensor([-1.9958, -2.7297, -2.8737, -3.2042, -3.2733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0130, device='cuda:0', dtype=torch.float64)
tensor([-1.9948, -2.7320, -2.8722, -3.2071, -3.2751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1966, device='cuda:0', dtype=torch.float64)
tensor([-1.9926, -2.7346, -2.8697, -3.2107, -3.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2968, device='cuda:0', dtype=torch.float64)
tensor([-1.9880, -2.7345, -2.8679, -3.2148, -3.2797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0834, device='cuda:0', dtype=torch.float64)
tensor([-1.9833, -2.7359, -2.8663, -3.2185, -3.2807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0750, device='cuda:0', dtype=torch.float64)
tensor([-1.9798, -2.7376, -2.8651, -3.2218, -3.2819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9636, device='cuda:0', dtype=torch.float64)
tensor([-1.9781, -2.7385, -2.8637, -3.2250, -3.2831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1527, device='cuda:0', dtype=torch.float64)
tensor([-1.9799, -2.7398, -2.8650, -3.2274, -3.2861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2145, device='cuda:0', dtype=torch.float64)
tensor([-1.9840, -2.7399, -2.8673, -3.2322, -3.2893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2693, device='cuda:0', dtype=torch.float64)
tensor([-1.9871, -2.7401, -2.8713, -3.2380, -3.2927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9679, device='cuda:0', dtype=torch.float64)
tensor([-1.9890, -2.7394, -2.8755, -3.2454, -3.2965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0773, device='cuda:0', dtype=torch.float64)
tensor([-1.9908, -2.7400, -2.8794, -3.2516, -3.3010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2073, device='cuda:0', dtype=torch.float64)
tensor([-1.9949, -2.7412, -2.8833, -3.2546, -3.3050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0726, device='cuda:0', dtype=torch.float64)
tensor([-1.9994, -2.7428, -2.8874, -3.2591, -3.3092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1391, device='cuda:0', dtype=torch.float64)
tensor([-2.0048, -2.7467, -2.8914, -3.2635, -3.3137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1105, device='cuda:0', dtype=torch.float64)
tensor([-2.0118, -2.7517, -2.8946, -3.2656, -3.3168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0145, device='cuda:0', dtype=torch.float64)
tensor([-2.0215, -2.7590, -2.8959, -3.2649, -3.3201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4040, device='cuda:0', dtype=torch.float64)
tensor([-2.0327, -2.7678, -2.8972, -3.2632, -3.3259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0433, device='cuda:0', dtype=torch.float64)
tensor([-2.0452, -2.7759, -2.8982, -3.2607, -3.3305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0426, device='cuda:0', dtype=torch.float64)
tensor([-2.0567, -2.7850, -2.8988, -3.2578, -3.3348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2182, device='cuda:0', dtype=torch.float64)
tensor([-2.0698, -2.7948, -2.8995, -3.2517, -3.3397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9906, device='cuda:0', dtype=torch.float64)
tensor([-2.0816, -2.8049, -2.8992, -3.2479, -3.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9425, device='cuda:0', dtype=torch.float64)
tensor([-2.0945, -2.8165, -2.9005, -3.2435, -3.3507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1054, device='cuda:0', dtype=torch.float64)
tensor([-2.1073, -2.8292, -2.9028, -3.2384, -3.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9529, device='cuda:0', dtype=torch.float64)
tensor([-2.1228, -2.8427, -2.9071, -3.2333, -3.3684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0562, device='cuda:0', dtype=torch.float64)
tensor([-2.1382, -2.8571, -2.9108, -3.2291, -3.3801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9272, device='cuda:0', dtype=torch.float64)
tensor([-2.1548, -2.8717, -2.9127, -3.2259, -3.3929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9361, device='cuda:0', dtype=torch.float64)
tensor([-2.1715, -2.8852, -2.9155, -3.2245, -3.4076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4494, device='cuda:0', dtype=torch.float64)
tensor([-2.1908, -2.8989, -2.9187, -3.2223, -3.4235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3488, device='cuda:0', dtype=torch.float64)
tensor([-2.2139, -2.9144, -2.9234, -3.2235, -3.4437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1021, device='cuda:0', dtype=torch.float64)
tensor([-2.2379, -2.9306, -2.9300, -3.2246, -3.4651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1109, device='cuda:0', dtype=torch.float64)
tensor([-2.2659, -2.9479, -2.9354, -3.2270, -3.4893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8696, device='cuda:0', dtype=torch.float64)
tensor([-2.2957, -2.9671, -2.9428, -3.2323, -3.5167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0962, device='cuda:0', dtype=torch.float64)
tensor([-2.3284, -2.9896, -2.9495, -3.2394, -3.5460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1400, device='cuda:0', dtype=torch.float64)
tensor([-2.3632, -3.0141, -2.9582, -3.2486, -3.5783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1668, device='cuda:0', dtype=torch.float64)
tensor([-2.3978, -3.0390, -2.9660, -3.2575, -3.6080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0682, device='cuda:0', dtype=torch.float64)
tensor([-2.4340, -3.0649, -2.9774, -3.2688, -3.6420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0107, device='cuda:0', dtype=torch.float64)
tensor([-2.4728, -3.0935, -2.9912, -3.2855, -3.6810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0455, device='cuda:0', dtype=torch.float64)
tensor([-2.5127, -3.1213, -3.0047, -3.3052, -3.7190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1854, device='cuda:0', dtype=torch.float64)
tensor([-2.5543, -3.1504, -3.0207, -3.3295, -3.7609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0721, device='cuda:0', dtype=torch.float64)
tensor([-2.5982, -3.1799, -3.0377, -3.3542, -3.8063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1632, device='cuda:0', dtype=torch.float64)
tensor([-2.6430, -3.2127, -3.0587, -3.3836, -3.8627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9550, device='cuda:0', dtype=torch.float64)
tensor([-2.6907, -3.2505, -3.0815, -3.4178, -3.9259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2805, device='cuda:0', dtype=torch.float64)
tensor([-2.7385, -3.2874, -3.1081, -3.4597, -4.0064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1453, device='cuda:0', dtype=torch.float64)
tensor([-2.7845, -3.3200, -3.1341, -3.5104, -4.1034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1894, device='cuda:0', dtype=torch.float64)
tensor([-2.8292, -3.3495, -3.1634, -3.5609, -4.2156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0192, device='cuda:0', dtype=torch.float64)
tensor([-2.8733, -3.3790, -3.1900, -3.6105, -4.3355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1849, device='cuda:0', dtype=torch.float64)
tensor([-2.9177, -3.4080, -3.2199, -3.6672, -4.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2915, device='cuda:0', dtype=torch.float64)
tensor([-2.9600, -3.4310, -3.2498, -3.7241, -4.6272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9450, device='cuda:0', dtype=torch.float64)
tensor([-3.0032, -3.4565, -3.2786, -3.7804, -4.7724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8984, device='cuda:0', dtype=torch.float64)
tensor([-3.0465, -3.4855, -3.3085, -3.8470, -4.9461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1358, device='cuda:0', dtype=torch.float64)
tensor([-3.0932, -3.5214, -3.3400, -3.9195, -5.1045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0058, device='cuda:0', dtype=torch.float64)
tensor([-3.1392, -3.5583, -3.3681, -3.9819, -5.2226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9392, device='cuda:0', dtype=torch.float64)
tensor([-3.1853, -3.5965, -3.3964, -4.0563, -5.3595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8806, device='cuda:0', dtype=torch.float64)
tensor([-3.2324, -3.6356, -3.4267, -4.1499, -5.5621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8527, device='cuda:0', dtype=torch.float64)
tensor([-3.2790, -3.6790, -3.4588, -4.2696, -5.8416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0318, device='cuda:0', dtype=torch.float64)
tensor([-3.3249, -3.7244, -3.4928, -4.3922, -6.1019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7946, device='cuda:0', dtype=torch.float64)
tensor([-3.3721, -3.7763, -3.5259, -4.5377, -6.3947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7181, device='cuda:0', dtype=torch.float64)
tensor([-3.4193, -3.8313, -3.5608, -4.7200, -6.7455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7879, device='cuda:0', dtype=torch.float64)
tensor([-3.4649, -3.8965, -3.5928, -4.9237, -7.1198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8769, device='cuda:0', dtype=torch.float64)
tensor([-3.5095, -4.0003, -3.6241, -5.2022, -7.6226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5979, device='cuda:0', dtype=torch.float64)
tensor([-3.5520, -4.1417, -3.6562, -5.5104, -8.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7238, device='cuda:0', dtype=torch.float64)
tensor([-3.5948, -4.3410, -3.6885, -5.8405, -8.6488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6282, device='cuda:0', dtype=torch.float64)
tensor([-3.6398, -4.6044, -3.7225, -6.1753, -9.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7342, device='cuda:0', dtype=torch.float64)
tensor([-3.6846, -4.8229, -3.7559, -6.4140, -9.4777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9255, device='cuda:0', dtype=torch.float64)
tensor([-3.7284, -5.0383, -3.7874, -6.6243, -9.7509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7966, device='cuda:0', dtype=torch.float64)
tensor([-3.7724, -5.2494, -3.8189, -6.8136, -9.9937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8022, device='cuda:0', dtype=torch.float64)
tensor([ -3.8186,  -5.4217,  -3.8513,  -6.9700, -10.1904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9193, device='cuda:0', dtype=torch.float64)
tensor([ -3.8636,  -5.6461,  -3.8847,  -7.1593, -10.4459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8740, device='cuda:0', dtype=torch.float64)
tensor([ -3.9037,  -5.8173,  -3.9157,  -7.3054, -10.6223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9169, device='cuda:0', dtype=torch.float64)
tensor([ -3.9430,  -6.0433,  -3.9477,  -7.4963, -10.8628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7635, device='cuda:0', dtype=torch.float64)
tensor([ -3.9816,  -6.2396,  -3.9797,  -7.6581, -11.0583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7336, device='cuda:0', dtype=torch.float64)
tensor([ -4.0236,  -6.3587,  -4.0128,  -7.7680, -11.1716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8450, device='cuda:0', dtype=torch.float64)
tensor([ -4.0704,  -6.3657,  -4.0505,  -7.7980, -11.1745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8539, device='cuda:0', dtype=torch.float64)
tensor([ -4.1110,  -6.3372,  -4.0823,  -7.7946, -11.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8175, device='cuda:0', dtype=torch.float64)
tensor([ -4.1507,  -6.3803,  -4.1147,  -7.8358, -11.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5979, device='cuda:0', dtype=torch.float64)
tensor([ -4.1899,  -6.4435,  -4.1470,  -7.9023, -11.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6649, device='cuda:0', dtype=torch.float64)
tensor([ -4.2307,  -6.5089,  -4.1826,  -7.9723, -11.3187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6443, device='cuda:0', dtype=torch.float64)
tensor([ -4.2681,  -6.6124,  -4.2171,  -8.0651, -11.4306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6081, device='cuda:0', dtype=torch.float64)
tensor([ -4.3034,  -6.6750,  -4.2502,  -8.1283, -11.4981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6886, device='cuda:0', dtype=torch.float64)
tensor([ -4.3343,  -6.7022,  -4.2789,  -8.1619, -11.5268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7451, device='cuda:0', dtype=torch.float64)
tensor([ -4.3610,  -6.6827,  -4.3056,  -8.1559, -11.4891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6169, device='cuda:0', dtype=torch.float64)
tensor([ -4.3897,  -6.7072,  -4.3355,  -8.1832, -11.5011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5930, device='cuda:0', dtype=torch.float64)
tensor([ -4.4190,  -6.7572,  -4.3640,  -8.2359, -11.5517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7626, device='cuda:0', dtype=torch.float64)
tensor([ -4.4479,  -6.8132,  -4.3943,  -8.2955, -11.6127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5996, device='cuda:0', dtype=torch.float64)
tensor([ -4.4761,  -6.8709,  -4.4239,  -8.3621, -11.6773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6878, device='cuda:0', dtype=torch.float64)
tensor([ -4.5020,  -6.8687,  -4.4513,  -8.3886, -11.6813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6586, device='cuda:0', dtype=torch.float64)
tensor([ -4.5262,  -6.8162,  -4.4744,  -8.3901, -11.6454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7840, device='cuda:0', dtype=torch.float64)
tensor([ -4.5498,  -6.7679,  -4.4970,  -8.3901, -11.6115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6949, device='cuda:0', dtype=torch.float64)
tensor([ -4.5710,  -6.7877,  -4.5169,  -8.4330, -11.6385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5111, device='cuda:0', dtype=torch.float64)
tensor([ -4.5919,  -6.7542,  -4.5392,  -8.4411, -11.6088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5390, device='cuda:0', dtype=torch.float64)
tensor([ -4.6078,  -6.7503,  -4.5546,  -8.4639, -11.6085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5314, device='cuda:0', dtype=torch.float64)
tensor([ -4.6212,  -6.7802,  -4.5666,  -8.5011, -11.6369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5102, device='cuda:0', dtype=torch.float64)
tensor([ -4.6349,  -6.8287,  -4.5791,  -8.5565, -11.6965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5440, device='cuda:0', dtype=torch.float64)
tensor([ -4.6472,  -6.8619,  -4.5884,  -8.5911, -11.7323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5640, device='cuda:0', dtype=torch.float64)
tensor([ -4.6570,  -6.8317,  -4.5970,  -8.5785, -11.7007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6900, device='cuda:0', dtype=torch.float64)
tensor([ -4.6667,  -6.8068,  -4.6050,  -8.5798, -11.6773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5294, device='cuda:0', dtype=torch.float64)
tensor([ -4.6747,  -6.7340,  -4.6096,  -8.5507, -11.5989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5809, device='cuda:0', dtype=torch.float64)
tensor([ -4.6818,  -6.6853,  -4.6147,  -8.5391, -11.5479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5878, device='cuda:0', dtype=torch.float64)
tensor([ -4.6890,  -6.6323,  -4.6192,  -8.5191, -11.4834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4779, device='cuda:0', dtype=torch.float64)
tensor([ -4.6963,  -6.5757,  -4.6234,  -8.4952, -11.4171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5130, device='cuda:0', dtype=torch.float64)
tensor([ -4.7040,  -6.5119,  -4.6283,  -8.4599, -11.3377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3948, device='cuda:0', dtype=torch.float64)
tensor([ -4.7116,  -6.4713,  -4.6347,  -8.4391, -11.2824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4675, device='cuda:0', dtype=torch.float64)
tensor([ -4.7220,  -6.4250,  -4.6426,  -8.4141, -11.2209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4406, device='cuda:0', dtype=torch.float64)
tensor([ -4.7313,  -6.4145,  -4.6513,  -8.4152, -11.1935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4695, device='cuda:0', dtype=torch.float64)
tensor([ -4.7385,  -6.4338,  -4.6563,  -8.4434, -11.2037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4262, device='cuda:0', dtype=torch.float64)
tensor([ -4.7458,  -6.4604,  -4.6624,  -8.4719, -11.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4069, device='cuda:0', dtype=torch.float64)
tensor([ -4.7507,  -6.4940,  -4.6644,  -8.5099, -11.2426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4977, device='cuda:0', dtype=torch.float64)
tensor([ -4.7575,  -6.5225,  -4.6663,  -8.5424, -11.2678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4732, device='cuda:0', dtype=torch.float64)
tensor([ -4.7628,  -6.5244,  -4.6688,  -8.5544, -11.2614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4857, device='cuda:0', dtype=torch.float64)
tensor([ -4.7690,  -6.4944,  -4.6709,  -8.5460, -11.2162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3295, device='cuda:0', dtype=torch.float64)
tensor([ -4.7738,  -6.4536,  -4.6723,  -8.5265, -11.1602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4473, device='cuda:0', dtype=torch.float64)
tensor([ -4.7784,  -6.4044,  -4.6733,  -8.5035, -11.1007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4324, device='cuda:0', dtype=torch.float64)
tensor([ -4.7837,  -6.3435,  -4.6745,  -8.4760, -11.0340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4956, device='cuda:0', dtype=torch.float64)
tensor([ -4.7895,  -6.2802,  -4.6773,  -8.4425, -10.9682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4555, device='cuda:0', dtype=torch.float64)
tensor([ -4.7955,  -6.2191,  -4.6795,  -8.4108, -10.9110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4296, device='cuda:0', dtype=torch.float64)
tensor([ -4.8026,  -6.1832,  -4.6823,  -8.3915, -10.8792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3554, device='cuda:0', dtype=torch.float64)
tensor([ -4.8094,  -6.1578,  -4.6841,  -8.3729, -10.8538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4220, device='cuda:0', dtype=torch.float64)
tensor([ -4.8141,  -6.1278,  -4.6871,  -8.3488, -10.8285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3970, device='cuda:0', dtype=torch.float64)
tensor([ -4.8177,  -6.1012,  -4.6919,  -8.3191, -10.8002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4021, device='cuda:0', dtype=torch.float64)
tensor([ -4.8223,  -6.0554,  -4.6985,  -8.2765, -10.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5395, device='cuda:0', dtype=torch.float64)
tensor([ -4.8254,  -6.0069,  -4.7030,  -8.2387, -10.6658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3729, device='cuda:0', dtype=torch.float64)
tensor([ -4.8300,  -5.9434,  -4.7091,  -8.1870, -10.5745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5224, device='cuda:0', dtype=torch.float64)
tensor([ -4.8353,  -5.9124,  -4.7170,  -8.1623, -10.5333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3659, device='cuda:0', dtype=torch.float64)
tensor([ -4.8412,  -5.8943,  -4.7247,  -8.1601, -10.5250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2956, device='cuda:0', dtype=torch.float64)
tensor([ -4.8477,  -5.8658,  -4.7335,  -8.1437, -10.4912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4298, device='cuda:0', dtype=torch.float64)
tensor([ -4.8544,  -5.8478,  -4.7419,  -8.1476, -10.4997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4158, device='cuda:0', dtype=torch.float64)
tensor([ -4.8604,  -5.8342,  -4.7507,  -8.1517, -10.5047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4058, device='cuda:0', dtype=torch.float64)
tensor([ -4.8651,  -5.8344,  -4.7598,  -8.1553, -10.5218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3433, device='cuda:0', dtype=torch.float64)
tensor([ -4.8697,  -5.8562,  -4.7712,  -8.1763, -10.5709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3598, device='cuda:0', dtype=torch.float64)
tensor([ -4.8751,  -5.8919,  -4.7832,  -8.2066, -10.6396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3684, device='cuda:0', dtype=torch.float64)
tensor([ -4.8786,  -5.9319,  -4.7935,  -8.2500, -10.7223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4585, device='cuda:0', dtype=torch.float64)
tensor([ -4.8797,  -5.9835,  -4.8019,  -8.3019, -10.8263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3451, device='cuda:0', dtype=torch.float64)
tensor([ -4.8813,  -6.0342,  -4.8105,  -8.3558, -10.9326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4474, device='cuda:0', dtype=torch.float64)
tensor([ -4.8804,  -6.0711,  -4.8174,  -8.3918, -11.0079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3752, device='cuda:0', dtype=torch.float64)
tensor([ -4.8791,  -6.1150,  -4.8232,  -8.4318, -11.0858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3978, device='cuda:0', dtype=torch.float64)
tensor([ -4.8740,  -6.1491,  -4.8248,  -8.4616, -11.1478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3172, device='cuda:0', dtype=torch.float64)
tensor([ -4.8668,  -6.1578,  -4.8234,  -8.4659, -11.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3421, device='cuda:0', dtype=torch.float64)
tensor([ -4.8603,  -6.1751,  -4.8235,  -8.4741, -11.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3207, device='cuda:0', dtype=torch.float64)
tensor([ -4.8538,  -6.1790,  -4.8214,  -8.4711, -11.2107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3644, device='cuda:0', dtype=torch.float64)
tensor([ -4.8487,  -6.1688,  -4.8204,  -8.4541, -11.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2972, device='cuda:0', dtype=torch.float64)
tensor([ -4.8446,  -6.1586,  -4.8205,  -8.4360, -11.1960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2695, device='cuda:0', dtype=torch.float64)
tensor([ -4.8400,  -6.1152,  -4.8217,  -8.3877, -11.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2813, device='cuda:0', dtype=torch.float64)
tensor([ -4.8358,  -6.0645,  -4.8229,  -8.3315, -11.0782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2896, device='cuda:0', dtype=torch.float64)
tensor([ -4.8318,  -6.0111,  -4.8234,  -8.2738, -11.0134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2996, device='cuda:0', dtype=torch.float64)
tensor([ -4.8265,  -5.9554,  -4.8234,  -8.2155, -10.9388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2784, device='cuda:0', dtype=torch.float64)
tensor([ -4.8193,  -5.9037,  -4.8202,  -8.1630, -10.8703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3002, device='cuda:0', dtype=torch.float64)
tensor([ -4.8140,  -5.8421,  -4.8191,  -8.0987, -10.7802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2932, device='cuda:0', dtype=torch.float64)
tensor([ -4.8086,  -5.8034,  -4.8179,  -8.0527, -10.7212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2792, device='cuda:0', dtype=torch.float64)
tensor([ -4.8032,  -5.7766,  -4.8175,  -8.0120, -10.6761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2009, device='cuda:0', dtype=torch.float64)
tensor([ -4.7988,  -5.7729,  -4.8178,  -7.9986, -10.6665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2312, device='cuda:0', dtype=torch.float64)
tensor([ -4.7948,  -5.7497,  -4.8181,  -7.9656, -10.6275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2568, device='cuda:0', dtype=torch.float64)
tensor([ -4.7902,  -5.7265,  -4.8170,  -7.9328, -10.5851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2715, device='cuda:0', dtype=torch.float64)
tensor([ -4.7871,  -5.6941,  -4.8166,  -7.8929, -10.5316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2940, device='cuda:0', dtype=torch.float64)
tensor([ -4.7841,  -5.6549,  -4.8156,  -7.8413, -10.4623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2717, device='cuda:0', dtype=torch.float64)
tensor([ -4.7803,  -5.6127,  -4.8138,  -7.7847, -10.3848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2638, device='cuda:0', dtype=torch.float64)
tensor([ -4.7772,  -5.5854,  -4.8131,  -7.7428, -10.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2157, device='cuda:0', dtype=torch.float64)
tensor([ -4.7747,  -5.5601,  -4.8129,  -7.7061, -10.2864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2489, device='cuda:0', dtype=torch.float64)
tensor([ -4.7733,  -5.5305,  -4.8136,  -7.6598, -10.2275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2426, device='cuda:0', dtype=torch.float64)
tensor([ -4.7727,  -5.5018,  -4.8140,  -7.6181, -10.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2197, device='cuda:0', dtype=torch.float64)
tensor([ -4.7711,  -5.4798,  -4.8132,  -7.5879, -10.1301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2505, device='cuda:0', dtype=torch.float64)
tensor([ -4.7705,  -5.4551,  -4.8132,  -7.5567, -10.0818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2026, device='cuda:0', dtype=torch.float64)
tensor([ -4.7690,  -5.4345,  -4.8121,  -7.5274, -10.0346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1955, device='cuda:0', dtype=torch.float64)
tensor([-4.7662, -5.4130, -4.8104, -7.4950, -9.9839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1824, device='cuda:0', dtype=torch.float64)
tensor([-4.7630, -5.3976, -4.8073, -7.4703, -9.9456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2034, device='cuda:0', dtype=torch.float64)
tensor([-4.7593, -5.3864, -4.8027, -7.4524, -9.9126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2124, device='cuda:0', dtype=torch.float64)
tensor([-4.7555, -5.3687, -4.7986, -7.4227, -9.8614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2076, device='cuda:0', dtype=torch.float64)
tensor([-4.7522, -5.3488, -4.7964, -7.3922, -9.8115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1537, device='cuda:0', dtype=torch.float64)
tensor([-4.7481, -5.3300, -4.7937, -7.3571, -9.7639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1989, device='cuda:0', dtype=torch.float64)
tensor([-4.7433, -5.3158, -4.7902, -7.3313, -9.7291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1576, device='cuda:0', dtype=torch.float64)
tensor([-4.7389, -5.2969, -4.7870, -7.2936, -9.6751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1460, device='cuda:0', dtype=torch.float64)
tensor([-4.7335, -5.2729, -4.7828, -7.2462, -9.6041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2096, device='cuda:0', dtype=torch.float64)
tensor([-4.7281, -5.2425, -4.7781, -7.1867, -9.5124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1866, device='cuda:0', dtype=torch.float64)
tensor([-4.7231, -5.2131, -4.7732, -7.1271, -9.4181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2033, device='cuda:0', dtype=torch.float64)
tensor([-4.7191, -5.1832, -4.7698, -7.0612, -9.3165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1747, device='cuda:0', dtype=torch.float64)
tensor([-4.7142, -5.1504, -4.7665, -6.9858, -9.1969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1540, device='cuda:0', dtype=torch.float64)
tensor([-4.7099, -5.1244, -4.7629, -6.9167, -9.0880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1610, device='cuda:0', dtype=torch.float64)
tensor([-4.7053, -5.1019, -4.7589, -6.8495, -8.9855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2029, device='cuda:0', dtype=torch.float64)
tensor([-4.6998, -5.0781, -4.7533, -6.7822, -8.8779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1333, device='cuda:0', dtype=torch.float64)
tensor([-4.6936, -5.0548, -4.7475, -6.7108, -8.7601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1433, device='cuda:0', dtype=torch.float64)
tensor([-4.6879, -5.0298, -4.7422, -6.6337, -8.6276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1730, device='cuda:0', dtype=torch.float64)
tensor([-4.6810, -5.0075, -4.7360, -6.5545, -8.4902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1701, device='cuda:0', dtype=torch.float64)
tensor([-4.6741, -4.9861, -4.7291, -6.4768, -8.3583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1870, device='cuda:0', dtype=torch.float64)
tensor([-4.6669, -4.9696, -4.7225, -6.4093, -8.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1598, device='cuda:0', dtype=torch.float64)
tensor([-4.6589, -4.9523, -4.7151, -6.3466, -8.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1582, device='cuda:0', dtype=torch.float64)
tensor([-4.6504, -4.9362, -4.7072, -6.2896, -8.0336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1783, device='cuda:0', dtype=torch.float64)
tensor([-4.6412, -4.9191, -4.6987, -6.2326, -7.9244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1831, device='cuda:0', dtype=torch.float64)
tensor([-4.6308, -4.9002, -4.6886, -6.1715, -7.8087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2070, device='cuda:0', dtype=torch.float64)
tensor([-4.6204, -4.8816, -4.6789, -6.1070, -7.6807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1465, device='cuda:0', dtype=torch.float64)
tensor([-4.6105, -4.8637, -4.6693, -6.0380, -7.5397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1691, device='cuda:0', dtype=torch.float64)
tensor([-4.6005, -4.8478, -4.6597, -5.9750, -7.4099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1626, device='cuda:0', dtype=torch.float64)
tensor([-4.5898, -4.8323, -4.6491, -5.9244, -7.3048], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_101343.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(136.7233, device='cuda:0', dtype=torch.float64)
tensor([-2.2593, -4.4728, -3.0393, -7.0472, -3.7014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(97.0586, device='cuda:0', dtype=torch.float64)
tensor([-2.4131, -4.9569, -3.0194, -4.2463, -3.8871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(90.7119, device='cuda:0', dtype=torch.float64)
tensor([-2.4208, -5.1321, -3.0276, -3.8695, -4.4864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(58.6674, device='cuda:0', dtype=torch.float64)
tensor([-2.4930, -4.3597, -2.9919, -3.4867, -4.8432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(56.6459, device='cuda:0', dtype=torch.float64)
tensor([-2.4346, -4.9409, -2.9429, -5.1032, -4.9884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(69.5551, device='cuda:0', dtype=torch.float64)
tensor([-2.1601, -4.6145, -2.8507, -5.6624, -5.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(69.1712, device='cuda:0', dtype=torch.float64)
tensor([-1.9075, -3.5455, -2.7833, -3.8541, -4.6937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(46.0066, device='cuda:0', dtype=torch.float64)
tensor([-1.7626, -3.2284, -2.8186, -3.9411, -4.0787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.0412, device='cuda:0', dtype=torch.float64)
tensor([-1.7316, -3.5829, -2.9239, -4.2125, -3.6708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.9397, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -3.8359, -3.0338, -4.4180, -3.5079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.5333, device='cuda:0', dtype=torch.float64)
tensor([-2.0841, -3.5559, -3.1331, -4.4944, -3.4713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.2409, device='cuda:0', dtype=torch.float64)
tensor([-1.9639, -3.1538, -3.2162, -4.2848, -3.3975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.8010, device='cuda:0', dtype=torch.float64)
tensor([-1.6891, -2.8968, -3.2845, -3.9212, -3.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.3511, device='cuda:0', dtype=torch.float64)
tensor([-1.6008, -2.7470, -3.3992, -3.6800, -3.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.3450, device='cuda:0', dtype=torch.float64)
tensor([-1.6029, -2.7086, -3.3883, -3.5225, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.6301, device='cuda:0', dtype=torch.float64)
tensor([-1.6605, -2.7483, -3.2859, -3.3951, -3.2485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.7604, device='cuda:0', dtype=torch.float64)
tensor([-1.7641, -2.8563, -3.2955, -3.2840, -3.3809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.9489, device='cuda:0', dtype=torch.float64)
tensor([-1.8925, -3.0380, -3.3934, -3.1822, -3.4980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.6659, device='cuda:0', dtype=torch.float64)
tensor([-2.0117, -3.2173, -3.4622, -3.0941, -3.5278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.7061, device='cuda:0', dtype=torch.float64)
tensor([-2.1045, -3.2448, -3.4253, -3.0334, -3.5068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.9394, device='cuda:0', dtype=torch.float64)
tensor([-2.1718, -3.1863, -3.3213, -3.0005, -3.4898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.0389, device='cuda:0', dtype=torch.float64)
tensor([-2.2111, -3.1320, -3.2110, -2.9867, -3.4604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.4384, device='cuda:0', dtype=torch.float64)
tensor([-2.2179, -3.0719, -3.1229, -2.9901, -3.3961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.3673, device='cuda:0', dtype=torch.float64)
tensor([-2.1845, -3.0039, -3.0619, -3.0130, -3.3097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6161, device='cuda:0', dtype=torch.float64)
tensor([-2.1062, -2.9549, -3.0275, -3.0537, -3.2239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9101, device='cuda:0', dtype=torch.float64)
tensor([-1.9986, -2.9591, -3.0161, -3.1036, -3.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.0331, device='cuda:0', dtype=torch.float64)
tensor([-1.8886, -3.0018, -3.0204, -3.1544, -3.0890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3750, device='cuda:0', dtype=torch.float64)
tensor([-1.7956, -2.9995, -3.0318, -3.2008, -3.0481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.8942, device='cuda:0', dtype=torch.float64)
tensor([-1.7260, -2.9069, -3.0414, -3.2374, -3.0293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.9117, device='cuda:0', dtype=torch.float64)
tensor([-1.6806, -2.7804, -3.0433, -3.2589, -3.0327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3587, device='cuda:0', dtype=torch.float64)
tensor([-1.6579, -2.6811, -3.0347, -3.2632, -3.0551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.0959, device='cuda:0', dtype=torch.float64)
tensor([-1.6563, -2.6178, -3.0146, -3.2504, -3.0929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2722, device='cuda:0', dtype=torch.float64)
tensor([-1.6733, -2.5844, -2.9853, -3.2245, -3.1432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1626, device='cuda:0', dtype=torch.float64)
tensor([-1.7054, -2.5753, -2.9507, -3.1916, -3.2015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2127, device='cuda:0', dtype=torch.float64)
tensor([-1.7483, -2.5854, -2.9147, -3.1585, -3.2619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4140, device='cuda:0', dtype=torch.float64)
tensor([-1.7959, -2.6090, -2.8803, -3.1309, -3.3169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2324, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6402, -2.8492, -3.1112, -3.3588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7736, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.6718, -2.8221, -3.0992, -3.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3485, device='cuda:0', dtype=torch.float64)
tensor([-1.9086, -2.6970, -2.7982, -3.0928, -3.3847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4962, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.7113, -2.7775, -3.0906, -3.3691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1183, device='cuda:0', dtype=torch.float64)
tensor([-1.9215, -2.7142, -2.7614, -3.0918, -3.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6864, device='cuda:0', dtype=torch.float64)
tensor([-1.9111, -2.7088, -2.7512, -3.0970, -3.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1200, device='cuda:0', dtype=torch.float64)
tensor([-1.8940, -2.7001, -2.7466, -3.1061, -3.2817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5987, device='cuda:0', dtype=torch.float64)
tensor([-1.8741, -2.6916, -2.7469, -3.1185, -3.2557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6051, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.6840, -2.7507, -3.1322, -3.2368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5148, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6776, -2.7567, -3.1464, -3.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5439, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6728, -2.7638, -3.1597, -3.2218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4361, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6695, -2.7707, -3.1706, -3.2243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2753, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6680, -2.7757, -3.1787, -3.2305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1559, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6682, -2.7778, -3.1836, -3.2382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9906, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6697, -2.7765, -3.1852, -3.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0520, device='cuda:0', dtype=torch.float64)
tensor([-1.8275, -2.6717, -2.7719, -3.1839, -3.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0229, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6733, -2.7659, -3.1809, -3.2512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9514, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6740, -2.7602, -3.1778, -3.2497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7832, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6733, -2.7568, -3.1754, -3.2458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6743, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6708, -2.7558, -3.1746, -3.2406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6530, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6664, -2.7584, -3.1759, -3.2353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6508, device='cuda:0', dtype=torch.float64)
tensor([-1.8123, -2.6600, -2.7647, -3.1796, -3.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5812, device='cuda:0', dtype=torch.float64)
tensor([-1.8059, -2.6530, -2.7737, -3.1851, -3.2280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6168, device='cuda:0', dtype=torch.float64)
tensor([-1.7998, -2.6454, -2.7839, -3.1922, -3.2276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4428, device='cuda:0', dtype=torch.float64)
tensor([-1.7947, -2.6383, -2.7947, -3.1995, -3.2291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4512, device='cuda:0', dtype=torch.float64)
tensor([-1.7920, -2.6321, -2.8052, -3.2067, -3.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4022, device='cuda:0', dtype=torch.float64)
tensor([-1.7916, -2.6273, -2.8148, -3.2127, -3.2360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4029, device='cuda:0', dtype=torch.float64)
tensor([-1.7937, -2.6243, -2.8230, -3.2174, -3.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3934, device='cuda:0', dtype=torch.float64)
tensor([-1.7983, -2.6231, -2.8287, -3.2200, -3.2434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2661, device='cuda:0', dtype=torch.float64)
tensor([-1.8044, -2.6238, -2.8316, -3.2201, -3.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2889, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6265, -2.8312, -3.2175, -3.2459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2010, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6312, -2.8273, -3.2127, -3.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0609, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6368, -2.8215, -3.2065, -3.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6433, -2.8142, -3.1987, -3.2411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0027, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6499, -2.8065, -3.1895, -3.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1584, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.6560, -2.7995, -3.1805, -3.2395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1187, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.6609, -2.7944, -3.1718, -3.2396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2085, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.6647, -2.7916, -3.1642, -3.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0301, device='cuda:0', dtype=torch.float64)
tensor([-1.8697, -2.6664, -2.7909, -3.1586, -3.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9226, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.6665, -2.7916, -3.1541, -3.2431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9258, device='cuda:0', dtype=torch.float64)
tensor([-1.8696, -2.6649, -2.7935, -3.1512, -3.2438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9093, device='cuda:0', dtype=torch.float64)
tensor([-1.8661, -2.6613, -2.7967, -3.1504, -3.2431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9145, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.6564, -2.8003, -3.1530, -3.2409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9498, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.6508, -2.8043, -3.1570, -3.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9525, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6451, -2.8077, -3.1617, -3.2316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9511, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.6392, -2.8107, -3.1670, -3.2250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8523, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6336, -2.8130, -3.1727, -3.2182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7107, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6292, -2.8138, -3.1769, -3.2115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7426, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6260, -2.8129, -3.1803, -3.2059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9577, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6245, -2.8119, -3.1834, -3.2027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8131, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6244, -2.8104, -3.1841, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8691, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6258, -2.8088, -3.1839, -3.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8428, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6291, -2.8070, -3.1819, -3.2019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8596, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6345, -2.8046, -3.1788, -3.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7120, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.6398, -2.8033, -3.1755, -3.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7597, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6448, -2.8021, -3.1712, -3.2110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7572, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.6501, -2.8007, -3.1665, -3.2119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8037, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.6558, -2.7991, -3.1616, -3.2102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7505, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6610, -2.7979, -3.1565, -3.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6440, device='cuda:0', dtype=torch.float64)
tensor([-1.8576, -2.6655, -2.7971, -3.1532, -3.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8217, device='cuda:0', dtype=torch.float64)
tensor([-1.8576, -2.6691, -2.7968, -3.1516, -3.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7788, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.6714, -2.7975, -3.1505, -3.2054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7770, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6722, -2.8001, -3.1507, -3.2059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8031, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.6720, -2.8034, -3.1520, -3.2069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8397, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6715, -2.8068, -3.1541, -3.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8299, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.6698, -2.8101, -3.1558, -3.2114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8773, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.6679, -2.8127, -3.1575, -3.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8763, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.6648, -2.8156, -3.1601, -3.2150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7297, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6615, -2.8187, -3.1634, -3.2155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8382, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.6593, -2.8212, -3.1648, -3.2143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8069, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6569, -2.8220, -3.1664, -3.2107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8256, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6549, -2.8226, -3.1685, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8447, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.6530, -2.8227, -3.1707, -3.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9096, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6520, -2.8221, -3.1719, -3.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9504, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6518, -2.8205, -3.1734, -3.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8181, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.6534, -2.8191, -3.1743, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0606, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.6557, -2.8190, -3.1740, -3.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7971, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.6587, -2.8179, -3.1737, -3.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8264, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.6608, -2.8164, -3.1718, -3.2015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0239, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6636, -2.8141, -3.1685, -3.2061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8347, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.6669, -2.8128, -3.1661, -3.2096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8001, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.6692, -2.8117, -3.1642, -3.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8770, device='cuda:0', dtype=torch.float64)
tensor([-1.8754, -2.6714, -2.8107, -3.1638, -3.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7837, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.6719, -2.8102, -3.1638, -3.2124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8087, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.6714, -2.8094, -3.1638, -3.2085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7661, device='cuda:0', dtype=torch.float64)
tensor([-1.8696, -2.6712, -2.8076, -3.1647, -3.2040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7490, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.6704, -2.8073, -3.1676, -3.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9521, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.6710, -2.8056, -3.1693, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8879, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.6716, -2.8041, -3.1727, -3.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9419, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.6716, -2.8032, -3.1775, -3.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8919, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.6705, -2.8032, -3.1820, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9508, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.6710, -2.8036, -3.1856, -3.2012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8393, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.6721, -2.8051, -3.1888, -3.2030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7206, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.6733, -2.8063, -3.1903, -3.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8871, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.6746, -2.8073, -3.1909, -3.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9026, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.6743, -2.8087, -3.1909, -3.2087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1352, device='cuda:0', dtype=torch.float64)
tensor([-1.8631, -2.6730, -2.8107, -3.1904, -3.2096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8642, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.6711, -2.8128, -3.1888, -3.2083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6818, device='cuda:0', dtype=torch.float64)
tensor([-1.8681, -2.6698, -2.8131, -3.1863, -3.2065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0357, device='cuda:0', dtype=torch.float64)
tensor([-1.8697, -2.6678, -2.8126, -3.1813, -3.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9706, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.6649, -2.8123, -3.1782, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8100, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.6621, -2.8119, -3.1760, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1177, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.6621, -2.8104, -3.1743, -3.1964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7640, device='cuda:0', dtype=torch.float64)
tensor([-1.8693, -2.6628, -2.8075, -3.1715, -3.1939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0492, device='cuda:0', dtype=torch.float64)
tensor([-1.8689, -2.6634, -2.8061, -3.1721, -3.1925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7834, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.6641, -2.8060, -3.1730, -3.1915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9426, device='cuda:0', dtype=torch.float64)
tensor([-1.8691, -2.6662, -2.8056, -3.1744, -3.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9224, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.6690, -2.8051, -3.1754, -3.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7007, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.6723, -2.8046, -3.1758, -3.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9483, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.6766, -2.8049, -3.1751, -3.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9689, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.6812, -2.8061, -3.1742, -3.1995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8596, device='cuda:0', dtype=torch.float64)
tensor([-1.8799, -2.6869, -2.8079, -3.1730, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8815, device='cuda:0', dtype=torch.float64)
tensor([-1.8821, -2.6922, -2.8098, -3.1711, -3.2028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7248, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.6958, -2.8118, -3.1705, -3.2046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0521, device='cuda:0', dtype=torch.float64)
tensor([-1.8841, -2.6965, -2.8141, -3.1707, -3.2069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8859, device='cuda:0', dtype=torch.float64)
tensor([-1.8829, -2.6949, -2.8185, -3.1721, -3.2092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0770, device='cuda:0', dtype=torch.float64)
tensor([-1.8806, -2.6930, -2.8217, -3.1768, -3.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8848, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.6897, -2.8249, -3.1812, -3.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9887, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.6850, -2.8264, -3.1845, -3.2195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9201, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.6804, -2.8272, -3.1899, -3.2236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8791, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.6773, -2.8267, -3.1936, -3.2259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0696, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.6742, -2.8259, -3.1961, -3.2270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8519, device='cuda:0', dtype=torch.float64)
tensor([-1.8634, -2.6709, -2.8246, -3.1990, -3.2259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8646, device='cuda:0', dtype=torch.float64)
tensor([-1.8606, -2.6698, -2.8233, -3.2008, -3.2260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9814, device='cuda:0', dtype=torch.float64)
tensor([-1.8593, -2.6685, -2.8224, -3.2021, -3.2273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1371, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.6689, -2.8201, -3.2013, -3.2286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9313, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.6693, -2.8184, -3.1999, -3.2285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8691, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.6715, -2.8168, -3.1965, -3.2279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0949, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.6747, -2.8151, -3.1911, -3.2265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9005, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.6798, -2.8123, -3.1850, -3.2254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7794, device='cuda:0', dtype=torch.float64)
tensor([-1.8789, -2.6845, -2.8086, -3.1793, -3.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0765, device='cuda:0', dtype=torch.float64)
tensor([-1.8841, -2.6885, -2.8057, -3.1741, -3.2190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0609, device='cuda:0', dtype=torch.float64)
tensor([-1.8871, -2.6928, -2.8042, -3.1697, -3.2161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9624, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.6953, -2.8031, -3.1657, -3.2145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9420, device='cuda:0', dtype=torch.float64)
tensor([-1.8923, -2.6981, -2.8027, -3.1651, -3.2173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0950, device='cuda:0', dtype=torch.float64)
tensor([-1.8934, -2.6997, -2.8034, -3.1677, -3.2180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8142, device='cuda:0', dtype=torch.float64)
tensor([-1.8925, -2.7008, -2.8051, -3.1728, -3.2196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8960, device='cuda:0', dtype=torch.float64)
tensor([-1.8916, -2.7003, -2.8076, -3.1805, -3.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8880, device='cuda:0', dtype=torch.float64)
tensor([-1.8908, -2.6991, -2.8114, -3.1876, -3.2227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9039, device='cuda:0', dtype=torch.float64)
tensor([-1.8890, -2.6995, -2.8157, -3.1941, -3.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9931, device='cuda:0', dtype=torch.float64)
tensor([-1.8875, -2.6998, -2.8201, -3.1999, -3.2196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0375, device='cuda:0', dtype=torch.float64)
tensor([-1.8880, -2.6998, -2.8237, -3.2045, -3.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9945, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.6996, -2.8282, -3.2069, -3.2198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9656, device='cuda:0', dtype=torch.float64)
tensor([-1.8884, -2.6982, -2.8325, -3.2089, -3.2187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8750, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.6963, -2.8356, -3.2108, -3.2154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9362, device='cuda:0', dtype=torch.float64)
tensor([-1.8825, -2.6941, -2.8397, -3.2127, -3.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9711, device='cuda:0', dtype=torch.float64)
tensor([-1.8799, -2.6918, -2.8439, -3.2128, -3.2127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9241, device='cuda:0', dtype=torch.float64)
tensor([-1.8762, -2.6905, -2.8473, -3.2127, -3.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0867, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.6912, -2.8513, -3.2123, -3.2121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9498, device='cuda:0', dtype=torch.float64)
tensor([-1.8737, -2.6920, -2.8532, -3.2094, -3.2128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8657, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.6929, -2.8538, -3.2061, -3.2142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1066, device='cuda:0', dtype=torch.float64)
tensor([-1.8773, -2.6936, -2.8517, -3.2032, -3.2162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1287, device='cuda:0', dtype=torch.float64)
tensor([-1.8841, -2.6965, -2.8495, -3.1990, -3.2186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9412, device='cuda:0', dtype=torch.float64)
tensor([-1.8918, -2.7002, -2.8484, -3.1944, -3.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8715, device='cuda:0', dtype=torch.float64)
tensor([-1.9007, -2.7040, -2.8455, -3.1902, -3.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9493, device='cuda:0', dtype=torch.float64)
tensor([-1.9081, -2.7087, -2.8413, -3.1872, -3.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0969, device='cuda:0', dtype=torch.float64)
tensor([-1.9151, -2.7134, -2.8375, -3.1876, -3.2247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0208, device='cuda:0', dtype=torch.float64)
tensor([-1.9207, -2.7156, -2.8351, -3.1914, -3.2248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1065, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.7172, -2.8328, -3.1944, -3.2258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9407, device='cuda:0', dtype=torch.float64)
tensor([-1.9281, -2.7182, -2.8322, -3.2004, -3.2273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0410, device='cuda:0', dtype=torch.float64)
tensor([-1.9316, -2.7199, -2.8331, -3.2068, -3.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1676, device='cuda:0', dtype=torch.float64)
tensor([-1.9342, -2.7220, -2.8337, -3.2113, -3.2339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2520, device='cuda:0', dtype=torch.float64)
tensor([-1.9330, -2.7221, -2.8370, -3.2175, -3.2329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0721, device='cuda:0', dtype=torch.float64)
tensor([-1.9277, -2.7203, -2.8418, -3.2249, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2715, device='cuda:0', dtype=torch.float64)
tensor([-1.9231, -2.7186, -2.8476, -3.2309, -3.2280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1033, device='cuda:0', dtype=torch.float64)
tensor([-1.9210, -2.7177, -2.8525, -3.2340, -3.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2929, device='cuda:0', dtype=torch.float64)
tensor([-1.9208, -2.7177, -2.8529, -3.2344, -3.2211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2244, device='cuda:0', dtype=torch.float64)
tensor([-1.9219, -2.7194, -2.8520, -3.2307, -3.2142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9419, device='cuda:0', dtype=torch.float64)
tensor([-1.9215, -2.7196, -2.8519, -3.2254, -3.2065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1150, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -2.7188, -2.8537, -3.2215, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0092, device='cuda:0', dtype=torch.float64)
tensor([-1.9275, -2.7189, -2.8528, -3.2162, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1248, device='cuda:0', dtype=torch.float64)
tensor([-1.9314, -2.7179, -2.8514, -3.2096, -3.1976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1609, device='cuda:0', dtype=torch.float64)
tensor([-1.9373, -2.7174, -2.8485, -3.2035, -3.1994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2507, device='cuda:0', dtype=torch.float64)
tensor([-1.9398, -2.7153, -2.8447, -3.1993, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0118, device='cuda:0', dtype=torch.float64)
tensor([-1.9421, -2.7141, -2.8442, -3.1971, -3.2015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0701, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.7134, -2.8434, -3.1954, -3.2032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1094, device='cuda:0', dtype=torch.float64)
tensor([-1.9446, -2.7121, -2.8439, -3.1948, -3.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3114, device='cuda:0', dtype=torch.float64)
tensor([-1.9431, -2.7104, -2.8444, -3.1943, -3.2084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0423, device='cuda:0', dtype=torch.float64)
tensor([-1.9396, -2.7079, -2.8451, -3.1953, -3.2096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1016, device='cuda:0', dtype=torch.float64)
tensor([-1.9371, -2.7075, -2.8430, -3.1969, -3.2111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0631, device='cuda:0', dtype=torch.float64)
tensor([-1.9339, -2.7074, -2.8432, -3.2001, -3.2139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0202, device='cuda:0', dtype=torch.float64)
tensor([-1.9317, -2.7092, -2.8432, -3.2052, -3.2173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0250, device='cuda:0', dtype=torch.float64)
tensor([-1.9316, -2.7123, -2.8425, -3.2095, -3.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9535, device='cuda:0', dtype=torch.float64)
tensor([-1.9315, -2.7142, -2.8436, -3.2145, -3.2258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1719, device='cuda:0', dtype=torch.float64)
tensor([-1.9328, -2.7138, -2.8481, -3.2181, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3967, device='cuda:0', dtype=torch.float64)
tensor([-1.9368, -2.7132, -2.8529, -3.2197, -3.2359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1581, device='cuda:0', dtype=torch.float64)
tensor([-1.9432, -2.7141, -2.8568, -3.2180, -3.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0451, device='cuda:0', dtype=torch.float64)
tensor([-1.9477, -2.7164, -2.8616, -3.2162, -3.2470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2365, device='cuda:0', dtype=torch.float64)
tensor([-1.9545, -2.7206, -2.8631, -3.2123, -3.2549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2472, device='cuda:0', dtype=torch.float64)
tensor([-1.9581, -2.7248, -2.8621, -3.2103, -3.2582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0767, device='cuda:0', dtype=torch.float64)
tensor([-1.9622, -2.7273, -2.8623, -3.2076, -3.2603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2742, device='cuda:0', dtype=torch.float64)
tensor([-1.9653, -2.7293, -2.8609, -3.2036, -3.2598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9912, device='cuda:0', dtype=torch.float64)
tensor([-1.9644, -2.7311, -2.8594, -3.2022, -3.2585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3024, device='cuda:0', dtype=torch.float64)
tensor([-1.9643, -2.7337, -2.8588, -3.2015, -3.2590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3647, device='cuda:0', dtype=torch.float64)
tensor([-1.9697, -2.7376, -2.8574, -3.2010, -3.2620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0411, device='cuda:0', dtype=torch.float64)
tensor([-1.9735, -2.7420, -2.8573, -3.2024, -3.2665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0351, device='cuda:0', dtype=torch.float64)
tensor([-1.9778, -2.7459, -2.8589, -3.2050, -3.2700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1457, device='cuda:0', dtype=torch.float64)
tensor([-1.9807, -2.7469, -2.8613, -3.2081, -3.2710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1423, device='cuda:0', dtype=torch.float64)
tensor([-1.9824, -2.7476, -2.8640, -3.2108, -3.2725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9864, device='cuda:0', dtype=torch.float64)
tensor([-1.9821, -2.7476, -2.8701, -3.2131, -3.2747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1142, device='cuda:0', dtype=torch.float64)
tensor([-1.9817, -2.7468, -2.8742, -3.2146, -3.2732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9514, device='cuda:0', dtype=torch.float64)
tensor([-1.9815, -2.7445, -2.8798, -3.2193, -3.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-1.9812, -2.7415, -2.8849, -3.2249, -3.2653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2220, device='cuda:0', dtype=torch.float64)
tensor([-1.9790, -2.7379, -2.8889, -3.2299, -3.2576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1709, device='cuda:0', dtype=torch.float64)
tensor([-1.9767, -2.7344, -2.8911, -3.2337, -3.2494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2709, device='cuda:0', dtype=torch.float64)
tensor([-1.9768, -2.7329, -2.8964, -3.2351, -3.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2886, device='cuda:0', dtype=torch.float64)
tensor([-1.9764, -2.7300, -2.8999, -3.2396, -3.2428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1193, device='cuda:0', dtype=torch.float64)
tensor([-1.9763, -2.7279, -2.9043, -3.2400, -3.2421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1119, device='cuda:0', dtype=torch.float64)
tensor([-1.9764, -2.7278, -2.9048, -3.2377, -3.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2089, device='cuda:0', dtype=torch.float64)
tensor([-1.9766, -2.7284, -2.9044, -3.2351, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0736, device='cuda:0', dtype=torch.float64)
tensor([-1.9773, -2.7295, -2.9036, -3.2327, -3.2390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5108, device='cuda:0', dtype=torch.float64)
tensor([-1.9820, -2.7347, -2.9016, -3.2271, -3.2422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8814, device='cuda:0', dtype=torch.float64)
tensor([-1.9861, -2.7401, -2.8998, -3.2230, -3.2470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1412, device='cuda:0', dtype=torch.float64)
tensor([-1.9899, -2.7452, -2.8974, -3.2200, -3.2525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0352, device='cuda:0', dtype=torch.float64)
tensor([-1.9951, -2.7511, -2.8958, -3.2191, -3.2602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1937, device='cuda:0', dtype=torch.float64)
tensor([-1.9995, -2.7554, -2.8967, -3.2217, -3.2668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2575, device='cuda:0', dtype=torch.float64)
tensor([-1.9989, -2.7582, -2.9003, -3.2233, -3.2721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1570, device='cuda:0', dtype=torch.float64)
tensor([-1.9956, -2.7596, -2.9047, -3.2256, -3.2754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4234, device='cuda:0', dtype=torch.float64)
tensor([-1.9915, -2.7644, -2.9130, -3.2255, -3.2792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1610, device='cuda:0', dtype=torch.float64)
tensor([-1.9862, -2.7689, -2.9201, -3.2252, -3.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2661, device='cuda:0', dtype=torch.float64)
tensor([-1.9841, -2.7723, -2.9289, -3.2264, -3.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2457, device='cuda:0', dtype=torch.float64)
tensor([-1.9851, -2.7780, -2.9358, -3.2259, -3.2810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1365, device='cuda:0', dtype=torch.float64)
tensor([-1.9888, -2.7838, -2.9413, -3.2278, -3.2900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1714, device='cuda:0', dtype=torch.float64)
tensor([-1.9920, -2.7846, -2.9494, -3.2289, -3.3005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0829, device='cuda:0', dtype=torch.float64)
tensor([-1.9983, -2.7865, -2.9580, -3.2330, -3.3123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4100, device='cuda:0', dtype=torch.float64)
tensor([-2.0036, -2.7890, -2.9629, -3.2332, -3.3186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0400, device='cuda:0', dtype=torch.float64)
tensor([-2.0061, -2.7889, -2.9634, -3.2355, -3.3200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3822, device='cuda:0', dtype=torch.float64)
tensor([-2.0117, -2.7902, -2.9597, -3.2334, -3.3213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2242, device='cuda:0', dtype=torch.float64)
tensor([-2.0223, -2.7953, -2.9541, -3.2297, -3.3251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2575, device='cuda:0', dtype=torch.float64)
tensor([-2.0344, -2.7994, -2.9459, -3.2247, -3.3263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2157, device='cuda:0', dtype=torch.float64)
tensor([-2.0471, -2.8046, -2.9383, -3.2182, -3.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([-2.0599, -2.8138, -2.9285, -3.2147, -3.3366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1348, device='cuda:0', dtype=torch.float64)
tensor([-2.0738, -2.8238, -2.9207, -3.2129, -3.3436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0880, device='cuda:0', dtype=torch.float64)
tensor([-2.0833, -2.8323, -2.9145, -3.2148, -3.3475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2141, device='cuda:0', dtype=torch.float64)
tensor([-2.0890, -2.8404, -2.9110, -3.2183, -3.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2023, device='cuda:0', dtype=torch.float64)
tensor([-2.0954, -2.8460, -2.9111, -3.2236, -3.3554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0167, device='cuda:0', dtype=torch.float64)
tensor([-2.1005, -2.8486, -2.9146, -3.2324, -3.3604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0264, device='cuda:0', dtype=torch.float64)
tensor([-2.1052, -2.8554, -2.9158, -3.2382, -3.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3125, device='cuda:0', dtype=torch.float64)
tensor([-2.1078, -2.8628, -2.9152, -3.2462, -3.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2433, device='cuda:0', dtype=torch.float64)
tensor([-2.1095, -2.8716, -2.9184, -3.2535, -3.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0987, device='cuda:0', dtype=torch.float64)
tensor([-2.1114, -2.8821, -2.9214, -3.2616, -3.3719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0376, device='cuda:0', dtype=torch.float64)
tensor([-2.1144, -2.8900, -2.9246, -3.2675, -3.3730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-2.1177, -2.8957, -2.9274, -3.2758, -3.3729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1934, device='cuda:0', dtype=torch.float64)
tensor([-2.1227, -2.9014, -2.9301, -3.2826, -3.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0548, device='cuda:0', dtype=torch.float64)
tensor([-2.1267, -2.9054, -2.9355, -3.2906, -3.3692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1824, device='cuda:0', dtype=torch.float64)
tensor([-2.1319, -2.9111, -2.9404, -3.3008, -3.3711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3946, device='cuda:0', dtype=torch.float64)
tensor([-2.1417, -2.9133, -2.9465, -3.3098, -3.3748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2300, device='cuda:0', dtype=torch.float64)
tensor([-2.1482, -2.9104, -2.9524, -3.3173, -3.3774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9991, device='cuda:0', dtype=torch.float64)
tensor([-2.1536, -2.9036, -2.9609, -3.3241, -3.3778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4394, device='cuda:0', dtype=torch.float64)
tensor([-2.1606, -2.8964, -2.9694, -3.3247, -3.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9027, device='cuda:0', dtype=torch.float64)
tensor([-2.1666, -2.8902, -2.9770, -3.3245, -3.3794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0031, device='cuda:0', dtype=torch.float64)
tensor([-2.1725, -2.8846, -2.9863, -3.3274, -3.3813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1691, device='cuda:0', dtype=torch.float64)
tensor([-2.1769, -2.8791, -2.9958, -3.3328, -3.3834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9741, device='cuda:0', dtype=torch.float64)
tensor([-2.1784, -2.8730, -3.0055, -3.3414, -3.3871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9100, device='cuda:0', dtype=torch.float64)
tensor([-2.1773, -2.8652, -3.0160, -3.3519, -3.3901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0337, device='cuda:0', dtype=torch.float64)
tensor([-2.1789, -2.8589, -3.0286, -3.3631, -3.3979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0492, device='cuda:0', dtype=torch.float64)
tensor([-2.1848, -2.8567, -3.0394, -3.3735, -3.4072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3887, device='cuda:0', dtype=torch.float64)
tensor([-2.1939, -2.8556, -3.0519, -3.3832, -3.4207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3328, device='cuda:0', dtype=torch.float64)
tensor([-2.2065, -2.8574, -3.0618, -3.3945, -3.4388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2549, device='cuda:0', dtype=torch.float64)
tensor([-2.2267, -2.8627, -3.0726, -3.4059, -3.4603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0999, device='cuda:0', dtype=torch.float64)
tensor([-2.2513, -2.8723, -3.0845, -3.4172, -3.4847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1294, device='cuda:0', dtype=torch.float64)
tensor([-2.2804, -2.8858, -3.0969, -3.4307, -3.5110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2896, device='cuda:0', dtype=torch.float64)
tensor([-2.3093, -2.8994, -3.1064, -3.4465, -3.5334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3308, device='cuda:0', dtype=torch.float64)
tensor([-2.3362, -2.9100, -3.1160, -3.4623, -3.5537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2498, device='cuda:0', dtype=torch.float64)
tensor([-2.3657, -2.9261, -3.1262, -3.4809, -3.5736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1223, device='cuda:0', dtype=torch.float64)
tensor([-2.3932, -2.9411, -3.1380, -3.4931, -3.5911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1830, device='cuda:0', dtype=torch.float64)
tensor([-2.4274, -2.9573, -3.1503, -3.5115, -3.6161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-2.4585, -2.9753, -3.1633, -3.5266, -3.6432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0074, device='cuda:0', dtype=torch.float64)
tensor([-2.4849, -2.9900, -3.1754, -3.5379, -3.6681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2757, device='cuda:0', dtype=torch.float64)
tensor([-2.5119, -3.0056, -3.1907, -3.5557, -3.6973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1844, device='cuda:0', dtype=torch.float64)
tensor([-2.5412, -3.0248, -3.2088, -3.5704, -3.7314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0233, device='cuda:0', dtype=torch.float64)
tensor([-2.5742, -3.0462, -3.2240, -3.5846, -3.7655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3481, device='cuda:0', dtype=torch.float64)
tensor([-2.6060, -3.0717, -3.2381, -3.6011, -3.7987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4625, device='cuda:0', dtype=torch.float64)
tensor([-2.6406, -3.0993, -3.2528, -3.6216, -3.8313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1489, device='cuda:0', dtype=torch.float64)
tensor([-2.6782, -3.1259, -3.2683, -3.6433, -3.8652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1273, device='cuda:0', dtype=torch.float64)
tensor([-2.7138, -3.1505, -3.2862, -3.6653, -3.9016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1369, device='cuda:0', dtype=torch.float64)
tensor([-2.7504, -3.1743, -3.3058, -3.6871, -3.9391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9958, device='cuda:0', dtype=torch.float64)
tensor([-2.7870, -3.1981, -3.3280, -3.7130, -3.9783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0467, device='cuda:0', dtype=torch.float64)
tensor([-2.8283, -3.2278, -3.3524, -3.7414, -4.0200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3247, device='cuda:0', dtype=torch.float64)
tensor([-2.8761, -3.2604, -3.3786, -3.7799, -4.0726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1564, device='cuda:0', dtype=torch.float64)
tensor([-2.9259, -3.2952, -3.4045, -3.8222, -4.1238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0039, device='cuda:0', dtype=torch.float64)
tensor([-2.9789, -3.3303, -3.4355, -3.8679, -4.1784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1622, device='cuda:0', dtype=torch.float64)
tensor([-3.0425, -3.3693, -3.4727, -3.9170, -4.2404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0561, device='cuda:0', dtype=torch.float64)
tensor([-3.1054, -3.4095, -3.5090, -3.9730, -4.3001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1179, device='cuda:0', dtype=torch.float64)
tensor([-3.1719, -3.4540, -3.5507, -4.0345, -4.3632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8496, device='cuda:0', dtype=torch.float64)
tensor([-3.2383, -3.5002, -3.5922, -4.1047, -4.4287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0316, device='cuda:0', dtype=torch.float64)
tensor([-3.3074, -3.5501, -3.6342, -4.1759, -4.4958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1376, device='cuda:0', dtype=torch.float64)
tensor([-3.3805, -3.6025, -3.6813, -4.2578, -4.5678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0640, device='cuda:0', dtype=torch.float64)
tensor([-3.4510, -3.6524, -3.7242, -4.3447, -4.6397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2593, device='cuda:0', dtype=torch.float64)
tensor([-3.5285, -3.7066, -3.7749, -4.4330, -4.7181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0398, device='cuda:0', dtype=torch.float64)
tensor([-3.6091, -3.7587, -3.8277, -4.5271, -4.7967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9341, device='cuda:0', dtype=torch.float64)
tensor([-3.6944, -3.8112, -3.8787, -4.6277, -4.8772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0758, device='cuda:0', dtype=torch.float64)
tensor([-3.7881, -3.8616, -3.9308, -4.7282, -4.9602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8875, device='cuda:0', dtype=torch.float64)
tensor([-3.8913, -3.9121, -3.9858, -4.8306, -5.0508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9170, device='cuda:0', dtype=torch.float64)
tensor([-4.0035, -3.9646, -4.0406, -4.9364, -5.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7683, device='cuda:0', dtype=torch.float64)
tensor([-4.1197, -4.0176, -4.0942, -5.0383, -5.2315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9660, device='cuda:0', dtype=torch.float64)
tensor([-4.2527, -4.0687, -4.1554, -5.1375, -5.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9135, device='cuda:0', dtype=torch.float64)
tensor([-4.4086, -4.1242, -4.2316, -5.2348, -5.4097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9878, device='cuda:0', dtype=torch.float64)
tensor([-4.5593, -4.1790, -4.3063, -5.3349, -5.5021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8639, device='cuda:0', dtype=torch.float64)
tensor([-4.7295, -4.2313, -4.3881, -5.4380, -5.5902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7852, device='cuda:0', dtype=torch.float64)
tensor([-4.9305, -4.2834, -4.4852, -5.5495, -5.6941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8304, device='cuda:0', dtype=torch.float64)
tensor([-5.1288, -4.3318, -4.5916, -5.6412, -5.7888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9669, device='cuda:0', dtype=torch.float64)
tensor([-5.3754, -4.3791, -4.7175, -5.7273, -5.8779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7503, device='cuda:0', dtype=torch.float64)
tensor([-5.6186, -4.4239, -4.8625, -5.8053, -5.9693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-5.8507, -4.4695, -5.0186, -5.8974, -6.0792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8759, device='cuda:0', dtype=torch.float64)
tensor([-6.0679, -4.5153, -5.1846, -5.9997, -6.1935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9881, device='cuda:0', dtype=torch.float64)
tensor([-6.3100, -4.5555, -5.3954, -6.0964, -6.2989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8914, device='cuda:0', dtype=torch.float64)
tensor([-6.5352, -4.5928, -5.6188, -6.1810, -6.3952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8811, device='cuda:0', dtype=torch.float64)
tensor([-6.7687, -4.6293, -5.8615, -6.2631, -6.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8864, device='cuda:0', dtype=torch.float64)
tensor([-7.0083, -4.6632, -6.1487, -6.3331, -6.5898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8344, device='cuda:0', dtype=torch.float64)
tensor([-7.2264, -4.6967, -6.4022, -6.3979, -6.6897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-7.4160, -4.7310, -6.6466, -6.4563, -6.7836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9310, device='cuda:0', dtype=torch.float64)
tensor([-7.5408, -4.7622, -6.8249, -6.5030, -6.8726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9192, device='cuda:0', dtype=torch.float64)
tensor([-7.6855, -4.7940, -7.0423, -6.5645, -6.9797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8447, device='cuda:0', dtype=torch.float64)
tensor([-7.8200, -4.8266, -7.2268, -6.6195, -7.0854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8411, device='cuda:0', dtype=torch.float64)
tensor([-7.9617, -4.8606, -7.4216, -6.6665, -7.1850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6493, device='cuda:0', dtype=torch.float64)
tensor([-8.0683, -4.8910, -7.5650, -6.7089, -7.2822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8798, device='cuda:0', dtype=torch.float64)
tensor([-8.1651, -4.9120, -7.6680, -6.7277, -7.3620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7500, device='cuda:0', dtype=torch.float64)
tensor([-8.2800, -4.9348, -7.7984, -6.7488, -7.4448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8084, device='cuda:0', dtype=torch.float64)
tensor([-8.3916, -4.9638, -7.9114, -6.7697, -7.5322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9627, device='cuda:0', dtype=torch.float64)
tensor([-8.5152, -4.9890, -7.9825, -6.7945, -7.6139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6931, device='cuda:0', dtype=torch.float64)
tensor([-8.6172, -5.0111, -8.0200, -6.8094, -7.6843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6549, device='cuda:0', dtype=torch.float64)
tensor([-8.7127, -5.0308, -8.0938, -6.8126, -7.7393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8905, device='cuda:0', dtype=torch.float64)
tensor([-8.7940, -5.0495, -8.2043, -6.8191, -7.7732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8060, device='cuda:0', dtype=torch.float64)
tensor([-8.8432, -5.0623, -8.2314, -6.8285, -7.7873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7300, device='cuda:0', dtype=torch.float64)
tensor([-8.8846, -5.0811, -8.2378, -6.8425, -7.7964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8934, device='cuda:0', dtype=torch.float64)
tensor([-8.9824, -5.1062, -8.3837, -6.8651, -7.8040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6835, device='cuda:0', dtype=torch.float64)
tensor([-9.0565, -5.1446, -8.4909, -6.8943, -7.8264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9566, device='cuda:0', dtype=torch.float64)
tensor([-9.0451, -5.1870, -8.5687, -6.9272, -7.8675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8655, device='cuda:0', dtype=torch.float64)
tensor([-9.0204, -5.2259, -8.6130, -6.9433, -7.9252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8184, device='cuda:0', dtype=torch.float64)
tensor([-8.9966, -5.2747, -8.6288, -6.9699, -7.9623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6788, device='cuda:0', dtype=torch.float64)
tensor([-8.9762, -5.3341, -8.6348, -6.9967, -8.0049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8034, device='cuda:0', dtype=torch.float64)
tensor([-8.9780, -5.3870, -8.6591, -7.0099, -8.0410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9708, device='cuda:0', dtype=torch.float64)
tensor([-8.9611, -5.4187, -8.5675, -7.0218, -8.0734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8123, device='cuda:0', dtype=torch.float64)
tensor([-8.9591, -5.4629, -8.5088, -7.0380, -8.1255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6498, device='cuda:0', dtype=torch.float64)
tensor([-8.9739, -5.5189, -8.4919, -7.0567, -8.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6646, device='cuda:0', dtype=torch.float64)
tensor([-8.9516, -5.5581, -8.3793, -7.0664, -8.2100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7338, device='cuda:0', dtype=torch.float64)
tensor([-8.9066, -5.5952, -8.1959, -7.0785, -8.2503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5898, device='cuda:0', dtype=torch.float64)
tensor([-8.8547, -5.6163, -7.9840, -7.0823, -8.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7101, device='cuda:0', dtype=torch.float64)
tensor([-8.7773, -5.6142, -7.7311, -7.0795, -8.2914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7304, device='cuda:0', dtype=torch.float64)
tensor([-8.7333, -5.6288, -7.5701, -7.0782, -8.2916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0145, device='cuda:0', dtype=torch.float64)
tensor([-8.7224, -5.6762, -7.5523, -7.0805, -8.3060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7838, device='cuda:0', dtype=torch.float64)
tensor([-8.7237, -5.7415, -7.5751, -7.0878, -8.2965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7615, device='cuda:0', dtype=torch.float64)
tensor([-8.7207, -5.7983, -7.5788, -7.0936, -8.2518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6968, device='cuda:0', dtype=torch.float64)
tensor([-8.7483, -5.8294, -7.6313, -7.0921, -8.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7595, device='cuda:0', dtype=torch.float64)
tensor([-8.7940, -5.8816, -7.7129, -7.0947, -8.2607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6291, device='cuda:0', dtype=torch.float64)
tensor([-8.8684, -5.9645, -7.8735, -7.0992, -8.2976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7606, device='cuda:0', dtype=torch.float64)
tensor([-8.9525, -6.0332, -8.0479, -7.1066, -8.3673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9720, device='cuda:0', dtype=torch.float64)
tensor([-9.0119, -6.1618, -8.1945, -7.1272, -8.4388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6542, device='cuda:0', dtype=torch.float64)
tensor([-9.0695, -6.3173, -8.3595, -7.1668, -8.5460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6638, device='cuda:0', dtype=torch.float64)
tensor([-9.0835, -6.4780, -8.4091, -7.2107, -8.6650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7429, device='cuda:0', dtype=torch.float64)
tensor([-9.1240, -6.6526, -8.5415, -7.2559, -8.7931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6658, device='cuda:0', dtype=torch.float64)
tensor([-9.1652, -6.8532, -8.7031, -7.3022, -8.9477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6735, device='cuda:0', dtype=torch.float64)
tensor([-9.1949, -7.0485, -8.7967, -7.3517, -9.1143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6845, device='cuda:0', dtype=torch.float64)
tensor([-9.2374, -7.2200, -8.9340, -7.4165, -9.2783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8251, device='cuda:0', dtype=torch.float64)
tensor([-9.2471, -7.3758, -9.0073, -7.4821, -9.3968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6454, device='cuda:0', dtype=torch.float64)
tensor([-9.2077, -7.5520, -9.0019, -7.5451, -9.5344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7833, device='cuda:0', dtype=torch.float64)
tensor([-9.1590, -7.7374, -8.9912, -7.6141, -9.6817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7597, device='cuda:0', dtype=torch.float64)
tensor([-9.0866, -7.8789, -8.9222, -7.6864, -9.8410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8089, device='cuda:0', dtype=torch.float64)
tensor([ -9.0241,  -8.0625,  -8.7719,  -7.8093, -10.0615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7063, device='cuda:0', dtype=torch.float64)
tensor([ -8.9825,  -8.2009,  -8.5993,  -7.9411, -10.2771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6551, device='cuda:0', dtype=torch.float64)
tensor([ -8.9137,  -8.3090,  -8.3452,  -8.0736, -10.4592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6064, device='cuda:0', dtype=torch.float64)
tensor([ -8.8508,  -8.4412,  -8.1371,  -8.2139, -10.6857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6415, device='cuda:0', dtype=torch.float64)
tensor([ -8.8026,  -8.5393,  -7.9822,  -8.3567, -10.9349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7290, device='cuda:0', dtype=torch.float64)
tensor([ -8.7706,  -8.6004,  -7.8201,  -8.5217, -11.2052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7118, device='cuda:0', dtype=torch.float64)
tensor([ -8.7837,  -8.6705,  -7.7913,  -8.7026, -11.5097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6688, device='cuda:0', dtype=torch.float64)
tensor([ -8.7673,  -8.7593,  -7.7076,  -8.8875, -11.8334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8638, device='cuda:0', dtype=torch.float64)
tensor([ -8.7689,  -8.8145,  -7.6761,  -9.0496, -12.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7238, device='cuda:0', dtype=torch.float64)
tensor([ -8.7455,  -8.8375,  -7.6141,  -9.2268, -12.4790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6281, device='cuda:0', dtype=torch.float64)
tensor([ -8.7018,  -8.8889,  -7.5494,  -9.3887, -12.7746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5820, device='cuda:0', dtype=torch.float64)
tensor([ -8.6782,  -8.9072,  -7.4982,  -9.5392, -13.0221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6444, device='cuda:0', dtype=torch.float64)
tensor([ -8.6647,  -8.9069,  -7.4910,  -9.6508, -13.2191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6835, device='cuda:0', dtype=torch.float64)
tensor([ -8.6642,  -8.8655,  -7.5159,  -9.6772, -13.3443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5898, device='cuda:0', dtype=torch.float64)
tensor([ -8.6501,  -8.8609,  -7.5182,  -9.7060, -13.4390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6261, device='cuda:0', dtype=torch.float64)
tensor([ -8.6403,  -8.8789,  -7.5048,  -9.7453, -13.5619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6798, device='cuda:0', dtype=torch.float64)
tensor([ -8.6415,  -8.8694,  -7.5168,  -9.7306, -13.5855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7646, device='cuda:0', dtype=torch.float64)
tensor([ -8.6258,  -8.8494,  -7.5285,  -9.6306, -13.5802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6637, device='cuda:0', dtype=torch.float64)
tensor([ -8.6131,  -8.7394,  -7.5311,  -9.4933, -13.5336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5882, device='cuda:0', dtype=torch.float64)
tensor([ -8.5864,  -8.6427,  -7.5270,  -9.3602, -13.4677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5952, device='cuda:0', dtype=torch.float64)
tensor([ -8.5508,  -8.5115,  -7.5074,  -9.2256, -13.3841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5916, device='cuda:0', dtype=torch.float64)
tensor([ -8.5107,  -8.3950,  -7.4577,  -9.1017, -13.3095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5774, device='cuda:0', dtype=torch.float64)
tensor([ -8.5124,  -8.3512,  -7.4523,  -9.0351, -13.3052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5784, device='cuda:0', dtype=torch.float64)
tensor([ -8.5300,  -8.2925,  -7.4689,  -8.9597, -13.3190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7357, device='cuda:0', dtype=torch.float64)
tensor([ -8.5123,  -8.2417,  -7.4127,  -8.9404, -13.3768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7388, device='cuda:0', dtype=torch.float64)
tensor([ -8.5062,  -8.2130,  -7.3713,  -8.9363, -13.4100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7121, device='cuda:0', dtype=torch.float64)
tensor([ -8.4790,  -8.1975,  -7.3006,  -8.9188, -13.4219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6433, device='cuda:0', dtype=torch.float64)
tensor([ -8.4095,  -8.1836,  -7.1847,  -8.9053, -13.4035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6418, device='cuda:0', dtype=torch.float64)
tensor([ -8.3413,  -8.1512,  -7.0876,  -8.9011, -13.4048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5517, device='cuda:0', dtype=torch.float64)
tensor([ -8.2974,  -8.1454,  -7.0002,  -8.9136, -13.4391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5728, device='cuda:0', dtype=torch.float64)
tensor([ -8.2647,  -8.1508,  -6.9655,  -8.9106, -13.4738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6024, device='cuda:0', dtype=torch.float64)
tensor([ -8.2526,  -8.1187,  -6.9174,  -8.9580, -13.5579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6033, device='cuda:0', dtype=torch.float64)
tensor([ -8.2643,  -8.0919,  -6.8622,  -9.0361, -13.7350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7423, device='cuda:0', dtype=torch.float64)
tensor([ -8.3156,  -8.0750,  -6.8637,  -9.1393, -13.9530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5520, device='cuda:0', dtype=torch.float64)
tensor([ -8.3479,  -8.0715,  -6.8676,  -9.2443, -14.1965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5981, device='cuda:0', dtype=torch.float64)
tensor([ -8.3919,  -8.0749,  -6.8661,  -9.3248, -14.4164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4904, device='cuda:0', dtype=torch.float64)
tensor([ -8.3921,  -8.0943,  -6.8322,  -9.4178, -14.6382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6163, device='cuda:0', dtype=torch.float64)
tensor([ -8.3828,  -8.1679,  -6.8444,  -9.4651, -14.7892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5759, device='cuda:0', dtype=torch.float64)
tensor([ -8.3602,  -8.2109,  -6.8879,  -9.4339, -14.8493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5967, device='cuda:0', dtype=torch.float64)
tensor([ -8.3143,  -8.2890,  -6.9116,  -9.4638, -14.9490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5557, device='cuda:0', dtype=torch.float64)
tensor([ -8.2879,  -8.3498,  -6.9293,  -9.4961, -15.0968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5736, device='cuda:0', dtype=torch.float64)
tensor([ -8.2599,  -8.3696,  -6.9347,  -9.4830, -15.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5534, device='cuda:0', dtype=torch.float64)
tensor([ -8.2155,  -8.3751,  -6.9317,  -9.4312, -15.2536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5442, device='cuda:0', dtype=torch.float64)
tensor([ -8.1443,  -8.3249,  -6.9305,  -9.3191, -15.2125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6011, device='cuda:0', dtype=torch.float64)
tensor([ -8.1052,  -8.2640,  -6.9502,  -9.2248, -15.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4805, device='cuda:0', dtype=torch.float64)
tensor([ -8.0470,  -8.2263,  -6.9688,  -9.1459, -15.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5311, device='cuda:0', dtype=torch.float64)
tensor([ -7.9703,  -8.1845,  -6.9839,  -9.0626, -15.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5929, device='cuda:0', dtype=torch.float64)
tensor([ -7.9156,  -8.1116,  -7.0199,  -8.9709, -15.1449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6398, device='cuda:0', dtype=torch.float64)
tensor([ -7.8786,  -8.0091,  -7.0445,  -8.8926, -15.1057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6117, device='cuda:0', dtype=torch.float64)
tensor([ -7.8568,  -7.9189,  -7.0700,  -8.8150, -15.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5653, device='cuda:0', dtype=torch.float64)
tensor([ -7.8234,  -7.8471,  -7.0996,  -8.7764, -15.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5774, device='cuda:0', dtype=torch.float64)
tensor([ -7.7951,  -7.7688,  -7.1363,  -8.7289, -15.1817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6059, device='cuda:0', dtype=torch.float64)
tensor([ -7.7634,  -7.6931,  -7.1455,  -8.7110, -15.2412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4589, device='cuda:0', dtype=torch.float64)
tensor([ -7.7479,  -7.6463,  -7.1571,  -8.7295, -15.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6238, device='cuda:0', dtype=torch.float64)
tensor([ -7.7631,  -7.6103,  -7.2011,  -8.7166, -15.4321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4638, device='cuda:0', dtype=torch.float64)
tensor([ -7.7555,  -7.5571,  -7.2374,  -8.6903, -15.4827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5313, device='cuda:0', dtype=torch.float64)
tensor([ -7.7361,  -7.5061,  -7.2514,  -8.6317, -15.4991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5004, device='cuda:0', dtype=torch.float64)
tensor([ -7.7133,  -7.4586,  -7.2885,  -8.5407, -15.4298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4651, device='cuda:0', dtype=torch.float64)
tensor([ -7.6838,  -7.4332,  -7.3149,  -8.4770, -15.3840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4080, device='cuda:0', dtype=torch.float64)
tensor([ -7.6706,  -7.4296,  -7.3316,  -8.4556, -15.3912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4937, device='cuda:0', dtype=torch.float64)
tensor([ -7.6540,  -7.4108,  -7.3430,  -8.4375, -15.3815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4638, device='cuda:0', dtype=torch.float64)
tensor([ -7.6455,  -7.3798,  -7.3575,  -8.4333, -15.3237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5056, device='cuda:0', dtype=torch.float64)
tensor([ -7.6756,  -7.3500,  -7.3948,  -8.4735, -15.2972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6225, device='cuda:0', dtype=torch.float64)
tensor([ -7.6866,  -7.3368,  -7.4155,  -8.5588, -15.3285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5415, device='cuda:0', dtype=torch.float64)
tensor([ -7.6910,  -7.3094,  -7.4489,  -8.5728, -15.2819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5327, device='cuda:0', dtype=torch.float64)
tensor([ -7.6982,  -7.2827,  -7.4582,  -8.5926, -15.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5309, device='cuda:0', dtype=torch.float64)
tensor([ -7.6833,  -7.2694,  -7.4623,  -8.6134, -15.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5176, device='cuda:0', dtype=torch.float64)
tensor([ -7.6749,  -7.2455,  -7.4745,  -8.6205, -15.0474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6163, device='cuda:0', dtype=torch.float64)
tensor([ -7.6434,  -7.2426,  -7.4629,  -8.6332, -14.9506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5048, device='cuda:0', dtype=torch.float64)
tensor([ -7.6064,  -7.2135,  -7.4593,  -8.6617, -14.8265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5780, device='cuda:0', dtype=torch.float64)
tensor([ -7.5666,  -7.1625,  -7.4736,  -8.6802, -14.6835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4876, device='cuda:0', dtype=torch.float64)
tensor([ -7.5101,  -7.1144,  -7.4782,  -8.6813, -14.5398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4660, device='cuda:0', dtype=torch.float64)
tensor([ -7.4537,  -7.0657,  -7.4877,  -8.6958, -14.3964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6823, device='cuda:0', dtype=torch.float64)
tensor([ -7.4386,  -7.0274,  -7.5211,  -8.7357, -14.3016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4695, device='cuda:0', dtype=torch.float64)
tensor([ -7.4086,  -6.9819,  -7.5530,  -8.7702, -14.1924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4110, device='cuda:0', dtype=torch.float64)
tensor([ -7.3593,  -6.9499,  -7.5869,  -8.8426, -14.1472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4672, device='cuda:0', dtype=torch.float64)
tensor([ -7.3444,  -6.9349,  -7.5958,  -8.9422, -14.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4753, device='cuda:0', dtype=torch.float64)
tensor([ -7.3419,  -6.9154,  -7.6472,  -9.0012, -14.1088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5980, device='cuda:0', dtype=torch.float64)
tensor([ -7.3485,  -6.8833,  -7.6906,  -9.0341, -14.0083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4666, device='cuda:0', dtype=torch.float64)
tensor([ -7.3573,  -6.8637,  -7.7113,  -9.0882, -13.9097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4218, device='cuda:0', dtype=torch.float64)
tensor([ -7.3776,  -6.8430,  -7.7271,  -9.1570, -13.8708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4262, device='cuda:0', dtype=torch.float64)
tensor([ -7.4022,  -6.8275,  -7.7641,  -9.2089, -13.8297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5942, device='cuda:0', dtype=torch.float64)
tensor([ -7.4304,  -6.8040,  -7.8140,  -9.2128, -13.7363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4963, device='cuda:0', dtype=torch.float64)
tensor([ -7.4510,  -6.7908,  -7.8417,  -9.2482, -13.6592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4327, device='cuda:0', dtype=torch.float64)
tensor([ -7.4538,  -6.7868,  -7.8587,  -9.3002, -13.6191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5237, device='cuda:0', dtype=torch.float64)
tensor([ -7.4604,  -6.7687,  -7.8766,  -9.3059, -13.5566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4671, device='cuda:0', dtype=torch.float64)
tensor([ -7.4633,  -6.7274,  -7.8653,  -9.3062, -13.4888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5510, device='cuda:0', dtype=torch.float64)
tensor([ -7.4573,  -6.6876,  -7.8756,  -9.2937, -13.3957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4986, device='cuda:0', dtype=torch.float64)
tensor([ -7.4664,  -6.6439,  -7.8955,  -9.2908, -13.3362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4591, device='cuda:0', dtype=torch.float64)
tensor([ -7.4762,  -6.6075,  -7.8969,  -9.3032, -13.3381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3741, device='cuda:0', dtype=torch.float64)
tensor([ -7.5053,  -6.5604,  -7.9013,  -9.3046, -13.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4121, device='cuda:0', dtype=torch.float64)
tensor([ -7.5171,  -6.5204,  -7.9108,  -9.3113, -13.3541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3706, device='cuda:0', dtype=torch.float64)
tensor([ -7.5215,  -6.5072,  -7.9163,  -9.3618, -13.4131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4359, device='cuda:0', dtype=torch.float64)
tensor([ -7.5140,  -6.4953,  -7.9103,  -9.3916, -13.4803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4404, device='cuda:0', dtype=torch.float64)
tensor([ -7.4961,  -6.4866,  -7.8953,  -9.4509, -13.5404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4325, device='cuda:0', dtype=torch.float64)
tensor([ -7.4861,  -6.4637,  -7.8579,  -9.4736, -13.5566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4111, device='cuda:0', dtype=torch.float64)
tensor([ -7.4700,  -6.4491,  -7.8185,  -9.4939, -13.5664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4636, device='cuda:0', dtype=torch.float64)
tensor([ -7.4510,  -6.4461,  -7.7720,  -9.5293, -13.6301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3939, device='cuda:0', dtype=torch.float64)
tensor([ -7.4345,  -6.4518,  -7.7140,  -9.6021, -13.7658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3663, device='cuda:0', dtype=torch.float64)
tensor([ -7.4165,  -6.4561,  -7.6588,  -9.6688, -13.9092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4697, device='cuda:0', dtype=torch.float64)
tensor([ -7.4011,  -6.4663,  -7.6182,  -9.7424, -14.0480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4776, device='cuda:0', dtype=torch.float64)
tensor([ -7.3802,  -6.4739,  -7.5791,  -9.8030, -14.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3918, device='cuda:0', dtype=torch.float64)
tensor([ -7.3803,  -6.4885,  -7.5575,  -9.8767, -14.2755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4209, device='cuda:0', dtype=torch.float64)
tensor([ -7.3729,  -6.4927,  -7.5450,  -9.9353, -14.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4155, device='cuda:0', dtype=torch.float64)
tensor([ -7.3667,  -6.5058,  -7.5408, -10.0280, -14.4090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3991, device='cuda:0', dtype=torch.float64)
tensor([ -7.3708,  -6.5182,  -7.5494, -10.1341, -14.5352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3994, device='cuda:0', dtype=torch.float64)
tensor([ -7.3801,  -6.5448,  -7.5659, -10.2556, -14.7186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4430, device='cuda:0', dtype=torch.float64)
tensor([ -7.3964,  -6.5760,  -7.6000, -10.3952, -14.9077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5446, device='cuda:0', dtype=torch.float64)
tensor([ -7.3971,  -6.5881,  -7.6460, -10.5275, -15.0212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3815, device='cuda:0', dtype=torch.float64)
tensor([ -7.4190,  -6.6016,  -7.6892, -10.6593, -15.1436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4634, device='cuda:0', dtype=torch.float64)
tensor([ -7.4314,  -6.5994,  -7.7067, -10.7085, -15.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3187, device='cuda:0', dtype=torch.float64)
tensor([ -7.4421,  -6.6029,  -7.7033, -10.7475, -15.1959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3752, device='cuda:0', dtype=torch.float64)
tensor([ -7.4572,  -6.6040,  -7.6902, -10.7531, -15.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3727, device='cuda:0', dtype=torch.float64)
tensor([ -7.4673,  -6.6183,  -7.6971, -10.7561, -15.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3736, device='cuda:0', dtype=torch.float64)
tensor([ -7.4519,  -6.6249,  -7.6919, -10.7576, -15.2412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2928, device='cuda:0', dtype=torch.float64)
tensor([ -7.4296,  -6.6372,  -7.6857, -10.7405, -15.2789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3115, device='cuda:0', dtype=torch.float64)
tensor([ -7.3921,  -6.6583,  -7.6878, -10.7135, -15.2815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3896, device='cuda:0', dtype=torch.float64)
tensor([ -7.3538,  -6.6821,  -7.6801, -10.7134, -15.2886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3266, device='cuda:0', dtype=torch.float64)
tensor([ -7.3213,  -6.6959,  -7.6668, -10.7233, -15.2771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3588, device='cuda:0', dtype=torch.float64)
tensor([ -7.2930,  -6.7182,  -7.6594, -10.7099, -15.2247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3258, device='cuda:0', dtype=torch.float64)
tensor([ -7.2604,  -6.7172,  -7.6569, -10.6792, -15.1353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2846, device='cuda:0', dtype=torch.float64)
tensor([ -7.2469,  -6.7348,  -7.6590, -10.6887, -15.0795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3302, device='cuda:0', dtype=torch.float64)
tensor([ -7.2248,  -6.7382,  -7.6475, -10.6754, -15.0043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3269, device='cuda:0', dtype=torch.float64)
tensor([ -7.2103,  -6.7502,  -7.6225, -10.6555, -14.9194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3382, device='cuda:0', dtype=torch.float64)
tensor([ -7.1885,  -6.7705,  -7.5957, -10.6232, -14.8196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3207, device='cuda:0', dtype=torch.float64)
tensor([ -7.1851,  -6.7915,  -7.5976, -10.6237, -14.7421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3717, device='cuda:0', dtype=torch.float64)
tensor([ -7.1621,  -6.8034,  -7.5969, -10.6038, -14.6617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2596, device='cuda:0', dtype=torch.float64)
tensor([ -7.1398,  -6.8104,  -7.5719, -10.5974, -14.6201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3510, device='cuda:0', dtype=torch.float64)
tensor([ -7.1241,  -6.8090,  -7.5562, -10.5683, -14.5427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2959, device='cuda:0', dtype=torch.float64)
tensor([ -7.1114,  -6.7980,  -7.5419, -10.5304, -14.4335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3419, device='cuda:0', dtype=torch.float64)
tensor([ -7.0942,  -6.7995,  -7.5481, -10.5148, -14.3089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3115, device='cuda:0', dtype=torch.float64)
tensor([ -7.0736,  -6.8064,  -7.5745, -10.5183, -14.2277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3404, device='cuda:0', dtype=torch.float64)
tensor([ -7.0461,  -6.8147,  -7.5897, -10.5182, -14.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3384, device='cuda:0', dtype=torch.float64)
tensor([ -7.0231,  -6.8371,  -7.6041, -10.5337, -14.0998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3377, device='cuda:0', dtype=torch.float64)
tensor([ -6.9958,  -6.8759,  -7.6047, -10.5435, -14.0583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3567, device='cuda:0', dtype=torch.float64)
tensor([ -6.9667,  -6.9306,  -7.6231, -10.5578, -14.0047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2948, device='cuda:0', dtype=torch.float64)
tensor([ -6.9164,  -6.9695,  -7.6222, -10.5795, -13.9270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3093, device='cuda:0', dtype=torch.float64)
tensor([ -6.8589,  -7.0002,  -7.6226, -10.5866, -13.8529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3490, device='cuda:0', dtype=torch.float64)
tensor([ -6.8009,  -7.0292,  -7.5915, -10.5679, -13.7798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2781, device='cuda:0', dtype=torch.float64)
tensor([ -6.7499,  -7.0427,  -7.5535, -10.5285, -13.6983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2592, device='cuda:0', dtype=torch.float64)
tensor([ -6.7087,  -7.0496,  -7.5352, -10.4856, -13.6235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3240, device='cuda:0', dtype=torch.float64)
tensor([ -6.6676,  -7.0534,  -7.5193, -10.4484, -13.5802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2642, device='cuda:0', dtype=torch.float64)
tensor([ -6.6283,  -7.0528,  -7.5098, -10.3931, -13.5347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2924, device='cuda:0', dtype=torch.float64)
tensor([ -6.5761,  -7.0459,  -7.4971, -10.3011, -13.4488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3379, device='cuda:0', dtype=torch.float64)
tensor([ -6.5188,  -7.0269,  -7.4796, -10.1862, -13.3438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2509, device='cuda:0', dtype=torch.float64)
tensor([ -6.4602,  -7.0179,  -7.4631, -10.0760, -13.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2638, device='cuda:0', dtype=torch.float64)
tensor([ -6.4144,  -7.0303,  -7.4564,  -9.9932, -13.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2734, device='cuda:0', dtype=torch.float64)
tensor([ -6.3848,  -7.0366,  -7.4571,  -9.9342, -13.0388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2663, device='cuda:0', dtype=torch.float64)
tensor([ -6.3499,  -7.0487,  -7.4488,  -9.8724, -12.9499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3167, device='cuda:0', dtype=torch.float64)
tensor([ -6.3177,  -7.0331,  -7.4554,  -9.8107, -12.8673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2640, device='cuda:0', dtype=torch.float64)
tensor([ -6.2877,  -7.0110,  -7.4655,  -9.7687, -12.7966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2402, device='cuda:0', dtype=torch.float64)
tensor([ -6.2637,  -6.9796,  -7.4788,  -9.7208, -12.7269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2515, device='cuda:0', dtype=torch.float64)
tensor([ -6.2390,  -6.9444,  -7.4914,  -9.6830, -12.6930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2939, device='cuda:0', dtype=torch.float64)
tensor([ -6.2166,  -6.9141,  -7.4964,  -9.6646, -12.6937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2810, device='cuda:0', dtype=torch.float64)
tensor([ -6.1838,  -6.8652,  -7.4908,  -9.6372, -12.6592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2557, device='cuda:0', dtype=torch.float64)
tensor([ -6.1504,  -6.8196,  -7.4766,  -9.5862, -12.6100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2630, device='cuda:0', dtype=torch.float64)
tensor([ -6.1248,  -6.7788,  -7.4710,  -9.5502, -12.5642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2608, device='cuda:0', dtype=torch.float64)
tensor([ -6.1028,  -6.7488,  -7.4808,  -9.5268, -12.5262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2230, device='cuda:0', dtype=torch.float64)
tensor([ -6.0790,  -6.7090,  -7.4810,  -9.4819, -12.4662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2160, device='cuda:0', dtype=torch.float64)
tensor([ -6.0607,  -6.6848,  -7.4922,  -9.4352, -12.3859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2198, device='cuda:0', dtype=torch.float64)
tensor([ -6.0456,  -6.6627,  -7.5067,  -9.3951, -12.3281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2202, device='cuda:0', dtype=torch.float64)
tensor([ -6.0355,  -6.6403,  -7.5274,  -9.3728, -12.2862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2351, device='cuda:0', dtype=torch.float64)
tensor([ -6.0187,  -6.6314,  -7.5487,  -9.3389, -12.2379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3114, device='cuda:0', dtype=torch.float64)
tensor([ -6.0035,  -6.6295,  -7.5619,  -9.3059, -12.1918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2285, device='cuda:0', dtype=torch.float64)
tensor([ -5.9951,  -6.6453,  -7.5836,  -9.2853, -12.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2589, device='cuda:0', dtype=torch.float64)
tensor([ -5.9881,  -6.6573,  -7.5951,  -9.2723, -12.1261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2604, device='cuda:0', dtype=torch.float64)
tensor([ -5.9802,  -6.6634,  -7.5896,  -9.2479, -12.0828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2498, device='cuda:0', dtype=torch.float64)
tensor([ -5.9760,  -6.6724,  -7.6097,  -9.2249, -12.0316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2622, device='cuda:0', dtype=torch.float64)
tensor([ -5.9673,  -6.6841,  -7.6308,  -9.2058, -11.9770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2611, device='cuda:0', dtype=torch.float64)
tensor([ -5.9528,  -6.6994,  -7.6571,  -9.1984, -11.9383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2161, device='cuda:0', dtype=torch.float64)
tensor([ -5.9353,  -6.7149,  -7.6784,  -9.2051, -11.9069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2279, device='cuda:0', dtype=torch.float64)
tensor([ -5.9159,  -6.7355,  -7.6857,  -9.2033, -11.8763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2431, device='cuda:0', dtype=torch.float64)
tensor([ -5.8934,  -6.7387,  -7.6869,  -9.1924, -11.8424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2153, device='cuda:0', dtype=torch.float64)
tensor([ -5.8720,  -6.7371,  -7.6866,  -9.1720, -11.7902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2546, device='cuda:0', dtype=torch.float64)
tensor([ -5.8508,  -6.7192,  -7.6725,  -9.1615, -11.7291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2067, device='cuda:0', dtype=torch.float64)
tensor([ -5.8354,  -6.7061,  -7.6532,  -9.1584, -11.6852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2469, device='cuda:0', dtype=torch.float64)
tensor([ -5.8248,  -6.6890,  -7.6265,  -9.1491, -11.6318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2113, device='cuda:0', dtype=torch.float64)
tensor([ -5.8167,  -6.6709,  -7.5987,  -9.1461, -11.5895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2250, device='cuda:0', dtype=torch.float64)
tensor([ -5.8079,  -6.6534,  -7.5653,  -9.1439, -11.5395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2118, device='cuda:0', dtype=torch.float64)
tensor([ -5.7999,  -6.6364,  -7.5419,  -9.1443, -11.5130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2043, device='cuda:0', dtype=torch.float64)
tensor([ -5.7955,  -6.6159,  -7.5239,  -9.1480, -11.4914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2058, device='cuda:0', dtype=torch.float64)
tensor([ -5.7950,  -6.5958,  -7.5014,  -9.1373, -11.4536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1931, device='cuda:0', dtype=torch.float64)
tensor([ -5.7958,  -6.5786,  -7.4804,  -9.1292, -11.4152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1733, device='cuda:0', dtype=torch.float64)
tensor([ -5.7937,  -6.5682,  -7.4580,  -9.1231, -11.3866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1768, device='cuda:0', dtype=torch.float64)
tensor([ -5.7861,  -6.5614,  -7.4318,  -9.1014, -11.3544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2011, device='cuda:0', dtype=torch.float64)
tensor([ -5.7782,  -6.5618,  -7.4088,  -9.0770, -11.3182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1714, device='cuda:0', dtype=torch.float64)
tensor([ -5.7710,  -6.5572,  -7.3888,  -9.0518, -11.2828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1898, device='cuda:0', dtype=torch.float64)
tensor([ -5.7608,  -6.5530,  -7.3692,  -9.0367, -11.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1742, device='cuda:0', dtype=torch.float64)
tensor([ -5.7462,  -6.5486,  -7.3440,  -9.0070, -11.2134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1899, device='cuda:0', dtype=torch.float64)
tensor([ -5.7336,  -6.5422,  -7.3216,  -8.9769, -11.1771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1516, device='cuda:0', dtype=torch.float64)
tensor([ -5.7252,  -6.5392,  -7.2997,  -8.9538, -11.1478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1577, device='cuda:0', dtype=torch.float64)
tensor([ -5.7139,  -6.5304,  -7.2774,  -8.9217, -11.1081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1821, device='cuda:0', dtype=torch.float64)
tensor([ -5.7053,  -6.5235,  -7.2483,  -8.8907, -11.0737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2164, device='cuda:0', dtype=torch.float64)
tensor([ -5.6915,  -6.5156,  -7.2169,  -8.8379, -11.0177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2071, device='cuda:0', dtype=torch.float64)
tensor([ -5.6759,  -6.5055,  -7.1740,  -8.7893, -10.9583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1906, device='cuda:0', dtype=torch.float64)
tensor([ -5.6638,  -6.4874,  -7.1390,  -8.7558, -10.9042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1950, device='cuda:0', dtype=torch.float64)
tensor([ -5.6562,  -6.4706,  -7.1089,  -8.7354, -10.8478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1516, device='cuda:0', dtype=torch.float64)
tensor([ -5.6496,  -6.4611,  -7.0816,  -8.7308, -10.8134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1445, device='cuda:0', dtype=torch.float64)
tensor([ -5.6442,  -6.4578,  -7.0616,  -8.7238, -10.7867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1805, device='cuda:0', dtype=torch.float64)
tensor([ -5.6366,  -6.4615,  -7.0459,  -8.7153, -10.7652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1835, device='cuda:0', dtype=torch.float64)
tensor([ -5.6313,  -6.4660,  -7.0325,  -8.7194, -10.7515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1780, device='cuda:0', dtype=torch.float64)
tensor([ -5.6250,  -6.4743,  -7.0197,  -8.7376, -10.7562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1411, device='cuda:0', dtype=torch.float64)
tensor([ -5.6166,  -6.4770,  -7.0085,  -8.7416, -10.7531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1681, device='cuda:0', dtype=torch.float64)
tensor([ -5.6126,  -6.4848,  -7.0013,  -8.7456, -10.7500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1474, device='cuda:0', dtype=torch.float64)
tensor([ -5.6078,  -6.4922,  -6.9966,  -8.7481, -10.7556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1752, device='cuda:0', dtype=torch.float64)
tensor([ -5.6015,  -6.4834,  -6.9844,  -8.7400, -10.7466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2119, device='cuda:0', dtype=torch.float64)
tensor([ -5.5897,  -6.4738,  -6.9779,  -8.7044, -10.7169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1786, device='cuda:0', dtype=torch.float64)
tensor([ -5.5836,  -6.4764,  -6.9743,  -8.6750, -10.6960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1853, device='cuda:0', dtype=torch.float64)
tensor([ -5.5763,  -6.4762,  -6.9610,  -8.6523, -10.6716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1506, device='cuda:0', dtype=torch.float64)
tensor([ -5.5682,  -6.4761,  -6.9481,  -8.6363, -10.6620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1740, device='cuda:0', dtype=torch.float64)
tensor([ -5.5579,  -6.4696,  -6.9244,  -8.6147, -10.6529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1664, device='cuda:0', dtype=torch.float64)
tensor([ -5.5542,  -6.4616,  -6.9072,  -8.6111, -10.6422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1681, device='cuda:0', dtype=torch.float64)
tensor([ -5.5479,  -6.4506,  -6.8904,  -8.6017, -10.6363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1678, device='cuda:0', dtype=torch.float64)
tensor([ -5.5411,  -6.4469,  -6.8726,  -8.5994, -10.6441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1611, device='cuda:0', dtype=torch.float64)
tensor([ -5.5298,  -6.4454,  -6.8596,  -8.5873, -10.6463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1587, device='cuda:0', dtype=torch.float64)
tensor([ -5.5214,  -6.4412,  -6.8465,  -8.5767, -10.6447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1665, device='cuda:0', dtype=torch.float64)
tensor([ -5.5104,  -6.4363,  -6.8368,  -8.5657, -10.6339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1635, device='cuda:0', dtype=torch.float64)
tensor([ -5.5011,  -6.4261,  -6.8317,  -8.5559, -10.6085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1505, device='cuda:0', dtype=torch.float64)
tensor([ -5.4979,  -6.4204,  -6.8296,  -8.5452, -10.5910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1706, device='cuda:0', dtype=torch.float64)
tensor([ -5.4943,  -6.4201,  -6.8272,  -8.5289, -10.5771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1332, device='cuda:0', dtype=torch.float64)
tensor([ -5.4926,  -6.4174,  -6.8266,  -8.5056, -10.5624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1517, device='cuda:0', dtype=torch.float64)
tensor([ -5.4924,  -6.4113,  -6.8223,  -8.4876, -10.5480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1502, device='cuda:0', dtype=torch.float64)
tensor([ -5.4902,  -6.4026,  -6.8191,  -8.4693, -10.5340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1439, device='cuda:0', dtype=torch.float64)
tensor([ -5.4849,  -6.3859,  -6.8110,  -8.4449, -10.5145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1533, device='cuda:0', dtype=torch.float64)
tensor([ -5.4814,  -6.3678,  -6.8080,  -8.4321, -10.5023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1565, device='cuda:0', dtype=torch.float64)
tensor([ -5.4707,  -6.3479,  -6.8085,  -8.4046, -10.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1764, device='cuda:0', dtype=torch.float64)
tensor([ -5.4623,  -6.3273,  -6.8174,  -8.3648, -10.4484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1568, device='cuda:0', dtype=torch.float64)
tensor([ -5.4470,  -6.3026,  -6.8163,  -8.3264, -10.4030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1467, device='cuda:0', dtype=torch.float64)
tensor([ -5.4279,  -6.2796,  -6.8133,  -8.2930, -10.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1323, device='cuda:0', dtype=torch.float64)
tensor([ -5.4115,  -6.2583,  -6.8096,  -8.2668, -10.3113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1665, device='cuda:0', dtype=torch.float64)
tensor([ -5.3919,  -6.2323,  -6.8045,  -8.2454, -10.2779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1693, device='cuda:0', dtype=torch.float64)
tensor([ -5.3761,  -6.2030,  -6.7973,  -8.2212, -10.2447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1351, device='cuda:0', dtype=torch.float64)
tensor([ -5.3640,  -6.1758,  -6.7874,  -8.2046, -10.2253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1491, device='cuda:0', dtype=torch.float64)
tensor([ -5.3525,  -6.1453,  -6.7791,  -8.1763, -10.2067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1791, device='cuda:0', dtype=torch.float64)
tensor([ -5.3328,  -6.1194,  -6.7693,  -8.1445, -10.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1564, device='cuda:0', dtype=torch.float64)
tensor([ -5.3125,  -6.0870,  -6.7589,  -8.1119, -10.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1711, device='cuda:0', dtype=torch.float64)
tensor([ -5.2910,  -6.0546,  -6.7430,  -8.0708, -10.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1644, device='cuda:0', dtype=torch.float64)
tensor([ -5.2730,  -6.0342,  -6.7271,  -8.0362, -10.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1538, device='cuda:0', dtype=torch.float64)
tensor([ -5.2538,  -6.0075,  -6.7133,  -7.9904, -10.0433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1335, device='cuda:0', dtype=torch.float64)
tensor([-5.2370, -5.9807, -6.7047, -7.9442, -9.9960], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_101343.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(137.8053, device='cuda:0', dtype=torch.float64)
tensor([-2.2557, -4.4507, -3.0326, -6.9965, -3.6976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(97.5352, device='cuda:0', dtype=torch.float64)
tensor([-2.4077, -4.9498, -3.0172, -4.2279, -3.8879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(90.9257, device='cuda:0', dtype=torch.float64)
tensor([-2.4209, -5.1269, -3.0246, -3.8605, -4.4922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(58.9596, device='cuda:0', dtype=torch.float64)
tensor([-2.4937, -4.3627, -2.9898, -3.4999, -4.8477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(57.3737, device='cuda:0', dtype=torch.float64)
tensor([-2.4312, -4.9517, -2.9411, -5.1601, -4.9907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(71.0395, device='cuda:0', dtype=torch.float64)
tensor([-2.1522, -4.5720, -2.8463, -5.5557, -5.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(69.6012, device='cuda:0', dtype=torch.float64)
tensor([-1.8999, -3.5155, -2.7825, -3.8255, -4.6581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.7845, device='cuda:0', dtype=torch.float64)
tensor([-1.7580, -3.2285, -2.8212, -3.9429, -4.0511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.2983, device='cuda:0', dtype=torch.float64)
tensor([-1.7305, -3.6023, -2.9288, -4.2254, -3.6554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.1225, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -3.8362, -3.0383, -4.4305, -3.5033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.0074, device='cuda:0', dtype=torch.float64)
tensor([-2.0893, -3.5305, -3.1374, -4.4940, -3.4670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.6073, device='cuda:0', dtype=torch.float64)
tensor([-1.9325, -3.1292, -3.2181, -4.2586, -3.3878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.9046, device='cuda:0', dtype=torch.float64)
tensor([-1.6733, -2.8775, -3.2885, -3.8961, -3.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.0745, device='cuda:0', dtype=torch.float64)
tensor([-1.5967, -2.7379, -3.4023, -3.6636, -3.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.1186, device='cuda:0', dtype=torch.float64)
tensor([-1.6056, -2.7083, -3.3738, -3.5081, -3.1868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.7341, device='cuda:0', dtype=torch.float64)
tensor([-1.6696, -2.7554, -3.2757, -3.3801, -3.2577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.1282, device='cuda:0', dtype=torch.float64)
tensor([-1.7789, -2.8729, -3.3002, -3.2683, -3.3939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.2296, device='cuda:0', dtype=torch.float64)
tensor([-1.9092, -3.0644, -3.4025, -3.1668, -3.5028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.8176, device='cuda:0', dtype=torch.float64)
tensor([-2.0265, -3.2320, -3.4588, -3.0817, -3.5230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.8227, device='cuda:0', dtype=torch.float64)
tensor([-2.1162, -3.2368, -3.4081, -3.0253, -3.5020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.2801, device='cuda:0', dtype=torch.float64)
tensor([-2.1788, -3.1736, -3.2984, -2.9952, -3.4848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6742, device='cuda:0', dtype=torch.float64)
tensor([-2.2111, -3.1173, -3.1893, -2.9835, -3.4469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.0044, device='cuda:0', dtype=torch.float64)
tensor([-2.2081, -3.0525, -3.1046, -2.9900, -3.3730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.7257, device='cuda:0', dtype=torch.float64)
tensor([-2.1623, -2.9837, -3.0484, -3.0175, -3.2831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6439, device='cuda:0', dtype=torch.float64)
tensor([-2.0730, -2.9436, -3.0199, -3.0627, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.7997, device='cuda:0', dtype=torch.float64)
tensor([-1.9607, -2.9617, -3.0141, -3.1156, -3.1266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.7967, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -3.0025, -3.0223, -3.1682, -3.0714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2373, device='cuda:0', dtype=torch.float64)
tensor([-1.7656, -2.9751, -3.0348, -3.2143, -3.0374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.5394, device='cuda:0', dtype=torch.float64)
tensor([-1.7030, -2.8632, -3.0426, -3.2477, -3.0268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6613, device='cuda:0', dtype=torch.float64)
tensor([-1.6654, -2.7397, -3.0407, -3.2636, -3.0383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.8504, device='cuda:0', dtype=torch.float64)
tensor([-1.6510, -2.6514, -3.0266, -3.2609, -3.0683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2014, device='cuda:0', dtype=torch.float64)
tensor([-1.6578, -2.5991, -3.0010, -3.2414, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1164, device='cuda:0', dtype=torch.float64)
tensor([-1.6826, -2.5762, -2.9676, -3.2106, -3.1697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9592, device='cuda:0', dtype=torch.float64)
tensor([-1.7213, -2.5766, -2.9306, -3.1756, -3.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0269, device='cuda:0', dtype=torch.float64)
tensor([-1.7684, -2.5947, -2.8936, -3.1430, -3.2920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4846, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6239, -2.8597, -3.1179, -3.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7689, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.6571, -2.8298, -3.1015, -3.3742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4522, device='cuda:0', dtype=torch.float64)
tensor([-1.8941, -2.6862, -2.8038, -3.0924, -3.3847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8082, device='cuda:0', dtype=torch.float64)
tensor([-1.9126, -2.7048, -2.7812, -3.0884, -3.3747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6816, device='cuda:0', dtype=torch.float64)
tensor([-1.9165, -2.7105, -2.7627, -3.0884, -3.3498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1542, device='cuda:0', dtype=torch.float64)
tensor([-1.9083, -2.7060, -2.7498, -3.0923, -3.3179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5469, device='cuda:0', dtype=torch.float64)
tensor([-1.8920, -2.6969, -2.7432, -3.1005, -3.2856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9204, device='cuda:0', dtype=torch.float64)
tensor([-1.8720, -2.6879, -2.7421, -3.1126, -3.2574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7072, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.6800, -2.7453, -3.1274, -3.2361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7673, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.6735, -2.7511, -3.1428, -3.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7628, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6686, -2.7582, -3.1572, -3.2183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6605, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6655, -2.7649, -3.1691, -3.2203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5174, device='cuda:0', dtype=torch.float64)
tensor([-1.8151, -2.6643, -2.7699, -3.1777, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3693, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6646, -2.7716, -3.1824, -3.2347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2427, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6662, -2.7697, -3.1837, -3.2419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2193, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6681, -2.7648, -3.1821, -3.2468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3079, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6696, -2.7586, -3.1786, -3.2482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2243, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6697, -2.7531, -3.1749, -3.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0769, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6680, -2.7503, -3.1727, -3.2422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8208, device='cuda:0', dtype=torch.float64)
tensor([-1.8121, -2.6642, -2.7515, -3.1729, -3.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7358, device='cuda:0', dtype=torch.float64)
tensor([-1.8059, -2.6583, -2.7564, -3.1758, -3.2311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7765, device='cuda:0', dtype=torch.float64)
tensor([-1.7988, -2.6507, -2.7649, -3.1812, -3.2269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7695, device='cuda:0', dtype=torch.float64)
tensor([-1.7912, -2.6417, -2.7762, -3.1886, -3.2250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7192, device='cuda:0', dtype=torch.float64)
tensor([-1.7848, -2.6329, -2.7889, -3.1968, -3.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6621, device='cuda:0', dtype=torch.float64)
tensor([-1.7806, -2.6249, -2.8014, -3.2049, -3.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5492, device='cuda:0', dtype=torch.float64)
tensor([-1.7790, -2.6188, -2.8130, -3.2122, -3.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5132, device='cuda:0', dtype=torch.float64)
tensor([-1.7804, -2.6148, -2.8225, -3.2179, -3.2366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5597, device='cuda:0', dtype=torch.float64)
tensor([-1.7845, -2.6134, -2.8290, -3.2214, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4804, device='cuda:0', dtype=torch.float64)
tensor([-1.7908, -2.6143, -2.8324, -3.2221, -3.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4094, device='cuda:0', dtype=torch.float64)
tensor([-1.7988, -2.6174, -2.8322, -3.2197, -3.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2314, device='cuda:0', dtype=torch.float64)
tensor([-1.8076, -2.6222, -2.8289, -3.2141, -3.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1678, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6284, -2.8228, -3.2057, -3.2388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0891, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6355, -2.8149, -3.1957, -3.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0882, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.6420, -2.8067, -3.1850, -3.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1318, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.6476, -2.7991, -3.1742, -3.2344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1776, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.6518, -2.7930, -3.1638, -3.2347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1879, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.6542, -2.7886, -3.1550, -3.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0802, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6545, -2.7863, -3.1483, -3.2360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9904, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.6530, -2.7859, -3.1437, -3.2360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9262, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.6497, -2.7869, -3.1416, -3.2347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9196, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6450, -2.7886, -3.1414, -3.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9353, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.6394, -2.7907, -3.1429, -3.2274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9247, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6333, -2.7930, -3.1460, -3.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8963, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6275, -2.7951, -3.1511, -3.2151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8410, device='cuda:0', dtype=torch.float64)
tensor([-1.8146, -2.6224, -2.7972, -3.1566, -3.2086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8176, device='cuda:0', dtype=torch.float64)
tensor([-1.8083, -2.6185, -2.7987, -3.1620, -3.2028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8048, device='cuda:0', dtype=torch.float64)
tensor([-1.8041, -2.6158, -2.7999, -3.1669, -3.1983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7965, device='cuda:0', dtype=torch.float64)
tensor([-1.8022, -2.6142, -2.8009, -3.1709, -3.1957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7774, device='cuda:0', dtype=torch.float64)
tensor([-1.8028, -2.6140, -2.8010, -3.1731, -3.1949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7776, device='cuda:0', dtype=torch.float64)
tensor([-1.8055, -2.6153, -2.8002, -3.1739, -3.1960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8034, device='cuda:0', dtype=torch.float64)
tensor([-1.8101, -2.6179, -2.7992, -3.1739, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7338, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6213, -2.7979, -3.1723, -3.2011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7130, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6255, -2.7963, -3.1696, -3.2035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6645, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6304, -2.7943, -3.1660, -3.2052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6747, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6357, -2.7920, -3.1621, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6665, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6406, -2.7902, -3.1584, -3.2056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6686, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.6449, -2.7885, -3.1551, -3.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6912, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6484, -2.7873, -3.1525, -3.2014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6976, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.6515, -2.7863, -3.1510, -3.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6346, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6537, -2.7860, -3.1500, -3.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5970, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6550, -2.7864, -3.1502, -3.1924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6678, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6556, -2.7870, -3.1514, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6162, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.6553, -2.7884, -3.1529, -3.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6156, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6540, -2.7907, -3.1547, -3.1893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6167, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6522, -2.7932, -3.1565, -3.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6345, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6505, -2.7956, -3.1581, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6980, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6489, -2.7976, -3.1589, -3.1904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6647, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6480, -2.7988, -3.1593, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6350, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6469, -2.8000, -3.1601, -3.1912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5937, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6462, -2.8011, -3.1612, -3.1915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6379, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6465, -2.8021, -3.1611, -3.1917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6238, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6469, -2.8021, -3.1611, -3.1912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6119, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6477, -2.8017, -3.1613, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6242, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6482, -2.8009, -3.1621, -3.1901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6354, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6489, -2.8003, -3.1627, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6703, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6496, -2.7993, -3.1636, -3.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5843, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6508, -2.7983, -3.1640, -3.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7659, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6516, -2.7983, -3.1638, -3.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6222, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6525, -2.7977, -3.1635, -3.1904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6406, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6524, -2.7968, -3.1621, -3.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6563, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6522, -2.7956, -3.1606, -3.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6292, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6521, -2.7947, -3.1594, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5835, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6517, -2.7939, -3.1584, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5884, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6513, -2.7937, -3.1582, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5791, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.6506, -2.7937, -3.1586, -3.1813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6126, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6497, -2.7938, -3.1591, -3.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5899, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6491, -2.7936, -3.1598, -3.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5597, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6487, -2.7940, -3.1609, -3.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5579, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6494, -2.7941, -3.1610, -3.1812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5730, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6503, -2.7942, -3.1617, -3.1834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5902, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6509, -2.7944, -3.1629, -3.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5480, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.6511, -2.7943, -3.1640, -3.1875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6775, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.6519, -2.7935, -3.1643, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6295, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.6531, -2.7929, -3.1644, -3.1877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5292, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6538, -2.7921, -3.1638, -3.1873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6534, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.6545, -2.7918, -3.1633, -3.1873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6128, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6540, -2.7923, -3.1634, -3.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7140, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6521, -2.7936, -3.1636, -3.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5436, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6500, -2.7948, -3.1639, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6076, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6485, -2.7959, -3.1643, -3.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6203, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.6471, -2.7958, -3.1636, -3.1827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6573, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6456, -2.7954, -3.1636, -3.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6302, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.6444, -2.7942, -3.1639, -3.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7108, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.6448, -2.7921, -3.1640, -3.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5834, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6460, -2.7896, -3.1627, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6349, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6477, -2.7874, -3.1618, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5271, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6495, -2.7865, -3.1608, -3.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6297, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6519, -2.7861, -3.1598, -3.1779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6186, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.6544, -2.7866, -3.1584, -3.1813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5818, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.6566, -2.7875, -3.1572, -3.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7335, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.6586, -2.7891, -3.1549, -3.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5942, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6604, -2.7912, -3.1538, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6312, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6620, -2.7936, -3.1532, -3.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6419, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6629, -2.7952, -3.1531, -3.1915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4704, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.6623, -2.7967, -3.1542, -3.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6480, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.6599, -2.7981, -3.1565, -3.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6595, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.6572, -2.7996, -3.1581, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7017, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.6542, -2.7995, -3.1606, -3.1891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6853, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.6509, -2.7993, -3.1632, -3.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6706, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.6480, -2.7981, -3.1653, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6552, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6464, -2.7963, -3.1670, -3.1921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5994, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6464, -2.7933, -3.1669, -3.1918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7100, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6471, -2.7904, -3.1660, -3.1909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5809, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6478, -2.7880, -3.1657, -3.1887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5585, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6493, -2.7871, -3.1653, -3.1873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6153, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.6511, -2.7866, -3.1654, -3.1868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7160, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6525, -2.7864, -3.1650, -3.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6675, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6532, -2.7871, -3.1642, -3.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6555, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.6535, -2.7887, -3.1626, -3.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7024, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.6534, -2.7906, -3.1594, -3.1827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6780, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.6548, -2.7924, -3.1564, -3.1820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5542, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6558, -2.7934, -3.1539, -3.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6959, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6554, -2.7946, -3.1522, -3.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7212, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6554, -2.7961, -3.1505, -3.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7727, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6549, -2.7974, -3.1491, -3.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6530, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.6554, -2.7976, -3.1494, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6790, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6558, -2.7977, -3.1515, -3.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5752, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.6565, -2.7976, -3.1544, -3.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6069, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6570, -2.7976, -3.1579, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5787, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.6573, -2.7980, -3.1607, -3.1866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6579, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6588, -2.7988, -3.1629, -3.1855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6009, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6597, -2.8001, -3.1647, -3.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6547, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6595, -2.8010, -3.1668, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5644, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.6584, -2.8028, -3.1680, -3.1815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7178, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6564, -2.8051, -3.1688, -3.1799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6710, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.6549, -2.8065, -3.1694, -3.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5743, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6527, -2.8080, -3.1703, -3.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7036, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6507, -2.8096, -3.1697, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5666, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6495, -2.8108, -3.1695, -3.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7325, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.6502, -2.8116, -3.1693, -3.1813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6271, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6513, -2.8108, -3.1679, -3.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6516, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.6525, -2.8086, -3.1658, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6809, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6540, -2.8052, -3.1640, -3.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6813, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.6565, -2.8027, -3.1620, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6382, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.6590, -2.8013, -3.1602, -3.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6584, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6612, -2.8000, -3.1586, -3.1881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6843, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.6630, -2.7984, -3.1579, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7727, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.6641, -2.7973, -3.1585, -3.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8595, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.6636, -2.7974, -3.1610, -3.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6879, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6631, -2.7977, -3.1631, -3.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7027, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.6622, -2.7985, -3.1654, -3.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7038, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.6614, -2.7995, -3.1676, -3.1873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6335, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.6608, -2.7995, -3.1677, -3.1866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8528, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.6605, -2.7996, -3.1684, -3.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7325, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6592, -2.8007, -3.1699, -3.1837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9263, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.6597, -2.8028, -3.1703, -3.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6659, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6599, -2.8047, -3.1688, -3.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8389, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6591, -2.8055, -3.1657, -3.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7542, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.6603, -2.8043, -3.1621, -3.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7399, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.6607, -2.8031, -3.1588, -3.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8802, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.6603, -2.8016, -3.1575, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6736, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.6611, -2.7987, -3.1565, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7188, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.6620, -2.7955, -3.1552, -3.1674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7953, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6632, -2.7916, -3.1547, -3.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6633, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.6638, -2.7870, -3.1553, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7032, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.6651, -2.7832, -3.1570, -3.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7168, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.6668, -2.7795, -3.1586, -3.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8722, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.6662, -2.7778, -3.1597, -3.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8208, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.6642, -2.7784, -3.1601, -3.1786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7441, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.6619, -2.7812, -3.1614, -3.1798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6555, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.6595, -2.7834, -3.1625, -3.1822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7448, device='cuda:0', dtype=torch.float64)
tensor([-1.8598, -2.6565, -2.7877, -3.1640, -3.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7754, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.6547, -2.7925, -3.1651, -3.1893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7684, device='cuda:0', dtype=torch.float64)
tensor([-1.8606, -2.6546, -2.7961, -3.1654, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7126, device='cuda:0', dtype=torch.float64)
tensor([-1.8602, -2.6529, -2.7992, -3.1658, -3.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6456, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.6518, -2.8019, -3.1652, -3.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7465, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.6539, -2.8031, -3.1639, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6827, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.6578, -2.8019, -3.1610, -3.1973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6597, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.6611, -2.8004, -3.1586, -3.1957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7674, device='cuda:0', dtype=torch.float64)
tensor([-1.8606, -2.6644, -2.7982, -3.1559, -3.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9088, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.6676, -2.7953, -3.1554, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9103, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.6687, -2.7957, -3.1546, -3.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7621, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.6682, -2.7968, -3.1544, -3.1837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7078, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6660, -2.7998, -3.1560, -3.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8173, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6640, -2.8031, -3.1584, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7997, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6608, -2.8064, -3.1605, -3.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7156, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.6584, -2.8098, -3.1640, -3.1874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8763, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.6570, -2.8122, -3.1677, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8140, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.6556, -2.8122, -3.1705, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8112, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.6544, -2.8103, -3.1712, -3.1891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9582, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.6542, -2.8083, -3.1699, -3.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0246, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6547, -2.8049, -3.1679, -3.1832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8133, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.6557, -2.8027, -3.1665, -3.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8579, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.6587, -2.8004, -3.1652, -3.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7777, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6618, -2.7990, -3.1650, -3.1733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8398, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.6645, -2.7983, -3.1643, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8333, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.6672, -2.7993, -3.1629, -3.1770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9943, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.6675, -2.8027, -3.1657, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6882, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.6674, -2.8078, -3.1691, -3.1893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7213, device='cuda:0', dtype=torch.float64)
tensor([-1.8678, -2.6659, -2.8115, -3.1715, -3.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8785, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.6632, -2.8142, -3.1750, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8479, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.6593, -2.8160, -3.1778, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9493, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.6562, -2.8151, -3.1788, -3.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7249, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6541, -2.8135, -3.1797, -3.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9484, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6542, -2.8105, -3.1789, -3.1766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8363, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6563, -2.8082, -3.1762, -3.1798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7757, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.6589, -2.8073, -3.1734, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8268, device='cuda:0', dtype=torch.float64)
tensor([-1.8561, -2.6632, -2.8074, -3.1679, -3.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8452, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.6678, -2.8063, -3.1617, -3.1929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9214, device='cuda:0', dtype=torch.float64)
tensor([-1.8634, -2.6714, -2.8052, -3.1542, -3.1961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8282, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.6737, -2.8042, -3.1465, -3.1955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7563, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.6757, -2.8034, -3.1397, -3.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8318, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.6778, -2.8029, -3.1356, -3.1942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8320, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.6813, -2.8015, -3.1352, -3.1963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8222, device='cuda:0', dtype=torch.float64)
tensor([-1.8631, -2.6808, -2.8025, -3.1386, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8433, device='cuda:0', dtype=torch.float64)
tensor([-1.8634, -2.6776, -2.8049, -3.1465, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9798, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.6736, -2.8059, -3.1544, -3.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8550, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.6665, -2.8072, -3.1635, -3.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8745, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6574, -2.8073, -3.1730, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8759, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.6520, -2.8043, -3.1804, -3.1837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7495, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.6487, -2.8002, -3.1861, -3.1786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7777, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.6476, -2.7961, -3.1894, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8408, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.6498, -2.7938, -3.1903, -3.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9994, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.6542, -2.7925, -3.1864, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0313, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.6608, -2.7927, -3.1813, -3.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6299, device='cuda:0', dtype=torch.float64)
tensor([-1.8673, -2.6678, -2.7929, -3.1755, -3.1877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9196, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.6742, -2.7979, -3.1685, -3.1931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8182, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.6785, -2.8016, -3.1636, -3.1962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9032, device='cuda:0', dtype=torch.float64)
tensor([-1.8775, -2.6837, -2.8040, -3.1574, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9224, device='cuda:0', dtype=torch.float64)
tensor([-1.8779, -2.6868, -2.8056, -3.1536, -3.1976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9043, device='cuda:0', dtype=torch.float64)
tensor([-1.8767, -2.6892, -2.8067, -3.1506, -3.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9535, device='cuda:0', dtype=torch.float64)
tensor([-1.8768, -2.6909, -2.8052, -3.1481, -3.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6890, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.6912, -2.8026, -3.1460, -3.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8103, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.6885, -2.8008, -3.1470, -3.1873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8207, device='cuda:0', dtype=torch.float64)
tensor([-1.8821, -2.6837, -2.7990, -3.1486, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9065, device='cuda:0', dtype=torch.float64)
tensor([-1.8846, -2.6777, -2.7992, -3.1529, -3.1939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9596, device='cuda:0', dtype=torch.float64)
tensor([-1.8865, -2.6736, -2.7986, -3.1597, -3.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8994, device='cuda:0', dtype=torch.float64)
tensor([-1.8856, -2.6689, -2.7981, -3.1672, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8944, device='cuda:0', dtype=torch.float64)
tensor([-1.8824, -2.6650, -2.7982, -3.1753, -3.2002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8303, device='cuda:0', dtype=torch.float64)
tensor([-1.8749, -2.6603, -2.7994, -3.1840, -3.1965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7390, device='cuda:0', dtype=torch.float64)
tensor([-1.8658, -2.6574, -2.8003, -3.1902, -3.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7792, device='cuda:0', dtype=torch.float64)
tensor([-1.8576, -2.6578, -2.7997, -3.1954, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9328, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.6590, -2.8012, -3.1997, -3.1786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8681, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.6603, -2.8076, -3.2022, -3.1741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8850, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.6648, -2.8141, -3.2024, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8061, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6714, -2.8194, -3.1998, -3.1747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9184, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.6775, -2.8226, -3.1952, -3.1761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8431, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.6824, -2.8247, -3.1903, -3.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8761, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.6860, -2.8245, -3.1860, -3.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0203, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.6888, -2.8226, -3.1844, -3.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8524, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.6905, -2.8218, -3.1822, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8652, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.6918, -2.8231, -3.1774, -3.1934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0636, device='cuda:0', dtype=torch.float64)
tensor([-1.8856, -2.6911, -2.8238, -3.1735, -3.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9604, device='cuda:0', dtype=torch.float64)
tensor([-1.8897, -2.6851, -2.8244, -3.1736, -3.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9333, device='cuda:0', dtype=torch.float64)
tensor([-1.8898, -2.6745, -2.8272, -3.1756, -3.2079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7977, device='cuda:0', dtype=torch.float64)
tensor([-1.8875, -2.6661, -2.8291, -3.1783, -3.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8199, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.6579, -2.8315, -3.1796, -3.2078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8003, device='cuda:0', dtype=torch.float64)
tensor([-1.8754, -2.6534, -2.8335, -3.1808, -3.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9010, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.6521, -2.8334, -3.1814, -3.2025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8974, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.6527, -2.8308, -3.1824, -3.1995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9578, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.6544, -2.8282, -3.1834, -3.1945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9844, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.6576, -2.8264, -3.1829, -3.1931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.6636, -2.8229, -3.1779, -3.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-1.8740, -2.6715, -2.8181, -3.1721, -3.1971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8561, device='cuda:0', dtype=torch.float64)
tensor([-1.8818, -2.6790, -2.8158, -3.1644, -3.2010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0229, device='cuda:0', dtype=torch.float64)
tensor([-1.8886, -2.6867, -2.8090, -3.1559, -3.2004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9062, device='cuda:0', dtype=torch.float64)
tensor([-1.8951, -2.6939, -2.8009, -3.1495, -3.1979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9159, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.6970, -2.7951, -3.1442, -3.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8583, device='cuda:0', dtype=torch.float64)
tensor([-1.9024, -2.6978, -2.7937, -3.1439, -3.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8609, device='cuda:0', dtype=torch.float64)
tensor([-1.8988, -2.6973, -2.7944, -3.1477, -3.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8855, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.6965, -2.7959, -3.1545, -3.1923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8943, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.6940, -2.8000, -3.1623, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9543, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.6920, -2.8018, -3.1686, -3.1884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9345, device='cuda:0', dtype=torch.float64)
tensor([-1.8621, -2.6876, -2.8027, -3.1744, -3.1837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9043, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.6848, -2.8048, -3.1795, -3.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7972, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6832, -2.8060, -3.1836, -3.1763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9805, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.6799, -2.8064, -3.1876, -3.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8442, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.6811, -2.8057, -3.1890, -3.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8932, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6820, -2.8040, -3.1849, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8950, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.6825, -2.8034, -3.1820, -3.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9242, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.6839, -2.8045, -3.1793, -3.2019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9261, device='cuda:0', dtype=torch.float64)
tensor([-1.8807, -2.6860, -2.8066, -3.1782, -3.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9831, device='cuda:0', dtype=torch.float64)
tensor([-1.8875, -2.6872, -2.8098, -3.1808, -3.2197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9707, device='cuda:0', dtype=torch.float64)
tensor([-1.8930, -2.6878, -2.8157, -3.1833, -3.2254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8913, device='cuda:0', dtype=torch.float64)
tensor([-1.8954, -2.6866, -2.8209, -3.1848, -3.2280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0657, device='cuda:0', dtype=torch.float64)
tensor([-1.8936, -2.6843, -2.8248, -3.1869, -3.2243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9440, device='cuda:0', dtype=torch.float64)
tensor([-1.8897, -2.6816, -2.8284, -3.1869, -3.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9000, device='cuda:0', dtype=torch.float64)
tensor([-1.8882, -2.6797, -2.8319, -3.1856, -3.2135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9316, device='cuda:0', dtype=torch.float64)
tensor([-1.8876, -2.6790, -2.8362, -3.1876, -3.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2074, device='cuda:0', dtype=torch.float64)
tensor([-1.8856, -2.6815, -2.8369, -3.1926, -3.2020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9464, device='cuda:0', dtype=torch.float64)
tensor([-1.8829, -2.6817, -2.8358, -3.1972, -3.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0569, device='cuda:0', dtype=torch.float64)
tensor([-1.8793, -2.6786, -2.8346, -3.2039, -3.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1440, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.6783, -2.8319, -3.2116, -3.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1857, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.6769, -2.8258, -3.2164, -3.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8853, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.6738, -2.8214, -3.2216, -3.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0335, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.6723, -2.8211, -3.2241, -3.1842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0672, device='cuda:0', dtype=torch.float64)
tensor([-1.8736, -2.6685, -2.8222, -3.2254, -3.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1708, device='cuda:0', dtype=torch.float64)
tensor([-1.8762, -2.6627, -2.8203, -3.2253, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2037, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.6588, -2.8177, -3.2241, -3.1994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9844, device='cuda:0', dtype=torch.float64)
tensor([-1.8900, -2.6562, -2.8160, -3.2222, -3.2065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0221, device='cuda:0', dtype=torch.float64)
tensor([-1.8994, -2.6591, -2.8128, -3.2200, -3.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0682, device='cuda:0', dtype=torch.float64)
tensor([-1.9072, -2.6640, -2.8116, -3.2203, -3.2179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2929, device='cuda:0', dtype=torch.float64)
tensor([-1.9149, -2.6716, -2.8075, -3.2235, -3.2193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([-1.9203, -2.6789, -2.8056, -3.2260, -3.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0949, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.6851, -2.8019, -3.2281, -3.2058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1164, device='cuda:0', dtype=torch.float64)
tensor([-1.9220, -2.6931, -2.7965, -3.2271, -3.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4742, device='cuda:0', dtype=torch.float64)
tensor([-1.9182, -2.6968, -2.7957, -3.2273, -3.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2097, device='cuda:0', dtype=torch.float64)
tensor([-1.9156, -2.7011, -2.7947, -3.2242, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1326, device='cuda:0', dtype=torch.float64)
tensor([-1.9108, -2.7019, -2.7920, -3.2175, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1958, device='cuda:0', dtype=torch.float64)
tensor([-1.9041, -2.7058, -2.7901, -3.2126, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9376, device='cuda:0', dtype=torch.float64)
tensor([-1.8989, -2.7112, -2.7913, -3.2077, -3.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2028, device='cuda:0', dtype=torch.float64)
tensor([-1.8941, -2.7169, -2.7950, -3.2051, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1325, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.7188, -2.8011, -3.2023, -3.1685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0420, device='cuda:0', dtype=torch.float64)
tensor([-1.8890, -2.7190, -2.8074, -3.1987, -3.1827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1477, device='cuda:0', dtype=torch.float64)
tensor([-1.8883, -2.7191, -2.8121, -3.1986, -3.1959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2726, device='cuda:0', dtype=torch.float64)
tensor([-1.8928, -2.7204, -2.8173, -3.1955, -3.2095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1398, device='cuda:0', dtype=torch.float64)
tensor([-1.8985, -2.7228, -2.8207, -3.1921, -3.2188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0298, device='cuda:0', dtype=torch.float64)
tensor([-1.9029, -2.7249, -2.8226, -3.1862, -3.2225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9996, device='cuda:0', dtype=torch.float64)
tensor([-1.9059, -2.7254, -2.8284, -3.1820, -3.2242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1013, device='cuda:0', dtype=torch.float64)
tensor([-1.9084, -2.7225, -2.8321, -3.1766, -3.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2125, device='cuda:0', dtype=torch.float64)
tensor([-1.9063, -2.7138, -2.8363, -3.1750, -3.2222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1801, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.6996, -2.8416, -3.1768, -3.2160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9966, device='cuda:0', dtype=torch.float64)
tensor([-1.9014, -2.6868, -2.8469, -3.1798, -3.2134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1547, device='cuda:0', dtype=torch.float64)
tensor([-1.9007, -2.6806, -2.8522, -3.1832, -3.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8193, device='cuda:0', dtype=torch.float64)
tensor([-1.8975, -2.6758, -2.8568, -3.1870, -3.2151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0880, device='cuda:0', dtype=torch.float64)
tensor([-1.8963, -2.6760, -2.8582, -3.1849, -3.2173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1203, device='cuda:0', dtype=torch.float64)
tensor([-1.8953, -2.6816, -2.8572, -3.1864, -3.2221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1228, device='cuda:0', dtype=torch.float64)
tensor([-1.8932, -2.6887, -2.8536, -3.1840, -3.2228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0623, device='cuda:0', dtype=torch.float64)
tensor([-1.8918, -2.6954, -2.8485, -3.1806, -3.2204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0431, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -2.7031, -2.8386, -3.1759, -3.2156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9617, device='cuda:0', dtype=torch.float64)
tensor([-1.8909, -2.7098, -2.8305, -3.1699, -3.2137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0945, device='cuda:0', dtype=torch.float64)
tensor([-1.8930, -2.7151, -2.8240, -3.1664, -3.2137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1384, device='cuda:0', dtype=torch.float64)
tensor([-1.8958, -2.7152, -2.8189, -3.1648, -3.2164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0970, device='cuda:0', dtype=torch.float64)
tensor([-1.8986, -2.7116, -2.8137, -3.1663, -3.2190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3874, device='cuda:0', dtype=torch.float64)
tensor([-1.9029, -2.7071, -2.8103, -3.1683, -3.2196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0318, device='cuda:0', dtype=torch.float64)
tensor([-1.9100, -2.7017, -2.8062, -3.1711, -3.2213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2833, device='cuda:0', dtype=torch.float64)
tensor([-1.9187, -2.6967, -2.8053, -3.1703, -3.2285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1412, device='cuda:0', dtype=torch.float64)
tensor([-1.9269, -2.6905, -2.8071, -3.1689, -3.2337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1475, device='cuda:0', dtype=torch.float64)
tensor([-1.9321, -2.6857, -2.8060, -3.1708, -3.2340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9153, device='cuda:0', dtype=torch.float64)
tensor([-1.9308, -2.6800, -2.8049, -3.1764, -3.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9682, device='cuda:0', dtype=torch.float64)
tensor([-1.9295, -2.6736, -2.8020, -3.1804, -3.2258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0463, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.6683, -2.8010, -3.1831, -3.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1819, device='cuda:0', dtype=torch.float64)
tensor([-1.9282, -2.6626, -2.7999, -3.1878, -3.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0721, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.6554, -2.8007, -3.1943, -3.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0931, device='cuda:0', dtype=torch.float64)
tensor([-1.9204, -2.6514, -2.8027, -3.2034, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9535, device='cuda:0', dtype=torch.float64)
tensor([-1.9152, -2.6491, -2.8092, -3.2165, -3.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8948, device='cuda:0', dtype=torch.float64)
tensor([-1.9080, -2.6468, -2.8181, -3.2315, -3.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1394, device='cuda:0', dtype=torch.float64)
tensor([-1.8994, -2.6457, -2.8303, -3.2494, -3.1903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4429, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.6492, -2.8386, -3.2621, -3.1976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1695, device='cuda:0', dtype=torch.float64)
tensor([-1.8892, -2.6545, -2.8436, -3.2651, -3.2032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9970, device='cuda:0', dtype=torch.float64)
tensor([-1.8882, -2.6627, -2.8419, -3.2629, -3.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5258, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.6714, -2.8394, -3.2562, -3.2039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8816, device='cuda:0', dtype=torch.float64)
tensor([-1.8873, -2.6836, -2.8334, -3.2440, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0335, device='cuda:0', dtype=torch.float64)
tensor([-1.8911, -2.6927, -2.8305, -3.2340, -3.1962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2722, device='cuda:0', dtype=torch.float64)
tensor([-1.8990, -2.7026, -2.8289, -3.2232, -3.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3860, device='cuda:0', dtype=torch.float64)
tensor([-1.9133, -2.7146, -2.8263, -3.2113, -3.2071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0157, device='cuda:0', dtype=torch.float64)
tensor([-1.9265, -2.7237, -2.8276, -3.1992, -3.2169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1617, device='cuda:0', dtype=torch.float64)
tensor([-1.9397, -2.7273, -2.8298, -3.1892, -3.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-1.9491, -2.7280, -2.8302, -3.1825, -3.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0291, device='cuda:0', dtype=torch.float64)
tensor([-1.9564, -2.7267, -2.8312, -3.1783, -3.2427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9065, device='cuda:0', dtype=torch.float64)
tensor([-1.9588, -2.7238, -2.8321, -3.1776, -3.2461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0716, device='cuda:0', dtype=torch.float64)
tensor([-1.9561, -2.7205, -2.8321, -3.1790, -3.2466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0044, device='cuda:0', dtype=torch.float64)
tensor([-1.9493, -2.7165, -2.8329, -3.1811, -3.2440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9118, device='cuda:0', dtype=torch.float64)
tensor([-1.9386, -2.7112, -2.8347, -3.1825, -3.2387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0721, device='cuda:0', dtype=torch.float64)
tensor([-1.9271, -2.7079, -2.8374, -3.1848, -3.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0375, device='cuda:0', dtype=torch.float64)
tensor([-1.9158, -2.7041, -2.8419, -3.1898, -3.2275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0019, device='cuda:0', dtype=torch.float64)
tensor([-1.9054, -2.7019, -2.8462, -3.1963, -3.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0774, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.7032, -2.8485, -3.2002, -3.2233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2647, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.7097, -2.8474, -3.2014, -3.2219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9747, device='cuda:0', dtype=torch.float64)
tensor([-1.8845, -2.7188, -2.8465, -3.2015, -3.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0685, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.7314, -2.8397, -3.1978, -3.2290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1944, device='cuda:0', dtype=torch.float64)
tensor([-1.8996, -2.7427, -2.8328, -3.1962, -3.2339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9812, device='cuda:0', dtype=torch.float64)
tensor([-1.9076, -2.7495, -2.8245, -3.1945, -3.2369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0760, device='cuda:0', dtype=torch.float64)
tensor([-1.9143, -2.7521, -2.8190, -3.1929, -3.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1385, device='cuda:0', dtype=torch.float64)
tensor([-1.9205, -2.7512, -2.8133, -3.1919, -3.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2387, device='cuda:0', dtype=torch.float64)
tensor([-1.9263, -2.7471, -2.8119, -3.1919, -3.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0465, device='cuda:0', dtype=torch.float64)
tensor([-1.9305, -2.7415, -2.8108, -3.1956, -3.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2320, device='cuda:0', dtype=torch.float64)
tensor([-1.9354, -2.7313, -2.8123, -3.1990, -3.2440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1598, device='cuda:0', dtype=torch.float64)
tensor([-1.9434, -2.7204, -2.8194, -3.1989, -3.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2661, device='cuda:0', dtype=torch.float64)
tensor([-1.9485, -2.7090, -2.8296, -3.2018, -3.2593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1964, device='cuda:0', dtype=torch.float64)
tensor([-1.9548, -2.6992, -2.8392, -3.2063, -3.2657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0478, device='cuda:0', dtype=torch.float64)
tensor([-1.9574, -2.6882, -2.8480, -3.2133, -3.2681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0886, device='cuda:0', dtype=torch.float64)
tensor([-1.9592, -2.6778, -2.8572, -3.2182, -3.2707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9680, device='cuda:0', dtype=torch.float64)
tensor([-1.9564, -2.6714, -2.8655, -3.2248, -3.2712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0125, device='cuda:0', dtype=torch.float64)
tensor([-1.9529, -2.6701, -2.8720, -3.2295, -3.2687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1003, device='cuda:0', dtype=torch.float64)
tensor([-1.9459, -2.6716, -2.8744, -3.2332, -3.2622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1104, device='cuda:0', dtype=torch.float64)
tensor([-1.9340, -2.6756, -2.8716, -3.2348, -3.2471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9874, device='cuda:0', dtype=torch.float64)
tensor([-1.9215, -2.6819, -2.8685, -3.2341, -3.2345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0102, device='cuda:0', dtype=torch.float64)
tensor([-1.9134, -2.6954, -2.8607, -3.2300, -3.2270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1429, device='cuda:0', dtype=torch.float64)
tensor([-1.9129, -2.7094, -2.8470, -3.2203, -3.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9981, device='cuda:0', dtype=torch.float64)
tensor([-1.9156, -2.7188, -2.8358, -3.2121, -3.2250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2327, device='cuda:0', dtype=torch.float64)
tensor([-1.9247, -2.7296, -2.8238, -3.2003, -3.2343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9613, device='cuda:0', dtype=torch.float64)
tensor([-1.9315, -2.7345, -2.8174, -3.1873, -3.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3088, device='cuda:0', dtype=torch.float64)
tensor([-1.9392, -2.7384, -2.8148, -3.1726, -3.2544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0235, device='cuda:0', dtype=torch.float64)
tensor([-1.9441, -2.7390, -2.8130, -3.1617, -3.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1300, device='cuda:0', dtype=torch.float64)
tensor([-1.9451, -2.7360, -2.8118, -3.1551, -3.2650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2975, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.7306, -2.8151, -3.1479, -3.2686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2452, device='cuda:0', dtype=torch.float64)
tensor([-1.9414, -2.7232, -2.8214, -3.1466, -3.2671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9996, device='cuda:0', dtype=torch.float64)
tensor([-1.9367, -2.7159, -2.8260, -3.1531, -3.2641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3438, device='cuda:0', dtype=torch.float64)
tensor([-1.9382, -2.7134, -2.8280, -3.1586, -3.2626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3979, device='cuda:0', dtype=torch.float64)
tensor([-1.9369, -2.7134, -2.8279, -3.1637, -3.2582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0688, device='cuda:0', dtype=torch.float64)
tensor([-1.9341, -2.7106, -2.8284, -3.1744, -3.2508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0918, device='cuda:0', dtype=torch.float64)
tensor([-1.9302, -2.7090, -2.8311, -3.1875, -3.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1352, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.7072, -2.8349, -3.1975, -3.2402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2644, device='cuda:0', dtype=torch.float64)
tensor([-1.9239, -2.7030, -2.8386, -3.2035, -3.2369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9447, device='cuda:0', dtype=torch.float64)
tensor([-1.9224, -2.6983, -2.8428, -3.2146, -3.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9869, device='cuda:0', dtype=torch.float64)
tensor([-1.9209, -2.6932, -2.8471, -3.2232, -3.2289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2199, device='cuda:0', dtype=torch.float64)
tensor([-1.9215, -2.6867, -2.8514, -3.2272, -3.2257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4752, device='cuda:0', dtype=torch.float64)
tensor([-1.9309, -2.6868, -2.8488, -3.2242, -3.2208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1433, device='cuda:0', dtype=torch.float64)
tensor([-1.9422, -2.6912, -2.8451, -3.2177, -3.2172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1209, device='cuda:0', dtype=torch.float64)
tensor([-1.9556, -2.6992, -2.8440, -3.2108, -3.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9230, device='cuda:0', dtype=torch.float64)
tensor([-1.9662, -2.7098, -2.8430, -3.2048, -3.2160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3103, device='cuda:0', dtype=torch.float64)
tensor([-1.9740, -2.7190, -2.8422, -3.1995, -3.2151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1628, device='cuda:0', dtype=torch.float64)
tensor([-1.9774, -2.7258, -2.8441, -3.2021, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1446, device='cuda:0', dtype=torch.float64)
tensor([-1.9770, -2.7315, -2.8460, -3.2051, -3.2206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1253, device='cuda:0', dtype=torch.float64)
tensor([-1.9785, -2.7379, -2.8521, -3.2063, -3.2239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1156, device='cuda:0', dtype=torch.float64)
tensor([-1.9837, -2.7524, -2.8529, -3.2077, -3.2260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3029, device='cuda:0', dtype=torch.float64)
tensor([-1.9869, -2.7605, -2.8607, -3.2115, -3.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1273, device='cuda:0', dtype=torch.float64)
tensor([-1.9859, -2.7595, -2.8733, -3.2208, -3.2339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9018, device='cuda:0', dtype=torch.float64)
tensor([-1.9856, -2.7559, -2.8882, -3.2295, -3.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0578, device='cuda:0', dtype=torch.float64)
tensor([-1.9878, -2.7544, -2.8995, -3.2323, -3.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8352, device='cuda:0', dtype=torch.float64)
tensor([-1.9891, -2.7519, -2.9117, -3.2361, -3.2450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9271, device='cuda:0', dtype=torch.float64)
tensor([-1.9854, -2.7457, -2.9227, -3.2409, -3.2464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3820, device='cuda:0', dtype=torch.float64)
tensor([-1.9810, -2.7455, -2.9287, -3.2445, -3.2461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1568, device='cuda:0', dtype=torch.float64)
tensor([-1.9796, -2.7466, -2.9291, -3.2414, -3.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([-1.9784, -2.7505, -2.9273, -3.2368, -3.2347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1194, device='cuda:0', dtype=torch.float64)
tensor([-1.9767, -2.7602, -2.9193, -3.2341, -3.2290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9715, device='cuda:0', dtype=torch.float64)
tensor([-1.9783, -2.7710, -2.9128, -3.2320, -3.2284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9897, device='cuda:0', dtype=torch.float64)
tensor([-1.9755, -2.7759, -2.9073, -3.2339, -3.2296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0815, device='cuda:0', dtype=torch.float64)
tensor([-1.9784, -2.7803, -2.9026, -3.2398, -3.2361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4938, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.7836, -2.9000, -3.2468, -3.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2509, device='cuda:0', dtype=torch.float64)
tensor([-1.9917, -2.7870, -2.8976, -3.2533, -3.2482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3263, device='cuda:0', dtype=torch.float64)
tensor([-1.9975, -2.7895, -2.8934, -3.2553, -3.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2466, device='cuda:0', dtype=torch.float64)
tensor([-1.9969, -2.7891, -2.8873, -3.2554, -3.2505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0655, device='cuda:0', dtype=torch.float64)
tensor([-1.9874, -2.7861, -2.8829, -3.2551, -3.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0856, device='cuda:0', dtype=torch.float64)
tensor([-1.9803, -2.7816, -2.8786, -3.2593, -3.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9483, device='cuda:0', dtype=torch.float64)
tensor([-1.9707, -2.7737, -2.8754, -3.2644, -3.2350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-1.9619, -2.7638, -2.8724, -3.2719, -3.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0755, device='cuda:0', dtype=torch.float64)
tensor([-1.9480, -2.7519, -2.8714, -3.2827, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9835, device='cuda:0', dtype=torch.float64)
tensor([-1.9385, -2.7465, -2.8709, -3.2938, -3.2445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1718, device='cuda:0', dtype=torch.float64)
tensor([-1.9360, -2.7413, -2.8693, -3.3011, -3.2558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1839, device='cuda:0', dtype=torch.float64)
tensor([-1.9395, -2.7384, -2.8722, -3.3064, -3.2735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2490, device='cuda:0', dtype=torch.float64)
tensor([-1.9430, -2.7387, -2.8785, -3.3118, -3.2936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2075, device='cuda:0', dtype=torch.float64)
tensor([-1.9471, -2.7377, -2.8837, -3.3172, -3.3127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0364, device='cuda:0', dtype=torch.float64)
tensor([-1.9516, -2.7370, -2.8873, -3.3210, -3.3281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1972, device='cuda:0', dtype=torch.float64)
tensor([-1.9629, -2.7404, -2.8881, -3.3204, -3.3395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1835, device='cuda:0', dtype=torch.float64)
tensor([-1.9724, -2.7431, -2.8905, -3.3152, -3.3506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8506, device='cuda:0', dtype=torch.float64)
tensor([-1.9823, -2.7469, -2.8909, -3.3067, -3.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1536, device='cuda:0', dtype=torch.float64)
tensor([-1.9875, -2.7469, -2.8967, -3.2933, -3.3530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4450, device='cuda:0', dtype=torch.float64)
tensor([-1.9867, -2.7452, -2.9010, -3.2832, -3.3417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9196, device='cuda:0', dtype=torch.float64)
tensor([-1.9846, -2.7446, -2.9070, -3.2732, -3.3282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3414, device='cuda:0', dtype=torch.float64)
tensor([-1.9828, -2.7468, -2.9103, -3.2594, -3.3098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1341, device='cuda:0', dtype=torch.float64)
tensor([-1.9807, -2.7466, -2.9128, -3.2494, -3.2955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0671, device='cuda:0', dtype=torch.float64)
tensor([-1.9800, -2.7478, -2.9170, -3.2453, -3.2823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1598, device='cuda:0', dtype=torch.float64)
tensor([-1.9846, -2.7526, -2.9176, -3.2424, -3.2687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2746, device='cuda:0', dtype=torch.float64)
tensor([-1.9889, -2.7598, -2.9203, -3.2439, -3.2582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4117, device='cuda:0', dtype=torch.float64)
tensor([-2.0027, -2.7695, -2.9280, -3.2430, -3.2566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3363, device='cuda:0', dtype=torch.float64)
tensor([-2.0182, -2.7787, -2.9356, -3.2438, -3.2661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2714, device='cuda:0', dtype=torch.float64)
tensor([-2.0344, -2.7858, -2.9445, -3.2453, -3.2786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4567, device='cuda:0', dtype=torch.float64)
tensor([-2.0531, -2.7951, -2.9466, -3.2500, -3.2953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2018, device='cuda:0', dtype=torch.float64)
tensor([-2.0665, -2.8023, -2.9500, -3.2590, -3.3089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3517, device='cuda:0', dtype=torch.float64)
tensor([-2.0718, -2.8054, -2.9518, -3.2743, -3.3181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3144, device='cuda:0', dtype=torch.float64)
tensor([-2.0710, -2.8073, -2.9515, -3.2861, -3.3249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1938, device='cuda:0', dtype=torch.float64)
tensor([-2.0643, -2.8060, -2.9485, -3.2936, -3.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2472, device='cuda:0', dtype=torch.float64)
tensor([-2.0504, -2.8024, -2.9467, -3.3065, -3.3180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2867, device='cuda:0', dtype=torch.float64)
tensor([-2.0315, -2.7977, -2.9428, -3.3177, -3.3068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9124, device='cuda:0', dtype=torch.float64)
tensor([-2.0110, -2.7921, -2.9402, -3.3273, -3.2894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1790, device='cuda:0', dtype=torch.float64)
tensor([-1.9967, -2.7854, -2.9352, -3.3340, -3.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5404, device='cuda:0', dtype=torch.float64)
tensor([-1.9910, -2.7834, -2.9266, -3.3395, -3.2597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2558, device='cuda:0', dtype=torch.float64)
tensor([-1.9890, -2.7785, -2.9222, -3.3366, -3.2555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4412, device='cuda:0', dtype=torch.float64)
tensor([-1.9917, -2.7761, -2.9209, -3.3330, -3.2597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4415, device='cuda:0', dtype=torch.float64)
tensor([-1.9982, -2.7810, -2.9204, -3.3277, -3.2703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1906, device='cuda:0', dtype=torch.float64)
tensor([-2.0063, -2.7883, -2.9223, -3.3195, -3.2859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1476, device='cuda:0', dtype=torch.float64)
tensor([-2.0130, -2.7975, -2.9245, -3.3123, -3.3007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1018, device='cuda:0', dtype=torch.float64)
tensor([-2.0196, -2.8049, -2.9231, -3.3063, -3.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9701, device='cuda:0', dtype=torch.float64)
tensor([-2.0211, -2.8109, -2.9209, -3.2976, -3.3166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3121, device='cuda:0', dtype=torch.float64)
tensor([-2.0223, -2.8123, -2.9188, -3.2893, -3.3107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1907, device='cuda:0', dtype=torch.float64)
tensor([-2.0242, -2.8095, -2.9180, -3.2767, -3.2988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0876, device='cuda:0', dtype=torch.float64)
tensor([-2.0245, -2.8038, -2.9169, -3.2635, -3.2856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1175, device='cuda:0', dtype=torch.float64)
tensor([-2.0241, -2.8003, -2.9148, -3.2521, -3.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9932, device='cuda:0', dtype=torch.float64)
tensor([-2.0253, -2.7989, -2.9142, -3.2403, -3.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9194, device='cuda:0', dtype=torch.float64)
tensor([-2.0251, -2.7974, -2.9136, -3.2287, -3.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2600, device='cuda:0', dtype=torch.float64)
tensor([-2.0269, -2.8016, -2.9124, -3.2163, -3.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-2.0251, -2.8016, -2.9150, -3.2081, -3.2489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3715, device='cuda:0', dtype=torch.float64)
tensor([-2.0267, -2.7993, -2.9184, -3.2041, -3.2536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1163, device='cuda:0', dtype=torch.float64)
tensor([-2.0297, -2.7982, -2.9218, -3.2033, -3.2588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3215, device='cuda:0', dtype=torch.float64)
tensor([-2.0370, -2.7998, -2.9215, -3.1962, -3.2633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3676, device='cuda:0', dtype=torch.float64)
tensor([-2.0456, -2.7984, -2.9211, -3.1969, -3.2761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0615, device='cuda:0', dtype=torch.float64)
tensor([-2.0555, -2.7995, -2.9236, -3.1980, -3.2916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2392, device='cuda:0', dtype=torch.float64)
tensor([-2.0635, -2.8059, -2.9255, -3.2072, -3.3042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4040, device='cuda:0', dtype=torch.float64)
tensor([-2.0715, -2.8139, -2.9295, -3.2235, -3.3164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2178, device='cuda:0', dtype=torch.float64)
tensor([-2.0776, -2.8167, -2.9336, -3.2378, -3.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1628, device='cuda:0', dtype=torch.float64)
tensor([-2.0828, -2.8218, -2.9388, -3.2562, -3.3323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1814, device='cuda:0', dtype=torch.float64)
tensor([-2.0901, -2.8254, -2.9441, -3.2751, -3.3382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1657, device='cuda:0', dtype=torch.float64)
tensor([-2.0985, -2.8283, -2.9524, -3.2924, -3.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2986, device='cuda:0', dtype=torch.float64)
tensor([-2.1104, -2.8361, -2.9590, -3.3082, -3.3525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1913, device='cuda:0', dtype=torch.float64)
tensor([-2.1109, -2.8396, -2.9639, -3.3281, -3.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3370, device='cuda:0', dtype=torch.float64)
tensor([-2.1098, -2.8441, -2.9652, -3.3464, -3.3491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1316, device='cuda:0', dtype=torch.float64)
tensor([-2.1068, -2.8458, -2.9674, -3.3628, -3.3507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-2.0982, -2.8431, -2.9721, -3.3738, -3.3510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1116, device='cuda:0', dtype=torch.float64)
tensor([-2.0920, -2.8424, -2.9768, -3.3736, -3.3528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3718, device='cuda:0', dtype=torch.float64)
tensor([-2.0915, -2.8397, -2.9859, -3.3687, -3.3603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0879, device='cuda:0', dtype=torch.float64)
tensor([-2.0903, -2.8361, -2.9921, -3.3639, -3.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2239, device='cuda:0', dtype=torch.float64)
tensor([-2.0889, -2.8318, -2.9977, -3.3623, -3.3711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0763, device='cuda:0', dtype=torch.float64)
tensor([-2.0906, -2.8329, -3.0029, -3.3635, -3.3737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2609, device='cuda:0', dtype=torch.float64)
tensor([-2.0963, -2.8415, -3.0030, -3.3662, -3.3758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2403, device='cuda:0', dtype=torch.float64)
tensor([-2.1048, -2.8503, -3.0036, -3.3700, -3.3776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2590, device='cuda:0', dtype=torch.float64)
tensor([-2.1146, -2.8569, -3.0056, -3.3711, -3.3828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1494, device='cuda:0', dtype=torch.float64)
tensor([-2.1287, -2.8611, -3.0055, -3.3681, -3.3889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3827, device='cuda:0', dtype=torch.float64)
tensor([-2.1403, -2.8662, -3.0054, -3.3648, -3.3949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9827, device='cuda:0', dtype=torch.float64)
tensor([-2.1535, -2.8772, -3.0007, -3.3576, -3.3964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1455, device='cuda:0', dtype=torch.float64)
tensor([-2.1669, -2.8845, -2.9934, -3.3496, -3.3941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3162, device='cuda:0', dtype=torch.float64)
tensor([-2.1781, -2.8897, -2.9896, -3.3384, -3.3913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0579, device='cuda:0', dtype=torch.float64)
tensor([-2.1845, -2.8903, -2.9880, -3.3274, -3.3885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8894, device='cuda:0', dtype=torch.float64)
tensor([-2.1861, -2.8911, -2.9853, -3.3209, -3.3838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0620, device='cuda:0', dtype=torch.float64)
tensor([-2.1845, -2.8860, -2.9889, -3.3148, -3.3798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1127, device='cuda:0', dtype=torch.float64)
tensor([-2.1854, -2.8814, -2.9923, -3.3070, -3.3737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2701, device='cuda:0', dtype=torch.float64)
tensor([-2.1904, -2.8839, -2.9942, -3.3012, -3.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1325, device='cuda:0', dtype=torch.float64)
tensor([-2.1904, -2.8795, -3.0003, -3.3023, -3.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1998, device='cuda:0', dtype=torch.float64)
tensor([-2.1905, -2.8733, -3.0033, -3.2998, -3.3712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3783, device='cuda:0', dtype=torch.float64)
tensor([-2.1948, -2.8685, -3.0051, -3.2978, -3.3774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0111, device='cuda:0', dtype=torch.float64)
tensor([-2.2002, -2.8673, -3.0019, -3.2879, -3.3760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0235, device='cuda:0', dtype=torch.float64)
tensor([-2.1997, -2.8698, -2.9987, -3.2774, -3.3699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3281, device='cuda:0', dtype=torch.float64)
tensor([-2.2057, -2.8833, -2.9909, -3.2627, -3.3635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2137, device='cuda:0', dtype=torch.float64)
tensor([-2.2113, -2.8959, -2.9839, -3.2470, -3.3581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4959, device='cuda:0', dtype=torch.float64)
tensor([-2.2157, -2.9088, -2.9746, -3.2264, -3.3495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2409, device='cuda:0', dtype=torch.float64)
tensor([-2.2192, -2.9169, -2.9711, -3.2104, -3.3450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1888, device='cuda:0', dtype=torch.float64)
tensor([-2.2209, -2.9229, -2.9685, -3.1976, -3.3376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-2.2223, -2.9310, -2.9653, -3.1910, -3.3354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1603, device='cuda:0', dtype=torch.float64)
tensor([-2.2245, -2.9372, -2.9677, -3.1889, -3.3360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2887, device='cuda:0', dtype=torch.float64)
tensor([-2.2359, -2.9454, -2.9644, -3.1906, -3.3395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2743, device='cuda:0', dtype=torch.float64)
tensor([-2.2455, -2.9492, -2.9645, -3.1925, -3.3473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-2.2546, -2.9547, -2.9649, -3.1932, -3.3558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4056, device='cuda:0', dtype=torch.float64)
tensor([-2.2612, -2.9604, -2.9689, -3.2036, -3.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2352, device='cuda:0', dtype=torch.float64)
tensor([-2.2622, -2.9634, -2.9775, -3.2149, -3.3777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0008, device='cuda:0', dtype=torch.float64)
tensor([-2.2606, -2.9660, -2.9872, -3.2294, -3.3875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4333, device='cuda:0', dtype=torch.float64)
tensor([-2.2608, -2.9664, -3.0012, -3.2506, -3.3976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1734, device='cuda:0', dtype=torch.float64)
tensor([-2.2621, -2.9684, -3.0149, -3.2709, -3.4092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4465, device='cuda:0', dtype=torch.float64)
tensor([-2.2641, -2.9720, -3.0286, -3.2950, -3.4218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2186, device='cuda:0', dtype=torch.float64)
tensor([-2.2668, -2.9778, -3.0415, -3.3225, -3.4320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1035, device='cuda:0', dtype=torch.float64)
tensor([-2.2700, -2.9806, -3.0570, -3.3497, -3.4403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2443, device='cuda:0', dtype=torch.float64)
tensor([-2.2751, -2.9809, -3.0749, -3.3800, -3.4518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9943, device='cuda:0', dtype=torch.float64)
tensor([-2.2794, -2.9779, -3.0919, -3.4041, -3.4657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1059, device='cuda:0', dtype=torch.float64)
tensor([-2.2893, -2.9761, -3.1097, -3.4255, -3.4776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0463, device='cuda:0', dtype=torch.float64)
tensor([-2.3024, -2.9774, -3.1279, -3.4425, -3.4914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0343, device='cuda:0', dtype=torch.float64)
tensor([-2.3170, -2.9819, -3.1430, -3.4587, -3.5072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0172, device='cuda:0', dtype=torch.float64)
tensor([-2.3292, -2.9877, -3.1556, -3.4747, -3.5247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1026, device='cuda:0', dtype=torch.float64)
tensor([-2.3444, -2.9991, -3.1653, -3.4865, -3.5382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9837, device='cuda:0', dtype=torch.float64)
tensor([-2.3551, -3.0099, -3.1729, -3.4951, -3.5486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2708, device='cuda:0', dtype=torch.float64)
tensor([-2.3637, -3.0202, -3.1775, -3.4980, -3.5549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8614, device='cuda:0', dtype=torch.float64)
tensor([-2.3715, -3.0316, -3.1820, -3.5053, -3.5577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2510, device='cuda:0', dtype=torch.float64)
tensor([-2.3760, -3.0368, -3.1869, -3.5081, -3.5580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0138, device='cuda:0', dtype=torch.float64)
tensor([-2.3830, -3.0386, -3.1934, -3.5094, -3.5597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1635, device='cuda:0', dtype=torch.float64)
tensor([-2.3826, -3.0418, -3.1974, -3.5161, -3.5605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0897, device='cuda:0', dtype=torch.float64)
tensor([-2.3832, -3.0434, -3.1966, -3.5252, -3.5634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0226, device='cuda:0', dtype=torch.float64)
tensor([-2.3791, -3.0460, -3.1911, -3.5383, -3.5649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9930, device='cuda:0', dtype=torch.float64)
tensor([-2.3748, -3.0491, -3.1882, -3.5545, -3.5674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3027, device='cuda:0', dtype=torch.float64)
tensor([-2.3815, -3.0604, -3.1866, -3.5678, -3.5823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1908, device='cuda:0', dtype=torch.float64)
tensor([-2.3894, -3.0694, -3.1860, -3.5694, -3.5958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1989, device='cuda:0', dtype=torch.float64)
tensor([-2.4036, -3.0879, -3.1850, -3.5690, -3.6070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3142, device='cuda:0', dtype=torch.float64)
tensor([-2.4262, -3.1065, -3.1913, -3.5678, -3.6214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0097, device='cuda:0', dtype=torch.float64)
tensor([-2.4464, -3.1228, -3.1998, -3.5702, -3.6341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8803, device='cuda:0', dtype=torch.float64)
tensor([-2.4687, -3.1416, -3.2076, -3.5686, -3.6519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2846, device='cuda:0', dtype=torch.float64)
tensor([-2.4869, -3.1586, -3.2115, -3.5645, -3.6652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1864, device='cuda:0', dtype=torch.float64)
tensor([-2.5153, -3.1747, -3.2195, -3.5571, -3.6828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2786, device='cuda:0', dtype=torch.float64)
tensor([-2.5483, -3.1926, -3.2297, -3.5494, -3.6976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2396, device='cuda:0', dtype=torch.float64)
tensor([-2.5827, -3.2087, -3.2454, -3.5433, -3.7102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0644, device='cuda:0', dtype=torch.float64)
tensor([-2.6143, -3.2252, -3.2605, -3.5422, -3.7224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2360, device='cuda:0', dtype=torch.float64)
tensor([-2.6427, -3.2397, -3.2808, -3.5521, -3.7435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2224, device='cuda:0', dtype=torch.float64)
tensor([-2.6694, -3.2569, -3.3000, -3.5604, -3.7614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0914, device='cuda:0', dtype=torch.float64)
tensor([-2.6923, -3.2697, -3.3168, -3.5703, -3.7845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0913, device='cuda:0', dtype=torch.float64)
tensor([-2.7143, -3.2787, -3.3301, -3.5884, -3.8030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2373, device='cuda:0', dtype=torch.float64)
tensor([-2.7426, -3.2920, -3.3507, -3.6109, -3.8225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9376, device='cuda:0', dtype=torch.float64)
tensor([-2.7693, -3.3034, -3.3771, -3.6339, -3.8415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3215, device='cuda:0', dtype=torch.float64)
tensor([-2.8014, -3.3227, -3.4070, -3.6624, -3.8719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0882, device='cuda:0', dtype=torch.float64)
tensor([-2.8343, -3.3401, -3.4341, -3.6899, -3.9030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1960, device='cuda:0', dtype=torch.float64)
tensor([-2.8675, -3.3654, -3.4488, -3.7161, -3.9343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1499, device='cuda:0', dtype=torch.float64)
tensor([-2.9144, -3.3923, -3.4706, -3.7430, -3.9676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9883, device='cuda:0', dtype=torch.float64)
tensor([-2.9674, -3.4204, -3.4921, -3.7624, -4.0042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1516, device='cuda:0', dtype=torch.float64)
tensor([-3.0211, -3.4481, -3.5051, -3.7791, -4.0422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1876, device='cuda:0', dtype=torch.float64)
tensor([-3.0672, -3.4765, -3.5194, -3.7962, -4.0812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0282, device='cuda:0', dtype=torch.float64)
tensor([-3.1336, -3.5126, -3.5309, -3.8184, -4.1208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0033, device='cuda:0', dtype=torch.float64)
tensor([-3.2189, -3.5588, -3.5416, -3.8516, -4.1622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0723, device='cuda:0', dtype=torch.float64)
tensor([-3.2968, -3.6025, -3.5501, -3.8844, -4.2042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0072, device='cuda:0', dtype=torch.float64)
tensor([-3.3703, -3.6470, -3.5624, -3.9219, -4.2446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1959, device='cuda:0', dtype=torch.float64)
tensor([-3.4351, -3.6898, -3.5843, -3.9730, -4.3014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9833, device='cuda:0', dtype=torch.float64)
tensor([-3.5089, -3.7380, -3.6047, -4.0226, -4.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9346, device='cuda:0', dtype=torch.float64)
tensor([-3.6125, -3.7858, -3.6320, -4.0802, -4.4168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0921, device='cuda:0', dtype=torch.float64)
tensor([-3.6927, -3.8354, -3.6681, -4.1392, -4.4807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9641, device='cuda:0', dtype=torch.float64)
tensor([-3.7713, -3.8865, -3.7048, -4.1905, -4.5414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9115, device='cuda:0', dtype=torch.float64)
tensor([-3.8632, -3.9401, -3.7462, -4.2484, -4.6154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8808, device='cuda:0', dtype=torch.float64)
tensor([-3.9604, -3.9976, -3.7887, -4.3238, -4.7018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1534, device='cuda:0', dtype=torch.float64)
tensor([-4.0616, -4.0638, -3.8371, -4.4044, -4.8090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0462, device='cuda:0', dtype=torch.float64)
tensor([-4.2167, -4.1304, -3.8978, -4.4753, -4.9274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9399, device='cuda:0', dtype=torch.float64)
tensor([-4.4059, -4.2078, -3.9711, -4.5490, -5.0646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2743, device='cuda:0', dtype=torch.float64)
tensor([-4.6355, -4.2972, -4.0527, -4.6430, -5.2360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9626, device='cuda:0', dtype=torch.float64)
tensor([-4.8755, -4.4061, -4.1337, -4.7499, -5.4231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0880, device='cuda:0', dtype=torch.float64)
tensor([-5.1362, -4.5249, -4.2129, -4.8425, -5.6206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9925, device='cuda:0', dtype=torch.float64)
tensor([-5.3995, -4.6507, -4.2989, -4.9282, -5.8578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9808, device='cuda:0', dtype=torch.float64)
tensor([-5.6576, -4.7746, -4.3798, -5.0024, -6.1360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8838, device='cuda:0', dtype=torch.float64)
tensor([-5.9258, -4.9146, -4.4641, -5.0870, -6.3928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1252, device='cuda:0', dtype=torch.float64)
tensor([-6.1690, -5.0751, -4.5517, -5.1686, -6.6903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0440, device='cuda:0', dtype=torch.float64)
tensor([-6.3976, -5.2658, -4.6542, -5.2500, -7.0649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8243, device='cuda:0', dtype=torch.float64)
tensor([-6.6227, -5.4442, -4.7500, -5.3345, -7.4577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1425, device='cuda:0', dtype=torch.float64)
tensor([-6.8562, -5.6302, -4.8379, -5.4030, -7.8543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0947, device='cuda:0', dtype=torch.float64)
tensor([-7.1078, -5.8565, -4.9362, -5.4669, -8.2622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7461, device='cuda:0', dtype=torch.float64)
tensor([-7.3762, -6.0443, -5.0374, -5.5523, -8.5676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-7.6513, -6.2244, -5.1404, -5.6425, -8.8274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6786, device='cuda:0', dtype=torch.float64)
tensor([-7.9278, -6.3927, -5.2426, -5.7275, -9.0773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9456, device='cuda:0', dtype=torch.float64)
tensor([-8.1722, -6.5258, -5.3546, -5.8319, -9.4199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8384, device='cuda:0', dtype=torch.float64)
tensor([-8.3602, -6.6234, -5.4672, -5.9329, -9.7510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0375, device='cuda:0', dtype=torch.float64)
tensor([ -8.5005,  -6.7493,  -5.5638,  -6.0333, -10.0913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3618, device='cuda:0', dtype=torch.float64)
tensor([ -8.5447,  -6.8251,  -5.6517,  -6.1367, -10.4248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8563, device='cuda:0', dtype=torch.float64)
tensor([ -8.5887,  -6.8493,  -5.7252,  -6.2380, -10.7211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9229, device='cuda:0', dtype=torch.float64)
tensor([ -8.6505,  -6.8867,  -5.8057,  -6.3485, -10.9539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8516, device='cuda:0', dtype=torch.float64)
tensor([ -8.7440,  -6.9596,  -5.9118,  -6.4814, -11.1224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9026, device='cuda:0', dtype=torch.float64)
tensor([ -8.8399,  -7.0408,  -6.0252,  -6.6377, -11.2640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0352, device='cuda:0', dtype=torch.float64)
tensor([ -8.9044,  -7.1373,  -6.1531,  -6.8057, -11.4525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0336, device='cuda:0', dtype=torch.float64)
tensor([ -8.9446,  -7.2446,  -6.2654,  -6.9578, -11.6453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0771, device='cuda:0', dtype=torch.float64)
tensor([ -8.9794,  -7.3899,  -6.4158,  -7.1353, -11.8315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0579, device='cuda:0', dtype=torch.float64)
tensor([ -9.0176,  -7.5663,  -6.6394,  -7.3156, -11.9455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8334, device='cuda:0', dtype=torch.float64)
tensor([ -9.0742,  -7.7577,  -6.8324,  -7.5036, -12.1303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9129, device='cuda:0', dtype=torch.float64)
tensor([ -9.1382,  -7.9426,  -7.0629,  -7.7091, -12.3161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7538, device='cuda:0', dtype=torch.float64)
tensor([ -9.1914,  -8.1315,  -7.3193,  -7.9372, -12.5419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8583, device='cuda:0', dtype=torch.float64)
tensor([ -9.2156,  -8.3263,  -7.6226,  -8.1884, -12.8374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0555, device='cuda:0', dtype=torch.float64)
tensor([ -9.2236,  -8.5770,  -7.8964,  -8.5008, -13.1044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8876, device='cuda:0', dtype=torch.float64)
tensor([ -9.1834,  -8.8086,  -8.1909,  -8.8145, -13.3500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0246, device='cuda:0', dtype=torch.float64)
tensor([ -9.1378,  -9.0887,  -8.4331,  -9.1765, -13.6066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7537, device='cuda:0', dtype=torch.float64)
tensor([ -9.1106,  -9.4038,  -8.6664,  -9.5753, -13.8781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8831, device='cuda:0', dtype=torch.float64)
tensor([ -9.1193,  -9.8701,  -8.9022, -10.0293, -14.3483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9743, device='cuda:0', dtype=torch.float64)
tensor([ -9.1130, -10.3935,  -9.1246, -10.5101, -14.8357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0517, device='cuda:0', dtype=torch.float64)
tensor([ -9.1083, -10.9559,  -9.3248, -11.0716, -15.3231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1041, device='cuda:0', dtype=torch.float64)
tensor([ -8.9809, -11.6467,  -9.6513, -11.7628, -15.7354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9218, device='cuda:0', dtype=torch.float64)
tensor([ -8.9060, -12.3329,  -9.9360, -12.4590, -16.0427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8438, device='cuda:0', dtype=torch.float64)
tensor([ -8.8099, -12.8651, -10.0919, -13.1889, -16.3757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9538, device='cuda:0', dtype=torch.float64)
tensor([ -8.7681, -13.4582, -10.3235, -13.9428, -16.8641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8423, device='cuda:0', dtype=torch.float64)
tensor([ -8.7563, -14.0148, -10.6037, -14.7371, -17.3237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9739, device='cuda:0', dtype=torch.float64)
tensor([ -8.7385, -14.4801, -10.9055, -15.5044, -17.8611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8481, device='cuda:0', dtype=torch.float64)
tensor([ -8.7153, -14.7855, -11.1659, -16.1521, -18.3105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0669, device='cuda:0', dtype=torch.float64)
tensor([ -8.6580, -14.8744, -11.5037, -16.6503, -18.5917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9205, device='cuda:0', dtype=torch.float64)
tensor([ -8.6125, -15.0010, -11.8631, -17.1737, -18.8750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9622, device='cuda:0', dtype=torch.float64)
tensor([ -8.5791, -15.0002, -12.1021, -17.6377, -18.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0174, device='cuda:0', dtype=torch.float64)
tensor([ -8.5957, -15.1057, -12.2958, -18.1517, -19.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9426, device='cuda:0', dtype=torch.float64)
tensor([ -8.5802, -15.1174, -12.4213, -18.6970, -19.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9353, device='cuda:0', dtype=torch.float64)
tensor([ -8.5580, -15.1453, -12.3973, -19.1924, -19.4220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9276, device='cuda:0', dtype=torch.float64)
tensor([ -8.5307, -15.0080, -12.3221, -19.6772, -19.5205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8992, device='cuda:0', dtype=torch.float64)
tensor([ -8.5140, -14.8699, -12.3231, -20.0292, -19.5788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8088, device='cuda:0', dtype=torch.float64)
tensor([ -8.5111, -14.8952, -12.3395, -20.3925, -19.8408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8826, device='cuda:0', dtype=torch.float64)
tensor([ -8.4436, -14.7890, -12.3027, -20.7133, -20.1025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9798, device='cuda:0', dtype=torch.float64)
tensor([ -8.3966, -14.7573, -12.2933, -21.1139, -20.5279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8631, device='cuda:0', dtype=torch.float64)
tensor([ -8.2792, -14.6754, -12.3507, -21.3155, -20.7935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8017, device='cuda:0', dtype=torch.float64)
tensor([ -8.1667, -14.6196, -12.4446, -21.5277, -21.1516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1286, device='cuda:0', dtype=torch.float64)
tensor([ -8.0747, -14.5578, -12.2664, -21.6704, -21.6964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9176, device='cuda:0', dtype=torch.float64)
tensor([ -7.9975, -14.5042, -12.0851, -21.8256, -22.3178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7532, device='cuda:0', dtype=torch.float64)
tensor([ -7.9307, -14.3586, -11.9455, -21.9410, -22.7057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9450, device='cuda:0', dtype=torch.float64)
tensor([ -7.8476, -14.2467, -11.7575, -22.1029, -23.0669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8769, device='cuda:0', dtype=torch.float64)
tensor([ -7.7699, -14.2808, -11.5742, -22.2485, -23.5330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8392, device='cuda:0', dtype=torch.float64)
tensor([ -7.6870, -14.2160, -11.4578, -22.2152, -23.7743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7381, device='cuda:0', dtype=torch.float64)
tensor([ -7.6428, -14.1930, -11.4715, -22.2565, -24.0536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8842, device='cuda:0', dtype=torch.float64)
tensor([ -7.6520, -14.2982, -11.4919, -22.4873, -24.6178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9432, device='cuda:0', dtype=torch.float64)
tensor([ -7.6916, -14.4677, -11.6075, -22.8555, -25.3154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8842, device='cuda:0', dtype=torch.float64)
tensor([ -7.7557, -14.5278, -11.7922, -22.9539, -25.7903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8872, device='cuda:0', dtype=torch.float64)
tensor([ -7.8331, -14.6084, -12.0327, -23.2314, -26.4030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8538, device='cuda:0', dtype=torch.float64)
tensor([ -7.9285, -14.5979, -12.2766, -23.5691, -26.9883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1188, device='cuda:0', dtype=torch.float64)
tensor([ -8.1091, -14.7780, -12.5776, -24.1751, -27.8936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8671, device='cuda:0', dtype=torch.float64)
tensor([ -8.2978, -14.9558, -12.8830, -24.6574, -28.7317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8714, device='cuda:0', dtype=torch.float64)
tensor([ -8.4257, -15.0410, -13.0299, -24.8728, -29.2810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8769, device='cuda:0', dtype=torch.float64)
tensor([ -8.6136, -15.0754, -13.2486, -25.0716, -29.9206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8908, device='cuda:0', dtype=torch.float64)
tensor([ -8.7626, -15.0026, -13.4616, -25.0893, -30.2592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9480, device='cuda:0', dtype=torch.float64)
tensor([ -8.9909, -15.0615, -13.8114, -25.1449, -30.6827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8701, device='cuda:0', dtype=torch.float64)
tensor([ -9.2530, -15.1983, -14.0841, -25.2439, -31.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7971, device='cuda:0', dtype=torch.float64)
tensor([ -9.4190, -15.3119, -14.3320, -25.2739, -31.7471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9009, device='cuda:0', dtype=torch.float64)
tensor([ -9.5433, -15.3973, -14.4834, -25.3378, -32.1635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0245, device='cuda:0', dtype=torch.float64)
tensor([ -9.6743, -15.5395, -14.6748, -25.4636, -32.5976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9405, device='cuda:0', dtype=torch.float64)
tensor([ -9.6845, -15.5180, -14.7167, -25.4468, -32.6510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7554, device='cuda:0', dtype=torch.float64)
tensor([ -9.7172, -15.5611, -14.8799, -25.4988, -32.6624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7187, device='cuda:0', dtype=torch.float64)
tensor([ -9.7744, -15.6230, -15.0861, -25.5842, -32.5629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7311, device='cuda:0', dtype=torch.float64)
tensor([ -9.7750, -15.6784, -15.2264, -25.7242, -32.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0679, device='cuda:0', dtype=torch.float64)
tensor([ -9.8584, -15.7621, -15.4986, -25.9775, -32.2494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9791, device='cuda:0', dtype=torch.float64)
tensor([ -9.9031, -15.7784, -15.6766, -26.1453, -32.0917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0029, device='cuda:0', dtype=torch.float64)
tensor([ -9.9177, -15.8513, -15.8831, -26.2996, -31.8822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9571, device='cuda:0', dtype=torch.float64)
tensor([ -9.8267, -15.8647, -15.9706, -26.5384, -31.7318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8778, device='cuda:0', dtype=torch.float64)
tensor([ -9.6502, -15.9949, -15.8932, -26.6048, -31.5705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8530, device='cuda:0', dtype=torch.float64)
tensor([ -9.5209, -16.1379, -15.9546, -26.6369, -31.3385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9935, device='cuda:0', dtype=torch.float64)
tensor([ -9.3861, -16.3850, -16.1234, -26.6045, -31.0751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0197, device='cuda:0', dtype=torch.float64)
tensor([ -9.2338, -16.5983, -16.0957, -26.4370, -30.5487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9620, device='cuda:0', dtype=torch.float64)
tensor([ -9.1772, -16.6974, -16.0969, -26.2819, -29.9538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9609, device='cuda:0', dtype=torch.float64)
tensor([ -9.1845, -16.9065, -16.0565, -26.1044, -29.5893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9191, device='cuda:0', dtype=torch.float64)
tensor([ -9.1617, -17.1063, -15.9417, -25.8543, -29.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9079, device='cuda:0', dtype=torch.float64)
tensor([ -9.1124, -17.2772, -15.7038, -25.6410, -28.8038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6406, device='cuda:0', dtype=torch.float64)
tensor([ -9.0414, -17.4560, -15.3761, -25.2796, -28.3644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9124, device='cuda:0', dtype=torch.float64)
tensor([ -9.0109, -17.5388, -15.1140, -24.8627, -27.7209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8812, device='cuda:0', dtype=torch.float64)
tensor([ -9.0245, -17.6946, -15.0028, -24.6081, -27.2774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7684, device='cuda:0', dtype=torch.float64)
tensor([ -9.0506, -18.0106, -14.8219, -24.2565, -26.7692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7156, device='cuda:0', dtype=torch.float64)
tensor([ -9.0809, -18.3084, -14.6701, -24.1364, -26.2720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8544, device='cuda:0', dtype=torch.float64)
tensor([ -9.1049, -18.6098, -14.5209, -23.9703, -25.5533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7718, device='cuda:0', dtype=torch.float64)
tensor([ -9.1858, -18.8138, -14.5134, -23.7941, -24.8121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([ -9.2921, -18.9676, -14.6386, -23.6551, -24.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6768, device='cuda:0', dtype=torch.float64)
tensor([ -9.3984, -19.1185, -14.7065, -23.5761, -23.6392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8115, device='cuda:0', dtype=torch.float64)
tensor([ -9.5418, -19.1796, -14.9670, -23.5210, -23.1150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7430, device='cuda:0', dtype=torch.float64)
tensor([ -9.6388, -19.2010, -15.1408, -23.2852, -22.5248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7977, device='cuda:0', dtype=torch.float64)
tensor([ -9.7163, -19.1193, -15.2533, -23.0681, -22.0487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8181, device='cuda:0', dtype=torch.float64)
tensor([ -9.8064, -18.9932, -15.3710, -22.9529, -21.6201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8514, device='cuda:0', dtype=torch.float64)
tensor([ -9.8352, -18.9045, -15.3783, -22.6681, -21.2425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9416, device='cuda:0', dtype=torch.float64)
tensor([ -9.8730, -18.7622, -15.4275, -22.4013, -20.9269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7615, device='cuda:0', dtype=torch.float64)
tensor([ -9.9166, -18.7479, -15.4741, -22.1383, -20.8645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8580, device='cuda:0', dtype=torch.float64)
tensor([ -9.9414, -18.8114, -15.5573, -21.8190, -20.7144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8566, device='cuda:0', dtype=torch.float64)
tensor([-10.0342, -18.8594, -15.7638, -21.5880, -20.5107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8795, device='cuda:0', dtype=torch.float64)
tensor([-10.2000, -18.8808, -16.0942, -21.3813, -20.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7965, device='cuda:0', dtype=torch.float64)
tensor([-10.3516, -18.9766, -16.5041, -21.2304, -20.4633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8307, device='cuda:0', dtype=torch.float64)
tensor([-10.5209, -19.1604, -16.9380, -21.2277, -20.6167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7750, device='cuda:0', dtype=torch.float64)
tensor([-10.7018, -19.2918, -17.3327, -21.2326, -20.6874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8251, device='cuda:0', dtype=torch.float64)
tensor([-10.7608, -19.5195, -17.4683, -21.0905, -20.7696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6251, device='cuda:0', dtype=torch.float64)
tensor([-10.8264, -19.6607, -17.6829, -20.8314, -20.7867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8265, device='cuda:0', dtype=torch.float64)
tensor([-10.8823, -20.0327, -17.8658, -20.8789, -21.0157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6491, device='cuda:0', dtype=torch.float64)
tensor([-10.9273, -20.5012, -18.0783, -20.9529, -21.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8506, device='cuda:0', dtype=torch.float64)
tensor([-11.0270, -20.9152, -18.2466, -21.0440, -21.2815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8000, device='cuda:0', dtype=torch.float64)
tensor([-11.1420, -21.0968, -18.4790, -21.1792, -21.3536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7917, device='cuda:0', dtype=torch.float64)
tensor([-11.2627, -21.2628, -18.7427, -21.4102, -21.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8759, device='cuda:0', dtype=torch.float64)
tensor([-11.3179, -21.3613, -18.9276, -21.6499, -21.4797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7909, device='cuda:0', dtype=torch.float64)
tensor([-11.4244, -21.5425, -19.2987, -21.9838, -21.7091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7637, device='cuda:0', dtype=torch.float64)
tensor([-11.4636, -21.6584, -19.5502, -22.1805, -21.9112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7702, device='cuda:0', dtype=torch.float64)
tensor([-11.4548, -21.6589, -19.7139, -22.2636, -21.9956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6992, device='cuda:0', dtype=torch.float64)
tensor([-11.3990, -21.4880, -19.7796, -22.2466, -21.9827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8449, device='cuda:0', dtype=torch.float64)
tensor([-11.3220, -21.3134, -19.9211, -22.3078, -22.0138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7543, device='cuda:0', dtype=torch.float64)
tensor([-11.2065, -21.1724, -19.9137, -22.2753, -22.1405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6222, device='cuda:0', dtype=torch.float64)
tensor([-11.1353, -20.9601, -19.9610, -22.2409, -22.1999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7424, device='cuda:0', dtype=torch.float64)
tensor([-11.1053, -20.9522, -20.0588, -22.2739, -22.1238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8620, device='cuda:0', dtype=torch.float64)
tensor([-11.0510, -21.0801, -20.1718, -22.1311, -21.8480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7199, device='cuda:0', dtype=torch.float64)
tensor([-10.9375, -21.3938, -20.1911, -21.8769, -21.7424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8786, device='cuda:0', dtype=torch.float64)
tensor([-10.8237, -21.5406, -20.0280, -21.5368, -21.6175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7395, device='cuda:0', dtype=torch.float64)
tensor([-10.7530, -21.7587, -19.9574, -21.2378, -21.5988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6803, device='cuda:0', dtype=torch.float64)
tensor([-10.7313, -21.9874, -19.8680, -21.0469, -21.6554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8658, device='cuda:0', dtype=torch.float64)
tensor([-10.6947, -22.2760, -19.8727, -20.7630, -21.7491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9232, device='cuda:0', dtype=torch.float64)
tensor([-10.7152, -22.7280, -19.9123, -20.6628, -21.8306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8275, device='cuda:0', dtype=torch.float64)
tensor([-10.6920, -23.0434, -19.9741, -20.5739, -21.7914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7071, device='cuda:0', dtype=torch.float64)
tensor([-10.6631, -23.3015, -19.9653, -20.4450, -21.5932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8234, device='cuda:0', dtype=torch.float64)
tensor([-10.6307, -23.7289, -19.9915, -20.3238, -21.4876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6240, device='cuda:0', dtype=torch.float64)
tensor([-10.6039, -24.0047, -20.0811, -20.3127, -21.3375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7383, device='cuda:0', dtype=torch.float64)
tensor([-10.5248, -24.1689, -19.8356, -20.1923, -21.3128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7546, device='cuda:0', dtype=torch.float64)
tensor([-10.4745, -24.1209, -19.6366, -20.0994, -21.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7862, device='cuda:0', dtype=torch.float64)
tensor([-10.4111, -23.9448, -19.3829, -19.9106, -21.1694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9503, device='cuda:0', dtype=torch.float64)
tensor([-10.3239, -23.8746, -19.0587, -19.9514, -21.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6763, device='cuda:0', dtype=torch.float64)
tensor([-10.2536, -23.7723, -18.7646, -19.8751, -21.1001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7937, device='cuda:0', dtype=torch.float64)
tensor([-10.1492, -23.5258, -18.3812, -19.7634, -21.0778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6665, device='cuda:0', dtype=torch.float64)
tensor([-10.0816, -23.3647, -17.9501, -19.6476, -21.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7988, device='cuda:0', dtype=torch.float64)
tensor([-10.1015, -23.1026, -17.6276, -19.6001, -21.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8362, device='cuda:0', dtype=torch.float64)
tensor([-10.1523, -22.8921, -17.4345, -19.6310, -21.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8386, device='cuda:0', dtype=torch.float64)
tensor([-10.2048, -22.6470, -17.4309, -19.7079, -21.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7812, device='cuda:0', dtype=torch.float64)
tensor([-10.2584, -22.4153, -17.4577, -19.8488, -21.3058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7731, device='cuda:0', dtype=torch.float64)
tensor([-10.2803, -22.1722, -17.2975, -19.8567, -21.3030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8456, device='cuda:0', dtype=torch.float64)
tensor([-10.2842, -21.9131, -17.2071, -19.9880, -21.4736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7020, device='cuda:0', dtype=torch.float64)
tensor([-10.3033, -21.5892, -17.1391, -20.0215, -21.5613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7611, device='cuda:0', dtype=torch.float64)
tensor([-10.2775, -21.2095, -16.9800, -19.8616, -21.3959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7907, device='cuda:0', dtype=torch.float64)
tensor([-10.2223, -20.8603, -16.6843, -19.7515, -21.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7771, device='cuda:0', dtype=torch.float64)
tensor([-10.2349, -20.5519, -16.5116, -19.7377, -21.0824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7057, device='cuda:0', dtype=torch.float64)
tensor([-10.2373, -20.3450, -16.2954, -19.6914, -21.0799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7065, device='cuda:0', dtype=torch.float64)
tensor([-10.3172, -20.2742, -16.1022, -19.7198, -21.2604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8146, device='cuda:0', dtype=torch.float64)
tensor([-10.4185, -20.2821, -15.9601, -19.7039, -21.5090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6336, device='cuda:0', dtype=torch.float64)
tensor([-10.5340, -20.3465, -15.8179, -19.6422, -21.7198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6929, device='cuda:0', dtype=torch.float64)
tensor([-10.6264, -20.4936, -15.7091, -19.5581, -22.0661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7588, device='cuda:0', dtype=torch.float64)
tensor([-10.6629, -20.5322, -15.5765, -19.3398, -22.1560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6941, device='cuda:0', dtype=torch.float64)
tensor([-10.6498, -20.4165, -15.3661, -19.0167, -22.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6922, device='cuda:0', dtype=torch.float64)
tensor([-10.6611, -20.3926, -15.0371, -18.6710, -22.3899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7589, device='cuda:0', dtype=torch.float64)
tensor([-10.6521, -20.2780, -14.7659, -18.4156, -22.4450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6882, device='cuda:0', dtype=torch.float64)
tensor([-10.6271, -20.2747, -14.4862, -18.2932, -22.4256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7087, device='cuda:0', dtype=torch.float64)
tensor([-10.6639, -20.2838, -14.3407, -18.1827, -22.4688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7206, device='cuda:0', dtype=torch.float64)
tensor([-10.6946, -20.3070, -14.3563, -18.1789, -22.6693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7198, device='cuda:0', dtype=torch.float64)
tensor([-10.7454, -20.4251, -14.4302, -18.2754, -22.9042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7623, device='cuda:0', dtype=torch.float64)
tensor([-10.7840, -20.4765, -14.4878, -18.3953, -23.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6800, device='cuda:0', dtype=torch.float64)
tensor([-10.8241, -20.5755, -14.5410, -18.5431, -23.4249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6972, device='cuda:0', dtype=torch.float64)
tensor([-10.9551, -20.5739, -14.7283, -18.7553, -23.4798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8477, device='cuda:0', dtype=torch.float64)
tensor([-11.1000, -20.5142, -15.1034, -18.9251, -23.2852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7363, device='cuda:0', dtype=torch.float64)
tensor([-11.1189, -20.5144, -15.2725, -19.0261, -23.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6982, device='cuda:0', dtype=torch.float64)
tensor([-11.0765, -20.5918, -15.2889, -19.1155, -23.0283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7995, device='cuda:0', dtype=torch.float64)
tensor([-11.0413, -20.5614, -15.3181, -19.2688, -22.8760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6487, device='cuda:0', dtype=torch.float64)
tensor([-11.0451, -20.5153, -15.3045, -19.4632, -22.9065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7099, device='cuda:0', dtype=torch.float64)
tensor([-11.0048, -20.5044, -15.2635, -19.6604, -22.8776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7883, device='cuda:0', dtype=torch.float64)
tensor([-10.9052, -20.4515, -15.1541, -19.7808, -22.6230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8107, device='cuda:0', dtype=torch.float64)
tensor([-10.8303, -20.6650, -14.8773, -19.7863, -22.4535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7081, device='cuda:0', dtype=torch.float64)
tensor([-10.7314, -20.5976, -14.4931, -19.6356, -22.3751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7088, device='cuda:0', dtype=torch.float64)
tensor([-10.6237, -20.4607, -14.1749, -19.5105, -22.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6020, device='cuda:0', dtype=torch.float64)
tensor([-10.4900, -20.2822, -13.7933, -19.4042, -21.9467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7501, device='cuda:0', dtype=torch.float64)
tensor([-10.3846, -20.1051, -13.4733, -19.3869, -21.8086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7164, device='cuda:0', dtype=torch.float64)
tensor([-10.2755, -20.1224, -13.1474, -19.3803, -21.7723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5780, device='cuda:0', dtype=torch.float64)
tensor([-10.1602, -20.1573, -12.7857, -19.3531, -21.6856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6860, device='cuda:0', dtype=torch.float64)
tensor([-10.1048, -20.2733, -12.4616, -19.3700, -21.8179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6987, device='cuda:0', dtype=torch.float64)
tensor([-10.0482, -20.3878, -12.1708, -19.4807, -21.9340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7474, device='cuda:0', dtype=torch.float64)
tensor([-10.0224, -20.6297, -11.8371, -19.6506, -22.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6827, device='cuda:0', dtype=torch.float64)
tensor([-10.0491, -20.8176, -11.6788, -19.8491, -22.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7201, device='cuda:0', dtype=torch.float64)
tensor([-10.0733, -21.0161, -11.5478, -20.0609, -22.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8820, device='cuda:0', dtype=torch.float64)
tensor([-10.1184, -21.0883, -11.5294, -20.1494, -22.0778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6791, device='cuda:0', dtype=torch.float64)
tensor([-10.0944, -21.0786, -11.4953, -20.1291, -21.8548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8698, device='cuda:0', dtype=torch.float64)
tensor([-10.1251, -21.1020, -11.4861, -20.2038, -21.6311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6176, device='cuda:0', dtype=torch.float64)
tensor([-10.1350, -21.1291, -11.5275, -20.3067, -21.4363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6289, device='cuda:0', dtype=torch.float64)
tensor([-10.2196, -21.1502, -11.6203, -20.4089, -21.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6267, device='cuda:0', dtype=torch.float64)
tensor([-10.2948, -21.1032, -11.6610, -20.5230, -21.1632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7528, device='cuda:0', dtype=torch.float64)
tensor([-10.4147, -21.1240, -11.7423, -20.8819, -21.3726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5962, device='cuda:0', dtype=torch.float64)
tensor([-10.5109, -21.2381, -11.7929, -21.1760, -21.5701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8688, device='cuda:0', dtype=torch.float64)
tensor([-10.4901, -21.1677, -11.7543, -21.1380, -21.6670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6870, device='cuda:0', dtype=torch.float64)
tensor([-10.4600, -21.2011, -11.7988, -21.1403, -21.8426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7298, device='cuda:0', dtype=torch.float64)
tensor([-10.4540, -21.1349, -11.8437, -21.0809, -21.9629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7276, device='cuda:0', dtype=torch.float64)
tensor([-10.4748, -21.1589, -11.8630, -20.9039, -22.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5573, device='cuda:0', dtype=torch.float64)
tensor([-10.5067, -21.1838, -11.8930, -20.7653, -22.4052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6117, device='cuda:0', dtype=torch.float64)
tensor([-10.5522, -21.1534, -11.9471, -20.6619, -22.5814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5616, device='cuda:0', dtype=torch.float64)
tensor([-10.5953, -21.2010, -11.9514, -20.5918, -22.7796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7640, device='cuda:0', dtype=torch.float64)
tensor([-10.7123, -21.4796, -11.8901, -20.5575, -23.0271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7921, device='cuda:0', dtype=torch.float64)
tensor([-10.7912, -21.8103, -11.8398, -20.4748, -23.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7131, device='cuda:0', dtype=torch.float64)
tensor([-10.8076, -22.0079, -11.7404, -20.3460, -23.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8543, device='cuda:0', dtype=torch.float64)
tensor([-10.8695, -22.2806, -11.6554, -20.4097, -23.0919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5938, device='cuda:0', dtype=torch.float64)
tensor([-10.9240, -22.5250, -11.5404, -20.4080, -23.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5715, device='cuda:0', dtype=torch.float64)
tensor([-10.9609, -22.7176, -11.4961, -20.3387, -22.9670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5892, device='cuda:0', dtype=torch.float64)
tensor([-10.9941, -22.8674, -11.5428, -20.2745, -22.7900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7472, device='cuda:0', dtype=torch.float64)
tensor([-10.9836, -22.9137, -11.5916, -20.1838, -22.4810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6249, device='cuda:0', dtype=torch.float64)
tensor([-11.0007, -22.9520, -11.6781, -20.0225, -22.0857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6119, device='cuda:0', dtype=torch.float64)
tensor([-10.9985, -22.9500, -11.7249, -19.8120, -21.8406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7972, device='cuda:0', dtype=torch.float64)
tensor([-10.9068, -22.9109, -11.7252, -19.4620, -21.6129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8157, device='cuda:0', dtype=torch.float64)
tensor([-10.7822, -22.7940, -11.7374, -19.1875, -21.3483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7071, device='cuda:0', dtype=torch.float64)
tensor([-10.6464, -22.7335, -11.7130, -18.8228, -21.0570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6373, device='cuda:0', dtype=torch.float64)
tensor([-10.5143, -22.5048, -11.6102, -18.4654, -20.7316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6096, device='cuda:0', dtype=torch.float64)
tensor([-10.3933, -22.2286, -11.5674, -18.1828, -20.4368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6047, device='cuda:0', dtype=torch.float64)
tensor([-10.3571, -21.9758, -11.5612, -17.9254, -20.2423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6041, device='cuda:0', dtype=torch.float64)
tensor([-10.3309, -21.8348, -11.5200, -17.6908, -20.0694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5448, device='cuda:0', dtype=torch.float64)
tensor([-10.2631, -21.6768, -11.4391, -17.4757, -19.9351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8048, device='cuda:0', dtype=torch.float64)
tensor([-10.2540, -21.5636, -11.4482, -17.3535, -19.8826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6697, device='cuda:0', dtype=torch.float64)
tensor([-10.2359, -21.3451, -11.4599, -17.3540, -19.9170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6140, device='cuda:0', dtype=torch.float64)
tensor([-10.2012, -21.0254, -11.4741, -17.2908, -19.9362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7512, device='cuda:0', dtype=torch.float64)
tensor([-10.1524, -20.8548, -11.4480, -17.1287, -19.8430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6820, device='cuda:0', dtype=torch.float64)
tensor([-10.0911, -20.6699, -11.3809, -16.9757, -19.8517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7258, device='cuda:0', dtype=torch.float64)
tensor([-10.0500, -20.4221, -11.3777, -16.8093, -19.8156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7540, device='cuda:0', dtype=torch.float64)
tensor([-10.0558, -20.2070, -11.3744, -16.5850, -19.7005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7233, device='cuda:0', dtype=torch.float64)
tensor([-10.0918, -20.0444, -11.4279, -16.4056, -19.6377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6850, device='cuda:0', dtype=torch.float64)
tensor([-10.1379, -19.9352, -11.4624, -16.1231, -19.6273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6122, device='cuda:0', dtype=torch.float64)
tensor([-10.1382, -19.7664, -11.4684, -15.9512, -19.7015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5458, device='cuda:0', dtype=torch.float64)
tensor([-10.1726, -19.6923, -11.5354, -15.8488, -19.7813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5655, device='cuda:0', dtype=torch.float64)
tensor([-10.2198, -19.7136, -11.5547, -15.7387, -19.8568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5591, device='cuda:0', dtype=torch.float64)
tensor([-10.3140, -19.7586, -11.5918, -15.5759, -19.8479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6749, device='cuda:0', dtype=torch.float64)
tensor([-10.3645, -19.7610, -11.5503, -15.3393, -19.7562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6626, device='cuda:0', dtype=torch.float64)
tensor([-10.4166, -19.8658, -11.5648, -15.2291, -19.7440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6197, device='cuda:0', dtype=torch.float64)
tensor([-10.5072, -19.8933, -11.5972, -15.1013, -19.7371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5896, device='cuda:0', dtype=torch.float64)
tensor([-10.6055, -19.7895, -11.5628, -14.8689, -19.6573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5510, device='cuda:0', dtype=torch.float64)
tensor([-10.6616, -19.6685, -11.5544, -14.7761, -19.6311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6464, device='cuda:0', dtype=torch.float64)
tensor([-10.6675, -19.7148, -11.5106, -14.7480, -19.6698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6235, device='cuda:0', dtype=torch.float64)
tensor([-10.6958, -19.7287, -11.5164, -14.7150, -19.6554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7089, device='cuda:0', dtype=torch.float64)
tensor([-10.6145, -19.6512, -11.4858, -14.6709, -19.5989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7881, device='cuda:0', dtype=torch.float64)
tensor([-10.5740, -19.6768, -11.4372, -14.6295, -19.5782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6360, device='cuda:0', dtype=torch.float64)
tensor([-10.5388, -19.7624, -11.3315, -14.6161, -19.5937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6913, device='cuda:0', dtype=torch.float64)
tensor([-10.4627, -19.8180, -11.2517, -14.6166, -19.7154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5838, device='cuda:0', dtype=torch.float64)
tensor([-10.3951, -19.8364, -11.2612, -14.6518, -19.7986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6387, device='cuda:0', dtype=torch.float64)
tensor([-10.3762, -19.9379, -11.2943, -14.6893, -19.9106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5805, device='cuda:0', dtype=torch.float64)
tensor([-10.3262, -19.9470, -11.3296, -14.7189, -19.8893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5408, device='cuda:0', dtype=torch.float64)
tensor([-10.3111, -20.0225, -11.4089, -14.7493, -19.9006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7098, device='cuda:0', dtype=torch.float64)
tensor([-10.3663, -20.1561, -11.5055, -14.8366, -20.0024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5344, device='cuda:0', dtype=torch.float64)
tensor([-10.4669, -20.2806, -11.6365, -14.9939, -20.0488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5850, device='cuda:0', dtype=torch.float64)
tensor([-10.5609, -20.3678, -11.7463, -15.1654, -20.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5678, device='cuda:0', dtype=torch.float64)
tensor([-10.5626, -20.4804, -11.8692, -15.3958, -20.3812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5798, device='cuda:0', dtype=torch.float64)
tensor([-10.6227, -20.6027, -12.0355, -15.5490, -20.6340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5514, device='cuda:0', dtype=torch.float64)
tensor([-10.6942, -20.7127, -12.2148, -15.7056, -20.8434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5326, device='cuda:0', dtype=torch.float64)
tensor([-10.7492, -20.7437, -12.3935, -15.9539, -21.0317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5775, device='cuda:0', dtype=torch.float64)
tensor([-10.8141, -20.8806, -12.5596, -16.2060, -21.3279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6276, device='cuda:0', dtype=torch.float64)
tensor([-10.9013, -21.1196, -12.7351, -16.5269, -21.6817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6066, device='cuda:0', dtype=torch.float64)
tensor([-10.9564, -21.4295, -12.8675, -16.8771, -22.0037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4767, device='cuda:0', dtype=torch.float64)
tensor([-11.0340, -21.6686, -12.9813, -17.1661, -22.2180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6499, device='cuda:0', dtype=torch.float64)
tensor([-11.1264, -22.0088, -13.1891, -17.5350, -22.5890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5887, device='cuda:0', dtype=torch.float64)
tensor([-11.1982, -22.4592, -13.3815, -17.9423, -22.9637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6885, device='cuda:0', dtype=torch.float64)
tensor([-11.2640, -22.8386, -13.5333, -18.3293, -23.2488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7126, device='cuda:0', dtype=torch.float64)
tensor([-11.2862, -23.2525, -13.6506, -18.7142, -23.4577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4767, device='cuda:0', dtype=torch.float64)
tensor([-11.3023, -23.6093, -13.7619, -19.1088, -23.5713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5085, device='cuda:0', dtype=torch.float64)
tensor([-11.3231, -23.8515, -13.8515, -19.5055, -23.7930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6256, device='cuda:0', dtype=torch.float64)
tensor([-11.2908, -24.0601, -13.8890, -19.9590, -23.9782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6405, device='cuda:0', dtype=torch.float64)
tensor([-11.2744, -24.1722, -13.9162, -20.3451, -24.2025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5808, device='cuda:0', dtype=torch.float64)
tensor([-11.3247, -24.3240, -14.0295, -20.6841, -24.4535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5184, device='cuda:0', dtype=torch.float64)
tensor([-11.4166, -24.4467, -14.2517, -20.9687, -24.7503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5991, device='cuda:0', dtype=torch.float64)
tensor([-11.4843, -24.5295, -14.3512, -21.2200, -24.9830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7142, device='cuda:0', dtype=torch.float64)
tensor([-11.5703, -24.5897, -14.4836, -21.4915, -25.3105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4768, device='cuda:0', dtype=torch.float64)
tensor([-11.6348, -24.7312, -14.6208, -21.7684, -25.5955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5360, device='cuda:0', dtype=torch.float64)
tensor([-11.6889, -24.8917, -14.6938, -22.0117, -25.7373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5782, device='cuda:0', dtype=torch.float64)
tensor([-11.7648, -25.0855, -14.7247, -22.1990, -25.7834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5891, device='cuda:0', dtype=torch.float64)
tensor([-11.8012, -25.3656, -14.7665, -22.3803, -25.8105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5263, device='cuda:0', dtype=torch.float64)
tensor([-11.8336, -25.6001, -14.7934, -22.5605, -25.6575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5963, device='cuda:0', dtype=torch.float64)
tensor([-11.8409, -25.8426, -14.7693, -22.6784, -25.4348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6348, device='cuda:0', dtype=torch.float64)
tensor([-11.9095, -26.0176, -14.9374, -22.9675, -25.3388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5032, device='cuda:0', dtype=torch.float64)
tensor([-11.9468, -26.1319, -15.0756, -23.2146, -25.1332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4851, device='cuda:0', dtype=torch.float64)
tensor([-12.0280, -26.4418, -15.3115, -23.4720, -25.0136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5364, device='cuda:0', dtype=torch.float64)
tensor([-12.0544, -26.7197, -15.4397, -23.6460, -24.9149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5436, device='cuda:0', dtype=torch.float64)
tensor([-12.0346, -26.9287, -15.5720, -23.8937, -24.8023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5729, device='cuda:0', dtype=torch.float64)
tensor([-12.0216, -27.0194, -15.7352, -24.1181, -24.5892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5343, device='cuda:0', dtype=torch.float64)
tensor([-11.9385, -26.9460, -15.8360, -24.3270, -24.3817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5305, device='cuda:0', dtype=torch.float64)
tensor([-11.8896, -26.9266, -15.9193, -24.4575, -24.2245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6270, device='cuda:0', dtype=torch.float64)
tensor([-11.8366, -26.9042, -16.0170, -24.5462, -24.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4783, device='cuda:0', dtype=torch.float64)
tensor([-11.7932, -26.9207, -16.0713, -24.6195, -24.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5000, device='cuda:0', dtype=torch.float64)
tensor([-11.7575, -26.9859, -16.1844, -24.7012, -24.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5473, device='cuda:0', dtype=torch.float64)
tensor([-11.7256, -27.1321, -16.2804, -24.7982, -24.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5324, device='cuda:0', dtype=torch.float64)
tensor([-11.6943, -27.4074, -16.4269, -24.9369, -24.0517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5103, device='cuda:0', dtype=torch.float64)
tensor([-11.6921, -27.7390, -16.5687, -24.9997, -23.9000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5384, device='cuda:0', dtype=torch.float64)
tensor([-11.7183, -28.0964, -16.7320, -25.1074, -23.7230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5169, device='cuda:0', dtype=torch.float64)
tensor([-11.7824, -28.5120, -16.8987, -25.1503, -23.5991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5703, device='cuda:0', dtype=torch.float64)
tensor([-11.8360, -28.8390, -17.0779, -25.1007, -23.4283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6474, device='cuda:0', dtype=torch.float64)
tensor([-11.8669, -29.1730, -17.2607, -25.0698, -23.2458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4490, device='cuda:0', dtype=torch.float64)
tensor([-11.8871, -29.4247, -17.4560, -24.9558, -23.0117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6743, device='cuda:0', dtype=torch.float64)
tensor([-11.8495, -29.7926, -17.6447, -24.9819, -22.9018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5535, device='cuda:0', dtype=torch.float64)
tensor([-11.8252, -30.0800, -17.8470, -25.0015, -22.8360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5369, device='cuda:0', dtype=torch.float64)
tensor([-11.8326, -30.2792, -18.0850, -24.9883, -22.7280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5412, device='cuda:0', dtype=torch.float64)
tensor([-11.8121, -30.6008, -18.2886, -24.9723, -22.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4914, device='cuda:0', dtype=torch.float64)
tensor([-11.8178, -30.9566, -18.4869, -24.8996, -22.7398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5031, device='cuda:0', dtype=torch.float64)
tensor([-11.8090, -31.2480, -18.7282, -24.7808, -22.6675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4931, device='cuda:0', dtype=torch.float64)
tensor([-11.7762, -31.5775, -19.0064, -24.7352, -22.5582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4788, device='cuda:0', dtype=torch.float64)
tensor([-11.7438, -31.8934, -19.2958, -24.6652, -22.4107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5658, device='cuda:0', dtype=torch.float64)
tensor([-11.7006, -32.1753, -19.6757, -24.7895, -22.2889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5606, device='cuda:0', dtype=torch.float64)
tensor([-11.7495, -32.4748, -20.1175, -24.8728, -22.1565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4810, device='cuda:0', dtype=torch.float64)
tensor([-11.7794, -32.6920, -20.5215, -24.9786, -22.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4895, device='cuda:0', dtype=torch.float64)
tensor([-11.8114, -32.8365, -20.8301, -25.1432, -22.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4995, device='cuda:0', dtype=torch.float64)
tensor([-11.8378, -32.9429, -21.0687, -25.3884, -22.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4644, device='cuda:0', dtype=torch.float64)
tensor([-11.8889, -33.1351, -21.3072, -25.6959, -22.4434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5487, device='cuda:0', dtype=torch.float64)
tensor([-11.9469, -33.3250, -21.5437, -26.0329, -22.6367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5684, device='cuda:0', dtype=torch.float64)
tensor([-11.9748, -33.6483, -21.7151, -26.3564, -22.8309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5298, device='cuda:0', dtype=torch.float64)
tensor([-11.9967, -33.8340, -21.8874, -26.7505, -23.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4760, device='cuda:0', dtype=torch.float64)
tensor([-12.0248, -33.9213, -22.0330, -27.0081, -23.2143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4354, device='cuda:0', dtype=torch.float64)
tensor([-12.0611, -34.1960, -22.1399, -27.2845, -23.4062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5534, device='cuda:0', dtype=torch.float64)
tensor([-12.1079, -34.5395, -22.2692, -27.6707, -23.7151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4705, device='cuda:0', dtype=torch.float64)
tensor([-12.1359, -34.8839, -22.2909, -27.9978, -23.9799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5579, device='cuda:0', dtype=torch.float64)
tensor([-12.1534, -35.1568, -22.3186, -28.2640, -24.2410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4475, device='cuda:0', dtype=torch.float64)
tensor([-12.1817, -35.3654, -22.2969, -28.4975, -24.4424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5739, device='cuda:0', dtype=torch.float64)
tensor([-12.2247, -35.6018, -22.3440, -28.7579, -24.6291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4645, device='cuda:0', dtype=torch.float64)
tensor([-12.3048, -35.9517, -22.4165, -28.9699, -24.8004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4554, device='cuda:0', dtype=torch.float64)
tensor([-12.3779, -36.2992, -22.5371, -29.2142, -24.9862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4284, device='cuda:0', dtype=torch.float64)
tensor([-12.4518, -36.5111, -22.6574, -29.5122, -25.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5923, device='cuda:0', dtype=torch.float64)
tensor([-12.5467, -36.6693, -22.7764, -29.6918, -25.2668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4942, device='cuda:0', dtype=torch.float64)
tensor([-12.6256, -36.7742, -22.8259, -29.8381, -25.4025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4479, device='cuda:0', dtype=torch.float64)
tensor([-12.6891, -36.7073, -22.8958, -30.0063, -25.5190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5050, device='cuda:0', dtype=torch.float64)
tensor([-12.7263, -36.5320, -22.9497, -30.1627, -25.6605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4482, device='cuda:0', dtype=torch.float64)
tensor([-12.7226, -36.3291, -22.8371, -30.2741, -25.7234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4713, device='cuda:0', dtype=torch.float64)
tensor([-12.7133, -36.1146, -22.7315, -30.2910, -25.6897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4597, device='cuda:0', dtype=torch.float64)
tensor([-12.6821, -35.8035, -22.6073, -30.3695, -25.7318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4714, device='cuda:0', dtype=torch.float64)
tensor([-12.6462, -35.4761, -22.5791, -30.4464, -25.7678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5242, device='cuda:0', dtype=torch.float64)
tensor([-12.5676, -35.0819, -22.5627, -30.4212, -25.7275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4477, device='cuda:0', dtype=torch.float64)
tensor([-12.4570, -34.7381, -22.4764, -30.4315, -25.7316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4643, device='cuda:0', dtype=torch.float64)
tensor([-12.3260, -34.3240, -22.3659, -30.3685, -25.6775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4033, device='cuda:0', dtype=torch.float64)
tensor([-12.1984, -33.8079, -22.2862, -30.2753, -25.6106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4485, device='cuda:0', dtype=torch.float64)
tensor([-12.0661, -33.2455, -22.2210, -30.1925, -25.4856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4931, device='cuda:0', dtype=torch.float64)
tensor([-11.9639, -32.6681, -22.2266, -30.1180, -25.3662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4355, device='cuda:0', dtype=torch.float64)
tensor([-11.8308, -31.9750, -22.2372, -30.1007, -25.2153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4067, device='cuda:0', dtype=torch.float64)
tensor([-11.7325, -31.5291, -22.1955, -30.1256, -25.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4933, device='cuda:0', dtype=torch.float64)
tensor([-11.6680, -31.0518, -22.1459, -30.0622, -25.0949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5307, device='cuda:0', dtype=torch.float64)
tensor([-11.5969, -30.5478, -21.9725, -29.9772, -24.9045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4324, device='cuda:0', dtype=torch.float64)
tensor([-11.5401, -30.0667, -21.8347, -29.9039, -24.7705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4825, device='cuda:0', dtype=torch.float64)
tensor([-11.5031, -29.5294, -21.7158, -29.8126, -24.5116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4450, device='cuda:0', dtype=torch.float64)
tensor([-11.4298, -28.9824, -21.5618, -29.6610, -24.2555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4770, device='cuda:0', dtype=torch.float64)
tensor([-11.3320, -28.4191, -21.3843, -29.4488, -23.9453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5166, device='cuda:0', dtype=torch.float64)
tensor([-11.2112, -27.8949, -21.2203, -29.2811, -23.5911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4068, device='cuda:0', dtype=torch.float64)
tensor([-11.1056, -27.4280, -21.0739, -29.1351, -23.2980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4397, device='cuda:0', dtype=torch.float64)
tensor([-11.0361, -26.9323, -20.8929, -28.9948, -23.0004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4693, device='cuda:0', dtype=torch.float64)
tensor([-10.9848, -26.5946, -20.6387, -28.7614, -22.6503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5242, device='cuda:0', dtype=torch.float64)
tensor([-10.9346, -26.1775, -20.4066, -28.5920, -22.3294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4219, device='cuda:0', dtype=torch.float64)
tensor([-10.9019, -25.7724, -20.1929, -28.3867, -22.0138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4271, device='cuda:0', dtype=torch.float64)
tensor([-10.8497, -25.3880, -19.9761, -28.1357, -21.7742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5195, device='cuda:0', dtype=torch.float64)
tensor([-10.8040, -25.0287, -19.7111, -27.9019, -21.5644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4636, device='cuda:0', dtype=torch.float64)
tensor([-10.7427, -24.7170, -19.4025, -27.5725, -21.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4600, device='cuda:0', dtype=torch.float64)
tensor([-10.6788, -24.6105, -19.1242, -27.2888, -21.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4999, device='cuda:0', dtype=torch.float64)
tensor([-10.6002, -24.3962, -18.7786, -26.9289, -21.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4071, device='cuda:0', dtype=torch.float64)
tensor([-10.5510, -24.2616, -18.5058, -26.6258, -20.9213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5156, device='cuda:0', dtype=torch.float64)
tensor([-10.5045, -24.1664, -18.2315, -26.1892, -20.6821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3932, device='cuda:0', dtype=torch.float64)
tensor([-10.4538, -23.9507, -17.9556, -25.7463, -20.4268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4356, device='cuda:0', dtype=torch.float64)
tensor([-10.3698, -23.6892, -17.5953, -25.2545, -20.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4753, device='cuda:0', dtype=torch.float64)
tensor([-10.3380, -23.4373, -17.3286, -24.8490, -19.8249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3851, device='cuda:0', dtype=torch.float64)
tensor([-10.3109, -23.1951, -17.0875, -24.4728, -19.5394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4573, device='cuda:0', dtype=torch.float64)
tensor([-10.2789, -23.0857, -16.8899, -24.0647, -19.3198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4184, device='cuda:0', dtype=torch.float64)
tensor([-10.2806, -23.0041, -16.7598, -23.7287, -19.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4267, device='cuda:0', dtype=torch.float64)
tensor([-10.2827, -22.9549, -16.6297, -23.4700, -18.9927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4107, device='cuda:0', dtype=torch.float64)
tensor([-10.2833, -22.8218, -16.5453, -23.1541, -18.7657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4520, device='cuda:0', dtype=torch.float64)
tensor([-10.2796, -22.7069, -16.4480, -22.8736, -18.5815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3864, device='cuda:0', dtype=torch.float64)
tensor([-10.2815, -22.5995, -16.2946, -22.5925, -18.3974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3892, device='cuda:0', dtype=torch.float64)
tensor([-10.2973, -22.6750, -16.1845, -22.3118, -18.2578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3811, device='cuda:0', dtype=torch.float64)
tensor([-10.3149, -22.7940, -16.0893, -21.9835, -18.1225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3245, device='cuda:0', dtype=torch.float64)
tensor([-10.3221, -22.9046, -15.9975, -21.7009, -18.0277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4413, device='cuda:0', dtype=torch.float64)
tensor([-10.3367, -23.1577, -15.9705, -21.5070, -18.0669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4302, device='cuda:0', dtype=torch.float64)
tensor([-10.3543, -23.4824, -15.9591, -21.4069, -18.1733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3569, device='cuda:0', dtype=torch.float64)
tensor([-10.3536, -23.8811, -15.9574, -21.4081, -18.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3824, device='cuda:0', dtype=torch.float64)
tensor([-10.3552, -24.1792, -15.9622, -21.4944, -18.5155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4677, device='cuda:0', dtype=torch.float64)
tensor([-10.3647, -24.4077, -15.9403, -21.5010, -18.7237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4163, device='cuda:0', dtype=torch.float64)
tensor([-10.3925, -24.5019, -15.9058, -21.3933, -18.8176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4085, device='cuda:0', dtype=torch.float64)
tensor([-10.3616, -24.4546, -15.8355, -21.2423, -18.8554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3462, device='cuda:0', dtype=torch.float64)
tensor([-10.3084, -24.4320, -15.8395, -21.1504, -18.9410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3657, device='cuda:0', dtype=torch.float64)
tensor([-10.2656, -24.4437, -15.8344, -21.0924, -18.9972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3589, device='cuda:0', dtype=torch.float64)
tensor([-10.2450, -24.4251, -15.7914, -20.9376, -18.9976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4189, device='cuda:0', dtype=torch.float64)
tensor([-10.1643, -24.3833, -15.7295, -20.8756, -19.0399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3429, device='cuda:0', dtype=torch.float64)
tensor([-10.0684, -24.3174, -15.6651, -20.7674, -19.0122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4008, device='cuda:0', dtype=torch.float64)
tensor([-10.0091, -24.3875, -15.6099, -20.7518, -19.0762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4219, device='cuda:0', dtype=torch.float64)
tensor([ -9.9643, -24.4978, -15.5940, -20.7107, -19.1991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3402, device='cuda:0', dtype=torch.float64)
tensor([ -9.9646, -24.5703, -15.5972, -20.6294, -19.2608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3499, device='cuda:0', dtype=torch.float64)
tensor([ -9.9653, -24.7347, -15.6106, -20.5604, -19.3299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3682, device='cuda:0', dtype=torch.float64)
tensor([ -9.9997, -24.7829, -15.6248, -20.4316, -19.3283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3590, device='cuda:0', dtype=torch.float64)
tensor([-10.0050, -24.9124, -15.6469, -20.3235, -19.3639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3336, device='cuda:0', dtype=torch.float64)
tensor([-10.0007, -24.9694, -15.6618, -20.2547, -19.4266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4241, device='cuda:0', dtype=torch.float64)
tensor([-10.0263, -25.0338, -15.6478, -20.1324, -19.4141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3756, device='cuda:0', dtype=torch.float64)
tensor([-10.0403, -25.0882, -15.6724, -20.0318, -19.4039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3236, device='cuda:0', dtype=torch.float64)
tensor([-10.0708, -25.1374, -15.6989, -20.0094, -19.4232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4147, device='cuda:0', dtype=torch.float64)
tensor([-10.0762, -25.1629, -15.7564, -20.0461, -19.5350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3580, device='cuda:0', dtype=torch.float64)
tensor([-10.0980, -25.1881, -15.7466, -20.0182, -19.6312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3535, device='cuda:0', dtype=torch.float64)
tensor([-10.1119, -25.2284, -15.7022, -19.9899, -19.6447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3862, device='cuda:0', dtype=torch.float64)
tensor([-10.1072, -25.2490, -15.6974, -19.9623, -19.6834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2978, device='cuda:0', dtype=torch.float64)
tensor([-10.1066, -25.2624, -15.6849, -19.9453, -19.6595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3873, device='cuda:0', dtype=torch.float64)
tensor([-10.1042, -25.2232, -15.7089, -19.9155, -19.6417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3437, device='cuda:0', dtype=torch.float64)
tensor([-10.1353, -25.1595, -15.7445, -19.9017, -19.5896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3829, device='cuda:0', dtype=torch.float64)
tensor([-10.1638, -25.0610, -15.8086, -19.8654, -19.5434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4041, device='cuda:0', dtype=torch.float64)
tensor([-10.2239, -24.8641, -15.8116, -19.7359, -19.4254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3605, device='cuda:0', dtype=torch.float64)
tensor([-10.2799, -24.5910, -15.8090, -19.6017, -19.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3516, device='cuda:0', dtype=torch.float64)
tensor([-10.3351, -24.3124, -15.8034, -19.4791, -19.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3881, device='cuda:0', dtype=torch.float64)
tensor([-10.3474, -24.0000, -15.7536, -19.3474, -18.9952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3650, device='cuda:0', dtype=torch.float64)
tensor([-10.3392, -23.7075, -15.7340, -19.1906, -18.8808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3459, device='cuda:0', dtype=torch.float64)
tensor([-10.2793, -23.4455, -15.6975, -19.0656, -18.7827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3450, device='cuda:0', dtype=torch.float64)
tensor([-10.2113, -23.1542, -15.6639, -18.9323, -18.6731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2742, device='cuda:0', dtype=torch.float64)
tensor([-10.1655, -22.9976, -15.6470, -18.8157, -18.5820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3431, device='cuda:0', dtype=torch.float64)
tensor([-10.1069, -22.7781, -15.6259, -18.6613, -18.4620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3178, device='cuda:0', dtype=torch.float64)
tensor([-10.0402, -22.5966, -15.5995, -18.5438, -18.3801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3427, device='cuda:0', dtype=torch.float64)
tensor([-10.0386, -22.4623, -15.6125, -18.4315, -18.3173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3443, device='cuda:0', dtype=torch.float64)
tensor([-10.0502, -22.2838, -15.6121, -18.3359, -18.2703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2708, device='cuda:0', dtype=torch.float64)
tensor([-10.0778, -22.0333, -15.6164, -18.1840, -18.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3577, device='cuda:0', dtype=torch.float64)
tensor([-10.0989, -21.8318, -15.5948, -18.0811, -18.2203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3068, device='cuda:0', dtype=torch.float64)
tensor([-10.0839, -21.6281, -15.5848, -18.0369, -18.2222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3320, device='cuda:0', dtype=torch.float64)
tensor([-10.0648, -21.4136, -15.5711, -17.9684, -18.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3014, device='cuda:0', dtype=torch.float64)
tensor([-10.0498, -21.1878, -15.5608, -17.9296, -18.1855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3302, device='cuda:0', dtype=torch.float64)
tensor([-10.0213, -20.9880, -15.5296, -17.9041, -18.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3017, device='cuda:0', dtype=torch.float64)
tensor([-10.0063, -20.8757, -15.4906, -17.8694, -18.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2656, device='cuda:0', dtype=torch.float64)
tensor([ -9.9628, -20.7434, -15.4593, -17.8498, -18.1273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2882, device='cuda:0', dtype=torch.float64)
tensor([ -9.9191, -20.6208, -15.4049, -17.8470, -18.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2519, device='cuda:0', dtype=torch.float64)
tensor([ -9.8831, -20.4914, -15.3204, -17.8553, -18.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3171, device='cuda:0', dtype=torch.float64)
tensor([ -9.8787, -20.3546, -15.2492, -17.8527, -18.1167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3023, device='cuda:0', dtype=torch.float64)
tensor([ -9.8726, -20.3013, -15.1851, -17.8744, -18.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3294, device='cuda:0', dtype=torch.float64)
tensor([ -9.8523, -20.2048, -15.1443, -17.8941, -18.1786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3224, device='cuda:0', dtype=torch.float64)
tensor([ -9.8148, -20.1869, -15.1265, -17.9235, -18.2750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3190, device='cuda:0', dtype=torch.float64)
tensor([ -9.8190, -20.0517, -15.1167, -17.9171, -18.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2836, device='cuda:0', dtype=torch.float64)
tensor([ -9.8006, -19.9560, -15.0909, -17.9050, -18.4212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3335, device='cuda:0', dtype=torch.float64)
tensor([ -9.7921, -19.8501, -15.0850, -17.9348, -18.5060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3305, device='cuda:0', dtype=torch.float64)
tensor([ -9.7419, -19.6304, -15.0780, -17.9405, -18.5726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3174, device='cuda:0', dtype=torch.float64)
tensor([ -9.7081, -19.5328, -15.0905, -17.9493, -18.6241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2807, device='cuda:0', dtype=torch.float64)
tensor([ -9.6904, -19.4686, -15.1538, -17.9540, -18.6369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3440, device='cuda:0', dtype=torch.float64)
tensor([ -9.7076, -19.4344, -15.2182, -17.9483, -18.6413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2412, device='cuda:0', dtype=torch.float64)
tensor([ -9.7326, -19.4301, -15.2734, -17.9735, -18.6464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2992, device='cuda:0', dtype=torch.float64)
tensor([ -9.7580, -19.3920, -15.3149, -17.9452, -18.5918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3032, device='cuda:0', dtype=torch.float64)
tensor([ -9.7541, -19.3590, -15.3900, -17.9023, -18.5268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2867, device='cuda:0', dtype=torch.float64)
tensor([ -9.7047, -19.3315, -15.4391, -17.8448, -18.4587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2471, device='cuda:0', dtype=torch.float64)
tensor([ -9.6230, -19.2740, -15.4661, -17.7802, -18.3723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3143, device='cuda:0', dtype=torch.float64)
tensor([ -9.5853, -19.1032, -15.4861, -17.6954, -18.2913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3535, device='cuda:0', dtype=torch.float64)
tensor([ -9.5518, -18.8926, -15.5197, -17.6221, -18.2496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2941, device='cuda:0', dtype=torch.float64)
tensor([ -9.5451, -18.7048, -15.5552, -17.5626, -18.2326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3747, device='cuda:0', dtype=torch.float64)
tensor([ -9.5233, -18.5222, -15.6132, -17.5638, -18.1676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2618, device='cuda:0', dtype=torch.float64)
tensor([ -9.5037, -18.3892, -15.6308, -17.5835, -18.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2645, device='cuda:0', dtype=torch.float64)
tensor([ -9.4627, -18.2537, -15.6070, -17.6394, -17.9993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3064, device='cuda:0', dtype=torch.float64)
tensor([ -9.4244, -18.0874, -15.5277, -17.6823, -17.8609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3467, device='cuda:0', dtype=torch.float64)
tensor([ -9.3713, -17.9854, -15.4704, -17.7606, -17.7386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2233, device='cuda:0', dtype=torch.float64)
tensor([ -9.3165, -17.9508, -15.4323, -17.8483, -17.6381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2875, device='cuda:0', dtype=torch.float64)
tensor([ -9.2681, -17.9231, -15.4288, -17.8839, -17.5729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2923, device='cuda:0', dtype=torch.float64)
tensor([ -9.2047, -17.8771, -15.4317, -17.8594, -17.4862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2193, device='cuda:0', dtype=torch.float64)
tensor([ -9.1641, -17.8320, -15.4521, -17.8594, -17.4254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2747, device='cuda:0', dtype=torch.float64)
tensor([ -9.0990, -17.7746, -15.4565, -17.8562, -17.3950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3085, device='cuda:0', dtype=torch.float64)
tensor([ -9.0147, -17.7255, -15.4338, -17.8467, -17.3871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2647, device='cuda:0', dtype=torch.float64)
tensor([ -8.9228, -17.6815, -15.4758, -17.8407, -17.3916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2726, device='cuda:0', dtype=torch.float64)
tensor([ -8.8123, -17.6680, -15.4953, -17.8712, -17.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2535, device='cuda:0', dtype=torch.float64)
tensor([ -8.7106, -17.6048, -15.5097, -17.8647, -17.3963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2664, device='cuda:0', dtype=torch.float64)
tensor([ -8.6570, -17.5041, -15.4844, -17.8472, -17.3410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3018, device='cuda:0', dtype=torch.float64)
tensor([ -8.6038, -17.4074, -15.4675, -17.8588, -17.3007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2846, device='cuda:0', dtype=torch.float64)
tensor([ -8.5738, -17.3016, -15.4159, -17.8546, -17.2396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2110, device='cuda:0', dtype=torch.float64)
tensor([ -8.5395, -17.1853, -15.3738, -17.8216, -17.1957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2889, device='cuda:0', dtype=torch.float64)
tensor([ -8.5156, -17.1029, -15.3909, -17.8369, -17.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3048, device='cuda:0', dtype=torch.float64)
tensor([ -8.4920, -17.0431, -15.3969, -17.9123, -17.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3006, device='cuda:0', dtype=torch.float64)
tensor([ -8.4894, -16.9898, -15.3825, -17.9620, -17.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2550, device='cuda:0', dtype=torch.float64)
tensor([ -8.4673, -16.9129, -15.3721, -18.0168, -17.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2481, device='cuda:0', dtype=torch.float64)
tensor([ -8.4556, -16.8191, -15.3839, -18.0562, -17.2127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2299, device='cuda:0', dtype=torch.float64)
tensor([ -8.4573, -16.7015, -15.4045, -18.0747, -17.2047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2498, device='cuda:0', dtype=torch.float64)
tensor([ -8.4396, -16.6348, -15.4372, -18.0650, -17.2206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2286, device='cuda:0', dtype=torch.float64)
tensor([ -8.4445, -16.5913, -15.4448, -18.0344, -17.2439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2089, device='cuda:0', dtype=torch.float64)
tensor([ -8.4598, -16.5577, -15.4529, -18.0237, -17.2600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2651, device='cuda:0', dtype=torch.float64)
tensor([ -8.4618, -16.5378, -15.4585, -17.9882, -17.2868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2223, device='cuda:0', dtype=torch.float64)
tensor([ -8.4425, -16.5581, -15.4550, -17.9498, -17.3338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2299, device='cuda:0', dtype=torch.float64)
tensor([ -8.4360, -16.6017, -15.4439, -17.9132, -17.3677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2709, device='cuda:0', dtype=torch.float64)
tensor([ -8.4406, -16.6904, -15.4545, -17.9083, -17.3947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2424, device='cuda:0', dtype=torch.float64)
tensor([ -8.4303, -16.7636, -15.4403, -17.9333, -17.4611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2570, device='cuda:0', dtype=torch.float64)
tensor([ -8.4156, -16.8125, -15.4025, -17.9978, -17.5037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2269, device='cuda:0', dtype=torch.float64)
tensor([ -8.4004, -16.8394, -15.3661, -18.0420, -17.5479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2718, device='cuda:0', dtype=torch.float64)
tensor([ -8.3767, -16.9041, -15.3458, -18.0439, -17.5789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2628, device='cuda:0', dtype=torch.float64)
tensor([ -8.3624, -16.9488, -15.3254, -18.0122, -17.5861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2474, device='cuda:0', dtype=torch.float64)
tensor([ -8.3429, -17.0328, -15.3137, -18.0013, -17.6168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2380, device='cuda:0', dtype=torch.float64)
tensor([ -8.3222, -17.1216, -15.3052, -17.9734, -17.6600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1990, device='cuda:0', dtype=torch.float64)
tensor([ -8.3028, -17.1884, -15.2524, -17.9647, -17.6922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2365, device='cuda:0', dtype=torch.float64)
tensor([ -8.2879, -17.2519, -15.2043, -17.9250, -17.7145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2213, device='cuda:0', dtype=torch.float64)
tensor([ -8.2581, -17.3161, -15.1549, -17.9040, -17.7457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2516, device='cuda:0', dtype=torch.float64)
tensor([ -8.2384, -17.3710, -15.0901, -17.8507, -17.7666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2438, device='cuda:0', dtype=torch.float64)
tensor([ -8.2087, -17.4354, -15.0570, -17.7801, -17.8393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2642, device='cuda:0', dtype=torch.float64)
tensor([ -8.1864, -17.5099, -15.0589, -17.7087, -17.9434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1910, device='cuda:0', dtype=torch.float64)
tensor([ -8.1595, -17.5772, -15.0998, -17.6747, -18.0708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2130, device='cuda:0', dtype=torch.float64)
tensor([ -8.1434, -17.6348, -15.1416, -17.6127, -18.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2158, device='cuda:0', dtype=torch.float64)
tensor([ -8.1297, -17.6812, -15.1643, -17.5800, -18.3563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2858, device='cuda:0', dtype=torch.float64)
tensor([ -8.1248, -17.6417, -15.1982, -17.5815, -18.4679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2433, device='cuda:0', dtype=torch.float64)
tensor([ -8.1188, -17.6705, -15.2270, -17.5669, -18.5704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2170, device='cuda:0', dtype=torch.float64)
tensor([ -8.1052, -17.7038, -15.2317, -17.5541, -18.6765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1960, device='cuda:0', dtype=torch.float64)
tensor([ -8.0925, -17.7481, -15.2256, -17.5646, -18.7789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2439, device='cuda:0', dtype=torch.float64)
tensor([ -8.0850, -17.7442, -15.2226, -17.5447, -18.8721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1882, device='cuda:0', dtype=torch.float64)
tensor([ -8.0759, -17.7294, -15.1903, -17.5255, -18.9535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2269, device='cuda:0', dtype=torch.float64)
tensor([ -8.0728, -17.7132, -15.1492, -17.5054, -19.0485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2317, device='cuda:0', dtype=torch.float64)
tensor([ -8.0706, -17.7135, -15.0956, -17.5264, -19.1152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1986, device='cuda:0', dtype=torch.float64)
tensor([ -8.0613, -17.7275, -15.0450, -17.4993, -19.1488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1650, device='cuda:0', dtype=torch.float64)
tensor([ -8.0600, -17.7262, -14.9969, -17.4622, -19.1481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1869, device='cuda:0', dtype=torch.float64)
tensor([ -8.0562, -17.7232, -14.9625, -17.3950, -19.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2352, device='cuda:0', dtype=torch.float64)
tensor([ -8.0706, -17.7151, -14.9279, -17.3018, -19.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1680, device='cuda:0', dtype=torch.float64)
tensor([ -8.0681, -17.7306, -14.8859, -17.2255, -19.1875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2231, device='cuda:0', dtype=torch.float64)
tensor([ -8.0385, -17.7637, -14.8245, -17.1534, -19.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1995, device='cuda:0', dtype=torch.float64)
tensor([ -8.0277, -17.7567, -14.7613, -17.0841, -19.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1774, device='cuda:0', dtype=torch.float64)
tensor([ -8.0179, -17.7455, -14.7225, -17.0240, -19.2372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2018, device='cuda:0', dtype=torch.float64)
tensor([ -8.0083, -17.7167, -14.6696, -16.9606, -19.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2107, device='cuda:0', dtype=torch.float64)
tensor([ -7.9992, -17.7184, -14.6142, -16.9038, -19.2725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1881, device='cuda:0', dtype=torch.float64)
tensor([ -7.9872, -17.7207, -14.5615, -16.8102, -19.2696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1894, device='cuda:0', dtype=torch.float64)
tensor([ -7.9878, -17.7230, -14.5207, -16.7209, -19.2807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2299, device='cuda:0', dtype=torch.float64)
tensor([ -7.9999, -17.6993, -14.4569, -16.6474, -19.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1906, device='cuda:0', dtype=torch.float64)
tensor([ -8.0011, -17.7179, -14.3983, -16.5689, -19.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1865, device='cuda:0', dtype=torch.float64)
tensor([ -7.9902, -17.7426, -14.3524, -16.4826, -19.2755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1547, device='cuda:0', dtype=torch.float64)
tensor([ -7.9662, -17.7746, -14.3161, -16.3966, -19.2927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1944, device='cuda:0', dtype=torch.float64)
tensor([ -7.9371, -17.7882, -14.2598, -16.3354, -19.3205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1893, device='cuda:0', dtype=torch.float64)
tensor([ -7.9150, -17.8396, -14.2072, -16.2626, -19.3390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1790, device='cuda:0', dtype=torch.float64)
tensor([ -7.8996, -17.8607, -14.1678, -16.2168, -19.3742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1876, device='cuda:0', dtype=torch.float64)
tensor([ -7.8794, -17.8810, -14.1157, -16.1689, -19.4270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1857, device='cuda:0', dtype=torch.float64)
tensor([ -7.8715, -17.8963, -14.0781, -16.0952, -19.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1984, device='cuda:0', dtype=torch.float64)
tensor([ -7.8646, -17.9223, -14.0334, -16.0139, -19.4448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1507, device='cuda:0', dtype=torch.float64)
tensor([ -7.8575, -17.9388, -13.9892, -15.9127, -19.4374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1759, device='cuda:0', dtype=torch.float64)
tensor([ -7.8493, -17.9456, -13.9281, -15.8245, -19.4338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1947, device='cuda:0', dtype=torch.float64)
tensor([ -7.8472, -17.9748, -13.8664, -15.7553, -19.4145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2007, device='cuda:0', dtype=torch.float64)
tensor([ -7.8397, -18.0274, -13.7969, -15.7267, -19.3962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1980, device='cuda:0', dtype=torch.float64)
tensor([ -7.8497, -18.0765, -13.7285, -15.7088, -19.3415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1789, device='cuda:0', dtype=torch.float64)
tensor([ -7.8606, -18.0948, -13.6652, -15.6674, -19.2752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1549, device='cuda:0', dtype=torch.float64)
tensor([ -7.8690, -18.1215, -13.6181, -15.5848, -19.2225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1590, device='cuda:0', dtype=torch.float64)
tensor([ -7.8737, -18.1677, -13.5727, -15.4845, -19.1771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1734, device='cuda:0', dtype=torch.float64)
tensor([ -7.8649, -18.2201, -13.5490, -15.3882, -19.1249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1700, device='cuda:0', dtype=torch.float64)
tensor([ -7.8618, -18.2671, -13.5017, -15.3044, -19.0524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2125, device='cuda:0', dtype=torch.float64)
tensor([ -7.8610, -18.3471, -13.4396, -15.2002, -18.9691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1801, device='cuda:0', dtype=torch.float64)
tensor([ -7.8671, -18.4223, -13.3832, -15.0867, -18.8678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1742, device='cuda:0', dtype=torch.float64)
tensor([ -7.8602, -18.4804, -13.3465, -14.9876, -18.7841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1483, device='cuda:0', dtype=torch.float64)
tensor([ -7.8640, -18.5309, -13.3185, -14.8812, -18.6882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1521, device='cuda:0', dtype=torch.float64)
tensor([ -7.8666, -18.5657, -13.2871, -14.7895, -18.5846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1500, device='cuda:0', dtype=torch.float64)
tensor([ -7.8739, -18.5761, -13.2542, -14.7149, -18.4916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1651, device='cuda:0', dtype=torch.float64)
tensor([ -7.8840, -18.5623, -13.2192, -14.6307, -18.4093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1552, device='cuda:0', dtype=torch.float64)
tensor([ -7.8897, -18.5669, -13.1918, -14.5449, -18.3243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1805, device='cuda:0', dtype=torch.float64)
tensor([ -7.9030, -18.5028, -13.1577, -14.4573, -18.2375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1913, device='cuda:0', dtype=torch.float64)
tensor([ -7.9071, -18.4659, -13.1278, -14.4013, -18.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1751, device='cuda:0', dtype=torch.float64)
tensor([ -7.9031, -18.4374, -13.0873, -14.3528, -18.0767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1733, device='cuda:0', dtype=torch.float64)
tensor([ -7.9026, -18.4689, -13.0364, -14.3213, -18.0419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1859, device='cuda:0', dtype=torch.float64)
tensor([ -7.9048, -18.5050, -12.9759, -14.2766, -18.0008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1581, device='cuda:0', dtype=torch.float64)
tensor([ -7.8970, -18.5499, -12.9289, -14.2412, -17.9611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1400, device='cuda:0', dtype=torch.float64)
tensor([ -7.8998, -18.5663, -12.8763, -14.2007, -17.9214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1660, device='cuda:0', dtype=torch.float64)
tensor([ -7.9022, -18.5596, -12.8263, -14.1927, -17.8984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1632, device='cuda:0', dtype=torch.float64)
tensor([ -7.8983, -18.5251, -12.8018, -14.1869, -17.8757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1202, device='cuda:0', dtype=torch.float64)
tensor([ -7.8974, -18.5435, -12.7754, -14.1855, -17.8510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1727, device='cuda:0', dtype=torch.float64)
tensor([ -7.9016, -18.5816, -12.7294, -14.1833, -17.8302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1582, device='cuda:0', dtype=torch.float64)
tensor([ -7.8967, -18.6026, -12.7079, -14.1655, -17.8228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1335, device='cuda:0', dtype=torch.float64)
tensor([ -7.8856, -18.5992, -12.6890, -14.1373, -17.8176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1730, device='cuda:0', dtype=torch.float64)
tensor([ -7.8738, -18.6367, -12.6798, -14.1253, -17.8008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1378, device='cuda:0', dtype=torch.float64)
tensor([ -7.8507, -18.6776, -12.6725, -14.1121, -17.7938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1677, device='cuda:0', dtype=torch.float64)
tensor([ -7.8369, -18.7061, -12.6640, -14.0721, -17.7662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1670, device='cuda:0', dtype=torch.float64)
tensor([ -7.8388, -18.7072, -12.6584, -14.0435, -17.7204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1482, device='cuda:0', dtype=torch.float64)
tensor([ -7.8450, -18.7139, -12.6464, -14.0133, -17.6864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1369, device='cuda:0', dtype=torch.float64)
tensor([ -7.8419, -18.7215, -12.6252, -13.9758, -17.6321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1318, device='cuda:0', dtype=torch.float64)
tensor([ -7.8407, -18.7369, -12.6018, -13.9562, -17.5645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1489, device='cuda:0', dtype=torch.float64)
tensor([ -7.8426, -18.7733, -12.5766, -13.9365, -17.5138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1507, device='cuda:0', dtype=torch.float64)
tensor([ -7.8558, -18.7777, -12.5599, -13.9195, -17.4664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1452, device='cuda:0', dtype=torch.float64)
tensor([ -7.8821, -18.7579, -12.5364, -13.8657, -17.4000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1636, device='cuda:0', dtype=torch.float64)
tensor([ -7.8951, -18.7656, -12.5183, -13.8274, -17.2888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1510, device='cuda:0', dtype=torch.float64)
tensor([ -7.8960, -18.7641, -12.5190, -13.7880, -17.2168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1461, device='cuda:0', dtype=torch.float64)
tensor([ -7.9101, -18.7897, -12.5132, -13.7488, -17.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1435, device='cuda:0', dtype=torch.float64)
tensor([ -7.9273, -18.8387, -12.5085, -13.7152, -17.0996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1408, device='cuda:0', dtype=torch.float64)
tensor([ -7.9457, -18.8499, -12.5048, -13.7077, -17.0396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1243, device='cuda:0', dtype=torch.float64)
tensor([ -7.9564, -18.8756, -12.5035, -13.7040, -16.9863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1386, device='cuda:0', dtype=torch.float64)
tensor([ -7.9676, -18.8879, -12.4933, -13.7094, -16.9084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1346, device='cuda:0', dtype=torch.float64)
tensor([ -7.9835, -18.9079, -12.4786, -13.7276, -16.8165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1412, device='cuda:0', dtype=torch.float64)
tensor([ -7.9904, -18.8946, -12.4662, -13.7511, -16.7340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1537, device='cuda:0', dtype=torch.float64)
tensor([ -8.0090, -18.8581, -12.4437, -13.7899, -16.6439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1549, device='cuda:0', dtype=torch.float64)
tensor([ -8.0252, -18.8121, -12.4224, -13.8080, -16.5555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1530, device='cuda:0', dtype=torch.float64)
tensor([ -8.0535, -18.7539, -12.3942, -13.8252, -16.4637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1516, device='cuda:0', dtype=torch.float64)
tensor([ -8.0647, -18.6779, -12.3797, -13.8653, -16.3997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1570, device='cuda:0', dtype=torch.float64)
tensor([ -8.0705, -18.5796, -12.3519, -13.8996, -16.3391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1333, device='cuda:0', dtype=torch.float64)
tensor([ -8.0691, -18.4801, -12.3360, -13.9420, -16.2854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1485, device='cuda:0', dtype=torch.float64)
tensor([ -8.0777, -18.3856, -12.3119, -13.9795, -16.2274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1556, device='cuda:0', dtype=torch.float64)
tensor([ -8.0820, -18.2931, -12.2798, -14.0019, -16.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1225, device='cuda:0', dtype=torch.float64)
tensor([ -8.0870, -18.2309, -12.2537, -14.0170, -16.1119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1470, device='cuda:0', dtype=torch.float64)
tensor([ -8.0931, -18.1842, -12.2434, -14.0284, -16.0621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1475, device='cuda:0', dtype=torch.float64)
tensor([ -8.0933, -18.1580, -12.2413, -14.0345, -16.0129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1469, device='cuda:0', dtype=torch.float64)
tensor([ -8.1066, -18.1333, -12.2530, -14.0220, -15.9452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1498, device='cuda:0', dtype=torch.float64)
tensor([ -8.1029, -18.1404, -12.2574, -14.0201, -15.8829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1425, device='cuda:0', dtype=torch.float64)
tensor([ -8.0856, -18.1486, -12.2725, -14.0082, -15.8340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1320, device='cuda:0', dtype=torch.float64)
tensor([ -8.0703, -18.1468, -12.2801, -14.0001, -15.7985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1336, device='cuda:0', dtype=torch.float64)
tensor([ -8.0439, -18.1428, -12.2959, -13.9805, -15.7769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1107, device='cuda:0', dtype=torch.float64)
tensor([ -8.0203, -18.1335, -12.2972, -13.9542, -15.7557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1200, device='cuda:0', dtype=torch.float64)
tensor([ -8.0028, -18.1210, -12.2938, -13.9392, -15.7286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1647, device='cuda:0', dtype=torch.float64)
tensor([ -7.9875, -18.0941, -12.2885, -13.8913, -15.7069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1217, device='cuda:0', dtype=torch.float64)
tensor([ -7.9881, -18.0713, -12.2810, -13.8375, -15.6847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1164, device='cuda:0', dtype=torch.float64)
tensor([ -7.9820, -18.0403, -12.2731, -13.7996, -15.6743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1344, device='cuda:0', dtype=torch.float64)
tensor([ -7.9917, -17.9993, -12.2576, -13.7497, -15.6622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1362, device='cuda:0', dtype=torch.float64)
tensor([ -7.9971, -17.9877, -12.2395, -13.7103, -15.6363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1458, device='cuda:0', dtype=torch.float64)
tensor([ -7.9983, -17.9691, -12.2191, -13.6622, -15.6268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1242, device='cuda:0', dtype=torch.float64)
tensor([ -8.0045, -17.9686, -12.1815, -13.6231, -15.6066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1219, device='cuda:0', dtype=torch.float64)
tensor([ -7.9975, -17.9935, -12.1486, -13.6145, -15.6218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1375, device='cuda:0', dtype=torch.float64)
tensor([ -7.9810, -18.0142, -12.1213, -13.6158, -15.6512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1175, device='cuda:0', dtype=torch.float64)
tensor([ -7.9592, -18.0622, -12.1078, -13.6290, -15.7051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1441, device='cuda:0', dtype=torch.float64)
tensor([ -7.9330, -18.1329, -12.1028, -13.6476, -15.7639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1624, device='cuda:0', dtype=torch.float64)
tensor([ -7.9017, -18.2082, -12.0909, -13.6780, -15.8296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0942, device='cuda:0', dtype=torch.float64)
tensor([ -7.8791, -18.3083, -12.0861, -13.7025, -15.8942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1184, device='cuda:0', dtype=torch.float64)
tensor([ -7.8586, -18.4279, -12.0907, -13.7144, -15.9508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1205, device='cuda:0', dtype=torch.float64)
tensor([ -7.8331, -18.5227, -12.0950, -13.7309, -16.0172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1362, device='cuda:0', dtype=torch.float64)
tensor([ -7.8126, -18.6389, -12.1168, -13.7457, -16.0889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1256, device='cuda:0', dtype=torch.float64)
tensor([ -7.7962, -18.7467, -12.1505, -13.7460, -16.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1138, device='cuda:0', dtype=torch.float64)
tensor([ -7.7748, -18.8279, -12.1774, -13.7396, -16.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1498, device='cuda:0', dtype=torch.float64)
tensor([ -7.7600, -18.9251, -12.1972, -13.7302, -16.2284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1269, device='cuda:0', dtype=torch.float64)
tensor([ -7.7506, -18.9959, -12.2080, -13.7337, -16.2516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1338, device='cuda:0', dtype=torch.float64)
tensor([ -7.7434, -19.0447, -12.2234, -13.7322, -16.2734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1128, device='cuda:0', dtype=torch.float64)
tensor([ -7.7329, -19.1099, -12.2398, -13.7288, -16.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1347, device='cuda:0', dtype=torch.float64)
tensor([ -7.7230, -19.1778, -12.2545, -13.7284, -16.3041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1360, device='cuda:0', dtype=torch.float64)
tensor([ -7.7045, -19.2819, -12.2658, -13.7274, -16.3387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1359, device='cuda:0', dtype=torch.float64)
tensor([ -7.6666, -19.4124, -12.2566, -13.7304, -16.3652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1313, device='cuda:0', dtype=torch.float64)
tensor([ -7.6394, -19.5433, -12.2456, -13.7195, -16.3874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1180, device='cuda:0', dtype=torch.float64)
tensor([ -7.6145, -19.6437, -12.2437, -13.7073, -16.4059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1381, device='cuda:0', dtype=torch.float64)
tensor([ -7.5860, -19.7667, -12.2307, -13.6734, -16.4032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1062, device='cuda:0', dtype=torch.float64)
tensor([ -7.5602, -19.9045, -12.2101, -13.6541, -16.4088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1293, device='cuda:0', dtype=torch.float64)
tensor([ -7.5310, -20.0416, -12.1915, -13.6352, -16.4077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1103, device='cuda:0', dtype=torch.float64)
tensor([ -7.5092, -20.1858, -12.1684, -13.6076, -16.4017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1390, device='cuda:0', dtype=torch.float64)
tensor([ -7.4843, -20.3435, -12.1508, -13.5891, -16.4029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1239, device='cuda:0', dtype=torch.float64)
tensor([ -7.4578, -20.4830, -12.1351, -13.5569, -16.3995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1185, device='cuda:0', dtype=torch.float64)
tensor([ -7.4315, -20.5835, -12.1173, -13.5246, -16.3999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1588, device='cuda:0', dtype=torch.float64)
tensor([ -7.4022, -20.6428, -12.0969, -13.4821, -16.3835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1098, device='cuda:0', dtype=torch.float64)
tensor([ -7.3798, -20.7198, -12.0823, -13.4396, -16.3633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1396, device='cuda:0', dtype=torch.float64)
tensor([ -7.3642, -20.7993, -12.0790, -13.3993, -16.3588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1089, device='cuda:0', dtype=torch.float64)
tensor([ -7.3409, -20.8930, -12.0765, -13.3550, -16.3551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1217, device='cuda:0', dtype=torch.float64)
tensor([ -7.3284, -20.9790, -12.0730, -13.3071, -16.3504], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_101343.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(138.3463, device='cuda:0', dtype=torch.float64)
tensor([-2.2540, -4.4399, -3.0293, -6.9713, -3.6957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(97.7700, device='cuda:0', dtype=torch.float64)
tensor([-2.4050, -4.9466, -3.0162, -4.2190, -3.8884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(91.0359, device='cuda:0', dtype=torch.float64)
tensor([-2.4210, -5.1243, -3.0232, -3.8561, -4.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(59.1118, device='cuda:0', dtype=torch.float64)
tensor([-2.4941, -4.3644, -2.9887, -3.5073, -4.8500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(57.7416, device='cuda:0', dtype=torch.float64)
tensor([-2.4295, -4.9567, -2.9402, -5.1881, -4.9919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(71.7824, device='cuda:0', dtype=torch.float64)
tensor([-2.1484, -4.5509, -2.8442, -5.5030, -5.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(69.8066, device='cuda:0', dtype=torch.float64)
tensor([-1.8962, -3.5013, -2.7821, -3.8131, -4.6408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.6806, device='cuda:0', dtype=torch.float64)
tensor([-1.7557, -3.2289, -2.8226, -3.9438, -4.0377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.9439, device='cuda:0', dtype=torch.float64)
tensor([-1.7300, -3.6117, -2.9312, -4.2317, -3.6481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2249, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -3.8361, -3.0405, -4.4370, -3.5013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.7675, device='cuda:0', dtype=torch.float64)
tensor([-2.0913, -3.5180, -3.1395, -4.4936, -3.4649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.2871, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -3.1173, -3.2190, -4.2455, -3.3831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.9331, device='cuda:0', dtype=torch.float64)
tensor([-1.6661, -2.8683, -3.2905, -3.8840, -3.2779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.9260, device='cuda:0', dtype=torch.float64)
tensor([-1.5949, -2.7338, -3.4030, -3.6557, -3.2010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.0490, device='cuda:0', dtype=torch.float64)
tensor([-1.6070, -2.7084, -3.3664, -3.5010, -3.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.7988, device='cuda:0', dtype=torch.float64)
tensor([-1.6743, -2.7593, -3.2715, -3.3727, -3.2624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3120, device='cuda:0', dtype=torch.float64)
tensor([-1.7863, -2.8818, -3.3029, -3.2607, -3.4001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3664, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -3.0777, -3.4065, -3.1594, -3.5045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.9075, device='cuda:0', dtype=torch.float64)
tensor([-2.0335, -3.2382, -3.4561, -3.0760, -3.5204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.8825, device='cuda:0', dtype=torch.float64)
tensor([-2.1215, -3.2324, -3.3990, -3.0215, -3.4998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.5042, device='cuda:0', dtype=torch.float64)
tensor([-2.1815, -3.1676, -3.2872, -2.9926, -3.4820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.9975, device='cuda:0', dtype=torch.float64)
tensor([-2.2101, -3.1100, -3.1790, -2.9820, -3.4394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2677, device='cuda:0', dtype=torch.float64)
tensor([-2.2022, -3.0431, -3.0962, -2.9902, -3.3612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.8715, device='cuda:0', dtype=torch.float64)
tensor([-2.1502, -2.9746, -3.0426, -3.0202, -3.2701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6306, device='cuda:0', dtype=torch.float64)
tensor([-2.0561, -2.9397, -3.0172, -3.0674, -3.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.7151, device='cuda:0', dtype=torch.float64)
tensor([-1.9424, -2.9645, -3.0140, -3.1217, -3.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6792, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -3.0020, -3.0237, -3.1750, -3.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2353, device='cuda:0', dtype=torch.float64)
tensor([-1.7519, -2.9612, -3.0362, -3.2205, -3.0329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.9077, device='cuda:0', dtype=torch.float64)
tensor([-1.6930, -2.8418, -3.0428, -3.2520, -3.0264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.0034, device='cuda:0', dtype=torch.float64)
tensor([-1.6592, -2.7212, -3.0387, -3.2650, -3.0418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.0423, device='cuda:0', dtype=torch.float64)
tensor([-1.6490, -2.6385, -3.0217, -3.2588, -3.0755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2077, device='cuda:0', dtype=torch.float64)
tensor([-1.6599, -2.5916, -2.9935, -3.2362, -3.1239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0100, device='cuda:0', dtype=torch.float64)
tensor([-1.6884, -2.5738, -2.9583, -3.2033, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8598, device='cuda:0', dtype=torch.float64)
tensor([-1.7299, -2.5786, -2.9203, -3.1675, -3.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9576, device='cuda:0', dtype=torch.float64)
tensor([-1.7786, -2.6003, -2.8832, -3.1357, -3.3058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5917, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6317, -2.8496, -3.1120, -3.3522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1119, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.6649, -2.8204, -3.0974, -3.3789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7573, device='cuda:0', dtype=torch.float64)
tensor([-1.8984, -2.6918, -2.7950, -3.0897, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9789, device='cuda:0', dtype=torch.float64)
tensor([-1.9125, -2.7064, -2.7733, -3.0869, -3.3673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7212, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.7081, -2.7561, -3.0881, -3.3387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1188, device='cuda:0', dtype=torch.float64)
tensor([-1.9004, -2.7008, -2.7451, -3.0935, -3.3052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4538, device='cuda:0', dtype=torch.float64)
tensor([-1.8820, -2.6912, -2.7403, -3.1034, -3.2732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8584, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.6824, -2.7408, -3.1170, -3.2467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8126, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6750, -2.7452, -3.1328, -3.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8554, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6692, -2.7517, -3.1485, -3.2185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8318, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6651, -2.7590, -3.1624, -3.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7341, device='cuda:0', dtype=torch.float64)
tensor([-1.8126, -2.6630, -2.7652, -3.1730, -3.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5773, device='cuda:0', dtype=torch.float64)
tensor([-1.8117, -2.6627, -2.7686, -3.1799, -3.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4117, device='cuda:0', dtype=torch.float64)
tensor([-1.8132, -2.6638, -2.7684, -3.1828, -3.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3413, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6657, -2.7647, -3.1825, -3.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3765, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6676, -2.7587, -3.1797, -3.2469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3952, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6684, -2.7525, -3.1760, -3.2467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2584, device='cuda:0', dtype=torch.float64)
tensor([-1.8142, -2.6675, -2.7483, -3.1730, -3.2434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0537, device='cuda:0', dtype=torch.float64)
tensor([-1.8098, -2.6643, -2.7477, -3.1723, -3.2381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8651, device='cuda:0', dtype=torch.float64)
tensor([-1.8036, -2.6588, -2.7516, -3.1744, -3.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8347, device='cuda:0', dtype=torch.float64)
tensor([-1.7964, -2.6512, -2.7595, -3.1795, -3.2272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8801, device='cuda:0', dtype=torch.float64)
tensor([-1.7888, -2.6421, -2.7707, -3.1867, -3.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8558, device='cuda:0', dtype=torch.float64)
tensor([-1.7818, -2.6323, -2.7838, -3.1951, -3.2242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7824, device='cuda:0', dtype=torch.float64)
tensor([-1.7766, -2.6232, -2.7974, -3.2037, -3.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7160, device='cuda:0', dtype=torch.float64)
tensor([-1.7742, -2.6158, -2.8101, -3.2117, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6544, device='cuda:0', dtype=torch.float64)
tensor([-1.7748, -2.6107, -2.8208, -3.2183, -3.2348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6221, device='cuda:0', dtype=torch.float64)
tensor([-1.7784, -2.6083, -2.8283, -3.2226, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6078, device='cuda:0', dtype=torch.float64)
tensor([-1.7843, -2.6087, -2.8322, -3.2240, -3.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4835, device='cuda:0', dtype=torch.float64)
tensor([-1.7920, -2.6117, -2.8322, -3.2219, -3.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3564, device='cuda:0', dtype=torch.float64)
tensor([-1.8009, -2.6169, -2.8286, -3.2164, -3.2394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1970, device='cuda:0', dtype=torch.float64)
tensor([-1.8104, -2.6234, -2.8221, -3.2078, -3.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1823, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6308, -2.8137, -3.1968, -3.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1775, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6382, -2.8047, -3.1846, -3.2326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2001, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6444, -2.7962, -3.1724, -3.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2251, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.6489, -2.7894, -3.1610, -3.2316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2075, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.6514, -2.7846, -3.1510, -3.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1371, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.6515, -2.7820, -3.1432, -3.2331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0087, device='cuda:0', dtype=torch.float64)
tensor([-1.8502, -2.6493, -2.7815, -3.1379, -3.2329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9856, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.6453, -2.7824, -3.1353, -3.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0022, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6399, -2.7843, -3.1353, -3.2279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9883, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6337, -2.7866, -3.1374, -3.2227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9716, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6273, -2.7889, -3.1412, -3.2160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9116, device='cuda:0', dtype=torch.float64)
tensor([-1.8136, -2.6213, -2.7910, -3.1462, -3.2087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8588, device='cuda:0', dtype=torch.float64)
tensor([-1.8059, -2.6164, -2.7929, -3.1521, -3.2017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7779, device='cuda:0', dtype=torch.float64)
tensor([-1.8003, -2.6127, -2.7944, -3.1578, -3.1959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8120, device='cuda:0', dtype=torch.float64)
tensor([-1.7970, -2.6108, -2.7955, -3.1628, -3.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8486, device='cuda:0', dtype=torch.float64)
tensor([-1.7962, -2.6104, -2.7960, -3.1667, -3.1903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8362, device='cuda:0', dtype=torch.float64)
tensor([-1.7978, -2.6113, -2.7964, -3.1692, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8180, device='cuda:0', dtype=torch.float64)
tensor([-1.8014, -2.6134, -2.7961, -3.1699, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-1.8064, -2.6166, -2.7950, -3.1691, -3.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7197, device='cuda:0', dtype=torch.float64)
tensor([-1.8122, -2.6206, -2.7937, -3.1674, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6744, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6248, -2.7920, -3.1645, -3.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6924, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6292, -2.7900, -3.1610, -3.2019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6839, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6334, -2.7879, -3.1572, -3.2015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6782, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6375, -2.7859, -3.1537, -3.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6627, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.6408, -2.7843, -3.1509, -3.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6754, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6435, -2.7831, -3.1490, -3.1951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6935, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6453, -2.7827, -3.1481, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6624, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6465, -2.7828, -3.1484, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6194, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6470, -2.7834, -3.1491, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5761, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6469, -2.7844, -3.1506, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6041, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6464, -2.7854, -3.1525, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5775, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6455, -2.7866, -3.1542, -3.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5971, device='cuda:0', dtype=torch.float64)
tensor([-1.8150, -2.6443, -2.7881, -3.1557, -3.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5830, device='cuda:0', dtype=torch.float64)
tensor([-1.8129, -2.6433, -2.7893, -3.1568, -3.1822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5735, device='cuda:0', dtype=torch.float64)
tensor([-1.8116, -2.6426, -2.7903, -3.1576, -3.1820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5988, device='cuda:0', dtype=torch.float64)
tensor([-1.8114, -2.6423, -2.7908, -3.1578, -3.1822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5834, device='cuda:0', dtype=torch.float64)
tensor([-1.8122, -2.6425, -2.7908, -3.1576, -3.1828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5618, device='cuda:0', dtype=torch.float64)
tensor([-1.8136, -2.6428, -2.7908, -3.1577, -3.1841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5649, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6434, -2.7910, -3.1580, -3.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5635, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6445, -2.7912, -3.1578, -3.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5433, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6454, -2.7911, -3.1578, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5467, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6463, -2.7909, -3.1580, -3.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5555, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6466, -2.7906, -3.1585, -3.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5603, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6466, -2.7903, -3.1589, -3.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5659, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6463, -2.7899, -3.1596, -3.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5148, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6459, -2.7895, -3.1599, -3.1839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5620, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6454, -2.7898, -3.1599, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5177, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6448, -2.7898, -3.1598, -3.1811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5042, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6440, -2.7896, -3.1591, -3.1799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5230, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6432, -2.7892, -3.1583, -3.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5230, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6427, -2.7890, -3.1577, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4925, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6423, -2.7888, -3.1572, -3.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4877, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6420, -2.7889, -3.1572, -3.1770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4822, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6416, -2.7889, -3.1575, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4781, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6412, -2.7890, -3.1576, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4863, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6411, -2.7887, -3.1575, -3.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4812, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6411, -2.7887, -3.1575, -3.1760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4874, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6417, -2.7884, -3.1567, -3.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4732, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6424, -2.7881, -3.1562, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4723, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6428, -2.7878, -3.1560, -3.1793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4539, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6428, -2.7873, -3.1559, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4883, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6431, -2.7869, -3.1556, -3.1809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4869, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6436, -2.7865, -3.1553, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4583, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6438, -2.7859, -3.1546, -3.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4874, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6438, -2.7855, -3.1542, -3.1805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4768, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6431, -2.7854, -3.1542, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5058, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6418, -2.7856, -3.1546, -3.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4474, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6405, -2.7858, -3.1551, -3.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4950, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6395, -2.7862, -3.1558, -3.1769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4837, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6388, -2.7863, -3.1559, -3.1754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4730, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6383, -2.7864, -3.1565, -3.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4765, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6381, -2.7862, -3.1570, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5104, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6388, -2.7857, -3.1572, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4552, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6400, -2.7849, -3.1564, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4566, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6413, -2.7841, -3.1554, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4356, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6427, -2.7838, -3.1543, -3.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4631, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6441, -2.7837, -3.1533, -3.1772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4595, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6455, -2.7837, -3.1521, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4521, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6464, -2.7839, -3.1511, -3.1784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5053, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6472, -2.7845, -3.1498, -3.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4454, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6478, -2.7853, -3.1492, -3.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4523, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6482, -2.7864, -3.1490, -3.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4763, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6484, -2.7869, -3.1492, -3.1799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4042, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6478, -2.7873, -3.1502, -3.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4593, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6463, -2.7876, -3.1518, -3.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4746, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6447, -2.7879, -3.1533, -3.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4744, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6430, -2.7876, -3.1551, -3.1777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4755, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6414, -2.7870, -3.1569, -3.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4911, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6401, -2.7857, -3.1582, -3.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4753, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6396, -2.7842, -3.1588, -3.1776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4499, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6398, -2.7824, -3.1586, -3.1776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5023, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6405, -2.7809, -3.1579, -3.1776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4329, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6410, -2.7798, -3.1573, -3.1771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4159, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6419, -2.7795, -3.1569, -3.1770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4576, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6427, -2.7795, -3.1570, -3.1772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4964, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6430, -2.7797, -3.1566, -3.1771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4806, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6426, -2.7799, -3.1558, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4611, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6421, -2.7806, -3.1547, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5059, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6418, -2.7817, -3.1534, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4654, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6422, -2.7827, -3.1521, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4267, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6426, -2.7833, -3.1511, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4619, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6421, -2.7841, -3.1504, -3.1713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4901, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6416, -2.7855, -3.1497, -3.1710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5075, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.6409, -2.7869, -3.1493, -3.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4523, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6408, -2.7877, -3.1498, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4597, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.6408, -2.7880, -3.1513, -3.1747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4318, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6410, -2.7881, -3.1531, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4497, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6411, -2.7883, -3.1552, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4452, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6416, -2.7884, -3.1565, -3.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4670, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6430, -2.7881, -3.1574, -3.1724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4495, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6443, -2.7879, -3.1579, -3.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4679, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6450, -2.7876, -3.1583, -3.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4925, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6451, -2.7882, -3.1581, -3.1694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4734, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6442, -2.7891, -3.1578, -3.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4480, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6435, -2.7895, -3.1572, -3.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4315, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6424, -2.7896, -3.1570, -3.1710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5123, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6410, -2.7895, -3.1564, -3.1723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3959, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6401, -2.7890, -3.1562, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5062, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6400, -2.7885, -3.1561, -3.1737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4875, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6400, -2.7874, -3.1553, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4624, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6401, -2.7862, -3.1544, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4902, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6406, -2.7848, -3.1535, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5149, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6414, -2.7846, -3.1525, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4626, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.6426, -2.7849, -3.1518, -3.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4626, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6442, -2.7850, -3.1512, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4297, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6456, -2.7849, -3.1509, -3.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5073, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.6468, -2.7847, -3.1509, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4901, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6474, -2.7842, -3.1516, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4748, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6481, -2.7837, -3.1516, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4866, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.6484, -2.7834, -3.1519, -3.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4608, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6481, -2.7833, -3.1522, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4387, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6473, -2.7832, -3.1516, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5145, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6464, -2.7834, -3.1516, -3.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4986, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6448, -2.7846, -3.1523, -3.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4920, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6443, -2.7861, -3.1526, -3.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4336, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.6438, -2.7871, -3.1522, -3.1708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4656, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6434, -2.7874, -3.1516, -3.1697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4918, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6442, -2.7870, -3.1506, -3.1676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4673, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6447, -2.7861, -3.1501, -3.1648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5592, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6447, -2.7852, -3.1509, -3.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4664, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6455, -2.7833, -3.1518, -3.1626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4910, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6460, -2.7816, -3.1522, -3.1632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5227, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6464, -2.7797, -3.1527, -3.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4540, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6463, -2.7775, -3.1534, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4726, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6461, -2.7755, -3.1537, -3.1713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4864, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6455, -2.7739, -3.1537, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5575, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.6436, -2.7732, -3.1534, -3.1733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5054, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6416, -2.7734, -3.1526, -3.1724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4891, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6401, -2.7742, -3.1522, -3.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4798, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6390, -2.7749, -3.1517, -3.1714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4978, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6383, -2.7762, -3.1515, -3.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5096, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6390, -2.7774, -3.1509, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4873, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6410, -2.7786, -3.1502, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4904, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6421, -2.7799, -3.1498, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4263, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.6432, -2.7809, -3.1499, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4953, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6454, -2.7814, -3.1493, -3.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4620, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6475, -2.7809, -3.1479, -3.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4445, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.6486, -2.7805, -3.1467, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4843, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6487, -2.7802, -3.1459, -3.1741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5117, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6481, -2.7804, -3.1465, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5220, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6462, -2.7825, -3.1475, -3.1700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4936, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6439, -2.7842, -3.1489, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4732, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6412, -2.7860, -3.1505, -3.1669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5226, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6388, -2.7875, -3.1525, -3.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4929, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6371, -2.7882, -3.1535, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4526, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6364, -2.7886, -3.1543, -3.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5339, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6358, -2.7880, -3.1548, -3.1685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5336, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6358, -2.7862, -3.1548, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5197, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6361, -2.7831, -3.1546, -3.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5269, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6371, -2.7809, -3.1534, -3.1637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6483, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6382, -2.7792, -3.1527, -3.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5201, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.6402, -2.7790, -3.1523, -3.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5629, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6427, -2.7791, -3.1520, -3.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4847, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6449, -2.7795, -3.1523, -3.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4704, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6463, -2.7806, -3.1523, -3.1637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5503, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6473, -2.7824, -3.1517, -3.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6071, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6472, -2.7850, -3.1526, -3.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4749, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6460, -2.7879, -3.1532, -3.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4409, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6441, -2.7897, -3.1529, -3.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5128, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.6419, -2.7907, -3.1531, -3.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5379, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6399, -2.7909, -3.1525, -3.1680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6316, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6390, -2.7890, -3.1506, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5019, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.6389, -2.7865, -3.1487, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6231, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6405, -2.7832, -3.1459, -3.1685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4912, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6427, -2.7805, -3.1431, -3.1723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4754, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6442, -2.7798, -3.1421, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5833, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6462, -2.7805, -3.1414, -3.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5894, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6474, -2.7807, -3.1414, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5269, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6475, -2.7807, -3.1420, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5806, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6468, -2.7807, -3.1433, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4917, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6458, -2.7813, -3.1464, -3.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5817, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6456, -2.7819, -3.1500, -3.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6235, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6463, -2.7821, -3.1537, -3.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4738, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6452, -2.7833, -3.1570, -3.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5097, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6431, -2.7848, -3.1599, -3.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6710, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.6412, -2.7852, -3.1600, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5601, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6383, -2.7849, -3.1594, -3.1708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5126, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.6351, -2.7836, -3.1575, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5369, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6339, -2.7816, -3.1545, -3.1674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5488, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6350, -2.7788, -3.1514, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5853, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6379, -2.7761, -3.1478, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5426, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.6415, -2.7750, -3.1448, -3.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6314, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6445, -2.7752, -3.1408, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6388, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.6468, -2.7772, -3.1392, -3.1737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5443, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6481, -2.7798, -3.1387, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5526, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.6489, -2.7845, -3.1391, -3.1700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5613, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.6489, -2.7880, -3.1407, -3.1669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5082, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6489, -2.7900, -3.1420, -3.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5564, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6486, -2.7908, -3.1453, -3.1612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5703, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6480, -2.7909, -3.1490, -3.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5912, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6477, -2.7895, -3.1511, -3.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6016, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6473, -2.7873, -3.1519, -3.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5487, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.6462, -2.7852, -3.1520, -3.1694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5025, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.6434, -2.7831, -3.1511, -3.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5622, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.6393, -2.7824, -3.1509, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6139, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6371, -2.7811, -3.1513, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5156, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.6357, -2.7799, -3.1526, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5546, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.6355, -2.7784, -3.1542, -3.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5180, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6362, -2.7779, -3.1574, -3.1675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5290, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6384, -2.7778, -3.1592, -3.1651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5508, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6418, -2.7770, -3.1607, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5949, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6452, -2.7767, -3.1617, -3.1629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4970, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6476, -2.7777, -3.1626, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5794, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6509, -2.7783, -3.1623, -3.1608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5393, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6534, -2.7791, -3.1605, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6000, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6540, -2.7795, -3.1582, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5485, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6537, -2.7806, -3.1561, -3.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6077, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6535, -2.7823, -3.1545, -3.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6123, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6516, -2.7843, -3.1541, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5717, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6478, -2.7879, -3.1538, -3.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5178, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.6441, -2.7922, -3.1518, -3.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6243, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6418, -2.7961, -3.1498, -3.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5760, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.6380, -2.7986, -3.1495, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6093, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.6335, -2.8003, -3.1496, -3.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6297, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.6327, -2.7988, -3.1496, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5864, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6333, -2.7958, -3.1485, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5576, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.6366, -2.7920, -3.1467, -3.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6264, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6423, -2.7872, -3.1444, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6124, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6467, -2.7831, -3.1428, -3.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5935, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6497, -2.7796, -3.1418, -3.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6649, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6509, -2.7774, -3.1410, -3.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5941, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6510, -2.7760, -3.1398, -3.1650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6436, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6510, -2.7742, -3.1395, -3.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6417, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.6498, -2.7741, -3.1404, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7191, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6488, -2.7716, -3.1417, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5479, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6488, -2.7699, -3.1434, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6093, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.6473, -2.7703, -3.1461, -3.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7632, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6466, -2.7738, -3.1500, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5529, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6461, -2.7784, -3.1551, -3.1714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5582, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.6461, -2.7827, -3.1596, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6328, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6449, -2.7858, -3.1624, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6491, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6446, -2.7858, -3.1629, -3.1724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5876, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6440, -2.7828, -3.1622, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5661, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6446, -2.7793, -3.1595, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5596, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6462, -2.7752, -3.1562, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7480, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6465, -2.7713, -3.1533, -3.1671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6820, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6474, -2.7672, -3.1502, -3.1724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5846, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.6482, -2.7646, -3.1468, -3.1773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5526, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.6482, -2.7638, -3.1455, -3.1799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5365, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.6479, -2.7651, -3.1459, -3.1818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7269, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.6466, -2.7673, -3.1478, -3.1808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6228, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.6456, -2.7702, -3.1515, -3.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6465, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6454, -2.7741, -3.1551, -3.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6369, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6448, -2.7781, -3.1573, -3.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6183, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6449, -2.7824, -3.1583, -3.1745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5276, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6458, -2.7858, -3.1577, -3.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6727, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.6473, -2.7883, -3.1550, -3.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6322, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.6493, -2.7908, -3.1532, -3.1704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8378, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6500, -2.7901, -3.1529, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6639, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.6487, -2.7876, -3.1533, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6900, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6446, -2.7868, -3.1557, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7272, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6429, -2.7861, -3.1577, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7503, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6407, -2.7869, -3.1599, -3.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5882, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6391, -2.7871, -3.1625, -3.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6344, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6393, -2.7864, -3.1635, -3.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6858, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6389, -2.7859, -3.1637, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7397, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.6381, -2.7837, -3.1632, -3.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6731, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.6372, -2.7815, -3.1618, -3.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5513, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.6365, -2.7813, -3.1629, -3.1771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7110, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.6384, -2.7824, -3.1640, -3.1798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6003, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.6397, -2.7844, -3.1675, -3.1808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7454, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6409, -2.7856, -3.1721, -3.1812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7799, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.6399, -2.7881, -3.1753, -3.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7271, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6384, -2.7875, -3.1751, -3.1680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7252, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6398, -2.7844, -3.1700, -3.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7620, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6423, -2.7801, -3.1619, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7695, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.6475, -2.7735, -3.1517, -3.1422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6905, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6528, -2.7671, -3.1417, -3.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7278, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6606, -2.7623, -3.1344, -3.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6287, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.6682, -2.7619, -3.1303, -3.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8195, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.6743, -2.7621, -3.1310, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6931, device='cuda:0', dtype=torch.float64)
tensor([-1.8502, -2.6762, -2.7646, -3.1357, -3.1820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6974, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.6744, -2.7684, -3.1422, -3.1864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6297, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6689, -2.7719, -3.1499, -3.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6889, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.6626, -2.7776, -3.1574, -3.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7035, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6547, -2.7839, -3.1657, -3.1799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8230, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6471, -2.7879, -3.1719, -3.1759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8339, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.6405, -2.7937, -3.1768, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7464, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6368, -2.7958, -3.1772, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6188, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.6339, -2.7977, -3.1762, -3.1791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7974, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.6321, -2.7978, -3.1737, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6881, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6333, -2.7960, -3.1687, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8546, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.6381, -2.7926, -3.1625, -3.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6514, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6427, -2.7895, -3.1569, -3.1546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7618, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.6479, -2.7874, -3.1508, -3.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8301, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6540, -2.7867, -3.1480, -3.1560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6744, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.6596, -2.7870, -3.1461, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6625, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6620, -2.7874, -3.1469, -3.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6349, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.6617, -2.7861, -3.1475, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7816, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6598, -2.7855, -3.1462, -3.1611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7041, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6563, -2.7852, -3.1440, -3.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7649, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6498, -2.7843, -3.1414, -3.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6938, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.6436, -2.7819, -3.1388, -3.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6798, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.6392, -2.7801, -3.1361, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7407, device='cuda:0', dtype=torch.float64)
tensor([-1.8598, -2.6377, -2.7758, -3.1354, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7279, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.6368, -2.7731, -3.1364, -3.1811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6734, device='cuda:0', dtype=torch.float64)
tensor([-1.8678, -2.6376, -2.7697, -3.1371, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7261, device='cuda:0', dtype=torch.float64)
tensor([-1.8673, -2.6392, -2.7648, -3.1389, -3.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5669, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.6393, -2.7635, -3.1432, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6173, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6377, -2.7629, -3.1468, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6720, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.6358, -2.7647, -3.1507, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6862, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.6347, -2.7681, -3.1543, -3.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8103, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6330, -2.7722, -3.1570, -3.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7731, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.6331, -2.7776, -3.1598, -3.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6524, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6338, -2.7836, -3.1636, -3.1613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6763, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6350, -2.7897, -3.1654, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6649, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6386, -2.7947, -3.1672, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6760, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6437, -2.7953, -3.1648, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7633, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.6475, -2.7954, -3.1602, -3.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6475, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.6514, -2.7916, -3.1546, -3.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7296, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.6538, -2.7879, -3.1513, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6107, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.6560, -2.7831, -3.1498, -3.1714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7418, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.6555, -2.7805, -3.1498, -3.1697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8186, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.6554, -2.7775, -3.1489, -3.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7483, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6569, -2.7731, -3.1480, -3.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6630, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.6570, -2.7706, -3.1482, -3.1692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7613, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.6532, -2.7692, -3.1485, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6944, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.6499, -2.7692, -3.1494, -3.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7323, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.6479, -2.7682, -3.1501, -3.1629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6497, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6467, -2.7689, -3.1512, -3.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6786, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.6460, -2.7708, -3.1511, -3.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7251, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.6459, -2.7727, -3.1508, -3.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8297, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.6457, -2.7760, -3.1476, -3.1760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7501, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6475, -2.7781, -3.1431, -3.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6766, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6502, -2.7795, -3.1393, -3.1886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7817, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.6528, -2.7805, -3.1367, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6964, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6564, -2.7792, -3.1343, -3.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7148, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.6587, -2.7764, -3.1317, -3.1819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7896, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6622, -2.7741, -3.1308, -3.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8307, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.6693, -2.7687, -3.1290, -3.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8095, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6769, -2.7635, -3.1317, -3.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6564, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.6799, -2.7571, -3.1385, -3.1714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7005, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6770, -2.7546, -3.1467, -3.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8513, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6670, -2.7565, -3.1568, -3.1612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7880, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.6527, -2.7606, -3.1655, -3.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6476, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6390, -2.7645, -3.1729, -3.1560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7737, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6275, -2.7684, -3.1738, -3.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8306, device='cuda:0', dtype=torch.float64)
tensor([-1.8520, -2.6217, -2.7729, -3.1687, -3.1660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7943, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.6209, -2.7767, -3.1625, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9166, device='cuda:0', dtype=torch.float64)
tensor([-1.8738, -2.6241, -2.7780, -3.1566, -3.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7573, device='cuda:0', dtype=torch.float64)
tensor([-1.8804, -2.6285, -2.7788, -3.1521, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7415, device='cuda:0', dtype=torch.float64)
tensor([-1.8806, -2.6314, -2.7811, -3.1489, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7716, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.6323, -2.7859, -3.1488, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6320, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.6331, -2.7907, -3.1491, -3.1827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6074, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.6342, -2.7939, -3.1507, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6735, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6359, -2.7938, -3.1531, -3.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8395, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6373, -2.7913, -3.1521, -3.1676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7229, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6427, -2.7853, -3.1488, -3.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7704, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.6504, -2.7764, -3.1412, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7167, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.6559, -2.7678, -3.1342, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-1.8643, -2.6603, -2.7619, -3.1282, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8122, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.6573, -2.7605, -3.1263, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9642, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.6504, -2.7656, -3.1252, -3.1868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9001, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6400, -2.7728, -3.1269, -3.1798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7940, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6317, -2.7777, -3.1311, -3.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8394, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6266, -2.7831, -3.1354, -3.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8111, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6238, -2.7864, -3.1405, -3.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9988, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6246, -2.7867, -3.1442, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8781, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6337, -2.7820, -3.1440, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6620, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.6459, -2.7761, -3.1417, -3.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8252, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.6560, -2.7731, -3.1405, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8325, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.6647, -2.7712, -3.1410, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9506, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.6689, -2.7719, -3.1405, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9089, device='cuda:0', dtype=torch.float64)
tensor([-1.8591, -2.6680, -2.7750, -3.1389, -3.1554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7271, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.6647, -2.7797, -3.1416, -3.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7615, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.6597, -2.7849, -3.1449, -3.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9144, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.6524, -2.7918, -3.1460, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9359, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.6481, -2.7938, -3.1477, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8242, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.6457, -2.7924, -3.1511, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8142, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.6463, -2.7898, -3.1543, -3.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7420, device='cuda:0', dtype=torch.float64)
tensor([-1.8689, -2.6499, -2.7881, -3.1574, -3.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8041, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.6540, -2.7861, -3.1575, -3.1478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8346, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.6557, -2.7863, -3.1596, -3.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7121, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.6571, -2.7874, -3.1606, -3.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7602, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.6604, -2.7873, -3.1568, -3.1622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7694, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.6664, -2.7843, -3.1505, -3.1677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0617, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.6714, -2.7798, -3.1457, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7900, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.6724, -2.7762, -3.1454, -3.1685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7445, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.6697, -2.7770, -3.1465, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8464, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.6648, -2.7822, -3.1477, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9879, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.6577, -2.7898, -3.1538, -3.1791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6888, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6479, -2.7981, -3.1609, -3.1822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8209, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6395, -2.8019, -3.1654, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0463, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6338, -2.8016, -3.1651, -3.1709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9253, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6325, -2.7984, -3.1611, -3.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6866, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6396, -2.7925, -3.1555, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1469, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6520, -2.7857, -3.1466, -3.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9693, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.6640, -2.7793, -3.1412, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8580, device='cuda:0', dtype=torch.float64)
tensor([-1.8599, -2.6755, -2.7732, -3.1370, -3.1828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9383, device='cuda:0', dtype=torch.float64)
tensor([-1.8748, -2.6851, -2.7695, -3.1365, -3.1930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7858, device='cuda:0', dtype=torch.float64)
tensor([-1.8808, -2.6884, -2.7669, -3.1412, -3.1924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0529, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.6853, -2.7665, -3.1475, -3.1834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8611, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.6748, -2.7673, -3.1579, -3.1709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7519, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6597, -2.7709, -3.1699, -3.1562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7875, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.6428, -2.7735, -3.1809, -3.1463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8401, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6298, -2.7778, -3.1874, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8512, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6204, -2.7813, -3.1879, -3.1520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7196, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6172, -2.7829, -3.1833, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8522, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.6211, -2.7785, -3.1734, -3.1722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8693, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.6290, -2.7710, -3.1605, -3.1792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8458, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.6374, -2.7682, -3.1486, -3.1860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9738, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.6437, -2.7698, -3.1389, -3.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9204, device='cuda:0', dtype=torch.float64)
tensor([-1.8740, -2.6462, -2.7764, -3.1346, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7336, device='cuda:0', dtype=torch.float64)
tensor([-1.8696, -2.6475, -2.7852, -3.1335, -3.2028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8183, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6483, -2.7916, -3.1353, -3.2014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7196, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.6467, -2.7973, -3.1397, -3.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5810, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.6445, -2.7999, -3.1439, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7464, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.6405, -2.8035, -3.1477, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7180, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6351, -2.8062, -3.1534, -3.1577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8447, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.6332, -2.8060, -3.1572, -3.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9387, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.6335, -2.8056, -3.1544, -3.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8862, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.6377, -2.8011, -3.1500, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7141, device='cuda:0', dtype=torch.float64)
tensor([-1.8692, -2.6443, -2.7937, -3.1459, -3.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7894, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.6530, -2.7863, -3.1437, -3.1434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8715, device='cuda:0', dtype=torch.float64)
tensor([-1.8852, -2.6586, -2.7807, -3.1430, -3.1465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9531, device='cuda:0', dtype=torch.float64)
tensor([-1.8868, -2.6628, -2.7752, -3.1472, -3.1507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7880, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.6649, -2.7701, -3.1532, -3.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8632, device='cuda:0', dtype=torch.float64)
tensor([-1.8756, -2.6694, -2.7664, -3.1576, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8634, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.6705, -2.7633, -3.1627, -3.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7842, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6667, -2.7633, -3.1701, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9528, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.6580, -2.7709, -3.1773, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8667, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6505, -2.7789, -3.1784, -3.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7614, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6449, -2.7845, -3.1745, -3.1627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8746, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6425, -2.7890, -3.1691, -3.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8758, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6438, -2.7902, -3.1620, -3.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7674, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.6478, -2.7893, -3.1529, -3.1819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6537, -2.7866, -3.1419, -3.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0954, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.6610, -2.7828, -3.1327, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8452, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.6626, -2.7817, -3.1309, -3.1819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3017, device='cuda:0', dtype=torch.float64)
tensor([-1.8748, -2.6626, -2.7793, -3.1330, -3.1819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8739, device='cuda:0', dtype=torch.float64)
tensor([-1.8741, -2.6591, -2.7782, -3.1395, -3.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9006, device='cuda:0', dtype=torch.float64)
tensor([-1.8672, -2.6576, -2.7785, -3.1510, -3.1723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7608, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6536, -2.7824, -3.1645, -3.1637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8921, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.6485, -2.7881, -3.1751, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6463, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6462, -2.7918, -3.1818, -3.1493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8899, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6468, -2.7945, -3.1787, -3.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7734, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.6494, -2.7959, -3.1685, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9856, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.6537, -2.7961, -3.1523, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6651, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.6565, -2.7956, -3.1391, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1050, device='cuda:0', dtype=torch.float64)
tensor([-1.8873, -2.6611, -2.7941, -3.1281, -3.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7551, device='cuda:0', dtype=torch.float64)
tensor([-1.8899, -2.6665, -2.7902, -3.1207, -3.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9177, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.6713, -2.7893, -3.1194, -3.1884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8827, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.6697, -2.7931, -3.1268, -3.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9818, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.6664, -2.8001, -3.1406, -3.1893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9218, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6621, -2.8052, -3.1537, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8634, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6588, -2.8084, -3.1613, -3.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1286, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6543, -2.8076, -3.1658, -3.1956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0553, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6493, -2.8066, -3.1676, -3.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9329, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6471, -2.8030, -3.1668, -3.1965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7719, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.6463, -2.7994, -3.1689, -3.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8449, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.6416, -2.7978, -3.1716, -3.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0339, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.6411, -2.7981, -3.1771, -3.1766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0143, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6386, -2.8000, -3.1821, -3.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7292, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.6376, -2.7991, -3.1845, -3.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9275, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.6411, -2.7911, -3.1832, -3.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9607, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.6459, -2.7787, -3.1844, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8126, device='cuda:0', dtype=torch.float64)
tensor([-1.8677, -2.6512, -2.7681, -3.1812, -3.1318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0751, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.6573, -2.7595, -3.1748, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0180, device='cuda:0', dtype=torch.float64)
tensor([-1.8761, -2.6618, -2.7569, -3.1671, -3.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9288, device='cuda:0', dtype=torch.float64)
tensor([-1.8812, -2.6677, -2.7557, -3.1559, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9124, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.6702, -2.7586, -3.1484, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8736, device='cuda:0', dtype=torch.float64)
tensor([-1.8843, -2.6731, -2.7612, -3.1416, -3.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1035, device='cuda:0', dtype=torch.float64)
tensor([-1.8808, -2.6734, -2.7653, -3.1416, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8259, device='cuda:0', dtype=torch.float64)
tensor([-1.8733, -2.6703, -2.7741, -3.1443, -3.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9079, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.6675, -2.7817, -3.1475, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8418, device='cuda:0', dtype=torch.float64)
tensor([-1.8616, -2.6592, -2.7884, -3.1500, -3.1922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9286, device='cuda:0', dtype=torch.float64)
tensor([-1.8621, -2.6505, -2.7922, -3.1521, -3.1956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9600, device='cuda:0', dtype=torch.float64)
tensor([-1.8658, -2.6445, -2.7953, -3.1554, -3.1988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0984, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.6399, -2.7921, -3.1580, -3.2012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0888, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.6420, -2.7858, -3.1561, -3.1972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9545, device='cuda:0', dtype=torch.float64)
tensor([-1.8820, -2.6428, -2.7850, -3.1567, -3.1912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8702, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.6432, -2.7838, -3.1572, -3.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2361, device='cuda:0', dtype=torch.float64)
tensor([-1.8692, -2.6426, -2.7848, -3.1588, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8240, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6451, -2.7849, -3.1636, -3.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8536, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.6477, -2.7859, -3.1702, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0915, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.6520, -2.7875, -3.1742, -3.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1755, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6600, -2.7912, -3.1734, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9408, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6664, -2.7952, -3.1693, -3.1855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8225, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.6707, -2.7974, -3.1616, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9591, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6730, -2.7985, -3.1526, -3.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8796, device='cuda:0', dtype=torch.float64)
tensor([-1.8574, -2.6698, -2.7977, -3.1367, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9067, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.6641, -2.7965, -3.1238, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8660, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.6599, -2.7960, -3.1158, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0187, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.6545, -2.7964, -3.1112, -3.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9487, device='cuda:0', dtype=torch.float64)
tensor([-1.8827, -2.6510, -2.7943, -3.1085, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7905, device='cuda:0', dtype=torch.float64)
tensor([-1.8905, -2.6500, -2.7911, -3.1087, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9560, device='cuda:0', dtype=torch.float64)
tensor([-1.8937, -2.6509, -2.7838, -3.1111, -3.1650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0655, device='cuda:0', dtype=torch.float64)
tensor([-1.8953, -2.6555, -2.7755, -3.1141, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9427, device='cuda:0', dtype=torch.float64)
tensor([-1.8942, -2.6581, -2.7706, -3.1177, -3.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8977, device='cuda:0', dtype=torch.float64)
tensor([-1.8915, -2.6594, -2.7707, -3.1196, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0681, device='cuda:0', dtype=torch.float64)
tensor([-1.8880, -2.6581, -2.7748, -3.1230, -3.1942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1015, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.6495, -2.7845, -3.1252, -3.2072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9470, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.6407, -2.7954, -3.1314, -3.2154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8290, device='cuda:0', dtype=torch.float64)
tensor([-1.8591, -2.6368, -2.8059, -3.1401, -3.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8792, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.6381, -2.8096, -3.1524, -3.2185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9473, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6415, -2.8107, -3.1658, -3.2121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9572, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.6509, -2.8040, -3.1762, -3.1998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7767, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.6619, -2.7947, -3.1869, -3.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9240, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.6720, -2.7841, -3.1940, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9848, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.6811, -2.7783, -3.1966, -3.1771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2205, device='cuda:0', dtype=torch.float64)
tensor([-1.8775, -2.6831, -2.7806, -3.1998, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9390, device='cuda:0', dtype=torch.float64)
tensor([-1.8879, -2.6802, -2.7890, -3.1992, -3.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9845, device='cuda:0', dtype=torch.float64)
tensor([-1.8913, -2.6752, -2.7951, -3.1967, -3.1791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9896, device='cuda:0', dtype=torch.float64)
tensor([-1.8924, -2.6684, -2.7983, -3.1894, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0497, device='cuda:0', dtype=torch.float64)
tensor([-1.8880, -2.6616, -2.8004, -3.1852, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8483, device='cuda:0', dtype=torch.float64)
tensor([-1.8821, -2.6575, -2.7985, -3.1827, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7999, device='cuda:0', dtype=torch.float64)
tensor([-1.8788, -2.6546, -2.7962, -3.1776, -3.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8571, device='cuda:0', dtype=torch.float64)
tensor([-1.8754, -2.6531, -2.7944, -3.1727, -3.1555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0721, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.6565, -2.7915, -3.1684, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9110, device='cuda:0', dtype=torch.float64)
tensor([-1.8752, -2.6585, -2.7927, -3.1651, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1293, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.6537, -2.7972, -3.1608, -3.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8618, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6498, -2.8041, -3.1594, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0086, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.6495, -2.8076, -3.1596, -3.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9047, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.6513, -2.8090, -3.1570, -3.1889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9228, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6508, -2.8090, -3.1538, -3.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8341, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.6544, -2.8044, -3.1494, -3.2018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7766, device='cuda:0', dtype=torch.float64)
tensor([-1.8606, -2.6596, -2.7951, -3.1448, -3.2057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9639, device='cuda:0', dtype=torch.float64)
tensor([-1.8621, -2.6678, -2.7818, -3.1387, -3.2067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9497, device='cuda:0', dtype=torch.float64)
tensor([-1.8625, -2.6766, -2.7679, -3.1331, -3.2056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0503, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.6828, -2.7591, -3.1292, -3.2012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9477, device='cuda:0', dtype=torch.float64)
tensor([-1.8641, -2.6827, -2.7570, -3.1293, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0434, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.6805, -2.7594, -3.1278, -3.1948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0282, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.6751, -2.7635, -3.1272, -3.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9028, device='cuda:0', dtype=torch.float64)
tensor([-1.8691, -2.6661, -2.7709, -3.1267, -3.1960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0434, device='cuda:0', dtype=torch.float64)
tensor([-1.8754, -2.6592, -2.7754, -3.1242, -3.1957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1375, device='cuda:0', dtype=torch.float64)
tensor([-1.8804, -2.6550, -2.7727, -3.1207, -3.1916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9475, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.6507, -2.7707, -3.1216, -3.1850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9166, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.6503, -2.7702, -3.1281, -3.1772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7993, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.6483, -2.7695, -3.1364, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8457, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.6453, -2.7697, -3.1466, -3.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8697, device='cuda:0', dtype=torch.float64)
tensor([-1.8665, -2.6426, -2.7725, -3.1601, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0430, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.6424, -2.7757, -3.1704, -3.1677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7464, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.6411, -2.7815, -3.1774, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1417, device='cuda:0', dtype=torch.float64)
tensor([-1.8616, -2.6435, -2.7883, -3.1828, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0802, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.6465, -2.7935, -3.1821, -3.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9119, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.6511, -2.7974, -3.1767, -3.1887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8131, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.6566, -2.7990, -3.1717, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1838, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.6605, -2.7948, -3.1631, -3.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9716, device='cuda:0', dtype=torch.float64)
tensor([-1.8673, -2.6613, -2.7907, -3.1545, -3.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0414, device='cuda:0', dtype=torch.float64)
tensor([-1.8728, -2.6632, -2.7843, -3.1474, -3.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0889, device='cuda:0', dtype=torch.float64)
tensor([-1.8799, -2.6674, -2.7767, -3.1451, -3.1904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8922, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.6690, -2.7758, -3.1500, -3.1965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2806, device='cuda:0', dtype=torch.float64)
tensor([-1.8755, -2.6695, -2.7770, -3.1589, -3.1965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1157, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.6696, -2.7841, -3.1699, -3.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7709, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.6696, -2.7937, -3.1797, -3.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9259, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.6683, -2.8022, -3.1820, -3.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8648, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.6657, -2.8075, -3.1812, -3.1988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9175, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.6635, -2.8128, -3.1780, -3.2052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0113, device='cuda:0', dtype=torch.float64)
tensor([-1.8647, -2.6592, -2.8179, -3.1766, -3.2076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8575, device='cuda:0', dtype=torch.float64)
tensor([-1.8661, -2.6528, -2.8172, -3.1752, -3.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8727, device='cuda:0', dtype=torch.float64)
tensor([-1.8692, -2.6498, -2.8129, -3.1739, -3.2019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0634, device='cuda:0', dtype=torch.float64)
tensor([-1.8762, -2.6543, -2.8029, -3.1673, -3.2012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9768, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.6620, -2.7889, -3.1612, -3.2002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7805, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.6675, -2.7749, -3.1564, -3.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0744, device='cuda:0', dtype=torch.float64)
tensor([-1.8891, -2.6717, -2.7686, -3.1541, -3.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -2.6714, -2.7644, -3.1560, -3.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8956, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.6670, -2.7659, -3.1578, -3.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8324, device='cuda:0', dtype=torch.float64)
tensor([-1.8759, -2.6634, -2.7697, -3.1587, -3.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0923, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.6584, -2.7760, -3.1612, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9271, device='cuda:0', dtype=torch.float64)
tensor([-1.8633, -2.6523, -2.7809, -3.1641, -3.1637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0893, device='cuda:0', dtype=torch.float64)
tensor([-1.8575, -2.6473, -2.7857, -3.1657, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9436, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.6473, -2.7892, -3.1660, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0579, device='cuda:0', dtype=torch.float64)
tensor([-1.8647, -2.6488, -2.7944, -3.1674, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8978, device='cuda:0', dtype=torch.float64)
tensor([-1.8710, -2.6514, -2.7952, -3.1684, -3.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0005, device='cuda:0', dtype=torch.float64)
tensor([-1.8812, -2.6555, -2.7926, -3.1674, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0311, device='cuda:0', dtype=torch.float64)
tensor([-1.8882, -2.6611, -2.7880, -3.1618, -3.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8541, device='cuda:0', dtype=torch.float64)
tensor([-1.8928, -2.6666, -2.7791, -3.1518, -3.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9354, device='cuda:0', dtype=torch.float64)
tensor([-1.9013, -2.6703, -2.7703, -3.1396, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1436, device='cuda:0', dtype=torch.float64)
tensor([-1.9084, -2.6735, -2.7660, -3.1288, -3.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8884, device='cuda:0', dtype=torch.float64)
tensor([-1.9145, -2.6789, -2.7621, -3.1213, -3.1791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0577, device='cuda:0', dtype=torch.float64)
tensor([-1.9136, -2.6846, -2.7665, -3.1180, -3.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1093, device='cuda:0', dtype=torch.float64)
tensor([-1.9054, -2.6809, -2.7769, -3.1233, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([-1.8944, -2.6734, -2.7901, -3.1337, -3.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-1.8866, -2.6671, -2.8035, -3.1414, -3.2004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7901, device='cuda:0', dtype=torch.float64)
tensor([-1.8814, -2.6599, -2.8175, -3.1501, -3.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9073, device='cuda:0', dtype=torch.float64)
tensor([-1.8741, -2.6543, -2.8246, -3.1583, -3.2028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0282, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.6493, -2.8225, -3.1576, -3.1916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9125, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.6498, -2.8152, -3.1519, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7973, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.6504, -2.8037, -3.1414, -3.1675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0463, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.6515, -2.7891, -3.1320, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0589, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6523, -2.7813, -3.1269, -3.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8477, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.6534, -2.7727, -3.1270, -3.1469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0204, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.6572, -2.7670, -3.1272, -3.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-1.8749, -2.6642, -2.7617, -3.1312, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3437, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.6755, -2.7554, -3.1241, -3.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1218, device='cuda:0', dtype=torch.float64)
tensor([-1.8845, -2.6866, -2.7492, -3.1236, -3.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0565, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.6928, -2.7490, -3.1250, -3.1697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9001, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.6905, -2.7577, -3.1328, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2195, device='cuda:0', dtype=torch.float64)
tensor([-1.8661, -2.6846, -2.7717, -3.1468, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8106, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.6749, -2.7890, -3.1649, -3.1939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0734, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.6680, -2.8075, -3.1853, -3.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0168, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.6582, -2.8253, -3.1956, -3.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0553, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.6493, -2.8374, -3.2007, -3.2147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9905, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.6434, -2.8376, -3.2024, -3.2077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8917, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.6420, -2.8289, -3.1970, -3.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2379, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.6521, -2.8136, -3.1816, -3.1958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1542, device='cuda:0', dtype=torch.float64)
tensor([-1.8879, -2.6690, -2.7979, -3.1637, -3.1969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2395, device='cuda:0', dtype=torch.float64)
tensor([-1.9033, -2.6852, -2.7847, -3.1494, -3.2019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0700, device='cuda:0', dtype=torch.float64)
tensor([-1.9134, -2.6957, -2.7747, -3.1408, -3.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8933, device='cuda:0', dtype=torch.float64)
tensor([-1.9177, -2.7052, -2.7619, -3.1331, -3.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8682, device='cuda:0', dtype=torch.float64)
tensor([-1.9149, -2.7054, -2.7535, -3.1246, -3.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0588, device='cuda:0', dtype=torch.float64)
tensor([-1.9095, -2.7000, -2.7523, -3.1203, -3.1817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0068, device='cuda:0', dtype=torch.float64)
tensor([-1.9012, -2.6925, -2.7586, -3.1173, -3.1692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1250, device='cuda:0', dtype=torch.float64)
tensor([-1.8966, -2.6842, -2.7685, -3.1172, -3.1601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1717, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.6741, -2.7747, -3.1236, -3.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9616, device='cuda:0', dtype=torch.float64)
tensor([-1.8906, -2.6701, -2.7766, -3.1301, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9600, device='cuda:0', dtype=torch.float64)
tensor([-1.8891, -2.6659, -2.7746, -3.1426, -3.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9650, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.6621, -2.7719, -3.1501, -3.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0697, device='cuda:0', dtype=torch.float64)
tensor([-1.8926, -2.6624, -2.7698, -3.1544, -3.1573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9098, device='cuda:0', dtype=torch.float64)
tensor([-1.8896, -2.6604, -2.7707, -3.1615, -3.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8070, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.6555, -2.7764, -3.1688, -3.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1629, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.6496, -2.7867, -3.1761, -3.1884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9251, device='cuda:0', dtype=torch.float64)
tensor([-1.8591, -2.6412, -2.7979, -3.1866, -3.1938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9501, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.6344, -2.8096, -3.1967, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9645, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6284, -2.8172, -3.2051, -3.2039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9821, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.6297, -2.8125, -3.2027, -3.2020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9554, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6392, -2.8013, -3.1896, -3.1962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0039, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.6529, -2.7881, -3.1761, -3.1922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9064, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.6660, -2.7777, -3.1657, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2484, device='cuda:0', dtype=torch.float64)
tensor([-1.8948, -2.6758, -2.7614, -3.1553, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9739, device='cuda:0', dtype=torch.float64)
tensor([-1.9036, -2.6788, -2.7492, -3.1522, -3.1812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0866, device='cuda:0', dtype=torch.float64)
tensor([-1.9054, -2.6774, -2.7406, -3.1580, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8978, device='cuda:0', dtype=torch.float64)
tensor([-1.9041, -2.6736, -2.7363, -3.1678, -3.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0320, device='cuda:0', dtype=torch.float64)
tensor([-1.9052, -2.6712, -2.7351, -3.1755, -3.1534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1486, device='cuda:0', dtype=torch.float64)
tensor([-1.9009, -2.6676, -2.7338, -3.1838, -3.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8706, device='cuda:0', dtype=torch.float64)
tensor([-1.8932, -2.6651, -2.7395, -3.1931, -3.1362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0137, device='cuda:0', dtype=torch.float64)
tensor([-1.8871, -2.6628, -2.7466, -3.1963, -3.1299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8766, device='cuda:0', dtype=torch.float64)
tensor([-1.8841, -2.6673, -2.7552, -3.1966, -3.1251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9964, device='cuda:0', dtype=torch.float64)
tensor([-1.8864, -2.6731, -2.7692, -3.1946, -3.1276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9886, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.6787, -2.7782, -3.1851, -3.1303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3166, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.6895, -2.7862, -3.1600, -3.1396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8726, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -2.6986, -2.7956, -3.1288, -3.1473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1451, device='cuda:0', dtype=torch.float64)
tensor([-1.9069, -2.7048, -2.8083, -3.1038, -3.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1396, device='cuda:0', dtype=torch.float64)
tensor([-1.9124, -2.7054, -2.8180, -3.0850, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1403, device='cuda:0', dtype=torch.float64)
tensor([-1.9164, -2.7014, -2.8226, -3.0704, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9426, device='cuda:0', dtype=torch.float64)
tensor([-1.9160, -2.6932, -2.8248, -3.0681, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0420, device='cuda:0', dtype=torch.float64)
tensor([-1.9123, -2.6845, -2.8231, -3.0767, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1698, device='cuda:0', dtype=torch.float64)
tensor([-1.9055, -2.6733, -2.8217, -3.0929, -3.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1107, device='cuda:0', dtype=torch.float64)
tensor([-1.8948, -2.6610, -2.8157, -3.1157, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-1.8896, -2.6493, -2.8078, -3.1341, -3.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1452, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.6456, -2.7989, -3.1541, -3.1697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0925, device='cuda:0', dtype=torch.float64)
tensor([-1.8875, -2.6457, -2.7883, -3.1754, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2859, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.6496, -2.7788, -3.1860, -3.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9881, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.6586, -2.7714, -3.1882, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0673, device='cuda:0', dtype=torch.float64)
tensor([-1.8980, -2.6681, -2.7705, -3.1874, -3.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0677, device='cuda:0', dtype=torch.float64)
tensor([-1.8979, -2.6739, -2.7778, -3.1891, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0929, device='cuda:0', dtype=torch.float64)
tensor([-1.8963, -2.6771, -2.7956, -3.1858, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9409, device='cuda:0', dtype=torch.float64)
tensor([-1.8897, -2.6797, -2.8095, -3.1789, -3.1994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9247, device='cuda:0', dtype=torch.float64)
tensor([-1.8851, -2.6852, -2.8171, -3.1688, -3.1981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0953, device='cuda:0', dtype=torch.float64)
tensor([-1.8790, -2.6808, -2.8213, -3.1575, -3.1903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.6744, -2.8177, -3.1484, -3.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9588, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -2.6683, -2.8070, -3.1420, -3.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1136, device='cuda:0', dtype=torch.float64)
tensor([-1.8643, -2.6640, -2.7913, -3.1417, -3.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1358, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6576, -2.7776, -3.1428, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0282, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.6517, -2.7667, -3.1454, -3.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7825, device='cuda:0', dtype=torch.float64)
tensor([-1.8764, -2.6463, -2.7614, -3.1498, -3.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1695, device='cuda:0', dtype=torch.float64)
tensor([-1.8877, -2.6404, -2.7598, -3.1557, -3.1971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0849, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.6397, -2.7599, -3.1578, -3.2112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9947, device='cuda:0', dtype=torch.float64)
tensor([-1.9164, -2.6403, -2.7669, -3.1647, -3.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0793, device='cuda:0', dtype=torch.float64)
tensor([-1.9230, -2.6419, -2.7780, -3.1698, -3.2290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1190, device='cuda:0', dtype=torch.float64)
tensor([-1.9217, -2.6413, -2.7904, -3.1736, -3.2246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1529, device='cuda:0', dtype=torch.float64)
tensor([-1.9207, -2.6458, -2.8006, -3.1781, -3.2186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0272, device='cuda:0', dtype=torch.float64)
tensor([-1.9199, -2.6489, -2.8078, -3.1838, -3.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2578, device='cuda:0', dtype=torch.float64)
tensor([-1.9192, -2.6557, -2.8044, -3.1848, -3.2047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0397, device='cuda:0', dtype=torch.float64)
tensor([-1.9233, -2.6648, -2.7927, -3.1800, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2405, device='cuda:0', dtype=torch.float64)
tensor([-1.9242, -2.6745, -2.7789, -3.1721, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0566, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.6783, -2.7707, -3.1627, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9228, device='cuda:0', dtype=torch.float64)
tensor([-1.9167, -2.6787, -2.7620, -3.1559, -3.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8892, device='cuda:0', dtype=torch.float64)
tensor([-1.9038, -2.6731, -2.7600, -3.1519, -3.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9878, device='cuda:0', dtype=torch.float64)
tensor([-1.8915, -2.6637, -2.7684, -3.1524, -3.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0413, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.6574, -2.7789, -3.1500, -3.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7476, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.6579, -2.7847, -3.1482, -3.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9350, device='cuda:0', dtype=torch.float64)
tensor([-1.8747, -2.6588, -2.7907, -3.1431, -3.1980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9708, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.6639, -2.7889, -3.1381, -3.2072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1844, device='cuda:0', dtype=torch.float64)
tensor([-1.8779, -2.6745, -2.7864, -3.1287, -3.2209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1973, device='cuda:0', dtype=torch.float64)
tensor([-1.8831, -2.6902, -2.7872, -3.1203, -3.2268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2473, device='cuda:0', dtype=torch.float64)
tensor([-1.8884, -2.7068, -2.7881, -3.1123, -3.2223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1223, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.7172, -2.7944, -3.1097, -3.2217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0999, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -2.7206, -2.8077, -3.1096, -3.2223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3231, device='cuda:0', dtype=torch.float64)
tensor([-1.8964, -2.7152, -2.8240, -3.1105, -3.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1195, device='cuda:0', dtype=torch.float64)
tensor([-1.9024, -2.7066, -2.8365, -3.1117, -3.2331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9480, device='cuda:0', dtype=torch.float64)
tensor([-1.8996, -2.6935, -2.8497, -3.1185, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4763, device='cuda:0', dtype=torch.float64)
tensor([-1.8897, -2.6827, -2.8513, -3.1274, -3.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2019, device='cuda:0', dtype=torch.float64)
tensor([-1.8778, -2.6721, -2.8482, -3.1367, -3.1779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9451, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.6653, -2.8383, -3.1462, -3.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3903, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.6518, -2.8250, -3.1555, -3.1405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3159, device='cuda:0', dtype=torch.float64)
tensor([-1.8911, -2.6416, -2.8136, -3.1636, -3.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9703, device='cuda:0', dtype=torch.float64)
tensor([-1.9115, -2.6390, -2.8031, -3.1721, -3.1420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8270, device='cuda:0', dtype=torch.float64)
tensor([-1.9341, -2.6404, -2.7966, -3.1759, -3.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0388, device='cuda:0', dtype=torch.float64)
tensor([-1.9525, -2.6412, -2.7919, -3.1803, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0793, device='cuda:0', dtype=torch.float64)
tensor([-1.9653, -2.6493, -2.7870, -3.1867, -3.1917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3467, device='cuda:0', dtype=torch.float64)
tensor([-1.9651, -2.6628, -2.7817, -3.1935, -3.2085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2134, device='cuda:0', dtype=torch.float64)
tensor([-1.9545, -2.6645, -2.7862, -3.1938, -3.2196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3644, device='cuda:0', dtype=torch.float64)
tensor([-1.9302, -2.6616, -2.7988, -3.1970, -3.2235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2516, device='cuda:0', dtype=torch.float64)
tensor([-1.9058, -2.6580, -2.8196, -3.1959, -3.2233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0904, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.6557, -2.8315, -3.1990, -3.2277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0792, device='cuda:0', dtype=torch.float64)
tensor([-1.8673, -2.6573, -2.8282, -3.2010, -3.2298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1795, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.6620, -2.8152, -3.2008, -3.2276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2319, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6722, -2.7948, -3.1919, -3.2246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3569, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.6842, -2.7779, -3.1758, -3.2169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0826, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.6952, -2.7618, -3.1560, -3.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0757, device='cuda:0', dtype=torch.float64)
tensor([-1.8992, -2.7030, -2.7457, -3.1338, -3.2032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0679, device='cuda:0', dtype=torch.float64)
tensor([-1.9237, -2.7081, -2.7326, -3.1141, -3.2035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-1.9460, -2.7086, -2.7295, -3.1022, -3.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9057, device='cuda:0', dtype=torch.float64)
tensor([-1.9524, -2.6985, -2.7398, -3.1041, -3.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9103, device='cuda:0', dtype=torch.float64)
tensor([-1.9444, -2.6857, -2.7546, -3.1171, -3.2138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9956, device='cuda:0', dtype=torch.float64)
tensor([-1.9288, -2.6690, -2.7723, -3.1306, -3.2104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0344, device='cuda:0', dtype=torch.float64)
tensor([-1.9072, -2.6559, -2.7949, -3.1543, -3.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8859, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.6450, -2.8140, -3.1772, -3.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0922, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.6392, -2.8286, -3.2015, -3.1969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0061, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.6393, -2.8352, -3.2169, -3.1939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2799, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.6480, -2.8375, -3.2240, -3.1960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2341, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.6531, -2.8378, -3.2258, -3.1980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8616, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.6627, -2.8308, -3.2172, -3.1970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0850, device='cuda:0', dtype=torch.float64)
tensor([-1.8852, -2.6792, -2.8224, -3.2019, -3.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0920, device='cuda:0', dtype=torch.float64)
tensor([-1.9052, -2.6941, -2.8199, -3.1779, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3409, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.7058, -2.8227, -3.1536, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9907, device='cuda:0', dtype=torch.float64)
tensor([-1.9371, -2.7071, -2.8292, -3.1339, -3.2033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0264, device='cuda:0', dtype=torch.float64)
tensor([-1.9423, -2.7008, -2.8396, -3.1198, -3.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0612, device='cuda:0', dtype=torch.float64)
tensor([-1.9442, -2.6882, -2.8511, -3.1165, -3.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2931, device='cuda:0', dtype=torch.float64)
tensor([-1.9464, -2.6809, -2.8594, -3.1220, -3.1931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9729, device='cuda:0', dtype=torch.float64)
tensor([-1.9436, -2.6756, -2.8608, -3.1365, -3.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1775, device='cuda:0', dtype=torch.float64)
tensor([-1.9352, -2.6723, -2.8587, -3.1509, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0361, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.6724, -2.8549, -3.1705, -3.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2356, device='cuda:0', dtype=torch.float64)
tensor([-1.9033, -2.6740, -2.8434, -3.1930, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3237, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.6734, -2.8269, -3.2111, -3.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3175, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.6673, -2.8148, -3.2287, -3.1262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2179, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.6609, -2.8035, -3.2412, -3.1193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2875, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6615, -2.8007, -3.2406, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1930, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.6674, -2.7981, -3.2312, -3.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3016, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.6731, -2.8029, -3.2106, -3.1889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0452, device='cuda:0', dtype=torch.float64)
tensor([-1.9128, -2.6828, -2.8062, -3.1810, -3.2209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2973, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.6881, -2.8010, -3.1521, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1788, device='cuda:0', dtype=torch.float64)
tensor([-1.9567, -2.6978, -2.7925, -3.1280, -3.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9854, device='cuda:0', dtype=torch.float64)
tensor([-1.9686, -2.7064, -2.7912, -3.1125, -3.2471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1114, device='cuda:0', dtype=torch.float64)
tensor([-1.9681, -2.7010, -2.7999, -3.1077, -3.2488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3177, device='cuda:0', dtype=torch.float64)
tensor([-1.9603, -2.6977, -2.8092, -3.1059, -3.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1466, device='cuda:0', dtype=torch.float64)
tensor([-1.9505, -2.6922, -2.8210, -3.1082, -3.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4526, device='cuda:0', dtype=torch.float64)
tensor([-1.9341, -2.6800, -2.8302, -3.1223, -3.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9014, device='cuda:0', dtype=torch.float64)
tensor([-1.9116, -2.6730, -2.8349, -3.1379, -3.2119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1935, device='cuda:0', dtype=torch.float64)
tensor([-1.8924, -2.6794, -2.8260, -3.1541, -3.1963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9848, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.6905, -2.8066, -3.1654, -3.1708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9302, device='cuda:0', dtype=torch.float64)
tensor([-1.8710, -2.7035, -2.7857, -3.1687, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0946, device='cuda:0', dtype=torch.float64)
tensor([-1.8752, -2.7089, -2.7738, -3.1687, -3.1417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2365, device='cuda:0', dtype=torch.float64)
tensor([-1.8906, -2.7092, -2.7678, -3.1587, -3.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9029, device='cuda:0', dtype=torch.float64)
tensor([-1.9057, -2.7050, -2.7703, -3.1501, -3.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1486, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.6988, -2.7832, -3.1466, -3.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0995, device='cuda:0', dtype=torch.float64)
tensor([-1.9315, -2.6900, -2.7976, -3.1478, -3.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3773, device='cuda:0', dtype=torch.float64)
tensor([-1.9303, -2.6863, -2.8053, -3.1519, -3.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0946, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.6902, -2.8093, -3.1603, -3.2273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2836, device='cuda:0', dtype=torch.float64)
tensor([-1.9048, -2.6958, -2.8098, -3.1676, -3.2254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0474, device='cuda:0', dtype=torch.float64)
tensor([-1.8925, -2.7001, -2.8103, -3.1758, -3.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3146, device='cuda:0', dtype=torch.float64)
tensor([-1.8899, -2.6961, -2.8105, -3.1786, -3.2205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1150, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.6904, -2.8092, -3.1758, -3.2141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0331, device='cuda:0', dtype=torch.float64)
tensor([-1.9019, -2.6798, -2.8126, -3.1689, -3.2096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3749, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.6671, -2.8167, -3.1585, -3.2000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9309, device='cuda:0', dtype=torch.float64)
tensor([-1.9071, -2.6582, -2.8165, -3.1567, -3.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2730, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.6485, -2.8195, -3.1585, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2012, device='cuda:0', dtype=torch.float64)
tensor([-1.8949, -2.6442, -2.8286, -3.1580, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2643, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.6409, -2.8370, -3.1561, -3.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0958, device='cuda:0', dtype=torch.float64)
tensor([-1.8974, -2.6420, -2.8454, -3.1530, -3.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9411, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.6455, -2.8494, -3.1471, -3.1991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2181, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.6488, -2.8558, -3.1435, -3.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2922, device='cuda:0', dtype=torch.float64)
tensor([-1.9336, -2.6665, -2.8676, -3.1426, -3.2349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1392, device='cuda:0', dtype=torch.float64)
tensor([-1.9427, -2.6836, -2.8721, -3.1484, -3.2489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1194, device='cuda:0', dtype=torch.float64)
tensor([-1.9462, -2.7013, -2.8717, -3.1547, -3.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1536, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.7103, -2.8737, -3.1602, -3.2546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2853, device='cuda:0', dtype=torch.float64)
tensor([-1.9368, -2.7097, -2.8723, -3.1691, -3.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1777, device='cuda:0', dtype=torch.float64)
tensor([-1.9198, -2.7058, -2.8691, -3.1814, -3.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([-1.9039, -2.7022, -2.8611, -3.1944, -3.2100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9447, device='cuda:0', dtype=torch.float64)
tensor([-1.8931, -2.6954, -2.8476, -3.2077, -3.1958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2247, device='cuda:0', dtype=torch.float64)
tensor([-1.8893, -2.6853, -2.8331, -3.2234, -3.1918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1624, device='cuda:0', dtype=torch.float64)
tensor([-1.8899, -2.6815, -2.8211, -3.2371, -3.1959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1554, device='cuda:0', dtype=torch.float64)
tensor([-1.8977, -2.6764, -2.8093, -3.2393, -3.2059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3289, device='cuda:0', dtype=torch.float64)
tensor([-1.9062, -2.6840, -2.7960, -3.2328, -3.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2533, device='cuda:0', dtype=torch.float64)
tensor([-1.9195, -2.6970, -2.7849, -3.2168, -3.2265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1279, device='cuda:0', dtype=torch.float64)
tensor([-1.9297, -2.7064, -2.7780, -3.2005, -3.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0455, device='cuda:0', dtype=torch.float64)
tensor([-1.9410, -2.7175, -2.7722, -3.1847, -3.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2276, device='cuda:0', dtype=torch.float64)
tensor([-1.9468, -2.7263, -2.7689, -3.1749, -3.2362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1994, device='cuda:0', dtype=torch.float64)
tensor([-1.9410, -2.7312, -2.7704, -3.1776, -3.2180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0012, device='cuda:0', dtype=torch.float64)
tensor([-1.9314, -2.7285, -2.7717, -3.1860, -3.1962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0439, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.7199, -2.7746, -3.1944, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4100, device='cuda:0', dtype=torch.float64)
tensor([-1.9214, -2.7080, -2.7818, -3.2013, -3.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6857, device='cuda:0', dtype=torch.float64)
tensor([-1.9236, -2.6971, -2.7938, -3.2050, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3056, device='cuda:0', dtype=torch.float64)
tensor([-1.9361, -2.6912, -2.8054, -3.2036, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2740, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.6795, -2.8210, -3.2024, -3.2145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1068, device='cuda:0', dtype=torch.float64)
tensor([-1.9390, -2.6670, -2.8390, -3.1974, -3.2200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3226, device='cuda:0', dtype=torch.float64)
tensor([-1.9409, -2.6633, -2.8515, -3.1892, -3.2209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1121, device='cuda:0', dtype=torch.float64)
tensor([-1.9419, -2.6603, -2.8659, -3.1884, -3.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2130, device='cuda:0', dtype=torch.float64)
tensor([-1.9368, -2.6609, -2.8737, -3.1839, -3.2075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2240, device='cuda:0', dtype=torch.float64)
tensor([-1.9318, -2.6699, -2.8664, -3.1794, -3.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9864, device='cuda:0', dtype=torch.float64)
tensor([-1.9316, -2.6845, -2.8515, -3.1792, -3.1714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9083, device='cuda:0', dtype=torch.float64)
tensor([-1.9291, -2.7012, -2.8368, -3.1837, -3.1626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3083, device='cuda:0', dtype=torch.float64)
tensor([-1.9244, -2.7171, -2.8219, -3.1923, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1514, device='cuda:0', dtype=torch.float64)
tensor([-1.9234, -2.7258, -2.8107, -3.2046, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2426, device='cuda:0', dtype=torch.float64)
tensor([-1.9250, -2.7310, -2.8011, -3.2227, -3.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2802, device='cuda:0', dtype=torch.float64)
tensor([-1.9312, -2.7287, -2.7941, -3.2400, -3.1771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0681, device='cuda:0', dtype=torch.float64)
tensor([-1.9354, -2.7189, -2.7918, -3.2458, -3.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0729, device='cuda:0', dtype=torch.float64)
tensor([-1.9348, -2.7046, -2.7886, -3.2490, -3.1790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2378, device='cuda:0', dtype=torch.float64)
tensor([-1.9297, -2.6853, -2.7876, -3.2480, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0117, device='cuda:0', dtype=torch.float64)
tensor([-1.9329, -2.6740, -2.7837, -3.2447, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2685, device='cuda:0', dtype=torch.float64)
tensor([-1.9365, -2.6658, -2.7832, -3.2379, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2671, device='cuda:0', dtype=torch.float64)
tensor([-1.9395, -2.6627, -2.7815, -3.2328, -3.1497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1640, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.6620, -2.7739, -3.2301, -3.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1605, device='cuda:0', dtype=torch.float64)
tensor([-1.9372, -2.6587, -2.7790, -3.2264, -3.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3142, device='cuda:0', dtype=torch.float64)
tensor([-1.9236, -2.6501, -2.7905, -3.2260, -3.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8573, device='cuda:0', dtype=torch.float64)
tensor([-1.9147, -2.6463, -2.8025, -3.2247, -3.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9294, device='cuda:0', dtype=torch.float64)
tensor([-1.9114, -2.6468, -2.8097, -3.2171, -3.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0740, device='cuda:0', dtype=torch.float64)
tensor([-1.9191, -2.6464, -2.8128, -3.2108, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2667, device='cuda:0', dtype=torch.float64)
tensor([-1.9234, -2.6446, -2.8214, -3.2056, -3.1819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2283, device='cuda:0', dtype=torch.float64)
tensor([-1.9276, -2.6498, -2.8324, -3.2027, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0823, device='cuda:0', dtype=torch.float64)
tensor([-1.9395, -2.6604, -2.8386, -3.1971, -3.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0578, device='cuda:0', dtype=torch.float64)
tensor([-1.9493, -2.6777, -2.8426, -3.1837, -3.2218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2465, device='cuda:0', dtype=torch.float64)
tensor([-1.9652, -2.7043, -2.8435, -3.1643, -3.2393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1650, device='cuda:0', dtype=torch.float64)
tensor([-1.9752, -2.7231, -2.8490, -3.1496, -3.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1060, device='cuda:0', dtype=torch.float64)
tensor([-1.9769, -2.7395, -2.8538, -3.1398, -3.2576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3194, device='cuda:0', dtype=torch.float64)
tensor([-1.9710, -2.7500, -2.8488, -3.1352, -3.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2452, device='cuda:0', dtype=torch.float64)
tensor([-1.9653, -2.7647, -2.8395, -3.1248, -3.2235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2993, device='cuda:0', dtype=torch.float64)
tensor([-1.9499, -2.7651, -2.8328, -3.1109, -3.1927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0783, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.7559, -2.8287, -3.1052, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3903, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.7375, -2.8304, -3.1022, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1837, device='cuda:0', dtype=torch.float64)
tensor([-1.9029, -2.7196, -2.8418, -3.1066, -3.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1012, device='cuda:0', dtype=torch.float64)
tensor([-1.8989, -2.7044, -2.8589, -3.1171, -3.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9709, device='cuda:0', dtype=torch.float64)
tensor([-1.9032, -2.6909, -2.8768, -3.1300, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4318, device='cuda:0', dtype=torch.float64)
tensor([-1.9129, -2.6912, -2.8902, -3.1440, -3.2102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2991, device='cuda:0', dtype=torch.float64)
tensor([-1.9186, -2.6947, -2.8925, -3.1580, -3.2313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4773, device='cuda:0', dtype=torch.float64)
tensor([-1.9219, -2.6979, -2.8866, -3.1707, -3.2426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2521, device='cuda:0', dtype=torch.float64)
tensor([-1.9169, -2.7044, -2.8745, -3.1878, -3.2423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0266, device='cuda:0', dtype=torch.float64)
tensor([-1.9098, -2.7098, -2.8616, -3.2007, -3.2412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2979, device='cuda:0', dtype=torch.float64)
tensor([-1.9153, -2.7209, -2.8507, -3.2090, -3.2394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4582, device='cuda:0', dtype=torch.float64)
tensor([-1.9235, -2.7301, -2.8475, -3.2100, -3.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2004, device='cuda:0', dtype=torch.float64)
tensor([-1.9303, -2.7316, -2.8481, -3.2085, -3.2526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1754, device='cuda:0', dtype=torch.float64)
tensor([-1.9359, -2.7288, -2.8423, -3.2034, -3.2518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3129, device='cuda:0', dtype=torch.float64)
tensor([-1.9425, -2.7268, -2.8308, -3.1949, -3.2469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1038, device='cuda:0', dtype=torch.float64)
tensor([-1.9515, -2.7312, -2.8146, -3.1884, -3.2337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0591, device='cuda:0', dtype=torch.float64)
tensor([-1.9572, -2.7406, -2.7985, -3.1806, -3.2172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2234, device='cuda:0', dtype=torch.float64)
tensor([-1.9619, -2.7500, -2.7848, -3.1802, -3.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3250, device='cuda:0', dtype=torch.float64)
tensor([-1.9692, -2.7643, -2.7807, -3.1866, -3.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3940, device='cuda:0', dtype=torch.float64)
tensor([-1.9729, -2.7682, -2.7807, -3.2000, -3.2071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9514, device='cuda:0', dtype=torch.float64)
tensor([-1.9792, -2.7650, -2.7927, -3.2147, -3.2154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1831, device='cuda:0', dtype=torch.float64)
tensor([-1.9798, -2.7477, -2.8131, -3.2239, -3.2195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0716, device='cuda:0', dtype=torch.float64)
tensor([-1.9749, -2.7238, -2.8345, -3.2360, -3.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9551, device='cuda:0', dtype=torch.float64)
tensor([-1.9676, -2.7013, -2.8579, -3.2457, -3.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1360, device='cuda:0', dtype=torch.float64)
tensor([-1.9716, -2.6849, -2.8683, -3.2516, -3.2524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4128, device='cuda:0', dtype=torch.float64)
tensor([-1.9690, -2.6701, -2.8769, -3.2538, -3.2587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9367, device='cuda:0', dtype=torch.float64)
tensor([-1.9689, -2.6632, -2.8746, -3.2506, -3.2608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0433, device='cuda:0', dtype=torch.float64)
tensor([-1.9691, -2.6589, -2.8737, -3.2495, -3.2555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9447, device='cuda:0', dtype=torch.float64)
tensor([-1.9704, -2.6622, -2.8625, -3.2409, -3.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2936, device='cuda:0', dtype=torch.float64)
tensor([-1.9652, -2.6718, -2.8507, -3.2324, -3.2304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1636, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.6794, -2.8275, -3.2242, -3.2111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1266, device='cuda:0', dtype=torch.float64)
tensor([-1.9505, -2.6861, -2.8051, -3.2168, -3.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2732, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.6955, -2.7866, -3.2107, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1054, device='cuda:0', dtype=torch.float64)
tensor([-1.9409, -2.7038, -2.7797, -3.2106, -3.1716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2923, device='cuda:0', dtype=torch.float64)
tensor([-1.9396, -2.7048, -2.7885, -3.2161, -3.1760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1697, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.7062, -2.8053, -3.2186, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1378, device='cuda:0', dtype=torch.float64)
tensor([-1.9354, -2.7055, -2.8241, -3.2227, -3.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-1.9388, -2.7083, -2.8404, -3.2284, -3.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2562, device='cuda:0', dtype=torch.float64)
tensor([-1.9437, -2.7152, -2.8574, -3.2307, -3.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3204, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.7186, -2.8696, -3.2414, -3.2176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1615, device='cuda:0', dtype=torch.float64)
tensor([-1.9318, -2.7152, -2.8806, -3.2411, -3.2054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4100, device='cuda:0', dtype=torch.float64)
tensor([-1.9284, -2.7125, -2.8847, -3.2412, -3.1906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2214, device='cuda:0', dtype=torch.float64)
tensor([-1.9325, -2.7075, -2.8923, -3.2445, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9092, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.7068, -2.8988, -3.2435, -3.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9710, device='cuda:0', dtype=torch.float64)
tensor([-1.9553, -2.7048, -2.9010, -3.2358, -3.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0274, device='cuda:0', dtype=torch.float64)
tensor([-1.9631, -2.7050, -2.8958, -3.2213, -3.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1547, device='cuda:0', dtype=torch.float64)
tensor([-1.9678, -2.6978, -2.8874, -3.2066, -3.2274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6055, device='cuda:0', dtype=torch.float64)
tensor([-1.9723, -2.6882, -2.8804, -3.1914, -3.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3855, device='cuda:0', dtype=torch.float64)
tensor([-1.9805, -2.6907, -2.8635, -3.1718, -3.2528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0618, device='cuda:0', dtype=torch.float64)
tensor([-1.9858, -2.6889, -2.8425, -3.1526, -3.2542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0277, device='cuda:0', dtype=torch.float64)
tensor([-1.9853, -2.6898, -2.8200, -3.1397, -3.2577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2142, device='cuda:0', dtype=torch.float64)
tensor([-1.9826, -2.6944, -2.8033, -3.1309, -3.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2572, device='cuda:0', dtype=torch.float64)
tensor([-1.9796, -2.6967, -2.7800, -3.1260, -3.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1178, device='cuda:0', dtype=torch.float64)
tensor([-1.9789, -2.7033, -2.7653, -3.1302, -3.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2995, device='cuda:0', dtype=torch.float64)
tensor([-1.9810, -2.7029, -2.7612, -3.1392, -3.2727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1277, device='cuda:0', dtype=torch.float64)
tensor([-1.9826, -2.7062, -2.7634, -3.1504, -3.2838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0015, device='cuda:0', dtype=torch.float64)
tensor([-1.9794, -2.7075, -2.7679, -3.1615, -3.2904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2322, device='cuda:0', dtype=torch.float64)
tensor([-1.9644, -2.7096, -2.7695, -3.1751, -3.2850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2438, device='cuda:0', dtype=torch.float64)
tensor([-1.9446, -2.7171, -2.7739, -3.1803, -3.2731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0369, device='cuda:0', dtype=torch.float64)
tensor([-1.9270, -2.7195, -2.7841, -3.1822, -3.2619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1513, device='cuda:0', dtype=torch.float64)
tensor([-1.9126, -2.7205, -2.7938, -3.1838, -3.2502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2748, device='cuda:0', dtype=torch.float64)
tensor([-1.9099, -2.7269, -2.8082, -3.1820, -3.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0419, device='cuda:0', dtype=torch.float64)
tensor([-1.9190, -2.7302, -2.8247, -3.1872, -3.2444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4120, device='cuda:0', dtype=torch.float64)
tensor([-1.9379, -2.7448, -2.8310, -3.1877, -3.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9504, device='cuda:0', dtype=torch.float64)
tensor([-1.9522, -2.7531, -2.8378, -3.1887, -3.2406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0884, device='cuda:0', dtype=torch.float64)
tensor([-1.9619, -2.7607, -2.8413, -3.1931, -3.2394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0365, device='cuda:0', dtype=torch.float64)
tensor([-1.9718, -2.7678, -2.8419, -3.2019, -3.2349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1073, device='cuda:0', dtype=torch.float64)
tensor([-1.9795, -2.7678, -2.8412, -3.2108, -3.2293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9952, device='cuda:0', dtype=torch.float64)
tensor([-1.9861, -2.7653, -2.8458, -3.2129, -3.2179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3344, device='cuda:0', dtype=torch.float64)
tensor([-1.9889, -2.7670, -2.8531, -3.2153, -3.2059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3281, device='cuda:0', dtype=torch.float64)
tensor([-1.9857, -2.7633, -2.8665, -3.2218, -3.2002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3867, device='cuda:0', dtype=torch.float64)
tensor([-1.9887, -2.7728, -2.8748, -3.2166, -3.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0718, device='cuda:0', dtype=torch.float64)
tensor([-1.9911, -2.7739, -2.8841, -3.2038, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1087, device='cuda:0', dtype=torch.float64)
tensor([-1.9924, -2.7705, -2.8938, -3.1935, -3.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5293, device='cuda:0', dtype=torch.float64)
tensor([-1.9965, -2.7727, -2.9071, -3.1854, -3.1944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2153, device='cuda:0', dtype=torch.float64)
tensor([-1.9971, -2.7705, -2.9159, -3.1777, -3.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2843, device='cuda:0', dtype=torch.float64)
tensor([-2.0006, -2.7617, -2.9224, -3.1782, -3.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2692, device='cuda:0', dtype=torch.float64)
tensor([-2.0094, -2.7556, -2.9096, -3.1848, -3.2205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6778, device='cuda:0', dtype=torch.float64)
tensor([-2.0120, -2.7521, -2.8897, -3.2052, -3.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1688, device='cuda:0', dtype=torch.float64)
tensor([-2.0133, -2.7507, -2.8672, -3.2249, -3.2536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0821, device='cuda:0', dtype=torch.float64)
tensor([-2.0070, -2.7496, -2.8436, -3.2479, -3.2634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9968, device='cuda:0', dtype=torch.float64)
tensor([-1.9987, -2.7458, -2.8193, -3.2752, -3.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5577, device='cuda:0', dtype=torch.float64)
tensor([-1.9870, -2.7365, -2.8066, -3.2948, -3.2622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2895, device='cuda:0', dtype=torch.float64)
tensor([-1.9789, -2.7244, -2.8049, -3.3058, -3.2633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1417, device='cuda:0', dtype=torch.float64)
tensor([-1.9765, -2.7137, -2.8031, -3.2984, -3.2654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1148, device='cuda:0', dtype=torch.float64)
tensor([-1.9658, -2.7013, -2.8127, -3.2894, -3.2648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3315, device='cuda:0', dtype=torch.float64)
tensor([-1.9506, -2.6862, -2.8296, -3.2847, -3.2694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2453, device='cuda:0', dtype=torch.float64)
tensor([-1.9306, -2.6804, -2.8412, -3.2768, -3.2668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2408, device='cuda:0', dtype=torch.float64)
tensor([-1.9189, -2.6849, -2.8519, -3.2766, -3.2685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4278, device='cuda:0', dtype=torch.float64)
tensor([-1.9098, -2.6928, -2.8549, -3.2735, -3.2667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2595, device='cuda:0', dtype=torch.float64)
tensor([-1.9105, -2.7015, -2.8470, -3.2698, -3.2546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1180, device='cuda:0', dtype=torch.float64)
tensor([-1.9220, -2.7097, -2.8299, -3.2551, -3.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3231, device='cuda:0', dtype=torch.float64)
tensor([-1.9461, -2.7266, -2.8096, -3.2364, -3.2353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0429, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.7349, -2.7995, -3.2287, -3.2340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1336, device='cuda:0', dtype=torch.float64)
tensor([-1.9873, -2.7452, -2.7971, -3.2212, -3.2396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3826, device='cuda:0', dtype=torch.float64)
tensor([-1.9946, -2.7500, -2.8070, -3.2188, -3.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0936, device='cuda:0', dtype=torch.float64)
tensor([-1.9919, -2.7438, -2.8225, -3.2261, -3.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9703, device='cuda:0', dtype=torch.float64)
tensor([-1.9838, -2.7251, -2.8426, -3.2353, -3.2505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2128, device='cuda:0', dtype=torch.float64)
tensor([-1.9812, -2.7074, -2.8604, -3.2462, -3.2600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0870, device='cuda:0', dtype=torch.float64)
tensor([-1.9762, -2.6938, -2.8693, -3.2524, -3.2551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3716, device='cuda:0', dtype=torch.float64)
tensor([-1.9589, -2.6796, -2.8763, -3.2720, -3.2407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9939, device='cuda:0', dtype=torch.float64)
tensor([-1.9430, -2.6708, -2.8776, -3.2830, -3.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1469, device='cuda:0', dtype=torch.float64)
tensor([-1.9357, -2.6707, -2.8727, -3.2847, -3.2138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3836, device='cuda:0', dtype=torch.float64)
tensor([-1.9444, -2.6757, -2.8681, -3.2776, -3.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3725, device='cuda:0', dtype=torch.float64)
tensor([-1.9610, -2.6869, -2.8627, -3.2724, -3.2110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3792, device='cuda:0', dtype=torch.float64)
tensor([-1.9874, -2.7029, -2.8690, -3.2621, -3.2207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2968, device='cuda:0', dtype=torch.float64)
tensor([-2.0161, -2.7275, -2.8713, -3.2538, -3.2361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2663, device='cuda:0', dtype=torch.float64)
tensor([-2.0439, -2.7540, -2.8647, -3.2503, -3.2369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1668, device='cuda:0', dtype=torch.float64)
tensor([-2.0587, -2.7795, -2.8526, -3.2374, -3.2316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1975, device='cuda:0', dtype=torch.float64)
tensor([-2.0597, -2.7917, -2.8422, -3.2304, -3.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2641, device='cuda:0', dtype=torch.float64)
tensor([-2.0613, -2.8026, -2.8358, -3.2119, -3.2030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2235, device='cuda:0', dtype=torch.float64)
tensor([-2.0525, -2.7979, -2.8434, -3.1981, -3.1837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1853, device='cuda:0', dtype=torch.float64)
tensor([-2.0474, -2.7931, -2.8510, -3.1891, -3.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1775, device='cuda:0', dtype=torch.float64)
tensor([-2.0354, -2.7766, -2.8686, -3.1916, -3.1659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2002, device='cuda:0', dtype=torch.float64)
tensor([-2.0266, -2.7546, -2.8905, -3.1958, -3.1767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3434, device='cuda:0', dtype=torch.float64)
tensor([-2.0211, -2.7345, -2.9150, -3.2038, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1749, device='cuda:0', dtype=torch.float64)
tensor([-2.0225, -2.7262, -2.9360, -3.2158, -3.2185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4730, device='cuda:0', dtype=torch.float64)
tensor([-2.0253, -2.7154, -2.9583, -3.2390, -3.2491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2776, device='cuda:0', dtype=torch.float64)
tensor([-2.0262, -2.7072, -2.9707, -3.2527, -3.2672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5191, device='cuda:0', dtype=torch.float64)
tensor([-2.0197, -2.6989, -2.9707, -3.2504, -3.2758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1926, device='cuda:0', dtype=torch.float64)
tensor([-2.0135, -2.6959, -2.9527, -3.2385, -3.2705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3102, device='cuda:0', dtype=torch.float64)
tensor([-2.0173, -2.6953, -2.9241, -3.2210, -3.2597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1652, device='cuda:0', dtype=torch.float64)
tensor([-2.0208, -2.7019, -2.8950, -3.2099, -3.2489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3372, device='cuda:0', dtype=torch.float64)
tensor([-2.0426, -2.7256, -2.8648, -3.1965, -3.2511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4546, device='cuda:0', dtype=torch.float64)
tensor([-2.0662, -2.7443, -2.8398, -3.1943, -3.2642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3822, device='cuda:0', dtype=torch.float64)
tensor([-2.0922, -2.7617, -2.8356, -3.1984, -3.2903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9999, device='cuda:0', dtype=torch.float64)
tensor([-2.1119, -2.7795, -2.8360, -3.2075, -3.3109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2765, device='cuda:0', dtype=torch.float64)
tensor([-2.1193, -2.7901, -2.8426, -3.2264, -3.3229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3498, device='cuda:0', dtype=torch.float64)
tensor([-2.1152, -2.7954, -2.8484, -3.2535, -3.3166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3677, device='cuda:0', dtype=torch.float64)
tensor([-2.1001, -2.7902, -2.8478, -3.2709, -3.2978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1397, device='cuda:0', dtype=torch.float64)
tensor([-2.0695, -2.7760, -2.8505, -3.2834, -3.2678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2258, device='cuda:0', dtype=torch.float64)
tensor([-2.0386, -2.7631, -2.8575, -3.3032, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9642, device='cuda:0', dtype=torch.float64)
tensor([-2.0041, -2.7451, -2.8709, -3.3303, -3.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1984, device='cuda:0', dtype=torch.float64)
tensor([-1.9730, -2.7308, -2.8869, -3.3485, -3.2075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2748, device='cuda:0', dtype=torch.float64)
tensor([-1.9472, -2.7139, -2.9038, -3.3554, -3.2011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0171, device='cuda:0', dtype=torch.float64)
tensor([-1.9355, -2.7085, -2.9166, -3.3558, -3.1972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2014, device='cuda:0', dtype=torch.float64)
tensor([-1.9371, -2.7042, -2.9203, -3.3397, -3.2000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2505, device='cuda:0', dtype=torch.float64)
tensor([-1.9503, -2.7081, -2.9189, -3.3298, -3.2122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9157, device='cuda:0', dtype=torch.float64)
tensor([-1.9700, -2.7224, -2.9146, -3.3159, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2423, device='cuda:0', dtype=torch.float64)
tensor([-1.9919, -2.7404, -2.9160, -3.3020, -3.2484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1381, device='cuda:0', dtype=torch.float64)
tensor([-2.0001, -2.7555, -2.9169, -3.2893, -3.2527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2137, device='cuda:0', dtype=torch.float64)
tensor([-2.0140, -2.7693, -2.9167, -3.2714, -3.2627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2166, device='cuda:0', dtype=torch.float64)
tensor([-2.0253, -2.7817, -2.9168, -3.2591, -3.2734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9893, device='cuda:0', dtype=torch.float64)
tensor([-2.0395, -2.7915, -2.9107, -3.2454, -3.2772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9343, device='cuda:0', dtype=torch.float64)
tensor([-2.0408, -2.7922, -2.9050, -3.2416, -3.2725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4384, device='cuda:0', dtype=torch.float64)
tensor([-2.0501, -2.7917, -2.8982, -3.2331, -3.2859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9170, device='cuda:0', dtype=torch.float64)
tensor([-2.0502, -2.7898, -2.8931, -3.2307, -3.2952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2730, device='cuda:0', dtype=torch.float64)
tensor([-2.0550, -2.7932, -2.8835, -3.2299, -3.2976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1965, device='cuda:0', dtype=torch.float64)
tensor([-2.0544, -2.7996, -2.8770, -3.2313, -3.3007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9922, device='cuda:0', dtype=torch.float64)
tensor([-2.0518, -2.8009, -2.8737, -3.2449, -3.3015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1770, device='cuda:0', dtype=torch.float64)
tensor([-2.0447, -2.8053, -2.8682, -3.2585, -3.3022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1215, device='cuda:0', dtype=torch.float64)
tensor([-2.0324, -2.8091, -2.8636, -3.2734, -3.3075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1263, device='cuda:0', dtype=torch.float64)
tensor([-2.0206, -2.8155, -2.8625, -3.2846, -3.3036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3502, device='cuda:0', dtype=torch.float64)
tensor([-2.0060, -2.8263, -2.8563, -3.2877, -3.2875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4648, device='cuda:0', dtype=torch.float64)
tensor([-1.9902, -2.8320, -2.8477, -3.2953, -3.2733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1547, device='cuda:0', dtype=torch.float64)
tensor([-1.9820, -2.8372, -2.8322, -3.2908, -3.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1626, device='cuda:0', dtype=torch.float64)
tensor([-1.9871, -2.8430, -2.8310, -3.2808, -3.2691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2536, device='cuda:0', dtype=torch.float64)
tensor([-1.9918, -2.8428, -2.8435, -3.2645, -3.2817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1895, device='cuda:0', dtype=torch.float64)
tensor([-1.9990, -2.8397, -2.8610, -3.2544, -3.3013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1584, device='cuda:0', dtype=torch.float64)
tensor([-2.0039, -2.8305, -2.8813, -3.2509, -3.3169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2067, device='cuda:0', dtype=torch.float64)
tensor([-2.0198, -2.8232, -2.9005, -3.2481, -3.3379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1761, device='cuda:0', dtype=torch.float64)
tensor([-2.0238, -2.8083, -2.9184, -3.2440, -3.3455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2261, device='cuda:0', dtype=torch.float64)
tensor([-2.0287, -2.7964, -2.9298, -3.2445, -3.3544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2313, device='cuda:0', dtype=torch.float64)
tensor([-2.0334, -2.7825, -2.9320, -3.2438, -3.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9897, device='cuda:0', dtype=torch.float64)
tensor([-2.0359, -2.7698, -2.9360, -3.2467, -3.3606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2043, device='cuda:0', dtype=torch.float64)
tensor([-2.0333, -2.7557, -2.9327, -3.2431, -3.3587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1150, device='cuda:0', dtype=torch.float64)
tensor([-2.0456, -2.7406, -2.9180, -3.2379, -3.3534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3084, device='cuda:0', dtype=torch.float64)
tensor([-2.0596, -2.7280, -2.9085, -3.2275, -3.3550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0479, device='cuda:0', dtype=torch.float64)
tensor([-2.0739, -2.7132, -2.9011, -3.2145, -3.3488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3136, device='cuda:0', dtype=torch.float64)
tensor([-2.0890, -2.7022, -2.8980, -3.2132, -3.3489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1460, device='cuda:0', dtype=torch.float64)
tensor([-2.1063, -2.6945, -2.8995, -3.2147, -3.3491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0838, device='cuda:0', dtype=torch.float64)
tensor([-2.1258, -2.7008, -2.8975, -3.2219, -3.3489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3518, device='cuda:0', dtype=torch.float64)
tensor([-2.1407, -2.7182, -2.9007, -3.2272, -3.3624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1193, device='cuda:0', dtype=torch.float64)
tensor([-2.1448, -2.7374, -2.9137, -3.2372, -3.3788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1979, device='cuda:0', dtype=torch.float64)
tensor([-2.1429, -2.7574, -2.9208, -3.2535, -3.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0139, device='cuda:0', dtype=torch.float64)
tensor([-2.1367, -2.7742, -2.9302, -3.2733, -3.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3983, device='cuda:0', dtype=torch.float64)
tensor([-2.1238, -2.7898, -2.9505, -3.2900, -3.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0452, device='cuda:0', dtype=torch.float64)
tensor([-2.1120, -2.8089, -2.9703, -3.2979, -3.3722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2299, device='cuda:0', dtype=torch.float64)
tensor([-2.0958, -2.8190, -2.9908, -3.3007, -3.3595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1029, device='cuda:0', dtype=torch.float64)
tensor([-2.0726, -2.8187, -3.0045, -3.3034, -3.3423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2130, device='cuda:0', dtype=torch.float64)
tensor([-2.0596, -2.8136, -3.0118, -3.2974, -3.3414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4748, device='cuda:0', dtype=torch.float64)
tensor([-2.0488, -2.8059, -3.0225, -3.2851, -3.3435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3487, device='cuda:0', dtype=torch.float64)
tensor([-2.0495, -2.7942, -3.0335, -3.2708, -3.3489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2016, device='cuda:0', dtype=torch.float64)
tensor([-2.0517, -2.7890, -3.0419, -3.2596, -3.3529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2955, device='cuda:0', dtype=torch.float64)
tensor([-2.0516, -2.7944, -3.0362, -3.2410, -3.3474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2418, device='cuda:0', dtype=torch.float64)
tensor([-2.0495, -2.8056, -3.0242, -3.2118, -3.3379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5699, device='cuda:0', dtype=torch.float64)
tensor([-2.0397, -2.8115, -3.0109, -3.1890, -3.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2247, device='cuda:0', dtype=torch.float64)
tensor([-2.0279, -2.8182, -2.9927, -3.1710, -3.2940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0835, device='cuda:0', dtype=torch.float64)
tensor([-2.0190, -2.8306, -2.9741, -3.1660, -3.2808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4701, device='cuda:0', dtype=torch.float64)
tensor([-2.0218, -2.8473, -2.9693, -3.1602, -3.2815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0048, device='cuda:0', dtype=torch.float64)
tensor([-2.0302, -2.8567, -2.9669, -3.1571, -3.2872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4377, device='cuda:0', dtype=torch.float64)
tensor([-2.0518, -2.8719, -2.9713, -3.1601, -3.3124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3533, device='cuda:0', dtype=torch.float64)
tensor([-2.0772, -2.8819, -2.9816, -3.1805, -3.3500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0835, device='cuda:0', dtype=torch.float64)
tensor([-2.1027, -2.8899, -2.9890, -3.2130, -3.3755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1357, device='cuda:0', dtype=torch.float64)
tensor([-2.1173, -2.9018, -2.9899, -3.2565, -3.3912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3943, device='cuda:0', dtype=torch.float64)
tensor([-2.1163, -2.9069, -2.9958, -3.2987, -3.3914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3645, device='cuda:0', dtype=torch.float64)
tensor([-2.1133, -2.9100, -3.0044, -3.3594, -3.3794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7154, device='cuda:0', dtype=torch.float64)
tensor([-2.0968, -2.8950, -3.0179, -3.3991, -3.3526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0297, device='cuda:0', dtype=torch.float64)
tensor([-2.0835, -2.8878, -3.0282, -3.4378, -3.3286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1070, device='cuda:0', dtype=torch.float64)
tensor([-2.0660, -2.8818, -3.0251, -3.4653, -3.3077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1530, device='cuda:0', dtype=torch.float64)
tensor([-2.0537, -2.8766, -3.0220, -3.4846, -3.2973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3168, device='cuda:0', dtype=torch.float64)
tensor([-2.0565, -2.8719, -3.0113, -3.4967, -3.2921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1326, device='cuda:0', dtype=torch.float64)
tensor([-2.0666, -2.8689, -2.9931, -3.4924, -3.2948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4619, device='cuda:0', dtype=torch.float64)
tensor([-2.0821, -2.8649, -2.9763, -3.4739, -3.3084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9197, device='cuda:0', dtype=torch.float64)
tensor([-2.1007, -2.8622, -2.9581, -3.4498, -3.3224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1217, device='cuda:0', dtype=torch.float64)
tensor([-2.1069, -2.8569, -2.9470, -3.4198, -3.3343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0653, device='cuda:0', dtype=torch.float64)
tensor([-2.1079, -2.8499, -2.9407, -3.3983, -3.3394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2270, device='cuda:0', dtype=torch.float64)
tensor([-2.1054, -2.8451, -2.9385, -3.3820, -3.3387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4156, device='cuda:0', dtype=torch.float64)
tensor([-2.1060, -2.8589, -2.9429, -3.3757, -3.3438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2966, device='cuda:0', dtype=torch.float64)
tensor([-2.1083, -2.8731, -2.9475, -3.3750, -3.3367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5071, device='cuda:0', dtype=torch.float64)
tensor([-2.1231, -2.8982, -2.9450, -3.3755, -3.3356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0795, device='cuda:0', dtype=torch.float64)
tensor([-2.1283, -2.9181, -2.9556, -3.3696, -3.3403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3684, device='cuda:0', dtype=torch.float64)
tensor([-2.1392, -2.9342, -2.9728, -3.3628, -3.3510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2644, device='cuda:0', dtype=torch.float64)
tensor([-2.1485, -2.9537, -2.9848, -3.3548, -3.3622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1247, device='cuda:0', dtype=torch.float64)
tensor([-2.1613, -2.9583, -3.0034, -3.3466, -3.3772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3456, device='cuda:0', dtype=torch.float64)
tensor([-2.1752, -2.9548, -3.0289, -3.3384, -3.4029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1541, device='cuda:0', dtype=torch.float64)
tensor([-2.1864, -2.9429, -3.0530, -3.3342, -3.4221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2287, device='cuda:0', dtype=torch.float64)
tensor([-2.1956, -2.9327, -3.0783, -3.3341, -3.4424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4200, device='cuda:0', dtype=torch.float64)
tensor([-2.1989, -2.9202, -3.0923, -3.3314, -3.4509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2684, device='cuda:0', dtype=torch.float64)
tensor([-2.1969, -2.9021, -3.0981, -3.3102, -3.4511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4568, device='cuda:0', dtype=torch.float64)
tensor([-2.1908, -2.8777, -3.1026, -3.2969, -3.4541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2343, device='cuda:0', dtype=torch.float64)
tensor([-2.1914, -2.8489, -3.1042, -3.2962, -3.4519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1503, device='cuda:0', dtype=torch.float64)
tensor([-2.1817, -2.8222, -3.1059, -3.2961, -3.4407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3389, device='cuda:0', dtype=torch.float64)
tensor([-2.1789, -2.8102, -3.0934, -3.3010, -3.4262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9854, device='cuda:0', dtype=torch.float64)
tensor([-2.1701, -2.8000, -3.0794, -3.3119, -3.4104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1908, device='cuda:0', dtype=torch.float64)
tensor([-2.1652, -2.7940, -3.0625, -3.3190, -3.3936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2851, device='cuda:0', dtype=torch.float64)
tensor([-2.1567, -2.7857, -3.0427, -3.3406, -3.3697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1389, device='cuda:0', dtype=torch.float64)
tensor([-2.1403, -2.7873, -3.0291, -3.3659, -3.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4463, device='cuda:0', dtype=torch.float64)
tensor([-2.1209, -2.8012, -3.0171, -3.4250, -3.3301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3473, device='cuda:0', dtype=torch.float64)
tensor([-2.1059, -2.8272, -3.0108, -3.5078, -3.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6277, device='cuda:0', dtype=torch.float64)
tensor([-2.1010, -2.8461, -3.0197, -3.5291, -3.3174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4719, device='cuda:0', dtype=torch.float64)
tensor([-2.0972, -2.8692, -3.0296, -3.4960, -3.3289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0391, device='cuda:0', dtype=torch.float64)
tensor([-2.0978, -2.8820, -3.0418, -3.4562, -3.3428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3920, device='cuda:0', dtype=torch.float64)
tensor([-2.1162, -2.8983, -3.0445, -3.4145, -3.3527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0860, device='cuda:0', dtype=torch.float64)
tensor([-2.1375, -2.9060, -3.0502, -3.3845, -3.3691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1030, device='cuda:0', dtype=torch.float64)
tensor([-2.1600, -2.9091, -3.0566, -3.3477, -3.3788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4003, device='cuda:0', dtype=torch.float64)
tensor([-2.1698, -2.9131, -3.0556, -3.3137, -3.3840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1389, device='cuda:0', dtype=torch.float64)
tensor([-2.1855, -2.9221, -3.0603, -3.2819, -3.3977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2094, device='cuda:0', dtype=torch.float64)
tensor([-2.1990, -2.9286, -3.0583, -3.2457, -3.4070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3403, device='cuda:0', dtype=torch.float64)
tensor([-2.2021, -2.9247, -3.0500, -3.2065, -3.4079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1863, device='cuda:0', dtype=torch.float64)
tensor([-2.2115, -2.9284, -3.0385, -3.1794, -3.4115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1896, device='cuda:0', dtype=torch.float64)
tensor([-2.2092, -2.9309, -3.0344, -3.1668, -3.4111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2755, device='cuda:0', dtype=torch.float64)
tensor([-2.2093, -2.9305, -3.0290, -3.1606, -3.4103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3490, device='cuda:0', dtype=torch.float64)
tensor([-2.2108, -2.9319, -3.0347, -3.1644, -3.4162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2343, device='cuda:0', dtype=torch.float64)
tensor([-2.2105, -2.9475, -3.0398, -3.1795, -3.4284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2650, device='cuda:0', dtype=torch.float64)
tensor([-2.2192, -2.9655, -3.0401, -3.2062, -3.4399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1059, device='cuda:0', dtype=torch.float64)
tensor([-2.2374, -2.9823, -3.0360, -3.2336, -3.4505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1747, device='cuda:0', dtype=torch.float64)
tensor([-2.2555, -2.9814, -3.0366, -3.2617, -3.4614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3522, device='cuda:0', dtype=torch.float64)
tensor([-2.2678, -2.9778, -3.0467, -3.2867, -3.4829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2752, device='cuda:0', dtype=torch.float64)
tensor([-2.2825, -2.9747, -3.0515, -3.3176, -3.5027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0970, device='cuda:0', dtype=torch.float64)
tensor([-2.3001, -2.9719, -3.0549, -3.3392, -3.5255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2188, device='cuda:0', dtype=torch.float64)
tensor([-2.3088, -2.9616, -3.0539, -3.3552, -3.5350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0732, device='cuda:0', dtype=torch.float64)
tensor([-2.3109, -2.9447, -3.0559, -3.3668, -3.5490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3638, device='cuda:0', dtype=torch.float64)
tensor([-2.3095, -2.9271, -3.0562, -3.3724, -3.5536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3209, device='cuda:0', dtype=torch.float64)
tensor([-2.3039, -2.9135, -3.0587, -3.3753, -3.5496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1987, device='cuda:0', dtype=torch.float64)
tensor([-2.2832, -2.9010, -3.0630, -3.3787, -3.5471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-2.2634, -2.8985, -3.0680, -3.4006, -3.5406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3339, device='cuda:0', dtype=torch.float64)
tensor([-2.2428, -2.9028, -3.0795, -3.4428, -3.5333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1491, device='cuda:0', dtype=torch.float64)
tensor([-2.2290, -2.9111, -3.0891, -3.4864, -3.5167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3456, device='cuda:0', dtype=torch.float64)
tensor([-2.2251, -2.9260, -3.1000, -3.5177, -3.4889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9711, device='cuda:0', dtype=torch.float64)
tensor([-2.2157, -2.9401, -3.1176, -3.5418, -3.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3462, device='cuda:0', dtype=torch.float64)
tensor([-2.2031, -2.9483, -3.1348, -3.5614, -3.4491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1132, device='cuda:0', dtype=torch.float64)
tensor([-2.1893, -2.9595, -3.1487, -3.5577, -3.4354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1088, device='cuda:0', dtype=torch.float64)
tensor([-2.1731, -2.9700, -3.1635, -3.5441, -3.4200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0678, device='cuda:0', dtype=torch.float64)
tensor([-2.1507, -2.9778, -3.1759, -3.5234, -3.4013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2467, device='cuda:0', dtype=torch.float64)
tensor([-2.1334, -2.9865, -3.1799, -3.4939, -3.3774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1342, device='cuda:0', dtype=torch.float64)
tensor([-2.1231, -2.9986, -3.1843, -3.4609, -3.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0883, device='cuda:0', dtype=torch.float64)
tensor([-2.1179, -3.0124, -3.1903, -3.4436, -3.3510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2134, device='cuda:0', dtype=torch.float64)
tensor([-2.1279, -3.0298, -3.1841, -3.4216, -3.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3118, device='cuda:0', dtype=torch.float64)
tensor([-2.1553, -3.0610, -3.1693, -3.3983, -3.3787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4826, device='cuda:0', dtype=torch.float64)
tensor([-2.2000, -3.0936, -3.1587, -3.3662, -3.4092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1091, device='cuda:0', dtype=torch.float64)
tensor([-2.2448, -3.1203, -3.1509, -3.3428, -3.4453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1216, device='cuda:0', dtype=torch.float64)
tensor([-2.2826, -3.1430, -3.1523, -3.3297, -3.4695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0882, device='cuda:0', dtype=torch.float64)
tensor([-2.3196, -3.1601, -3.1516, -3.3225, -3.4870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1862, device='cuda:0', dtype=torch.float64)
tensor([-2.3497, -3.1725, -3.1547, -3.3304, -3.5045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0486, device='cuda:0', dtype=torch.float64)
tensor([-2.3624, -3.1822, -3.1493, -3.3412, -3.5138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2187, device='cuda:0', dtype=torch.float64)
tensor([-2.3757, -3.2062, -3.1438, -3.3513, -3.5184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0768, device='cuda:0', dtype=torch.float64)
tensor([-2.3860, -3.2277, -3.1347, -3.3527, -3.5156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1683, device='cuda:0', dtype=torch.float64)
tensor([-2.3944, -3.2469, -3.1288, -3.3624, -3.5186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1852, device='cuda:0', dtype=torch.float64)
tensor([-2.4065, -3.2481, -3.1269, -3.3694, -3.5303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3196, device='cuda:0', dtype=torch.float64)
tensor([-2.4149, -3.2443, -3.1266, -3.3646, -3.5298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1470, device='cuda:0', dtype=torch.float64)
tensor([-2.4171, -3.2392, -3.1179, -3.3635, -3.5331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9992, device='cuda:0', dtype=torch.float64)
tensor([-2.4194, -3.2270, -3.1215, -3.3675, -3.5343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3064, device='cuda:0', dtype=torch.float64)
tensor([-2.4075, -3.2029, -3.1376, -3.3811, -3.5397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1911, device='cuda:0', dtype=torch.float64)
tensor([-2.3906, -3.1747, -3.1509, -3.4049, -3.5400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2573, device='cuda:0', dtype=torch.float64)
tensor([-2.3885, -3.1407, -3.1559, -3.4361, -3.5447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0181, device='cuda:0', dtype=torch.float64)
tensor([-2.3894, -3.1141, -3.1586, -3.4764, -3.5524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1100, device='cuda:0', dtype=torch.float64)
tensor([-2.3819, -3.0920, -3.1683, -3.5093, -3.5618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2189, device='cuda:0', dtype=torch.float64)
tensor([-2.3874, -3.0763, -3.1813, -3.5351, -3.5832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1402, device='cuda:0', dtype=torch.float64)
tensor([-2.3934, -3.0738, -3.1914, -3.5489, -3.6061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1805, device='cuda:0', dtype=torch.float64)
tensor([-2.4093, -3.0647, -3.1990, -3.5670, -3.6363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2150, device='cuda:0', dtype=torch.float64)
tensor([-2.4293, -3.0720, -3.2106, -3.5961, -3.6692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3036, device='cuda:0', dtype=torch.float64)
tensor([-2.4499, -3.0771, -3.2217, -3.6185, -3.6886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9148, device='cuda:0', dtype=torch.float64)
tensor([-2.4708, -3.0712, -3.2311, -3.6340, -3.7000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1035, device='cuda:0', dtype=torch.float64)
tensor([-2.4837, -3.0629, -3.2447, -3.6275, -3.7080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1058, device='cuda:0', dtype=torch.float64)
tensor([-2.5040, -3.0491, -3.2635, -3.6188, -3.7264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1882, device='cuda:0', dtype=torch.float64)
tensor([-2.5098, -3.0433, -3.2781, -3.6196, -3.7282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9711, device='cuda:0', dtype=torch.float64)
tensor([-2.5129, -3.0481, -3.2896, -3.6160, -3.7234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0528, device='cuda:0', dtype=torch.float64)
tensor([-2.5230, -3.0626, -3.2824, -3.6062, -3.7189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2484, device='cuda:0', dtype=torch.float64)
tensor([-2.5207, -3.0678, -3.2673, -3.6073, -3.7127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3661, device='cuda:0', dtype=torch.float64)
tensor([-2.5170, -3.0818, -3.2496, -3.6194, -3.7032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3549, device='cuda:0', dtype=torch.float64)
tensor([-2.5249, -3.1014, -3.2451, -3.6294, -3.7085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1879, device='cuda:0', dtype=torch.float64)
tensor([-2.5314, -3.1189, -3.2512, -3.6412, -3.7166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2048, device='cuda:0', dtype=torch.float64)
tensor([-2.5362, -3.1354, -3.2543, -3.6429, -3.7177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1610, device='cuda:0', dtype=torch.float64)
tensor([-2.5387, -3.1486, -3.2591, -3.6479, -3.7125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3229, device='cuda:0', dtype=torch.float64)
tensor([-2.5387, -3.1718, -3.2725, -3.6600, -3.7181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1927, device='cuda:0', dtype=torch.float64)
tensor([-2.5474, -3.1847, -3.2942, -3.6540, -3.7282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0279, device='cuda:0', dtype=torch.float64)
tensor([-2.5530, -3.1984, -3.3148, -3.6544, -3.7359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4365, device='cuda:0', dtype=torch.float64)
tensor([-2.5587, -3.2205, -3.3378, -3.6475, -3.7346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9109, device='cuda:0', dtype=torch.float64)
tensor([-2.5678, -3.2276, -3.3562, -3.6371, -3.7384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1584, device='cuda:0', dtype=torch.float64)
tensor([-2.5837, -3.2231, -3.3659, -3.6288, -3.7545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3758, device='cuda:0', dtype=torch.float64)
tensor([-2.6033, -3.1983, -3.3679, -3.6159, -3.7701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1067, device='cuda:0', dtype=torch.float64)
tensor([-2.6297, -3.1775, -3.3615, -3.6099, -3.7837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9381, device='cuda:0', dtype=torch.float64)
tensor([-2.6593, -3.1721, -3.3441, -3.6044, -3.7803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0001, device='cuda:0', dtype=torch.float64)
tensor([-2.6913, -3.1690, -3.3260, -3.5940, -3.7811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1769, device='cuda:0', dtype=torch.float64)
tensor([-2.7254, -3.1724, -3.3216, -3.5923, -3.7785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9897, device='cuda:0', dtype=torch.float64)
tensor([-2.7666, -3.1960, -3.3133, -3.5940, -3.7700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0646, device='cuda:0', dtype=torch.float64)
tensor([-2.8007, -3.2196, -3.3141, -3.6059, -3.7705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0849, device='cuda:0', dtype=torch.float64)
tensor([-2.8450, -3.2406, -3.3187, -3.6155, -3.7675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3900, device='cuda:0', dtype=torch.float64)
tensor([-2.9236, -3.2751, -3.3175, -3.6388, -3.7638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9274, device='cuda:0', dtype=torch.float64)
tensor([-2.9909, -3.3077, -3.3102, -3.6762, -3.7712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0150, device='cuda:0', dtype=torch.float64)
tensor([-3.0282, -3.3299, -3.3096, -3.7144, -3.7955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1825, device='cuda:0', dtype=torch.float64)
tensor([-3.0013, -3.3382, -3.3093, -3.7435, -3.8256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2395, device='cuda:0', dtype=torch.float64)
tensor([-2.9689, -3.3468, -3.3102, -3.7495, -3.8583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1687, device='cuda:0', dtype=torch.float64)
tensor([-2.9290, -3.3538, -3.3216, -3.7720, -3.9034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2376, device='cuda:0', dtype=torch.float64)
tensor([-2.9066, -3.3555, -3.3346, -3.8135, -3.9499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9784, device='cuda:0', dtype=torch.float64)
tensor([-2.8933, -3.3551, -3.3502, -3.8505, -3.9944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1950, device='cuda:0', dtype=torch.float64)
tensor([-2.9007, -3.3614, -3.3681, -3.8711, -4.0446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1966, device='cuda:0', dtype=torch.float64)
tensor([-2.9200, -3.3763, -3.3829, -3.8716, -4.0825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1736, device='cuda:0', dtype=torch.float64)
tensor([-2.9305, -3.3944, -3.3931, -3.8945, -4.1055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1099, device='cuda:0', dtype=torch.float64)
tensor([-2.9433, -3.4000, -3.4045, -3.9519, -4.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1586, device='cuda:0', dtype=torch.float64)
tensor([-2.9198, -3.3939, -3.4105, -3.9977, -4.1452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1326, device='cuda:0', dtype=torch.float64)
tensor([-2.8878, -3.3834, -3.4204, -4.0376, -4.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2035, device='cuda:0', dtype=torch.float64)
tensor([-2.8752, -3.3812, -3.4347, -4.0710, -4.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3270, device='cuda:0', dtype=torch.float64)
tensor([-2.8608, -3.3751, -3.4628, -4.0669, -4.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2281, device='cuda:0', dtype=torch.float64)
tensor([-2.8611, -3.3775, -3.4969, -4.0376, -4.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2945, device='cuda:0', dtype=torch.float64)
tensor([-2.8613, -3.3917, -3.5286, -4.0224, -4.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2832, device='cuda:0', dtype=torch.float64)
tensor([-2.8579, -3.4058, -3.5629, -4.0601, -4.2546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0687, device='cuda:0', dtype=torch.float64)
tensor([-2.8626, -3.4155, -3.6006, -4.0975, -4.2738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2325, device='cuda:0', dtype=torch.float64)
tensor([-2.8840, -3.4380, -3.6330, -4.1214, -4.3020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1772, device='cuda:0', dtype=torch.float64)
tensor([-2.9138, -3.4605, -3.6544, -4.1251, -4.3373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1167, device='cuda:0', dtype=torch.float64)
tensor([-2.9522, -3.4896, -3.6718, -4.1184, -4.3722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0615, device='cuda:0', dtype=torch.float64)
tensor([-2.9915, -3.5193, -3.6828, -4.1263, -4.3984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9473, device='cuda:0', dtype=torch.float64)
tensor([-3.0318, -3.5467, -3.6981, -4.1191, -4.4032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1456, device='cuda:0', dtype=torch.float64)
tensor([-3.0638, -3.5742, -3.7259, -4.1274, -4.4013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1888, device='cuda:0', dtype=torch.float64)
tensor([-3.0945, -3.6069, -3.7805, -4.1523, -4.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0732, device='cuda:0', dtype=torch.float64)
tensor([-3.1375, -3.6397, -3.8339, -4.1893, -4.4308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8637, device='cuda:0', dtype=torch.float64)
tensor([-3.1764, -3.6726, -3.9089, -4.2267, -4.4356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0943, device='cuda:0', dtype=torch.float64)
tensor([-3.2260, -3.7137, -3.9777, -4.2531, -4.4434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0884, device='cuda:0', dtype=torch.float64)
tensor([-3.2823, -3.7557, -4.0084, -4.2907, -4.4701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0875, device='cuda:0', dtype=torch.float64)
tensor([-3.3528, -3.8026, -4.0434, -4.3119, -4.5107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3122, device='cuda:0', dtype=torch.float64)
tensor([-3.4202, -3.8528, -4.1040, -4.3449, -4.5413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0399, device='cuda:0', dtype=torch.float64)
tensor([-3.4946, -3.9055, -4.1374, -4.4035, -4.5903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9728, device='cuda:0', dtype=torch.float64)
tensor([-3.5670, -3.9577, -4.1150, -4.4895, -4.6422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8714, device='cuda:0', dtype=torch.float64)
tensor([-3.6396, -4.0074, -4.0907, -4.5896, -4.6989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0234, device='cuda:0', dtype=torch.float64)
tensor([-3.7012, -4.0553, -4.1009, -4.6849, -4.7471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2244, device='cuda:0', dtype=torch.float64)
tensor([-3.7593, -4.1026, -4.1178, -4.8034, -4.8003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0255, device='cuda:0', dtype=torch.float64)
tensor([-3.8123, -4.1579, -4.1643, -4.9283, -4.8478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7870, device='cuda:0', dtype=torch.float64)
tensor([-3.8562, -4.2115, -4.2334, -5.0602, -4.8861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1183, device='cuda:0', dtype=torch.float64)
tensor([-3.8914, -4.2644, -4.2957, -5.1740, -4.9114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8091, device='cuda:0', dtype=torch.float64)
tensor([-3.9182, -4.3129, -4.3933, -5.2678, -4.9272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9194, device='cuda:0', dtype=torch.float64)
tensor([-3.9694, -4.3472, -4.4672, -5.3787, -4.9670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8580, device='cuda:0', dtype=torch.float64)
tensor([-4.0189, -4.3748, -4.5787, -5.4696, -4.9957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7596, device='cuda:0', dtype=torch.float64)
tensor([-4.0712, -4.4006, -4.6849, -5.5725, -5.0348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0284, device='cuda:0', dtype=torch.float64)
tensor([-4.1104, -4.4252, -4.8148, -5.6909, -5.0546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0493, device='cuda:0', dtype=torch.float64)
tensor([-4.1384, -4.4363, -4.9530, -5.7670, -5.0680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0828, device='cuda:0', dtype=torch.float64)
tensor([-4.1836, -4.4508, -5.1746, -5.8540, -5.0785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8081, device='cuda:0', dtype=torch.float64)
tensor([-4.2351, -4.4734, -5.4713, -5.9524, -5.1009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1293, device='cuda:0', dtype=torch.float64)
tensor([-4.2891, -4.4998, -5.7301, -6.0314, -5.1210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7874, device='cuda:0', dtype=torch.float64)
tensor([-4.3454, -4.5322, -5.8729, -6.0695, -5.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8937, device='cuda:0', dtype=torch.float64)
tensor([-4.4064, -4.5633, -5.9420, -6.1432, -5.1971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9089, device='cuda:0', dtype=torch.float64)
tensor([-4.4703, -4.6134, -5.9475, -6.2394, -5.2813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0909, device='cuda:0', dtype=torch.float64)
tensor([-4.5349, -4.6782, -5.9490, -6.3717, -5.3884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0067, device='cuda:0', dtype=torch.float64)
tensor([-4.6192, -4.7636, -6.0501, -6.6039, -5.6094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9888, device='cuda:0', dtype=torch.float64)
tensor([-4.7145, -4.8633, -6.1943, -6.8972, -5.9055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8761, device='cuda:0', dtype=torch.float64)
tensor([-4.8094, -4.9836, -6.3708, -7.2494, -6.2614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0633, device='cuda:0', dtype=torch.float64)
tensor([-4.9051, -5.0955, -6.5600, -7.5829, -6.7038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9680, device='cuda:0', dtype=torch.float64)
tensor([-5.0073, -5.2275, -6.8215, -7.9156, -7.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0112, device='cuda:0', dtype=torch.float64)
tensor([-5.1143, -5.3847, -7.0750, -8.2626, -7.5057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9910, device='cuda:0', dtype=torch.float64)
tensor([-5.2209, -5.5681, -7.3182, -8.7849, -8.0678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7627, device='cuda:0', dtype=torch.float64)
tensor([-5.3157, -5.7687, -7.5637, -9.5541, -8.8674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1318, device='cuda:0', dtype=torch.float64)
tensor([ -5.4259,  -5.9545,  -7.7476, -10.1886,  -9.6886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0592, device='cuda:0', dtype=torch.float64)
tensor([ -5.5256,  -6.1204,  -7.8954, -10.7639, -10.3497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8108, device='cuda:0', dtype=torch.float64)
tensor([ -5.6505,  -6.3606,  -8.0921, -11.6208, -11.5603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8420, device='cuda:0', dtype=torch.float64)
tensor([ -5.7550,  -6.6159,  -8.2510, -12.5480, -12.7125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2472, device='cuda:0', dtype=torch.float64)
tensor([ -5.8458,  -6.9692,  -8.4898, -13.6023, -13.9586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7572, device='cuda:0', dtype=torch.float64)
tensor([ -5.9335,  -7.4275,  -8.7079, -14.8293, -15.2582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0335, device='cuda:0', dtype=torch.float64)
tensor([ -6.0475,  -7.9549,  -8.9280, -16.0275, -16.6040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8049, device='cuda:0', dtype=torch.float64)
tensor([ -6.1461,  -8.3162,  -9.2825, -16.8813, -17.4490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9511, device='cuda:0', dtype=torch.float64)
tensor([ -6.1884,  -8.8182,  -9.6463, -18.1182, -18.4709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7162, device='cuda:0', dtype=torch.float64)
tensor([ -6.2446,  -9.2686, -10.0707, -19.2188, -19.3455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9497, device='cuda:0', dtype=torch.float64)
tensor([ -6.2977,  -9.5257, -10.4165, -19.8231, -19.7516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0257, device='cuda:0', dtype=torch.float64)
tensor([ -6.3405,  -9.9077, -10.7500, -20.5883, -20.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8445, device='cuda:0', dtype=torch.float64)
tensor([ -6.3806, -10.2644, -10.9890, -20.9924, -20.4636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9169, device='cuda:0', dtype=torch.float64)
tensor([ -6.4629, -10.6737, -11.1364, -21.4962, -20.7153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8383, device='cuda:0', dtype=torch.float64)
tensor([ -6.5323, -11.2380, -11.5347, -22.2283, -21.0630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8540, device='cuda:0', dtype=torch.float64)
tensor([ -6.6514, -11.7640, -11.9519, -22.7613, -21.4545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0554, device='cuda:0', dtype=torch.float64)
tensor([ -6.7060, -12.1324, -12.3997, -23.1204, -21.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8065, device='cuda:0', dtype=torch.float64)
tensor([ -6.7497, -12.3377, -12.9974, -23.1402, -20.9188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9561, device='cuda:0', dtype=torch.float64)
tensor([ -6.7607, -12.4211, -13.4154, -22.8686, -20.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0480, device='cuda:0', dtype=torch.float64)
tensor([ -6.7301, -12.7176, -13.8824, -23.1403, -19.8952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0832, device='cuda:0', dtype=torch.float64)
tensor([ -6.7491, -13.1658, -14.4099, -23.8074, -19.9764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9185, device='cuda:0', dtype=torch.float64)
tensor([ -6.7611, -13.6912, -14.9226, -24.7845, -20.1601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1048, device='cuda:0', dtype=torch.float64)
tensor([ -6.8626, -14.2048, -15.4005, -25.5588, -20.3094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0307, device='cuda:0', dtype=torch.float64)
tensor([ -7.0292, -14.6967, -15.9224, -26.2658, -20.6219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9483, device='cuda:0', dtype=torch.float64)
tensor([ -7.2275, -15.1788, -16.5499, -26.9201, -20.9636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7627, device='cuda:0', dtype=torch.float64)
tensor([ -7.3948, -15.6471, -16.9408, -27.7423, -21.4672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9325, device='cuda:0', dtype=torch.float64)
tensor([ -7.6546, -16.3073, -17.4605, -28.5619, -22.0968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9341, device='cuda:0', dtype=torch.float64)
tensor([ -7.9647, -17.0793, -17.8787, -29.2453, -22.8592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([ -8.3132, -17.9132, -18.2845, -29.5932, -23.8208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9616, device='cuda:0', dtype=torch.float64)
tensor([ -8.6967, -18.6159, -18.7362, -29.8382, -25.0504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9162, device='cuda:0', dtype=torch.float64)
tensor([ -9.1161, -19.4452, -19.2688, -29.9805, -26.5657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9234, device='cuda:0', dtype=torch.float64)
tensor([ -9.4898, -20.2519, -19.7569, -30.1590, -28.1832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9950, device='cuda:0', dtype=torch.float64)
tensor([ -9.7470, -20.8609, -20.1515, -29.9747, -30.0692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9513, device='cuda:0', dtype=torch.float64)
tensor([-10.0226, -21.1994, -20.5777, -29.7307, -31.8700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9463, device='cuda:0', dtype=torch.float64)
tensor([-10.2482, -21.4852, -21.1290, -29.8438, -33.4767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9665, device='cuda:0', dtype=torch.float64)
tensor([-10.4629, -21.7222, -21.6759, -29.9520, -34.8837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9322, device='cuda:0', dtype=torch.float64)
tensor([-10.5298, -22.1256, -22.0633, -30.4082, -35.9083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8415, device='cuda:0', dtype=torch.float64)
tensor([-10.5928, -22.4330, -22.3831, -30.6174, -36.5445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0996, device='cuda:0', dtype=torch.float64)
tensor([-10.6527, -22.6550, -22.5564, -31.1029, -37.0493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8712, device='cuda:0', dtype=torch.float64)
tensor([-10.7065, -22.8556, -22.8230, -31.5374, -37.4859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9195, device='cuda:0', dtype=torch.float64)
tensor([-10.8170, -22.9828, -23.2591, -31.8092, -37.9020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0284, device='cuda:0', dtype=torch.float64)
tensor([-10.9307, -22.8087, -23.4155, -32.0399, -37.4469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8841, device='cuda:0', dtype=torch.float64)
tensor([-11.0944, -22.9058, -23.9163, -32.5423, -37.4477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8627, device='cuda:0', dtype=torch.float64)
tensor([-11.2141, -22.7416, -24.2965, -32.8894, -37.0575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9756, device='cuda:0', dtype=torch.float64)
tensor([-11.3520, -22.5830, -24.6465, -32.9418, -36.6272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8290, device='cuda:0', dtype=torch.float64)
tensor([-11.4481, -22.3034, -24.8381, -32.6648, -36.2098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1045, device='cuda:0', dtype=torch.float64)
tensor([-11.3893, -21.8669, -24.9608, -32.5047, -35.4204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9295, device='cuda:0', dtype=torch.float64)
tensor([-11.3180, -21.5131, -24.9198, -32.2353, -34.7106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9703, device='cuda:0', dtype=torch.float64)
tensor([-11.1937, -21.1815, -25.0406, -31.9426, -33.9462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9919, device='cuda:0', dtype=torch.float64)
tensor([-11.0592, -20.9500, -25.2259, -32.0102, -33.4403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0211, device='cuda:0', dtype=torch.float64)
tensor([-10.9641, -20.4222, -25.2411, -31.6944, -33.0375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0805, device='cuda:0', dtype=torch.float64)
tensor([-10.7128, -19.6893, -25.0786, -30.6195, -32.0452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9442, device='cuda:0', dtype=torch.float64)
tensor([-10.6478, -18.9631, -25.2163, -29.7443, -31.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8774, device='cuda:0', dtype=torch.float64)
tensor([-10.6706, -18.5011, -25.2619, -29.0829, -30.6061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9191, device='cuda:0', dtype=torch.float64)
tensor([-10.6650, -18.2172, -25.4816, -28.5328, -30.0989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9246, device='cuda:0', dtype=torch.float64)
tensor([-10.5978, -17.7286, -25.5394, -28.1421, -29.7501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1433, device='cuda:0', dtype=torch.float64)
tensor([-10.6388, -17.2065, -25.7446, -27.6848, -29.6934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0255, device='cuda:0', dtype=torch.float64)
tensor([-10.7741, -16.6164, -26.1278, -27.0929, -29.8487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9274, device='cuda:0', dtype=torch.float64)
tensor([-10.9367, -16.1369, -26.6671, -26.2174, -30.1572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9604, device='cuda:0', dtype=torch.float64)
tensor([-11.0872, -15.5965, -26.9365, -25.3996, -30.1813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7981, device='cuda:0', dtype=torch.float64)
tensor([-11.2235, -15.2347, -27.2332, -24.8608, -30.3786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2635, device='cuda:0', dtype=torch.float64)
tensor([-11.3854, -15.2294, -27.3903, -24.6893, -30.9080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([-11.5926, -15.3442, -27.7686, -24.1579, -31.3163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9975, device='cuda:0', dtype=torch.float64)
tensor([-11.6865, -15.5496, -28.0353, -23.8416, -31.5473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9541, device='cuda:0', dtype=torch.float64)
tensor([-11.8635, -15.6009, -28.1987, -23.1377, -31.7106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0529, device='cuda:0', dtype=torch.float64)
tensor([-12.0866, -15.7687, -28.6264, -22.4254, -31.8999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9084, device='cuda:0', dtype=torch.float64)
tensor([-12.2076, -16.1343, -28.8408, -21.9715, -32.1355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0546, device='cuda:0', dtype=torch.float64)
tensor([-12.3672, -16.4287, -29.1730, -21.4118, -32.4478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([-12.3563, -16.8318, -29.4441, -21.1457, -32.7945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0695, device='cuda:0', dtype=torch.float64)
tensor([-12.2869, -17.2195, -29.7759, -20.9545, -33.2467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9789, device='cuda:0', dtype=torch.float64)
tensor([-12.0212, -17.4694, -29.8505, -20.8291, -33.1526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9894, device='cuda:0', dtype=torch.float64)
tensor([-11.8069, -17.8054, -30.3406, -20.7901, -32.7381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9016, device='cuda:0', dtype=torch.float64)
tensor([-11.5662, -17.9259, -30.6150, -20.9963, -32.3206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0448, device='cuda:0', dtype=torch.float64)
tensor([-11.3140, -17.9495, -30.4085, -21.1481, -32.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1572, device='cuda:0', dtype=torch.float64)
tensor([-11.1578, -17.9774, -30.4403, -21.4066, -32.4745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2343, device='cuda:0', dtype=torch.float64)
tensor([-10.9429, -18.0312, -30.2465, -21.6695, -32.4239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9292, device='cuda:0', dtype=torch.float64)
tensor([-10.7404, -17.7864, -30.0739, -21.7872, -32.3672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8574, device='cuda:0', dtype=torch.float64)
tensor([-10.5786, -17.1976, -29.7730, -21.9149, -32.2790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0104, device='cuda:0', dtype=torch.float64)
tensor([-10.3701, -16.6193, -29.2017, -22.0815, -32.0835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1488, device='cuda:0', dtype=torch.float64)
tensor([-10.1555, -15.8515, -28.5001, -22.3831, -31.7178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0888, device='cuda:0', dtype=torch.float64)
tensor([-10.1126, -15.3411, -28.1472, -22.8194, -31.9745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8755, device='cuda:0', dtype=torch.float64)
tensor([-10.1190, -14.8948, -27.9961, -23.1821, -32.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9350, device='cuda:0', dtype=torch.float64)
tensor([-10.0842, -14.8176, -27.8888, -23.3871, -32.5968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9702, device='cuda:0', dtype=torch.float64)
tensor([-10.1034, -14.6440, -27.6563, -23.3874, -32.7852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8642, device='cuda:0', dtype=torch.float64)
tensor([-10.1874, -14.5007, -27.4175, -23.1152, -33.0920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8600, device='cuda:0', dtype=torch.float64)
tensor([-10.2347, -14.6749, -27.2102, -22.9586, -33.5076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8968, device='cuda:0', dtype=torch.float64)
tensor([-10.4501, -14.9011, -27.1041, -22.9041, -33.9909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9319, device='cuda:0', dtype=torch.float64)
tensor([-10.6024, -15.2428, -27.0962, -23.2036, -34.5045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0349, device='cuda:0', dtype=torch.float64)
tensor([-10.6569, -15.4038, -26.9688, -23.6060, -34.8602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8625, device='cuda:0', dtype=torch.float64)
tensor([-10.5160, -15.4989, -26.6686, -24.1241, -35.4319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8000, device='cuda:0', dtype=torch.float64)
tensor([-10.3921, -15.7820, -26.6378, -24.8102, -36.0782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8864, device='cuda:0', dtype=torch.float64)
tensor([-10.2949, -16.2533, -26.7546, -25.3996, -36.6966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8977, device='cuda:0', dtype=torch.float64)
tensor([-10.2818, -16.9161, -26.9653, -26.1511, -37.4403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0182, device='cuda:0', dtype=torch.float64)
tensor([-10.4331, -17.4999, -27.1260, -26.5634, -38.1737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9735, device='cuda:0', dtype=torch.float64)
tensor([-10.6694, -18.2235, -27.3140, -27.0366, -39.0016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9758, device='cuda:0', dtype=torch.float64)
tensor([-10.8730, -19.1055, -27.4449, -27.6416, -39.9578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9279, device='cuda:0', dtype=torch.float64)
tensor([-11.1312, -19.8384, -27.6353, -27.9367, -40.7182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8644, device='cuda:0', dtype=torch.float64)
tensor([-11.4375, -20.2387, -27.8680, -28.1251, -41.3068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0405, device='cuda:0', dtype=torch.float64)
tensor([-11.6236, -20.3650, -27.8493, -28.3256, -41.4525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9958, device='cuda:0', dtype=torch.float64)
tensor([-11.7483, -20.3267, -27.7737, -28.6408, -41.8996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9789, device='cuda:0', dtype=torch.float64)
tensor([-11.9426, -20.5733, -27.5499, -29.1236, -42.5576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9856, device='cuda:0', dtype=torch.float64)
tensor([-12.1162, -20.5638, -27.2844, -29.3762, -42.7609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1590, device='cuda:0', dtype=torch.float64)
tensor([-12.4180, -20.0891, -26.8302, -29.3557, -42.9291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8707, device='cuda:0', dtype=torch.float64)
tensor([-12.6521, -19.6514, -26.5459, -28.8569, -43.0509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9830, device='cuda:0', dtype=torch.float64)
tensor([-12.8837, -19.1229, -26.3361, -28.2535, -42.7130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8711, device='cuda:0', dtype=torch.float64)
tensor([-13.1929, -18.5220, -26.2941, -27.5511, -42.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0480, device='cuda:0', dtype=torch.float64)
tensor([-13.6245, -18.2249, -26.2596, -26.6718, -41.9488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9483, device='cuda:0', dtype=torch.float64)
tensor([-14.1133, -18.1506, -26.2823, -25.6375, -41.5861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9561, device='cuda:0', dtype=torch.float64)
tensor([-14.5834, -17.9974, -26.4026, -24.9725, -41.5104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0226, device='cuda:0', dtype=torch.float64)
tensor([-15.0906, -17.8345, -26.6461, -24.0982, -41.1763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0587, device='cuda:0', dtype=torch.float64)
tensor([-15.7334, -18.0833, -27.2874, -22.8294, -41.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7736, device='cuda:0', dtype=torch.float64)
tensor([-16.4152, -18.2637, -27.6714, -21.8352, -41.3591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9810, device='cuda:0', dtype=torch.float64)
tensor([-17.1080, -18.9602, -28.1410, -21.2129, -41.8953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0295, device='cuda:0', dtype=torch.float64)
tensor([-17.9379, -19.9592, -28.7605, -20.8567, -43.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7919, device='cuda:0', dtype=torch.float64)
tensor([-18.6274, -20.9099, -29.3660, -20.5733, -44.1960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-19.3413, -21.7346, -29.7105, -20.1564, -44.7655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8911, device='cuda:0', dtype=torch.float64)
tensor([-19.9069, -22.0092, -29.9444, -20.0629, -45.2450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0413, device='cuda:0', dtype=torch.float64)
tensor([-20.3818, -22.6360, -30.4566, -20.1507, -45.6855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7194, device='cuda:0', dtype=torch.float64)
tensor([-20.7122, -23.4870, -31.0981, -20.1318, -46.3260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8875, device='cuda:0', dtype=torch.float64)
tensor([-20.9350, -23.6690, -31.4350, -20.2419, -46.7082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8306, device='cuda:0', dtype=torch.float64)
tensor([-21.0943, -23.5433, -31.7350, -20.6482, -46.7932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0588, device='cuda:0', dtype=torch.float64)
tensor([-21.2913, -23.5456, -32.3046, -21.1846, -47.0996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9292, device='cuda:0', dtype=torch.float64)
tensor([-21.5572, -23.6037, -32.8551, -21.9190, -47.5591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9838, device='cuda:0', dtype=torch.float64)
tensor([-21.7578, -23.4552, -33.0938, -22.6512, -47.6036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8673, device='cuda:0', dtype=torch.float64)
tensor([-21.8643, -23.2678, -33.2623, -23.3143, -47.8426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0207, device='cuda:0', dtype=torch.float64)
tensor([-22.2191, -23.3306, -33.5722, -24.3523, -48.6116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9392, device='cuda:0', dtype=torch.float64)
tensor([-22.5353, -23.6124, -33.9926, -25.3543, -49.5962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9378, device='cuda:0', dtype=torch.float64)
tensor([-22.9954, -23.8216, -34.2728, -26.1296, -50.3394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7387, device='cuda:0', dtype=torch.float64)
tensor([-23.2121, -23.6231, -34.3472, -26.4748, -50.6937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9156, device='cuda:0', dtype=torch.float64)
tensor([-23.2118, -23.2463, -34.4905, -26.9346, -51.2034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7812, device='cuda:0', dtype=torch.float64)
tensor([-23.1148, -22.8137, -34.7039, -27.4589, -51.8951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0100, device='cuda:0', dtype=torch.float64)
tensor([-22.8218, -22.0229, -34.6357, -27.8505, -52.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8980, device='cuda:0', dtype=torch.float64)
tensor([-22.7277, -21.6604, -34.7724, -28.0433, -52.9444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8989, device='cuda:0', dtype=torch.float64)
tensor([-22.6679, -21.6371, -35.2761, -28.4898, -53.9889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9461, device='cuda:0', dtype=torch.float64)
tensor([-22.3332, -21.3661, -35.6322, -28.7346, -54.4849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0482, device='cuda:0', dtype=torch.float64)
tensor([-21.9414, -20.9244, -35.6734, -28.8891, -54.8269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9322, device='cuda:0', dtype=torch.float64)
tensor([-21.7488, -20.8702, -35.9205, -28.8735, -55.0607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8000, device='cuda:0', dtype=torch.float64)
tensor([-21.5759, -20.8470, -36.1923, -29.0512, -55.0047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8121, device='cuda:0', dtype=torch.float64)
tensor([-21.4901, -21.0660, -36.6823, -29.2157, -55.0000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8123, device='cuda:0', dtype=torch.float64)
tensor([-21.3674, -21.0887, -37.2483, -29.5073, -54.9671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9442, device='cuda:0', dtype=torch.float64)
tensor([-21.1878, -20.9264, -37.2608, -29.7857, -54.7476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9932, device='cuda:0', dtype=torch.float64)
tensor([-21.0742, -20.6712, -37.3664, -30.7318, -54.7849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8302, device='cuda:0', dtype=torch.float64)
tensor([-20.9466, -19.9641, -37.3596, -31.2661, -54.9923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9136, device='cuda:0', dtype=torch.float64)
tensor([-20.8565, -19.7972, -37.6230, -31.9502, -55.4703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1019, device='cuda:0', dtype=torch.float64)
tensor([-20.9131, -19.9343, -38.2531, -33.0742, -56.1289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8462, device='cuda:0', dtype=torch.float64)
tensor([-20.9687, -20.3779, -39.1155, -34.2275, -57.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8095, device='cuda:0', dtype=torch.float64)
tensor([-21.1768, -20.7888, -40.2239, -35.2193, -58.2206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8524, device='cuda:0', dtype=torch.float64)
tensor([-21.2308, -21.3712, -41.2291, -35.9500, -58.8882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6692, device='cuda:0', dtype=torch.float64)
tensor([-21.3494, -22.0533, -42.1019, -36.8044, -59.6210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8162, device='cuda:0', dtype=torch.float64)
tensor([-21.4320, -22.2594, -42.6244, -37.9521, -60.2268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9892, device='cuda:0', dtype=torch.float64)
tensor([-21.4904, -22.3319, -43.0109, -38.7847, -60.7988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8851, device='cuda:0', dtype=torch.float64)
tensor([-21.6117, -22.4531, -43.2492, -39.3923, -61.2800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0503, device='cuda:0', dtype=torch.float64)
tensor([-21.3884, -22.0322, -42.8553, -40.2071, -61.0306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8668, device='cuda:0', dtype=torch.float64)
tensor([-21.2705, -22.0827, -42.6069, -40.8480, -60.9367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9238, device='cuda:0', dtype=torch.float64)
tensor([-21.2373, -22.4876, -42.7167, -41.6302, -61.0055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8288, device='cuda:0', dtype=torch.float64)
tensor([-21.0831, -22.5431, -42.6206, -42.4554, -61.0042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7898, device='cuda:0', dtype=torch.float64)
tensor([-20.8178, -23.1073, -42.4400, -43.1508, -61.2898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7320, device='cuda:0', dtype=torch.float64)
tensor([-20.5611, -23.9112, -42.1106, -43.7284, -61.3622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7593, device='cuda:0', dtype=torch.float64)
tensor([-20.3237, -24.8298, -42.1747, -44.7029, -61.7072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7988, device='cuda:0', dtype=torch.float64)
tensor([-20.0626, -25.8156, -42.4258, -45.3909, -61.9954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8592, device='cuda:0', dtype=torch.float64)
tensor([-19.8550, -27.4688, -42.8245, -46.2491, -62.8434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8631, device='cuda:0', dtype=torch.float64)
tensor([-19.7026, -28.5795, -43.1395, -46.9955, -63.6199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9878, device='cuda:0', dtype=torch.float64)
tensor([-19.6039, -29.2802, -43.3297, -47.4137, -63.8656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8173, device='cuda:0', dtype=torch.float64)
tensor([-19.5677, -29.9929, -43.4136, -47.7910, -63.7140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9145, device='cuda:0', dtype=torch.float64)
tensor([-19.6136, -30.7339, -43.7846, -48.0661, -63.4622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7545, device='cuda:0', dtype=torch.float64)
tensor([-19.5937, -31.5292, -44.1022, -48.0691, -63.4721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0434, device='cuda:0', dtype=torch.float64)
tensor([-19.7156, -32.6001, -44.7813, -47.5280, -63.7073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0079, device='cuda:0', dtype=torch.float64)
tensor([-19.6172, -33.5118, -44.8908, -46.7959, -63.6654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8890, device='cuda:0', dtype=torch.float64)
tensor([-19.3940, -33.9522, -44.9313, -46.1650, -63.2681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8132, device='cuda:0', dtype=torch.float64)
tensor([-19.2443, -34.6314, -45.1110, -45.6980, -63.4563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8127, device='cuda:0', dtype=torch.float64)
tensor([-18.7985, -34.6748, -44.9798, -45.3697, -63.1287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8961, device='cuda:0', dtype=torch.float64)
tensor([-18.3427, -34.9453, -44.8625, -44.9231, -63.2185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9335, device='cuda:0', dtype=torch.float64)
tensor([-17.9346, -35.5656, -44.9844, -44.5439, -63.5774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0469, device='cuda:0', dtype=torch.float64)
tensor([-17.5879, -35.7452, -44.9154, -44.4726, -64.2619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9488, device='cuda:0', dtype=torch.float64)
tensor([-17.2098, -36.1988, -44.6640, -44.9057, -64.7307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9556, device='cuda:0', dtype=torch.float64)
tensor([-16.9029, -36.4400, -44.1092, -45.2300, -65.2900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9877, device='cuda:0', dtype=torch.float64)
tensor([-16.6532, -36.3167, -43.8706, -45.8509, -65.8746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8450, device='cuda:0', dtype=torch.float64)
tensor([-16.5858, -36.3872, -43.8765, -46.3979, -66.5717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0273, device='cuda:0', dtype=torch.float64)
tensor([-16.6438, -36.9876, -44.2554, -46.9132, -67.6491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8795, device='cuda:0', dtype=torch.float64)
tensor([-16.5517, -36.9871, -44.3231, -47.5729, -67.9129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8872, device='cuda:0', dtype=torch.float64)
tensor([-16.5053, -37.5749, -44.5656, -47.8791, -68.4358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9016, device='cuda:0', dtype=torch.float64)
tensor([-16.3528, -37.8823, -44.3582, -48.3818, -68.7479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8392, device='cuda:0', dtype=torch.float64)
tensor([-16.3091, -38.3566, -44.2165, -48.6042, -69.0070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7282, device='cuda:0', dtype=torch.float64)
tensor([-16.2772, -38.8173, -44.2157, -48.9361, -69.6017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7788, device='cuda:0', dtype=torch.float64)
tensor([-16.3228, -39.2618, -44.3033, -49.1636, -69.9179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7745, device='cuda:0', dtype=torch.float64)
tensor([-16.2907, -38.9855, -44.1861, -48.9711, -69.6652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7818, device='cuda:0', dtype=torch.float64)
tensor([-16.3973, -38.8600, -44.2008, -48.8296, -69.5509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8053, device='cuda:0', dtype=torch.float64)
tensor([-16.5825, -38.8666, -44.4114, -48.6318, -69.7157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9322, device='cuda:0', dtype=torch.float64)
tensor([-16.8644, -39.3921, -44.7722, -48.1205, -69.5000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-17.1299, -40.1437, -44.9767, -48.1243, -69.8484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7419, device='cuda:0', dtype=torch.float64)
tensor([-17.2810, -40.4890, -45.0931, -48.4455, -70.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([-17.4819, -40.1143, -44.9917, -48.6686, -69.4773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8555, device='cuda:0', dtype=torch.float64)
tensor([-17.7216, -40.0978, -45.0344, -48.6463, -69.0285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8022, device='cuda:0', dtype=torch.float64)
tensor([-18.1171, -40.4644, -45.3485, -48.4733, -68.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7190, device='cuda:0', dtype=torch.float64)
tensor([-18.3955, -40.6758, -45.4009, -48.6898, -67.7406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7675, device='cuda:0', dtype=torch.float64)
tensor([-18.7564, -41.2067, -45.4804, -48.7123, -67.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9543, device='cuda:0', dtype=torch.float64)
tensor([-19.1809, -42.2476, -45.8359, -48.7447, -67.4215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8889, device='cuda:0', dtype=torch.float64)
tensor([-19.4544, -43.9545, -46.2007, -48.4872, -67.7300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8014, device='cuda:0', dtype=torch.float64)
tensor([-19.6772, -45.0358, -46.5245, -47.7161, -67.4349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0156, device='cuda:0', dtype=torch.float64)
tensor([-19.8401, -46.2222, -46.9950, -47.2677, -67.4268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7806, device='cuda:0', dtype=torch.float64)
tensor([-19.9652, -47.2148, -47.2322, -46.9489, -67.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1782, device='cuda:0', dtype=torch.float64)
tensor([-20.0549, -48.1904, -47.3201, -47.2574, -67.0758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7097, device='cuda:0', dtype=torch.float64)
tensor([-20.1959, -49.4837, -47.5144, -47.5510, -67.2889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0773, device='cuda:0', dtype=torch.float64)
tensor([-20.2879, -50.6157, -47.4981, -47.9795, -67.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8800, device='cuda:0', dtype=torch.float64)
tensor([-20.2409, -51.6707, -47.5845, -48.6233, -67.3515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0829, device='cuda:0', dtype=torch.float64)
tensor([-20.2862, -52.2455, -47.7334, -49.2678, -66.7971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9140, device='cuda:0', dtype=torch.float64)
tensor([-20.4789, -53.2009, -48.1279, -50.2490, -66.8472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8154, device='cuda:0', dtype=torch.float64)
tensor([-20.4940, -53.9819, -48.3048, -51.1646, -67.3129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9769, device='cuda:0', dtype=torch.float64)
tensor([-20.4159, -54.7628, -48.3552, -51.7376, -67.7543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9101, device='cuda:0', dtype=torch.float64)
tensor([-20.4135, -55.4887, -48.2064, -52.6148, -68.4826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8456, device='cuda:0', dtype=torch.float64)
tensor([-20.2334, -55.8378, -47.9181, -53.3133, -69.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8637, device='cuda:0', dtype=torch.float64)
tensor([-20.0370, -56.3110, -47.6711, -53.7882, -70.2024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7640, device='cuda:0', dtype=torch.float64)
tensor([-19.8966, -56.6449, -47.5885, -53.9656, -70.9520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7349, device='cuda:0', dtype=torch.float64)
tensor([-19.7323, -56.8317, -47.5606, -53.8731, -71.4687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8148, device='cuda:0', dtype=torch.float64)
tensor([-19.7219, -57.4349, -47.7409, -53.4536, -71.9489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6211, device='cuda:0', dtype=torch.float64)
tensor([-19.7371, -58.2482, -47.9971, -53.3116, -72.4147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8123, device='cuda:0', dtype=torch.float64)
tensor([-19.8529, -59.0788, -48.5658, -52.7938, -72.9861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8897, device='cuda:0', dtype=torch.float64)
tensor([-20.0010, -60.1170, -49.5701, -52.1800, -73.5935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8609, device='cuda:0', dtype=torch.float64)
tensor([-20.2077, -61.9043, -50.6986, -52.0104, -74.6149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7947, device='cuda:0', dtype=torch.float64)
tensor([-20.4309, -62.8451, -51.6513, -51.9588, -75.2728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7007, device='cuda:0', dtype=torch.float64)
tensor([-20.5505, -63.5531, -52.4091, -51.9311, -75.3880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8128, device='cuda:0', dtype=torch.float64)
tensor([-20.7897, -64.0873, -53.1850, -51.5063, -75.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7860, device='cuda:0', dtype=torch.float64)
tensor([-21.0141, -64.0952, -53.7112, -51.4115, -75.0241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8600, device='cuda:0', dtype=torch.float64)
tensor([-21.2337, -64.2964, -54.1050, -51.2637, -74.9888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8683, device='cuda:0', dtype=torch.float64)
tensor([-21.5289, -65.2836, -54.8421, -51.1259, -75.0859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8233, device='cuda:0', dtype=torch.float64)
tensor([-21.8999, -65.8700, -55.5413, -51.1070, -74.8180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9022, device='cuda:0', dtype=torch.float64)
tensor([-22.1817, -66.5780, -55.9732, -51.4361, -74.4244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8484, device='cuda:0', dtype=torch.float64)
tensor([-22.3772, -67.5216, -56.1473, -51.9629, -74.3939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6619, device='cuda:0', dtype=torch.float64)
tensor([-22.4677, -68.1429, -56.2792, -52.2631, -74.2994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7600, device='cuda:0', dtype=torch.float64)
tensor([-22.6241, -68.6744, -56.6936, -52.2252, -73.8452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7762, device='cuda:0', dtype=torch.float64)
tensor([-22.8002, -69.1402, -57.3305, -52.4492, -73.4420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7478, device='cuda:0', dtype=torch.float64)
tensor([-22.9166, -69.2446, -58.1285, -52.9289, -73.4427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7073, device='cuda:0', dtype=torch.float64)
tensor([-22.9535, -69.0629, -58.9170, -53.6904, -73.4578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9724, device='cuda:0', dtype=torch.float64)
tensor([-22.7399, -68.5556, -59.5931, -54.5152, -73.5762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9011, device='cuda:0', dtype=torch.float64)
tensor([-22.6025, -68.3029, -60.2068, -55.3021, -74.0392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7985, device='cuda:0', dtype=torch.float64)
tensor([-22.2531, -67.5598, -60.6041, -56.0369, -74.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8324, device='cuda:0', dtype=torch.float64)
tensor([-21.9282, -66.6157, -60.6696, -56.5069, -73.6730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7641, device='cuda:0', dtype=torch.float64)
tensor([-21.5820, -65.4540, -60.6791, -57.0411, -73.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7833, device='cuda:0', dtype=torch.float64)
tensor([-21.4968, -64.8368, -60.9593, -57.5228, -72.8597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7582, device='cuda:0', dtype=torch.float64)
tensor([-21.3439, -63.8198, -61.1148, -57.6825, -72.4401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7806, device='cuda:0', dtype=torch.float64)
tensor([-21.1684, -62.9864, -61.1789, -57.7666, -71.9872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8110, device='cuda:0', dtype=torch.float64)
tensor([-20.9768, -62.1669, -61.2643, -57.9284, -71.7999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8104, device='cuda:0', dtype=torch.float64)
tensor([-20.7982, -61.0980, -61.0808, -57.9736, -71.1020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7962, device='cuda:0', dtype=torch.float64)
tensor([-20.5272, -60.1336, -60.9147, -58.4479, -70.7183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7148, device='cuda:0', dtype=torch.float64)
tensor([-20.3149, -59.5608, -60.9077, -58.8668, -70.5857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8869, device='cuda:0', dtype=torch.float64)
tensor([-20.0542, -58.9409, -60.6561, -59.0039, -70.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6381, device='cuda:0', dtype=torch.float64)
tensor([-19.8670, -58.4868, -60.4944, -59.0121, -69.7461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8245, device='cuda:0', dtype=torch.float64)
tensor([-19.6752, -58.5167, -60.3107, -58.7747, -69.2714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7370, device='cuda:0', dtype=torch.float64)
tensor([-19.4713, -58.6477, -59.8599, -58.7618, -68.6953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8329, device='cuda:0', dtype=torch.float64)
tensor([-19.3242, -58.2233, -59.1934, -58.2997, -67.8235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7352, device='cuda:0', dtype=torch.float64)
tensor([-19.0751, -57.2695, -58.2993, -57.5136, -66.3848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7947, device='cuda:0', dtype=torch.float64)
tensor([-18.7105, -55.8069, -56.7611, -56.4396, -64.5538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7836, device='cuda:0', dtype=torch.float64)
tensor([-18.3372, -54.7241, -55.4054, -55.8615, -63.2717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9518, device='cuda:0', dtype=torch.float64)
tensor([-18.1145, -54.4540, -54.4465, -54.8985, -62.1235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8321, device='cuda:0', dtype=torch.float64)
tensor([-17.9489, -55.2340, -53.9576, -54.0666, -61.3684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8301, device='cuda:0', dtype=torch.float64)
tensor([-17.7699, -55.9091, -53.4579, -53.3828, -60.8974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8158, device='cuda:0', dtype=torch.float64)
tensor([-17.5789, -57.1842, -53.3055, -53.1063, -60.5324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8958, device='cuda:0', dtype=torch.float64)
tensor([-17.4494, -58.4807, -53.5199, -53.5258, -61.0012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6772, device='cuda:0', dtype=torch.float64)
tensor([-17.2747, -59.5698, -53.6504, -54.1121, -61.1205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8658, device='cuda:0', dtype=torch.float64)
tensor([-17.1424, -60.3332, -53.6910, -53.5531, -60.5570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7358, device='cuda:0', dtype=torch.float64)
tensor([-17.0399, -60.8740, -53.8029, -52.8461, -59.8045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8500, device='cuda:0', dtype=torch.float64)
tensor([-17.0157, -61.6088, -53.9667, -52.2046, -59.3967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9556, device='cuda:0', dtype=torch.float64)
tensor([-17.2205, -62.5853, -54.6936, -51.8286, -59.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8114, device='cuda:0', dtype=torch.float64)
tensor([-17.6817, -64.5541, -55.5566, -51.5457, -59.6271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8641, device='cuda:0', dtype=torch.float64)
tensor([-18.1452, -66.4690, -56.2673, -51.3918, -59.9258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7510, device='cuda:0', dtype=torch.float64)
tensor([-18.6678, -68.5090, -56.9072, -51.6720, -60.3418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8638, device='cuda:0', dtype=torch.float64)
tensor([-19.1862, -70.0582, -57.5051, -51.8167, -60.6845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6731, device='cuda:0', dtype=torch.float64)
tensor([-19.6075, -71.2573, -58.1899, -52.1340, -60.6890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7939, device='cuda:0', dtype=torch.float64)
tensor([-19.9160, -72.6129, -58.9376, -52.5978, -61.0029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6424, device='cuda:0', dtype=torch.float64)
tensor([-20.2131, -74.0614, -59.5337, -53.0172, -61.2089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7528, device='cuda:0', dtype=torch.float64)
tensor([-20.3763, -75.4410, -60.0413, -53.6760, -61.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8458, device='cuda:0', dtype=torch.float64)
tensor([-20.6415, -76.8606, -60.2375, -54.0530, -61.0701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8576, device='cuda:0', dtype=torch.float64)
tensor([-20.8136, -78.0243, -60.1492, -54.3317, -60.7523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8141, device='cuda:0', dtype=torch.float64)
tensor([-20.7783, -79.0055, -60.1044, -55.0785, -60.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8529, device='cuda:0', dtype=torch.float64)
tensor([-20.7983, -79.9867, -60.0881, -55.7916, -60.2880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8690, device='cuda:0', dtype=torch.float64)
tensor([-20.8912, -80.8869, -60.0909, -56.2274, -60.1110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7809, device='cuda:0', dtype=torch.float64)
tensor([-21.1841, -81.9052, -60.0591, -56.4008, -59.8786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9159, device='cuda:0', dtype=torch.float64)
tensor([-21.4384, -82.4020, -60.1876, -56.6421, -59.5320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8429, device='cuda:0', dtype=torch.float64)
tensor([-21.6907, -82.8646, -60.4205, -56.6256, -58.9798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7253, device='cuda:0', dtype=torch.float64)
tensor([-21.8113, -83.2552, -60.6791, -56.6155, -58.4022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8120, device='cuda:0', dtype=torch.float64)
tensor([-21.7956, -83.6531, -60.7901, -56.6113, -58.0247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9033, device='cuda:0', dtype=torch.float64)
tensor([-21.9491, -84.0127, -60.7019, -56.1778, -57.2019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8318, device='cuda:0', dtype=torch.float64)
tensor([-22.1253, -83.8676, -60.7594, -56.2416, -56.5284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6932, device='cuda:0', dtype=torch.float64)
tensor([-22.2907, -83.5423, -60.9527, -56.7695, -56.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7668, device='cuda:0', dtype=torch.float64)
tensor([-22.4554, -83.2814, -60.7536, -57.5451, -55.6686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6965, device='cuda:0', dtype=torch.float64)
tensor([-22.4138, -82.6731, -60.4159, -58.2572, -55.2204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7359, device='cuda:0', dtype=torch.float64)
tensor([-22.3708, -81.9233, -59.9056, -58.4654, -54.7436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8453, device='cuda:0', dtype=torch.float64)
tensor([-22.4136, -81.3213, -59.6542, -58.9667, -54.5262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7200, device='cuda:0', dtype=torch.float64)
tensor([-22.3612, -81.0389, -59.5286, -59.6242, -54.2899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8479, device='cuda:0', dtype=torch.float64)
tensor([-22.3711, -81.3072, -59.5589, -59.8576, -53.9040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7445, device='cuda:0', dtype=torch.float64)
tensor([-22.4071, -82.0020, -59.6239, -60.0823, -54.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8349, device='cuda:0', dtype=torch.float64)
tensor([-22.4364, -82.5081, -59.6443, -60.5296, -54.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7158, device='cuda:0', dtype=torch.float64)
tensor([-22.6444, -82.8059, -59.5860, -60.8648, -53.9162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6631, device='cuda:0', dtype=torch.float64)
tensor([-22.9500, -83.0628, -59.5276, -61.0726, -53.4451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7622, device='cuda:0', dtype=torch.float64)
tensor([-23.2293, -83.5076, -59.8337, -61.6026, -53.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6776, device='cuda:0', dtype=torch.float64)
tensor([-23.5871, -83.5957, -60.1485, -62.3965, -53.1283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8025, device='cuda:0', dtype=torch.float64)
tensor([-23.7959, -83.3553, -60.4656, -63.6210, -53.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7122, device='cuda:0', dtype=torch.float64)
tensor([-24.0366, -82.9074, -60.8094, -65.2806, -53.0094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8140, device='cuda:0', dtype=torch.float64)
tensor([-24.3845, -82.9666, -61.2329, -67.0006, -52.9645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7111, device='cuda:0', dtype=torch.float64)
tensor([-24.6652, -82.7236, -61.7236, -68.8512, -52.8646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7302, device='cuda:0', dtype=torch.float64)
tensor([-24.7615, -82.5740, -61.9261, -70.4697, -52.7105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9103, device='cuda:0', dtype=torch.float64)
tensor([-24.9499, -82.8241, -61.9646, -71.8586, -52.4873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8805, device='cuda:0', dtype=torch.float64)
tensor([-25.1507, -82.2354, -61.7445, -73.1807, -51.6634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6335, device='cuda:0', dtype=torch.float64)
tensor([-25.2655, -81.7551, -61.3619, -74.8093, -51.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6303, device='cuda:0', dtype=torch.float64)
tensor([-25.3536, -81.3004, -61.1600, -76.1737, -50.4819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7232, device='cuda:0', dtype=torch.float64)
tensor([-25.4501, -80.8834, -61.0069, -77.8936, -50.0283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9630, device='cuda:0', dtype=torch.float64)
tensor([-25.6876, -80.1736, -60.4269, -78.8261, -49.6555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6269, device='cuda:0', dtype=torch.float64)
tensor([-25.8464, -79.3770, -59.9210, -79.9866, -49.3476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7572, device='cuda:0', dtype=torch.float64)
tensor([-26.0163, -79.0922, -59.4247, -80.4540, -49.2238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6740, device='cuda:0', dtype=torch.float64)
tensor([-26.1312, -78.8146, -58.9295, -80.8931, -49.2334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7293, device='cuda:0', dtype=torch.float64)
tensor([-26.3268, -78.6584, -58.4084, -81.1416, -49.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7550, device='cuda:0', dtype=torch.float64)
tensor([-26.6331, -78.6464, -57.6674, -81.0822, -48.8368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7487, device='cuda:0', dtype=torch.float64)
tensor([-26.7356, -78.7595, -56.7220, -80.8311, -48.3428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7280, device='cuda:0', dtype=torch.float64)
tensor([-26.9788, -78.8733, -56.1679, -80.3983, -47.9065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-27.2952, -78.8567, -55.5768, -80.2719, -47.4517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7103, device='cuda:0', dtype=torch.float64)
tensor([-27.4481, -78.6432, -54.8608, -80.3486, -47.0987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7108, device='cuda:0', dtype=torch.float64)
tensor([-27.5721, -78.4102, -54.2202, -79.9563, -46.7845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7937, device='cuda:0', dtype=torch.float64)
tensor([-27.7473, -78.2581, -53.5238, -79.6193, -46.7748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6544, device='cuda:0', dtype=torch.float64)
tensor([-27.9134, -78.0913, -52.9754, -79.8591, -46.8311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7449, device='cuda:0', dtype=torch.float64)
tensor([-28.0012, -78.0371, -52.4931, -80.0915, -46.9270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6392, device='cuda:0', dtype=torch.float64)
tensor([-27.9535, -77.9839, -52.0548, -80.4048, -46.9793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6953, device='cuda:0', dtype=torch.float64)
tensor([-27.9011, -78.0990, -51.9211, -81.0908, -47.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7933, device='cuda:0', dtype=torch.float64)
tensor([-27.8575, -78.4112, -51.5564, -81.9355, -47.5249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7361, device='cuda:0', dtype=torch.float64)
tensor([-27.8258, -78.2126, -50.9501, -82.3743, -47.7429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7188, device='cuda:0', dtype=torch.float64)
tensor([-27.8691, -77.9951, -50.6830, -82.3998, -47.8116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6546, device='cuda:0', dtype=torch.float64)
tensor([-27.9307, -77.7494, -50.4441, -82.1846, -47.8081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6249, device='cuda:0', dtype=torch.float64)
tensor([-28.0345, -77.7263, -50.3086, -82.1266, -47.9595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6398, device='cuda:0', dtype=torch.float64)
tensor([-28.1054, -77.6104, -50.0986, -82.3564, -48.1012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7222, device='cuda:0', dtype=torch.float64)
tensor([-28.1311, -76.8446, -49.5662, -81.6789, -47.6219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7587, device='cuda:0', dtype=torch.float64)
tensor([-28.2253, -76.0711, -48.9372, -80.8950, -47.3062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7491, device='cuda:0', dtype=torch.float64)
tensor([-28.4556, -75.1679, -48.3781, -79.4967, -46.9426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7941, device='cuda:0', dtype=torch.float64)
tensor([-28.6603, -74.6813, -47.9351, -78.2140, -46.6857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7302, device='cuda:0', dtype=torch.float64)
tensor([-28.5712, -74.0603, -47.4901, -77.0101, -46.5888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8416, device='cuda:0', dtype=torch.float64)
tensor([-28.6064, -73.4958, -47.3865, -76.3324, -46.7088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7873, device='cuda:0', dtype=torch.float64)
tensor([-28.5143, -72.6075, -47.4148, -75.6353, -46.5624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7508, device='cuda:0', dtype=torch.float64)
tensor([-28.3825, -71.1955, -47.2985, -74.8782, -46.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7321, device='cuda:0', dtype=torch.float64)
tensor([-28.1526, -69.8806, -47.2073, -74.1312, -45.5041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7505, device='cuda:0', dtype=torch.float64)
tensor([-28.0367, -68.6808, -47.2746, -73.3813, -44.7931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7270, device='cuda:0', dtype=torch.float64)
tensor([-27.8446, -67.4216, -47.6804, -73.1356, -44.3243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7441, device='cuda:0', dtype=torch.float64)
tensor([-27.6929, -66.0850, -47.8230, -72.3015, -43.6501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6480, device='cuda:0', dtype=torch.float64)
tensor([-27.5601, -64.4807, -48.0020, -71.8634, -42.9277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6846, device='cuda:0', dtype=torch.float64)
tensor([-27.3487, -63.3452, -48.2786, -71.2625, -42.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7256, device='cuda:0', dtype=torch.float64)
tensor([-27.3111, -62.5806, -48.6483, -70.7308, -42.0471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7668, device='cuda:0', dtype=torch.float64)
tensor([-27.3672, -62.1616, -48.9680, -69.8742, -41.7873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8209, device='cuda:0', dtype=torch.float64)
tensor([-27.4269, -61.6740, -49.1509, -69.5192, -41.6803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6753, device='cuda:0', dtype=torch.float64)
tensor([-27.4747, -60.9969, -49.2204, -69.5301, -41.7779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6968, device='cuda:0', dtype=torch.float64)
tensor([-27.4731, -60.6972, -49.3079, -69.4427, -42.0966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7564, device='cuda:0', dtype=torch.float64)
tensor([-27.3553, -59.5219, -49.0921, -69.5481, -41.8121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7090, device='cuda:0', dtype=torch.float64)
tensor([-27.2588, -58.4864, -49.0675, -69.8364, -41.7352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6767, device='cuda:0', dtype=torch.float64)
tensor([-27.2640, -57.7890, -49.2853, -70.3983, -41.9023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7444, device='cuda:0', dtype=torch.float64)
tensor([-27.3983, -57.0450, -49.3690, -70.8136, -41.9178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7468, device='cuda:0', dtype=torch.float64)
tensor([-27.4885, -56.6898, -49.5536, -71.3701, -42.2221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7142, device='cuda:0', dtype=torch.float64)
tensor([-27.5391, -56.4991, -49.7127, -71.3739, -42.3652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6485, device='cuda:0', dtype=torch.float64)
tensor([-27.6229, -56.5628, -50.1040, -71.3797, -42.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6296, device='cuda:0', dtype=torch.float64)
tensor([-27.6728, -56.9786, -50.3553, -71.4937, -42.2217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6176, device='cuda:0', dtype=torch.float64)
tensor([-27.8915, -57.4520, -50.3264, -71.7975, -42.0539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6517, device='cuda:0', dtype=torch.float64)
tensor([-28.0931, -57.6469, -49.9928, -71.6339, -41.8376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7494, device='cuda:0', dtype=torch.float64)
tensor([-28.2508, -57.9465, -49.7946, -71.6849, -41.6147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6729, device='cuda:0', dtype=torch.float64)
tensor([-28.4798, -58.2890, -49.6953, -71.9337, -41.6215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6893, device='cuda:0', dtype=torch.float64)
tensor([-28.8402, -58.5902, -49.6689, -72.1677, -41.6080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7401, device='cuda:0', dtype=torch.float64)
tensor([-29.2513, -59.1051, -49.6043, -72.5053, -41.8552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7159, device='cuda:0', dtype=torch.float64)
tensor([-29.5726, -59.4451, -49.3429, -72.4048, -42.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8260, device='cuda:0', dtype=torch.float64)
tensor([-30.0189, -59.9099, -49.1366, -72.6783, -42.6500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7925, device='cuda:0', dtype=torch.float64)
tensor([-30.5173, -60.4375, -49.0749, -72.3500, -43.3338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8079, device='cuda:0', dtype=torch.float64)
tensor([-31.0094, -61.1517, -49.2866, -72.9118, -44.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7023, device='cuda:0', dtype=torch.float64)
tensor([-31.5181, -61.9320, -49.5196, -73.8649, -45.3569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6278, device='cuda:0', dtype=torch.float64)
tensor([-32.0877, -62.6299, -49.7676, -74.9941, -46.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6708, device='cuda:0', dtype=torch.float64)
tensor([-32.6786, -63.3886, -50.0789, -76.1099, -47.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7406, device='cuda:0', dtype=torch.float64)
tensor([-33.2031, -63.7033, -50.3562, -77.6955, -47.6600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9506, device='cuda:0', dtype=torch.float64)
tensor([-33.8947, -64.1937, -50.6185, -79.3128, -48.2609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6947, device='cuda:0', dtype=torch.float64)
tensor([-34.7188, -65.1649, -50.9959, -81.5286, -49.3259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6622, device='cuda:0', dtype=torch.float64)
tensor([-35.3751, -66.0254, -51.2797, -83.5589, -50.5897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8133, device='cuda:0', dtype=torch.float64)
tensor([-36.0160, -66.9414, -51.6422, -85.0561, -51.7629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7529, device='cuda:0', dtype=torch.float64)
tensor([-36.7594, -67.8143, -52.3632, -86.8575, -53.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6890, device='cuda:0', dtype=torch.float64)
tensor([-37.3627, -68.7685, -53.2521, -88.8683, -54.5669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7370, device='cuda:0', dtype=torch.float64)
tensor([-38.0852, -70.0497, -54.4002, -90.5596, -56.2110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6404, device='cuda:0', dtype=torch.float64)
tensor([-38.7898, -71.5722, -55.3999, -92.3471, -57.9862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6901, device='cuda:0', dtype=torch.float64)
tensor([-39.4048, -73.2906, -56.2115, -94.0884, -59.7313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7219, device='cuda:0', dtype=torch.float64)
tensor([-39.8989, -75.0850, -57.0092, -95.5272, -61.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6723, device='cuda:0', dtype=torch.float64)
tensor([-40.4542, -76.5252, -57.6840, -96.5888, -62.3958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7012, device='cuda:0', dtype=torch.float64)
tensor([-40.9354, -77.3741, -58.3160, -97.1055, -63.0836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8355, device='cuda:0', dtype=torch.float64)
tensor([-41.3188, -78.3808, -58.7743, -97.7926, -63.7197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7392, device='cuda:0', dtype=torch.float64)
tensor([-41.4847, -79.2103, -59.2026, -98.4809, -64.0729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6913, device='cuda:0', dtype=torch.float64)
tensor([-41.6504, -80.2214, -59.4534, -98.9067, -64.4251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6738, device='cuda:0', dtype=torch.float64)
tensor([-41.7153, -81.6009, -59.6864, -98.9175, -64.9207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6914, device='cuda:0', dtype=torch.float64)
tensor([-41.8314, -82.6955, -59.9177, -98.6129, -65.3671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6913, device='cuda:0', dtype=torch.float64)
tensor([-41.9578, -83.3010, -59.8665, -98.2651, -65.5176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7058, device='cuda:0', dtype=torch.float64)
tensor([-41.9963, -83.2609, -59.7530, -97.4435, -65.2899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6602, device='cuda:0', dtype=torch.float64)
tensor([-42.0032, -83.5294, -59.7936, -96.7882, -65.4279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7477, device='cuda:0', dtype=torch.float64)
tensor([-41.9615, -83.8987, -59.8147, -96.9806, -65.5772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6534, device='cuda:0', dtype=torch.float64)
tensor([-41.8361, -83.8151, -59.6030, -96.6581, -65.4260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7648, device='cuda:0', dtype=torch.float64)
tensor([-41.7787, -84.0745, -59.3825, -96.1061, -65.6173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7440, device='cuda:0', dtype=torch.float64)
tensor([-41.7621, -84.7889, -59.2527, -95.0756, -66.0598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6766, device='cuda:0', dtype=torch.float64)
tensor([-41.7030, -85.6646, -59.2072, -94.0668, -66.4835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7807, device='cuda:0', dtype=torch.float64)
tensor([-41.5712, -85.8736, -59.3550, -93.1392, -66.6479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6939, device='cuda:0', dtype=torch.float64)
tensor([-41.5848, -85.9036, -59.6089, -92.7073, -66.8964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6109, device='cuda:0', dtype=torch.float64)
tensor([-41.4524, -85.9747, -60.0808, -92.0956, -67.2523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6066, device='cuda:0', dtype=torch.float64)
tensor([-41.3564, -86.1148, -60.6336, -91.3162, -67.6340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7653, device='cuda:0', dtype=torch.float64)
tensor([-41.0697, -86.2299, -60.9997, -90.1854, -67.7346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7543, device='cuda:0', dtype=torch.float64)
tensor([-40.8949, -86.0497, -61.2022, -89.5338, -67.5209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6296, device='cuda:0', dtype=torch.float64)
tensor([-40.6641, -86.2238, -61.6277, -89.0040, -67.5011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6226, device='cuda:0', dtype=torch.float64)
tensor([-40.4939, -86.5751, -62.2655, -88.4943, -67.4794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7001, device='cuda:0', dtype=torch.float64)
tensor([-40.3592, -86.8475, -62.8335, -87.7911, -67.3973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7488, device='cuda:0', dtype=torch.float64)
tensor([-40.0899, -86.4754, -63.5450, -87.6354, -67.1186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6796, device='cuda:0', dtype=torch.float64)
tensor([-39.7721, -86.0172, -64.3748, -87.2650, -66.7989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5226, device='cuda:0', dtype=torch.float64)
tensor([-39.5416, -85.8140, -65.1385, -87.3072, -66.6706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5972, device='cuda:0', dtype=torch.float64)
tensor([-39.3261, -85.6834, -65.6736, -87.1361, -66.5242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5484, device='cuda:0', dtype=torch.float64)
tensor([-39.1441, -85.5726, -66.1212, -86.7626, -66.2568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6572, device='cuda:0', dtype=torch.float64)
tensor([-38.9448, -85.2908, -66.2764, -85.9672, -65.8345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5456, device='cuda:0', dtype=torch.float64)
tensor([-38.8365, -85.2435, -66.1874, -85.1988, -65.4711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6170, device='cuda:0', dtype=torch.float64)
tensor([-38.7357, -84.8237, -65.9442, -84.0463, -64.7403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6472, device='cuda:0', dtype=torch.float64)
tensor([-38.6142, -84.7037, -65.8919, -82.9996, -64.1984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6914, device='cuda:0', dtype=torch.float64)
tensor([-38.3964, -84.2477, -65.6291, -82.3184, -63.4409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6121, device='cuda:0', dtype=torch.float64)
tensor([-38.1668, -83.8131, -65.1240, -81.4347, -62.5134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5483, device='cuda:0', dtype=torch.float64)
tensor([-37.9066, -83.3036, -64.6507, -80.6859, -61.6253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7579, device='cuda:0', dtype=torch.float64)
tensor([-37.5641, -82.5652, -63.9027, -79.5248, -60.4183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6772, device='cuda:0', dtype=torch.float64)
tensor([-37.2114, -81.8526, -63.1974, -78.2700, -59.4399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5382, device='cuda:0', dtype=torch.float64)
tensor([-36.9108, -80.9715, -62.4726, -77.0004, -58.4969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6236, device='cuda:0', dtype=torch.float64)
tensor([-36.6091, -80.0140, -61.8819, -75.5653, -57.5723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6857, device='cuda:0', dtype=torch.float64)
tensor([-36.3035, -78.7981, -61.1960, -74.3066, -56.6329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7069, device='cuda:0', dtype=torch.float64)
tensor([-36.0620, -77.6604, -60.4734, -73.2519, -55.9633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6789, device='cuda:0', dtype=torch.float64)
tensor([-35.8339, -77.2022, -59.8412, -72.1792, -55.7420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5540, device='cuda:0', dtype=torch.float64)
tensor([-35.7283, -76.9756, -59.3550, -71.2087, -55.6604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4793, device='cuda:0', dtype=torch.float64)
tensor([-35.6347, -76.9054, -59.2029, -70.5860, -55.6699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6828, device='cuda:0', dtype=torch.float64)
tensor([-35.4138, -76.3527, -58.5654, -69.6122, -55.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6218, device='cuda:0', dtype=torch.float64)
tensor([-35.2799, -76.1754, -57.9454, -68.9114, -55.2987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5810, device='cuda:0', dtype=torch.float64)
tensor([-35.1090, -76.0427, -57.5396, -68.5212, -55.3587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5908, device='cuda:0', dtype=torch.float64)
tensor([-34.9351, -76.0584, -57.4659, -68.0939, -55.6525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5818, device='cuda:0', dtype=torch.float64)
tensor([-34.8802, -75.7923, -57.2726, -67.5720, -55.7544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6069, device='cuda:0', dtype=torch.float64)
tensor([-34.7489, -75.2859, -57.0489, -66.7369, -55.6301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9144, device='cuda:0', dtype=torch.float64)
tensor([-34.5439, -74.9262, -56.9655, -65.7050, -55.6695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5984, device='cuda:0', dtype=torch.float64)
tensor([-34.3424, -74.3647, -57.0329, -64.7019, -55.4967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4691, device='cuda:0', dtype=torch.float64)
tensor([-34.2553, -74.0159, -57.0330, -63.8481, -55.2779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6364, device='cuda:0', dtype=torch.float64)
tensor([-34.2027, -73.4740, -56.9599, -63.3757, -55.0240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5316, device='cuda:0', dtype=torch.float64)
tensor([-34.0278, -73.0383, -56.8348, -62.9395, -54.7318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7308, device='cuda:0', dtype=torch.float64)
tensor([-33.7704, -73.0690, -56.7979, -62.7340, -54.7600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6754, device='cuda:0', dtype=torch.float64)
tensor([-33.5485, -73.5537, -56.9669, -62.7300, -54.9940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6024, device='cuda:0', dtype=torch.float64)
tensor([-33.3579, -73.8667, -57.0007, -62.7725, -55.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6894, device='cuda:0', dtype=torch.float64)
tensor([-33.4074, -74.4952, -57.1546, -63.2997, -55.9190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5219, device='cuda:0', dtype=torch.float64)
tensor([-33.3165, -75.1289, -57.4131, -63.5699, -56.5957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5371, device='cuda:0', dtype=torch.float64)
tensor([-33.2481, -75.8992, -57.7989, -63.6434, -57.3970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5925, device='cuda:0', dtype=torch.float64)
tensor([-33.1561, -76.9825, -58.1715, -63.5155, -58.4255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6136, device='cuda:0', dtype=torch.float64)
tensor([-33.1650, -77.9857, -58.6150, -63.1808, -59.2560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6030, device='cuda:0', dtype=torch.float64)
tensor([-33.2010, -78.8405, -58.9943, -63.1954, -60.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5468, device='cuda:0', dtype=torch.float64)
tensor([-33.2305, -79.7367, -59.1913, -63.3295, -60.9299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6219, device='cuda:0', dtype=torch.float64)
tensor([-33.2502, -81.0375, -59.3327, -63.8058, -62.2150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5350, device='cuda:0', dtype=torch.float64)
tensor([-33.2285, -82.4818, -59.5559, -63.9002, -63.3574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5277, device='cuda:0', dtype=torch.float64)
tensor([-33.3799, -83.5117, -59.6670, -63.9395, -64.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5186, device='cuda:0', dtype=torch.float64)
tensor([-33.6604, -84.4407, -59.8680, -63.9813, -64.8312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6251, device='cuda:0', dtype=torch.float64)
tensor([-33.9065, -85.3930, -60.0813, -63.9561, -65.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5341, device='cuda:0', dtype=torch.float64)
tensor([-34.1059, -86.4190, -60.1484, -63.7098, -65.6426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7324, device='cuda:0', dtype=torch.float64)
tensor([-34.3026, -88.0440, -60.0123, -63.4909, -66.3752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5151, device='cuda:0', dtype=torch.float64)
tensor([-34.5079, -89.3308, -60.1020, -63.4913, -66.7334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6190, device='cuda:0', dtype=torch.float64)
tensor([-34.6566, -90.2957, -60.2371, -63.1852, -67.0102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6962, device='cuda:0', dtype=torch.float64)
tensor([-34.7834, -91.0429, -60.4560, -63.0240, -67.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6753, device='cuda:0', dtype=torch.float64)
tensor([-34.7549, -91.2049, -60.7333, -62.7247, -66.6550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5559, device='cuda:0', dtype=torch.float64)
tensor([-34.6683, -91.2830, -60.9844, -62.4243, -66.1401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6487, device='cuda:0', dtype=torch.float64)
tensor([-34.5990, -91.2380, -61.0711, -62.3284, -65.5573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6342, device='cuda:0', dtype=torch.float64)
tensor([-34.6999, -91.3623, -61.0292, -62.5324, -65.3050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5387, device='cuda:0', dtype=torch.float64)
tensor([-34.9475, -91.6481, -61.0532, -63.0994, -65.2039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5331, device='cuda:0', dtype=torch.float64)
tensor([-35.1754, -92.0087, -60.9508, -63.7738, -64.9830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5783, device='cuda:0', dtype=torch.float64)
tensor([-35.4351, -92.0304, -60.8345, -64.5943, -64.3874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5137, device='cuda:0', dtype=torch.float64)
tensor([-35.7562, -91.8267, -60.9571, -65.2364, -63.5142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4788, device='cuda:0', dtype=torch.float64)
tensor([-36.1461, -91.7982, -61.0309, -65.7839, -62.7639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5399, device='cuda:0', dtype=torch.float64)
tensor([-36.5872, -91.8582, -61.2265, -66.4693, -62.2076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6294, device='cuda:0', dtype=torch.float64)
tensor([-37.0145, -92.1696, -61.5077, -67.4341, -61.9265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5954, device='cuda:0', dtype=torch.float64)
tensor([-37.4117, -92.3823, -61.6632, -68.1599, -61.7751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4386, device='cuda:0', dtype=torch.float64)
tensor([-37.8355, -92.2991, -61.7945, -68.8112, -61.5713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5465, device='cuda:0', dtype=torch.float64)
tensor([-38.2333, -92.3275, -62.1574, -69.0643, -61.4840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6432, device='cuda:0', dtype=torch.float64)
tensor([-38.5225, -92.0083, -62.4130, -68.9428, -61.4872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7264, device='cuda:0', dtype=torch.float64)
tensor([-38.6724, -91.9214, -62.6907, -68.8530, -61.4978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8064, device='cuda:0', dtype=torch.float64)
tensor([-38.9659, -91.9589, -62.8271, -68.9938, -61.6442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5204, device='cuda:0', dtype=torch.float64)
tensor([-39.2066, -92.1484, -62.9835, -69.1372, -61.9435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6324, device='cuda:0', dtype=torch.float64)
tensor([-39.4618, -92.3373, -62.8408, -69.0850, -61.9683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7040, device='cuda:0', dtype=torch.float64)
tensor([-39.6505, -92.9195, -62.7032, -69.3518, -62.0248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4926, device='cuda:0', dtype=torch.float64)
tensor([-39.9015, -93.6821, -62.6934, -69.4745, -62.1467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6519, device='cuda:0', dtype=torch.float64)
tensor([-40.0844, -94.6087, -62.8212, -69.5115, -62.6017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4710, device='cuda:0', dtype=torch.float64)
tensor([-40.2792, -95.6349, -63.0788, -69.5835, -63.0097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5966, device='cuda:0', dtype=torch.float64)
tensor([-40.5624, -96.7005, -63.1726, -69.5507, -63.3290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5403, device='cuda:0', dtype=torch.float64)
tensor([-40.7303, -97.6636, -63.0859, -69.4584, -63.4832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6405, device='cuda:0', dtype=torch.float64)
tensor([-40.7597, -98.7804, -62.8580, -69.1407, -63.8345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6611, device='cuda:0', dtype=torch.float64)
tensor([-40.8735, -99.5440, -62.8778, -68.5407, -64.0072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6336, device='cuda:0', dtype=torch.float64)
tensor([ -40.8776, -100.2821,  -62.9051,  -67.6181,  -64.2643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5880, device='cuda:0', dtype=torch.float64)
tensor([ -40.8773, -100.6496,  -63.1384,  -66.8712,  -64.5017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6191, device='cuda:0', dtype=torch.float64)
tensor([ -40.6207, -101.1903,  -63.3357,  -65.9967,  -64.8249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5453, device='cuda:0', dtype=torch.float64)
tensor([ -40.6340, -101.8513,  -63.3494,  -65.3803,  -65.0883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4863, device='cuda:0', dtype=torch.float64)
tensor([ -40.5976, -102.5602,  -63.4567,  -64.8894,  -65.5318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6051, device='cuda:0', dtype=torch.float64)
tensor([ -40.8660, -103.3393,  -63.3312,  -64.5302,  -66.1999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5790, device='cuda:0', dtype=torch.float64)
tensor([ -41.0278, -104.2622,  -63.1706,  -63.9442,  -66.8387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5659, device='cuda:0', dtype=torch.float64)
tensor([ -41.1995, -105.2432,  -62.7158,  -63.5664,  -67.5579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5799, device='cuda:0', dtype=torch.float64)
tensor([ -41.4501, -106.0540,  -62.1847,  -63.3178,  -67.8315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5682, device='cuda:0', dtype=torch.float64)
tensor([ -41.7034, -107.0904,  -62.0720,  -63.3278,  -68.2496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7223, device='cuda:0', dtype=torch.float64)
tensor([ -41.9258, -108.2543,  -61.9633,  -63.3147,  -69.1075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5458, device='cuda:0', dtype=torch.float64)
tensor([ -42.1884, -109.2242,  -61.7295,  -63.5839,  -69.6082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5322, device='cuda:0', dtype=torch.float64)
tensor([ -42.5280, -110.2262,  -61.6608,  -63.7450,  -70.3045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6104, device='cuda:0', dtype=torch.float64)
tensor([ -42.7909, -110.6246,  -61.7360,  -63.6444,  -70.8233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4871, device='cuda:0', dtype=torch.float64)
tensor([ -43.0658, -111.1772,  -61.8216,  -63.4750,  -71.5024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5655, device='cuda:0', dtype=torch.float64)
tensor([ -43.1918, -111.5313,  -61.8523,  -63.3586,  -72.2621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6416, device='cuda:0', dtype=torch.float64)
tensor([ -43.3438, -111.7455,  -62.0100,  -63.4706,  -72.8908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5957, device='cuda:0', dtype=torch.float64)
tensor([ -43.4837, -112.0605,  -61.9869,  -63.6783,  -73.4023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4514, device='cuda:0', dtype=torch.float64)
tensor([ -43.6775, -112.6630,  -62.1076,  -64.0732,  -74.2173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4550, device='cuda:0', dtype=torch.float64)
tensor([ -43.7209, -112.9611,  -62.3702,  -64.2595,  -75.0382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5451, device='cuda:0', dtype=torch.float64)
tensor([ -43.7675, -113.1294,  -62.4337,  -64.4972,  -75.6645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5883, device='cuda:0', dtype=torch.float64)
tensor([ -43.7263, -113.2605,  -62.4281,  -64.7748,  -76.1239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5371, device='cuda:0', dtype=torch.float64)
tensor([ -43.7072, -113.0024,  -62.4782,  -65.2274,  -76.6284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5123, device='cuda:0', dtype=torch.float64)
tensor([ -43.7184, -113.1498,  -62.3068,  -65.5088,  -77.2515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4870, device='cuda:0', dtype=torch.float64)
tensor([ -43.6887, -112.8864,  -62.0167,  -65.8180,  -77.4643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4811, device='cuda:0', dtype=torch.float64)
tensor([ -43.6532, -112.4501,  -61.7512,  -65.8739,  -77.4941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6669, device='cuda:0', dtype=torch.float64)
tensor([ -43.4037, -111.9415,  -61.5360,  -65.5594,  -77.3772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6167, device='cuda:0', dtype=torch.float64)
tensor([ -43.3129, -112.1783,  -61.3502,  -65.1350,  -77.3176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5199, device='cuda:0', dtype=torch.float64)
tensor([ -43.1732, -112.6740,  -61.1035,  -64.6842,  -77.4307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6090, device='cuda:0', dtype=torch.float64)
tensor([ -42.9800, -112.9688,  -60.8686,  -64.4289,  -77.5631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5946, device='cuda:0', dtype=torch.float64)
tensor([ -42.7839, -113.6371,  -60.9344,  -64.1451,  -78.2680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6660, device='cuda:0', dtype=torch.float64)
tensor([ -42.4337, -114.3804,  -61.0864,  -64.0000,  -79.0923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5729, device='cuda:0', dtype=torch.float64)
tensor([ -42.3266, -115.0744,  -61.1101,  -64.1103,  -79.8124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4722, device='cuda:0', dtype=torch.float64)
tensor([ -42.2991, -115.7312,  -61.0691,  -64.1278,  -80.4278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5592, device='cuda:0', dtype=torch.float64)
tensor([ -42.2641, -115.9904,  -60.9757,  -64.0082,  -80.7223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4507, device='cuda:0', dtype=torch.float64)
tensor([ -42.1656, -115.9566,  -60.8878,  -63.6681,  -80.7296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6108, device='cuda:0', dtype=torch.float64)
tensor([ -42.2976, -116.1743,  -60.5922,  -63.3529,  -80.5829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5553, device='cuda:0', dtype=torch.float64)
tensor([ -42.4585, -116.3833,  -60.4839,  -62.9201,  -80.3891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5654, device='cuda:0', dtype=torch.float64)
tensor([ -42.7241, -116.6046,  -60.3871,  -62.8361,  -80.2998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4562, device='cuda:0', dtype=torch.float64)
tensor([ -42.9309, -116.4212,  -60.1417,  -62.6215,  -80.0441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5669, device='cuda:0', dtype=torch.float64)
tensor([ -43.2169, -116.4117,  -59.7056,  -62.3316,  -80.1063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5046, device='cuda:0', dtype=torch.float64)
tensor([ -43.5119, -116.2183,  -59.1373,  -62.2497,  -80.0443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4866, device='cuda:0', dtype=torch.float64)
tensor([ -43.8329, -115.7548,  -58.3927,  -61.8811,  -79.6322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5610, device='cuda:0', dtype=torch.float64)
tensor([ -44.1247, -115.7096,  -57.7632,  -61.6825,  -79.5823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4787, device='cuda:0', dtype=torch.float64)
tensor([ -44.5250, -115.7462,  -57.1882,  -61.5310,  -79.4037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5385, device='cuda:0', dtype=torch.float64)
tensor([ -44.9612, -115.1775,  -56.4574,  -61.2749,  -78.3903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4593, device='cuda:0', dtype=torch.float64)
tensor([ -45.3571, -113.9143,  -55.6769,  -60.3900,  -76.8863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5563, device='cuda:0', dtype=torch.float64)
tensor([ -45.6649, -112.6163,  -54.9903,  -59.7122,  -75.5852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4923, device='cuda:0', dtype=torch.float64)
tensor([ -46.0352, -111.5041,  -54.6047,  -59.1829,  -74.4868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4887, device='cuda:0', dtype=torch.float64)
tensor([ -46.4395, -110.7519,  -54.2114,  -58.7835,  -73.7952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4112, device='cuda:0', dtype=torch.float64)
tensor([ -46.9315, -110.0495,  -53.9113,  -58.5365,  -73.1129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4253, device='cuda:0', dtype=torch.float64)
tensor([ -47.4766, -109.5244,  -53.8036,  -58.2710,  -72.5304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4896, device='cuda:0', dtype=torch.float64)
tensor([ -48.1361, -109.3876,  -53.7425,  -58.2073,  -72.2606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4975, device='cuda:0', dtype=torch.float64)
tensor([ -48.8716, -109.3187,  -53.5908,  -58.3281,  -71.9410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4540, device='cuda:0', dtype=torch.float64)
tensor([ -49.5214, -109.1432,  -53.4150,  -58.5422,  -71.5012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6141, device='cuda:0', dtype=torch.float64)
tensor([ -50.2797, -109.0767,  -53.0178,  -59.0955,  -71.5325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4872, device='cuda:0', dtype=torch.float64)
tensor([ -50.8805, -109.1155,  -52.7527,  -59.5674,  -71.4718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4592, device='cuda:0', dtype=torch.float64)
tensor([ -51.3612, -108.9127,  -52.3928,  -59.7746,  -71.3733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4959, device='cuda:0', dtype=torch.float64)
tensor([ -51.8228, -108.9313,  -52.1942,  -60.0641,  -71.3488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4308, device='cuda:0', dtype=torch.float64)
tensor([ -52.2844, -109.1090,  -52.0807,  -60.4609,  -71.4763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4297, device='cuda:0', dtype=torch.float64)
tensor([ -52.5732, -109.2858,  -52.0458,  -61.0166,  -71.6145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4366, device='cuda:0', dtype=torch.float64)
tensor([ -52.7741, -109.3599,  -51.9199,  -61.4044,  -71.5736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5417, device='cuda:0', dtype=torch.float64)
tensor([ -52.9692, -109.6454,  -51.7842,  -61.7545,  -71.6911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5117, device='cuda:0', dtype=torch.float64)
tensor([ -53.0374, -109.4759,  -51.8471,  -62.0304,  -71.9353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4803, device='cuda:0', dtype=torch.float64)
tensor([ -52.9913, -108.9102,  -51.9067,  -62.3875,  -71.9819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5021, device='cuda:0', dtype=torch.float64)
tensor([ -53.0394, -108.2384,  -52.1456,  -62.7178,  -71.8206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5052, device='cuda:0', dtype=torch.float64)
tensor([ -53.0831, -107.3841,  -52.4556,  -63.1381,  -71.5833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4949, device='cuda:0', dtype=torch.float64)
tensor([ -53.1304, -106.2876,  -52.6293,  -63.4454,  -71.0805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5390, device='cuda:0', dtype=torch.float64)
tensor([ -53.1651, -105.3739,  -53.0495,  -63.7081,  -70.6235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4519, device='cuda:0', dtype=torch.float64)
tensor([ -53.2006, -104.5660,  -53.4833,  -63.6383,  -70.0034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4357, device='cuda:0', dtype=torch.float64)
tensor([ -53.3211, -103.9777,  -53.7943,  -63.7975,  -69.4000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5042, device='cuda:0', dtype=torch.float64)
tensor([ -53.3647, -103.4615,  -54.1564,  -64.0683,  -69.0231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5415, device='cuda:0', dtype=torch.float64)
tensor([ -53.2490, -102.7352,  -54.7692,  -64.0656,  -68.3454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4460, device='cuda:0', dtype=torch.float64)
tensor([ -52.9624, -102.1948,  -55.5091,  -63.9808,  -67.7853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5008, device='cuda:0', dtype=torch.float64)
tensor([ -52.9262, -101.7757,  -56.1725,  -64.3423,  -67.3999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5162, device='cuda:0', dtype=torch.float64)
tensor([ -52.8804, -101.0669,  -56.5776,  -64.6296,  -66.9242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5449, device='cuda:0', dtype=torch.float64)
tensor([ -52.8146, -100.1677,  -57.0072,  -64.9572,  -66.3647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5364, device='cuda:0', dtype=torch.float64)
tensor([-52.9618, -99.4104, -57.3767, -65.1486, -65.6685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5087, device='cuda:0', dtype=torch.float64)
tensor([-53.2374, -99.1986, -57.8567, -65.2676, -65.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5149, device='cuda:0', dtype=torch.float64)
tensor([-53.4694, -99.5414, -58.2443, -65.0525, -65.0010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4537, device='cuda:0', dtype=torch.float64)
tensor([-53.7241, -99.7084, -58.8137, -65.0044, -64.8061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5876, device='cuda:0', dtype=torch.float64)
tensor([ -54.0073, -100.1398,  -59.3127,  -64.7224,  -64.6522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5452, device='cuda:0', dtype=torch.float64)
tensor([ -54.5369, -100.6291,  -59.6556,  -64.7009,  -64.3575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5214, device='cuda:0', dtype=torch.float64)
tensor([ -54.9772, -101.1670,  -60.1406,  -64.4852,  -63.9758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5139, device='cuda:0', dtype=torch.float64)
tensor([ -55.1496, -101.3834,  -60.6543,  -64.1825,  -63.4586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6202, device='cuda:0', dtype=torch.float64)
tensor([ -55.3378, -101.8455,  -61.3308,  -63.8673,  -63.3234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4413, device='cuda:0', dtype=torch.float64)
tensor([ -55.4647, -101.9573,  -61.8178,  -63.3985,  -62.9675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5673, device='cuda:0', dtype=torch.float64)
tensor([ -55.6438, -101.9291,  -62.4761,  -63.2675,  -62.6862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4716, device='cuda:0', dtype=torch.float64)
tensor([ -55.8212, -101.6882,  -62.9260,  -63.1763,  -62.4461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6733, device='cuda:0', dtype=torch.float64)
tensor([ -56.1376, -101.5752,  -63.1923,  -63.3896,  -62.7303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4916, device='cuda:0', dtype=torch.float64)
tensor([ -56.3633, -101.3176,  -63.0989,  -63.5103,  -62.8416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4018, device='cuda:0', dtype=torch.float64)
tensor([ -56.5523, -101.0188,  -63.2048,  -63.7268,  -62.9119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4270, device='cuda:0', dtype=torch.float64)
tensor([ -56.6141, -100.6319,  -63.0922,  -63.7450,  -62.9291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4835, device='cuda:0', dtype=torch.float64)
tensor([ -56.7640, -100.3482,  -63.0737,  -63.6731,  -62.9781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4797, device='cuda:0', dtype=torch.float64)
tensor([ -56.8006, -100.0791,  -62.8745,  -63.6320,  -63.0298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4425, device='cuda:0', dtype=torch.float64)
tensor([-57.0916, -99.7020, -62.4365, -63.6303, -63.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4442, device='cuda:0', dtype=torch.float64)
tensor([-57.4717, -99.3717, -61.9924, -63.7824, -63.2542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4517, device='cuda:0', dtype=torch.float64)
tensor([-57.8215, -98.9083, -61.4972, -64.0144, -63.1268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5172, device='cuda:0', dtype=torch.float64)
tensor([-58.2223, -98.3317, -60.8869, -64.2184, -63.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5594, device='cuda:0', dtype=torch.float64)
tensor([-58.5466, -97.6122, -60.5028, -64.2638, -63.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4289, device='cuda:0', dtype=torch.float64)
tensor([-58.7865, -96.7513, -59.9369, -64.0936, -62.9741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5214, device='cuda:0', dtype=torch.float64)
tensor([-58.9346, -96.0276, -59.5170, -64.0344, -62.9187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4749, device='cuda:0', dtype=torch.float64)
tensor([-58.9991, -95.5391, -58.9476, -63.9566, -62.9300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5824, device='cuda:0', dtype=torch.float64)
tensor([-59.2367, -95.4071, -58.5007, -64.2501, -63.2360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5199, device='cuda:0', dtype=torch.float64)
tensor([-59.2831, -94.9200, -57.7775, -64.4232, -63.4187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5349, device='cuda:0', dtype=torch.float64)
tensor([-59.2356, -94.5614, -56.9666, -64.6267, -63.3835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4718, device='cuda:0', dtype=torch.float64)
tensor([-58.9161, -94.1986, -56.3430, -64.9243, -63.5200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4662, device='cuda:0', dtype=torch.float64)
tensor([-58.6512, -93.7126, -55.7000, -64.8995, -63.4668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4919, device='cuda:0', dtype=torch.float64)
tensor([-58.3656, -93.4716, -55.2338, -65.1310, -63.4890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5347, device='cuda:0', dtype=torch.float64)
tensor([-58.2719, -93.2226, -54.6764, -65.4620, -63.5397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5296, device='cuda:0', dtype=torch.float64)
tensor([-58.3720, -93.0721, -54.1220, -65.5645, -63.4373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4304, device='cuda:0', dtype=torch.float64)
tensor([-58.6089, -93.4880, -53.7100, -65.5772, -63.4742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4377, device='cuda:0', dtype=torch.float64)
tensor([-58.8678, -93.6069, -53.3151, -65.5938, -63.4254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5640, device='cuda:0', dtype=torch.float64)
tensor([-59.2219, -93.9029, -53.1430, -65.6467, -63.6152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5035, device='cuda:0', dtype=torch.float64)
tensor([-59.6139, -94.5354, -53.0627, -66.0848, -63.9852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4652, device='cuda:0', dtype=torch.float64)
tensor([-59.8576, -95.0167, -52.9407, -66.3553, -64.0504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4493, device='cuda:0', dtype=torch.float64)
tensor([-59.8770, -95.3108, -52.7318, -66.3735, -63.9105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4780, device='cuda:0', dtype=torch.float64)
tensor([-59.9600, -95.2365, -52.4817, -66.3070, -63.6439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4464, device='cuda:0', dtype=torch.float64)
tensor([-60.0961, -95.0856, -52.0752, -65.9870, -63.2963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4748, device='cuda:0', dtype=torch.float64)
tensor([-60.1560, -94.9249, -51.6379, -65.3414, -62.8360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5104, device='cuda:0', dtype=torch.float64)
tensor([-60.3330, -94.7901, -51.1852, -64.9622, -62.2387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5535, device='cuda:0', dtype=torch.float64)
tensor([-60.2982, -94.9205, -50.6395, -64.4735, -61.9912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4681, device='cuda:0', dtype=torch.float64)
tensor([-60.4123, -95.2080, -50.1840, -64.0410, -61.9113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5026, device='cuda:0', dtype=torch.float64)
tensor([-60.5436, -95.7452, -49.6199, -63.6767, -61.8353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3761, device='cuda:0', dtype=torch.float64)
tensor([-60.8138, -96.2342, -48.9636, -63.3919, -61.7635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3799, device='cuda:0', dtype=torch.float64)
tensor([-61.0367, -96.6551, -48.4454, -63.1407, -61.6885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5546, device='cuda:0', dtype=torch.float64)
tensor([-61.4047, -97.2951, -48.0513, -63.1312, -61.8026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4107, device='cuda:0', dtype=torch.float64)
tensor([-61.5596, -97.7946, -47.7629, -63.0706, -61.9637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4979, device='cuda:0', dtype=torch.float64)
tensor([-61.5937, -98.0375, -47.5228, -62.6125, -61.9612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3710, device='cuda:0', dtype=torch.float64)
tensor([-61.6209, -98.0500, -47.3477, -62.1074, -61.8867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3912, device='cuda:0', dtype=torch.float64)
tensor([-61.6792, -98.1315, -47.1455, -61.6285, -61.9033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4451, device='cuda:0', dtype=torch.float64)
tensor([-61.8222, -98.6471, -46.9150, -61.2425, -62.2698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5362, device='cuda:0', dtype=torch.float64)
tensor([-61.7871, -99.1672, -46.7450, -60.8514, -62.6676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4207, device='cuda:0', dtype=torch.float64)
tensor([-61.8295, -99.6596, -46.5406, -60.4611, -62.8513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4789, device='cuda:0', dtype=torch.float64)
tensor([ -62.0693, -100.2480,  -46.4366,  -60.2711,  -63.1063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5052, device='cuda:0', dtype=torch.float64)
tensor([ -62.1806, -100.8471,  -46.4155,  -60.0902,  -63.2284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4918, device='cuda:0', dtype=torch.float64)
tensor([ -62.4495, -101.4360,  -46.4426,  -60.0835,  -63.5261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4384, device='cuda:0', dtype=torch.float64)
tensor([ -62.6263, -102.3295,  -46.6095,  -60.1813,  -63.9242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4206, device='cuda:0', dtype=torch.float64)
tensor([ -62.7171, -103.0560,  -46.7878,  -60.1587,  -64.1405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5349, device='cuda:0', dtype=torch.float64)
tensor([ -62.7781, -104.3042,  -47.0510,  -60.1288,  -64.7153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4112, device='cuda:0', dtype=torch.float64)
tensor([ -62.8329, -105.3321,  -47.2763,  -60.1096,  -65.1057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5443, device='cuda:0', dtype=torch.float64)
tensor([ -62.8932, -106.2689,  -47.5698,  -60.6752,  -65.7556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4682, device='cuda:0', dtype=torch.float64)
tensor([ -62.9902, -107.4094,  -48.0527,  -61.0419,  -66.6642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4588, device='cuda:0', dtype=torch.float64)
tensor([ -62.9505, -108.1468,  -48.5221,  -61.5763,  -67.3859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4465, device='cuda:0', dtype=torch.float64)
tensor([ -62.9885, -108.6885,  -48.9859,  -62.2143,  -67.7951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4732, device='cuda:0', dtype=torch.float64)
tensor([ -63.1347, -109.3744,  -49.5318,  -63.0624,  -68.3330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3748, device='cuda:0', dtype=torch.float64)
tensor([ -63.3602, -110.1206,  -50.0232,  -63.7363,  -68.8791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4032, device='cuda:0', dtype=torch.float64)
tensor([ -63.7761, -110.8254,  -50.4936,  -64.5903,  -69.3213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4634, device='cuda:0', dtype=torch.float64)
tensor([ -64.0696, -111.3991,  -50.9693,  -65.0479,  -69.8336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5177, device='cuda:0', dtype=torch.float64)
tensor([ -64.2768, -111.8271,  -51.3363,  -65.4142,  -70.1786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5753, device='cuda:0', dtype=torch.float64)
tensor([ -64.1378, -111.9406,  -51.5687,  -65.4397,  -70.5071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4350, device='cuda:0', dtype=torch.float64)
tensor([ -64.0162, -112.0320,  -51.6268,  -65.6532,  -70.7132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4981, device='cuda:0', dtype=torch.float64)
tensor([ -63.9032, -111.6596,  -51.5313,  -65.8108,  -70.7383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5452, device='cuda:0', dtype=torch.float64)
tensor([ -63.8507, -111.5877,  -51.4121,  -66.0920,  -70.9427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5399, device='cuda:0', dtype=torch.float64)
tensor([ -63.8208, -111.5129,  -51.2800,  -66.6879,  -71.1546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4196, device='cuda:0', dtype=torch.float64)
tensor([ -64.0440, -111.6096,  -51.1322,  -67.3280,  -71.5041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4103, device='cuda:0', dtype=torch.float64)
tensor([ -64.2321, -111.5783,  -50.9967,  -67.9119,  -71.6303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4867, device='cuda:0', dtype=torch.float64)
tensor([ -64.4565, -111.1280,  -50.9685,  -68.0721,  -71.4173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5216, device='cuda:0', dtype=torch.float64)
tensor([ -64.6289, -110.6060,  -51.1846,  -67.9207,  -71.0286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4281, device='cuda:0', dtype=torch.float64)
tensor([ -64.7015, -110.3118,  -51.3788,  -67.7044,  -70.9522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4357, device='cuda:0', dtype=torch.float64)
tensor([ -64.9066, -110.1771,  -51.6718,  -67.3819,  -70.8961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3945, device='cuda:0', dtype=torch.float64)
tensor([ -65.1709, -109.4534,  -51.9692,  -66.9111,  -70.4573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4446, device='cuda:0', dtype=torch.float64)
tensor([ -65.5479, -109.0797,  -52.2773,  -66.2861,  -69.9961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5337, device='cuda:0', dtype=torch.float64)
tensor([ -65.9720, -108.3419,  -52.3526,  -65.7355,  -69.4600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4652, device='cuda:0', dtype=torch.float64)
tensor([ -66.4863, -108.1469,  -52.3097,  -65.4723,  -69.2928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4123, device='cuda:0', dtype=torch.float64)
tensor([ -67.0117, -108.3203,  -52.4002,  -65.3528,  -69.4708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4383, device='cuda:0', dtype=torch.float64)
tensor([ -67.4396, -108.6584,  -52.6035,  -65.2542,  -69.8395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4333, device='cuda:0', dtype=torch.float64)
tensor([ -67.7873, -109.1279,  -52.9333,  -65.2420,  -70.4296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4419, device='cuda:0', dtype=torch.float64)
tensor([ -68.0008, -109.6680,  -53.2940,  -65.4439,  -71.1994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3821, device='cuda:0', dtype=torch.float64)
tensor([ -68.3029, -110.0210,  -53.6780,  -65.5985,  -71.5290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3969, device='cuda:0', dtype=torch.float64)
tensor([ -68.6366, -110.4835,  -54.1086,  -65.7786,  -71.9148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4227, device='cuda:0', dtype=torch.float64)
tensor([ -68.9868, -110.8381,  -54.5133,  -66.0343,  -72.1300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4572, device='cuda:0', dtype=torch.float64)
tensor([ -69.3736, -111.5730,  -55.1131,  -66.4512,  -72.6694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4688, device='cuda:0', dtype=torch.float64)
tensor([ -69.7044, -112.1945,  -55.8072,  -66.4153,  -73.3661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3848, device='cuda:0', dtype=torch.float64)
tensor([ -70.0754, -112.6878,  -56.4886,  -66.3415,  -74.0088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4838, device='cuda:0', dtype=torch.float64)
tensor([ -70.4917, -113.4953,  -57.2452,  -66.1728,  -74.7393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4380, device='cuda:0', dtype=torch.float64)
tensor([ -70.8209, -114.3515,  -58.1329,  -65.8844,  -75.3626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3545, device='cuda:0', dtype=torch.float64)
tensor([ -71.1747, -114.9334,  -58.8064,  -65.4863,  -75.4947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4151, device='cuda:0', dtype=torch.float64)
tensor([ -71.6300, -115.6966,  -59.3350,  -65.1788,  -75.6529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4604, device='cuda:0', dtype=torch.float64)
tensor([ -71.8712, -116.4727,  -60.0361,  -64.7480,  -75.7938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4651, device='cuda:0', dtype=torch.float64)
tensor([ -72.0015, -117.0590,  -60.7698,  -64.3865,  -76.0726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3764, device='cuda:0', dtype=torch.float64)
tensor([ -71.9960, -117.6038,  -61.4597,  -64.0178,  -76.3979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3738, device='cuda:0', dtype=torch.float64)
tensor([ -72.0620, -117.8946,  -62.0910,  -63.6578,  -76.6245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5747, device='cuda:0', dtype=torch.float64)
tensor([ -72.0339, -118.3303,  -62.7014,  -62.9888,  -76.9715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4161, device='cuda:0', dtype=torch.float64)
tensor([ -71.9330, -118.7645,  -63.2942,  -62.4127,  -77.5378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4013, device='cuda:0', dtype=torch.float64)
tensor([ -71.9512, -119.3998,  -63.7878,  -61.9150,  -78.1689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4786, device='cuda:0', dtype=torch.float64)
tensor([ -72.2753, -120.2232,  -64.1197,  -61.5408,  -78.7506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3219, device='cuda:0', dtype=torch.float64)
tensor([ -72.6216, -120.9191,  -64.2761,  -61.2694,  -79.3256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4605, device='cuda:0', dtype=torch.float64)
tensor([ -72.7138, -121.2580,  -64.3497,  -61.2568,  -79.8106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4139, device='cuda:0', dtype=torch.float64)
tensor([ -72.8904, -121.3224,  -64.5273,  -61.1780,  -80.1039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4288, device='cuda:0', dtype=torch.float64)
tensor([ -73.1986, -120.9662,  -65.0373,  -61.0975,  -80.0816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4607, device='cuda:0', dtype=torch.float64)
tensor([ -73.4661, -120.0876,  -65.5431,  -61.1291,  -79.8346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4126, device='cuda:0', dtype=torch.float64)
tensor([ -73.9781, -119.7998,  -66.1568,  -61.2017,  -79.9377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3592, device='cuda:0', dtype=torch.float64)
tensor([ -74.3512, -119.5495,  -66.6206,  -61.3520,  -80.0238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4314, device='cuda:0', dtype=torch.float64)
tensor([ -74.7674, -119.0618,  -66.9497,  -61.6200,  -80.1330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4166, device='cuda:0', dtype=torch.float64)
tensor([ -75.1580, -118.6434,  -67.1612,  -61.8294,  -79.9775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4063, device='cuda:0', dtype=torch.float64)
tensor([ -75.4591, -118.3912,  -67.5041,  -62.0530,  -79.9283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4344, device='cuda:0', dtype=torch.float64)
tensor([ -75.6787, -117.8156,  -67.7113,  -62.1297,  -79.6847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4399, device='cuda:0', dtype=torch.float64)
tensor([ -75.7527, -117.3691,  -67.8664,  -62.1017,  -79.7498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3873, device='cuda:0', dtype=torch.float64)
tensor([ -75.9455, -117.0342,  -68.0977,  -62.0462,  -79.7702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4504, device='cuda:0', dtype=torch.float64)
tensor([ -76.2599, -117.0145,  -68.5391,  -61.9915,  -79.9322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4528, device='cuda:0', dtype=torch.float64)
tensor([ -76.4283, -116.9072,  -68.8662,  -61.9036,  -79.8970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4837, device='cuda:0', dtype=torch.float64)
tensor([ -76.4770, -116.4198,  -69.0890,  -61.8834,  -79.6353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3798, device='cuda:0', dtype=torch.float64)
tensor([ -76.4985, -115.9759,  -69.2795,  -61.9518,  -79.3592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4839, device='cuda:0', dtype=torch.float64)
tensor([ -76.5033, -115.8062,  -69.4636,  -62.1222,  -79.3924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4491, device='cuda:0', dtype=torch.float64)
tensor([ -76.4961, -115.5403,  -69.2650,  -62.2193,  -79.4490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4011, device='cuda:0', dtype=torch.float64)
tensor([ -76.5657, -115.2139,  -68.7441,  -62.4528,  -79.3699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3955, device='cuda:0', dtype=torch.float64)
tensor([ -76.6524, -115.0211,  -68.2740,  -62.7812,  -79.0741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3702, device='cuda:0', dtype=torch.float64)
tensor([ -76.8535, -114.8243,  -67.7787,  -63.2920,  -78.9061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3565, device='cuda:0', dtype=torch.float64)
tensor([ -76.7922, -114.4775,  -67.1882,  -63.7048,  -78.5922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4169, device='cuda:0', dtype=torch.float64)
tensor([ -76.7153, -113.9929,  -66.6129,  -64.1877,  -78.1641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4024, device='cuda:0', dtype=torch.float64)
tensor([ -76.7303, -113.8303,  -66.1123,  -64.6224,  -77.4600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4189, device='cuda:0', dtype=torch.float64)
tensor([ -76.9252, -113.7057,  -65.8559,  -65.2966,  -77.0171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2723, device='cuda:0', dtype=torch.float64)
tensor([ -77.1056, -113.6789,  -65.7655,  -66.0532,  -76.6620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4687, device='cuda:0', dtype=torch.float64)
tensor([ -77.1736, -113.5040,  -65.7723,  -66.6460,  -76.4991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3625, device='cuda:0', dtype=torch.float64)
tensor([ -77.2182, -113.2897,  -65.7500,  -67.1048,  -76.2336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3367, device='cuda:0', dtype=torch.float64)
tensor([ -77.3565, -113.2802,  -65.9520,  -67.6474,  -76.2385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4150, device='cuda:0', dtype=torch.float64)
tensor([ -77.6067, -113.3747,  -66.0390,  -68.2401,  -76.4664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3563, device='cuda:0', dtype=torch.float64)
tensor([ -77.8764, -113.8000,  -66.0825,  -68.9502,  -76.9519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4154, device='cuda:0', dtype=torch.float64)
tensor([ -78.0133, -114.2817,  -66.4239,  -69.8391,  -77.8892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3888, device='cuda:0', dtype=torch.float64)
tensor([ -78.2721, -114.6901,  -66.7811,  -70.8838,  -78.6919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4017, device='cuda:0', dtype=torch.float64)
tensor([ -78.6467, -115.1843,  -66.7680,  -72.0772,  -79.5653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3086, device='cuda:0', dtype=torch.float64)
tensor([ -78.9287, -115.3687,  -66.7202,  -72.9573,  -80.2473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4510, device='cuda:0', dtype=torch.float64)
tensor([ -79.3622, -115.7641,  -66.6630,  -73.7957,  -81.0906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3600, device='cuda:0', dtype=torch.float64)
tensor([ -79.8743, -116.3730,  -66.5545,  -74.6473,  -81.8930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3655, device='cuda:0', dtype=torch.float64)
tensor([ -80.2194, -116.5395,  -66.5372,  -75.3694,  -82.3334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3932, device='cuda:0', dtype=torch.float64)
tensor([ -80.4481, -116.8042,  -66.5863,  -75.9393,  -82.8682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3816, device='cuda:0', dtype=torch.float64)
tensor([ -80.5713, -117.2765,  -66.7744,  -76.5894,  -83.5646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3993, device='cuda:0', dtype=torch.float64)
tensor([ -80.7209, -117.5860,  -66.7978,  -77.1732,  -83.8767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4037, device='cuda:0', dtype=torch.float64)
tensor([ -80.9792, -117.8038,  -66.5882,  -77.5687,  -84.0667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4133, device='cuda:0', dtype=torch.float64)
tensor([ -81.4424, -118.1218,  -66.4062,  -78.0360,  -84.4705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3863, device='cuda:0', dtype=torch.float64)
tensor([ -81.7403, -118.2871,  -66.4412,  -78.1589,  -84.8329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3402, device='cuda:0', dtype=torch.float64)
tensor([ -82.1199, -118.6413,  -66.4859,  -78.4170,  -85.3236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3782, device='cuda:0', dtype=torch.float64)
tensor([ -82.5043, -118.8093,  -66.3198,  -78.5212,  -85.6030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3791, device='cuda:0', dtype=torch.float64)
tensor([ -82.9459, -119.2268,  -65.9828,  -78.6855,  -85.6524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3939, device='cuda:0', dtype=torch.float64)
tensor([ -83.4540, -119.7544,  -65.8260,  -79.1018,  -85.8526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3263, device='cuda:0', dtype=torch.float64)
tensor([ -84.0208, -120.2368,  -65.7077,  -79.3114,  -86.0631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3172, device='cuda:0', dtype=torch.float64)
tensor([ -84.5854, -120.6691,  -65.6843,  -79.5965,  -86.5123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3281, device='cuda:0', dtype=torch.float64)
tensor([ -85.0409, -120.9964,  -65.5862,  -79.6316,  -86.8803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4343, device='cuda:0', dtype=torch.float64)
tensor([ -85.4772, -121.1914,  -65.7415,  -79.5712,  -87.0944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3745, device='cuda:0', dtype=torch.float64)
tensor([ -85.8888, -121.4400,  -65.8558,  -79.2112,  -87.2499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3606, device='cuda:0', dtype=torch.float64)
tensor([ -86.3282, -121.7306,  -66.0349,  -78.8859,  -87.3599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3602, device='cuda:0', dtype=torch.float64)
tensor([ -86.7101, -122.1328,  -66.3308,  -78.6819,  -87.7361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3586, device='cuda:0', dtype=torch.float64)
tensor([ -87.1159, -122.5992,  -66.7540,  -78.2030,  -87.9942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3111, device='cuda:0', dtype=torch.float64)
tensor([ -87.5845, -123.2022,  -67.2374,  -77.8455,  -88.1141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3706, device='cuda:0', dtype=torch.float64)
tensor([ -88.0076, -123.6265,  -67.8277,  -77.4878,  -88.1593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4216, device='cuda:0', dtype=torch.float64)
tensor([ -88.2202, -123.5690,  -68.2340,  -77.0599,  -87.8854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4303, device='cuda:0', dtype=torch.float64)
tensor([ -88.5285, -123.6473,  -68.6119,  -76.5673,  -87.4925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3715, device='cuda:0', dtype=torch.float64)
tensor([ -88.7687, -123.7381,  -68.9494,  -76.0884,  -87.1010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3470, device='cuda:0', dtype=torch.float64)
tensor([ -89.2378, -124.0826,  -69.3310,  -75.6887,  -87.0168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3416, device='cuda:0', dtype=torch.float64)
tensor([ -89.8429, -124.2948,  -69.7509,  -75.3293,  -86.7213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3438, device='cuda:0', dtype=torch.float64)
tensor([ -90.3500, -124.5510,  -70.2178,  -75.0796,  -86.4686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3258, device='cuda:0', dtype=torch.float64)
tensor([ -90.7991, -124.6231,  -70.5026,  -74.8954,  -86.2025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3736, device='cuda:0', dtype=torch.float64)
tensor([ -91.3559, -125.0078,  -71.0042,  -74.9952,  -85.9574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3504, device='cuda:0', dtype=torch.float64)
tensor([ -91.6956, -125.2896,  -71.2981,  -75.1607,  -85.6925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3306, device='cuda:0', dtype=torch.float64)
tensor([ -91.9368, -125.4430,  -71.3758,  -75.1312,  -85.2142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3561, device='cuda:0', dtype=torch.float64)
tensor([ -92.1799, -125.3401,  -71.3730,  -74.8047,  -84.4691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3630, device='cuda:0', dtype=torch.float64)
tensor([ -92.3291, -125.3792,  -71.3736,  -74.6096,  -83.9653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3658, device='cuda:0', dtype=torch.float64)
tensor([ -92.3666, -125.7118,  -71.4330,  -74.1805,  -83.7458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3899, device='cuda:0', dtype=torch.float64)
tensor([ -92.3378, -125.9312,  -71.3537,  -73.7004,  -83.4199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3218, device='cuda:0', dtype=torch.float64)
tensor([ -92.2845, -126.1084,  -71.2457,  -73.4098,  -83.2387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3426, device='cuda:0', dtype=torch.float64)
tensor([ -92.3445, -126.2482,  -71.1477,  -72.9879,  -82.9103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3104, device='cuda:0', dtype=torch.float64)
tensor([ -92.4285, -126.2131,  -71.1024,  -72.4759,  -82.2781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3307, device='cuda:0', dtype=torch.float64)
tensor([ -92.4328, -125.7939,  -71.1217,  -71.7916,  -81.3084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3210, device='cuda:0', dtype=torch.float64)
tensor([ -92.3833, -125.4828,  -70.9692,  -71.2151,  -80.6210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4143, device='cuda:0', dtype=torch.float64)
tensor([ -92.3374, -124.8358,  -71.1202,  -70.6555,  -80.1923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3368, device='cuda:0', dtype=torch.float64)
tensor([ -92.2507, -124.2981,  -71.4648,  -70.1807,  -79.9332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3273, device='cuda:0', dtype=torch.float64)
tensor([ -92.1188, -123.8591,  -71.9890,  -69.7453,  -79.7552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3628, device='cuda:0', dtype=torch.float64)
tensor([ -91.8937, -123.4928,  -72.3613,  -69.3984,  -79.5657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3138, device='cuda:0', dtype=torch.float64)
tensor([ -91.8490, -123.4243,  -72.7543,  -69.1391,  -79.3876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3564, device='cuda:0', dtype=torch.float64)
tensor([ -91.8510, -123.5427,  -73.0517,  -68.7520,  -79.4653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2912, device='cuda:0', dtype=torch.float64)
tensor([ -91.6392, -123.5785,  -73.3444,  -68.4404,  -79.4366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3506, device='cuda:0', dtype=torch.float64)
tensor([ -91.5759, -123.4186,  -73.7628,  -68.1087,  -79.5428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3045, device='cuda:0', dtype=torch.float64)
tensor([ -91.4688, -123.5254,  -74.0534,  -67.8648,  -79.6963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3389, device='cuda:0', dtype=torch.float64)
tensor([ -91.3699, -123.4107,  -74.4860,  -67.6735,  -79.8187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3648, device='cuda:0', dtype=torch.float64)
tensor([ -91.2484, -123.3272,  -74.8785,  -67.6291,  -79.9600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3432, device='cuda:0', dtype=torch.float64)
tensor([ -91.2366, -123.2675,  -75.2366,  -67.5171,  -80.1444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3543, device='cuda:0', dtype=torch.float64)
tensor([ -91.3790, -123.1396,  -75.4655,  -67.5047,  -80.1711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3154, device='cuda:0', dtype=torch.float64)
tensor([ -91.7067, -123.0231,  -75.7169,  -67.4857,  -80.2739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2685, device='cuda:0', dtype=torch.float64)
tensor([ -91.9329, -122.8298,  -75.7724,  -67.4785,  -80.2925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4127, device='cuda:0', dtype=torch.float64)
tensor([ -92.3106, -122.8382,  -76.0339,  -67.3132,  -80.2745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3505, device='cuda:0', dtype=torch.float64)
tensor([ -92.4493, -122.6896,  -76.3718,  -67.0762,  -80.1081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3345, device='cuda:0', dtype=torch.float64)
tensor([ -92.6918, -122.5094,  -76.7204,  -66.9208,  -79.9855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3397, device='cuda:0', dtype=torch.float64)
tensor([ -92.8634, -122.2453,  -76.9255,  -66.7536,  -79.5510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3101, device='cuda:0', dtype=torch.float64)
tensor([ -92.8726, -121.7905,  -77.0134,  -66.6310,  -79.0651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3659, device='cuda:0', dtype=torch.float64)
tensor([ -92.9463, -121.6617,  -77.2436,  -66.5913,  -78.9354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3847, device='cuda:0', dtype=torch.float64)
tensor([ -92.8365, -121.5366,  -77.6380,  -66.4670,  -78.7757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3054, device='cuda:0', dtype=torch.float64)
tensor([ -92.7611, -121.7237,  -77.8190,  -66.5418,  -78.6753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3937, device='cuda:0', dtype=torch.float64)
tensor([ -92.7601, -122.1203,  -78.0854,  -66.7503,  -78.6425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3188, device='cuda:0', dtype=torch.float64)
tensor([ -92.6072, -122.3197,  -78.4866,  -66.9744,  -78.5596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3540, device='cuda:0', dtype=torch.float64)
tensor([ -92.3979, -122.6414,  -79.0206,  -67.2122,  -78.6533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3220, device='cuda:0', dtype=torch.float64)
tensor([ -92.1912, -122.8830,  -79.4439,  -67.4215,  -78.7061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3245, device='cuda:0', dtype=torch.float64)
tensor([ -92.1141, -123.0770,  -79.9599,  -67.7723,  -78.7381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3171, device='cuda:0', dtype=torch.float64)
tensor([ -92.1550, -123.6178,  -80.3927,  -68.2334,  -78.8515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3277, device='cuda:0', dtype=torch.float64)
tensor([ -92.2256, -124.1534,  -80.6287,  -68.7406,  -79.1057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3242, device='cuda:0', dtype=torch.float64)
tensor([ -92.3352, -124.8763,  -80.8683,  -69.3117,  -79.3367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3473, device='cuda:0', dtype=torch.float64)
tensor([ -92.5511, -125.5298,  -81.3211,  -69.9545,  -79.6009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3182, device='cuda:0', dtype=torch.float64)
tensor([ -92.7090, -125.9374,  -81.8064,  -70.5290,  -79.7513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3066, device='cuda:0', dtype=torch.float64)
tensor([ -92.7258, -126.2643,  -82.2413,  -71.1291,  -79.8524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2663, device='cuda:0', dtype=torch.float64)
tensor([ -92.7537, -126.5376,  -82.3838,  -71.6877,  -79.9791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3557, device='cuda:0', dtype=torch.float64)
tensor([ -92.8697, -126.7887,  -82.8501,  -72.4765,  -80.3170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3286, device='cuda:0', dtype=torch.float64)
tensor([ -93.0800, -127.0537,  -83.3111,  -73.1222,  -80.7141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3465, device='cuda:0', dtype=torch.float64)
tensor([ -93.2529, -127.1548,  -83.5202,  -73.6572,  -80.8599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2641, device='cuda:0', dtype=torch.float64)
tensor([ -93.2502, -127.1845,  -83.6418,  -74.2699,  -80.9646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2937, device='cuda:0', dtype=torch.float64)
tensor([ -93.2991, -127.4082,  -83.8186,  -74.9500,  -81.2108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3103, device='cuda:0', dtype=torch.float64)
tensor([ -93.4021, -127.7536,  -83.8807,  -75.7732,  -81.4838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2630, device='cuda:0', dtype=torch.float64)
tensor([ -93.5421, -128.0539,  -83.8822,  -76.4949,  -81.8274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2982, device='cuda:0', dtype=torch.float64)
tensor([ -93.6055, -128.2643,  -84.0206,  -77.1556,  -82.1891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2665, device='cuda:0', dtype=torch.float64)
tensor([ -93.6016, -128.3310,  -84.2260,  -77.7402,  -82.4921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2524, device='cuda:0', dtype=torch.float64)
tensor([ -93.6131, -128.1742,  -84.4244,  -78.1838,  -82.6826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2475, device='cuda:0', dtype=torch.float64)
tensor([ -93.7492, -127.9772,  -84.4139,  -78.5770,  -82.6790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3160, device='cuda:0', dtype=torch.float64)
tensor([ -93.8629, -127.6161,  -84.3161,  -78.7924,  -82.6082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3547, device='cuda:0', dtype=torch.float64)
tensor([ -94.0570, -127.3339,  -84.0692,  -79.0631,  -82.5979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3530, device='cuda:0', dtype=torch.float64)
tensor([ -94.0850, -127.1429,  -83.8745,  -79.2480,  -82.8424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3364, device='cuda:0', dtype=torch.float64)
tensor([ -94.4789, -127.2411,  -83.7041,  -79.5276,  -83.1479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2440, device='cuda:0', dtype=torch.float64)
tensor([ -94.8217, -127.2377,  -83.5411,  -79.8112,  -83.1485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2469, device='cuda:0', dtype=torch.float64)
tensor([ -95.1006, -127.3494,  -83.4409,  -80.0194,  -83.2173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2661, device='cuda:0', dtype=torch.float64)
tensor([ -95.3218, -127.6016,  -83.3808,  -80.3331,  -83.5208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2790, device='cuda:0', dtype=torch.float64)
tensor([ -95.5018, -127.8794,  -83.2500,  -80.5021,  -83.9008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2547, device='cuda:0', dtype=torch.float64)
tensor([ -95.5058, -128.1167,  -83.1574,  -80.5326,  -84.2475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2818, device='cuda:0', dtype=torch.float64)
tensor([ -95.6073, -128.5358,  -83.1116,  -80.5278,  -84.6538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2595, device='cuda:0', dtype=torch.float64)
tensor([ -95.8575, -128.9610,  -83.0742,  -80.4759,  -85.0235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2912, device='cuda:0', dtype=torch.float64)
tensor([ -96.0912, -129.3485,  -83.0740,  -80.4062,  -85.5046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2908, device='cuda:0', dtype=torch.float64)
tensor([ -96.4102, -129.8502,  -83.1702,  -80.3732,  -86.0096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3000, device='cuda:0', dtype=torch.float64)
tensor([ -96.8254, -130.4619,  -83.2271,  -80.6076,  -86.5961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3315, device='cuda:0', dtype=torch.float64)
tensor([ -97.1164, -130.7250,  -83.3488,  -80.7248,  -87.0041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3174, device='cuda:0', dtype=torch.float64)
tensor([ -97.2423, -130.9520,  -83.3633,  -80.6321,  -87.3369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2955, device='cuda:0', dtype=torch.float64)
tensor([ -97.3398, -130.9725,  -83.4657,  -80.4736,  -87.6465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2913, device='cuda:0', dtype=torch.float64)
tensor([ -97.5822, -131.1554,  -83.6444,  -80.5197,  -88.1357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2749, device='cuda:0', dtype=torch.float64)
tensor([ -97.8909, -131.5104,  -83.7449,  -80.6866,  -88.5029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2872, device='cuda:0', dtype=torch.float64)
tensor([ -98.4858, -132.1439,  -83.9186,  -80.9636,  -88.9347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3087, device='cuda:0', dtype=torch.float64)
tensor([ -98.9498, -132.6409,  -84.1686,  -81.2431,  -89.4694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3527, device='cuda:0', dtype=torch.float64)
tensor([ -99.2283, -132.7564,  -84.3855,  -81.4658,  -89.6923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2876, device='cuda:0', dtype=torch.float64)
tensor([ -99.4963, -132.7190,  -84.5554,  -81.5162,  -89.9335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2646, device='cuda:0', dtype=torch.float64)
tensor([ -99.8072, -132.8190,  -84.7537,  -81.5669,  -90.0159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3387, device='cuda:0', dtype=torch.float64)
tensor([-100.1941, -132.9402,  -84.8668,  -81.5614,  -90.1130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3292, device='cuda:0', dtype=torch.float64)
tensor([-100.5435, -132.8090,  -84.8264,  -81.4245,  -90.0594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3318, device='cuda:0', dtype=torch.float64)
tensor([-100.8751, -132.7511,  -84.9156,  -81.3017,  -90.1420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2646, device='cuda:0', dtype=torch.float64)
tensor([-101.0497, -132.7137,  -85.1578,  -81.0832,  -90.1809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2848, device='cuda:0', dtype=torch.float64)
tensor([-101.2984, -132.8633,  -85.4113,  -80.9759,  -90.1664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2885, device='cuda:0', dtype=torch.float64)
tensor([-101.5664, -132.8927,  -85.5255,  -80.7725,  -90.2661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2395, device='cuda:0', dtype=torch.float64)
tensor([-101.8132, -133.0361,  -85.7462,  -80.5969,  -90.5197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2134, device='cuda:0', dtype=torch.float64)
tensor([-101.9730, -133.3026,  -85.9478,  -80.6001,  -90.7451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2708, device='cuda:0', dtype=torch.float64)
tensor([-102.1384, -133.4543,  -86.0066,  -80.5299,  -90.8073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2848, device='cuda:0', dtype=torch.float64)
tensor([-102.2496, -133.5400,  -86.2417,  -80.3748,  -90.7468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2437, device='cuda:0', dtype=torch.float64)
tensor([-102.3294, -133.7168,  -86.3578,  -80.1325,  -90.7341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2399, device='cuda:0', dtype=torch.float64)
tensor([-102.4331, -133.8221,  -86.4788,  -80.0074,  -90.6933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2613, device='cuda:0', dtype=torch.float64)
tensor([-102.5799, -133.7971,  -86.5491,  -79.7348,  -90.3470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2869, device='cuda:0', dtype=torch.float64)
tensor([-102.7926, -133.7969,  -86.6765,  -79.5498,  -89.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2499, device='cuda:0', dtype=torch.float64)
tensor([-103.0868, -133.9914,  -86.7522,  -79.4492,  -89.6674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2904, device='cuda:0', dtype=torch.float64)
tensor([-103.5660, -134.4956,  -86.6228,  -79.5699,  -89.3922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2888, device='cuda:0', dtype=torch.float64)
tensor([-104.1108, -134.9704,  -86.3563,  -79.6095,  -88.9804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2450, device='cuda:0', dtype=torch.float64)
tensor([-104.5650, -135.4514,  -86.0495,  -79.6433,  -88.4355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2442, device='cuda:0', dtype=torch.float64)
tensor([-104.8819, -135.8019,  -85.7657,  -79.6685,  -87.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2636, device='cuda:0', dtype=torch.float64)
tensor([-105.1582, -136.0924,  -85.4590,  -79.6803,  -87.2949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3206, device='cuda:0', dtype=torch.float64)
tensor([-105.7345, -136.5579,  -85.3195,  -79.9100,  -87.0887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2263, device='cuda:0', dtype=torch.float64)
tensor([-106.2140, -136.9481,  -85.2316,  -80.0709,  -86.8764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2890, device='cuda:0', dtype=torch.float64)
tensor([-106.7462, -137.2472,  -85.0860,  -80.0650,  -86.7873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2723, device='cuda:0', dtype=torch.float64)
tensor([-107.0347, -137.4890,  -84.8447,  -79.9976,  -86.6787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2321, device='cuda:0', dtype=torch.float64)
tensor([-107.3957, -137.9453,  -84.7540,  -79.9913,  -86.7563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2686, device='cuda:0', dtype=torch.float64)
tensor([-107.4564, -138.2249,  -84.6350,  -79.8924,  -86.7304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2223, device='cuda:0', dtype=torch.float64)
tensor([-107.4621, -138.5478,  -84.4483,  -79.7339,  -86.8431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2495, device='cuda:0', dtype=torch.float64)
tensor([-107.5696, -138.9402,  -84.4439,  -79.5875,  -87.1006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3423, device='cuda:0', dtype=torch.float64)
tensor([-107.9310, -139.4199,  -84.3193,  -79.3967,  -87.5307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2748, device='cuda:0', dtype=torch.float64)
tensor([-108.4416, -140.0508,  -84.3497,  -79.3458,  -88.0411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2657, device='cuda:0', dtype=torch.float64)
tensor([-109.0059, -140.6573,  -84.2450,  -79.4006,  -88.3831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2109, device='cuda:0', dtype=torch.float64)
tensor([-109.5717, -141.2706,  -84.2095,  -79.5277,  -88.8451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2352, device='cuda:0', dtype=torch.float64)
tensor([-110.2377, -142.1677,  -84.2928,  -79.6663,  -89.3844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2614, device='cuda:0', dtype=torch.float64)
tensor([-110.7191, -142.7051,  -84.2557,  -79.7253,  -89.6700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2611, device='cuda:0', dtype=torch.float64)
tensor([-111.0880, -143.1778,  -84.3667,  -79.7715,  -90.1018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2379, device='cuda:0', dtype=torch.float64)
tensor([-111.4533, -143.6670,  -84.5254,  -79.8817,  -90.4477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2398, device='cuda:0', dtype=torch.float64)
tensor([-111.8339, -144.1275,  -84.7278,  -79.8781,  -90.8246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2779, device='cuda:0', dtype=torch.float64)
tensor([-112.1043, -144.5574,  -84.8319,  -79.8490,  -91.2512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2311, device='cuda:0', dtype=torch.float64)
tensor([-112.4014, -144.9319,  -85.0645,  -79.8953,  -91.7078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2262, device='cuda:0', dtype=torch.float64)
tensor([-112.7181, -145.1859,  -85.2451,  -79.8343,  -92.0603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2485, device='cuda:0', dtype=torch.float64)
tensor([-113.0488, -145.4415,  -85.4577,  -79.7612,  -92.4383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2245, device='cuda:0', dtype=torch.float64)
tensor([-113.4520, -145.9092,  -85.8153,  -79.7759,  -92.8451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2137, device='cuda:0', dtype=torch.float64)
tensor([-113.9035, -146.2684,  -86.0903,  -79.7693,  -93.1112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2426, device='cuda:0', dtype=torch.float64)
tensor([-114.4152, -146.7018,  -86.3897,  -79.7742,  -93.3492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2977, device='cuda:0', dtype=torch.float64)
tensor([-114.7812, -147.0952,  -86.7131,  -79.8715,  -93.7739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2678, device='cuda:0', dtype=torch.float64)
tensor([-115.0846, -147.6012,  -86.8655,  -80.0816,  -94.2191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2120, device='cuda:0', dtype=torch.float64)
tensor([-115.3580, -148.0250,  -87.0860,  -80.1919,  -94.5089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2641, device='cuda:0', dtype=torch.float64)
tensor([-115.5895, -148.3946,  -87.3327,  -80.1732,  -94.6786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2069, device='cuda:0', dtype=torch.float64)
tensor([-115.9223, -148.6181,  -87.5733,  -80.0862,  -94.9131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2556, device='cuda:0', dtype=torch.float64)
tensor([-116.2344, -148.8273,  -87.7416,  -80.0054,  -94.9749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2682, device='cuda:0', dtype=torch.float64)
tensor([-116.3054, -148.5789,  -87.9515,  -79.7750,  -94.7787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2639, device='cuda:0', dtype=torch.float64)
tensor([-116.4590, -148.3750,  -88.1307,  -79.6209,  -94.4811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2668, device='cuda:0', dtype=torch.float64)
tensor([-116.6617, -148.4068,  -88.2633,  -79.5190,  -94.3110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2442, device='cuda:0', dtype=torch.float64)
tensor([-117.0366, -148.5066,  -88.3463,  -79.4447,  -94.0381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2365, device='cuda:0', dtype=torch.float64)
tensor([-117.4251, -148.7010,  -88.3769,  -79.4472,  -93.8277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1800, device='cuda:0', dtype=torch.float64)
tensor([-117.8785, -148.9156,  -88.4539,  -79.4431,  -93.6203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2163, device='cuda:0', dtype=torch.float64)
tensor([-118.4425, -149.1773,  -88.5394,  -79.4072,  -93.3460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2430, device='cuda:0', dtype=torch.float64)
tensor([-118.9419, -149.5446,  -88.5762,  -79.4682,  -93.1613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2334, device='cuda:0', dtype=torch.float64)
tensor([-119.5250, -149.9392,  -88.6885,  -79.6567,  -93.0499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1969, device='cuda:0', dtype=torch.float64)
tensor([-120.0175, -150.3617,  -88.8233,  -79.7928,  -93.0715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2661, device='cuda:0', dtype=torch.float64)
tensor([-120.5688, -150.5762,  -88.9142,  -79.7651,  -92.6891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2572, device='cuda:0', dtype=torch.float64)
tensor([-121.1249, -150.7881,  -88.9384,  -79.7161,  -92.3347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2080, device='cuda:0', dtype=torch.float64)
tensor([-121.5812, -150.9678,  -88.9714,  -79.5955,  -91.8967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2329, device='cuda:0', dtype=torch.float64)
tensor([-122.0567, -151.1500,  -89.0249,  -79.5774,  -91.5156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2334, device='cuda:0', dtype=torch.float64)
tensor([-122.4375, -151.1940,  -89.1595,  -79.4940,  -91.3185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2396, device='cuda:0', dtype=torch.float64)
tensor([-122.7680, -150.9576,  -89.2791,  -79.4091,  -91.2001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2580, device='cuda:0', dtype=torch.float64)
tensor([-122.8680, -150.5627,  -89.3444,  -79.3220,  -91.1846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2251, device='cuda:0', dtype=torch.float64)
tensor([-122.7338, -150.2208,  -89.4725,  -79.2271,  -91.2170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2455, device='cuda:0', dtype=torch.float64)
tensor([-122.7566, -150.0411,  -89.6174,  -79.0701,  -91.3319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2332, device='cuda:0', dtype=torch.float64)
tensor([-122.7008, -149.6291,  -89.7495,  -78.8294,  -91.3401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1949, device='cuda:0', dtype=torch.float64)
tensor([-122.7279, -149.1917,  -89.8787,  -78.5809,  -91.3161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2096, device='cuda:0', dtype=torch.float64)
tensor([-122.5845, -148.6617,  -89.9596,  -78.3125,  -91.1215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2161, device='cuda:0', dtype=torch.float64)
tensor([-122.3269, -148.1078,  -89.8635,  -78.0379,  -90.8244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2343, device='cuda:0', dtype=torch.float64)
tensor([-122.0631, -147.5801,  -89.6881,  -77.8904,  -90.6193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2151, device='cuda:0', dtype=torch.float64)
tensor([-121.8454, -147.3280,  -89.5614,  -77.8356,  -90.4819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2523, device='cuda:0', dtype=torch.float64)
tensor([-121.5685, -146.8686,  -89.4398,  -77.7798,  -90.2541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2166, device='cuda:0', dtype=torch.float64)
tensor([-121.1834, -146.4677,  -89.3628,  -77.7340,  -90.0901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2194, device='cuda:0', dtype=torch.float64)
tensor([-120.9121, -146.3036,  -89.3891,  -77.6610,  -89.8944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2495, device='cuda:0', dtype=torch.float64)
tensor([-120.6604, -146.1742,  -89.6199,  -77.6474,  -89.8149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2774, device='cuda:0', dtype=torch.float64)
tensor([-120.3733, -146.1203,  -89.8237,  -77.6468,  -89.9271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2308, device='cuda:0', dtype=torch.float64)
tensor([-120.1739, -145.9893,  -90.0620,  -77.6923,  -89.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2039, device='cuda:0', dtype=torch.float64)
tensor([-119.9986, -145.8588,  -90.4329,  -77.7012,  -89.7988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2044, device='cuda:0', dtype=torch.float64)
tensor([-119.9046, -145.8517,  -90.8081,  -77.7490,  -89.9894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2441, device='cuda:0', dtype=torch.float64)
tensor([-119.9508, -146.1815,  -91.1276,  -77.9386,  -90.2137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2161, device='cuda:0', dtype=torch.float64)
tensor([-119.9469, -146.2836,  -91.4226,  -77.9910,  -90.1739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2269, device='cuda:0', dtype=torch.float64)
tensor([-119.7278, -146.2600,  -91.7374,  -77.9918,  -90.0659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2309, device='cuda:0', dtype=torch.float64)
tensor([-119.4391, -146.2827,  -92.0835,  -78.1014,  -90.0751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2298, device='cuda:0', dtype=torch.float64)
tensor([-119.2924, -146.5175,  -92.5590,  -78.2585,  -90.1763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2708, device='cuda:0', dtype=torch.float64)
tensor([-119.1994, -146.5650,  -93.0549,  -78.3182,  -90.2066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2093, device='cuda:0', dtype=torch.float64)
tensor([-119.0938, -146.7033,  -93.4682,  -78.5114,  -90.3534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1967, device='cuda:0', dtype=torch.float64)
tensor([-119.1168, -146.7496,  -93.8392,  -78.5540,  -90.4428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2162, device='cuda:0', dtype=torch.float64)
tensor([-119.2658, -146.7706,  -94.1747,  -78.6192,  -90.5617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2423, device='cuda:0', dtype=torch.float64)
tensor([-119.4052, -146.7515,  -94.2706,  -78.6712,  -90.6813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2181, device='cuda:0', dtype=torch.float64)
tensor([-119.6357, -146.7470,  -94.4180,  -78.7372,  -90.8985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2143, device='cuda:0', dtype=torch.float64)
tensor([-120.1047, -146.9059,  -94.5657,  -78.8703,  -91.0992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1931, device='cuda:0', dtype=torch.float64)
tensor([-120.6079, -147.0769,  -94.7319,  -78.9907,  -91.2602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2632, device='cuda:0', dtype=torch.float64)
tensor([-120.8736, -147.1153,  -94.9844,  -79.1369,  -91.3512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1939, device='cuda:0', dtype=torch.float64)
tensor([-121.1948, -147.1011,  -95.1552,  -79.2828,  -91.3029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2013, device='cuda:0', dtype=torch.float64)
tensor([-121.6323, -147.1736,  -95.3684,  -79.4925,  -91.3368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2120, device='cuda:0', dtype=torch.float64)
tensor([-122.0313, -147.2244,  -95.4337,  -79.6572,  -91.2056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2416, device='cuda:0', dtype=torch.float64)
tensor([-122.5052, -147.2095,  -95.4803,  -79.7558,  -91.0514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2227, device='cuda:0', dtype=torch.float64)
tensor([-122.6816, -147.0518,  -95.4389,  -79.8687,  -90.7524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2167, device='cuda:0', dtype=torch.float64)
tensor([-122.9938, -147.0957,  -95.2899,  -80.0279,  -90.6431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2138, device='cuda:0', dtype=torch.float64)
tensor([-123.2244, -147.0353,  -95.0883,  -80.0943,  -90.2618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2058, device='cuda:0', dtype=torch.float64)
tensor([-123.4800, -146.9127,  -94.8353,  -80.1778,  -90.0832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1775, device='cuda:0', dtype=torch.float64)
tensor([-123.6885, -146.8888,  -94.6101,  -80.2153,  -89.9087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2206, device='cuda:0', dtype=torch.float64)
tensor([-124.0838, -146.9972,  -94.2170,  -80.2431,  -89.6026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2110, device='cuda:0', dtype=torch.float64)
tensor([-124.3763, -147.0823,  -94.1490,  -80.2384,  -89.3055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2522, device='cuda:0', dtype=torch.float64)
tensor([-124.7085, -147.0330,  -94.0330,  -80.1811,  -89.0257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2115, device='cuda:0', dtype=torch.float64)
tensor([-125.0296, -147.0348,  -93.9034,  -80.1816,  -88.7913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1700, device='cuda:0', dtype=torch.float64)
tensor([-125.3583, -147.0167,  -93.8171,  -80.1729,  -88.5530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1739, device='cuda:0', dtype=torch.float64)
tensor([-125.6702, -147.0551,  -93.7713,  -80.1815,  -88.4177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1692, device='cuda:0', dtype=torch.float64)
tensor([-126.0329, -147.0307,  -93.7154,  -80.1779,  -88.3451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1801, device='cuda:0', dtype=torch.float64)
tensor([-126.4256, -147.0028,  -93.6926,  -80.1496,  -88.2095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1658, device='cuda:0', dtype=torch.float64)
tensor([-126.7081, -146.9316,  -93.5796,  -80.1338,  -88.1288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1992, device='cuda:0', dtype=torch.float64)
tensor([-126.7992, -146.8395,  -93.3832,  -80.1420,  -88.0634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1906, device='cuda:0', dtype=torch.float64)
tensor([-126.9115, -146.8151,  -93.0419,  -80.2270,  -88.0790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1700, device='cuda:0', dtype=torch.float64)
tensor([-126.8752, -146.5097,  -92.7022,  -80.2420,  -87.9290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2053, device='cuda:0', dtype=torch.float64)
tensor([-126.8902, -146.2317,  -92.3343,  -80.2907,  -87.8647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1768, device='cuda:0', dtype=torch.float64)
tensor([-127.0514, -146.0646,  -92.0269,  -80.3748,  -87.8019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1968, device='cuda:0', dtype=torch.float64)
tensor([-127.2976, -146.0552,  -91.7656,  -80.4291,  -87.7567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1919, device='cuda:0', dtype=torch.float64)
tensor([-127.3877, -146.0056,  -91.3884,  -80.4377,  -87.6233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1944, device='cuda:0', dtype=torch.float64)
tensor([-127.5213, -146.0373,  -90.9777,  -80.5128,  -87.5134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1688, device='cuda:0', dtype=torch.float64)
tensor([-127.6755, -146.2019,  -90.7133,  -80.6257,  -87.5756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2169, device='cuda:0', dtype=torch.float64)
tensor([-127.7421, -146.2864,  -90.4154,  -80.7514,  -87.5405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2013, device='cuda:0', dtype=torch.float64)
tensor([-127.8561, -146.4772,  -90.0824,  -80.8751,  -87.5530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2085, device='cuda:0', dtype=torch.float64)
tensor([-128.0340, -146.7293,  -90.0622,  -80.9627,  -87.6997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1789, device='cuda:0', dtype=torch.float64)
tensor([-128.1898, -146.8738,  -89.9915,  -81.0039,  -87.7535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1945, device='cuda:0', dtype=torch.float64)
tensor([-128.4536, -147.0604,  -89.9730,  -81.1093,  -87.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1750, device='cuda:0', dtype=torch.float64)
tensor([-128.6823, -147.2185,  -89.9906,  -81.1975,  -87.8618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1608, device='cuda:0', dtype=torch.float64)
tensor([-128.8413, -147.4651,  -90.0365,  -81.2503,  -87.9517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1865, device='cuda:0', dtype=torch.float64)
tensor([-129.0756, -147.7284,  -89.9896,  -81.3187,  -87.9660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1818, device='cuda:0', dtype=torch.float64)
tensor([-129.4234, -148.0831,  -89.8915,  -81.4491,  -88.0995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1854, device='cuda:0', dtype=torch.float64)
tensor([-129.7338, -148.4400,  -89.8385,  -81.5482,  -88.2168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1966, device='cuda:0', dtype=torch.float64)
tensor([-129.9216, -148.7682,  -89.8639,  -81.7126,  -88.3554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1699, device='cuda:0', dtype=torch.float64)
tensor([-130.0654, -149.0319,  -89.8835,  -81.8381,  -88.4200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1800, device='cuda:0', dtype=torch.float64)
tensor([-130.1161, -149.4379,  -90.0280,  -82.0019,  -88.5882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1800, device='cuda:0', dtype=torch.float64)
tensor([-130.2313, -149.7527,  -90.1363,  -82.1718,  -88.8245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1619, device='cuda:0', dtype=torch.float64)
tensor([-130.3236, -150.0643,  -90.2562,  -82.3761,  -89.0895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1630, device='cuda:0', dtype=torch.float64)
tensor([-130.4381, -150.4978,  -90.3144,  -82.7234,  -89.4202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1908, device='cuda:0', dtype=torch.float64)
tensor([-130.5530, -150.9062,  -90.5456,  -83.0519,  -89.9220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2133, device='cuda:0', dtype=torch.float64)
tensor([-130.6065, -151.4062,  -90.7641,  -83.4388,  -90.4062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1874, device='cuda:0', dtype=torch.float64)
tensor([-130.5891, -151.9786,  -90.8749,  -83.8300,  -90.9047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1774, device='cuda:0', dtype=torch.float64)
tensor([-130.7880, -152.5269,  -90.9812,  -84.2137,  -91.4291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1513, device='cuda:0', dtype=torch.float64)
tensor([-131.0238, -153.0355,  -91.2091,  -84.6180,  -91.9301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2017, device='cuda:0', dtype=torch.float64)
tensor([-131.2250, -153.3036,  -91.3852,  -84.9054,  -92.4192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1563, device='cuda:0', dtype=torch.float64)
tensor([-131.3833, -153.4343,  -91.6249,  -85.2033,  -92.7518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1867, device='cuda:0', dtype=torch.float64)
tensor([-131.7215, -153.5273,  -91.7086,  -85.4730,  -92.9646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2003, device='cuda:0', dtype=torch.float64)
tensor([-132.0629, -153.8176,  -91.7433,  -85.8223,  -93.2712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1838, device='cuda:0', dtype=torch.float64)
tensor([-132.4552, -154.0280,  -91.8231,  -86.1690,  -93.5679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1689, device='cuda:0', dtype=torch.float64)
tensor([-132.8363, -154.1030,  -91.9882,  -86.4675,  -93.7611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1926, device='cuda:0', dtype=torch.float64)
tensor([-133.1286, -154.2498,  -92.0378,  -86.7547,  -94.1027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1770, device='cuda:0', dtype=torch.float64)
tensor([-133.5952, -154.5481,  -92.1384,  -86.9796,  -94.3905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1517, device='cuda:0', dtype=torch.float64)
tensor([-134.0556, -154.7543,  -92.1967,  -87.2200,  -94.6517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1619, device='cuda:0', dtype=torch.float64)
tensor([-134.6018, -154.7934,  -92.1211,  -87.3951,  -94.6032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1861, device='cuda:0', dtype=torch.float64)
tensor([-135.0877, -154.8883,  -92.0968,  -87.5627,  -94.5875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1717, device='cuda:0', dtype=torch.float64)
tensor([-135.5779, -154.9819,  -92.0764,  -87.6132,  -94.4840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1664, device='cuda:0', dtype=torch.float64)
tensor([-136.0604, -155.0495,  -92.1182,  -87.6411,  -94.3769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1764, device='cuda:0', dtype=torch.float64)
tensor([-136.3769, -155.1137,  -92.3030,  -87.6578,  -94.2727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1559, device='cuda:0', dtype=torch.float64)
tensor([-136.7099, -155.1580,  -92.5197,  -87.6226,  -94.1935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1479, device='cuda:0', dtype=torch.float64)
tensor([-136.9654, -155.0363,  -92.6317,  -87.5309,  -93.9982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1723, device='cuda:0', dtype=torch.float64)
tensor([-137.1675, -154.8716,  -92.7603,  -87.3892,  -93.8334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1557, device='cuda:0', dtype=torch.float64)
tensor([-137.3771, -154.6618,  -92.8178,  -87.2699,  -93.6293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1578, device='cuda:0', dtype=torch.float64)
tensor([-137.5817, -154.4425,  -92.7927,  -87.0767,  -93.3724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1431, device='cuda:0', dtype=torch.float64)
tensor([-137.8861, -154.2910,  -92.8186,  -86.9911,  -93.3075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1711, device='cuda:0', dtype=torch.float64)
tensor([-138.1094, -154.0432,  -92.7797,  -86.7735,  -93.0137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1518, device='cuda:0', dtype=torch.float64)
tensor([-138.3310, -153.8015,  -92.7173,  -86.5238,  -92.5744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1710, device='cuda:0', dtype=torch.float64)
tensor([-138.4713, -153.4752,  -92.7390,  -86.2888,  -92.2424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1636, device='cuda:0', dtype=torch.float64)
tensor([-138.5522, -153.0796,  -92.9252,  -85.9740,  -91.9858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1211, device='cuda:0', dtype=torch.float64)
tensor([-138.6057, -152.6905,  -93.0074,  -85.5949,  -91.7201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1690, device='cuda:0', dtype=torch.float64)
tensor([-138.6517, -152.2586,  -93.1067,  -85.2149,  -91.3445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1249, device='cuda:0', dtype=torch.float64)
tensor([-138.6735, -151.7755,  -93.3045,  -84.8828,  -90.9965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1805, device='cuda:0', dtype=torch.float64)
tensor([-138.8839, -151.5182,  -93.7099,  -84.7076,  -90.9926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1599, device='cuda:0', dtype=torch.float64)
tensor([-139.1571, -151.2873,  -94.1576,  -84.6035,  -91.0371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1517, device='cuda:0', dtype=torch.float64)
tensor([-139.3081, -150.8909,  -94.5803,  -84.4820,  -90.8760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1365, device='cuda:0', dtype=torch.float64)
tensor([-139.3342, -150.4760,  -94.9351,  -84.3309,  -90.5993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1501, device='cuda:0', dtype=torch.float64)
tensor([-139.3626, -150.1871,  -95.1554,  -84.1845,  -90.3232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1435, device='cuda:0', dtype=torch.float64)
tensor([-139.3296, -149.7630,  -95.3163,  -83.9413,  -90.0104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1499, device='cuda:0', dtype=torch.float64)
tensor([-139.3757, -149.5589,  -95.4997,  -83.7436,  -89.7973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1587, device='cuda:0', dtype=torch.float64)
tensor([-139.4555, -149.3898,  -95.5654,  -83.6163,  -89.5121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1525, device='cuda:0', dtype=torch.float64)
tensor([-139.4170, -149.1921,  -95.6233,  -83.4670,  -89.1556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1680, device='cuda:0', dtype=torch.float64)
tensor([-139.4066, -148.9518,  -95.5561,  -83.3045,  -88.7203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1698, device='cuda:0', dtype=torch.float64)
tensor([-139.4391, -148.8253,  -95.5983,  -83.2363,  -88.3564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1470, device='cuda:0', dtype=torch.float64)
tensor([-139.5346, -148.7912,  -95.6700,  -83.1199,  -87.9583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1573, device='cuda:0', dtype=torch.float64)
tensor([-139.5634, -148.7158,  -95.7765,  -83.0298,  -87.5953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1555, device='cuda:0', dtype=torch.float64)
tensor([-139.4708, -148.7376,  -95.9152,  -83.0697,  -87.3888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1739, device='cuda:0', dtype=torch.float64)
tensor([-139.5373, -148.9308,  -95.9993,  -83.1441,  -87.2584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1459, device='cuda:0', dtype=torch.float64)
tensor([-139.6787, -149.0459,  -96.1058,  -83.2197,  -87.1254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1251, device='cuda:0', dtype=torch.float64)
tensor([-139.8156, -149.2072,  -96.1721,  -83.2881,  -87.1299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1384, device='cuda:0', dtype=torch.float64)
tensor([-139.9451, -149.4716,  -96.2776,  -83.3705,  -87.2170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1411, device='cuda:0', dtype=torch.float64)
tensor([-139.9877, -149.6489,  -96.3993,  -83.4135,  -87.3304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1584, device='cuda:0', dtype=torch.float64)
tensor([-140.0420, -149.7439,  -96.5022,  -83.4492,  -87.3800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1794, device='cuda:0', dtype=torch.float64)
tensor([-140.0335, -149.7426,  -96.7201,  -83.4442,  -87.4411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1448, device='cuda:0', dtype=torch.float64)
tensor([-140.0954, -149.9139,  -96.8795,  -83.4685,  -87.5867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1436, device='cuda:0', dtype=torch.float64)
tensor([-140.2045, -150.1118,  -97.0747,  -83.4350,  -87.7066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1187, device='cuda:0', dtype=torch.float64)
tensor([-140.2721, -150.1955,  -97.1980,  -83.3079,  -87.7555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1244, device='cuda:0', dtype=torch.float64)
tensor([-140.2741, -150.1871,  -97.2299,  -83.1539,  -87.6501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1368, device='cuda:0', dtype=torch.float64)
tensor([-140.3770, -150.2129,  -97.2393,  -83.0740,  -87.6776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1437, device='cuda:0', dtype=torch.float64)
tensor([-140.5095, -150.2735,  -97.2521,  -82.9326,  -87.7382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1422, device='cuda:0', dtype=torch.float64)
tensor([-140.5768, -150.4521,  -97.1752,  -82.8261,  -87.8103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1442, device='cuda:0', dtype=torch.float64)
tensor([-140.7707, -150.6250,  -97.0973,  -82.7096,  -87.8450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1463, device='cuda:0', dtype=torch.float64)
tensor([-141.0653, -150.9235,  -97.0911,  -82.7085,  -88.0367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1172, device='cuda:0', dtype=torch.float64)
tensor([-141.3957, -151.3199,  -97.0440,  -82.7250,  -88.2443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1336, device='cuda:0', dtype=torch.float64)
tensor([-141.5816, -151.5545,  -97.1623,  -82.7003,  -88.3214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1753, device='cuda:0', dtype=torch.float64)
tensor([-141.5248, -151.6138,  -97.1309,  -82.5243,  -88.2518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1251, device='cuda:0', dtype=torch.float64)
tensor([-141.5998, -151.6951,  -97.0541,  -82.4467,  -88.3469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1710, device='cuda:0', dtype=torch.float64)
tensor([-141.6813, -151.7537,  -96.9665,  -82.3729,  -88.3626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1457, device='cuda:0', dtype=torch.float64)
tensor([-141.7959, -151.8899,  -96.8519,  -82.3401,  -88.4378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1223, device='cuda:0', dtype=torch.float64)
tensor([-141.8825, -151.9816,  -96.7812,  -82.3034,  -88.5752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1256, device='cuda:0', dtype=torch.float64)
tensor([-141.9259, -152.0518,  -96.6683,  -82.2065,  -88.6975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1275, device='cuda:0', dtype=torch.float64)
tensor([-141.9562, -152.0480,  -96.5644,  -82.1030,  -88.7640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1229, device='cuda:0', dtype=torch.float64)
tensor([-141.8990, -152.0854,  -96.4679,  -82.0570,  -88.8761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1213, device='cuda:0', dtype=torch.float64)
tensor([-141.8968, -152.1385,  -96.4625,  -82.0604,  -88.9814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1355, device='cuda:0', dtype=torch.float64)
tensor([-141.8595, -152.1551,  -96.4305,  -82.1101,  -89.0954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1347, device='cuda:0', dtype=torch.float64)
tensor([-141.8342, -152.1954,  -96.4165,  -82.2192,  -89.2584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1183, device='cuda:0', dtype=torch.float64)
tensor([-141.8585, -152.1814,  -96.4711,  -82.3104,  -89.3378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1089, device='cuda:0', dtype=torch.float64)
tensor([-141.8306, -152.0298,  -96.5116,  -82.4458,  -89.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1580, device='cuda:0', dtype=torch.float64)
tensor([-141.9645, -151.8988,  -96.6429,  -82.5994,  -89.5057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1107, device='cuda:0', dtype=torch.float64)
tensor([-142.0827, -151.7833,  -96.7908,  -82.7108,  -89.6949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1350, device='cuda:0', dtype=torch.float64)
tensor([-142.1669, -151.5237,  -96.9463,  -82.7255,  -89.7340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1095, device='cuda:0', dtype=torch.float64)
tensor([-142.1674, -151.1762,  -97.1121,  -82.7144,  -89.7188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1379, device='cuda:0', dtype=torch.float64)
tensor([-142.1893, -150.9530,  -97.2350,  -82.7603,  -89.8494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1096, device='cuda:0', dtype=torch.float64)
tensor([-142.2330, -150.7885,  -97.3013,  -82.7867,  -89.8813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1082, device='cuda:0', dtype=torch.float64)
tensor([-142.2456, -150.6478,  -97.2925,  -82.8022,  -89.8723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0965, device='cuda:0', dtype=torch.float64)
tensor([-142.3023, -150.5622,  -97.2809,  -82.8181,  -89.8479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1204, device='cuda:0', dtype=torch.float64)
tensor([-142.3871, -150.4143,  -97.2948,  -82.8367,  -89.8407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1328, device='cuda:0', dtype=torch.float64)
tensor([-142.3861, -150.2758,  -97.3075,  -82.8008,  -89.7892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1284, device='cuda:0', dtype=torch.float64)
tensor([-142.3622, -150.1996,  -97.3146,  -82.8067,  -89.6957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1251, device='cuda:0', dtype=torch.float64)
tensor([-142.3637, -150.0765,  -97.3507,  -82.8052,  -89.6015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1196, device='cuda:0', dtype=torch.float64)
tensor([-142.2860, -149.9626,  -97.3798,  -82.7957,  -89.4506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1124, device='cuda:0', dtype=torch.float64)
tensor([-142.2051, -149.8904,  -97.4052,  -82.7713,  -89.3256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1095, device='cuda:0', dtype=torch.float64)
tensor([-142.0977, -149.7583,  -97.4054,  -82.7439,  -89.2309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1159, device='cuda:0', dtype=torch.float64)
tensor([-141.9207, -149.4976,  -97.3964,  -82.6571,  -88.9836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1199, device='cuda:0', dtype=torch.float64)
tensor([-141.6715, -149.2326,  -97.3683,  -82.5607,  -88.6582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1308, device='cuda:0', dtype=torch.float64)
tensor([-141.5548, -149.1213,  -97.4210,  -82.5196,  -88.4582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1126, device='cuda:0', dtype=torch.float64)
tensor([-141.4767, -148.9964,  -97.5048,  -82.4065,  -88.1652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1315, device='cuda:0', dtype=torch.float64)
tensor([-141.4470, -148.9587,  -97.6113,  -82.2909,  -87.8442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1035, device='cuda:0', dtype=torch.float64)
tensor([-141.3030, -148.8008,  -97.6351,  -82.1375,  -87.4839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1236, device='cuda:0', dtype=torch.float64)
tensor([-141.2654, -148.7517,  -97.8456,  -82.0073,  -87.1994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1127, device='cuda:0', dtype=torch.float64)
tensor([-141.2822, -148.7780,  -97.9945,  -81.9067,  -86.9413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1236, device='cuda:0', dtype=torch.float64)
tensor([-141.3845, -148.6617,  -98.0887,  -81.7731,  -86.5481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1058, device='cuda:0', dtype=torch.float64)
tensor([-141.5210, -148.5462,  -98.1769,  -81.6629,  -86.1507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1086, device='cuda:0', dtype=torch.float64)
tensor([-141.7295, -148.3607,  -98.3353,  -81.5528,  -85.8862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0949, device='cuda:0', dtype=torch.float64)
tensor([-141.9144, -148.2178,  -98.4486,  -81.4807,  -85.6399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0996, device='cuda:0', dtype=torch.float64)
tensor([-142.0446, -148.0404,  -98.5125,  -81.4546,  -85.4146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0917, device='cuda:0', dtype=torch.float64)
tensor([-142.1571, -147.8176,  -98.5177,  -81.4305,  -85.1931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1005, device='cuda:0', dtype=torch.float64)
tensor([-142.1505, -147.5839,  -98.5306,  -81.3932,  -85.0041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0942, device='cuda:0', dtype=torch.float64)
tensor([-142.1856, -147.4032,  -98.5266,  -81.3528,  -84.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0968, device='cuda:0', dtype=torch.float64)
tensor([-142.2859, -147.1806,  -98.5378,  -81.3096,  -84.7478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1058, device='cuda:0', dtype=torch.float64)
tensor([-142.3604, -147.0240,  -98.6215,  -81.3070,  -84.7212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1134, device='cuda:0', dtype=torch.float64)
tensor([-142.5288, -146.7790,  -98.6979,  -81.2321,  -84.6506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1137, device='cuda:0', dtype=torch.float64)
tensor([-142.6691, -146.5333,  -98.7839,  -81.1864,  -84.6057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0850, device='cuda:0', dtype=torch.float64)
tensor([-142.7558, -146.3269,  -98.8241,  -81.1416,  -84.5487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1079, device='cuda:0', dtype=torch.float64)
tensor([-142.9127, -146.1390,  -98.8891,  -81.0910,  -84.5518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1088, device='cuda:0', dtype=torch.float64)
tensor([-143.1495, -145.8140,  -98.9616,  -81.0309,  -84.4804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-143.3658, -145.5230,  -99.0410,  -80.9739,  -84.4093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1122, device='cuda:0', dtype=torch.float64)
tensor([-143.6439, -145.3357,  -99.1256,  -80.8795,  -84.4286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0994, device='cuda:0', dtype=torch.float64)
tensor([-143.9928, -145.1805,  -99.1319,  -80.8425,  -84.4067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0823, device='cuda:0', dtype=torch.float64)
tensor([-144.3130, -145.0088,  -99.1337,  -80.7757,  -84.3929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1076, device='cuda:0', dtype=torch.float64)
tensor([-144.6212, -144.9011,  -99.1474,  -80.7124,  -84.3867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1035, device='cuda:0', dtype=torch.float64)
tensor([-144.8578, -144.8055,  -99.1529,  -80.6699,  -84.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1085, device='cuda:0', dtype=torch.float64)
tensor([-145.0446, -144.6412,  -99.1417,  -80.6006,  -84.2062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1069, device='cuda:0', dtype=torch.float64)
tensor([-145.2043, -144.4694,  -99.1234,  -80.5328,  -84.0715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1016, device='cuda:0', dtype=torch.float64)
tensor([-145.3038, -144.3132,  -99.0747,  -80.4426,  -83.9224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1144, device='cuda:0', dtype=torch.float64)
tensor([-145.4717, -144.2322,  -98.9827,  -80.3829,  -83.8142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0834, device='cuda:0', dtype=torch.float64)
tensor([-145.7027, -144.1972,  -98.9673,  -80.3396,  -83.7787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1083, device='cuda:0', dtype=torch.float64)
tensor([-145.9401, -144.2782,  -98.9473,  -80.2835,  -83.8133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1083, device='cuda:0', dtype=torch.float64)
tensor([-146.1471, -144.3484,  -98.9203,  -80.2191,  -83.8259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1059, device='cuda:0', dtype=torch.float64)
tensor([-146.3765, -144.5626,  -98.9127,  -80.2309,  -83.9177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0890, device='cuda:0', dtype=torch.float64)
tensor([-146.5321, -144.7574,  -98.8800,  -80.1997,  -83.9723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1153, device='cuda:0', dtype=torch.float64)
tensor([-146.7408, -144.9628,  -98.9208,  -80.1714,  -84.1086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1047, device='cuda:0', dtype=torch.float64)
tensor([-146.8812, -145.1986,  -98.9600,  -80.2095,  -84.3199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-146.9975, -145.4100,  -99.0594,  -80.2323,  -84.4249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0917, device='cuda:0', dtype=torch.float64)
tensor([-147.0653, -145.5157,  -99.1315,  -80.2186,  -84.4265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0974, device='cuda:0', dtype=torch.float64)
tensor([-147.1440, -145.6827,  -99.1965,  -80.1803,  -84.4473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1138, device='cuda:0', dtype=torch.float64)
tensor([-147.2046, -145.8242,  -99.3023,  -80.1444,  -84.4081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-147.2390, -145.9621,  -99.4367,  -80.1232,  -84.3530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0719, device='cuda:0', dtype=torch.float64)
tensor([-147.2073, -146.0514,  -99.5863,  -80.1010,  -84.2965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0969, device='cuda:0', dtype=torch.float64)
tensor([-147.1525, -146.1471,  -99.7437,  -80.1039,  -84.1890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-147.0904, -146.1907,  -99.9254,  -80.1314,  -84.0792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0898, device='cuda:0', dtype=torch.float64)
tensor([-147.0592, -146.3667, -100.1600,  -80.1785,  -84.0262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0923, device='cuda:0', dtype=torch.float64)
tensor([-147.0205, -146.6328, -100.3633,  -80.2514,  -84.0119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-146.8911, -146.7997, -100.5401,  -80.2935,  -83.9484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0863, device='cuda:0', dtype=torch.float64)
tensor([-146.7877, -146.8431, -100.7539,  -80.2907,  -83.8095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1049, device='cuda:0', dtype=torch.float64)
tensor([-146.6696, -146.8530, -100.8928,  -80.2613,  -83.6468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0878, device='cuda:0', dtype=torch.float64)
tensor([-146.5731, -146.8367, -101.0467,  -80.2397,  -83.5485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0980, device='cuda:0', dtype=torch.float64)
tensor([-146.4087, -146.9001, -101.2088,  -80.2537,  -83.5110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0817, device='cuda:0', dtype=torch.float64)
tensor([-146.2233, -146.9402, -101.3068,  -80.2677,  -83.3962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1067, device='cuda:0', dtype=torch.float64)
tensor([-145.9589, -146.9413, -101.4065,  -80.2626,  -83.2145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0810, device='cuda:0', dtype=torch.float64)
tensor([-145.7688, -146.9800, -101.4674,  -80.2614,  -83.0228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1008, device='cuda:0', dtype=torch.float64)
tensor([-145.5772, -146.9766, -101.4713,  -80.2337,  -82.7973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0820, device='cuda:0', dtype=torch.float64)
tensor([-145.4210, -147.0190, -101.4220,  -80.2186,  -82.6020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-145.2897, -147.0243, -101.3835,  -80.2324,  -82.4684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0856, device='cuda:0', dtype=torch.float64)
tensor([-145.2012, -147.1757, -101.3713,  -80.2486,  -82.4521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0792, device='cuda:0', dtype=torch.float64)
tensor([-145.1028, -147.2694, -101.3053,  -80.2368,  -82.4239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0871, device='cuda:0', dtype=torch.float64)
tensor([-145.0136, -147.2738, -101.2590,  -80.2572,  -82.3980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0737, device='cuda:0', dtype=torch.float64)
tensor([-144.8918, -147.2659, -101.2012,  -80.2594,  -82.3985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0889, device='cuda:0', dtype=torch.float64)
tensor([-144.8291, -147.2733, -101.2001,  -80.2270,  -82.4380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0943, device='cuda:0', dtype=torch.float64)
tensor([-144.7724, -147.3518, -101.1688,  -80.2242,  -82.4485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1067, device='cuda:0', dtype=torch.float64)
tensor([-144.7388, -147.3027, -101.0801,  -80.1634,  -82.3672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0910, device='cuda:0', dtype=torch.float64)
tensor([-144.7356, -147.1847, -101.0852,  -80.1218,  -82.2737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0724, device='cuda:0', dtype=torch.float64)
tensor([-144.7872, -147.1090, -101.0328,  -80.0407,  -82.1355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0823, device='cuda:0', dtype=torch.float64)
tensor([-144.8380, -147.1085, -100.9698,  -79.9959,  -82.0563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0681, device='cuda:0', dtype=torch.float64)
tensor([-144.9616, -147.1788, -100.9343,  -79.9896,  -81.9978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0942, device='cuda:0', dtype=torch.float64)
tensor([-145.1759, -147.2557, -100.9324,  -80.0392,  -81.9374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-145.3253, -147.2970, -100.9236,  -80.1112,  -81.9139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0764, device='cuda:0', dtype=torch.float64)
tensor([-145.4403, -147.2979, -100.9693,  -80.1824,  -81.8831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0679, device='cuda:0', dtype=torch.float64)
tensor([-145.5470, -147.2422, -101.0280,  -80.2552,  -81.8051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0801, device='cuda:0', dtype=torch.float64)
tensor([-145.6766, -147.1466, -101.0683,  -80.2831,  -81.7760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-145.7952, -147.0207, -101.1474,  -80.3102,  -81.7271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0834, device='cuda:0', dtype=torch.float64)
tensor([-145.8424, -146.8878, -101.2360,  -80.3178,  -81.7018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0728, device='cuda:0', dtype=torch.float64)
tensor([-145.9286, -146.8207, -101.2375,  -80.3239,  -81.6429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0762, device='cuda:0', dtype=torch.float64)
tensor([-146.1532, -146.8553, -101.2952,  -80.3645,  -81.6964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0728, device='cuda:0', dtype=torch.float64)
tensor([-146.3548, -146.9258, -101.3714,  -80.3782,  -81.7771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0881, device='cuda:0', dtype=torch.float64)
tensor([-146.5675, -147.0333, -101.4061,  -80.3856,  -81.8613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0875, device='cuda:0', dtype=torch.float64)
tensor([-146.8214, -147.1095, -101.5009,  -80.3529,  -81.9859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0676, device='cuda:0', dtype=torch.float64)
tensor([-146.9890, -147.0368, -101.6119,  -80.2787,  -82.0854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0768, device='cuda:0', dtype=torch.float64)
tensor([-147.1417, -146.9974, -101.7674,  -80.2484,  -82.2623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-147.2784, -147.0228, -101.9657,  -80.2540,  -82.5183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0701, device='cuda:0', dtype=torch.float64)
tensor([-147.3498, -147.0915, -102.1612,  -80.2645,  -82.8001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-147.3804, -147.2170, -102.3909,  -80.3014,  -83.1549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0704, device='cuda:0', dtype=torch.float64)
tensor([-147.3869, -147.2440, -102.5683,  -80.3178,  -83.4233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0815, device='cuda:0', dtype=torch.float64)
tensor([-147.4836, -147.3263, -102.7568,  -80.3536,  -83.6821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0711, device='cuda:0', dtype=torch.float64)
tensor([-147.5944, -147.3564, -102.8884,  -80.4082,  -83.9075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0788, device='cuda:0', dtype=torch.float64)
tensor([-147.7775, -147.3588, -102.9846,  -80.4599,  -84.0540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0657, device='cuda:0', dtype=torch.float64)
tensor([-147.8931, -147.3666, -103.1020,  -80.4983,  -84.1923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0828, device='cuda:0', dtype=torch.float64)
tensor([-147.9697, -147.3730, -103.2249,  -80.5358,  -84.3329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0602, device='cuda:0', dtype=torch.float64)
tensor([-148.0327, -147.3430, -103.3398,  -80.5551,  -84.4968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0758, device='cuda:0', dtype=torch.float64)
tensor([-148.0831, -147.2683, -103.4455,  -80.5478,  -84.5786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-148.1702, -147.2428, -103.5749,  -80.5577,  -84.7130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0679, device='cuda:0', dtype=torch.float64)
tensor([-148.2633, -147.2537, -103.6843,  -80.5809,  -84.8398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-148.3751, -147.3110, -103.7974,  -80.6097,  -84.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0651, device='cuda:0', dtype=torch.float64)
tensor([-148.4863, -147.3732, -103.9133,  -80.6810,  -85.0255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0569, device='cuda:0', dtype=torch.float64)
tensor([-148.6115, -147.4045, -104.0498,  -80.7540,  -85.1076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0567, device='cuda:0', dtype=torch.float64)
tensor([-148.6941, -147.4783, -104.2024,  -80.8379,  -85.2480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-148.7161, -147.5053, -104.3746,  -80.9372,  -85.4440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-148.6811, -147.5319, -104.5452,  -81.0004,  -85.5763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0732, device='cuda:0', dtype=torch.float64)
tensor([-148.6043, -147.5595, -104.6932,  -81.0487,  -85.6629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0676, device='cuda:0', dtype=torch.float64)
tensor([-148.5233, -147.5501, -104.7753,  -81.0905,  -85.6638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0696, device='cuda:0', dtype=torch.float64)
tensor([-148.4117, -147.4516, -104.8656,  -81.0821,  -85.6191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0633, device='cuda:0', dtype=torch.float64)
tensor([-148.3138, -147.3442, -104.9566,  -81.0780,  -85.6082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0778, device='cuda:0', dtype=torch.float64)
tensor([-148.2132, -147.3166, -105.0726,  -81.0974,  -85.6514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-148.1797, -147.2876, -105.1999,  -81.0999,  -85.6832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-148.1179, -147.2385, -105.3265,  -81.1239,  -85.7028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0831, device='cuda:0', dtype=torch.float64)
tensor([-147.9542, -147.1653, -105.4554,  -81.2101,  -85.7554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0612, device='cuda:0', dtype=torch.float64)
tensor([-147.8620, -147.2238, -105.5951,  -81.2933,  -85.8310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0711, device='cuda:0', dtype=torch.float64)
tensor([-147.7856, -147.4033, -105.6830,  -81.3909,  -85.8794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0645, device='cuda:0', dtype=torch.float64)
tensor([-147.6444, -147.5241, -105.7778,  -81.4822,  -85.8491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0680, device='cuda:0', dtype=torch.float64)
tensor([-147.5682, -147.6878, -105.8735,  -81.5876,  -85.8931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0703, device='cuda:0', dtype=torch.float64)
tensor([-147.5269, -147.8103, -105.9032,  -81.6787,  -85.8830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-147.4915, -147.9156, -105.9680,  -81.7514,  -85.8326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-147.4286, -147.9740, -106.0422,  -81.7902,  -85.7706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-147.3026, -148.0127, -106.0652,  -81.8207,  -85.7137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-147.1384, -148.1012, -106.0729,  -81.8689,  -85.6678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0646, device='cuda:0', dtype=torch.float64)
tensor([-146.9525, -148.1180, -106.0744,  -81.8860,  -85.5654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-146.7478, -148.1391, -106.0497,  -81.8923,  -85.4606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-146.5930, -148.2224, -106.0658,  -81.8961,  -85.4074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-146.4048, -148.2815, -106.0463,  -81.9083,  -85.3571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0607, device='cuda:0', dtype=torch.float64)
tensor([-146.1977, -148.3892, -106.0400,  -81.9243,  -85.2969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-145.9723, -148.4449, -106.0478,  -81.9273,  -85.2508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-145.7087, -148.4296, -106.0921,  -81.9165,  -85.2171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-145.5095, -148.3674, -106.1223,  -81.8778,  -85.1569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-145.3042, -148.2635, -106.1269,  -81.8466,  -85.0850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0678, device='cuda:0', dtype=torch.float64)
tensor([-145.0838, -148.1096, -106.1054,  -81.7829,  -84.9878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-144.8934, -148.0090, -106.1360,  -81.7387,  -84.9272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0720, device='cuda:0', dtype=torch.float64)
tensor([-144.7288, -147.8961, -106.1439,  -81.7035,  -84.8447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-144.6258, -147.7883, -106.1657,  -81.6612,  -84.8039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-144.5180, -147.7394, -106.2208,  -81.6574,  -84.8472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0591, device='cuda:0', dtype=torch.float64)
tensor([-144.3917, -147.6882, -106.2716,  -81.6581,  -84.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-144.2878, -147.6279, -106.3255,  -81.6514,  -84.9730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0591, device='cuda:0', dtype=torch.float64)
tensor([-144.2115, -147.5932, -106.3779,  -81.6200,  -85.0011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-144.1212, -147.5510, -106.4382,  -81.5889,  -85.0561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0685, device='cuda:0', dtype=torch.float64)
tensor([-143.9936, -147.5276, -106.5053,  -81.5455,  -85.1307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0588, device='cuda:0', dtype=torch.float64)
tensor([-143.8236, -147.5189, -106.5561,  -81.4677,  -85.2245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-143.6504, -147.6089, -106.6105,  -81.4161,  -85.3673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-143.5003, -147.6918, -106.6723,  -81.3746,  -85.4591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0602, device='cuda:0', dtype=torch.float64)
tensor([-143.3764, -147.7796, -106.7476,  -81.3539,  -85.5746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-143.2990, -147.8635, -106.8475,  -81.3485,  -85.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0674, device='cuda:0', dtype=torch.float64)
tensor([-143.2188, -147.9994, -106.9692,  -81.4068,  -85.8641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-143.1362, -148.1021, -107.0996,  -81.4737,  -86.0364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-143.0593, -148.2608, -107.2206,  -81.5565,  -86.2022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-142.9649, -148.3786, -107.3285,  -81.6265,  -86.3765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-142.8829, -148.4801, -107.4517,  -81.6977,  -86.4994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-142.7522, -148.5648, -107.5641,  -81.7476,  -86.6370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-142.5746, -148.6002, -107.7207,  -81.7976,  -86.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-142.4284, -148.6419, -107.8885,  -81.8397,  -86.8838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0572, device='cuda:0', dtype=torch.float64)
tensor([-142.3468, -148.7214, -108.0989,  -81.8887,  -87.0134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-142.2921, -148.8055, -108.3154,  -81.9632,  -87.2038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-142.2458, -148.8968, -108.5539,  -82.0422,  -87.4126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-142.2017, -149.0537, -108.7752,  -82.1574,  -87.6275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-142.1374, -149.1748, -108.9700,  -82.2882,  -87.8396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0651, device='cuda:0', dtype=torch.float64)
tensor([-142.0311, -149.2873, -109.1427,  -82.3965,  -87.9688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-141.9149, -149.4238, -109.2699,  -82.5289,  -88.0675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-141.7853, -149.5684, -109.3503,  -82.6572,  -88.1310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-141.6132, -149.6848, -109.3950,  -82.7701,  -88.1670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0565, device='cuda:0', dtype=torch.float64)
tensor([-141.4219, -149.7437, -109.4811,  -82.8879,  -88.2383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-141.2226, -149.7919, -109.5591,  -83.0151,  -88.3154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-141.0257, -149.8176, -109.6725,  -83.1293,  -88.4083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-140.8231, -149.8313, -109.7994,  -83.2435,  -88.5170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-140.6372, -149.8329, -109.9514,  -83.3413,  -88.6175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-140.4502, -149.8242, -110.1224,  -83.4171,  -88.7216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-140.2804, -149.8126, -110.3003,  -83.4963,  -88.8843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-140.0993, -149.7665, -110.4404,  -83.5580,  -89.0469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-139.8874, -149.7137, -110.5380,  -83.6063,  -89.1811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-139.6640, -149.6515, -110.6659,  -83.6441,  -89.2692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-139.4554, -149.5749, -110.7995,  -83.7017,  -89.3378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-139.2970, -149.5169, -110.9159,  -83.7834,  -89.3859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-139.1503, -149.5204, -110.9811,  -83.8542,  -89.4474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-138.9602, -149.5300, -111.0339,  -83.9157,  -89.5019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-138.7274, -149.5544, -111.1211,  -84.0143,  -89.6195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-138.4804, -149.5286, -111.2043,  -84.0960,  -89.6991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-138.2449, -149.5187, -111.3427,  -84.1782,  -89.7422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0686, device='cuda:0', dtype=torch.float64)
tensor([-138.0714, -149.6045, -111.4234,  -84.2766,  -89.8090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0538, device='cuda:0', dtype=torch.float64)
tensor([-137.8342, -149.6282, -111.5247,  -84.3603,  -89.8723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-137.5963, -149.6336, -111.5881,  -84.4242,  -89.8685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-137.3937, -149.6090, -111.6719,  -84.4480,  -89.8567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-137.1687, -149.6340, -111.7641,  -84.4564,  -89.8480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0569, device='cuda:0', dtype=torch.float64)
tensor([-136.9648, -149.6308, -111.9303,  -84.4737,  -89.8333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0565, device='cuda:0', dtype=torch.float64)
tensor([-136.7827, -149.6610, -112.1262,  -84.4733,  -89.8470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-136.6053, -149.6756, -112.3127,  -84.4662,  -89.8423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0559, device='cuda:0', dtype=torch.float64)
tensor([-136.4679, -149.7235, -112.4887,  -84.4611,  -89.8588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-136.2722, -149.7049, -112.6554,  -84.4552,  -89.8622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-136.1284, -149.7066, -112.7863,  -84.4242,  -89.8417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-135.9636, -149.7430, -112.9239,  -84.3817,  -89.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0570, device='cuda:0', dtype=torch.float64)
tensor([-135.8121, -149.8074, -113.0658,  -84.3446,  -89.8296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-135.6348, -149.8698, -113.1787,  -84.3130,  -89.8394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0514, device='cuda:0', dtype=torch.float64)
tensor([-135.4460, -149.8777, -113.3181,  -84.2975,  -89.8803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-135.2754, -149.8779, -113.4702,  -84.2898,  -89.9489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-135.1183, -149.8614, -113.6159,  -84.2571,  -90.0198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-134.9025, -149.7756, -113.7706,  -84.2494,  -90.1097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-134.7176, -149.6933, -113.9386,  -84.2319,  -90.1929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-134.4961, -149.6210, -114.1322,  -84.2281,  -90.3218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-134.2258, -149.4781, -114.2790,  -84.2199,  -90.4323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-133.9289, -149.3727, -114.4241,  -84.2241,  -90.5989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-133.6373, -149.2493, -114.5254,  -84.2170,  -90.7383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-133.3622, -149.1936, -114.6581,  -84.2089,  -90.8696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-133.0880, -149.1443, -114.7898,  -84.1896,  -90.9866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-132.8243, -149.1071, -114.9186,  -84.1749,  -91.0951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-132.5774, -149.0906, -115.0704,  -84.1738,  -91.2466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-132.3097, -149.0613, -115.2541,  -84.1849,  -91.3798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0633, device='cuda:0', dtype=torch.float64)
tensor([-132.0311, -148.9795, -115.4103,  -84.1790,  -91.4414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-131.7305, -148.8690, -115.5364,  -84.1643,  -91.4692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-131.4149, -148.7470, -115.6453,  -84.1550,  -91.4968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-131.0874, -148.6555, -115.7773,  -84.1500,  -91.5724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-130.7704, -148.5732, -115.9219,  -84.1507,  -91.5986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-130.4340, -148.5328, -116.0546,  -84.1497,  -91.6453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-130.1109, -148.4556, -116.2010,  -84.1416,  -91.6709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-129.8307, -148.4685, -116.3056,  -84.1531,  -91.7043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-129.5627, -148.4097, -116.4111,  -84.1100,  -91.6368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0651, device='cuda:0', dtype=torch.float64)
tensor([-129.3116, -148.3866, -116.5669,  -84.0662,  -91.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0768, device='cuda:0', dtype=torch.float64)
tensor([-129.0096, -148.3265, -116.7045,  -84.0408,  -91.4036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-128.6954, -148.2754, -116.8100,  -84.0090,  -91.2904],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_101343.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(138.6168, device='cuda:0', dtype=torch.float64)
tensor([-2.2531, -4.4345, -3.0277, -6.9587, -3.6948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(97.8872, device='cuda:0', dtype=torch.float64)
tensor([-2.4037, -4.9450, -3.0157, -4.2146, -3.8887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(91.0915, device='cuda:0', dtype=torch.float64)
tensor([-2.4211, -5.1231, -3.0225, -3.8539, -4.4966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(59.1886, device='cuda:0', dtype=torch.float64)
tensor([-2.4943, -4.3653, -2.9882, -3.5113, -4.8512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(57.9273, device='cuda:0', dtype=torch.float64)
tensor([-2.4286, -4.9591, -2.9397, -5.2017, -4.9925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(72.1514, device='cuda:0', dtype=torch.float64)
tensor([-2.1464, -4.5404, -2.8432, -5.4763, -5.1255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(69.9044, device='cuda:0', dtype=torch.float64)
tensor([-1.8944, -3.4944, -2.7820, -3.8073, -4.6323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.6273, device='cuda:0', dtype=torch.float64)
tensor([-1.7546, -3.2292, -2.8233, -3.9444, -4.0311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.7692, device='cuda:0', dtype=torch.float64)
tensor([-1.7298, -3.6165, -2.9324, -4.2349, -3.6444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2802, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -3.8360, -3.0416, -4.4402, -3.5003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.1544, device='cuda:0', dtype=torch.float64)
tensor([-2.0920, -3.5118, -3.1406, -4.4934, -3.4639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.6193, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -3.1115, -3.2194, -4.2389, -3.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.9415, device='cuda:0', dtype=torch.float64)
tensor([-1.6627, -2.8638, -3.2916, -3.8782, -3.2754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.8497, device='cuda:0', dtype=torch.float64)
tensor([-1.5941, -2.7318, -3.4032, -3.6519, -3.1994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.0237, device='cuda:0', dtype=torch.float64)
tensor([-1.6078, -2.7086, -3.3627, -3.4975, -3.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.8385, device='cuda:0', dtype=torch.float64)
tensor([-1.6767, -2.7614, -3.2697, -3.3691, -3.2649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4041, device='cuda:0', dtype=torch.float64)
tensor([-1.7900, -2.8864, -3.3044, -3.2569, -3.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4359, device='cuda:0', dtype=torch.float64)
tensor([-1.9213, -3.0844, -3.4084, -3.1558, -3.5052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.9588, device='cuda:0', dtype=torch.float64)
tensor([-2.0369, -3.2410, -3.4546, -3.0732, -3.5190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9140, device='cuda:0', dtype=torch.float64)
tensor([-2.1240, -3.2302, -3.3945, -3.0197, -3.4987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6348, device='cuda:0', dtype=torch.float64)
tensor([-2.1827, -3.1647, -3.2818, -2.9915, -3.4804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.1657, device='cuda:0', dtype=torch.float64)
tensor([-2.2095, -3.1064, -3.1741, -2.9814, -3.4354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.3974, device='cuda:0', dtype=torch.float64)
tensor([-2.1990, -3.0383, -3.0922, -2.9906, -3.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.9393, device='cuda:0', dtype=torch.float64)
tensor([-2.1440, -2.9701, -3.0399, -3.0218, -3.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6203, device='cuda:0', dtype=torch.float64)
tensor([-2.0476, -2.9381, -3.0161, -3.0701, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.6718, device='cuda:0', dtype=torch.float64)
tensor([-1.9333, -2.9660, -3.0141, -3.1251, -3.1109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6254, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -3.0012, -3.0245, -3.1786, -3.0596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2626, device='cuda:0', dtype=torch.float64)
tensor([-1.7453, -2.9537, -3.0370, -3.2237, -3.0310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.1040, device='cuda:0', dtype=torch.float64)
tensor([-1.6882, -2.8312, -3.0429, -3.2541, -3.0265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1643, device='cuda:0', dtype=torch.float64)
tensor([-1.6565, -2.7125, -3.0375, -3.2656, -3.0439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1240, device='cuda:0', dtype=torch.float64)
tensor([-1.6483, -2.6326, -3.0191, -3.2576, -3.0794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.1996, device='cuda:0', dtype=torch.float64)
tensor([-1.6612, -2.5884, -2.9896, -3.2335, -3.1295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9523, device='cuda:0', dtype=torch.float64)
tensor([-1.6915, -2.5731, -2.9536, -3.1996, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8100, device='cuda:0', dtype=torch.float64)
tensor([-1.7345, -2.5801, -2.9151, -3.1636, -3.2538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9411, device='cuda:0', dtype=torch.float64)
tensor([-1.7837, -2.6034, -2.8780, -3.1321, -3.3125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6622, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6357, -2.8447, -3.1092, -3.3570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2902, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.6688, -2.8159, -3.0954, -3.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9027, device='cuda:0', dtype=torch.float64)
tensor([-1.9001, -2.6942, -2.7908, -3.0884, -3.3817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0498, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.7068, -2.7695, -3.0862, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7272, device='cuda:0', dtype=torch.float64)
tensor([-1.9096, -2.7065, -2.7531, -3.0881, -3.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8963, -2.6982, -2.7430, -3.0943, -3.2992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4097, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.6885, -2.7392, -3.1050, -3.2674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8790, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6797, -2.7405, -3.1193, -3.2419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8709, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6725, -2.7454, -3.1355, -3.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9067, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6669, -2.7524, -3.1514, -3.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8636, device='cuda:0', dtype=torch.float64)
tensor([-1.8145, -2.6633, -2.7596, -3.1650, -3.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7652, device='cuda:0', dtype=torch.float64)
tensor([-1.8105, -2.6616, -2.7654, -3.1750, -3.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6064, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.6617, -2.7680, -3.1811, -3.2297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4436, device='cuda:0', dtype=torch.float64)
tensor([-1.8119, -2.6632, -2.7667, -3.1831, -3.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4075, device='cuda:0', dtype=torch.float64)
tensor([-1.8139, -2.6654, -2.7620, -3.1820, -3.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4427, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.6672, -2.7556, -3.1788, -3.2463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4284, device='cuda:0', dtype=torch.float64)
tensor([-1.8140, -2.6678, -2.7496, -3.1752, -3.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2656, device='cuda:0', dtype=torch.float64)
tensor([-1.8109, -2.6663, -2.7462, -3.1727, -3.2413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0464, device='cuda:0', dtype=torch.float64)
tensor([-1.8058, -2.6624, -2.7468, -3.1728, -3.2357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9020, device='cuda:0', dtype=torch.float64)
tensor([-1.7991, -2.6561, -2.7521, -3.1760, -3.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9010, device='cuda:0', dtype=torch.float64)
tensor([-1.7915, -2.6477, -2.7614, -3.1820, -3.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9331, device='cuda:0', dtype=torch.float64)
tensor([-1.7838, -2.6379, -2.7736, -3.1899, -3.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8985, device='cuda:0', dtype=torch.float64)
tensor([-1.7772, -2.6278, -2.7873, -3.1987, -3.2239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8069, device='cuda:0', dtype=torch.float64)
tensor([-1.7729, -2.6187, -2.8011, -3.2074, -3.2268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7446, device='cuda:0', dtype=torch.float64)
tensor([-1.7715, -2.6115, -2.8135, -3.2151, -3.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7126, device='cuda:0', dtype=torch.float64)
tensor([-1.7733, -2.6070, -2.8235, -3.2209, -3.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6762, device='cuda:0', dtype=torch.float64)
tensor([-1.7779, -2.6056, -2.8300, -3.2242, -3.2389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6223, device='cuda:0', dtype=torch.float64)
tensor([-1.7847, -2.6070, -2.8325, -3.2242, -3.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4866, device='cuda:0', dtype=torch.float64)
tensor([-1.7931, -2.6111, -2.8309, -3.2205, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3380, device='cuda:0', dtype=torch.float64)
tensor([-1.8025, -2.6172, -2.8258, -3.2133, -3.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2010, device='cuda:0', dtype=torch.float64)
tensor([-1.8124, -2.6246, -2.8181, -3.2031, -3.2351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2088, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6324, -2.8090, -3.1909, -3.2326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2306, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.6397, -2.7997, -3.1780, -3.2309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2581, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6455, -2.7916, -3.1654, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2641, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.6493, -2.7855, -3.1540, -3.2306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2071, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.6507, -2.7815, -3.1445, -3.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0953, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.6496, -2.7798, -3.1376, -3.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0012, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.6462, -2.7800, -3.1334, -3.2311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0184, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.6410, -2.7816, -3.1320, -3.2285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0351, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.6346, -2.7838, -3.1332, -3.2238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0157, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6277, -2.7863, -3.1364, -3.2173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9761, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.6211, -2.7885, -3.1411, -3.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9056, device='cuda:0', dtype=torch.float64)
tensor([-1.8052, -2.6154, -2.7905, -3.1467, -3.2020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8270, device='cuda:0', dtype=torch.float64)
tensor([-1.7984, -2.6110, -2.7921, -3.1527, -3.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8022, device='cuda:0', dtype=torch.float64)
tensor([-1.7941, -2.6083, -2.7932, -3.1582, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8471, device='cuda:0', dtype=torch.float64)
tensor([-1.7926, -2.6075, -2.7939, -3.1626, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8644, device='cuda:0', dtype=torch.float64)
tensor([-1.7937, -2.6083, -2.7941, -3.1656, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8522, device='cuda:0', dtype=torch.float64)
tensor([-1.7971, -2.6104, -2.7939, -3.1671, -3.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8138, device='cuda:0', dtype=torch.float64)
tensor([-1.8020, -2.6136, -2.7933, -3.1670, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7450, device='cuda:0', dtype=torch.float64)
tensor([-1.8078, -2.6177, -2.7920, -3.1654, -3.1957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6943, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.6222, -2.7904, -3.1629, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6877, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6268, -2.7884, -3.1596, -3.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6962, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6311, -2.7863, -3.1560, -3.2002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6995, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6350, -2.7842, -3.1525, -3.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6896, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6384, -2.7822, -3.1496, -3.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6872, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6409, -2.7808, -3.1476, -3.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6873, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6426, -2.7800, -3.1467, -3.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6806, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6435, -2.7800, -3.1469, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6419, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6438, -2.7805, -3.1479, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6049, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6435, -2.7815, -3.1494, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5819, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6428, -2.7827, -3.1512, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5973, device='cuda:0', dtype=torch.float64)
tensor([-1.8140, -2.6420, -2.7839, -3.1532, -3.1815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5899, device='cuda:0', dtype=torch.float64)
tensor([-1.8113, -2.6411, -2.7851, -3.1548, -3.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5976, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.6403, -2.7862, -3.1560, -3.1790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5779, device='cuda:0', dtype=torch.float64)
tensor([-1.8075, -2.6399, -2.7869, -3.1568, -3.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5560, device='cuda:0', dtype=torch.float64)
tensor([-1.8071, -2.6400, -2.7873, -3.1570, -3.1779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5673, device='cuda:0', dtype=torch.float64)
tensor([-1.8078, -2.6405, -2.7873, -3.1568, -3.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5662, device='cuda:0', dtype=torch.float64)
tensor([-1.8094, -2.6414, -2.7870, -3.1562, -3.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5566, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6424, -2.7867, -3.1558, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5551, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.6434, -2.7866, -3.1556, -3.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5475, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6445, -2.7867, -3.1553, -3.1846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5374, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6452, -2.7866, -3.1552, -3.1855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5458, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6455, -2.7866, -3.1555, -3.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5462, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6452, -2.7866, -3.1560, -3.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5356, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6445, -2.7867, -3.1566, -3.1839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5269, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6435, -2.7868, -3.1574, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4953, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6425, -2.7869, -3.1580, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5010, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6415, -2.7872, -3.1583, -3.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4974, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6406, -2.7874, -3.1584, -3.1769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4892, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6398, -2.7874, -3.1580, -3.1759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4999, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6393, -2.7872, -3.1574, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4846, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6390, -2.7870, -3.1567, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4713, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6390, -2.7867, -3.1560, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4736, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6390, -2.7864, -3.1555, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4765, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6391, -2.7860, -3.1550, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4683, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6391, -2.7857, -3.1547, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4742, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6391, -2.7851, -3.1542, -3.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4631, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6391, -2.7848, -3.1539, -3.1747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4549, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6393, -2.7845, -3.1534, -3.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4514, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6393, -2.7843, -3.1530, -3.1754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4549, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6391, -2.7842, -3.1530, -3.1761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4408, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6386, -2.7841, -3.1531, -3.1765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4445, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6384, -2.7841, -3.1530, -3.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4525, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6384, -2.7839, -3.1529, -3.1767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4372, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6383, -2.7836, -3.1526, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4416, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6382, -2.7832, -3.1523, -3.1761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4401, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6380, -2.7829, -3.1523, -3.1759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4499, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6375, -2.7828, -3.1524, -3.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4319, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6370, -2.7827, -3.1525, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4450, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6367, -2.7826, -3.1527, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4334, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6365, -2.7826, -3.1526, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4344, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6364, -2.7825, -3.1527, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4346, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6363, -2.7825, -3.1529, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4433, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.6367, -2.7822, -3.1528, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4188, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6373, -2.7818, -3.1522, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4154, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6379, -2.7814, -3.1516, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4111, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6385, -2.7812, -3.1508, -3.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4180, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6391, -2.7812, -3.1501, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4186, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6397, -2.7812, -3.1494, -3.1749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4105, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6401, -2.7812, -3.1488, -3.1747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4289, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6405, -2.7814, -3.1481, -3.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4101, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6407, -2.7817, -3.1479, -3.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4039, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6409, -2.7822, -3.1478, -3.1749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4153, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6409, -2.7824, -3.1481, -3.1745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3887, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6405, -2.7825, -3.1488, -3.1741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4104, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6398, -2.7825, -3.1497, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4071, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6389, -2.7826, -3.1505, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4053, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6380, -2.7824, -3.1515, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4079, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6371, -2.7820, -3.1523, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4196, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6364, -2.7812, -3.1528, -3.1724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4112, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6361, -2.7803, -3.1529, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3958, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6363, -2.7792, -3.1524, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4194, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6365, -2.7783, -3.1518, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3861, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6367, -2.7777, -3.1513, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3829, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6371, -2.7777, -3.1510, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3946, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6374, -2.7779, -3.1508, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4007, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6375, -2.7781, -3.1505, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4036, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6374, -2.7783, -3.1500, -3.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3908, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6371, -2.7786, -3.1493, -3.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4036, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6370, -2.7789, -3.1487, -3.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4020, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6372, -2.7795, -3.1480, -3.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3854, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6375, -2.7798, -3.1476, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3876, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6373, -2.7801, -3.1473, -3.1685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3969, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6372, -2.7807, -3.1469, -3.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3994, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6368, -2.7812, -3.1468, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3712, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6367, -2.7815, -3.1472, -3.1692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3875, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6366, -2.7814, -3.1480, -3.1694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3788, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6366, -2.7813, -3.1491, -3.1694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3785, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6364, -2.7813, -3.1503, -3.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3665, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6365, -2.7813, -3.1512, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3802, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6370, -2.7812, -3.1518, -3.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3792, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6375, -2.7810, -3.1522, -3.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3882, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6377, -2.7808, -3.1523, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3896, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6375, -2.7811, -3.1521, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3800, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6370, -2.7814, -3.1519, -3.1674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3766, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6366, -2.7813, -3.1516, -3.1676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3664, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6359, -2.7811, -3.1515, -3.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4015, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6352, -2.7808, -3.1511, -3.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3560, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6348, -2.7804, -3.1508, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3958, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6347, -2.7801, -3.1505, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3812, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6348, -2.7795, -3.1497, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3729, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6351, -2.7790, -3.1489, -3.1685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3844, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6355, -2.7783, -3.1480, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3949, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6361, -2.7783, -3.1472, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3737, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6369, -2.7785, -3.1466, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3710, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6377, -2.7786, -3.1462, -3.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3578, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6384, -2.7786, -3.1463, -3.1685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3946, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6390, -2.7784, -3.1467, -3.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3790, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6391, -2.7783, -3.1474, -3.1671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3717, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6394, -2.7781, -3.1478, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3805, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6394, -2.7780, -3.1482, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3639, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6391, -2.7781, -3.1485, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3643, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6387, -2.7781, -3.1482, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3817, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6383, -2.7782, -3.1480, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3851, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6376, -2.7787, -3.1481, -3.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3719, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6374, -2.7792, -3.1481, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3586, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6372, -2.7793, -3.1476, -3.1660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3637, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6373, -2.7789, -3.1470, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3829, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6378, -2.7780, -3.1465, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3663, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6380, -2.7769, -3.1461, -3.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3965, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6377, -2.7759, -3.1464, -3.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3655, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6376, -2.7746, -3.1467, -3.1608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3820, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6375, -2.7737, -3.1468, -3.1612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3827, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6375, -2.7731, -3.1470, -3.1629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3649, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6373, -2.7725, -3.1472, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3671, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6371, -2.7720, -3.1474, -3.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3739, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6366, -2.7718, -3.1473, -3.1669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3943, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6355, -2.7719, -3.1471, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3713, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6343, -2.7723, -3.1466, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3700, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6335, -2.7730, -3.1464, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3738, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6330, -2.7736, -3.1460, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3768, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6330, -2.7742, -3.1459, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3847, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6337, -2.7747, -3.1455, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3640, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6351, -2.7749, -3.1451, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3788, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6358, -2.7750, -3.1449, -3.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3535, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6361, -2.7751, -3.1448, -3.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3766, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6369, -2.7750, -3.1445, -3.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3622, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6377, -2.7745, -3.1438, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3543, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6380, -2.7741, -3.1434, -3.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3658, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6379, -2.7739, -3.1431, -3.1658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3752, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6375, -2.7740, -3.1435, -3.1651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3598, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6361, -2.7751, -3.1444, -3.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3649, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6343, -2.7761, -3.1455, -3.1635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3475, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6325, -2.7771, -3.1466, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3774, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6311, -2.7778, -3.1475, -3.1626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3675, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6304, -2.7779, -3.1478, -3.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3575, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6303, -2.7779, -3.1479, -3.1626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3830, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6304, -2.7775, -3.1477, -3.1627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3745, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6308, -2.7766, -3.1474, -3.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3771, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6315, -2.7750, -3.1470, -3.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3965, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6325, -2.7740, -3.1460, -3.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4349, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6334, -2.7733, -3.1452, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3771, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6346, -2.7734, -3.1448, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3521, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6356, -2.7737, -3.1448, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3609, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6364, -2.7740, -3.1449, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3496, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6371, -2.7744, -3.1447, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3856, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6379, -2.7746, -3.1441, -3.1595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3857, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6381, -2.7751, -3.1441, -3.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3481, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6377, -2.7756, -3.1440, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3312, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6367, -2.7758, -3.1437, -3.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3662, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6353, -2.7758, -3.1439, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3711, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6341, -2.7757, -3.1438, -3.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4025, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6331, -2.7752, -3.1432, -3.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3640, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6326, -2.7745, -3.1427, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3887, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6329, -2.7737, -3.1415, -3.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3710, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6337, -2.7729, -3.1404, -3.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3647, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6344, -2.7729, -3.1402, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3831, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6353, -2.7734, -3.1401, -3.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3808, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.6360, -2.7734, -3.1403, -3.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3814, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6362, -2.7735, -3.1408, -3.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3943, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6361, -2.7733, -3.1413, -3.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3843, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6360, -2.7733, -3.1422, -3.1613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3857, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6360, -2.7734, -3.1435, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3923, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6362, -2.7732, -3.1448, -3.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3570, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6355, -2.7734, -3.1458, -3.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3972, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6341, -2.7740, -3.1467, -3.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4580, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6328, -2.7740, -3.1464, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3708, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6312, -2.7735, -3.1459, -3.1608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3633, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6295, -2.7728, -3.1451, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4022, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6289, -2.7719, -3.1441, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4049, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.6298, -2.7708, -3.1432, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3810, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6318, -2.7697, -3.1421, -3.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3454, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6342, -2.7690, -3.1410, -3.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4565, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6361, -2.7685, -3.1390, -3.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4234, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6376, -2.7689, -3.1378, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3794, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6384, -2.7698, -3.1371, -3.1611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3733, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6385, -2.7722, -3.1371, -3.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3629, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6377, -2.7747, -3.1378, -3.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3415, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6368, -2.7765, -3.1386, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3785, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6360, -2.7774, -3.1404, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3939, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6353, -2.7776, -3.1425, -3.1601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3810, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6349, -2.7766, -3.1440, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3572, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6347, -2.7747, -3.1444, -3.1613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3923, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6340, -2.7730, -3.1444, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3713, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6327, -2.7715, -3.1438, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3876, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6309, -2.7709, -3.1435, -3.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3964, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6305, -2.7706, -3.1437, -3.1595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3507, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6302, -2.7709, -3.1442, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3625, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6309, -2.7709, -3.1451, -3.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3572, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6320, -2.7712, -3.1467, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3535, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6339, -2.7713, -3.1474, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3684, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6359, -2.7705, -3.1480, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4142, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6372, -2.7700, -3.1483, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3439, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6371, -2.7703, -3.1484, -3.1554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3784, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6368, -2.7710, -3.1477, -3.1555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3654, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6360, -2.7719, -3.1464, -3.1554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3903, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6347, -2.7725, -3.1451, -3.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3644, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6333, -2.7733, -3.1438, -3.1573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3958, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6326, -2.7742, -3.1428, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3574, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6315, -2.7752, -3.1428, -3.1611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3596, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6302, -2.7766, -3.1431, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3706, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6295, -2.7781, -3.1430, -3.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4096, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6299, -2.7788, -3.1424, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3761, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6296, -2.7795, -3.1421, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3794, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6294, -2.7793, -3.1422, -3.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4363, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6306, -2.7780, -3.1422, -3.1612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3959, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6322, -2.7761, -3.1419, -3.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3761, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6345, -2.7738, -3.1413, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3883, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6372, -2.7712, -3.1402, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3930, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6385, -2.7692, -3.1390, -3.1558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4093, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6383, -2.7679, -3.1383, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4462, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6372, -2.7672, -3.1378, -3.1569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3883, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6358, -2.7670, -3.1370, -3.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4140, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6351, -2.7667, -3.1368, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4285, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6345, -2.7674, -3.1372, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3870, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6342, -2.7676, -3.1381, -3.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3729, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6343, -2.7677, -3.1392, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3802, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6337, -2.7684, -3.1406, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4300, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6336, -2.7701, -3.1428, -3.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3583, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6332, -2.7719, -3.1451, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3811, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6328, -2.7730, -3.1469, -3.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4001, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6320, -2.7733, -3.1475, -3.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3838, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6321, -2.7726, -3.1471, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3652, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6321, -2.7710, -3.1458, -3.1550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3981, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6335, -2.7690, -3.1434, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3730, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6351, -2.7669, -3.1412, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4196, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6361, -2.7650, -3.1401, -3.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3791, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6364, -2.7632, -3.1396, -3.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4064, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6356, -2.7625, -3.1391, -3.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3913, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6339, -2.7629, -3.1397, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3834, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6322, -2.7641, -3.1408, -3.1629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4157, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.6306, -2.7652, -3.1421, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4120, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6302, -2.7658, -3.1435, -3.1626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4427, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6313, -2.7659, -3.1443, -3.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4066, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6329, -2.7648, -3.1439, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3890, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6342, -2.7637, -3.1426, -3.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3716, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6349, -2.7632, -3.1407, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4210, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6349, -2.7639, -3.1382, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4111, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6345, -2.7660, -3.1369, -3.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4120, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6329, -2.7678, -3.1374, -3.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3895, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6304, -2.7691, -3.1391, -3.1516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4218, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6271, -2.7709, -3.1422, -3.1520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4417, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6252, -2.7715, -3.1450, -3.1540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4609, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6239, -2.7717, -3.1472, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3712, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6235, -2.7707, -3.1485, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4759, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6245, -2.7685, -3.1483, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4077, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6257, -2.7666, -3.1476, -3.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4609, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6268, -2.7648, -3.1463, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4837, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6283, -2.7648, -3.1450, -3.1612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4420, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6295, -2.7665, -3.1448, -3.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4356, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6315, -2.7689, -3.1447, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4217, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.6329, -2.7709, -3.1455, -3.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4286, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6332, -2.7721, -3.1469, -3.1632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4824, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6322, -2.7738, -3.1479, -3.1572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4446, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6312, -2.7737, -3.1478, -3.1507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4592, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6313, -2.7728, -3.1452, -3.1462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4759, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6312, -2.7714, -3.1409, -3.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4693, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6330, -2.7680, -3.1355, -3.1434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4057, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6353, -2.7640, -3.1302, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4393, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6392, -2.7608, -3.1271, -3.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4343, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6426, -2.7594, -3.1262, -3.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4978, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6451, -2.7583, -3.1283, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4319, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6454, -2.7583, -3.1333, -3.1602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3895, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6437, -2.7599, -3.1388, -3.1608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3796, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.6408, -2.7620, -3.1442, -3.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4793, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6377, -2.7655, -3.1482, -3.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4191, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6339, -2.7687, -3.1514, -3.1594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4417, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6307, -2.7703, -3.1523, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4469, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6281, -2.7715, -3.1519, -3.1562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4141, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6270, -2.7708, -3.1487, -3.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3952, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6263, -2.7710, -3.1455, -3.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4954, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6258, -2.7711, -3.1426, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3949, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.6268, -2.7710, -3.1389, -3.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5121, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6296, -2.7703, -3.1348, -3.1497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4073, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.6322, -2.7694, -3.1317, -3.1493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4315, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6348, -2.7684, -3.1289, -3.1506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4831, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6380, -2.7678, -3.1284, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4007, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6402, -2.7676, -3.1284, -3.1555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4573, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6399, -2.7672, -3.1308, -3.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4363, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6373, -2.7670, -3.1336, -3.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5031, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6338, -2.7682, -3.1353, -3.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4499, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6298, -2.7702, -3.1365, -3.1542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4984, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6263, -2.7708, -3.1363, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4333, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6251, -2.7690, -3.1353, -3.1573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4197, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6258, -2.7661, -3.1335, -3.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4715, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6281, -2.7613, -3.1317, -3.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4129, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6295, -2.7578, -3.1304, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4312, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6300, -2.7557, -3.1296, -3.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4363, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6297, -2.7542, -3.1312, -3.1541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3833, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6282, -2.7560, -3.1348, -3.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4244, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6270, -2.7585, -3.1378, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3893, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6260, -2.7614, -3.1398, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4600, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6259, -2.7637, -3.1411, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4427, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6256, -2.7655, -3.1412, -3.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4411, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6264, -2.7672, -3.1419, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4074, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6265, -2.7684, -3.1430, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4191, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6264, -2.7693, -3.1428, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4853, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6272, -2.7705, -3.1431, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4015, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6278, -2.7710, -3.1423, -3.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4454, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6279, -2.7707, -3.1405, -3.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4499, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6283, -2.7689, -3.1377, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5458, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6289, -2.7671, -3.1361, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3966, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6306, -2.7638, -3.1344, -3.1520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4221, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6323, -2.7610, -3.1329, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4723, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6347, -2.7581, -3.1312, -3.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4396, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6377, -2.7550, -3.1304, -3.1540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4460, device='cuda:0', dtype=torch.float64)
tensor([-1.8275, -2.6392, -2.7547, -3.1306, -3.1555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5084, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6379, -2.7563, -3.1308, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4434, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6359, -2.7599, -3.1328, -3.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4836, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6334, -2.7631, -3.1349, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4898, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6306, -2.7655, -3.1379, -3.1569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4235, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6282, -2.7668, -3.1398, -3.1554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4976, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6271, -2.7662, -3.1403, -3.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5339, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.6277, -2.7650, -3.1374, -3.1570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4969, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6305, -2.7629, -3.1329, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4953, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6350, -2.7613, -3.1273, -3.1611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5188, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.6386, -2.7610, -3.1230, -3.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5275, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6405, -2.7607, -3.1198, -3.1594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4668, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6411, -2.7601, -3.1182, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5060, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6416, -2.7602, -3.1189, -3.1558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5396, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6420, -2.7586, -3.1208, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4926, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6420, -2.7575, -3.1255, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4027, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6398, -2.7565, -3.1322, -3.1493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4543, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6352, -2.7568, -3.1384, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4841, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6279, -2.7584, -3.1437, -3.1441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4682, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6204, -2.7602, -3.1474, -3.1441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4273, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6155, -2.7609, -3.1491, -3.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4981, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6137, -2.7614, -3.1459, -3.1501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5532, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6163, -2.7622, -3.1389, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4908, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6214, -2.7628, -3.1330, -3.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4628, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6256, -2.7636, -3.1286, -3.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5359, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6290, -2.7645, -3.1269, -3.1676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5517, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6300, -2.7664, -3.1266, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4491, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6304, -2.7684, -3.1287, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3770, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6304, -2.7700, -3.1309, -3.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4413, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6311, -2.7708, -3.1324, -3.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4365, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6309, -2.7699, -3.1328, -3.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4900, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6286, -2.7681, -3.1314, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4510, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6269, -2.7650, -3.1301, -3.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4678, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6260, -2.7612, -3.1279, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4605, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6239, -2.7591, -3.1271, -3.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4917, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6226, -2.7580, -3.1263, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5394, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.6208, -2.7587, -3.1277, -3.1519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5675, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6199, -2.7607, -3.1286, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5224, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6194, -2.7625, -3.1294, -3.1422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5293, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6205, -2.7623, -3.1291, -3.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4625, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6229, -2.7615, -3.1282, -3.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4754, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6254, -2.7595, -3.1258, -3.1424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6179, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6284, -2.7570, -3.1239, -3.1434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4994, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6327, -2.7537, -3.1221, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3929, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.6363, -2.7516, -3.1214, -3.1467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5068, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6372, -2.7523, -3.1235, -3.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5264, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6365, -2.7544, -3.1279, -3.1507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5869, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.6340, -2.7590, -3.1318, -3.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5240, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6306, -2.7637, -3.1349, -3.1546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4726, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.6271, -2.7673, -3.1380, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4784, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6250, -2.7689, -3.1393, -3.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5412, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6242, -2.7694, -3.1367, -3.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5907, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6256, -2.7678, -3.1329, -3.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5037, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6277, -2.7648, -3.1302, -3.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4934, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.6316, -2.7615, -3.1274, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5042, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6367, -2.7595, -3.1252, -3.1465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5056, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6408, -2.7583, -3.1247, -3.1475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4746, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6419, -2.7596, -3.1283, -3.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4184, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6403, -2.7623, -3.1332, -3.1501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4913, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6370, -2.7660, -3.1360, -3.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4532, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6346, -2.7689, -3.1370, -3.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5512, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6323, -2.7722, -3.1381, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5175, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6297, -2.7748, -3.1394, -3.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4600, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6266, -2.7776, -3.1394, -3.1562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4628, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.6242, -2.7781, -3.1380, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3972, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6225, -2.7753, -3.1380, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4972, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6208, -2.7701, -3.1375, -3.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4749, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6214, -2.7628, -3.1364, -3.1506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5147, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6226, -2.7569, -3.1332, -3.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5441, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6247, -2.7540, -3.1294, -3.1386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6406, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6293, -2.7528, -3.1265, -3.1393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5768, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6345, -2.7537, -3.1234, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5157, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.6374, -2.7550, -3.1231, -3.1484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6022, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6382, -2.7543, -3.1224, -3.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5323, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6385, -2.7543, -3.1233, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4247, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6356, -2.7556, -3.1281, -3.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6087, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.6328, -2.7585, -3.1316, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5002, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6281, -2.7611, -3.1370, -3.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4752, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6243, -2.7634, -3.1421, -3.1502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5085, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6209, -2.7640, -3.1452, -3.1516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5153, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6193, -2.7626, -3.1453, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4574, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.6193, -2.7590, -3.1431, -3.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4706, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6209, -2.7557, -3.1401, -3.1504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5914, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6243, -2.7529, -3.1369, -3.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5205, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6273, -2.7514, -3.1340, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5246, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6300, -2.7527, -3.1320, -3.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5391, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.6316, -2.7563, -3.1321, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4704, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6316, -2.7607, -3.1345, -3.1676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5176, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6301, -2.7647, -3.1374, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4535, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6284, -2.7676, -3.1396, -3.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4829, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6259, -2.7707, -3.1420, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4910, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6230, -2.7724, -3.1427, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4628, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6202, -2.7737, -3.1414, -3.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5144, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6189, -2.7740, -3.1399, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5275, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.6191, -2.7730, -3.1368, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6027, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6216, -2.7703, -3.1302, -3.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5874, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6254, -2.7663, -3.1235, -3.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4797, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.6296, -2.7612, -3.1193, -3.1406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4766, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6342, -2.7564, -3.1170, -3.1416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4766, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6364, -2.7538, -3.1169, -3.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5868, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6369, -2.7527, -3.1193, -3.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5720, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6362, -2.7513, -3.1230, -3.1444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4874, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6362, -2.7505, -3.1263, -3.1470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5532, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6353, -2.7493, -3.1295, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6149, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6330, -2.7506, -3.1327, -3.1472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5818, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6293, -2.7544, -3.1357, -3.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5146, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6258, -2.7577, -3.1357, -3.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4861, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6235, -2.7603, -3.1338, -3.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5593, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6225, -2.7615, -3.1312, -3.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6110, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6228, -2.7617, -3.1292, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5608, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6247, -2.7605, -3.1264, -3.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5575, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6276, -2.7592, -3.1227, -3.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5645, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6315, -2.7572, -3.1191, -3.1393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5192, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6333, -2.7573, -3.1179, -3.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8205, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6352, -2.7574, -3.1195, -3.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6082, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.6359, -2.7577, -3.1243, -3.1454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6566, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6366, -2.7587, -3.1299, -3.1467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5279, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6340, -2.7609, -3.1352, -3.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6417, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6308, -2.7606, -3.1391, -3.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5555, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6273, -2.7594, -3.1413, -3.1407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5371, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.6233, -2.7587, -3.1393, -3.1412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4793, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6200, -2.7586, -3.1338, -3.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5443, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6181, -2.7582, -3.1261, -3.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5188, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6162, -2.7581, -3.1204, -3.1481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5526, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.6178, -2.7575, -3.1154, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5537, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6226, -2.7563, -3.1126, -3.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5560, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6288, -2.7572, -3.1121, -3.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5699, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6322, -2.7608, -3.1165, -3.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6282, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6330, -2.7651, -3.1238, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5512, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6315, -2.7675, -3.1312, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5986, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6281, -2.7669, -3.1365, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6651, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6249, -2.7636, -3.1384, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6195, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6214, -2.7609, -3.1396, -3.1550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5053, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6196, -2.7586, -3.1405, -3.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4981, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.6185, -2.7582, -3.1436, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5116, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6176, -2.7580, -3.1462, -3.1520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5564, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6192, -2.7565, -3.1488, -3.1465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5655, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6207, -2.7543, -3.1488, -3.1409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5586, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6231, -2.7518, -3.1452, -3.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5452, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6272, -2.7478, -3.1381, -3.1366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6171, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6293, -2.7436, -3.1314, -3.1344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5050, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6295, -2.7427, -3.1236, -3.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5972, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6276, -2.7450, -3.1173, -3.1380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6144, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.6238, -2.7516, -3.1136, -3.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5561, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6214, -2.7593, -3.1124, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6543, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6190, -2.7643, -3.1153, -3.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6359, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6190, -2.7648, -3.1186, -3.1442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5502, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.6209, -2.7642, -3.1223, -3.1423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5048, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6249, -2.7636, -3.1240, -3.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6370, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6298, -2.7613, -3.1243, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5719, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6328, -2.7583, -3.1217, -3.1570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5647, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.6337, -2.7547, -3.1189, -3.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5769, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.6313, -2.7509, -3.1199, -3.1635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7607, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.6256, -2.7500, -3.1229, -3.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6291, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.6219, -2.7502, -3.1270, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6397, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6166, -2.7538, -3.1340, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6121, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6137, -2.7570, -3.1399, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6653, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.6151, -2.7583, -3.1430, -3.1396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5035, device='cuda:0', dtype=torch.float64)
tensor([-1.8089, -2.6204, -2.7581, -3.1427, -3.1360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5151, device='cuda:0', dtype=torch.float64)
tensor([-1.8092, -2.6277, -2.7568, -3.1386, -3.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6562, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.6341, -2.7557, -3.1320, -3.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6801, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6387, -2.7567, -3.1225, -3.1501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6451, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6393, -2.7594, -3.1159, -3.1560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6604, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6331, -2.7629, -3.1124, -3.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5928, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6235, -2.7679, -3.1129, -3.1497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5113, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6144, -2.7706, -3.1127, -3.1444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5971, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6082, -2.7725, -3.1144, -3.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6042, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.6086, -2.7701, -3.1147, -3.1452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7196, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.6126, -2.7654, -3.1144, -3.1503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5709, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.6188, -2.7571, -3.1137, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5526, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.6244, -2.7486, -3.1135, -3.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6502, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.6260, -2.7427, -3.1147, -3.1484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7780, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.6266, -2.7415, -3.1169, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5884, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6256, -2.7438, -3.1201, -3.1519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5852, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6246, -2.7462, -3.1215, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5952, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6247, -2.7462, -3.1224, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5799, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6239, -2.7449, -3.1206, -3.1546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6073, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6233, -2.7442, -3.1199, -3.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5969, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.6239, -2.7462, -3.1213, -3.1394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5783, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6261, -2.7524, -3.1262, -3.1392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7689, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6288, -2.7624, -3.1337, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5297, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6315, -2.7714, -3.1396, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6207, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6330, -2.7770, -3.1460, -3.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5867, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6336, -2.7781, -3.1473, -3.1461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6092, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6338, -2.7765, -3.1434, -3.1452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6936, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6325, -2.7744, -3.1356, -3.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6318, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6317, -2.7692, -3.1242, -3.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5997, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.6317, -2.7597, -3.1137, -3.1432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6476, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.6310, -2.7512, -3.1052, -3.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5836, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6310, -2.7447, -3.1009, -3.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5681, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6308, -2.7435, -3.1019, -3.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6325, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6307, -2.7465, -3.1047, -3.1341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5938, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.6295, -2.7536, -3.1106, -3.1359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6364, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6288, -2.7610, -3.1193, -3.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6170, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.6278, -2.7692, -3.1267, -3.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6531, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.6246, -2.7745, -3.1346, -3.1488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5357, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6207, -2.7775, -3.1403, -3.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7172, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6192, -2.7767, -3.1434, -3.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5878, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6171, -2.7739, -3.1418, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5855, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6131, -2.7692, -3.1381, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6294, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6128, -2.7614, -3.1313, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6027, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6161, -2.7510, -3.1230, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5547, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6219, -2.7419, -3.1158, -3.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6164, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6280, -2.7354, -3.1124, -3.1454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7282, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6325, -2.7335, -3.1126, -3.1446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5414, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6316, -2.7355, -3.1168, -3.1469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6354, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6268, -2.7414, -3.1230, -3.1503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6570, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.6204, -2.7480, -3.1291, -3.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5765, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.6146, -2.7556, -3.1334, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6449, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6097, -2.7622, -3.1358, -3.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6465, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.6093, -2.7642, -3.1352, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6678, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6115, -2.7623, -3.1333, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6081, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6172, -2.7602, -3.1327, -3.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5877, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6229, -2.7564, -3.1302, -3.1455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5046, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6272, -2.7528, -3.1287, -3.1394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5289, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6298, -2.7501, -3.1278, -3.1351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5939, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6303, -2.7501, -3.1270, -3.1348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4555, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.6283, -2.7524, -3.1285, -3.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6866, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6251, -2.7546, -3.1312, -3.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6709, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6238, -2.7543, -3.1314, -3.1358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5859, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.6231, -2.7530, -3.1301, -3.1351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5565, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6214, -2.7526, -3.1285, -3.1355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6059, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6195, -2.7517, -3.1250, -3.1384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5726, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6191, -2.7524, -3.1216, -3.1420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6295, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6207, -2.7521, -3.1185, -3.1486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6845, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.6245, -2.7521, -3.1168, -3.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5553, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6268, -2.7541, -3.1180, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8782, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6274, -2.7536, -3.1215, -3.1569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6506, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6279, -2.7544, -3.1273, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6243, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6286, -2.7591, -3.1338, -3.1573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6358, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6292, -2.7637, -3.1375, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6439, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6284, -2.7670, -3.1355, -3.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6197, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6276, -2.7689, -3.1303, -3.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6433, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6255, -2.7693, -3.1245, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5396, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6225, -2.7653, -3.1181, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6781, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6213, -2.7576, -3.1129, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7276, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6240, -2.7503, -3.1093, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6054, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.6270, -2.7443, -3.1081, -3.1408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6105, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6265, -2.7425, -3.1107, -3.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6453, device='cuda:0', dtype=torch.float64)
tensor([-1.8275, -2.6244, -2.7475, -3.1152, -3.1272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6945, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6204, -2.7533, -3.1219, -3.1205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6392, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6176, -2.7580, -3.1242, -3.1191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5225, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6172, -2.7605, -3.1231, -3.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6071, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.6187, -2.7615, -3.1223, -3.1306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6018, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6204, -2.7604, -3.1205, -3.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5798, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.6220, -2.7605, -3.1168, -3.1461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4912, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.6240, -2.7598, -3.1148, -3.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7142, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.6232, -2.7614, -3.1132, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7421, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6193, -2.7596, -3.1094, -3.1382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6402, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6145, -2.7560, -3.1094, -3.1293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6894, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6131, -2.7495, -3.1071, -3.1222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5639, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6151, -2.7430, -3.1049, -3.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5992, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6189, -2.7385, -3.1049, -3.1266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5676, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.6221, -2.7370, -3.1057, -3.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6360, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6237, -2.7358, -3.1068, -3.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7560, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.6254, -2.7374, -3.1082, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6073, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.6233, -2.7452, -3.1129, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6036, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6199, -2.7543, -3.1187, -3.1632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6355, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.6198, -2.7602, -3.1216, -3.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6050, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.6186, -2.7647, -3.1263, -3.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6301, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6174, -2.7628, -3.1292, -3.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6782, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6155, -2.7596, -3.1302, -3.1387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4860, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6162, -2.7536, -3.1281, -3.1309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5288, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6179, -2.7485, -3.1226, -3.1271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5343, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6204, -2.7450, -3.1151, -3.1243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5226, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6232, -2.7457, -3.1091, -3.1245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5646, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6257, -2.7458, -3.1072, -3.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6799, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6315, -2.7444, -3.1074, -3.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6496, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6383, -2.7420, -3.1125, -3.1332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6577, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6444, -2.7420, -3.1167, -3.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6235, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.6457, -2.7429, -3.1269, -3.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5659, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6390, -2.7491, -3.1372, -3.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7003, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6267, -2.7568, -3.1447, -3.1573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6930, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6154, -2.7625, -3.1470, -3.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5077, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6073, -2.7621, -3.1468, -3.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6865, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6079, -2.7553, -3.1422, -3.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6795, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6136, -2.7461, -3.1306, -3.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5935, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.6214, -2.7373, -3.1174, -3.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5277, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.6290, -2.7310, -3.1078, -3.1353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7009, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.6314, -2.7326, -3.1027, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8359, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.6336, -2.7369, -3.1005, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7405, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6351, -2.7447, -3.1012, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7097, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.6340, -2.7496, -3.1025, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6967, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6302, -2.7524, -3.1063, -3.1515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7412, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6282, -2.7511, -3.1106, -3.1455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5531, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6249, -2.7497, -3.1126, -3.1396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8322, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6189, -2.7517, -3.1135, -3.1384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6381, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6133, -2.7541, -3.1123, -3.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8385, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6113, -2.7547, -3.1113, -3.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8763, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6102, -2.7509, -3.1080, -3.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6541, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6128, -2.7450, -3.1047, -3.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6019, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.6145, -2.7416, -3.1092, -3.1186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6891, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6155, -2.7431, -3.1171, -3.1264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6671, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6175, -2.7457, -3.1255, -3.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6874, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6174, -2.7478, -3.1332, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7024, device='cuda:0', dtype=torch.float64)
tensor([-1.8147, -2.6157, -2.7497, -3.1362, -3.1475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5992, device='cuda:0', dtype=torch.float64)
tensor([-1.8079, -2.6132, -2.7469, -3.1341, -3.1461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6795, device='cuda:0', dtype=torch.float64)
tensor([-1.8108, -2.6139, -2.7432, -3.1295, -3.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7574, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6175, -2.7422, -3.1249, -3.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6724, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6210, -2.7422, -3.1221, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6707, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.6252, -2.7431, -3.1172, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6568, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.6290, -2.7448, -3.1121, -3.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6595, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.6278, -2.7474, -3.1110, -3.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6274, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.6252, -2.7516, -3.1126, -3.1319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6664, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6233, -2.7536, -3.1165, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6773, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6216, -2.7549, -3.1191, -3.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5801, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6221, -2.7520, -3.1201, -3.1199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7511, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6219, -2.7472, -3.1203, -3.1230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6928, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6235, -2.7433, -3.1160, -3.1273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6806, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6240, -2.7396, -3.1102, -3.1289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7433, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6216, -2.7410, -3.1077, -3.1293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7552, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6196, -2.7482, -3.1051, -3.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5971, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6227, -2.7532, -3.1050, -3.1249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5985, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.6272, -2.7567, -3.1055, -3.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6776, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6329, -2.7525, -3.1033, -3.1196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8618, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.6400, -2.7460, -3.0981, -3.1218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5627, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.6425, -2.7399, -3.0934, -3.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5100, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.6393, -2.7403, -3.0955, -3.1252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5514, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6290, -2.7451, -3.1021, -3.1280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7443, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.6160, -2.7510, -3.1095, -3.1293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9369, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.6026, -2.7562, -3.1222, -3.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6807, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.5925, -2.7607, -3.1370, -3.1292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9157, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.5919, -2.7649, -3.1449, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6782, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.5989, -2.7615, -3.1475, -3.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6982, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.6118, -2.7543, -3.1448, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8273, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.6265, -2.7461, -3.1407, -3.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8067, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6370, -2.7430, -3.1383, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8373, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6391, -2.7450, -3.1325, -3.1454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7921, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6372, -2.7481, -3.1276, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6624, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6332, -2.7509, -3.1205, -3.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7120, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.6278, -2.7518, -3.1135, -3.1388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8340, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.6238, -2.7536, -3.1041, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6593, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6230, -2.7513, -3.0958, -3.1377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6164, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6255, -2.7432, -3.0888, -3.1408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7855, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6241, -2.7392, -3.0888, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6766, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6207, -2.7391, -3.0920, -3.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5345, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6163, -2.7385, -3.0981, -3.1481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7703, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6118, -2.7339, -3.1028, -3.1442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6995, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6066, -2.7325, -3.1066, -3.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6568, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6005, -2.7333, -3.1098, -3.1276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6451, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.5994, -2.7368, -3.1111, -3.1292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7883, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.5976, -2.7439, -3.1082, -3.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7321, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.6003, -2.7498, -3.1059, -3.1470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7578, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.6039, -2.7563, -3.1059, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8946, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.6109, -2.7630, -3.1041, -3.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5829, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.6153, -2.7707, -3.1100, -3.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8856, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.6203, -2.7783, -3.1194, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7283, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6243, -2.7784, -3.1289, -3.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6893, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6287, -2.7700, -3.1376, -3.1512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6882, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.6316, -2.7577, -3.1425, -3.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7643, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6347, -2.7481, -3.1423, -3.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7047, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6321, -2.7425, -3.1425, -3.1361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7273, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6263, -2.7382, -3.1399, -3.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5373, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6204, -2.7338, -3.1366, -3.1369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6077, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6154, -2.7311, -3.1307, -3.1345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6417, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6118, -2.7275, -3.1238, -3.1291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6152, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6116, -2.7232, -3.1190, -3.1230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8021, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6154, -2.7238, -3.1145, -3.1245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6782, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6210, -2.7276, -3.1103, -3.1304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8903, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6289, -2.7346, -3.1037, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7012, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.6354, -2.7404, -3.0943, -3.1514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7609, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.6380, -2.7445, -3.0855, -3.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7775, device='cuda:0', dtype=torch.float64)
tensor([-1.8552, -2.6353, -2.7493, -3.0798, -3.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8582, device='cuda:0', dtype=torch.float64)
tensor([-1.8575, -2.6299, -2.7555, -3.0770, -3.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7133, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.6213, -2.7603, -3.0804, -3.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5915, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.6145, -2.7597, -3.0863, -3.1506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6818, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6063, -2.7584, -3.0950, -3.1416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8643, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6048, -2.7547, -3.1026, -3.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7015, device='cuda:0', dtype=torch.float64)
tensor([-1.8128, -2.6043, -2.7522, -3.1078, -3.1085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7820, device='cuda:0', dtype=torch.float64)
tensor([-1.8150, -2.6065, -2.7524, -3.1080, -3.1091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9418, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6102, -2.7508, -3.1059, -3.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6249, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.6129, -2.7470, -3.1032, -3.1332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7132, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6153, -2.7420, -3.0996, -3.1359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7425, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.6135, -2.7396, -3.0966, -3.1334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7524, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.6107, -2.7394, -3.1010, -3.1326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7488, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.6111, -2.7436, -3.1129, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7308, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6180, -2.7476, -3.1244, -3.1465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6857, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6221, -2.7506, -3.1297, -3.1501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9610, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6272, -2.7513, -3.1273, -3.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7929, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6303, -2.7529, -3.1174, -3.1425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7221, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6322, -2.7461, -3.1040, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7772, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.6382, -2.7356, -3.0937, -3.1504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6752, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.6407, -2.7295, -3.0916, -3.1598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6517, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.6411, -2.7220, -3.0935, -3.1626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8078, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.6389, -2.7188, -3.1005, -3.1562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6391, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.6342, -2.7180, -3.1126, -3.1444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5536, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6272, -2.7233, -3.1263, -3.1351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7762, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6216, -2.7324, -3.1354, -3.1346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8056, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6166, -2.7417, -3.1418, -3.1391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7762, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6072, -2.7517, -3.1453, -3.1407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6339, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.5983, -2.7585, -3.1437, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5702, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.5970, -2.7593, -3.1356, -3.1367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5659, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.6016, -2.7584, -3.1267, -3.1318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6520, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6099, -2.7542, -3.1191, -3.1284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6485, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6188, -2.7476, -3.1138, -3.1229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7208, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6253, -2.7394, -3.1063, -3.1158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8120, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.6303, -2.7330, -3.1007, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6973, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6299, -2.7302, -3.0997, -3.1126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8109, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.6268, -2.7309, -3.0969, -3.1212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6947, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.6240, -2.7329, -3.0973, -3.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9328, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6229, -2.7343, -3.0984, -3.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8763, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.6188, -2.7404, -3.1008, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7698, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.6168, -2.7495, -3.1003, -3.1414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6777, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6169, -2.7574, -3.0978, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7166, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6159, -2.7628, -3.0961, -3.1467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7215, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6166, -2.7621, -3.0925, -3.1407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7098, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6167, -2.7562, -3.0896, -3.1314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7692, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6177, -2.7487, -3.0891, -3.1208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8670, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6224, -2.7447, -3.0896, -3.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6691, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6250, -2.7416, -3.0913, -3.1279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7463, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.6255, -2.7407, -3.0962, -3.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8498, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6220, -2.7466, -3.1015, -3.1377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8191, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6139, -2.7545, -3.1054, -3.1422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9064, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6060, -2.7622, -3.1095, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7249, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.5997, -2.7666, -3.1147, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9955, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.5999, -2.7653, -3.1171, -3.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8131, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.6043, -2.7627, -3.1182, -3.1622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6385, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.6063, -2.7568, -3.1227, -3.1555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7331, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.6120, -2.7531, -3.1276, -3.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8581, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.6167, -2.7537, -3.1346, -3.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8071, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6170, -2.7558, -3.1411, -3.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7931, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6201, -2.7489, -3.1381, -3.1231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7702, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6233, -2.7384, -3.1270, -3.1098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7346, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6217, -2.7295, -3.1151, -3.1041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6341, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6219, -2.7248, -3.1045, -3.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8081, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6245, -2.7259, -3.0957, -3.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6389, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.6265, -2.7296, -3.0852, -3.1261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7164, device='cuda:0', dtype=torch.float64)
tensor([-1.8574, -2.6275, -2.7362, -3.0807, -3.1287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7336, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.6234, -2.7404, -3.0851, -3.1325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7069, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.6114, -2.7489, -3.0936, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8080, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.5976, -2.7610, -3.1048, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6781, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.5873, -2.7690, -3.1166, -3.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8252, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.5845, -2.7702, -3.1193, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7877, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.5880, -2.7622, -3.1199, -3.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7337, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6010, -2.7465, -3.1140, -3.1436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8383, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6131, -2.7297, -3.1060, -3.1337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7406, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6238, -2.7149, -3.1018, -3.1298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8691, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6255, -2.7078, -3.1030, -3.1254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8531, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.6241, -2.7059, -3.1039, -3.1233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7288, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6188, -2.7123, -3.1084, -3.1212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8137, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6127, -2.7203, -3.1098, -3.1185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8300, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6087, -2.7355, -3.1149, -3.1249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8570, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6048, -2.7558, -3.1204, -3.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7881, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.6043, -2.7740, -3.1169, -3.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9675, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6104, -2.7769, -3.1046, -3.1595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7867, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.6206, -2.7695, -3.0908, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7127, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.6281, -2.7626, -3.0863, -3.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7913, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.6306, -2.7585, -3.0893, -3.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8863, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.6275, -2.7555, -3.0967, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9466, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.6212, -2.7539, -3.1084, -3.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7013, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6136, -2.7532, -3.1180, -3.1120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8087, device='cuda:0', dtype=torch.float64)
tensor([-1.8112, -2.6094, -2.7508, -3.1207, -3.0922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8145, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6097, -2.7507, -3.1177, -3.0909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0002, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6131, -2.7500, -3.1139, -3.1042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6926, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.6183, -2.7503, -3.1100, -3.1270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9044, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.6218, -2.7467, -3.1060, -3.1415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7626, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6204, -2.7442, -3.1055, -3.1462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8744, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.6146, -2.7418, -3.1122, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7825, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6093, -2.7417, -3.1171, -3.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9045, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6106, -2.7379, -3.1159, -3.1434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8491, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6157, -2.7298, -3.1094, -3.1409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6076, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6190, -2.7282, -3.1080, -3.1382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8004, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.6273, -2.7271, -3.1073, -3.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8843, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6306, -2.7292, -3.1066, -3.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7453, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6284, -2.7370, -3.1078, -3.1051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9350, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6275, -2.7448, -3.1076, -3.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6942, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6264, -2.7477, -3.1019, -3.1183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8970, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.6288, -2.7448, -3.0956, -3.1327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8395, device='cuda:0', dtype=torch.float64)
tensor([-1.8701, -2.6328, -2.7394, -3.0907, -3.1475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9874, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -2.6365, -2.7325, -3.0906, -3.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9905, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.6317, -2.7330, -3.1022, -3.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8875, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6212, -2.7418, -3.1178, -3.1270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9011, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6158, -2.7540, -3.1320, -3.1244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7198, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6113, -2.7627, -3.1416, -3.1278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9334, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6123, -2.7606, -3.1446, -3.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9058, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.6176, -2.7520, -3.1360, -3.1158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8195, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.6238, -2.7407, -3.1221, -3.1089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8075, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.6280, -2.7350, -3.1081, -3.1085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0267, device='cuda:0', dtype=torch.float64)
tensor([-1.8691, -2.6309, -2.7346, -3.1016, -3.1192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6069, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.6230, -2.7404, -3.1057, -3.1257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9773, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6099, -2.7428, -3.1191, -3.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8186, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.5981, -2.7403, -3.1294, -3.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8970, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.5901, -2.7316, -3.1299, -3.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6907, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.5879, -2.7191, -3.1281, -3.1229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8187, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.5866, -2.7083, -3.1221, -3.1250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7044, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.5874, -2.7004, -3.1175, -3.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7980, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.5895, -2.7019, -3.1134, -3.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8282, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.5929, -2.7102, -3.1102, -3.1361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5848, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6003, -2.7218, -3.1090, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8699, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.6118, -2.7379, -3.1066, -3.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7979, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6191, -2.7571, -3.1036, -3.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7704, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6274, -2.7688, -3.0981, -3.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8192, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.6329, -2.7676, -3.0881, -3.1572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9868, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.6335, -2.7628, -3.0819, -3.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0039, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.6261, -2.7649, -3.0816, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7795, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.6181, -2.7680, -3.0910, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7221, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6133, -2.7698, -3.1054, -3.1314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9841, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.6162, -2.7652, -3.1176, -3.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9502, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6259, -2.7578, -3.1200, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9311, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.6362, -2.7489, -3.1168, -3.1165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6728, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6452, -2.7397, -3.1129, -3.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0624, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.6458, -2.7338, -3.1167, -3.1184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8111, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.6396, -2.7278, -3.1162, -3.1235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7828, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6279, -2.7215, -3.1129, -3.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9496, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6134, -2.7182, -3.1080, -3.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5752, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6047, -2.7230, -3.1064, -3.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8257, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.6054, -2.7376, -3.1023, -3.1408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7056, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.6176, -2.7540, -3.1003, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6221, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6333, -2.7632, -3.0985, -3.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8000, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.6497, -2.7660, -3.0959, -3.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7769, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6609, -2.7669, -3.0933, -3.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7673, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6617, -2.7679, -3.0893, -3.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9888, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.6528, -2.7688, -3.0863, -3.1486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9155, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6345, -2.7683, -3.0882, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1591, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.6206, -2.7619, -3.0932, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9622, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.6069, -2.7535, -3.1010, -3.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0395, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.5966, -2.7427, -3.1078, -3.1179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9975, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.5892, -2.7284, -3.1213, -3.1021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0892, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.5872, -2.7317, -3.1314, -3.1045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6781, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.5923, -2.7388, -3.1359, -3.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8942, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6009, -2.7435, -3.1301, -3.1168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0485, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6126, -2.7404, -3.1192, -3.1175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9286, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.6233, -2.7311, -3.1098, -3.1106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9920, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.6264, -2.7246, -3.1069, -3.1085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0773, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.6281, -2.7248, -3.1101, -3.1207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0778, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.6244, -2.7339, -3.1171, -3.1348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8596, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.6158, -2.7443, -3.1227, -3.1361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9267, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.6068, -2.7541, -3.1229, -3.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8101, device='cuda:0', dtype=torch.float64)
tensor([-1.8552, -2.6069, -2.7571, -3.1155, -3.1077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9909, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.6118, -2.7565, -3.1054, -3.0970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8062, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6208, -2.7521, -3.0985, -3.0968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8695, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.6269, -2.7486, -3.1005, -3.1043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0897, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6303, -2.7420, -3.1002, -3.1092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8660, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6300, -2.7372, -3.1060, -3.1113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5895, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6253, -2.7355, -3.1118, -3.1131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8928, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6186, -2.7346, -3.1142, -3.1201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8354, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.6150, -2.7308, -3.1101, -3.1286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7553, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6167, -2.7253, -3.1007, -3.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9030, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.6191, -2.7216, -3.0927, -3.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8533, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.6184, -2.7186, -3.0854, -3.1356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9214, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.6173, -2.7198, -3.0865, -3.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8900, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6186, -2.7205, -3.0903, -3.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6955, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6178, -2.7224, -3.0959, -3.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7608, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.6136, -2.7232, -3.0990, -3.1486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8285, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6052, -2.7264, -3.0991, -3.1329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0017, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6001, -2.7268, -3.0986, -3.1173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9685, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.5949, -2.7294, -3.0952, -3.1152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0028, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.5982, -2.7384, -3.0892, -3.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6621, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.6038, -2.7490, -3.0842, -3.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7481, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6115, -2.7508, -3.0825, -3.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9267, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.6163, -2.7496, -3.0843, -3.1391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9905, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6229, -2.7461, -3.0886, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9221, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.6323, -2.7444, -3.0961, -3.1632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9077, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.6339, -2.7506, -3.1115, -3.1816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0038, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.6297, -2.7564, -3.1274, -3.1839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1520, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6144, -2.7652, -3.1410, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8911, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.5959, -2.7642, -3.1462, -3.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0008, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.5830, -2.7579, -3.1451, -3.1066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9810, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.5823, -2.7457, -3.1318, -3.0945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0584, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.5951, -2.7344, -3.1080, -3.1078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8488, device='cuda:0', dtype=torch.float64)
tensor([-1.8768, -2.6145, -2.7232, -3.0821, -3.1270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9706, device='cuda:0', dtype=torch.float64)
tensor([-1.8920, -2.6319, -2.7175, -3.0697, -3.1393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9881, device='cuda:0', dtype=torch.float64)
tensor([-1.8848, -2.6429, -2.7201, -3.0711, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0023, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.6485, -2.7303, -3.0891, -3.1370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0537, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.6456, -2.7423, -3.1105, -3.1348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9179, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6404, -2.7499, -3.1284, -3.1317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7909, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6255, -2.7569, -3.1428, -3.1319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9607, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6122, -2.7580, -3.1438, -3.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0349, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6058, -2.7493, -3.1317, -3.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7724, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6027, -2.7394, -3.1157, -3.1143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8281, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6009, -2.7341, -3.1055, -3.1136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8466, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.5967, -2.7332, -3.0988, -3.1147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9168, device='cuda:0', dtype=torch.float64)
tensor([-1.8561, -2.5998, -2.7371, -3.0997, -3.1176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8938, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.6037, -2.7405, -3.1052, -3.1151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8026, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6092, -2.7447, -3.1095, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6193, -2.7452, -3.1056, -3.1139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0283, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6271, -2.7492, -3.0916, -3.1280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6342, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6335, -2.7505, -3.0747, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0238, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6395, -2.7521, -3.0576, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0050, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.6419, -2.7463, -3.0444, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9393, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6345, -2.7369, -3.0442, -3.1337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0277, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.6239, -2.7317, -3.0570, -3.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9086, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.6133, -2.7318, -3.0760, -3.1254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0632, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6008, -2.7366, -3.0897, -3.1282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0662, device='cuda:0', dtype=torch.float64)
tensor([-1.8657, -2.5961, -2.7385, -3.0967, -3.1245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7619, device='cuda:0', dtype=torch.float64)
tensor([-1.8621, -2.5956, -2.7368, -3.1001, -3.1191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8621, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.5982, -2.7382, -3.1021, -3.1210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9088, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.6029, -2.7426, -3.1064, -3.1273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9408, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6068, -2.7456, -3.1048, -3.1368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7445, device='cuda:0', dtype=torch.float64)
tensor([-1.8139, -2.6126, -2.7468, -3.1027, -3.1455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8089, device='cuda:0', dtype=torch.float64)
tensor([-1.8147, -2.6177, -2.7479, -3.1025, -3.1516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8055, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6201, -2.7426, -3.1057, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8463, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6195, -2.7428, -3.1166, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7472, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.6197, -2.7446, -3.1261, -3.1358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7722, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.6144, -2.7497, -3.1381, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7240, device='cuda:0', dtype=torch.float64)
tensor([-1.8641, -2.6088, -2.7550, -3.1390, -3.1386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7887, device='cuda:0', dtype=torch.float64)
tensor([-1.8748, -2.6103, -2.7540, -3.1330, -3.1349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7810, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.6141, -2.7497, -3.1272, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7923, device='cuda:0', dtype=torch.float64)
tensor([-1.8634, -2.6199, -2.7452, -3.1217, -3.1163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8894, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6207, -2.7437, -3.1175, -3.1131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8591, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6206, -2.7459, -3.1131, -3.1120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7645, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6208, -2.7476, -3.1022, -3.1073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8839, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6226, -2.7442, -3.0941, -3.0992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9957, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6266, -2.7403, -3.0897, -3.0916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8759, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6292, -2.7420, -3.0957, -3.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9244, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6264, -2.7528, -3.1018, -3.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8958, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6225, -2.7625, -3.1071, -3.1486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2584, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.6180, -2.7664, -3.1034, -3.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8064, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.6107, -2.7567, -3.0963, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8549, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.6064, -2.7358, -3.0899, -3.1370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0753, device='cuda:0', dtype=torch.float64)
tensor([-1.8691, -2.6030, -2.7162, -3.0910, -3.1313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0991, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.5961, -2.7027, -3.0994, -3.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0330, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.5978, -2.6922, -3.1110, -3.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1175, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.5962, -2.6899, -3.1243, -3.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1134, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.6005, -2.6922, -3.1276, -3.0850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9259, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6061, -2.7030, -3.1291, -3.0902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8944, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6123, -2.7164, -3.1297, -3.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8093, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.6184, -2.7288, -3.1308, -3.1412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8211, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6213, -2.7408, -3.1253, -3.1546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.6210, -2.7496, -3.1087, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9372, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6171, -2.7603, -3.0913, -3.1396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1318, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.6142, -2.7707, -3.0808, -3.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8516, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.6053, -2.7830, -3.0785, -3.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8841, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.5967, -2.7852, -3.0814, -3.1671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8948, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.5884, -2.7757, -3.0795, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9835, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.5858, -2.7616, -3.0719, -3.1212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0137, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.5885, -2.7494, -3.0685, -3.0998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0378, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.5976, -2.7371, -3.0635, -3.0953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8552, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.6105, -2.7241, -3.0615, -3.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8066, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.6221, -2.7150, -3.0673, -3.1047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8732, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.6302, -2.7116, -3.0834, -3.1013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9356, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.6318, -2.7172, -3.1082, -3.1001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.6272, -2.7295, -3.1295, -3.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8743, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.6156, -2.7478, -3.1490, -3.1146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8241, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6098, -2.7593, -3.1604, -3.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7447, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6100, -2.7574, -3.1576, -3.1208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8075, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6224, -2.7542, -3.1392, -3.1226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7719, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6380, -2.7462, -3.1149, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8323, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6474, -2.7410, -3.0956, -3.1438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7779, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.6485, -2.7383, -3.0895, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9820, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.6439, -2.7336, -3.0858, -3.1602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8307, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6259, -2.7419, -3.0971, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6716, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6068, -2.7491, -3.1117, -3.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9591, device='cuda:0', dtype=torch.float64)
tensor([-1.8131, -2.5905, -2.7548, -3.1202, -3.1299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8721, device='cuda:0', dtype=torch.float64)
tensor([-1.8117, -2.5857, -2.7552, -3.1208, -3.1199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8761, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.5914, -2.7422, -3.1121, -3.1236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8808, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.6051, -2.7284, -3.0973, -3.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8654, device='cuda:0', dtype=torch.float64)
tensor([-1.8620, -2.6245, -2.7069, -3.0798, -3.1413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8322, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.6323, -2.6920, -3.0740, -3.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8964, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.6289, -2.6914, -3.0764, -3.1280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9549, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6200, -2.7049, -3.0837, -3.1349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8864, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6064, -2.7265, -3.0923, -3.1506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0199, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.5966, -2.7431, -3.0927, -3.1554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2185, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.5912, -2.7537, -3.0824, -3.1416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9206, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.5974, -2.7465, -3.0622, -3.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8788, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6105, -2.7322, -3.0427, -3.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1221, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.6281, -2.7148, -3.0307, -3.1220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9754, device='cuda:0', dtype=torch.float64)
tensor([-1.8681, -2.6457, -2.7060, -3.0299, -3.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8444, device='cuda:0', dtype=torch.float64)
tensor([-1.8762, -2.6550, -2.7024, -3.0381, -3.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0039, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.6506, -2.7026, -3.0543, -3.1202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9866, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6381, -2.7221, -3.0809, -3.1106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9173, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.6200, -2.7531, -3.1123, -3.1016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1188, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6006, -2.7791, -3.1390, -3.0905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9793, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.5972, -2.7840, -3.1465, -3.0772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0803, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6101, -2.7744, -3.1404, -3.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8807, device='cuda:0', dtype=torch.float64)
tensor([-1.8844, -2.6198, -2.7657, -3.1343, -3.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8901, device='cuda:0', dtype=torch.float64)
tensor([-1.8933, -2.6290, -2.7572, -3.1241, -3.0833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2921, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.6227, -2.7544, -3.1234, -3.0730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8253, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6151, -2.7617, -3.1323, -3.0760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8369, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6152, -2.7731, -3.1354, -3.1002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9031, device='cuda:0', dtype=torch.float64)
tensor([-1.8150, -2.6266, -2.7779, -3.1347, -3.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8472, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6434, -2.7692, -3.1223, -3.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9134, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6579, -2.7512, -3.1049, -3.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6924, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.6595, -2.7339, -3.0919, -3.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9025, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6508, -2.7261, -3.0864, -3.1799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0540, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6292, -2.7275, -3.0889, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0010, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6099, -2.7324, -3.0939, -3.1493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9917, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.5964, -2.7378, -3.0931, -3.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0915, device='cuda:0', dtype=torch.float64)
tensor([-1.8616, -2.5973, -2.7305, -3.0913, -3.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7493, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.6108, -2.7174, -3.0914, -3.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9396, device='cuda:0', dtype=torch.float64)
tensor([-1.8829, -2.6233, -2.7141, -3.0993, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9077, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.6290, -2.7213, -3.1092, -3.1446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7270, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.6231, -2.7366, -3.1181, -3.1467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6941, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6097, -2.7552, -3.1200, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9934, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.5988, -2.7646, -3.1109, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9497, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.5912, -2.7681, -3.0975, -3.1301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7194, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.5858, -2.7663, -3.0776, -3.1254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8272, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.5915, -2.7637, -3.0592, -3.1271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7348, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.6058, -2.7613, -3.0422, -3.1317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8422, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.6242, -2.7531, -3.0269, -3.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9303, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.6378, -2.7491, -3.0248, -3.1106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0085, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.6484, -2.7366, -3.0254, -3.0870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1721, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.6503, -2.7276, -3.0395, -3.0697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0200, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.6448, -2.7245, -3.0602, -3.0776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8107, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.6338, -2.7227, -3.0838, -3.0944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8785, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.6246, -2.7193, -3.1064, -3.1111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9649, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.6169, -2.7210, -3.1318, -3.1258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8233, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.6120, -2.7262, -3.1568, -3.1333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8734, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6134, -2.7353, -3.1786, -3.1463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9174, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6234, -2.7354, -3.1817, -3.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6841, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.6373, -2.7329, -3.1702, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8407, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.6488, -2.7278, -3.1473, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0137, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6555, -2.7247, -3.1197, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0144, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6546, -2.7247, -3.0993, -3.1393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8779, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6466, -2.7222, -3.0907, -3.1288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8737, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.6268, -2.7201, -3.0948, -3.1231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7783, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6029, -2.7255, -3.1136, -3.1200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2649, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.5803, -2.7409, -3.1256, -3.1194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9783, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.5673, -2.7556, -3.1302, -3.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0964, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.5600, -2.7664, -3.1227, -3.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2048, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.5736, -2.7615, -3.1014, -3.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8719, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.5896, -2.7566, -3.0843, -3.1380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([-1.8974, -2.6056, -2.7496, -3.0741, -3.1506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9737, device='cuda:0', dtype=torch.float64)
tensor([-1.8986, -2.6096, -2.7423, -3.0740, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0291, device='cuda:0', dtype=torch.float64)
tensor([-1.8865, -2.6059, -2.7427, -3.0842, -3.1063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0962, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.5960, -2.7605, -3.1002, -3.0880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8918, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.5939, -2.7815, -3.1109, -3.0870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8418, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.5967, -2.7913, -3.1091, -3.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8516, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6069, -2.7899, -3.0970, -3.0907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0882, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6251, -2.7705, -3.0749, -3.0972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9874, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.6486, -2.7393, -3.0588, -3.1016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8198, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.6657, -2.7154, -3.0663, -3.1092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9060, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6663, -2.7094, -3.0917, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0007, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6563, -2.7179, -3.1120, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0361, device='cuda:0', dtype=torch.float64)
tensor([-1.8056, -2.6352, -2.7407, -3.1284, -3.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8664, device='cuda:0', dtype=torch.float64)
tensor([-1.7989, -2.6182, -2.7568, -3.1401, -3.1299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8540, device='cuda:0', dtype=torch.float64)
tensor([-1.8056, -2.6055, -2.7572, -3.1384, -3.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9511, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6040, -2.7463, -3.1212, -3.1486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7596, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6022, -2.7336, -3.1045, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8868, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.6028, -2.7219, -3.0831, -3.1598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1621, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.6066, -2.7159, -3.0714, -3.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8086, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.6064, -2.7229, -3.0678, -3.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9364, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.6089, -2.7315, -3.0724, -3.0992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9501, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6143, -2.7434, -3.0801, -3.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8133, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.6216, -2.7509, -3.0823, -3.0964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9600, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.6430, -2.7399, -3.0737, -3.1047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8732, device='cuda:0', dtype=torch.float64)
tensor([-1.8817, -2.6569, -2.7288, -3.0647, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8589, device='cuda:0', dtype=torch.float64)
tensor([-1.8901, -2.6624, -2.7161, -3.0604, -3.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9111, device='cuda:0', dtype=torch.float64)
tensor([-1.8919, -2.6575, -2.7142, -3.0717, -3.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9119, device='cuda:0', dtype=torch.float64)
tensor([-1.8811, -2.6408, -2.7228, -3.0924, -3.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0003, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.6113, -2.7423, -3.1187, -3.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6487, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.5879, -2.7533, -3.1371, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6985, device='cuda:0', dtype=torch.float64)
tensor([-1.8069, -2.5792, -2.7539, -3.1342, -3.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7070, device='cuda:0', dtype=torch.float64)
tensor([-1.8107, -2.5857, -2.7420, -3.1155, -3.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7333, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6069, -2.7255, -3.0912, -3.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7956, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6300, -2.7198, -3.0742, -3.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8276, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.6420, -2.7251, -3.0566, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7764, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6403, -2.7373, -3.0526, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8632, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6241, -2.7526, -3.0640, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9429, device='cuda:0', dtype=torch.float64)
tensor([-1.8109, -2.6011, -2.7693, -3.0817, -3.1324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8478, device='cuda:0', dtype=torch.float64)
tensor([-1.8128, -2.5867, -2.7748, -3.0947, -3.1254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7943, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.5764, -2.7722, -3.1054, -3.1214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0135, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.5830, -2.7659, -3.1033, -3.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9031, device='cuda:0', dtype=torch.float64)
tensor([-1.8788, -2.5908, -2.7575, -3.0936, -3.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9948, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -2.6009, -2.7539, -3.0830, -3.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1235, device='cuda:0', dtype=torch.float64)
tensor([-1.9237, -2.6138, -2.7496, -3.0869, -3.1521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9380, device='cuda:0', dtype=torch.float64)
tensor([-1.9137, -2.6202, -2.7386, -3.0932, -3.1289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1747, device='cuda:0', dtype=torch.float64)
tensor([-1.8985, -2.6321, -2.7185, -3.0905, -3.0858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9307, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.6409, -2.7049, -3.0967, -3.0532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9646, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.6400, -2.7111, -3.1060, -3.0445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8400, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6348, -2.7231, -3.1179, -3.0514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1556, device='cuda:0', dtype=torch.float64)
tensor([-1.8021, -2.6327, -2.7329, -3.1215, -3.0757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3658, device='cuda:0', dtype=torch.float64)
tensor([-1.7986, -2.6264, -2.7329, -3.1141, -3.0997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8927, device='cuda:0', dtype=torch.float64)
tensor([-1.8105, -2.6285, -2.7224, -3.0939, -3.1237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1655, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6352, -2.7134, -3.0683, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4335, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.6404, -2.7097, -3.0533, -3.1839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1229, device='cuda:0', dtype=torch.float64)
tensor([-1.8807, -2.6480, -2.7056, -3.0488, -3.2011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2722, device='cuda:0', dtype=torch.float64)
tensor([-1.8785, -2.6469, -2.7047, -3.0541, -3.1944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1428, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6392, -2.7216, -3.0812, -3.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1831, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.6212, -2.7517, -3.1207, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1759, device='cuda:0', dtype=torch.float64)
tensor([-1.7896, -2.6045, -2.7767, -3.1555, -3.0967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9309, device='cuda:0', dtype=torch.float64)
tensor([-1.7881, -2.6022, -2.7858, -3.1653, -3.0807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2447, device='cuda:0', dtype=torch.float64)
tensor([-1.8147, -2.6098, -2.7711, -3.1490, -3.0706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1156, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.6190, -2.7356, -3.1136, -3.0644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9096, device='cuda:0', dtype=torch.float64)
tensor([-1.9122, -2.6306, -2.7033, -3.0736, -3.0749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9172, device='cuda:0', dtype=torch.float64)
tensor([-1.9441, -2.6324, -2.6915, -3.0541, -3.0956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-1.9469, -2.6156, -2.7059, -3.0680, -3.1185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1250, device='cuda:0', dtype=torch.float64)
tensor([-1.9289, -2.5986, -2.7285, -3.0956, -3.1391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0928, device='cuda:0', dtype=torch.float64)
tensor([-1.8871, -2.5797, -2.7543, -3.1239, -3.1441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8416, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.5735, -2.7717, -3.1437, -3.1368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9341, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.5896, -2.7794, -3.1403, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0531, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6153, -2.7797, -3.1234, -3.1521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9939, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6399, -2.7676, -3.1008, -3.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0081, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6566, -2.7524, -3.0805, -3.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1404, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6588, -2.7311, -3.0579, -3.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9610, device='cuda:0', dtype=torch.float64)
tensor([-1.8095, -2.6501, -2.7219, -3.0426, -3.1065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9520, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.6365, -2.7251, -3.0468, -3.0994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0310, device='cuda:0', dtype=torch.float64)
tensor([-1.8145, -2.6245, -2.7400, -3.0655, -3.1146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8913, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6202, -2.7505, -3.0888, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2277, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6228, -2.7546, -3.1067, -3.1325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8281, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.6354, -2.7508, -3.1226, -3.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0841, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.6456, -2.7477, -3.1375, -3.1441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9272, device='cuda:0', dtype=torch.float64)
tensor([-1.8952, -2.6392, -2.7480, -3.1548, -3.1560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7658, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.6212, -2.7486, -3.1635, -3.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1500, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.5985, -2.7428, -3.1599, -3.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0101, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.5882, -2.7218, -3.1351, -3.0722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0140, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.5958, -2.6891, -3.0967, -3.0517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8656, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.6145, -2.6618, -3.0584, -3.0540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0559, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.6342, -2.6609, -3.0327, -3.0793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9878, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.6485, -2.6820, -3.0359, -3.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1641, device='cuda:0', dtype=torch.float64)
tensor([-1.8848, -2.6424, -2.7147, -3.0613, -3.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8134, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.6266, -2.7514, -3.0954, -3.1284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6642, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6091, -2.7812, -3.1286, -3.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4414, device='cuda:0', dtype=torch.float64)
tensor([-1.7945, -2.6007, -2.8047, -3.1496, -3.1069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0543, device='cuda:0', dtype=torch.float64)
tensor([-1.7964, -2.6001, -2.8158, -3.1456, -3.1163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0812, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6139, -2.8125, -3.1187, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0055, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6293, -2.7924, -3.0811, -3.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0994, device='cuda:0', dtype=torch.float64)
tensor([-1.8764, -2.6365, -2.7692, -3.0569, -3.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3051, device='cuda:0', dtype=torch.float64)
tensor([-1.8947, -2.6301, -2.7614, -3.0473, -3.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9093, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.6106, -2.7628, -3.0576, -3.1742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8702, device='cuda:0', dtype=torch.float64)
tensor([-1.8914, -2.5926, -2.7625, -3.0851, -3.1904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8795, device='cuda:0', dtype=torch.float64)
tensor([-1.8750, -2.5856, -2.7495, -3.1101, -3.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0608, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.5961, -2.7217, -3.1292, -3.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7805, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6095, -2.6927, -3.1384, -3.1382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9175, device='cuda:0', dtype=torch.float64)
tensor([-1.8048, -2.6213, -2.6677, -3.1365, -3.1286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9548, device='cuda:0', dtype=torch.float64)
tensor([-1.8074, -2.6327, -2.6563, -3.1237, -3.1255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6361, -2.6561, -3.1022, -3.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1301, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6273, -2.6622, -3.0767, -3.1097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8859, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.6175, -2.6753, -3.0608, -3.0939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0751, device='cuda:0', dtype=torch.float64)
tensor([-1.8693, -2.6105, -2.7028, -3.0500, -3.0848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9513, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.6075, -2.7303, -3.0484, -3.0882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1780, device='cuda:0', dtype=torch.float64)
tensor([-1.9043, -2.6205, -2.7542, -3.0525, -3.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8569, device='cuda:0', dtype=torch.float64)
tensor([-1.9144, -2.6321, -2.7699, -3.0688, -3.0950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6977, device='cuda:0', dtype=torch.float64)
tensor([-1.9172, -2.6409, -2.7790, -3.0900, -3.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8202, device='cuda:0', dtype=torch.float64)
tensor([-1.9047, -2.6433, -2.7866, -3.1043, -3.0897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3621, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.6372, -2.7962, -3.1161, -3.0844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8830, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.6287, -2.7930, -3.1107, -3.0774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8052, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6255, -2.7732, -3.0884, -3.0731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9543, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6376, -2.7418, -3.0643, -3.0741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6295, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6476, -2.7138, -3.0447, -3.0820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9642, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6494, -2.6975, -3.0389, -3.1047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7138, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.6419, -2.7025, -3.0511, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8704, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6246, -2.7209, -3.0767, -3.1409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0053, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6092, -2.7422, -3.1107, -3.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7773, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.5914, -2.7565, -3.1397, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9597, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.5783, -2.7488, -3.1607, -3.1367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2719, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.5754, -2.7439, -3.1658, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8870, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.5813, -2.7280, -3.1473, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2136, device='cuda:0', dtype=torch.float64)
tensor([-1.8723, -2.5947, -2.7107, -3.1185, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1261, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.6051, -2.6976, -3.0874, -3.1198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0198, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.6238, -2.6928, -3.0689, -3.1080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3645, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.6374, -2.6982, -3.0689, -3.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3141, device='cuda:0', dtype=torch.float64)
tensor([-1.8777, -2.6425, -2.7134, -3.0867, -3.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9310, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.6326, -2.7399, -3.1152, -3.1577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4090, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.6125, -2.7698, -3.1439, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1563, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.5938, -2.7940, -3.1541, -3.1448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3593, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.5833, -2.8078, -3.1397, -3.1303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0752, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.5837, -2.8116, -3.1221, -3.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1603, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.5892, -2.7971, -3.0982, -3.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0767, device='cuda:0', dtype=torch.float64)
tensor([-1.8784, -2.6024, -2.7780, -3.0825, -3.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0281, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.6248, -2.7517, -3.0744, -3.1063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1328, device='cuda:0', dtype=torch.float64)
tensor([-1.8742, -2.6495, -2.7231, -3.0792, -3.0916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8832, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.6602, -2.7116, -3.0941, -3.0872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9439, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.6622, -2.7168, -3.1110, -3.0987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9646, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6574, -2.7311, -3.1278, -3.1078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9790, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6482, -2.7423, -3.1287, -3.1100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0030, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6395, -2.7414, -3.1192, -3.1157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9131, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6360, -2.7292, -3.1005, -3.1273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8388, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.6381, -2.7179, -3.0778, -3.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8001, device='cuda:0', dtype=torch.float64)
tensor([-1.8838, -2.6340, -2.7103, -3.0591, -3.1660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3281, device='cuda:0', dtype=torch.float64)
tensor([-1.8977, -2.6278, -2.7212, -3.0583, -3.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8015, device='cuda:0', dtype=torch.float64)
tensor([-1.8777, -2.6178, -2.7356, -3.0745, -3.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8348, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6047, -2.7505, -3.0978, -3.1613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0507, device='cuda:0', dtype=torch.float64)
tensor([-1.8156, -2.5944, -2.7592, -3.1225, -3.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2728, device='cuda:0', dtype=torch.float64)
tensor([-1.7941, -2.5896, -2.7581, -3.1404, -3.1119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8445, device='cuda:0', dtype=torch.float64)
tensor([-1.7928, -2.5975, -2.7478, -3.1497, -3.1009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0406, device='cuda:0', dtype=torch.float64)
tensor([-1.8073, -2.6085, -2.7231, -3.1384, -3.0903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3679, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6071, -2.7048, -3.1182, -3.0795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0399, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6028, -2.6881, -3.0895, -3.0764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9709, device='cuda:0', dtype=torch.float64)
tensor([-1.8820, -2.6036, -2.6845, -3.0685, -3.0918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0887, device='cuda:0', dtype=torch.float64)
tensor([-1.9111, -2.6014, -2.6873, -3.0603, -3.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9411, device='cuda:0', dtype=torch.float64)
tensor([-1.9331, -2.6009, -2.6948, -3.0610, -3.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0392, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.5912, -2.7093, -3.0692, -3.1569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8811, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.5830, -2.7295, -3.0814, -3.1309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0866, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.5771, -2.7644, -3.0979, -3.1071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0489, device='cuda:0', dtype=torch.float64)
tensor([-1.8036, -2.5837, -2.7942, -3.1087, -3.0895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9134, device='cuda:0', dtype=torch.float64)
tensor([-1.7956, -2.5984, -2.8103, -3.1077, -3.0911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0070, device='cuda:0', dtype=torch.float64)
tensor([-1.8117, -2.6191, -2.8131, -3.0865, -3.1002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2021, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6409, -2.8019, -3.0498, -3.0993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0854, device='cuda:0', dtype=torch.float64)
tensor([-1.8681, -2.6606, -2.7825, -3.0288, -3.0986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0596, device='cuda:0', dtype=torch.float64)
tensor([-1.8856, -2.6712, -2.7673, -3.0300, -3.1066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1470, device='cuda:0', dtype=torch.float64)
tensor([-1.8889, -2.6658, -2.7655, -3.0631, -3.1230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1702, device='cuda:0', dtype=torch.float64)
tensor([-1.8758, -2.6545, -2.7657, -3.1109, -3.1360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4678, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.6418, -2.7714, -3.1561, -3.1251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1228, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.6211, -2.7719, -3.1917, -3.1021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0499, device='cuda:0', dtype=torch.float64)
tensor([-1.7944, -2.6016, -2.7625, -3.1940, -3.0851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1026, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.5958, -2.7384, -3.1668, -3.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9224, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.5985, -2.7083, -3.1206, -3.1101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9522, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.5963, -2.6842, -3.0648, -3.1294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8214, device='cuda:0', dtype=torch.float64)
tensor([-1.9233, -2.6007, -2.6743, -3.0247, -3.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9703, device='cuda:0', dtype=torch.float64)
tensor([-1.9270, -2.6028, -2.6763, -3.0043, -3.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8250, device='cuda:0', dtype=torch.float64)
tensor([-1.8937, -2.5972, -2.6987, -3.0280, -3.1808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9081, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6022, -2.7275, -3.0656, -3.1893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0231, device='cuda:0', dtype=torch.float64)
tensor([-1.8122, -2.6116, -2.7574, -3.1089, -3.1906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9002, device='cuda:0', dtype=torch.float64)
tensor([-1.7875, -2.6284, -2.7742, -3.1353, -3.1790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9695, device='cuda:0', dtype=torch.float64)
tensor([-1.7879, -2.6487, -2.7702, -3.1376, -3.1696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9527, device='cuda:0', dtype=torch.float64)
tensor([-1.8129, -2.6598, -2.7590, -3.1223, -3.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2600, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.6660, -2.7424, -3.1060, -3.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3029, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.6714, -2.7387, -3.0965, -3.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8567, device='cuda:0', dtype=torch.float64)
tensor([-1.9201, -2.6692, -2.7374, -3.0990, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0328, device='cuda:0', dtype=torch.float64)
tensor([-1.9324, -2.6585, -2.7506, -3.1141, -3.1454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0922, device='cuda:0', dtype=torch.float64)
tensor([-1.9038, -2.6358, -2.7639, -3.1423, -3.1202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9817, device='cuda:0', dtype=torch.float64)
tensor([-1.8689, -2.6187, -2.7671, -3.1563, -3.0807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0588, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6131, -2.7574, -3.1533, -3.0468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2725, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6116, -2.7497, -3.1454, -3.0402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0667, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.6119, -2.7471, -3.1346, -3.0585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1160, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6141, -2.7469, -3.1205, -3.0715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1342, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6200, -2.7423, -3.0995, -3.0767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9482, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6232, -2.7356, -3.0725, -3.0800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9054, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.6271, -2.7287, -3.0528, -3.0936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3484, device='cuda:0', dtype=torch.float64)
tensor([-1.8961, -2.6266, -2.7258, -3.0399, -3.1304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8052, device='cuda:0', dtype=torch.float64)
tensor([-1.9284, -2.6277, -2.7214, -3.0418, -3.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1326, device='cuda:0', dtype=torch.float64)
tensor([-1.9204, -2.6234, -2.7176, -3.0592, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4263, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.6088, -2.7124, -3.0747, -3.1112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0643, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.5922, -2.7189, -3.0882, -3.0817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3365, device='cuda:0', dtype=torch.float64)
tensor([-1.7979, -2.5735, -2.7412, -3.1051, -3.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9938, device='cuda:0', dtype=torch.float64)
tensor([-1.7931, -2.5688, -2.7528, -3.1108, -3.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1844, device='cuda:0', dtype=torch.float64)
tensor([-1.7998, -2.5723, -2.7492, -3.0997, -3.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5535, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.5909, -2.7232, -3.0667, -3.1226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0052, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.6155, -2.7028, -3.0519, -3.1345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2878, device='cuda:0', dtype=torch.float64)
tensor([-1.9013, -2.6461, -2.7005, -3.0693, -3.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3178, device='cuda:0', dtype=torch.float64)
tensor([-1.9043, -2.6469, -2.7203, -3.1083, -3.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0261, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.6322, -2.7429, -3.1408, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3587, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6100, -2.7551, -3.1637, -3.1137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8733, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.5890, -2.7591, -3.1647, -3.0754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0553, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.5849, -2.7469, -3.1348, -3.0626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6001, -2.7258, -3.0849, -3.0741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1061, device='cuda:0', dtype=torch.float64)
tensor([-1.9039, -2.6258, -2.7054, -3.0449, -3.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9754, device='cuda:0', dtype=torch.float64)
tensor([-1.9154, -2.6400, -2.7031, -3.0354, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4345, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.6450, -2.7081, -3.0383, -3.1438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2649, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.6381, -2.7343, -3.0523, -3.1424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9714, device='cuda:0', dtype=torch.float64)
tensor([-1.8092, -2.6305, -2.7707, -3.0728, -3.1415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1752, device='cuda:0', dtype=torch.float64)
tensor([-1.7885, -2.6245, -2.8022, -3.0832, -3.1503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9003, device='cuda:0', dtype=torch.float64)
tensor([-1.7895, -2.6201, -2.8095, -3.0780, -3.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0936, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6282, -2.7812, -3.0526, -3.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0540, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.6413, -2.7449, -3.0320, -3.1478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8511, device='cuda:0', dtype=torch.float64)
tensor([-1.9050, -2.6460, -2.7157, -3.0326, -3.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8969, device='cuda:0', dtype=torch.float64)
tensor([-1.9094, -2.6338, -2.7052, -3.0609, -3.1332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0735, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.6071, -2.7183, -3.1167, -3.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9018, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.5769, -2.7409, -3.1743, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3075, device='cuda:0', dtype=torch.float64)
tensor([-1.8064, -2.5569, -2.7606, -3.2060, -3.0974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0720, device='cuda:0', dtype=torch.float64)
tensor([-1.8043, -2.5549, -2.7580, -3.2001, -3.0866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0038, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.5796, -2.7366, -3.1648, -3.0838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0844, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.6167, -2.7144, -3.1162, -3.1025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7835, device='cuda:0', dtype=torch.float64)
tensor([-1.9122, -2.6537, -2.6906, -3.0797, -3.1174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1458, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.6662, -2.6842, -3.0677, -3.1231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3204, device='cuda:0', dtype=torch.float64)
tensor([-1.8910, -2.6627, -2.6973, -3.0848, -3.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1460, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.6508, -2.7311, -3.1138, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1984, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6327, -2.7813, -3.1377, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9128, device='cuda:0', dtype=torch.float64)
tensor([-1.8015, -2.6204, -2.8327, -3.1481, -3.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0858, device='cuda:0', dtype=torch.float64)
tensor([-1.7996, -2.6170, -2.8568, -3.1296, -3.1528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9649, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.6260, -2.8403, -3.0899, -3.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1033, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.6450, -2.8018, -3.0416, -3.1290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1074, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.6583, -2.7601, -3.0074, -3.1204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8887, device='cuda:0', dtype=torch.float64)
tensor([-1.9233, -2.6547, -2.7309, -3.0020, -3.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9520, device='cuda:0', dtype=torch.float64)
tensor([-1.9119, -2.6410, -2.7233, -3.0294, -3.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2506, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6191, -2.7266, -3.0763, -3.0962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0046, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6067, -2.7343, -3.1252, -3.0783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8146, device='cuda:0', dtype=torch.float64)
tensor([-1.7986, -2.6049, -2.7351, -3.1567, -3.0758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9462, device='cuda:0', dtype=torch.float64)
tensor([-1.8077, -2.6070, -2.7242, -3.1614, -3.0744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1912, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6081, -2.6972, -3.1406, -3.0810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1736, device='cuda:0', dtype=torch.float64)
tensor([-1.8904, -2.6184, -2.6640, -3.1121, -3.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8446, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.6231, -2.6424, -3.0930, -3.1083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9547, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.6175, -2.6439, -3.0902, -3.1018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0980, device='cuda:0', dtype=torch.float64)
tensor([-1.8894, -2.5992, -2.6649, -3.1050, -3.0854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0706, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.5817, -2.6974, -3.1304, -3.0853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.5726, -2.7265, -3.1511, -3.1088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9649, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.5781, -2.7290, -3.1425, -3.1169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1931, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.6010, -2.7123, -3.1117, -3.1343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8846, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.6281, -2.6962, -3.0779, -3.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0491, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.6507, -2.6937, -3.0587, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1094, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.6564, -2.7120, -3.0693, -3.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0373, device='cuda:0', dtype=torch.float64)
tensor([-1.8577, -2.6479, -2.7460, -3.1010, -3.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2149, device='cuda:0', dtype=torch.float64)
tensor([-1.7994, -2.6343, -2.7858, -3.1395, -3.1167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9912, device='cuda:0', dtype=torch.float64)
tensor([-1.7535, -2.6172, -2.8229, -3.1637, -3.1034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9456, device='cuda:0', dtype=torch.float64)
tensor([-1.7446, -2.6170, -2.8372, -3.1589, -3.0987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1559, device='cuda:0', dtype=torch.float64)
tensor([-1.7809, -2.6235, -2.8257, -3.1173, -3.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0739, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.6448, -2.8020, -3.0604, -3.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8702, device='cuda:0', dtype=torch.float64)
tensor([-1.9006, -2.6595, -2.7838, -3.0220, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0599, device='cuda:0', dtype=torch.float64)
tensor([-1.9248, -2.6563, -2.7719, -3.0104, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0964, device='cuda:0', dtype=torch.float64)
tensor([-1.9134, -2.6372, -2.7614, -3.0225, -3.1528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9210, device='cuda:0', dtype=torch.float64)
tensor([-1.8748, -2.6096, -2.7613, -3.0631, -3.1194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9751, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.5894, -2.7597, -3.1121, -3.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4824, device='cuda:0', dtype=torch.float64)
tensor([-1.8008, -2.5849, -2.7537, -3.1559, -3.0774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9188, device='cuda:0', dtype=torch.float64)
tensor([-1.8163, -2.6008, -2.7372, -3.1706, -3.0887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3317, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.6329, -2.6996, -3.1599, -3.1175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2907, device='cuda:0', dtype=torch.float64)
tensor([-1.9217, -2.6658, -2.6634, -3.1320, -3.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([-1.9579, -2.6818, -2.6412, -3.1130, -3.1419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2057, device='cuda:0', dtype=torch.float64)
tensor([-1.9514, -2.6696, -2.6435, -3.1009, -3.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2455, device='cuda:0', dtype=torch.float64)
tensor([-1.9261, -2.6427, -2.6694, -3.1031, -3.1361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8156, device='cuda:0', dtype=torch.float64)
tensor([-1.8767, -2.6075, -2.7039, -3.1095, -3.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2966, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.5732, -2.7354, -3.1081, -3.0800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8417, device='cuda:0', dtype=torch.float64)
tensor([-1.7759, -2.5551, -2.7623, -3.0973, -3.0487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0631, device='cuda:0', dtype=torch.float64)
tensor([-1.7792, -2.5541, -2.7812, -3.0723, -3.0443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3562, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.5632, -2.7976, -3.0474, -3.0830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1749, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.5940, -2.8084, -3.0307, -3.1273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0911, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.6295, -2.8073, -3.0308, -3.1521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4592, device='cuda:0', dtype=torch.float64)
tensor([-1.9089, -2.6690, -2.7953, -3.0474, -3.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3862, device='cuda:0', dtype=torch.float64)
tensor([-1.8901, -2.6933, -2.7925, -3.0714, -3.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2627, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.6995, -2.8019, -3.1101, -3.1191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0887, device='cuda:0', dtype=torch.float64)
tensor([-1.8625, -2.6819, -2.8187, -3.1363, -3.1268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2601, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6531, -2.8117, -3.1505, -3.1278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3779, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.6172, -2.7859, -3.1440, -3.1231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2607, device='cuda:0', dtype=torch.float64)
tensor([-1.8809, -2.5812, -2.7569, -3.1327, -3.1327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1723, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.5458, -2.7341, -3.1209, -3.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3794, device='cuda:0', dtype=torch.float64)
tensor([-1.8742, -2.5249, -2.7155, -3.1237, -3.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1077, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.5210, -2.7067, -3.1279, -3.0928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2104, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.5311, -2.7032, -3.1182, -3.0848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2977, device='cuda:0', dtype=torch.float64)
tensor([-1.8575, -2.5540, -2.6992, -3.0871, -3.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5646, device='cuda:0', dtype=torch.float64)
tensor([-1.8782, -2.5959, -2.6907, -3.0549, -3.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2889, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.6444, -2.6821, -3.0379, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5775, device='cuda:0', dtype=torch.float64)
tensor([-1.8951, -2.6764, -2.6830, -3.0468, -3.1697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2510, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.6820, -2.7021, -3.0890, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5625, device='cuda:0', dtype=torch.float64)
tensor([-1.8016, -2.6787, -2.7290, -3.1382, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0287, device='cuda:0', dtype=torch.float64)
tensor([-1.7767, -2.6695, -2.7553, -3.1771, -3.1815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9763, device='cuda:0', dtype=torch.float64)
tensor([-1.7847, -2.6526, -2.7601, -3.1712, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5414, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6483, -2.7345, -3.1263, -3.1818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9742, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -2.6489, -2.7016, -3.0660, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2031, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.6564, -2.6798, -3.0154, -3.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9892, device='cuda:0', dtype=torch.float64)
tensor([-1.9219, -2.6555, -2.6813, -3.0003, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2076, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.6276, -2.7056, -3.0234, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9212, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6013, -2.7426, -3.0716, -3.1124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1080, device='cuda:0', dtype=torch.float64)
tensor([-1.7792, -2.5936, -2.7770, -3.1146, -3.1064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9338, device='cuda:0', dtype=torch.float64)
tensor([-1.7731, -2.6023, -2.7921, -3.1358, -3.1220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2810, device='cuda:0', dtype=torch.float64)
tensor([-1.8083, -2.6291, -2.7915, -3.1208, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3823, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.6584, -2.7686, -3.0987, -3.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1702, device='cuda:0', dtype=torch.float64)
tensor([-1.9182, -2.6675, -2.7366, -3.0850, -3.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2201, device='cuda:0', dtype=torch.float64)
tensor([-1.9323, -2.6624, -2.7155, -3.0994, -3.1528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3791, device='cuda:0', dtype=torch.float64)
tensor([-1.9082, -2.6379, -2.7157, -3.1350, -3.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1699, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.6040, -2.7385, -3.1784, -3.0581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1229, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.5768, -2.7616, -3.2094, -3.0189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9172, device='cuda:0', dtype=torch.float64)
tensor([-1.8085, -2.5641, -2.7680, -3.2106, -3.0049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2963, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.5721, -2.7514, -3.1668, -3.0252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0700, device='cuda:0', dtype=torch.float64)
tensor([-1.8982, -2.5763, -2.7264, -3.1175, -3.0598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1494, device='cuda:0', dtype=torch.float64)
tensor([-1.9605, -2.5905, -2.7022, -3.0755, -3.1140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0684, device='cuda:0', dtype=torch.float64)
tensor([-1.9973, -2.6045, -2.6839, -3.0512, -3.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4141, device='cuda:0', dtype=torch.float64)
tensor([-1.9815, -2.6030, -2.6909, -3.0579, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0631, device='cuda:0', dtype=torch.float64)
tensor([-1.9199, -2.5941, -2.7267, -3.0896, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8381, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.5911, -2.7698, -3.1370, -3.1262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0783, device='cuda:0', dtype=torch.float64)
tensor([-1.7868, -2.6040, -2.7997, -3.1691, -3.1200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3999, device='cuda:0', dtype=torch.float64)
tensor([-1.7697, -2.6203, -2.8001, -3.1710, -3.1272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2114, device='cuda:0', dtype=torch.float64)
tensor([-1.7951, -2.6396, -2.7663, -3.1448, -3.1438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0393, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6590, -2.7208, -3.1187, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0220, device='cuda:0', dtype=torch.float64)
tensor([-1.8703, -2.6708, -2.6868, -3.0896, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1761, device='cuda:0', dtype=torch.float64)
tensor([-1.8849, -2.6686, -2.6798, -3.0746, -3.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3711, device='cuda:0', dtype=torch.float64)
tensor([-1.8762, -2.6551, -2.6990, -3.0557, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -2.6492, -2.7150, -3.0515, -3.1291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2939, device='cuda:0', dtype=torch.float64)
tensor([-1.8651, -2.6336, -2.7402, -3.0558, -3.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1588, device='cuda:0', dtype=torch.float64)
tensor([-1.8692, -2.6217, -2.7650, -3.0680, -3.1318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0151, device='cuda:0', dtype=torch.float64)
tensor([-1.8844, -2.6268, -2.7831, -3.0686, -3.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9645, device='cuda:0', dtype=torch.float64)
tensor([-1.9071, -2.6427, -2.7690, -3.0567, -3.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2014, device='cuda:0', dtype=torch.float64)
tensor([-1.9161, -2.6545, -2.7534, -3.0469, -3.1099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2471, device='cuda:0', dtype=torch.float64)
tensor([-1.9015, -2.6568, -2.7500, -3.0489, -3.0983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2975, device='cuda:0', dtype=torch.float64)
tensor([-1.8756, -2.6494, -2.7391, -3.0570, -3.0880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9626, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.6320, -2.7320, -3.0730, -3.0906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1079, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6068, -2.7251, -3.0936, -3.0971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2711, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.5835, -2.7109, -3.0995, -3.1236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4151, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.5799, -2.6907, -3.0998, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4465, device='cuda:0', dtype=torch.float64)
tensor([-1.9016, -2.5912, -2.6743, -3.1101, -3.2002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1410, device='cuda:0', dtype=torch.float64)
tensor([-1.9086, -2.5998, -2.6775, -3.1293, -3.2065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3367, device='cuda:0', dtype=torch.float64)
tensor([-1.8968, -2.5915, -2.6996, -3.1530, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2036, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.5795, -2.7314, -3.1863, -3.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2111, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.5732, -2.7493, -3.1949, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0016, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.5839, -2.7560, -3.1819, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2539, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.6049, -2.7472, -3.1478, -3.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1783, device='cuda:0', dtype=torch.float64)
tensor([-1.8561, -2.6315, -2.7392, -3.0972, -3.1526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8356, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.6561, -2.7422, -3.0583, -3.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0503, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.6661, -2.7528, -3.0449, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2332, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.6494, -2.7776, -3.0491, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0601, device='cuda:0', dtype=torch.float64)
tensor([-1.8678, -2.6116, -2.8073, -3.0667, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1163, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.5774, -2.8295, -3.0805, -3.1351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1619, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.5754, -2.8274, -3.0770, -3.0972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1970, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.5926, -2.8009, -3.0577, -3.0738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9866, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.6240, -2.7629, -3.0326, -3.0623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2483, device='cuda:0', dtype=torch.float64)
tensor([-1.8817, -2.6568, -2.7299, -3.0388, -3.0702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0365, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.6771, -2.7084, -3.0689, -3.0703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2893, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.6720, -2.7123, -3.1241, -3.0682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9960, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6461, -2.7284, -3.1795, -3.0577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0203, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6155, -2.7533, -3.2211, -3.0496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2422, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.5846, -2.7768, -3.2273, -3.0526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9288, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.5546, -2.7854, -3.1968, -3.0573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2350, device='cuda:0', dtype=torch.float64)
tensor([-1.9023, -2.5512, -2.7554, -3.1434, -3.0671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9676, device='cuda:0', dtype=torch.float64)
tensor([-1.9369, -2.5744, -2.7058, -3.0886, -3.0696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8885, device='cuda:0', dtype=torch.float64)
tensor([-1.9682, -2.6161, -2.6703, -3.0508, -3.0944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0414, device='cuda:0', dtype=torch.float64)
tensor([-1.9653, -2.6545, -2.6730, -3.0388, -3.1324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1602, device='cuda:0', dtype=torch.float64)
tensor([-1.9331, -2.6832, -2.6932, -3.0585, -3.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3189, device='cuda:0', dtype=torch.float64)
tensor([-1.8824, -2.7022, -2.7263, -3.0872, -3.1903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0647, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.7033, -2.7495, -3.1050, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3165, device='cuda:0', dtype=torch.float64)
tensor([-1.7922, -2.7116, -2.7538, -3.1022, -3.1637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0368, device='cuda:0', dtype=torch.float64)
tensor([-1.7847, -2.7095, -2.7513, -3.0880, -3.1598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0147, device='cuda:0', dtype=torch.float64)
tensor([-1.7983, -2.6931, -2.7433, -3.0674, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2036, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.6570, -2.7297, -3.0449, -3.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2881, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.6225, -2.7058, -3.0284, -3.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3806, device='cuda:0', dtype=torch.float64)
tensor([-1.8599, -2.5836, -2.6943, -3.0272, -3.1289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2762, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.5561, -2.7003, -3.0580, -3.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3374, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.5465, -2.7246, -3.0990, -3.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0883, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.5564, -2.7558, -3.1427, -3.1790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2840, device='cuda:0', dtype=torch.float64)
tensor([-1.8878, -2.5845, -2.7688, -3.1697, -3.1841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3258, device='cuda:0', dtype=torch.float64)
tensor([-1.8966, -2.6307, -2.7617, -3.1809, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2169, device='cuda:0', dtype=torch.float64)
tensor([-1.9120, -2.6645, -2.7601, -3.1743, -3.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2477, device='cuda:0', dtype=torch.float64)
tensor([-1.9110, -2.6732, -2.7670, -3.1731, -3.1514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2353, device='cuda:0', dtype=torch.float64)
tensor([-1.8968, -2.6637, -2.7742, -3.1734, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2174, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.6409, -2.7798, -3.1626, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3878, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6237, -2.7685, -3.1299, -3.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0418, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6163, -2.7538, -3.0802, -3.0929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1880, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.6211, -2.7318, -3.0364, -3.0942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1856, device='cuda:0', dtype=torch.float64)
tensor([-1.8831, -2.6286, -2.7214, -3.0099, -3.1136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2535, device='cuda:0', dtype=torch.float64)
tensor([-1.9094, -2.6403, -2.7200, -3.0046, -3.1235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1593, device='cuda:0', dtype=torch.float64)
tensor([-1.9142, -2.6447, -2.7390, -3.0235, -3.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2669, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.6345, -2.7637, -3.0490, -3.0786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2771, device='cuda:0', dtype=torch.float64)
tensor([-1.8808, -2.6239, -2.7846, -3.0803, -3.0409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2713, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.6092, -2.7998, -3.1281, -3.0403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1028, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6037, -2.7873, -3.1622, -3.0657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1230, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.6092, -2.7488, -3.1649, -3.0953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3067, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.6164, -2.7012, -3.1518, -3.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3647, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.6266, -2.6728, -3.1444, -3.1287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0541, device='cuda:0', dtype=torch.float64)
tensor([-1.8980, -2.6290, -2.6725, -3.1334, -3.1469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2733, device='cuda:0', dtype=torch.float64)
tensor([-1.8927, -2.6249, -2.6948, -3.1308, -3.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2978, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.6202, -2.7355, -3.1445, -3.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0410, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.6198, -2.7691, -3.1543, -3.2085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3061, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6092, -2.7885, -3.1493, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2281, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.6147, -2.7807, -3.1213, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1085, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6332, -2.7645, -3.0649, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2198, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.6339, -2.7754, -3.0227, -3.1550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2569, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.6252, -2.7868, -3.0055, -3.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1546, device='cuda:0', dtype=torch.float64)
tensor([-1.8651, -2.6190, -2.7861, -2.9877, -3.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2244, device='cuda:0', dtype=torch.float64)
tensor([-1.8694, -2.6204, -2.7754, -2.9768, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1206, device='cuda:0', dtype=torch.float64)
tensor([-1.8826, -2.6316, -2.7486, -2.9626, -3.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0372, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.6352, -2.7295, -2.9653, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3201, device='cuda:0', dtype=torch.float64)
tensor([-1.9074, -2.6358, -2.7223, -2.9805, -3.1841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8884, device='cuda:0', dtype=torch.float64)
tensor([-1.9058, -2.6345, -2.7319, -3.0187, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1605, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -2.6239, -2.7485, -3.0682, -3.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2368, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6091, -2.7709, -3.1223, -3.1194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0137, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6011, -2.7917, -3.1698, -3.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1705, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.5969, -2.8005, -3.1961, -3.0893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0194, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.6065, -2.7930, -3.2026, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4000, device='cuda:0', dtype=torch.float64)
tensor([-1.9289, -2.6373, -2.7638, -3.1976, -3.1326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4950, device='cuda:0', dtype=torch.float64)
tensor([-1.9522, -2.6689, -2.7298, -3.1932, -3.1255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1103, device='cuda:0', dtype=torch.float64)
tensor([-1.9507, -2.6820, -2.7200, -3.1870, -3.1157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4073, device='cuda:0', dtype=torch.float64)
tensor([-1.9206, -2.6704, -2.7364, -3.1796, -3.1059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1139, device='cuda:0', dtype=torch.float64)
tensor([-1.8833, -2.6392, -2.7804, -3.1806, -3.1157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1093, device='cuda:0', dtype=torch.float64)
tensor([-1.8520, -2.6079, -2.8209, -3.1766, -3.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0518, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.5886, -2.8364, -3.1598, -3.1108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0716, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.5894, -2.8201, -3.1407, -3.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2134, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.5947, -2.7970, -3.1202, -3.0968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1763, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.6104, -2.7694, -3.0930, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1026, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.6237, -2.7386, -3.0665, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3084, device='cuda:0', dtype=torch.float64)
tensor([-1.8993, -2.6336, -2.7183, -3.0425, -3.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5629, device='cuda:0', dtype=torch.float64)
tensor([-1.8930, -2.6436, -2.7097, -3.0304, -3.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8417, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.6446, -2.7051, -3.0375, -3.1431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9647, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6564, -2.6994, -3.0580, -3.1391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3677, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6533, -2.7071, -3.0967, -3.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0809, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6582, -2.7104, -3.1210, -3.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0826, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6732, -2.7053, -3.1241, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4244, device='cuda:0', dtype=torch.float64)
tensor([-1.8802, -2.6809, -2.6948, -3.1002, -3.1675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2987, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -2.6825, -2.6937, -3.0763, -3.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1691, device='cuda:0', dtype=torch.float64)
tensor([-1.9108, -2.6661, -2.7141, -3.0683, -3.1239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0800, device='cuda:0', dtype=torch.float64)
tensor([-1.9207, -2.6425, -2.7334, -3.0668, -3.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9805, device='cuda:0', dtype=torch.float64)
tensor([-1.9266, -2.6209, -2.7455, -3.0613, -3.1251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4893, device='cuda:0', dtype=torch.float64)
tensor([-1.9128, -2.5945, -2.7597, -3.0617, -3.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1274, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.5767, -2.7731, -3.0680, -3.1073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1113, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.5703, -2.7887, -3.0854, -3.1120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9757, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.5750, -2.8011, -3.1028, -3.1309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1472, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.5877, -2.8028, -3.1166, -3.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0923, device='cuda:0', dtype=torch.float64)
tensor([-1.8109, -2.6146, -2.7989, -3.1489, -3.1554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3380, device='cuda:0', dtype=torch.float64)
tensor([-1.8036, -2.6373, -2.7801, -3.1775, -3.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0056, device='cuda:0', dtype=torch.float64)
tensor([-1.8107, -2.6550, -2.7625, -3.1826, -3.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0860, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6667, -2.7478, -3.1620, -3.1213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9618, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.6729, -2.7305, -3.1280, -3.1261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0767, device='cuda:0', dtype=torch.float64)
tensor([-1.8842, -2.6716, -2.7199, -3.1004, -3.1269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0358, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.6555, -2.7072, -3.0782, -3.1115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0109, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.6269, -2.6977, -3.0715, -3.0944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0991, device='cuda:0', dtype=torch.float64)
tensor([-1.8895, -2.6090, -2.6902, -3.0654, -3.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2924, device='cuda:0', dtype=torch.float64)
tensor([-1.9198, -2.6200, -2.6817, -3.0434, -3.0946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9326, device='cuda:0', dtype=torch.float64)
tensor([-1.9480, -2.6430, -2.6768, -3.0186, -3.0945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2216, device='cuda:0', dtype=torch.float64)
tensor([-1.9454, -2.6535, -2.6875, -3.0255, -3.0962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2463, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.6545, -2.7175, -3.0393, -3.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0339, device='cuda:0', dtype=torch.float64)
tensor([-1.8647, -2.6444, -2.7608, -3.0632, -3.0712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7173, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6293, -2.8095, -3.0986, -3.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9095, device='cuda:0', dtype=torch.float64)
tensor([-1.8151, -2.6154, -2.8376, -3.1153, -3.1047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3074, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6176, -2.8293, -3.1153, -3.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1797, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.6257, -2.8012, -3.1097, -3.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3418, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.6363, -2.7678, -3.0967, -3.1071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3274, device='cuda:0', dtype=torch.float64)
tensor([-1.8924, -2.6463, -2.7514, -3.0914, -3.1140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2539, device='cuda:0', dtype=torch.float64)
tensor([-1.8899, -2.6355, -2.7490, -3.1120, -3.1184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0224, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.6188, -2.7557, -3.1429, -3.1080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1465, device='cuda:0', dtype=torch.float64)
tensor([-1.8755, -2.6078, -2.7561, -3.1671, -3.1067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0300, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.6125, -2.7555, -3.1832, -3.1107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2043, device='cuda:0', dtype=torch.float64)
tensor([-1.9062, -2.6293, -2.7512, -3.1854, -3.1285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9350, device='cuda:0', dtype=torch.float64)
tensor([-1.9253, -2.6442, -2.7370, -3.1645, -3.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0818, device='cuda:0', dtype=torch.float64)
tensor([-1.9323, -2.6731, -2.7218, -3.1234, -3.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9723, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.6919, -2.7055, -3.0844, -3.1889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8585, device='cuda:0', dtype=torch.float64)
tensor([-1.8854, -2.6963, -2.6880, -3.0589, -3.1811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0194, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.6829, -2.6821, -3.0618, -3.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3584, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6613, -2.6871, -3.0854, -3.1501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3350, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.6346, -2.7078, -3.0919, -3.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2971, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6203, -2.7309, -3.0950, -3.1873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1977, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6036, -2.7530, -3.0961, -3.1844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1259, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.5979, -2.7461, -3.0894, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3060, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.5977, -2.7178, -3.0732, -3.1251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2764, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.6004, -2.6809, -3.0649, -3.0981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2765, device='cuda:0', dtype=torch.float64)
tensor([-1.8734, -2.6048, -2.6598, -3.0780, -3.0915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9812, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.6033, -2.6602, -3.0982, -3.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1177, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.5998, -2.6675, -3.1177, -3.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2409, device='cuda:0', dtype=torch.float64)
tensor([-1.8843, -2.6034, -2.6906, -3.1422, -3.0344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0530, device='cuda:0', dtype=torch.float64)
tensor([-1.9036, -2.6167, -2.7377, -3.1706, -3.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0495, device='cuda:0', dtype=torch.float64)
tensor([-1.9350, -2.6268, -2.7951, -3.1872, -3.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9693, device='cuda:0', dtype=torch.float64)
tensor([-1.9507, -2.6372, -2.8462, -3.1857, -3.1632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9788, device='cuda:0', dtype=torch.float64)
tensor([-1.9541, -2.6417, -2.8700, -3.1659, -3.1776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1339, device='cuda:0', dtype=torch.float64)
tensor([-1.9318, -2.6485, -2.8630, -3.1260, -3.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3036, device='cuda:0', dtype=torch.float64)
tensor([-1.8988, -2.6462, -2.8447, -3.0869, -3.1048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3497, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.6443, -2.8244, -3.0549, -3.0665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4013, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.6485, -2.8029, -3.0371, -3.0542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9358, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.6488, -2.7822, -3.0252, -3.0560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3709, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.6555, -2.7694, -3.0329, -3.0816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3966, device='cuda:0', dtype=torch.float64)
tensor([-1.8665, -2.6490, -2.7650, -3.0525, -3.1097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9839, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.6334, -2.7753, -3.0828, -3.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0806, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.6255, -2.7825, -3.1240, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1315, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.6278, -2.7717, -3.1687, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3906, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6357, -2.7577, -3.2025, -3.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0379, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6374, -2.7450, -3.2005, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0980, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6426, -2.7268, -3.1826, -3.0950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0190, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.6374, -2.7202, -3.1626, -3.0752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2502, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.6330, -2.7173, -3.1359, -3.0835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3093, device='cuda:0', dtype=torch.float64)
tensor([-1.8928, -2.6320, -2.7279, -3.1187, -3.1161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2467, device='cuda:0', dtype=torch.float64)
tensor([-1.9030, -2.6386, -2.7485, -3.1173, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2835, device='cuda:0', dtype=torch.float64)
tensor([-1.8942, -2.6340, -2.7583, -3.1209, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4324, device='cuda:0', dtype=torch.float64)
tensor([-1.8895, -2.6342, -2.7510, -3.1213, -3.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2241, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.6414, -2.7525, -3.1215, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0851, device='cuda:0', dtype=torch.float64)
tensor([-1.8928, -2.6627, -2.7368, -3.1107, -3.1894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1077, device='cuda:0', dtype=torch.float64)
tensor([-1.9109, -2.6841, -2.7200, -3.0911, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9605, device='cuda:0', dtype=torch.float64)
tensor([-1.9142, -2.6907, -2.7057, -3.0728, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9348, device='cuda:0', dtype=torch.float64)
tensor([-1.8921, -2.6785, -2.7038, -3.0650, -3.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7545, device='cuda:0', dtype=torch.float64)
tensor([-1.8599, -2.6596, -2.7172, -3.0700, -3.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3374, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6418, -2.7398, -3.0860, -3.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3217, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6253, -2.7540, -3.0778, -3.1396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9780, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6114, -2.7614, -3.0603, -3.1317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2451, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.6059, -2.7610, -3.0414, -3.1336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0775, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.5944, -2.7676, -3.0428, -3.1218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0167, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.5799, -2.7794, -3.0678, -3.1211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0348, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.5683, -2.7914, -3.0859, -3.1326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2240, device='cuda:0', dtype=torch.float64)
tensor([-1.9013, -2.5755, -2.7742, -3.0959, -3.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0802, device='cuda:0', dtype=torch.float64)
tensor([-1.9080, -2.5884, -2.7635, -3.1163, -3.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2324, device='cuda:0', dtype=torch.float64)
tensor([-1.9143, -2.6110, -2.7469, -3.1260, -3.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1600, device='cuda:0', dtype=torch.float64)
tensor([-1.8996, -2.6515, -2.7252, -3.1223, -3.1384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1318, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.6693, -2.7273, -3.1087, -3.0946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2399, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6788, -2.7338, -3.1028, -3.0455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2807, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6886, -2.7447, -3.1015, -3.0156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0842, device='cuda:0', dtype=torch.float64)
tensor([-1.8593, -2.7068, -2.7496, -3.1006, -3.0177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2463, device='cuda:0', dtype=torch.float64)
tensor([-1.9071, -2.7136, -2.7410, -3.1052, -3.0609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3217, device='cuda:0', dtype=torch.float64)
tensor([-1.9466, -2.7042, -2.7374, -3.1314, -3.1326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5505, device='cuda:0', dtype=torch.float64)
tensor([-1.9643, -2.6856, -2.7416, -3.1342, -3.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5462, device='cuda:0', dtype=torch.float64)
tensor([-1.9585, -2.6490, -2.7476, -3.1204, -3.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2042, device='cuda:0', dtype=torch.float64)
tensor([-1.9413, -2.6123, -2.7545, -3.1135, -3.2100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3697, device='cuda:0', dtype=torch.float64)
tensor([-1.9183, -2.5783, -2.7725, -3.1000, -3.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1363, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.5697, -2.7863, -3.0797, -3.2155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1423, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.5804, -2.7880, -3.0636, -3.1970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2272, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.5938, -2.7786, -3.0514, -3.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1557, device='cuda:0', dtype=torch.float64)
tensor([-1.8000, -2.5944, -2.7862, -3.0593, -3.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0607, device='cuda:0', dtype=torch.float64)
tensor([-1.7989, -2.5933, -2.7954, -3.0736, -3.1065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0427, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.5989, -2.7835, -3.0837, -3.1062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9711, device='cuda:0', dtype=torch.float64)
tensor([-1.8882, -2.6135, -2.7638, -3.0708, -3.1304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7121, device='cuda:0', dtype=torch.float64)
tensor([-1.9521, -2.6427, -2.7479, -3.0597, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1464, device='cuda:0', dtype=torch.float64)
tensor([-1.9900, -2.6670, -2.7292, -3.0677, -3.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2253, device='cuda:0', dtype=torch.float64)
tensor([-1.9925, -2.6844, -2.7086, -3.0931, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3067, device='cuda:0', dtype=torch.float64)
tensor([-1.9429, -2.6774, -2.7020, -3.1335, -3.1323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1697, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.6610, -2.7093, -3.1822, -3.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0805, device='cuda:0', dtype=torch.float64)
tensor([-1.8135, -2.6619, -2.7236, -3.2248, -3.0780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0065, device='cuda:0', dtype=torch.float64)
tensor([-1.7921, -2.6635, -2.7257, -3.2262, -3.0703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2867, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6861, -2.7106, -3.1866, -3.0746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9783, device='cuda:0', dtype=torch.float64)
tensor([-1.8687, -2.7105, -2.6898, -3.1196, -3.0854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2231, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.7358, -2.6856, -3.0663, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0515, device='cuda:0', dtype=torch.float64)
tensor([-1.9403, -2.7377, -2.7048, -3.0458, -3.1353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9894, device='cuda:0', dtype=torch.float64)
tensor([-1.9164, -2.7142, -2.7298, -3.0457, -3.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0870, device='cuda:0', dtype=torch.float64)
tensor([-1.8703, -2.6668, -2.7621, -3.0620, -3.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0589, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.5994, -2.7900, -3.0895, -3.1090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9864, device='cuda:0', dtype=torch.float64)
tensor([-1.7973, -2.5368, -2.8075, -3.1096, -3.1111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0107, device='cuda:0', dtype=torch.float64)
tensor([-1.8015, -2.4961, -2.8175, -3.1060, -3.1361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9044, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.4841, -2.8115, -3.0901, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0693, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.4940, -2.8053, -3.0668, -3.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1795, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.5352, -2.7913, -3.0318, -3.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2010, device='cuda:0', dtype=torch.float64)
tensor([-1.8922, -2.5814, -2.7626, -2.9983, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1571, device='cuda:0', dtype=torch.float64)
tensor([-1.9210, -2.6279, -2.7283, -2.9771, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9283, device='cuda:0', dtype=torch.float64)
tensor([-1.9285, -2.6594, -2.7066, -2.9849, -3.1515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1830, device='cuda:0', dtype=torch.float64)
tensor([-1.9148, -2.6750, -2.7097, -3.0252, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2735, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.6718, -2.7278, -3.0810, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3588, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.6759, -2.7256, -3.1306, -3.1198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0721, device='cuda:0', dtype=torch.float64)
tensor([-1.9000, -2.6753, -2.7172, -3.1679, -3.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3832, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.6736, -2.7087, -3.2120, -3.0928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2681, device='cuda:0', dtype=torch.float64)
tensor([-1.9728, -2.6767, -2.7052, -3.2583, -3.1222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0446, device='cuda:0', dtype=torch.float64)
tensor([-2.0100, -2.6766, -2.7054, -3.3115, -3.1594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0806, device='cuda:0', dtype=torch.float64)
tensor([-1.9961, -2.6610, -2.7170, -3.3217, -3.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2712, device='cuda:0', dtype=torch.float64)
tensor([-1.9201, -2.6310, -2.7452, -3.2546, -3.1184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1974, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.5986, -2.7799, -3.1868, -3.0597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4493, device='cuda:0', dtype=torch.float64)
tensor([-1.7746, -2.5810, -2.8178, -3.1305, -3.0384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3868, device='cuda:0', dtype=torch.float64)
tensor([-1.7655, -2.5840, -2.8472, -3.0797, -3.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([-1.8108, -2.6130, -2.8403, -3.0023, -3.1013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4953, device='cuda:0', dtype=torch.float64)
tensor([-1.8768, -2.6592, -2.7902, -2.9263, -3.1271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2637, device='cuda:0', dtype=torch.float64)
tensor([-1.9241, -2.6972, -2.7406, -2.8838, -3.1204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1824, device='cuda:0', dtype=torch.float64)
tensor([-1.9519, -2.7129, -2.7081, -2.8887, -3.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3146, device='cuda:0', dtype=torch.float64)
tensor([-1.9351, -2.6908, -2.7216, -2.9460, -3.1237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6040, device='cuda:0', dtype=torch.float64)
tensor([-1.9102, -2.6504, -2.7701, -3.0308, -3.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0329, device='cuda:0', dtype=torch.float64)
tensor([-1.8814, -2.6134, -2.8120, -3.1239, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4267, device='cuda:0', dtype=torch.float64)
tensor([-1.8616, -2.5903, -2.8326, -3.1870, -3.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1706, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.5799, -2.8215, -3.2059, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1104, device='cuda:0', dtype=torch.float64)
tensor([-1.8674, -2.5900, -2.7909, -3.1911, -3.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3480, device='cuda:0', dtype=torch.float64)
tensor([-1.9169, -2.6210, -2.7570, -3.1626, -3.1261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0875, device='cuda:0', dtype=torch.float64)
tensor([-1.9607, -2.6477, -2.7298, -3.1313, -3.1312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1211, device='cuda:0', dtype=torch.float64)
tensor([-1.9696, -2.6634, -2.7168, -3.1058, -3.1198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2762, device='cuda:0', dtype=torch.float64)
tensor([-1.9415, -2.6656, -2.7292, -3.1051, -3.0892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0478, device='cuda:0', dtype=torch.float64)
tensor([-1.8806, -2.6530, -2.7586, -3.1168, -3.0467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0001, device='cuda:0', dtype=torch.float64)
tensor([-1.8062, -2.6309, -2.7968, -3.1561, -3.0117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2442, device='cuda:0', dtype=torch.float64)
tensor([-1.7710, -2.6155, -2.8271, -3.1801, -3.0206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1758, device='cuda:0', dtype=torch.float64)
tensor([-1.7812, -2.6058, -2.8454, -3.1985, -3.0664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2011, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6026, -2.8467, -3.1884, -3.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4011, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.6021, -2.8397, -3.1611, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8674, device='cuda:0', dtype=torch.float64)
tensor([-1.8920, -2.6142, -2.8151, -3.1273, -3.1467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5155, device='cuda:0', dtype=torch.float64)
tensor([-1.9483, -2.6514, -2.7651, -3.1022, -3.1784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0862, device='cuda:0', dtype=torch.float64)
tensor([-1.9854, -2.6673, -2.7272, -3.0956, -3.2028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9938, device='cuda:0', dtype=torch.float64)
tensor([-1.9749, -2.6547, -2.7050, -3.1270, -3.2024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1941, device='cuda:0', dtype=torch.float64)
tensor([-1.9389, -2.6296, -2.7020, -3.1994, -3.2026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9827, device='cuda:0', dtype=torch.float64)
tensor([-1.8886, -2.5999, -2.7049, -3.2630, -3.1874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0186, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.5897, -2.7115, -3.2975, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0818, device='cuda:0', dtype=torch.float64)
tensor([-1.8153, -2.5890, -2.7163, -3.2757, -3.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0470, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.5992, -2.7247, -3.2299, -3.1419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0737, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.6207, -2.7298, -3.1442, -3.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1313, device='cuda:0', dtype=torch.float64)
tensor([-1.9036, -2.6453, -2.7431, -3.0652, -3.1677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9528, device='cuda:0', dtype=torch.float64)
tensor([-1.9363, -2.6689, -2.7510, -2.9986, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3063, device='cuda:0', dtype=torch.float64)
tensor([-1.9371, -2.6653, -2.7725, -2.9605, -3.1676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0151, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.6546, -2.7666, -2.9582, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1514, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.6492, -2.7662, -2.9867, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1043, device='cuda:0', dtype=torch.float64)
tensor([-1.8778, -2.6570, -2.7736, -3.0140, -3.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0397, device='cuda:0', dtype=torch.float64)
tensor([-1.8884, -2.6576, -2.7800, -3.0452, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1539, device='cuda:0', dtype=torch.float64)
tensor([-1.9191, -2.6601, -2.7767, -3.0757, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2252, device='cuda:0', dtype=torch.float64)
tensor([-1.9275, -2.6430, -2.7900, -3.1231, -3.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1652, device='cuda:0', dtype=torch.float64)
tensor([-1.9315, -2.6352, -2.8077, -3.1603, -3.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1515, device='cuda:0', dtype=torch.float64)
tensor([-1.9106, -2.6222, -2.8255, -3.1840, -3.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0368, device='cuda:0', dtype=torch.float64)
tensor([-1.8820, -2.6235, -2.8321, -3.1768, -3.0762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1000, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.6468, -2.8276, -3.1666, -3.0644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2267, device='cuda:0', dtype=torch.float64)
tensor([-1.8803, -2.6719, -2.8161, -3.1295, -3.0678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0265, device='cuda:0', dtype=torch.float64)
tensor([-1.8856, -2.6941, -2.8087, -3.0916, -3.0850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0187, device='cuda:0', dtype=torch.float64)
tensor([-1.8788, -2.6974, -2.8052, -3.0735, -3.1013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3168, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.6895, -2.8127, -3.0718, -3.1338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2752, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.6768, -2.8147, -3.0731, -3.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4275, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.6540, -2.8278, -3.0777, -3.2301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1592, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.6271, -2.8102, -3.0763, -3.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2229, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.6131, -2.7777, -3.0663, -3.2450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3270, device='cuda:0', dtype=torch.float64)
tensor([-1.9116, -2.6229, -2.7384, -3.0666, -3.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2269, device='cuda:0', dtype=torch.float64)
tensor([-1.9279, -2.6349, -2.7168, -3.0796, -3.2279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9415, device='cuda:0', dtype=torch.float64)
tensor([-1.9206, -2.6348, -2.7053, -3.0997, -3.1981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2839, device='cuda:0', dtype=torch.float64)
tensor([-1.9014, -2.6410, -2.6984, -3.1270, -3.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3708, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.6522, -2.6953, -3.1598, -3.0871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8335, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.6686, -2.6961, -3.1879, -3.0438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1667, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.6772, -2.7023, -3.2117, -3.0399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2938, device='cuda:0', dtype=torch.float64)
tensor([-1.8804, -2.6861, -2.7094, -3.2170, -3.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2495, device='cuda:0', dtype=torch.float64)
tensor([-1.9064, -2.6853, -2.7261, -3.2054, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2073, device='cuda:0', dtype=torch.float64)
tensor([-1.9350, -2.6838, -2.7198, -3.1785, -3.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1202, device='cuda:0', dtype=torch.float64)
tensor([-1.9417, -2.6668, -2.7111, -3.1302, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0467, device='cuda:0', dtype=torch.float64)
tensor([-1.9370, -2.6490, -2.7129, -3.0876, -3.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2306, device='cuda:0', dtype=torch.float64)
tensor([-1.9212, -2.6224, -2.7293, -3.0694, -3.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9267, device='cuda:0', dtype=torch.float64)
tensor([-1.8905, -2.6033, -2.7502, -3.0793, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4167, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.5970, -2.7771, -3.0972, -3.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1472, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.6087, -2.7965, -3.1131, -3.1278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1856, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.6242, -2.8112, -3.1288, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3568, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.6399, -2.8402, -3.1413, -3.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9018, device='cuda:0', dtype=torch.float64)
tensor([-1.8866, -2.6626, -2.8509, -3.1448, -3.1380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0866, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.6812, -2.8461, -3.1359, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1325, device='cuda:0', dtype=torch.float64)
tensor([-1.9279, -2.6860, -2.8308, -3.1340, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1775, device='cuda:0', dtype=torch.float64)
tensor([-1.9359, -2.6702, -2.8098, -3.1281, -3.1406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0744, device='cuda:0', dtype=torch.float64)
tensor([-1.9240, -2.6346, -2.8045, -3.1267, -3.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1245, device='cuda:0', dtype=torch.float64)
tensor([-1.9009, -2.5899, -2.8059, -3.1308, -3.1396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1283, device='cuda:0', dtype=torch.float64)
tensor([-1.8997, -2.5723, -2.7965, -3.1120, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2164, device='cuda:0', dtype=torch.float64)
tensor([-1.9193, -2.5798, -2.7661, -3.0779, -3.1894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1467, device='cuda:0', dtype=torch.float64)
tensor([-1.9397, -2.6094, -2.7360, -3.0460, -3.2344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8247, device='cuda:0', dtype=torch.float64)
tensor([-1.9389, -2.6375, -2.7155, -3.0318, -3.2415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0831, device='cuda:0', dtype=torch.float64)
tensor([-1.9202, -2.6512, -2.7029, -3.0411, -3.2261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2654, device='cuda:0', dtype=torch.float64)
tensor([-1.8788, -2.6483, -2.7076, -3.0824, -3.2030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9339, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6407, -2.7309, -3.1290, -3.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1012, device='cuda:0', dtype=torch.float64)
tensor([-1.8059, -2.6339, -2.7551, -3.1595, -3.1444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3564, device='cuda:0', dtype=torch.float64)
tensor([-1.8048, -2.6297, -2.7750, -3.1781, -3.1096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1644, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.6469, -2.7751, -3.1795, -3.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3527, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.6732, -2.7545, -3.1517, -3.0429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5318, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.6996, -2.7242, -3.1086, -3.0338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2635, device='cuda:0', dtype=torch.float64)
tensor([-1.9292, -2.7204, -2.7008, -3.0761, -3.0592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3206, device='cuda:0', dtype=torch.float64)
tensor([-1.9738, -2.7313, -2.7150, -3.0655, -3.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1962, device='cuda:0', dtype=torch.float64)
tensor([-1.9819, -2.7174, -2.7460, -3.0826, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6500, device='cuda:0', dtype=torch.float64)
tensor([-1.9560, -2.6933, -2.7646, -3.0985, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1732, device='cuda:0', dtype=torch.float64)
tensor([-1.9013, -2.6714, -2.7719, -3.1168, -3.1463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8863, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6580, -2.7667, -3.1261, -3.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3979, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6445, -2.7631, -3.1285, -3.1019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2447, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6428, -2.7552, -3.1322, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0221, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.6362, -2.7355, -3.1182, -3.1205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2172, device='cuda:0', dtype=torch.float64)
tensor([-1.8941, -2.6385, -2.7143, -3.1020, -3.1169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2560, device='cuda:0', dtype=torch.float64)
tensor([-1.9331, -2.6566, -2.6959, -3.1040, -3.1073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1718, device='cuda:0', dtype=torch.float64)
tensor([-1.9667, -2.6755, -2.6990, -3.1193, -3.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0664, device='cuda:0', dtype=torch.float64)
tensor([-1.9924, -2.6892, -2.7213, -3.1459, -3.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4085, device='cuda:0', dtype=torch.float64)
tensor([-2.0216, -2.7114, -2.7599, -3.1938, -3.2223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1283, device='cuda:0', dtype=torch.float64)
tensor([-2.0367, -2.7217, -2.8114, -3.2557, -3.2861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0351, device='cuda:0', dtype=torch.float64)
tensor([-1.9984, -2.7106, -2.8345, -3.2754, -3.2860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1557, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.6754, -2.8292, -3.2505, -3.2357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1902, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.6373, -2.8014, -3.1842, -3.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0734, device='cuda:0', dtype=torch.float64)
tensor([-1.8088, -2.6082, -2.7654, -3.1020, -3.0661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0962, device='cuda:0', dtype=torch.float64)
tensor([-1.8034, -2.5941, -2.7270, -3.0319, -3.0236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3302, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.5920, -2.6925, -2.9769, -3.0249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9297, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.5996, -2.6674, -2.9467, -3.0511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0475, device='cuda:0', dtype=torch.float64)
tensor([-1.9038, -2.5978, -2.6649, -2.9545, -3.0680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2904, device='cuda:0', dtype=torch.float64)
tensor([-1.9231, -2.5957, -2.6821, -3.0025, -3.1125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9496, device='cuda:0', dtype=torch.float64)
tensor([-1.9444, -2.5893, -2.7123, -3.0657, -3.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2950, device='cuda:0', dtype=torch.float64)
tensor([-1.9615, -2.5907, -2.7319, -3.1445, -3.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1303, device='cuda:0', dtype=torch.float64)
tensor([-1.9649, -2.6101, -2.7452, -3.1927, -3.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0095, device='cuda:0', dtype=torch.float64)
tensor([-1.9659, -2.6421, -2.7448, -3.2026, -3.1867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9662, device='cuda:0', dtype=torch.float64)
tensor([-1.9618, -2.6735, -2.7237, -3.1805, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0876, device='cuda:0', dtype=torch.float64)
tensor([-1.9574, -2.7089, -2.6844, -3.1509, -3.1273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1436, device='cuda:0', dtype=torch.float64)
tensor([-1.9397, -2.7302, -2.6543, -3.1210, -3.0808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9491, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -2.7320, -2.6620, -3.1053, -3.0586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1966, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.6976, -2.7092, -3.1164, -3.0674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1670, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6649, -2.7794, -3.1405, -3.0955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1146, device='cuda:0', dtype=torch.float64)
tensor([-1.7916, -2.6443, -2.8398, -3.1529, -3.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9729, device='cuda:0', dtype=torch.float64)
tensor([-1.7966, -2.6386, -2.8776, -3.1576, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0725, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6531, -2.8803, -3.1404, -3.2635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9471, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.6794, -2.8753, -3.1259, -3.2868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1166, device='cuda:0', dtype=torch.float64)
tensor([-1.8645, -2.6937, -2.8709, -3.1034, -3.2726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3260, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.6891, -2.8581, -3.0676, -3.2262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2609, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.6792, -2.8269, -3.0376, -3.1650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1769, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.6672, -2.7898, -3.0167, -3.1050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5380, device='cuda:0', dtype=torch.float64)
tensor([-1.8996, -2.6502, -2.7506, -2.9918, -3.0676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2296, device='cuda:0', dtype=torch.float64)
tensor([-1.9509, -2.6452, -2.7127, -2.9706, -3.0512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2503, device='cuda:0', dtype=torch.float64)
tensor([-1.9859, -2.6413, -2.6889, -2.9653, -3.0359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1691, device='cuda:0', dtype=torch.float64)
tensor([-1.9867, -2.6495, -2.6766, -2.9783, -3.0241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1081, device='cuda:0', dtype=torch.float64)
tensor([-1.9583, -2.6475, -2.6952, -3.0206, -3.0378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3551, device='cuda:0', dtype=torch.float64)
tensor([-1.9267, -2.6422, -2.7112, -3.0698, -3.0611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1934, device='cuda:0', dtype=torch.float64)
tensor([-1.9078, -2.6526, -2.7221, -3.1161, -3.1000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2510, device='cuda:0', dtype=torch.float64)
tensor([-1.9144, -2.6660, -2.7279, -3.1432, -3.1360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8605, device='cuda:0', dtype=torch.float64)
tensor([-1.9204, -2.6763, -2.7344, -3.1703, -3.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4251, device='cuda:0', dtype=torch.float64)
tensor([-1.9239, -2.6856, -2.7446, -3.2124, -3.1867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9133, device='cuda:0', dtype=torch.float64)
tensor([-1.9212, -2.6893, -2.7664, -3.2552, -3.2060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0164, device='cuda:0', dtype=torch.float64)
tensor([-1.9058, -2.6805, -2.8190, -3.2878, -3.2113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5101, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.6660, -2.8748, -3.2843, -3.2043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0471, device='cuda:0', dtype=torch.float64)
tensor([-1.8625, -2.6468, -2.9252, -3.2586, -3.1819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0884, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.6470, -2.9534, -3.2155, -3.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1741, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.6642, -2.9461, -3.1681, -3.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1500, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.6924, -2.9005, -3.1113, -3.1283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1307, device='cuda:0', dtype=torch.float64)
tensor([-1.8736, -2.7021, -2.8458, -3.0706, -3.1163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2684, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.6901, -2.8113, -3.0606, -3.1177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9371, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6723, -2.7727, -3.0580, -3.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9264, device='cuda:0', dtype=torch.float64)
tensor([-1.8687, -2.6523, -2.7388, -3.0557, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9099, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.6352, -2.7201, -3.0632, -3.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3482, device='cuda:0', dtype=torch.float64)
tensor([-1.9161, -2.6296, -2.6922, -3.0687, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2048, device='cuda:0', dtype=torch.float64)
tensor([-1.9339, -2.6342, -2.6751, -3.0850, -3.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0728, device='cuda:0', dtype=torch.float64)
tensor([-1.9638, -2.6326, -2.6707, -3.0853, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4273, device='cuda:0', dtype=torch.float64)
tensor([-1.9640, -2.6288, -2.6872, -3.1047, -3.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0936, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.6302, -2.7152, -3.1333, -3.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2935, device='cuda:0', dtype=torch.float64)
tensor([-1.9014, -2.6098, -2.7600, -3.1579, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0099, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.5802, -2.8014, -3.1720, -3.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2594, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.5634, -2.8311, -3.1717, -3.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0055, device='cuda:0', dtype=torch.float64)
tensor([-1.8095, -2.5601, -2.8374, -3.1463, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0527, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.5756, -2.8259, -3.1073, -3.1416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9130, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.6035, -2.8111, -3.0762, -3.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8854, device='cuda:0', dtype=torch.float64)
tensor([-1.9145, -2.6463, -2.7942, -3.0583, -3.1855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8289, device='cuda:0', dtype=torch.float64)
tensor([-1.9386, -2.6886, -2.7855, -3.0581, -3.1934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0422, device='cuda:0', dtype=torch.float64)
tensor([-1.9661, -2.7268, -2.7852, -3.0700, -3.1973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9305, device='cuda:0', dtype=torch.float64)
tensor([-1.9661, -2.7525, -2.8005, -3.1091, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8628, device='cuda:0', dtype=torch.float64)
tensor([-1.9367, -2.7590, -2.8169, -3.1705, -3.1832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0188, device='cuda:0', dtype=torch.float64)
tensor([-1.8915, -2.7505, -2.8351, -3.2420, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8669, device='cuda:0', dtype=torch.float64)
tensor([-1.8706, -2.7332, -2.8336, -3.2760, -3.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1138, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.7097, -2.8239, -3.2825, -3.1407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1159, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.6953, -2.7806, -3.2460, -3.1425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3300, device='cuda:0', dtype=torch.float64)
tensor([-1.9258, -2.7110, -2.7163, -3.1861, -3.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9353, device='cuda:0', dtype=torch.float64)
tensor([-1.9630, -2.7275, -2.6636, -3.1337, -3.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0420, device='cuda:0', dtype=torch.float64)
tensor([-1.9602, -2.7253, -2.6455, -3.0958, -3.1063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2896, device='cuda:0', dtype=torch.float64)
tensor([-1.9290, -2.7097, -2.6593, -3.0779, -3.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7813, device='cuda:0', dtype=torch.float64)
tensor([-1.8855, -2.6819, -2.7002, -3.0813, -3.0786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2870, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -2.6670, -2.7323, -3.0780, -3.0643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1153, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.6518, -2.7673, -3.0648, -3.0725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0118, device='cuda:0', dtype=torch.float64)
tensor([-1.8831, -2.6424, -2.7865, -3.0494, -3.0827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9271, device='cuda:0', dtype=torch.float64)
tensor([-1.9104, -2.6513, -2.7834, -3.0295, -3.0965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1300, device='cuda:0', dtype=torch.float64)
tensor([-1.9461, -2.6749, -2.7800, -3.0196, -3.1249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2971, device='cuda:0', dtype=torch.float64)
tensor([-1.9746, -2.6845, -2.7680, -3.0149, -3.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8900, device='cuda:0', dtype=torch.float64)
tensor([-1.9671, -2.6841, -2.7695, -3.0267, -3.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3142, device='cuda:0', dtype=torch.float64)
tensor([-1.9176, -2.6525, -2.7912, -3.0561, -3.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0956, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.6176, -2.8311, -3.0891, -3.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0580, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.5954, -2.8623, -3.1114, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9740, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.5816, -2.8700, -3.1205, -3.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9557, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.5757, -2.8521, -3.1158, -3.1400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2310, device='cuda:0', dtype=torch.float64)
tensor([-1.9270, -2.5912, -2.8075, -3.0977, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3881, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.6216, -2.7446, -3.0807, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6378, device='cuda:0', dtype=torch.float64)
tensor([-2.0187, -2.6493, -2.6841, -3.0761, -3.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1226, device='cuda:0', dtype=torch.float64)
tensor([-2.0170, -2.6672, -2.6601, -3.0878, -3.2358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3948, device='cuda:0', dtype=torch.float64)
tensor([-1.9799, -2.6601, -2.6804, -3.1139, -3.2442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9513, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.6522, -2.7080, -3.1405, -3.2292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3127, device='cuda:0', dtype=torch.float64)
tensor([-1.8928, -2.6668, -2.7223, -3.1622, -3.2172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9051, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.6889, -2.7250, -3.1715, -3.1868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1398, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.7112, -2.7167, -3.1648, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2431, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.7309, -2.7066, -3.1508, -3.1301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1166, device='cuda:0', dtype=torch.float64)
tensor([-1.8574, -2.7511, -2.7122, -3.1354, -3.1366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0094, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.7568, -2.7381, -3.1366, -3.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2476, device='cuda:0', dtype=torch.float64)
tensor([-1.8940, -2.7467, -2.7758, -3.1360, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2092, device='cuda:0', dtype=torch.float64)
tensor([-1.9029, -2.7113, -2.8330, -3.1437, -3.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2323, device='cuda:0', dtype=torch.float64)
tensor([-1.9188, -2.6826, -2.8734, -3.1482, -3.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3192, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.6613, -2.8992, -3.1542, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8481, device='cuda:0', dtype=torch.float64)
tensor([-1.9421, -2.6383, -2.9041, -3.1633, -3.1214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4169, device='cuda:0', dtype=torch.float64)
tensor([-1.9444, -2.6296, -2.8786, -3.1667, -3.1020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4997, device='cuda:0', dtype=torch.float64)
tensor([-1.9528, -2.6353, -2.8280, -3.1594, -3.0826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3360, device='cuda:0', dtype=torch.float64)
tensor([-1.9637, -2.6576, -2.7850, -3.1675, -3.0760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1899, device='cuda:0', dtype=torch.float64)
tensor([-1.9575, -2.6645, -2.7687, -3.1829, -3.0826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3689, device='cuda:0', dtype=torch.float64)
tensor([-1.9620, -2.6676, -2.7611, -3.2189, -3.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4041, device='cuda:0', dtype=torch.float64)
tensor([-1.9366, -2.6686, -2.7761, -3.2609, -3.1484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2289, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.6539, -2.7853, -3.2698, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0746, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.6409, -2.7855, -3.2492, -3.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3182, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6422, -2.7753, -3.2229, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3249, device='cuda:0', dtype=torch.float64)
tensor([-1.8851, -2.6644, -2.7423, -3.1922, -3.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2976, device='cuda:0', dtype=torch.float64)
tensor([-1.9430, -2.6950, -2.7136, -3.1669, -3.2305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1868, device='cuda:0', dtype=torch.float64)
tensor([-1.9820, -2.7087, -2.7089, -3.1433, -3.2555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2421, device='cuda:0', dtype=torch.float64)
tensor([-1.9890, -2.7021, -2.7278, -3.1362, -3.2682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1811, device='cuda:0', dtype=torch.float64)
tensor([-1.9646, -2.6726, -2.7501, -3.1256, -3.2339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3345, device='cuda:0', dtype=torch.float64)
tensor([-1.9307, -2.6336, -2.7654, -3.0966, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4464, device='cuda:0', dtype=torch.float64)
tensor([-1.9186, -2.6144, -2.7648, -3.0627, -3.1230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5234, device='cuda:0', dtype=torch.float64)
tensor([-1.9335, -2.6138, -2.7616, -3.0181, -3.1020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1595, device='cuda:0', dtype=torch.float64)
tensor([-1.9518, -2.6348, -2.7631, -2.9840, -3.0889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9884, device='cuda:0', dtype=torch.float64)
tensor([-1.9543, -2.6638, -2.7594, -2.9753, -3.0874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4749, device='cuda:0', dtype=torch.float64)
tensor([-1.9272, -2.6878, -2.7855, -2.9834, -3.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3450, device='cuda:0', dtype=torch.float64)
tensor([-1.8760, -2.6909, -2.8206, -3.0264, -3.0779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2364, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.7002, -2.8594, -3.0741, -3.0866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1505, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6982, -2.8891, -3.1057, -3.1212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1557, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6850, -2.8995, -3.1195, -3.1710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0343, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6720, -2.8926, -3.1258, -3.2069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0642, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.6647, -2.8516, -3.1013, -3.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([-1.9279, -2.6703, -2.7928, -3.0644, -3.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1114, device='cuda:0', dtype=torch.float64)
tensor([-1.9632, -2.6843, -2.7393, -3.0443, -3.2364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2093, device='cuda:0', dtype=torch.float64)
tensor([-1.9779, -2.6965, -2.6917, -3.0483, -3.2310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2950, device='cuda:0', dtype=torch.float64)
tensor([-1.9699, -2.7010, -2.6701, -3.0842, -3.2313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0869, device='cuda:0', dtype=torch.float64)
tensor([-1.9429, -2.6773, -2.6842, -3.1395, -3.2377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2533, device='cuda:0', dtype=torch.float64)
tensor([-1.8918, -2.6426, -2.7200, -3.1767, -3.2154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4222, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.6168, -2.7544, -3.2136, -3.1839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3129, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.5954, -2.7843, -3.2319, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2072, device='cuda:0', dtype=torch.float64)
tensor([-1.9126, -2.5805, -2.8031, -3.2377, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8720, device='cuda:0', dtype=torch.float64)
tensor([-1.9656, -2.5722, -2.8043, -3.2287, -3.1961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8758, device='cuda:0', dtype=torch.float64)
tensor([-1.9876, -2.5695, -2.7982, -3.2092, -3.1813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6743, device='cuda:0', dtype=torch.float64)
tensor([-2.0065, -2.5935, -2.7734, -3.1740, -3.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3769, device='cuda:0', dtype=torch.float64)
tensor([-1.9901, -2.6280, -2.7486, -3.1299, -3.0844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3071, device='cuda:0', dtype=torch.float64)
tensor([-1.9579, -2.6684, -2.7360, -3.0971, -3.0665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3879, device='cuda:0', dtype=torch.float64)
tensor([-1.9234, -2.7047, -2.7513, -3.0624, -3.0652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5876, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.7164, -2.7715, -3.0655, -3.0736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3004, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.7212, -2.7848, -3.0582, -3.0924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2356, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.7180, -2.7859, -3.0553, -3.0926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2613, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.7172, -2.7907, -3.0684, -3.1210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1082, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.7248, -2.7924, -3.0903, -3.1447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9839, device='cuda:0', dtype=torch.float64)
tensor([-1.8939, -2.7152, -2.8006, -3.1264, -3.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2165, device='cuda:0', dtype=torch.float64)
tensor([-1.9035, -2.7082, -2.8090, -3.1709, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3869, device='cuda:0', dtype=torch.float64)
tensor([-1.8935, -2.6916, -2.8451, -3.2321, -3.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0434, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.6752, -2.8813, -3.2883, -3.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0110, device='cuda:0', dtype=torch.float64)
tensor([-1.9004, -2.6710, -2.8876, -3.3117, -3.1382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2361, device='cuda:0', dtype=torch.float64)
tensor([-1.9449, -2.6848, -2.8644, -3.2857, -3.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2258, device='cuda:0', dtype=torch.float64)
tensor([-2.0073, -2.7213, -2.8294, -3.2344, -3.1162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8927, device='cuda:0', dtype=torch.float64)
tensor([-2.0528, -2.7550, -2.7881, -3.1804, -3.1159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0336, device='cuda:0', dtype=torch.float64)
tensor([-2.0574, -2.7656, -2.7667, -3.1187, -3.0984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5833, device='cuda:0', dtype=torch.float64)
tensor([-1.9970, -2.7352, -2.7561, -3.0661, -3.0365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9799, device='cuda:0', dtype=torch.float64)
tensor([-1.9289, -2.6821, -2.7603, -3.0607, -2.9898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3298, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.6278, -2.7980, -3.0878, -2.9902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0004, device='cuda:0', dtype=torch.float64)
tensor([-1.8576, -2.5863, -2.8328, -3.1040, -3.0195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0447, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.5746, -2.8483, -3.0881, -3.0674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([-1.9325, -2.5939, -2.8476, -3.0655, -3.1245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4311, device='cuda:0', dtype=torch.float64)
tensor([-1.9666, -2.6148, -2.8486, -3.0453, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0805, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.6351, -2.8344, -3.0442, -3.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1361, device='cuda:0', dtype=torch.float64)
tensor([-1.9689, -2.6447, -2.8219, -3.0743, -3.2082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7995, device='cuda:0', dtype=torch.float64)
tensor([-1.8980, -2.6448, -2.8259, -3.1442, -3.2395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3234, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6472, -2.8070, -3.2168, -3.2397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4346, device='cuda:0', dtype=torch.float64)
tensor([-1.8103, -2.6468, -2.7711, -3.2512, -3.2188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1408, device='cuda:0', dtype=torch.float64)
tensor([-1.8135, -2.6457, -2.7227, -3.2363, -3.2127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2314, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.6512, -2.6753, -3.1725, -3.2239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9898, device='cuda:0', dtype=torch.float64)
tensor([-1.9381, -2.6668, -2.6302, -3.0851, -3.2487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2763, device='cuda:0', dtype=torch.float64)
tensor([-2.0216, -2.6973, -2.6051, -3.0068, -3.2721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2329, device='cuda:0', dtype=torch.float64)
tensor([-2.0746, -2.7163, -2.6157, -2.9849, -3.2843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3317, device='cuda:0', dtype=torch.float64)
tensor([-2.0615, -2.7163, -2.6524, -3.0095, -3.2763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1125, device='cuda:0', dtype=torch.float64)
tensor([-2.0106, -2.7259, -2.6943, -3.0731, -3.2501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0673, device='cuda:0', dtype=torch.float64)
tensor([-1.9417, -2.7365, -2.7550, -3.1536, -3.2193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2312, device='cuda:0', dtype=torch.float64)
tensor([-1.8701, -2.7215, -2.8010, -3.2105, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2965, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.6990, -2.8451, -3.2380, -3.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3616, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6748, -2.8685, -3.2554, -3.1252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3446, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.6614, -2.8382, -3.2532, -3.1171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3473, device='cuda:0', dtype=torch.float64)
tensor([-1.8936, -2.6545, -2.7920, -3.2461, -3.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1126, device='cuda:0', dtype=torch.float64)
tensor([-1.9454, -2.6587, -2.7631, -3.2504, -3.1139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3294, device='cuda:0', dtype=torch.float64)
tensor([-1.9822, -2.6745, -2.7412, -3.2496, -3.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0301, device='cuda:0', dtype=torch.float64)
tensor([-1.9899, -2.7060, -2.7325, -3.2545, -3.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3808, device='cuda:0', dtype=torch.float64)
tensor([-1.9682, -2.7110, -2.7439, -3.2259, -3.1462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1448, device='cuda:0', dtype=torch.float64)
tensor([-1.9264, -2.6958, -2.7584, -3.1821, -3.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2247, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.6780, -2.7711, -3.1413, -3.1082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0152, device='cuda:0', dtype=torch.float64)
tensor([-1.8737, -2.6623, -2.7752, -3.0962, -3.0875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2479, device='cuda:0', dtype=torch.float64)
tensor([-1.9187, -2.6670, -2.7637, -3.0437, -3.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1911, device='cuda:0', dtype=torch.float64)
tensor([-1.9744, -2.6650, -2.7586, -3.0017, -3.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2123, device='cuda:0', dtype=torch.float64)
tensor([-2.0110, -2.6544, -2.7639, -2.9829, -3.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2145, device='cuda:0', dtype=torch.float64)
tensor([-2.0218, -2.6355, -2.7811, -2.9928, -3.2271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2881, device='cuda:0', dtype=torch.float64)
tensor([-2.0188, -2.6123, -2.8154, -3.0309, -3.2883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2040, device='cuda:0', dtype=torch.float64)
tensor([-1.9953, -2.5978, -2.8366, -3.0682, -3.3076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5469, device='cuda:0', dtype=torch.float64)
tensor([-1.9511, -2.5925, -2.8341, -3.0870, -3.2745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3487, device='cuda:0', dtype=torch.float64)
tensor([-1.9144, -2.6041, -2.8128, -3.0757, -3.2116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7253, device='cuda:0', dtype=torch.float64)
tensor([-1.9042, -2.6381, -2.8133, -3.0558, -3.1700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0880, device='cuda:0', dtype=torch.float64)
tensor([-1.9089, -2.6880, -2.8053, -3.0485, -3.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2155, device='cuda:0', dtype=torch.float64)
tensor([-1.9183, -2.7338, -2.8051, -3.0810, -3.1207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2380, device='cuda:0', dtype=torch.float64)
tensor([-1.9434, -2.7732, -2.7921, -3.1138, -3.0880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3328, device='cuda:0', dtype=torch.float64)
tensor([-1.9563, -2.7819, -2.8026, -3.1359, -3.0580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9569, device='cuda:0', dtype=torch.float64)
tensor([-1.9500, -2.7531, -2.8398, -3.1728, -3.0463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9900, device='cuda:0', dtype=torch.float64)
tensor([-1.9202, -2.7031, -2.8904, -3.2290, -3.0677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7512, device='cuda:0', dtype=torch.float64)
tensor([-1.9087, -2.6553, -2.9352, -3.2680, -3.0968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3260, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.6211, -2.9577, -3.3034, -3.1422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1385, device='cuda:0', dtype=torch.float64)
tensor([-1.9235, -2.6042, -2.9385, -3.3195, -3.1886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3733, device='cuda:0', dtype=torch.float64)
tensor([-1.9624, -2.5936, -2.8928, -3.3133, -3.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5721, device='cuda:0', dtype=torch.float64)
tensor([-1.9899, -2.5845, -2.8443, -3.3042, -3.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3571, device='cuda:0', dtype=torch.float64)
tensor([-2.0155, -2.5865, -2.7982, -3.2739, -3.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0152, device='cuda:0', dtype=torch.float64)
tensor([-2.0036, -2.6155, -2.7579, -3.2330, -3.2217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2263, device='cuda:0', dtype=torch.float64)
tensor([-1.9711, -2.6563, -2.7282, -3.1918, -3.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3609, device='cuda:0', dtype=torch.float64)
tensor([-1.9221, -2.6906, -2.7233, -3.1592, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1286, device='cuda:0', dtype=torch.float64)
tensor([-1.8779, -2.7177, -2.7433, -3.1247, -3.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9149, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.7546, -2.7337, -3.0824, -3.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3372, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.7915, -2.7145, -3.0459, -3.1341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0176, device='cuda:0', dtype=torch.float64)
tensor([-1.8931, -2.8045, -2.7039, -3.0225, -3.1229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1908, device='cuda:0', dtype=torch.float64)
tensor([-1.9201, -2.7987, -2.6985, -3.0134, -3.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2193, device='cuda:0', dtype=torch.float64)
tensor([-1.9237, -2.7643, -2.7148, -3.0320, -3.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0678, device='cuda:0', dtype=torch.float64)
tensor([-1.9291, -2.7426, -2.7286, -3.0492, -3.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([-1.9408, -2.7272, -2.7380, -3.0550, -3.1172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1869, device='cuda:0', dtype=torch.float64)
tensor([-1.9765, -2.7057, -2.7553, -3.0689, -3.1250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2451, device='cuda:0', dtype=torch.float64)
tensor([-2.0212, -2.6939, -2.7843, -3.0807, -3.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2917, device='cuda:0', dtype=torch.float64)
tensor([-2.0271, -2.6728, -2.8382, -3.0988, -3.1784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1118, device='cuda:0', dtype=torch.float64)
tensor([-2.0061, -2.6561, -2.8973, -3.1444, -3.2187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3557, device='cuda:0', dtype=torch.float64)
tensor([-1.9782, -2.6420, -2.9277, -3.1867, -3.2368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6585, device='cuda:0', dtype=torch.float64)
tensor([-1.9441, -2.6334, -2.9208, -3.2052, -3.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1768, device='cuda:0', dtype=torch.float64)
tensor([-1.9050, -2.6287, -2.9087, -3.2135, -3.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2138, device='cuda:0', dtype=torch.float64)
tensor([-1.8936, -2.6424, -2.8792, -3.1963, -3.1931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1061, device='cuda:0', dtype=torch.float64)
tensor([-1.9171, -2.6723, -2.8363, -3.1620, -3.2103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2926, device='cuda:0', dtype=torch.float64)
tensor([-1.9425, -2.7046, -2.8076, -3.1246, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9738, device='cuda:0', dtype=torch.float64)
tensor([-1.9755, -2.7191, -2.7951, -3.1049, -3.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2536, device='cuda:0', dtype=torch.float64)
tensor([-1.9862, -2.7297, -2.7965, -3.0720, -3.2292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1146, device='cuda:0', dtype=torch.float64)
tensor([-1.9640, -2.7288, -2.7933, -3.0514, -3.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2749, device='cuda:0', dtype=torch.float64)
tensor([-1.9352, -2.7345, -2.7932, -3.0428, -3.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1597, device='cuda:0', dtype=torch.float64)
tensor([-1.9282, -2.7395, -2.7863, -3.0614, -3.0980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2581, device='cuda:0', dtype=torch.float64)
tensor([-1.9370, -2.7328, -2.7727, -3.1000, -3.1133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2643, device='cuda:0', dtype=torch.float64)
tensor([-1.9455, -2.7261, -2.7752, -3.1662, -3.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2906, device='cuda:0', dtype=torch.float64)
tensor([-1.9511, -2.7145, -2.7911, -3.2471, -3.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2148, device='cuda:0', dtype=torch.float64)
tensor([-1.9461, -2.6860, -2.8187, -3.3253, -3.1925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2305, device='cuda:0', dtype=torch.float64)
tensor([-1.9379, -2.6733, -2.8327, -3.3547, -3.1877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4207, device='cuda:0', dtype=torch.float64)
tensor([-1.9478, -2.6564, -2.8411, -3.3651, -3.1816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3665, device='cuda:0', dtype=torch.float64)
tensor([-1.9829, -2.6652, -2.8389, -3.3523, -3.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1965, device='cuda:0', dtype=torch.float64)
tensor([-2.0001, -2.6735, -2.8255, -3.3247, -3.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1865, device='cuda:0', dtype=torch.float64)
tensor([-1.9861, -2.6971, -2.8141, -3.2788, -3.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2962, device='cuda:0', dtype=torch.float64)
tensor([-1.9661, -2.7176, -2.8024, -3.2319, -3.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1776, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.7401, -2.7817, -3.1744, -3.1233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4284, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.7531, -2.7496, -3.1417, -3.1140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0235, device='cuda:0', dtype=torch.float64)
tensor([-1.9259, -2.7742, -2.7234, -3.1112, -3.1191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0087, device='cuda:0', dtype=torch.float64)
tensor([-1.9254, -2.7939, -2.7187, -3.0947, -3.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9693, device='cuda:0', dtype=torch.float64)
tensor([-1.9227, -2.7857, -2.7341, -3.0978, -3.1792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0550, device='cuda:0', dtype=torch.float64)
tensor([-1.9201, -2.7599, -2.7624, -3.1179, -3.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6705, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -2.7182, -2.7840, -3.1084, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8530, device='cuda:0', dtype=torch.float64)
tensor([-1.9298, -2.6688, -2.8153, -3.1043, -3.1969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3754, device='cuda:0', dtype=torch.float64)
tensor([-1.9492, -2.6305, -2.8482, -3.1122, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0345, device='cuda:0', dtype=torch.float64)
tensor([-1.9696, -2.6112, -2.8657, -3.1338, -3.2049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2213, device='cuda:0', dtype=torch.float64)
tensor([-1.9844, -2.5925, -2.8831, -3.1654, -3.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2673, device='cuda:0', dtype=torch.float64)
tensor([-2.0097, -2.5983, -2.8789, -3.1907, -3.2153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2196, device='cuda:0', dtype=torch.float64)
tensor([-2.0245, -2.6130, -2.8532, -3.2023, -3.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1982, device='cuda:0', dtype=torch.float64)
tensor([-2.0334, -2.6367, -2.8287, -3.2114, -3.1811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3217, device='cuda:0', dtype=torch.float64)
tensor([-2.0254, -2.6574, -2.8092, -3.2387, -3.1828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1940, device='cuda:0', dtype=torch.float64)
tensor([-1.9757, -2.6576, -2.8154, -3.2851, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1542, device='cuda:0', dtype=torch.float64)
tensor([-1.9088, -2.6437, -2.8318, -3.2943, -3.1370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3133, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.6527, -2.8563, -3.2728, -3.1262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2013, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.6570, -2.8678, -3.2304, -3.1013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0477, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6613, -2.8582, -3.1674, -3.0801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3088, device='cuda:0', dtype=torch.float64)
tensor([-1.8807, -2.6790, -2.8365, -3.1056, -3.0993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1714, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.7087, -2.8039, -3.0339, -3.1384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0009, device='cuda:0', dtype=torch.float64)
tensor([-1.9761, -2.7403, -2.7849, -2.9919, -3.1749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3197, device='cuda:0', dtype=torch.float64)
tensor([-2.0133, -2.7518, -2.7768, -2.9738, -3.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1555, device='cuda:0', dtype=torch.float64)
tensor([-2.0300, -2.7664, -2.7581, -2.9824, -3.2438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9700, device='cuda:0', dtype=torch.float64)
tensor([-2.0206, -2.7666, -2.7579, -3.0186, -3.2573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1384, device='cuda:0', dtype=torch.float64)
tensor([-1.9663, -2.7394, -2.7697, -3.0907, -3.2522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1837, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.7181, -2.7816, -3.1622, -3.2379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0533, device='cuda:0', dtype=torch.float64)
tensor([-1.9078, -2.7037, -2.7794, -3.2083, -3.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2160, device='cuda:0', dtype=torch.float64)
tensor([-1.9066, -2.7029, -2.7639, -3.2409, -3.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1747, device='cuda:0', dtype=torch.float64)
tensor([-1.9300, -2.7077, -2.7381, -3.2397, -3.2471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5832, device='cuda:0', dtype=torch.float64)
tensor([-1.9478, -2.7155, -2.7082, -3.2108, -3.2359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2202, device='cuda:0', dtype=torch.float64)
tensor([-1.9549, -2.7037, -2.7056, -3.1893, -3.2250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2851, device='cuda:0', dtype=torch.float64)
tensor([-1.9650, -2.6883, -2.7184, -3.1726, -3.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2499, device='cuda:0', dtype=torch.float64)
tensor([-1.9773, -2.6644, -2.7546, -3.1583, -3.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2468, device='cuda:0', dtype=torch.float64)
tensor([-2.0089, -2.6626, -2.7722, -3.1570, -3.2633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3428, device='cuda:0', dtype=torch.float64)
tensor([-2.0344, -2.6768, -2.7820, -3.1824, -3.2470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3035, device='cuda:0', dtype=torch.float64)
tensor([-2.0362, -2.6909, -2.7952, -3.2264, -3.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1665, device='cuda:0', dtype=torch.float64)
tensor([-2.0008, -2.6890, -2.8233, -3.2712, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2034, device='cuda:0', dtype=torch.float64)
tensor([-1.9313, -2.6781, -2.8699, -3.2825, -3.0753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1355, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.6648, -2.9154, -3.2589, -3.0161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6048, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6801, -2.9389, -3.2468, -2.9923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0828, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.6982, -2.9335, -3.1979, -3.0171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3271, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.7081, -2.9297, -3.1445, -3.0681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0174, device='cuda:0', dtype=torch.float64)
tensor([-1.9305, -2.7119, -2.9219, -3.0977, -3.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3499, device='cuda:0', dtype=torch.float64)
tensor([-1.9808, -2.7197, -2.8938, -3.0625, -3.2083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4450, device='cuda:0', dtype=torch.float64)
tensor([-2.0328, -2.7300, -2.8524, -3.0320, -3.2574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0305, device='cuda:0', dtype=torch.float64)
tensor([-2.0472, -2.7295, -2.8071, -3.0258, -3.2728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1141, device='cuda:0', dtype=torch.float64)
tensor([-2.0347, -2.6998, -2.7872, -3.0665, -3.2766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2841, device='cuda:0', dtype=torch.float64)
tensor([-1.9958, -2.6718, -2.7917, -3.1264, -3.2772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2892, device='cuda:0', dtype=torch.float64)
tensor([-1.9639, -2.6559, -2.7850, -3.1859, -3.2894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8684, device='cuda:0', dtype=torch.float64)
tensor([-1.9432, -2.6520, -2.7780, -3.2197, -3.2951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9815, device='cuda:0', dtype=torch.float64)
tensor([-1.9231, -2.6571, -2.7698, -3.2277, -3.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2240, device='cuda:0', dtype=torch.float64)
tensor([-1.9041, -2.6859, -2.7680, -3.2335, -3.2334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2205, device='cuda:0', dtype=torch.float64)
tensor([-1.9040, -2.7219, -2.7606, -3.2134, -3.1889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0321, device='cuda:0', dtype=torch.float64)
tensor([-1.9325, -2.7693, -2.7574, -3.1826, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9306, device='cuda:0', dtype=torch.float64)
tensor([-1.9740, -2.8136, -2.7623, -3.1540, -3.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1394, device='cuda:0', dtype=torch.float64)
tensor([-1.9919, -2.8366, -2.7902, -3.1415, -3.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0077, device='cuda:0', dtype=torch.float64)
tensor([-2.0136, -2.8518, -2.8168, -3.1341, -3.2568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3562, device='cuda:0', dtype=torch.float64)
tensor([-2.0014, -2.8323, -2.8453, -3.1589, -3.2839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1472, device='cuda:0', dtype=torch.float64)
tensor([-1.9916, -2.8078, -2.8609, -3.1878, -3.2929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4311, device='cuda:0', dtype=torch.float64)
tensor([-1.9643, -2.7783, -2.8541, -3.1976, -3.2851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5631, device='cuda:0', dtype=torch.float64)
tensor([-1.9586, -2.7449, -2.8337, -3.1999, -3.2858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1349, device='cuda:0', dtype=torch.float64)
tensor([-1.9361, -2.7064, -2.8276, -3.2082, -3.2600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-1.9269, -2.6690, -2.8290, -3.2412, -3.2195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2101, device='cuda:0', dtype=torch.float64)
tensor([-1.9412, -2.6580, -2.8211, -3.2574, -3.1841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1193, device='cuda:0', dtype=torch.float64)
tensor([-1.9654, -2.6591, -2.8082, -3.2508, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2494, device='cuda:0', dtype=torch.float64)
tensor([-1.9915, -2.6673, -2.7966, -3.1984, -3.1317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3570, device='cuda:0', dtype=torch.float64)
tensor([-2.0270, -2.6697, -2.7976, -3.1215, -3.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3842, device='cuda:0', dtype=torch.float64)
tensor([-2.0471, -2.6701, -2.8097, -3.0993, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2189, device='cuda:0', dtype=torch.float64)
tensor([-2.0572, -2.6751, -2.8095, -3.0914, -3.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8875, device='cuda:0', dtype=torch.float64)
tensor([-2.0250, -2.6675, -2.7920, -3.0723, -3.1210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3929, device='cuda:0', dtype=torch.float64)
tensor([-1.9984, -2.6846, -2.7819, -3.0608, -3.0994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2803, device='cuda:0', dtype=torch.float64)
tensor([-1.9747, -2.7126, -2.7806, -3.0679, -3.1022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1569, device='cuda:0', dtype=torch.float64)
tensor([-1.9792, -2.7446, -2.7837, -3.0825, -3.1326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5084, device='cuda:0', dtype=torch.float64)
tensor([-2.0121, -2.7732, -2.7758, -3.1178, -3.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1604, device='cuda:0', dtype=torch.float64)
tensor([-2.0387, -2.7800, -2.7806, -3.1693, -3.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1654, device='cuda:0', dtype=torch.float64)
tensor([-2.0238, -2.7625, -2.7965, -3.2014, -3.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2766, device='cuda:0', dtype=torch.float64)
tensor([-1.9884, -2.7243, -2.8265, -3.2056, -3.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9410, device='cuda:0', dtype=torch.float64)
tensor([-1.9336, -2.6731, -2.8754, -3.2233, -3.0789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2243, device='cuda:0', dtype=torch.float64)
tensor([-1.8916, -2.6243, -2.9256, -3.2352, -3.0512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1797, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.5944, -2.9664, -3.2396, -3.0650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3288, device='cuda:0', dtype=torch.float64)
tensor([-1.9004, -2.5866, -2.9757, -3.2316, -3.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8905, device='cuda:0', dtype=torch.float64)
tensor([-1.9409, -2.6044, -2.9580, -3.2221, -3.1707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9186, device='cuda:0', dtype=torch.float64)
tensor([-1.9852, -2.6375, -2.9175, -3.1971, -3.2112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3706, device='cuda:0', dtype=torch.float64)
tensor([-2.0198, -2.6958, -2.8744, -3.1583, -3.2376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1953, device='cuda:0', dtype=torch.float64)
tensor([-2.0441, -2.7459, -2.8327, -3.1316, -3.2515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-2.0632, -2.7830, -2.7993, -3.1205, -3.2778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3649, device='cuda:0', dtype=torch.float64)
tensor([-2.0556, -2.8227, -2.7802, -3.1299, -3.3129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2640, device='cuda:0', dtype=torch.float64)
tensor([-2.0291, -2.8345, -2.7937, -3.1698, -3.3416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2576, device='cuda:0', dtype=torch.float64)
tensor([-2.0073, -2.8232, -2.8017, -3.2073, -3.3255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3134, device='cuda:0', dtype=torch.float64)
tensor([-1.9759, -2.7880, -2.7971, -3.2035, -3.2824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1898, device='cuda:0', dtype=torch.float64)
tensor([-1.9509, -2.7712, -2.7868, -3.1941, -3.2286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1125, device='cuda:0', dtype=torch.float64)
tensor([-1.9264, -2.7396, -2.7892, -3.1942, -3.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5090, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.7097, -2.8011, -3.1844, -3.1627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1376, device='cuda:0', dtype=torch.float64)
tensor([-1.9059, -2.6819, -2.8110, -3.1636, -3.1423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9486, device='cuda:0', dtype=torch.float64)
tensor([-1.9150, -2.6704, -2.8185, -3.1321, -3.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4224, device='cuda:0', dtype=torch.float64)
tensor([-1.9265, -2.6673, -2.8209, -3.0693, -3.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7068, device='cuda:0', dtype=torch.float64)
tensor([-1.9474, -2.7035, -2.8149, -3.0138, -3.0780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0676, device='cuda:0', dtype=torch.float64)
tensor([-1.9772, -2.7486, -2.8153, -2.9723, -3.0725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3592, device='cuda:0', dtype=torch.float64)
tensor([-2.0060, -2.7733, -2.8345, -2.9829, -3.1100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3457, device='cuda:0', dtype=torch.float64)
tensor([-2.0356, -2.7999, -2.8561, -3.0091, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4721, device='cuda:0', dtype=torch.float64)
tensor([-2.0109, -2.8108, -2.9108, -3.0735, -3.2179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4466, device='cuda:0', dtype=torch.float64)
tensor([-1.9859, -2.8063, -2.9716, -3.1338, -3.2917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3424, device='cuda:0', dtype=torch.float64)
tensor([-1.9625, -2.8127, -3.0113, -3.1670, -3.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6049, device='cuda:0', dtype=torch.float64)
tensor([-1.9423, -2.8224, -3.0073, -3.1777, -3.3406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2812, device='cuda:0', dtype=torch.float64)
tensor([-1.9167, -2.8266, -2.9722, -3.1561, -3.3122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2273, device='cuda:0', dtype=torch.float64)
tensor([-1.9153, -2.8360, -2.9182, -3.1393, -3.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2052, device='cuda:0', dtype=torch.float64)
tensor([-1.9400, -2.8518, -2.8717, -3.1480, -3.3052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5156, device='cuda:0', dtype=torch.float64)
tensor([-2.0058, -2.8379, -2.8378, -3.1500, -3.3164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4692, device='cuda:0', dtype=torch.float64)
tensor([-2.0775, -2.8110, -2.8278, -3.1844, -3.3328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5564, device='cuda:0', dtype=torch.float64)
tensor([-2.1157, -2.7624, -2.8421, -3.2402, -3.3212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3468, device='cuda:0', dtype=torch.float64)
tensor([-2.1087, -2.7214, -2.8395, -3.2785, -3.2815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2393, device='cuda:0', dtype=torch.float64)
tensor([-2.0752, -2.6892, -2.8050, -3.2966, -3.1996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3573, device='cuda:0', dtype=torch.float64)
tensor([-2.0333, -2.6575, -2.7695, -3.2783, -3.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1408, device='cuda:0', dtype=torch.float64)
tensor([-2.0091, -2.6471, -2.7432, -3.2655, -3.0382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3578, device='cuda:0', dtype=torch.float64)
tensor([-2.0214, -2.6760, -2.7108, -3.2460, -3.0379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6691, device='cuda:0', dtype=torch.float64)
tensor([-2.0340, -2.6927, -2.7099, -3.2531, -3.0873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0450, device='cuda:0', dtype=torch.float64)
tensor([-2.0540, -2.7154, -2.7194, -3.2690, -3.1747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3291, device='cuda:0', dtype=torch.float64)
tensor([-2.0611, -2.7475, -2.7438, -3.2715, -3.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3401, device='cuda:0', dtype=torch.float64)
tensor([-2.0321, -2.7690, -2.7745, -3.2786, -3.2560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2992, device='cuda:0', dtype=torch.float64)
tensor([-1.9808, -2.7732, -2.8108, -3.2842, -3.2573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2795, device='cuda:0', dtype=torch.float64)
tensor([-1.9514, -2.7780, -2.8396, -3.2940, -3.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0317, device='cuda:0', dtype=torch.float64)
tensor([-1.9412, -2.7770, -2.8542, -3.2841, -3.2169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4092, device='cuda:0', dtype=torch.float64)
tensor([-1.9555, -2.7866, -2.8590, -3.2539, -3.2135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4294, device='cuda:0', dtype=torch.float64)
tensor([-2.0027, -2.8006, -2.8576, -3.2209, -3.2397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3578, device='cuda:0', dtype=torch.float64)
tensor([-2.0759, -2.8169, -2.8701, -3.2181, -3.3036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2172, device='cuda:0', dtype=torch.float64)
tensor([-2.1509, -2.8394, -2.8964, -3.2408, -3.3735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3152, device='cuda:0', dtype=torch.float64)
tensor([-2.1737, -2.8408, -2.8828, -3.2547, -3.4007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3235, device='cuda:0', dtype=torch.float64)
tensor([-2.1447, -2.8120, -2.8752, -3.2517, -3.3831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2486, device='cuda:0', dtype=torch.float64)
tensor([-2.0852, -2.7757, -2.8702, -3.2367, -3.3321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1310, device='cuda:0', dtype=torch.float64)
tensor([-2.0364, -2.7527, -2.8733, -3.2118, -3.2827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0580, device='cuda:0', dtype=torch.float64)
tensor([-1.9993, -2.7121, -2.8857, -3.1670, -3.2470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1349, device='cuda:0', dtype=torch.float64)
tensor([-1.9820, -2.6727, -2.9037, -3.1246, -3.2500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9493, device='cuda:0', dtype=torch.float64)
tensor([-1.9703, -2.6400, -2.9267, -3.0936, -3.2740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2046, device='cuda:0', dtype=torch.float64)
tensor([-1.9568, -2.6264, -2.9364, -3.0757, -3.2866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9852, device='cuda:0', dtype=torch.float64)
tensor([-1.9451, -2.6318, -2.9391, -3.0687, -3.3067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8781, device='cuda:0', dtype=torch.float64)
tensor([-1.9356, -2.6371, -2.9352, -3.0656, -3.3329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0224, device='cuda:0', dtype=torch.float64)
tensor([-1.9266, -2.6464, -2.9139, -3.0582, -3.3279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1774, device='cuda:0', dtype=torch.float64)
tensor([-1.9342, -2.6487, -2.8993, -3.0472, -3.3361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1099, device='cuda:0', dtype=torch.float64)
tensor([-1.9679, -2.6614, -2.8937, -3.0448, -3.3694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1525, device='cuda:0', dtype=torch.float64)
tensor([-1.9950, -2.6710, -2.8964, -3.0524, -3.3956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3228, device='cuda:0', dtype=torch.float64)
tensor([-2.0307, -2.6841, -2.8994, -3.0431, -3.4291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3421, device='cuda:0', dtype=torch.float64)
tensor([-2.0479, -2.6901, -2.9096, -3.0513, -3.4402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4855, device='cuda:0', dtype=torch.float64)
tensor([-2.0503, -2.6900, -2.9141, -3.0812, -3.4303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3759, device='cuda:0', dtype=torch.float64)
tensor([-2.0534, -2.6835, -2.9008, -3.1285, -3.3769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1110, device='cuda:0', dtype=torch.float64)
tensor([-2.0434, -2.6770, -2.8753, -3.2150, -3.2891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3930, device='cuda:0', dtype=torch.float64)
tensor([-2.0294, -2.6737, -2.8624, -3.3279, -3.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5460, device='cuda:0', dtype=torch.float64)
tensor([-1.9918, -2.6770, -2.8659, -3.4293, -3.1497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1877, device='cuda:0', dtype=torch.float64)
tensor([-1.9603, -2.7002, -3.0542, -3.5473, -3.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3813, device='cuda:0', dtype=torch.float64)
tensor([-1.9423, -2.7132, -2.9811, -3.6209, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3224, device='cuda:0', dtype=torch.float64)
tensor([-1.9485, -2.7367, -2.8939, -3.6222, -3.2414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3184, device='cuda:0', dtype=torch.float64)
tensor([-1.9502, -2.7650, -2.9116, -3.5406, -3.2816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5056, device='cuda:0', dtype=torch.float64)
tensor([-1.9504, -2.8118, -2.9091, -3.4526, -3.2803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8478, device='cuda:0', dtype=torch.float64)
tensor([-1.9624, -2.8644, -2.8529, -3.3454, -3.2212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2445, device='cuda:0', dtype=torch.float64)
tensor([-1.9859, -2.9246, -2.8044, -3.2536, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4628, device='cuda:0', dtype=torch.float64)
tensor([-2.0248, -2.9705, -2.7858, -3.1825, -3.1707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3729, device='cuda:0', dtype=torch.float64)
tensor([-2.0978, -2.9960, -2.7953, -3.1368, -3.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3944, device='cuda:0', dtype=torch.float64)
tensor([-2.1541, -3.0005, -2.8344, -3.1409, -3.2798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0903, device='cuda:0', dtype=torch.float64)
tensor([-2.1609, -2.9715, -2.8928, -3.1582, -3.3053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2293, device='cuda:0', dtype=torch.float64)
tensor([-2.1195, -2.9258, -2.9179, -3.1664, -3.2653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2912, device='cuda:0', dtype=torch.float64)
tensor([-2.0513, -2.8679, -2.9285, -3.1857, -3.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0026, device='cuda:0', dtype=torch.float64)
tensor([-2.0027, -2.8066, -2.9424, -3.2173, -3.1054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1800, device='cuda:0', dtype=torch.float64)
tensor([-1.9633, -2.7568, -2.9570, -3.2540, -3.0528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1552, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.7202, -2.9590, -3.3010, -3.0285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1457, device='cuda:0', dtype=torch.float64)
tensor([-1.9240, -2.6801, -2.9498, -3.3478, -3.0539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0677, device='cuda:0', dtype=torch.float64)
tensor([-1.9411, -2.6498, -2.9425, -3.3828, -3.1258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1756, device='cuda:0', dtype=torch.float64)
tensor([-1.9900, -2.6410, -2.9208, -3.3759, -3.1868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2781, device='cuda:0', dtype=torch.float64)
tensor([-2.0666, -2.6555, -2.9008, -3.3515, -3.2730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0624, device='cuda:0', dtype=torch.float64)
tensor([-2.1351, -2.6973, -2.8801, -3.3417, -3.3340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4990, device='cuda:0', dtype=torch.float64)
tensor([-2.1543, -2.7256, -2.8501, -3.3293, -3.3598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1352, device='cuda:0', dtype=torch.float64)
tensor([-2.1521, -2.7549, -2.8241, -3.2956, -3.3750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1308, device='cuda:0', dtype=torch.float64)
tensor([-2.1205, -2.7791, -2.7927, -3.2393, -3.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2547, device='cuda:0', dtype=torch.float64)
tensor([-2.0876, -2.7890, -2.7460, -3.1478, -3.3181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1663, device='cuda:0', dtype=torch.float64)
tensor([-2.0522, -2.7967, -2.7172, -3.0642, -3.2469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2243, device='cuda:0', dtype=torch.float64)
tensor([-2.0466, -2.8026, -2.7200, -3.0280, -3.2020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1382, device='cuda:0', dtype=torch.float64)
tensor([-2.0376, -2.7948, -2.7289, -3.0157, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7685, device='cuda:0', dtype=torch.float64)
tensor([-2.0160, -2.7681, -2.7582, -3.0309, -3.1278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1780, device='cuda:0', dtype=torch.float64)
tensor([-1.9939, -2.7282, -2.7975, -3.0505, -3.1081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2382, device='cuda:0', dtype=torch.float64)
tensor([-1.9837, -2.6746, -2.8337, -3.0755, -3.1157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3437, device='cuda:0', dtype=torch.float64)
tensor([-1.9883, -2.6506, -2.8643, -3.0827, -3.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0472, device='cuda:0', dtype=torch.float64)
tensor([-1.9804, -2.6407, -2.8838, -3.0743, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3841, device='cuda:0', dtype=torch.float64)
tensor([-1.9693, -2.6494, -2.9228, -3.0815, -3.2123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2008, device='cuda:0', dtype=torch.float64)
tensor([-1.9697, -2.6844, -2.9694, -3.0953, -3.2775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4838, device='cuda:0', dtype=torch.float64)
tensor([-2.0037, -2.7584, -3.0016, -3.1222, -3.3779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3554, device='cuda:0', dtype=torch.float64)
tensor([-2.0521, -2.8368, -3.0309, -3.1649, -3.4677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0690, device='cuda:0', dtype=torch.float64)
tensor([-2.0952, -2.9249, -3.0235, -3.2312, -3.4962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3967, device='cuda:0', dtype=torch.float64)
tensor([-2.1315, -2.9885, -2.9962, -3.2864, -3.4630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2794, device='cuda:0', dtype=torch.float64)
tensor([-2.1355, -3.0307, -2.9425, -3.3195, -3.3882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1918, device='cuda:0', dtype=torch.float64)
tensor([-2.1127, -3.0417, -2.8953, -3.3295, -3.3049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3892, device='cuda:0', dtype=torch.float64)
tensor([-2.0964, -3.0158, -2.8842, -3.3477, -3.2504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4644, device='cuda:0', dtype=torch.float64)
tensor([-2.0904, -2.9721, -2.8979, -3.3779, -3.2219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3535, device='cuda:0', dtype=torch.float64)
tensor([-2.0767, -2.9207, -2.9088, -3.4182, -3.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1801, device='cuda:0', dtype=torch.float64)
tensor([-2.0663, -2.8527, -2.8931, -3.4467, -3.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2033, device='cuda:0', dtype=torch.float64)
tensor([-2.0646, -2.7875, -2.8698, -3.4747, -3.1918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2042, device='cuda:0', dtype=torch.float64)
tensor([-2.0710, -2.7198, -2.8190, -3.4499, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1671, device='cuda:0', dtype=torch.float64)
tensor([-2.0876, -2.6754, -2.7797, -3.3813, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5878, device='cuda:0', dtype=torch.float64)
tensor([-2.0972, -2.6393, -2.7644, -3.2652, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1630, device='cuda:0', dtype=torch.float64)
tensor([-2.1104, -2.6066, -2.7577, -3.1575, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3175, device='cuda:0', dtype=torch.float64)
tensor([-2.1145, -2.5823, -2.7748, -3.0949, -3.1938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9131, device='cuda:0', dtype=torch.float64)
tensor([-2.1108, -2.5634, -2.8086, -3.0683, -3.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0315, device='cuda:0', dtype=torch.float64)
tensor([-2.0871, -2.5575, -2.8372, -3.0535, -3.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1769, device='cuda:0', dtype=torch.float64)
tensor([-2.0576, -2.5716, -2.8569, -3.0484, -3.2213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1838, device='cuda:0', dtype=torch.float64)
tensor([-2.0347, -2.5979, -2.8610, -3.0632, -3.2040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3950, device='cuda:0', dtype=torch.float64)
tensor([-2.0071, -2.6420, -2.8742, -3.0460, -3.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2090, device='cuda:0', dtype=torch.float64)
tensor([-2.0048, -2.6866, -2.8800, -3.0397, -3.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1952, device='cuda:0', dtype=torch.float64)
tensor([-2.0119, -2.7319, -2.8847, -3.0487, -3.2677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1891, device='cuda:0', dtype=torch.float64)
tensor([-2.0382, -2.7846, -2.8843, -3.0814, -3.3228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2073, device='cuda:0', dtype=torch.float64)
tensor([-2.0523, -2.8321, -2.8772, -3.1374, -3.3581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3149, device='cuda:0', dtype=torch.float64)
tensor([-2.0531, -2.8764, -2.8532, -3.1874, -3.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1614, device='cuda:0', dtype=torch.float64)
tensor([-2.0228, -2.8988, -2.8272, -3.1997, -3.2985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2590, device='cuda:0', dtype=torch.float64)
tensor([-1.9830, -2.9114, -2.8044, -3.1857, -3.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3547, device='cuda:0', dtype=torch.float64)
tensor([-1.9786, -2.8942, -2.8063, -3.2009, -3.2127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3942, device='cuda:0', dtype=torch.float64)
tensor([-1.9770, -2.8695, -2.8133, -3.2037, -3.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3196, device='cuda:0', dtype=torch.float64)
tensor([-1.9664, -2.8377, -2.8219, -3.2186, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0640, device='cuda:0', dtype=torch.float64)
tensor([-1.9650, -2.7899, -2.8423, -3.2474, -3.1923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2145, device='cuda:0', dtype=torch.float64)
tensor([-1.9815, -2.7535, -2.8616, -3.2746, -3.2146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1836, device='cuda:0', dtype=torch.float64)
tensor([-2.0138, -2.7375, -2.8828, -3.2882, -3.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0863, device='cuda:0', dtype=torch.float64)
tensor([-2.0483, -2.7327, -2.9024, -3.3039, -3.2873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9932, device='cuda:0', dtype=torch.float64)
tensor([-2.0959, -2.7446, -2.9193, -3.3040, -3.3321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4085, device='cuda:0', dtype=torch.float64)
tensor([-2.1560, -2.7864, -2.9391, -3.2804, -3.3810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2714, device='cuda:0', dtype=torch.float64)
tensor([-2.2116, -2.8466, -2.9716, -3.2484, -3.4089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1155, device='cuda:0', dtype=torch.float64)
tensor([-2.2540, -2.8991, -3.0000, -3.2311, -3.4107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5007, device='cuda:0', dtype=torch.float64)
tensor([-2.2746, -2.9125, -3.0021, -3.2096, -3.3395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3063, device='cuda:0', dtype=torch.float64)
tensor([-2.2576, -2.8976, -2.9950, -3.2167, -3.2558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1029, device='cuda:0', dtype=torch.float64)
tensor([-2.2073, -2.8707, -2.9903, -3.2535, -3.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1824, device='cuda:0', dtype=torch.float64)
tensor([-2.1322, -2.8237, -2.9898, -3.2936, -3.0938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0580, device='cuda:0', dtype=torch.float64)
tensor([-2.0662, -2.7787, -2.9959, -3.3254, -3.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1932, device='cuda:0', dtype=torch.float64)
tensor([-2.0253, -2.7426, -2.9814, -3.3095, -3.0747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0016, device='cuda:0', dtype=torch.float64)
tensor([-1.9986, -2.7146, -2.9467, -3.2625, -3.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2552, device='cuda:0', dtype=torch.float64)
tensor([-2.0080, -2.6942, -2.8983, -3.1985, -3.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4597, device='cuda:0', dtype=torch.float64)
tensor([-2.0403, -2.6967, -2.8618, -3.1612, -3.1763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2869, device='cuda:0', dtype=torch.float64)
tensor([-2.0832, -2.6940, -2.8426, -3.1613, -3.2447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4601, device='cuda:0', dtype=torch.float64)
tensor([-2.1268, -2.6926, -2.8435, -3.2173, -3.3412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2423, device='cuda:0', dtype=torch.float64)
tensor([-2.1567, -2.7012, -2.8591, -3.2766, -3.4268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1556, device='cuda:0', dtype=torch.float64)
tensor([-2.1792, -2.7028, -2.8893, -3.3717, -3.5173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3505, device='cuda:0', dtype=torch.float64)
tensor([-2.1646, -2.7128, -2.9219, -3.4105, -3.6041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2869, device='cuda:0', dtype=torch.float64)
tensor([-2.1539, -2.7268, -2.9746, -3.4304, -3.6733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1538, device='cuda:0', dtype=torch.float64)
tensor([-2.1182, -2.7436, -3.0165, -3.4806, -3.6989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2442, device='cuda:0', dtype=torch.float64)
tensor([-2.0945, -2.7620, -3.0379, -3.5424, -3.6941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2503, device='cuda:0', dtype=torch.float64)
tensor([-2.0712, -2.7765, -3.0427, -3.5912, -3.6418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1364, device='cuda:0', dtype=torch.float64)
tensor([-2.0890, -2.8078, -3.0079, -3.6260, -3.6072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1514, device='cuda:0', dtype=torch.float64)
tensor([-2.1136, -2.8414, -2.9640, -3.6454, -3.5534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9452, device='cuda:0', dtype=torch.float64)
tensor([-2.1362, -2.8832, -2.9341, -3.6305, -3.4895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0940, device='cuda:0', dtype=torch.float64)
tensor([-2.1405, -2.8955, -2.9107, -3.6060, -3.4246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3110, device='cuda:0', dtype=torch.float64)
tensor([-2.1393, -2.8859, -2.8968, -3.5649, -3.3669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0032, device='cuda:0', dtype=torch.float64)
tensor([-2.1220, -2.8711, -2.8703, -3.4943, -3.3069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2345, device='cuda:0', dtype=torch.float64)
tensor([-2.0925, -2.8646, -2.8567, -3.4085, -3.2570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1021, device='cuda:0', dtype=torch.float64)
tensor([-2.0786, -2.8701, -2.8719, -3.3412, -3.2411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3220, device='cuda:0', dtype=torch.float64)
tensor([-2.0921, -2.8762, -2.9137, -3.2822, -3.2526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3602, device='cuda:0', dtype=torch.float64)
tensor([-2.1216, -2.8938, -2.9636, -3.2360, -3.2807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3933, device='cuda:0', dtype=torch.float64)
tensor([-2.1503, -2.9060, -3.0032, -3.2196, -3.2825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3991, device='cuda:0', dtype=torch.float64)
tensor([-2.1381, -2.8833, -3.0684, -3.2243, -3.2727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0176, device='cuda:0', dtype=torch.float64)
tensor([-2.1198, -2.8545, -3.1455, -3.2296, -3.2785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1456, device='cuda:0', dtype=torch.float64)
tensor([-2.1102, -2.8404, -3.1955, -3.2338, -3.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2162, device='cuda:0', dtype=torch.float64)
tensor([-2.0948, -2.8398, -3.2123, -3.2378, -3.2953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2378, device='cuda:0', dtype=torch.float64)
tensor([-2.0774, -2.8455, -3.1910, -3.2301, -3.3145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0289, device='cuda:0', dtype=torch.float64)
tensor([-2.0845, -2.8703, -3.1804, -3.2275, -3.3515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1005, device='cuda:0', dtype=torch.float64)
tensor([-2.0715, -2.8825, -3.1757, -3.2282, -3.3573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4961, device='cuda:0', dtype=torch.float64)
tensor([-2.0657, -2.8857, -3.1779, -3.2182, -3.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3126, device='cuda:0', dtype=torch.float64)
tensor([-2.0691, -2.8786, -3.1655, -3.1984, -3.3246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1031, device='cuda:0', dtype=torch.float64)
tensor([-2.0758, -2.8750, -3.1373, -3.1734, -3.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0639, device='cuda:0', dtype=torch.float64)
tensor([-2.0894, -2.8740, -3.0966, -3.1500, -3.2896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7297, device='cuda:0', dtype=torch.float64)
tensor([-2.0929, -2.8747, -3.0503, -3.1304, -3.3288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2458, device='cuda:0', dtype=torch.float64)
tensor([-2.1132, -2.8656, -3.0222, -3.1216, -3.3757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5513, device='cuda:0', dtype=torch.float64)
tensor([-2.1578, -2.8342, -3.0133, -3.1488, -3.4378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0800, device='cuda:0', dtype=torch.float64)
tensor([-2.1880, -2.8159, -3.0129, -3.1899, -3.4826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9316, device='cuda:0', dtype=torch.float64)
tensor([-2.1871, -2.7956, -2.9973, -3.2249, -3.4943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0281, device='cuda:0', dtype=torch.float64)
tensor([-2.1919, -2.7986, -2.9664, -3.2631, -3.4825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2795, device='cuda:0', dtype=torch.float64)
tensor([-2.1688, -2.8141, -2.9465, -3.3142, -3.4397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1352, device='cuda:0', dtype=torch.float64)
tensor([-2.1407, -2.8359, -2.9297, -3.3596, -3.3737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0299, device='cuda:0', dtype=torch.float64)
tensor([-2.1288, -2.8746, -2.9114, -3.4515, -3.3170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3914, device='cuda:0', dtype=torch.float64)
tensor([-2.0903, -2.9106, -2.9135, -3.5413, -3.3009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1044, device='cuda:0', dtype=torch.float64)
tensor([-2.0567, -2.9317, -2.9428, -3.5613, -3.3130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3565, device='cuda:0', dtype=torch.float64)
tensor([-2.0654, -2.9561, -2.9689, -3.5883, -3.3417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3881, device='cuda:0', dtype=torch.float64)
tensor([-2.1149, -3.0035, -2.9548, -3.5685, -3.3538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2564, device='cuda:0', dtype=torch.float64)
tensor([-2.1731, -3.0521, -2.9194, -3.4984, -3.3352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4276, device='cuda:0', dtype=torch.float64)
tensor([-2.2375, -3.0761, -2.8665, -3.3698, -3.2611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2301, device='cuda:0', dtype=torch.float64)
tensor([-2.3010, -3.1155, -2.8120, -3.2709, -3.1815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2403, device='cuda:0', dtype=torch.float64)
tensor([-2.3450, -3.1225, -2.7771, -3.2437, -3.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0695, device='cuda:0', dtype=torch.float64)
tensor([-2.3455, -3.1119, -2.7719, -3.2681, -3.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2832, device='cuda:0', dtype=torch.float64)
tensor([-2.2895, -3.0843, -2.7864, -3.3127, -3.0670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2375, device='cuda:0', dtype=torch.float64)
tensor([-2.2228, -3.0577, -2.8334, -3.3634, -3.0522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1599, device='cuda:0', dtype=torch.float64)
tensor([-2.1863, -3.0234, -2.9114, -3.3955, -3.0850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4841, device='cuda:0', dtype=torch.float64)
tensor([-2.1793, -2.9619, -2.9990, -3.4155, -3.1366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1924, device='cuda:0', dtype=torch.float64)
tensor([-2.1981, -2.8871, -3.0948, -3.4307, -3.2086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2229, device='cuda:0', dtype=torch.float64)
tensor([-2.1961, -2.8500, -3.1647, -3.4334, -3.2510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2527, device='cuda:0', dtype=torch.float64)
tensor([-2.2203, -2.8504, -3.1994, -3.4145, -3.2976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1880, device='cuda:0', dtype=torch.float64)
tensor([-2.2523, -2.8913, -3.1495, -3.3997, -3.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2998, device='cuda:0', dtype=torch.float64)
tensor([-2.2784, -2.9485, -3.0700, -3.3838, -3.3826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0710, device='cuda:0', dtype=torch.float64)
tensor([-2.3184, -2.9954, -3.0662, -3.4011, -3.4184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1403, device='cuda:0', dtype=torch.float64)
tensor([-2.3157, -2.9977, -3.0718, -3.4006, -3.4195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3966, device='cuda:0', dtype=torch.float64)
tensor([-2.2758, -2.9833, -3.0054, -3.3478, -3.3981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3953, device='cuda:0', dtype=torch.float64)
tensor([-2.2068, -2.9581, -2.9273, -3.3375, -3.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2752, device='cuda:0', dtype=torch.float64)
tensor([-2.1028, -2.9001, -2.9544, -3.3294, -3.3661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0789, device='cuda:0', dtype=torch.float64)
tensor([-2.0313, -2.8508, -2.9995, -3.3467, -3.3874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4719, device='cuda:0', dtype=torch.float64)
tensor([-1.9790, -2.8204, -3.0549, -3.3427, -3.4249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3675, device='cuda:0', dtype=torch.float64)
tensor([-1.9606, -2.8151, -3.0961, -3.3051, -3.4535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1761, device='cuda:0', dtype=torch.float64)
tensor([-1.9555, -2.8405, -3.1027, -3.2820, -3.4628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1884, device='cuda:0', dtype=torch.float64)
tensor([-1.9819, -2.8942, -3.0780, -3.2514, -3.4330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2120, device='cuda:0', dtype=torch.float64)
tensor([-2.0314, -2.9472, -3.0523, -3.2207, -3.3885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0742, device='cuda:0', dtype=torch.float64)
tensor([-2.1243, -3.0054, -3.0156, -3.1796, -3.3795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1126, device='cuda:0', dtype=torch.float64)
tensor([-2.2311, -3.0801, -2.9909, -3.1483, -3.3919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5669, device='cuda:0', dtype=torch.float64)
tensor([-2.3237, -3.1297, -2.9845, -3.1527, -3.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3588, device='cuda:0', dtype=torch.float64)
tensor([-2.3337, -3.1802, -3.0099, -3.1794, -3.5080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2786, device='cuda:0', dtype=torch.float64)
tensor([-2.3005, -3.1462, -3.0429, -3.2042, -3.5326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2802, device='cuda:0', dtype=torch.float64)
tensor([-2.2804, -3.0795, -3.0694, -3.2671, -3.5557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1282, device='cuda:0', dtype=torch.float64)
tensor([-2.2694, -3.0287, -3.0835, -3.3390, -3.5556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2632, device='cuda:0', dtype=torch.float64)
tensor([-2.2596, -3.0001, -3.0716, -3.3925, -3.5595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3542, device='cuda:0', dtype=torch.float64)
tensor([-2.2567, -2.9977, -3.0330, -3.4369, -3.5861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3439, device='cuda:0', dtype=torch.float64)
tensor([-2.2401, -3.0048, -3.0248, -3.4901, -3.6519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1863, device='cuda:0', dtype=torch.float64)
tensor([-2.2247, -3.0153, -3.0424, -3.5564, -3.6947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0158, device='cuda:0', dtype=torch.float64)
tensor([-2.2090, -3.0809, -3.0562, -3.6202, -3.7116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1829, device='cuda:0', dtype=torch.float64)
tensor([-2.2309, -3.1394, -3.0692, -3.6108, -3.5672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4581, device='cuda:0', dtype=torch.float64)
tensor([-2.2794, -3.0458, -3.0867, -3.4963, -3.4509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3926, device='cuda:0', dtype=torch.float64)
tensor([-2.3027, -2.9453, -3.1110, -3.3808, -3.4147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0561, device='cuda:0', dtype=torch.float64)
tensor([-2.3220, -2.8984, -3.1105, -3.2875, -3.3751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3965, device='cuda:0', dtype=torch.float64)
tensor([-2.3314, -2.9037, -3.0850, -3.2026, -3.3096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1327, device='cuda:0', dtype=torch.float64)
tensor([-2.3429, -2.9315, -3.0637, -3.1597, -3.2881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1686, device='cuda:0', dtype=torch.float64)
tensor([-2.3432, -2.9510, -3.0486, -3.1368, -3.2841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5557, device='cuda:0', dtype=torch.float64)
tensor([-2.3616, -2.9761, -3.0529, -3.1307, -3.3208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4845, device='cuda:0', dtype=torch.float64)
tensor([-2.3639, -2.9737, -3.0751, -3.1372, -3.3458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0178, device='cuda:0', dtype=torch.float64)
tensor([-2.3334, -2.9512, -3.0970, -3.1551, -3.3866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3072, device='cuda:0', dtype=torch.float64)
tensor([-2.2784, -2.9105, -3.1197, -3.1756, -3.3886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2817, device='cuda:0', dtype=torch.float64)
tensor([-2.2204, -2.8569, -3.1474, -3.2120, -3.3869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0582, device='cuda:0', dtype=torch.float64)
tensor([-2.1780, -2.8034, -3.1601, -3.2830, -3.3903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4437, device='cuda:0', dtype=torch.float64)
tensor([-2.1528, -2.7863, -3.1628, -3.4049, -3.3919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0754, device='cuda:0', dtype=torch.float64)
tensor([-2.1678, -2.7772, -3.1394, -3.4754, -3.3893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3947, device='cuda:0', dtype=torch.float64)
tensor([-2.2157, -2.7990, -3.1131, -3.5144, -3.4007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1769, device='cuda:0', dtype=torch.float64)
tensor([-2.2628, -2.8248, -3.0856, -3.5799, -3.4067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3735, device='cuda:0', dtype=torch.float64)
tensor([-2.3006, -2.8444, -3.0700, -3.6241, -3.4153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0835, device='cuda:0', dtype=torch.float64)
tensor([-2.2622, -2.8519, -3.0794, -3.6818, -3.4286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0711, device='cuda:0', dtype=torch.float64)
tensor([-2.2653, -2.8751, -3.0979, -3.7185, -3.4504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0213, device='cuda:0', dtype=torch.float64)
tensor([-2.2815, -2.9248, -3.1012, -3.6780, -3.4742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2982, device='cuda:0', dtype=torch.float64)
tensor([-2.2824, -2.9791, -3.0542, -3.6288, -3.4775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3654, device='cuda:0', dtype=torch.float64)
tensor([-2.2950, -3.0347, -3.0424, -3.5761, -3.4842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3003, device='cuda:0', dtype=torch.float64)
tensor([-2.3032, -3.0686, -3.0510, -3.5119, -3.4860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2692, device='cuda:0', dtype=torch.float64)
tensor([-2.3090, -3.0962, -3.0586, -3.4586, -3.4808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1984, device='cuda:0', dtype=torch.float64)
tensor([-2.3273, -3.1122, -3.0589, -3.4528, -3.4872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4144, device='cuda:0', dtype=torch.float64)
tensor([-2.2624, -3.1170, -3.0666, -3.4320, -3.5106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4381, device='cuda:0', dtype=torch.float64)
tensor([-2.1951, -3.1324, -3.0681, -3.4169, -3.5263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6284, device='cuda:0', dtype=torch.float64)
tensor([-2.1537, -3.1099, -3.0865, -3.4600, -3.6013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0195, device='cuda:0', dtype=torch.float64)
tensor([-2.1681, -3.0622, -3.1096, -3.5391, -3.6877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2567, device='cuda:0', dtype=torch.float64)
tensor([-2.2157, -3.0521, -3.1477, -3.6449, -3.7798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0003, device='cuda:0', dtype=torch.float64)
tensor([-2.2790, -3.0443, -3.1987, -3.7381, -3.8528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2151, device='cuda:0', dtype=torch.float64)
tensor([-2.3023, -3.0330, -3.2360, -3.7749, -3.8785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0875, device='cuda:0', dtype=torch.float64)
tensor([-2.2891, -2.9999, -3.2654, -3.7681, -3.8817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0844, device='cuda:0', dtype=torch.float64)
tensor([-2.2831, -2.9788, -3.3034, -3.6964, -3.8386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2606, device='cuda:0', dtype=torch.float64)
tensor([-2.3067, -2.9680, -3.3369, -3.6131, -3.7957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1878, device='cuda:0', dtype=torch.float64)
tensor([-2.3361, -2.9531, -3.1945, -3.5248, -3.7563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2082, device='cuda:0', dtype=torch.float64)
tensor([-2.3439, -2.9282, -3.1582, -3.4319, -3.7064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1506, device='cuda:0', dtype=torch.float64)
tensor([-2.3345, -2.9207, -3.1607, -3.3562, -3.6586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9307, device='cuda:0', dtype=torch.float64)
tensor([-2.3363, -2.9227, -3.1849, -3.2836, -3.6100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4049, device='cuda:0', dtype=torch.float64)
tensor([-2.3552, -2.9638, -3.2118, -3.2023, -3.5856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4059, device='cuda:0', dtype=torch.float64)
tensor([-2.3842, -3.0167, -3.2073, -3.1279, -3.5590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0860, device='cuda:0', dtype=torch.float64)
tensor([-2.4030, -3.0477, -3.1959, -3.0848, -3.5429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3100, device='cuda:0', dtype=torch.float64)
tensor([-2.3933, -3.0272, -3.1947, -3.1122, -3.4999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1597, device='cuda:0', dtype=torch.float64)
tensor([-2.4120, -3.0106, -3.1891, -3.1459, -3.4729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2690, device='cuda:0', dtype=torch.float64)
tensor([-2.4087, -2.9900, -3.2141, -3.2077, -3.4774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3142, device='cuda:0', dtype=torch.float64)
tensor([-2.3734, -2.9820, -3.2358, -3.3110, -3.4639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4393, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -2.9815, -3.3184, -3.4399, -3.4596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2194, device='cuda:0', dtype=torch.float64)
tensor([-2.3145, -2.9768, -3.3785, -3.5611, -3.4363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1229, device='cuda:0', dtype=torch.float64)
tensor([-2.2969, -2.9854, -3.4177, -3.6939, -3.4128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3272, device='cuda:0', dtype=torch.float64)
tensor([-2.3295, -3.0086, -3.3969, -3.7203, -3.4139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2311, device='cuda:0', dtype=torch.float64)
tensor([-2.4092, -3.0269, -3.3230, -3.6702, -3.4278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1703, device='cuda:0', dtype=torch.float64)
tensor([-2.6037, -3.0184, -3.2178, -3.6161, -3.4919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3675, device='cuda:0', dtype=torch.float64)
tensor([-2.8374, -3.0099, -3.1312, -3.5363, -3.5754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2052, device='cuda:0', dtype=torch.float64)
tensor([-2.8998, -3.0117, -3.0689, -3.4707, -3.5816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4553, device='cuda:0', dtype=torch.float64)
tensor([-2.6831, -2.9979, -3.0733, -3.4441, -3.5779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0079, device='cuda:0', dtype=torch.float64)
tensor([-2.4833, -2.9889, -3.0896, -3.4392, -3.6200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2872, device='cuda:0', dtype=torch.float64)
tensor([-2.3991, -3.0091, -3.0933, -3.4436, -3.6236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4288, device='cuda:0', dtype=torch.float64)
tensor([-2.3905, -3.0496, -3.1071, -3.4542, -3.6237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0058, device='cuda:0', dtype=torch.float64)
tensor([-2.3767, -3.0799, -3.1206, -3.4800, -3.6081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0646, device='cuda:0', dtype=torch.float64)
tensor([-2.3343, -3.0943, -3.1345, -3.5120, -3.5881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2129, device='cuda:0', dtype=torch.float64)
tensor([-2.2861, -3.1166, -3.1197, -3.5511, -3.5416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2265, device='cuda:0', dtype=torch.float64)
tensor([-2.2466, -3.1520, -3.0920, -3.5826, -3.4933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4944, device='cuda:0', dtype=torch.float64)
tensor([-2.2457, -3.2064, -3.0645, -3.5455, -3.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9616, device='cuda:0', dtype=torch.float64)
tensor([-2.2533, -3.2680, -3.0357, -3.5064, -3.4375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2619, device='cuda:0', dtype=torch.float64)
tensor([-2.2701, -3.3542, -3.0088, -3.5654, -3.4129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2050, device='cuda:0', dtype=torch.float64)
tensor([-2.2957, -3.4177, -3.0064, -3.6178, -3.3825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3482, device='cuda:0', dtype=torch.float64)
tensor([-2.3511, -3.4766, -3.0157, -3.6100, -3.3940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2676, device='cuda:0', dtype=torch.float64)
tensor([-2.3836, -3.5254, -3.0202, -3.6417, -3.4145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1875, device='cuda:0', dtype=torch.float64)
tensor([-2.3810, -3.5557, -3.0196, -3.7062, -3.4059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4259, device='cuda:0', dtype=torch.float64)
tensor([-2.3608, -3.5645, -3.0431, -3.7011, -3.3852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2012, device='cuda:0', dtype=torch.float64)
tensor([-2.3767, -3.5650, -3.0726, -3.5855, -3.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2288, device='cuda:0', dtype=torch.float64)
tensor([-2.3873, -3.5900, -3.1104, -3.4278, -3.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1405, device='cuda:0', dtype=torch.float64)
tensor([-2.4119, -3.5901, -3.1499, -3.3201, -3.3203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2677, device='cuda:0', dtype=torch.float64)
tensor([-2.4288, -3.6942, -3.1875, -3.2662, -3.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1959, device='cuda:0', dtype=torch.float64)
tensor([-2.4334, -3.8480, -3.2261, -3.2487, -3.4373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4339, device='cuda:0', dtype=torch.float64)
tensor([-2.4403, -3.6093, -3.2643, -3.3156, -3.5705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1334, device='cuda:0', dtype=torch.float64)
tensor([-2.4314, -3.4494, -3.3151, -3.4231, -3.5705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1257, device='cuda:0', dtype=torch.float64)
tensor([-2.4044, -3.3521, -3.3712, -3.5255, -3.5504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9913, device='cuda:0', dtype=torch.float64)
tensor([-2.3660, -3.2796, -3.4353, -3.6179, -3.5631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1768, device='cuda:0', dtype=torch.float64)
tensor([-2.3488, -3.2239, -3.4955, -3.7258, -3.6138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1590, device='cuda:0', dtype=torch.float64)
tensor([-2.3445, -3.1989, -3.5487, -3.8085, -3.6587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1250, device='cuda:0', dtype=torch.float64)
tensor([-2.3486, -3.1966, -3.5561, -3.8457, -3.6938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2137, device='cuda:0', dtype=torch.float64)
tensor([-2.3739, -3.1954, -3.5287, -3.8638, -3.7603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4835, device='cuda:0', dtype=torch.float64)
tensor([-2.3841, -3.1631, -3.4776, -3.8364, -3.6908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3537, device='cuda:0', dtype=torch.float64)
tensor([-2.4305, -3.1510, -3.4260, -3.8131, -3.6501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4107, device='cuda:0', dtype=torch.float64)
tensor([-2.5465, -3.1575, -3.3711, -3.8189, -3.6436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2761, device='cuda:0', dtype=torch.float64)
tensor([-2.6772, -3.1859, -3.3679, -3.8327, -3.7071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2422, device='cuda:0', dtype=torch.float64)
tensor([-2.7695, -3.2177, -3.4528, -3.8432, -3.7746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0001, device='cuda:0', dtype=torch.float64)
tensor([-2.8156, -3.2639, -3.4428, -3.8790, -3.8019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0211, device='cuda:0', dtype=torch.float64)
tensor([-2.8344, -3.3320, -3.3711, -3.8632, -3.8107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0892, device='cuda:0', dtype=torch.float64)
tensor([-2.8441, -3.3875, -3.3261, -3.8357, -3.8058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9146, device='cuda:0', dtype=torch.float64)
tensor([-2.8380, -3.3684, -3.3097, -3.7928, -3.7938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3637, device='cuda:0', dtype=torch.float64)
tensor([-2.8379, -3.2920, -3.3043, -3.7278, -3.7897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3631, device='cuda:0', dtype=torch.float64)
tensor([-2.8114, -3.2324, -3.3188, -3.7034, -3.7895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2338, device='cuda:0', dtype=torch.float64)
tensor([-2.7669, -3.1798, -3.3590, -3.6919, -3.8175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4653, device='cuda:0', dtype=torch.float64)
tensor([-2.7112, -3.1532, -3.4260, -3.7037, -3.7913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2336, device='cuda:0', dtype=torch.float64)
tensor([-2.6591, -3.1229, -3.4791, -3.7442, -3.7422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0873, device='cuda:0', dtype=torch.float64)
tensor([-2.5952, -3.1155, -3.5371, -3.8293, -3.7063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3410, device='cuda:0', dtype=torch.float64)
tensor([-2.5236, -3.0949, -3.5656, -3.8500, -3.6830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0607, device='cuda:0', dtype=torch.float64)
tensor([-2.4649, -3.1147, -3.6067, -3.8351, -3.6826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9738, device='cuda:0', dtype=torch.float64)
tensor([-2.4320, -3.1394, -3.6052, -3.8142, -3.7206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0837, device='cuda:0', dtype=torch.float64)
tensor([-2.4379, -3.1855, -3.5958, -3.7341, -3.7872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1215, device='cuda:0', dtype=torch.float64)
tensor([-2.4456, -3.2459, -3.6013, -3.7106, -3.9116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2540, device='cuda:0', dtype=torch.float64)
tensor([-2.4552, -3.3173, -3.6660, -3.6276, -3.9120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1134, device='cuda:0', dtype=torch.float64)
tensor([-2.5218, -3.3844, -3.8450, -3.5316, -3.8703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3263, device='cuda:0', dtype=torch.float64)
tensor([-2.6297, -3.4442, -4.0152, -3.4692, -3.8544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1512, device='cuda:0', dtype=torch.float64)
tensor([-2.7030, -3.4719, -3.7495, -3.4497, -3.8997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1107, device='cuda:0', dtype=torch.float64)
tensor([-2.7419, -3.5073, -3.7156, -3.4524, -3.9540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1251, device='cuda:0', dtype=torch.float64)
tensor([-2.7746, -3.5089, -3.7272, -3.4763, -4.0039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3365, device='cuda:0', dtype=torch.float64)
tensor([-2.8151, -3.5082, -3.7408, -3.5311, -4.0183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1225, device='cuda:0', dtype=torch.float64)
tensor([-2.8548, -3.5009, -3.7424, -3.6141, -4.0175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9321, device='cuda:0', dtype=torch.float64)
tensor([-2.9011, -3.5144, -3.7396, -3.6889, -3.9819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2332, device='cuda:0', dtype=torch.float64)
tensor([-2.9318, -3.5185, -3.7181, -3.7468, -3.9439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0986, device='cuda:0', dtype=torch.float64)
tensor([-2.9236, -3.5125, -3.6799, -3.8236, -3.8856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1524, device='cuda:0', dtype=torch.float64)
tensor([-2.9065, -3.4880, -3.6472, -3.9259, -3.8322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5272, device='cuda:0', dtype=torch.float64)
tensor([-2.9047, -3.4848, -3.6138, -4.0388, -3.8007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1988, device='cuda:0', dtype=torch.float64)
tensor([-2.8945, -3.4808, -3.5896, -4.1795, -3.8022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3105, device='cuda:0', dtype=torch.float64)
tensor([-2.8979, -3.5126, -3.5806, -4.3982, -3.8583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5856, device='cuda:0', dtype=torch.float64)
tensor([-2.9075, -3.6709, -3.5862, -4.5598, -4.2822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4572, device='cuda:0', dtype=torch.float64)
tensor([-2.8971, -3.8052, -3.5776, -4.5722, -4.6198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5405, device='cuda:0', dtype=torch.float64)
tensor([-2.8624, -3.7259, -3.5686, -4.5034, -4.0529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1419, device='cuda:0', dtype=torch.float64)
tensor([-2.8058, -3.5808, -3.5830, -4.3516, -3.8594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0475, device='cuda:0', dtype=torch.float64)
tensor([-2.7751, -3.5645, -3.6292, -4.2376, -3.8839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1745, device='cuda:0', dtype=torch.float64)
tensor([-2.7535, -3.5639, -3.7005, -4.1402, -3.9607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0922, device='cuda:0', dtype=torch.float64)
tensor([-2.7572, -3.5617, -3.7678, -4.0412, -4.0233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9584, device='cuda:0', dtype=torch.float64)
tensor([-2.7800, -3.5366, -3.7883, -3.9762, -4.0544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1753, device='cuda:0', dtype=torch.float64)
tensor([-2.8323, -3.5346, -3.7346, -3.9093, -4.1239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9674, device='cuda:0', dtype=torch.float64)
tensor([-2.8668, -3.5470, -3.6570, -3.8398, -4.1497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1044, device='cuda:0', dtype=torch.float64)
tensor([-2.8929, -3.5726, -3.5625, -3.7552, -4.1168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2563, device='cuda:0', dtype=torch.float64)
tensor([-2.9131, -3.6216, -3.4846, -3.6900, -4.0351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3175, device='cuda:0', dtype=torch.float64)
tensor([-2.9368, -3.6890, -3.4285, -3.6389, -3.9428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4044, device='cuda:0', dtype=torch.float64)
tensor([-3.0141, -3.8122, -3.4127, -3.6473, -3.8949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2069, device='cuda:0', dtype=torch.float64)
tensor([-3.1624, -3.9006, -3.4455, -3.6909, -3.9217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2235, device='cuda:0', dtype=torch.float64)
tensor([-3.2289, -3.9354, -3.5610, -3.7082, -3.9441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2679, device='cuda:0', dtype=torch.float64)
tensor([-3.1332, -3.8788, -3.5960, -3.7556, -3.9643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3305, device='cuda:0', dtype=torch.float64)
tensor([-3.0892, -3.7965, -3.5929, -3.8242, -3.9855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0233, device='cuda:0', dtype=torch.float64)
tensor([-3.0366, -3.7097, -3.6152, -3.8624, -3.9933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1622, device='cuda:0', dtype=torch.float64)
tensor([-3.0467, -3.6687, -3.6646, -3.9290, -4.0220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9846, device='cuda:0', dtype=torch.float64)
tensor([-3.0718, -3.6497, -3.7385, -3.9382, -4.0467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9274, device='cuda:0', dtype=torch.float64)
tensor([-3.0587, -3.6262, -3.8107, -3.9057, -4.0413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1182, device='cuda:0', dtype=torch.float64)
tensor([-3.0303, -3.6356, -3.8553, -3.8914, -4.0189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0450, device='cuda:0', dtype=torch.float64)
tensor([-2.9942, -3.6744, -3.8869, -3.8669, -4.0099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1472, device='cuda:0', dtype=torch.float64)
tensor([-2.9732, -3.7401, -3.9144, -3.8512, -3.9952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2832, device='cuda:0', dtype=torch.float64)
tensor([-2.9875, -3.8718, -3.9573, -3.9140, -4.0415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1793, device='cuda:0', dtype=torch.float64)
tensor([-3.0204, -4.0137, -4.0333, -4.0039, -4.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1174, device='cuda:0', dtype=torch.float64)
tensor([-3.0661, -4.0981, -4.0670, -4.1245, -4.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0819, device='cuda:0', dtype=torch.float64)
tensor([-3.1401, -4.1614, -4.1881, -4.2348, -4.3138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0015, device='cuda:0', dtype=torch.float64)
tensor([-3.2394, -4.1516, -4.2593, -4.2465, -4.2699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1750, device='cuda:0', dtype=torch.float64)
tensor([-3.3579, -4.1248, -4.2202, -4.2235, -4.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9619, device='cuda:0', dtype=torch.float64)
tensor([-3.4227, -4.0516, -4.0491, -4.1922, -4.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2764, device='cuda:0', dtype=torch.float64)
tensor([-3.5229, -4.0031, -4.0475, -4.1569, -4.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2840, device='cuda:0', dtype=torch.float64)
tensor([-3.5111, -3.9414, -4.0577, -4.2141, -4.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4113, device='cuda:0', dtype=torch.float64)
tensor([-3.5068, -3.8926, -4.1087, -4.3060, -4.1918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1881, device='cuda:0', dtype=torch.float64)
tensor([-3.4650, -3.8435, -4.0948, -4.4604, -4.2573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3324, device='cuda:0', dtype=torch.float64)
tensor([-3.3491, -3.8084, -4.0749, -4.6928, -4.3111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2608, device='cuda:0', dtype=torch.float64)
tensor([-3.2561, -3.7703, -4.1656, -4.9723, -4.3367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9528, device='cuda:0', dtype=torch.float64)
tensor([-3.1897, -3.7446, -4.2350, -5.2743, -4.3357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0891, device='cuda:0', dtype=torch.float64)
tensor([-3.1239, -3.7296, -4.1760, -5.3386, -4.2975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0925, device='cuda:0', dtype=torch.float64)
tensor([-3.0799, -3.7267, -4.0917, -5.2786, -4.2258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0955, device='cuda:0', dtype=torch.float64)
tensor([-3.0974, -3.7312, -4.0780, -5.0825, -4.2237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9660, device='cuda:0', dtype=torch.float64)
tensor([-3.1709, -3.7552, -4.0886, -4.8810, -4.2939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9819, device='cuda:0', dtype=torch.float64)
tensor([-3.2770, -3.7946, -4.0822, -4.6768, -4.3877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9216, device='cuda:0', dtype=torch.float64)
tensor([-3.4045, -3.8528, -4.0516, -4.4771, -4.4980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0313, device='cuda:0', dtype=torch.float64)
tensor([-3.5338, -3.9154, -4.0134, -4.3946, -4.5623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9892, device='cuda:0', dtype=torch.float64)
tensor([-3.6477, -3.9513, -4.0376, -4.3675, -4.6026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9656, device='cuda:0', dtype=torch.float64)
tensor([-3.7332, -3.9767, -4.0797, -4.3921, -4.6686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0445, device='cuda:0', dtype=torch.float64)
tensor([-3.8200, -3.9999, -4.1225, -4.3947, -4.7259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0027, device='cuda:0', dtype=torch.float64)
tensor([-3.8934, -4.0364, -4.1716, -4.3776, -4.7591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9550, device='cuda:0', dtype=torch.float64)
tensor([-3.8942, -4.0440, -4.2509, -4.3911, -4.8458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9715, device='cuda:0', dtype=torch.float64)
tensor([-3.8852, -4.0551, -4.3316, -4.4111, -4.9589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0153, device='cuda:0', dtype=torch.float64)
tensor([-3.8554, -4.0310, -4.3751, -4.4646, -5.0397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0164, device='cuda:0', dtype=torch.float64)
tensor([-3.8323, -4.0052, -4.4105, -4.4798, -5.0157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0578, device='cuda:0', dtype=torch.float64)
tensor([-3.8411, -3.9577, -4.4307, -4.4722, -5.0140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9234, device='cuda:0', dtype=torch.float64)
tensor([-3.8383, -3.9312, -4.4473, -4.5010, -4.9901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1396, device='cuda:0', dtype=torch.float64)
tensor([-3.8939, -3.9208, -4.4417, -4.5622, -5.0568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8976, device='cuda:0', dtype=torch.float64)
tensor([-3.9723, -3.9371, -4.4395, -4.7001, -5.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1457, device='cuda:0', dtype=torch.float64)
tensor([-4.0304, -3.9718, -4.4225, -4.9255, -5.2667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1620, device='cuda:0', dtype=torch.float64)
tensor([-4.1009, -4.0115, -4.4510, -5.2161, -5.4223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1129, device='cuda:0', dtype=torch.float64)
tensor([-4.1171, -4.0481, -4.4514, -5.4714, -5.5555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0137, device='cuda:0', dtype=torch.float64)
tensor([-4.0898, -4.0872, -4.4488, -5.5895, -5.5991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8971, device='cuda:0', dtype=torch.float64)
tensor([-4.0731, -4.1693, -4.4488, -5.7866, -5.5937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8658, device='cuda:0', dtype=torch.float64)
tensor([-4.1083, -4.2782, -4.4819, -5.9525, -5.6434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9035, device='cuda:0', dtype=torch.float64)
tensor([-4.1734, -4.5030, -4.5268, -6.0758, -5.7988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0841, device='cuda:0', dtype=torch.float64)
tensor([-4.2147, -4.7437, -4.6018, -6.4367, -5.9852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9384, device='cuda:0', dtype=torch.float64)
tensor([-4.3001, -4.9235, -4.7087, -6.9353, -6.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8254, device='cuda:0', dtype=torch.float64)
tensor([-4.4662, -5.0261, -4.8339, -7.3274, -6.4964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8813, device='cuda:0', dtype=torch.float64)
tensor([-4.8732, -5.1745, -4.9579, -7.6584, -6.8165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9823, device='cuda:0', dtype=torch.float64)
tensor([-5.3233, -5.3583, -5.1056, -8.1888, -7.2391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0488, device='cuda:0', dtype=torch.float64)
tensor([-5.4530, -5.3007, -5.2466, -8.4801, -7.5506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2187, device='cuda:0', dtype=torch.float64)
tensor([-5.2619, -5.2490, -5.3184, -8.0980, -7.6660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9208, device='cuda:0', dtype=torch.float64)
tensor([-5.0155, -5.3205, -5.3595, -7.6851, -7.6754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0055, device='cuda:0', dtype=torch.float64)
tensor([-4.9960, -5.5767, -5.4125, -7.3308, -7.8774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3320, device='cuda:0', dtype=torch.float64)
tensor([-4.9914, -5.5323, -5.5716, -7.2087, -7.9297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9996, device='cuda:0', dtype=torch.float64)
tensor([-5.1330, -5.5361, -5.9340, -7.3481, -7.9319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9480, device='cuda:0', dtype=torch.float64)
tensor([-5.3621, -5.6692, -6.7235, -7.5373, -8.0257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-5.7037, -5.9363, -8.5486, -8.2069, -8.4357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0238, device='cuda:0', dtype=torch.float64)
tensor([ -6.3519,  -6.6706, -10.8640,  -8.9945,  -9.0499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1723, device='cuda:0', dtype=torch.float64)
tensor([ -7.2963,  -7.9543, -13.7928, -10.1585, -10.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0277, device='cuda:0', dtype=torch.float64)
tensor([ -8.3388, -10.1821, -16.7432, -11.1225, -10.9751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0767, device='cuda:0', dtype=torch.float64)
tensor([ -9.5642, -12.7653, -20.0453, -12.4688, -12.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9779, device='cuda:0', dtype=torch.float64)
tensor([-10.7691, -16.0235, -23.1956, -13.7922, -13.3947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4026, device='cuda:0', dtype=torch.float64)
tensor([-11.7979, -20.2752, -26.1692, -15.0011, -14.9773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0522, device='cuda:0', dtype=torch.float64)
tensor([-12.6966, -23.7483, -28.8579, -15.7199, -16.4772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1467, device='cuda:0', dtype=torch.float64)
tensor([-13.8162, -27.6883, -31.5806, -17.1638, -18.6162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7796, device='cuda:0', dtype=torch.float64)
tensor([-14.9564, -31.6740, -34.3430, -19.4519, -21.1993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-15.7605, -35.0075, -36.1406, -21.2368, -23.0561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1302, device='cuda:0', dtype=torch.float64)
tensor([-16.4357, -37.2962, -37.0208, -22.1303, -24.6416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1170, device='cuda:0', dtype=torch.float64)
tensor([-18.0818, -41.1116, -38.2234, -24.1209, -26.3164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7464, device='cuda:0', dtype=torch.float64)
tensor([-19.9677, -45.2222, -39.4729, -26.4786, -28.2085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2123, device='cuda:0', dtype=torch.float64)
tensor([-21.9736, -49.3915, -41.3464, -29.0717, -29.7426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9196, device='cuda:0', dtype=torch.float64)
tensor([-24.1565, -53.6798, -42.6769, -31.8144, -31.2750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9406, device='cuda:0', dtype=torch.float64)
tensor([-26.5886, -57.6057, -43.9061, -34.5571, -33.4628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1577, device='cuda:0', dtype=torch.float64)
tensor([-28.9567, -63.8584, -45.0730, -38.2442, -35.6328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2367, device='cuda:0', dtype=torch.float64)
tensor([-31.2540, -71.0350, -46.4371, -41.8624, -37.7718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9636, device='cuda:0', dtype=torch.float64)
tensor([-33.3927, -77.7468, -47.4975, -45.2296, -40.1006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1108, device='cuda:0', dtype=torch.float64)
tensor([-35.3723, -82.7893, -48.6598, -48.1213, -42.8796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-37.5603, -87.7514, -49.5500, -50.8957, -46.1193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8698, device='cuda:0', dtype=torch.float64)
tensor([-39.2875, -91.8226, -50.5091, -53.4651, -49.2030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8949, device='cuda:0', dtype=torch.float64)
tensor([-40.9439, -95.3146, -50.7014, -56.0326, -51.8577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9521, device='cuda:0', dtype=torch.float64)
tensor([-42.7587, -96.7395, -50.8717, -57.6673, -54.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0864, device='cuda:0', dtype=torch.float64)
tensor([-43.5178, -96.0168, -50.4258, -57.7866, -55.1028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1310, device='cuda:0', dtype=torch.float64)
tensor([-44.1312, -95.5034, -50.8929, -58.1188, -56.6223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0869, device='cuda:0', dtype=torch.float64)
tensor([-43.8061, -94.8525, -50.8549, -57.7394, -57.4252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1439, device='cuda:0', dtype=torch.float64)
tensor([-43.3377, -94.6416, -50.2794, -56.5889, -57.8072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9800, device='cuda:0', dtype=torch.float64)
tensor([-43.2604, -95.3175, -49.6846, -56.0880, -59.0747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1161, device='cuda:0', dtype=torch.float64)
tensor([-43.2763, -95.0406, -48.1511, -55.7322, -61.6895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2134, device='cuda:0', dtype=torch.float64)
tensor([-44.0539, -95.3912, -47.2982, -56.9224, -64.8998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9996, device='cuda:0', dtype=torch.float64)
tensor([-43.9897, -94.6830, -45.9275, -57.0047, -66.5020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9529, device='cuda:0', dtype=torch.float64)
tensor([-44.0528, -93.8150, -45.0358, -57.4553, -67.0167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1010, device='cuda:0', dtype=torch.float64)
tensor([-43.8596, -92.8396, -44.1214, -58.0339, -66.9584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2307, device='cuda:0', dtype=torch.float64)
tensor([-43.0328, -90.0040, -42.8222, -57.7610, -66.1273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1836, device='cuda:0', dtype=torch.float64)
tensor([-42.3263, -87.6599, -41.7949, -58.3094, -65.2085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0857, device='cuda:0', dtype=torch.float64)
tensor([-41.0903, -84.7425, -40.9145, -58.4839, -62.9449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9675, device='cuda:0', dtype=torch.float64)
tensor([-39.4183, -81.6414, -40.0552, -58.5552, -59.8917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0934, device='cuda:0', dtype=torch.float64)
tensor([-37.4857, -76.9078, -39.0798, -56.7922, -55.3976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8664, device='cuda:0', dtype=torch.float64)
tensor([-36.1658, -73.0225, -38.4910, -55.8937, -52.0936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1632, device='cuda:0', dtype=torch.float64)
tensor([-35.0131, -69.4117, -37.4535, -54.9879, -49.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0194, device='cuda:0', dtype=torch.float64)
tensor([-34.1130, -66.8316, -36.6695, -53.9676, -46.9229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0580, device='cuda:0', dtype=torch.float64)
tensor([-33.1218, -63.6486, -36.3148, -52.1056, -44.4924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0991, device='cuda:0', dtype=torch.float64)
tensor([-32.2776, -61.7418, -35.3073, -50.8260, -42.6574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7909, device='cuda:0', dtype=torch.float64)
tensor([-31.8275, -61.1925, -34.8124, -50.5856, -42.0115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4066, device='cuda:0', dtype=torch.float64)
tensor([-31.0551, -59.7598, -33.5135, -50.5662, -41.2646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1000, device='cuda:0', dtype=torch.float64)
tensor([-30.7465, -58.3663, -32.5363, -50.6655, -40.9189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2119, device='cuda:0', dtype=torch.float64)
tensor([-31.4640, -57.9839, -31.6710, -52.5342, -41.0140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1883, device='cuda:0', dtype=torch.float64)
tensor([-31.6419, -56.5078, -31.3617, -53.5972, -40.9438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9584, device='cuda:0', dtype=torch.float64)
tensor([-31.7855, -55.2029, -30.8130, -53.0739, -40.2057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1909, device='cuda:0', dtype=torch.float64)
tensor([-31.8858, -53.8266, -29.8814, -52.0865, -39.0366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3365, device='cuda:0', dtype=torch.float64)
tensor([-32.6294, -54.2355, -29.2753, -52.4376, -38.6109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2113, device='cuda:0', dtype=torch.float64)
tensor([-33.9446, -55.8241, -28.9256, -53.4164, -39.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0386, device='cuda:0', dtype=torch.float64)
tensor([-35.4802, -56.5218, -28.7277, -52.7681, -39.2293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9873, device='cuda:0', dtype=torch.float64)
tensor([-37.0665, -57.7341, -28.1899, -52.4984, -39.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1513, device='cuda:0', dtype=torch.float64)
tensor([-39.0451, -59.6099, -27.9809, -53.2723, -40.8150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0007, device='cuda:0', dtype=torch.float64)
tensor([-40.7984, -62.1708, -27.9300, -53.8885, -42.8599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1740, device='cuda:0', dtype=torch.float64)
tensor([-42.8022, -65.5868, -28.2315, -55.4512, -45.0068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1740, device='cuda:0', dtype=torch.float64)
tensor([-44.9459, -70.4872, -28.3074, -57.5198, -47.4924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2794, device='cuda:0', dtype=torch.float64)
tensor([-46.0592, -73.7115, -28.4156, -58.7414, -48.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0143, device='cuda:0', dtype=torch.float64)
tensor([-47.3503, -75.3641, -27.9934, -59.3152, -49.3016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0297, device='cuda:0', dtype=torch.float64)
tensor([-47.8928, -74.6877, -26.9810, -59.0591, -49.4017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1576, device='cuda:0', dtype=torch.float64)
tensor([-48.0796, -73.6114, -26.0493, -58.9961, -49.2760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1453, device='cuda:0', dtype=torch.float64)
tensor([-48.2947, -72.2688, -25.1586, -58.4766, -48.7741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1211, device='cuda:0', dtype=torch.float64)
tensor([-48.1871, -69.9344, -24.9983, -58.1048, -48.4413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1139, device='cuda:0', dtype=torch.float64)
tensor([-48.2189, -68.0495, -25.1312, -57.9333, -48.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1031, device='cuda:0', dtype=torch.float64)
tensor([-48.5859, -65.7793, -24.9825, -57.2679, -48.0168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2674, device='cuda:0', dtype=torch.float64)
tensor([-48.6595, -63.1053, -24.8527, -56.1963, -48.0151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8734, device='cuda:0', dtype=torch.float64)
tensor([-48.6419, -61.3530, -24.9646, -55.8737, -48.6641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9267, device='cuda:0', dtype=torch.float64)
tensor([-47.7129, -60.8882, -24.8251, -55.9886, -48.6454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0763, device='cuda:0', dtype=torch.float64)
tensor([-46.8130, -61.0207, -25.6633, -55.9768, -48.6816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0305, device='cuda:0', dtype=torch.float64)
tensor([-46.1420, -60.5104, -26.1731, -55.4922, -48.4803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8212, device='cuda:0', dtype=torch.float64)
tensor([-46.1253, -60.5330, -27.2526, -55.2292, -48.8730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0600, device='cuda:0', dtype=torch.float64)
tensor([-45.4890, -60.3954, -27.8962, -54.3232, -48.4231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3472, device='cuda:0', dtype=torch.float64)
tensor([-44.4941, -58.6678, -28.3505, -52.1832, -46.9487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2067, device='cuda:0', dtype=torch.float64)
tensor([-43.5095, -55.5308, -27.8096, -49.6546, -45.6615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9518, device='cuda:0', dtype=torch.float64)
tensor([-42.5901, -52.4661, -27.4998, -47.1544, -44.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7357, device='cuda:0', dtype=torch.float64)
tensor([-42.4038, -49.7566, -27.6246, -44.9551, -43.7412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1963, device='cuda:0', dtype=torch.float64)
tensor([-41.6189, -46.6220, -26.4870, -42.5769, -42.6024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1448, device='cuda:0', dtype=torch.float64)
tensor([-41.4950, -45.3806, -25.6655, -41.7833, -42.8406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8333, device='cuda:0', dtype=torch.float64)
tensor([-41.5454, -44.2283, -24.9361, -40.3462, -42.6748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2252, device='cuda:0', dtype=torch.float64)
tensor([-41.4393, -41.9453, -24.8513, -39.5966, -42.4451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0585, device='cuda:0', dtype=torch.float64)
tensor([-41.6242, -39.3996, -24.7489, -39.0128, -42.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8516, device='cuda:0', dtype=torch.float64)
tensor([-41.7157, -36.3581, -23.8792, -37.5735, -41.9657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8818, device='cuda:0', dtype=torch.float64)
tensor([-41.4131, -33.6699, -23.1684, -36.4783, -41.9772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4085, device='cuda:0', dtype=torch.float64)
tensor([-41.5486, -32.3024, -22.5344, -35.3766, -41.9082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3522, device='cuda:0', dtype=torch.float64)
tensor([-40.6606, -31.4208, -21.6298, -33.5392, -41.9147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2913, device='cuda:0', dtype=torch.float64)
tensor([-40.1687, -31.3772, -20.6427, -32.5367, -41.3944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9911, device='cuda:0', dtype=torch.float64)
tensor([-39.6525, -32.4895, -19.1280, -31.5640, -40.8841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1890, device='cuda:0', dtype=torch.float64)
tensor([-40.1540, -33.8066, -17.2578, -31.2963, -40.4986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2189, device='cuda:0', dtype=torch.float64)
tensor([-41.3702, -35.4966, -16.0602, -32.7213, -40.8974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0678, device='cuda:0', dtype=torch.float64)
tensor([-42.2067, -36.8718, -16.1986, -33.9195, -41.3276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9066, device='cuda:0', dtype=torch.float64)
tensor([-42.2319, -38.8704, -16.3397, -35.0103, -42.5039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9616, device='cuda:0', dtype=torch.float64)
tensor([-42.2828, -40.6614, -16.4070, -36.0385, -43.5029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9180, device='cuda:0', dtype=torch.float64)
tensor([-42.3088, -41.7532, -16.4823, -37.2164, -45.5385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8253, device='cuda:0', dtype=torch.float64)
tensor([-42.0572, -43.2921, -16.5256, -38.5806, -48.1960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1787, device='cuda:0', dtype=torch.float64)
tensor([-41.1908, -44.1391, -15.6045, -39.8937, -50.0847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9956, device='cuda:0', dtype=torch.float64)
tensor([-40.6915, -45.1694, -14.6264, -41.7145, -51.6118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0169, device='cuda:0', dtype=torch.float64)
tensor([-40.1460, -45.1403, -14.1942, -43.0937, -52.6216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8346, device='cuda:0', dtype=torch.float64)
tensor([-39.9271, -44.8117, -14.2348, -44.6089, -52.4920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0009, device='cuda:0', dtype=torch.float64)
tensor([-38.9310, -44.0573, -13.6769, -45.5900, -51.9727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0961, device='cuda:0', dtype=torch.float64)
tensor([-38.9995, -43.6802, -13.3052, -46.9686, -52.6876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8800, device='cuda:0', dtype=torch.float64)
tensor([-39.0550, -44.0782, -13.2972, -49.2858, -52.5261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0028, device='cuda:0', dtype=torch.float64)
tensor([-40.5989, -46.1439, -13.8771, -54.0167, -53.8104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8179, device='cuda:0', dtype=torch.float64)
tensor([-43.4296, -48.8244, -14.4541, -59.7699, -56.7730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9318, device='cuda:0', dtype=torch.float64)
tensor([-45.8398, -50.3188, -14.7689, -64.1396, -58.6338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8108, device='cuda:0', dtype=torch.float64)
tensor([-47.5568, -51.1935, -14.7532, -67.5429, -59.8587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9313, device='cuda:0', dtype=torch.float64)
tensor([-50.5487, -53.2922, -15.1658, -73.0563, -62.2177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0294, device='cuda:0', dtype=torch.float64)
tensor([-54.3150, -53.6979, -15.5937, -77.7194, -65.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0379, device='cuda:0', dtype=torch.float64)
tensor([-59.0562, -54.9106, -16.4092, -82.5325, -68.6303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9246, device='cuda:0', dtype=torch.float64)
tensor([-64.8404, -55.9711, -17.7401, -87.2174, -72.4545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2358, device='cuda:0', dtype=torch.float64)
tensor([-69.0306, -57.5499, -19.4182, -92.0878, -74.7370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9367, device='cuda:0', dtype=torch.float64)
tensor([-72.3205, -57.6008, -21.0556, -95.3099, -76.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9950, device='cuda:0', dtype=torch.float64)
tensor([-76.1291, -60.0367, -23.0082, -99.4325, -78.3061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9380, device='cuda:0', dtype=torch.float64)
tensor([ -78.2621,  -61.3349,  -24.4042, -101.8172,  -79.0300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9311, device='cuda:0', dtype=torch.float64)
tensor([ -79.5512,  -63.1981,  -25.1735, -103.2587,  -78.8940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8878, device='cuda:0', dtype=torch.float64)
tensor([ -80.5485,  -63.9572,  -26.1744, -104.1141,  -78.9317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0636, device='cuda:0', dtype=torch.float64)
tensor([ -80.0810,  -63.8150,  -26.4100, -104.0731,  -77.4129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9004, device='cuda:0', dtype=torch.float64)
tensor([ -80.5874,  -64.3419,  -27.1663, -105.9975,  -77.5901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9823, device='cuda:0', dtype=torch.float64)
tensor([ -81.3332,  -63.5494,  -27.9892, -106.0476,  -78.0650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9186, device='cuda:0', dtype=torch.float64)
tensor([ -80.6794,  -61.9146,  -28.1651, -105.5269,  -77.6134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9256, device='cuda:0', dtype=torch.float64)
tensor([ -80.3122,  -60.5011,  -27.7016, -104.0480,  -76.2132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([ -80.1895,  -59.4870,  -27.4451, -103.3816,  -75.6604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9644, device='cuda:0', dtype=torch.float64)
tensor([ -79.4257,  -58.1789,  -26.9843, -100.8316,  -73.9730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9134, device='cuda:0', dtype=torch.float64)
tensor([-77.0043, -55.6359, -26.1101, -96.9690, -71.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0150, device='cuda:0', dtype=torch.float64)
tensor([-74.0708, -53.9331, -25.4598, -92.8230, -68.8210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0473, device='cuda:0', dtype=torch.float64)
tensor([-69.9328, -51.9987, -25.0880, -88.1093, -65.7989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0410, device='cuda:0', dtype=torch.float64)
tensor([-65.3754, -50.3967, -24.5944, -84.1695, -62.8729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8434, device='cuda:0', dtype=torch.float64)
tensor([-62.3254, -49.7351, -24.6215, -82.5892, -61.3906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9889, device='cuda:0', dtype=torch.float64)
tensor([-58.9637, -49.0857, -24.7756, -80.0234, -59.7913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0024, device='cuda:0', dtype=torch.float64)
tensor([-56.1391, -48.9372, -24.6900, -78.6387, -58.7664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7442, device='cuda:0', dtype=torch.float64)
tensor([-53.9299, -50.0160, -24.9368, -78.3931, -58.4902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8158, device='cuda:0', dtype=torch.float64)
tensor([-51.0511, -51.2116, -25.2756, -78.1453, -58.0373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8239, device='cuda:0', dtype=torch.float64)
tensor([-49.7336, -52.7800, -25.6343, -78.1513, -58.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8871, device='cuda:0', dtype=torch.float64)
tensor([-47.8965, -54.3500, -26.0487, -76.3843, -57.6019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9001, device='cuda:0', dtype=torch.float64)
tensor([-46.0383, -55.9523, -26.1222, -74.0104, -56.3972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8535, device='cuda:0', dtype=torch.float64)
tensor([-44.1458, -58.3742, -26.3437, -71.7443, -54.9540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8627, device='cuda:0', dtype=torch.float64)
tensor([-42.4243, -61.0237, -26.6861, -69.7257, -53.6348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8064, device='cuda:0', dtype=torch.float64)
tensor([-40.6617, -62.9277, -27.1586, -66.5437, -52.0409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0679, device='cuda:0', dtype=torch.float64)
tensor([-38.9272, -65.2261, -28.1253, -64.0577, -50.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8123, device='cuda:0', dtype=torch.float64)
tensor([-37.9030, -67.3286, -29.3479, -62.5560, -49.1704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9540, device='cuda:0', dtype=torch.float64)
tensor([-37.8069, -70.2014, -30.7298, -62.6193, -48.6398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8078, device='cuda:0', dtype=torch.float64)
tensor([-38.6162, -72.7184, -31.7725, -62.8836, -48.7579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9987, device='cuda:0', dtype=torch.float64)
tensor([-39.3319, -73.4900, -32.1898, -62.4500, -49.2222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9607, device='cuda:0', dtype=torch.float64)
tensor([-40.2783, -74.5855, -32.8689, -62.6584, -49.5220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9540, device='cuda:0', dtype=torch.float64)
tensor([-41.0477, -75.0192, -33.4067, -63.3755, -49.9998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9466, device='cuda:0', dtype=torch.float64)
tensor([-42.0095, -75.8844, -34.0690, -63.4667, -50.1179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8496, device='cuda:0', dtype=torch.float64)
tensor([-43.3063, -76.9839, -34.8423, -64.2140, -50.0678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7524, device='cuda:0', dtype=torch.float64)
tensor([-44.8024, -77.9545, -36.0650, -65.1579, -50.7251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9631, device='cuda:0', dtype=torch.float64)
tensor([-46.8145, -79.0256, -37.3506, -67.3086, -52.0741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9235, device='cuda:0', dtype=torch.float64)
tensor([-48.2248, -80.1110, -38.2226, -68.6665, -52.7534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9510, device='cuda:0', dtype=torch.float64)
tensor([-48.3703, -80.0131, -37.3890, -69.1148, -53.4233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8402, device='cuda:0', dtype=torch.float64)
tensor([-48.2666, -79.4773, -36.0096, -69.3384, -54.3580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9802, device='cuda:0', dtype=torch.float64)
tensor([-48.0361, -78.8236, -34.3242, -68.5532, -55.4224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7986, device='cuda:0', dtype=torch.float64)
tensor([-48.1634, -77.9632, -33.0324, -67.9636, -56.0224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8392, device='cuda:0', dtype=torch.float64)
tensor([-48.2434, -77.3718, -32.0508, -67.4753, -56.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9690, device='cuda:0', dtype=torch.float64)
tensor([-48.8790, -78.0306, -32.4340, -67.5213, -56.3815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9782, device='cuda:0', dtype=torch.float64)
tensor([-50.0875, -78.7484, -32.8850, -67.2229, -56.9571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9363, device='cuda:0', dtype=torch.float64)
tensor([-51.1307, -78.7800, -33.2312, -66.9499, -57.5799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9671, device='cuda:0', dtype=torch.float64)
tensor([-52.5706, -78.4766, -33.7793, -67.2070, -58.2327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8912, device='cuda:0', dtype=torch.float64)
tensor([-54.8732, -79.1221, -35.4057, -68.0246, -59.1438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0390, device='cuda:0', dtype=torch.float64)
tensor([-56.9951, -78.8331, -37.8671, -68.4523, -60.5852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0024, device='cuda:0', dtype=torch.float64)
tensor([-58.6329, -78.8592, -39.8452, -69.5083, -61.9368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8579, device='cuda:0', dtype=torch.float64)
tensor([-59.5943, -78.5929, -42.0613, -70.3052, -63.0184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0422, device='cuda:0', dtype=torch.float64)
tensor([-61.4872, -78.4827, -43.8245, -72.4985, -64.2296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0359, device='cuda:0', dtype=torch.float64)
tensor([-62.8072, -78.9596, -45.7038, -73.7851, -65.3194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7526, device='cuda:0', dtype=torch.float64)
tensor([-64.8081, -79.6032, -48.6400, -75.3589, -66.4898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9965, device='cuda:0', dtype=torch.float64)
tensor([-67.6563, -80.5377, -51.2736, -77.2391, -68.0433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9232, device='cuda:0', dtype=torch.float64)
tensor([-70.9345, -81.6830, -52.9450, -79.6558, -69.8475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9088, device='cuda:0', dtype=torch.float64)
tensor([-73.0897, -82.0833, -53.9992, -81.3373, -70.9963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9974, device='cuda:0', dtype=torch.float64)
tensor([-74.5513, -82.5166, -53.1128, -83.3749, -71.8490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2475, device='cuda:0', dtype=torch.float64)
tensor([-73.7547, -81.9832, -50.9887, -83.3621, -71.4045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9906, device='cuda:0', dtype=torch.float64)
tensor([-71.7066, -80.3569, -48.6331, -82.1596, -70.4359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8716, device='cuda:0', dtype=torch.float64)
tensor([-69.5276, -78.5527, -46.0163, -80.8428, -69.6309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9529, device='cuda:0', dtype=torch.float64)
tensor([-68.6439, -78.4439, -44.3776, -80.2767, -69.1359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8766, device='cuda:0', dtype=torch.float64)
tensor([-68.1908, -78.2922, -44.0412, -79.8809, -68.4110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8963, device='cuda:0', dtype=torch.float64)
tensor([-67.8405, -77.3453, -43.2812, -80.1843, -68.1337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7930, device='cuda:0', dtype=torch.float64)
tensor([-67.9649, -77.6577, -43.6100, -80.7943, -68.2093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0790, device='cuda:0', dtype=torch.float64)
tensor([-68.7266, -78.0123, -44.2947, -81.6685, -68.6560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1007, device='cuda:0', dtype=torch.float64)
tensor([-70.2419, -79.5857, -46.5300, -81.7705, -68.8128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8197, device='cuda:0', dtype=torch.float64)
tensor([-71.0269, -80.4271, -48.0918, -81.4213, -68.5797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9798, device='cuda:0', dtype=torch.float64)
tensor([-71.2001, -80.2817, -49.4670, -80.6613, -68.4560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8460, device='cuda:0', dtype=torch.float64)
tensor([-70.8595, -79.7213, -51.4025, -79.3238, -68.0370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9253, device='cuda:0', dtype=torch.float64)
tensor([-70.8940, -78.1607, -53.7475, -78.1857, -67.4967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8930, device='cuda:0', dtype=torch.float64)
tensor([-70.8186, -76.9756, -55.1333, -77.9097, -67.3477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0152, device='cuda:0', dtype=torch.float64)
tensor([-70.0129, -75.5084, -54.9698, -77.6562, -67.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9219, device='cuda:0', dtype=torch.float64)
tensor([-69.1717, -74.2268, -54.5865, -77.2666, -66.9470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0382, device='cuda:0', dtype=torch.float64)
tensor([-69.2361, -72.9679, -55.1333, -77.3639, -66.7850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8959, device='cuda:0', dtype=torch.float64)
tensor([-69.7448, -71.8162, -54.9506, -77.2483, -66.4174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8633, device='cuda:0', dtype=torch.float64)
tensor([-70.2942, -70.7533, -55.1708, -77.9868, -66.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9731, device='cuda:0', dtype=torch.float64)
tensor([-71.2650, -70.1534, -56.4039, -79.6171, -66.4288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9604, device='cuda:0', dtype=torch.float64)
tensor([-72.4512, -70.4300, -57.5924, -81.4248, -65.8884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0380, device='cuda:0', dtype=torch.float64)
tensor([-73.3373, -70.8026, -59.6130, -83.0834, -65.4984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7848, device='cuda:0', dtype=torch.float64)
tensor([-74.6892, -71.5026, -61.7375, -84.2580, -64.4501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0111, device='cuda:0', dtype=torch.float64)
tensor([-75.8823, -72.2745, -64.1524, -84.7713, -63.5506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9499, device='cuda:0', dtype=torch.float64)
tensor([-77.3164, -73.0132, -67.0878, -85.9638, -62.4152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8711, device='cuda:0', dtype=torch.float64)
tensor([-77.9347, -73.5253, -69.3541, -87.2872, -61.7607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9439, device='cuda:0', dtype=torch.float64)
tensor([-78.0582, -73.3741, -71.5932, -88.8897, -61.2897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0831, device='cuda:0', dtype=torch.float64)
tensor([-77.8244, -72.5970, -71.6847, -90.8894, -60.9960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0008, device='cuda:0', dtype=torch.float64)
tensor([-77.8091, -72.3547, -71.9932, -92.8961, -61.1020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0041, device='cuda:0', dtype=torch.float64)
tensor([-77.0686, -71.4871, -72.0024, -94.4277, -61.8955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9666, device='cuda:0', dtype=torch.float64)
tensor([-76.6238, -69.8707, -71.3472, -95.8864, -63.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9884, device='cuda:0', dtype=torch.float64)
tensor([-76.6669, -68.0542, -70.0460, -97.5389, -64.7776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2225, device='cuda:0', dtype=torch.float64)
tensor([-77.8085, -66.6122, -68.9318, -98.8337, -66.3369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0888, device='cuda:0', dtype=torch.float64)
tensor([-78.6076, -64.7229, -67.0171, -99.1913, -67.7306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0863, device='cuda:0', dtype=torch.float64)
tensor([-79.9991, -62.9883, -64.2074, -99.5342, -69.3921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9487, device='cuda:0', dtype=torch.float64)
tensor([-81.5748, -61.5619, -62.1941, -99.6583, -70.8180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0304, device='cuda:0', dtype=torch.float64)
tensor([-82.9251, -59.1336, -60.1432, -98.9832, -71.7454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9449, device='cuda:0', dtype=torch.float64)
tensor([-83.6848, -57.8865, -58.7862, -98.3579, -72.8098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8547, device='cuda:0', dtype=torch.float64)
tensor([-84.4850, -58.0534, -58.4126, -97.9899, -73.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0053, device='cuda:0', dtype=torch.float64)
tensor([-84.6531, -58.4006, -58.6056, -97.6251, -73.1716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9970, device='cuda:0', dtype=torch.float64)
tensor([-85.5331, -59.5209, -59.6535, -97.4517, -72.7215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8623, device='cuda:0', dtype=torch.float64)
tensor([-85.7582, -60.2445, -60.2217, -96.8888, -72.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9129, device='cuda:0', dtype=torch.float64)
tensor([-86.7517, -60.8883, -60.7771, -97.2847, -72.9220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9119, device='cuda:0', dtype=torch.float64)
tensor([-88.4311, -61.9231, -61.4579, -98.1458, -73.4763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8827, device='cuda:0', dtype=torch.float64)
tensor([-89.2509, -62.3111, -62.2049, -98.9504, -74.3419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8781, device='cuda:0', dtype=torch.float64)
tensor([ -89.5872,  -62.3624,  -63.5933, -100.3397,  -75.2534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8559, device='cuda:0', dtype=torch.float64)
tensor([ -91.2113,  -63.0642,  -66.7568, -101.6319,  -75.4811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8710, device='cuda:0', dtype=torch.float64)
tensor([ -91.3439,  -63.0297,  -68.4120, -102.2520,  -75.8455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8765, device='cuda:0', dtype=torch.float64)
tensor([ -92.2185,  -63.2755,  -70.1155, -103.2055,  -76.2416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8746, device='cuda:0', dtype=torch.float64)
tensor([ -92.0834,  -63.4670,  -72.8808, -103.3892,  -75.8519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3880, device='cuda:0', dtype=torch.float64)
tensor([ -91.6285,  -64.7828,  -76.8853, -105.7935,  -75.9277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9050, device='cuda:0', dtype=torch.float64)
tensor([ -90.6859,  -66.0945,  -80.4434, -108.1589,  -75.5685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9553, device='cuda:0', dtype=torch.float64)
tensor([ -89.5304,  -67.1768,  -83.1593, -109.8950,  -75.3950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9063, device='cuda:0', dtype=torch.float64)
tensor([ -88.8852,  -69.1530,  -85.7198, -111.3900,  -75.2894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1644, device='cuda:0', dtype=torch.float64)
tensor([ -88.0416,  -70.5695,  -87.4322, -112.8353,  -75.2933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9958, device='cuda:0', dtype=torch.float64)
tensor([ -87.7919,  -72.4491,  -89.2249, -113.9459,  -75.7443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8908, device='cuda:0', dtype=torch.float64)
tensor([ -88.4599,  -74.0979,  -89.7560, -114.8231,  -76.4616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0269, device='cuda:0', dtype=torch.float64)
tensor([ -89.0460,  -76.5419,  -91.4445, -115.6702,  -76.4610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0405, device='cuda:0', dtype=torch.float64)
tensor([ -91.5144,  -79.4023,  -93.8633, -118.0410,  -76.9268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1351, device='cuda:0', dtype=torch.float64)
tensor([ -94.1368,  -81.1285,  -95.2455, -119.7297,  -76.4494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2806, device='cuda:0', dtype=torch.float64)
tensor([ -97.5951,  -81.9857,  -94.6126, -122.5591,  -77.1069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0146, device='cuda:0', dtype=torch.float64)
tensor([-100.9423,  -82.4281,  -94.6244, -125.1970,  -77.0710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2582, device='cuda:0', dtype=torch.float64)
tensor([-104.9047,  -83.5550,  -94.2847, -129.1545,  -78.8262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2682, device='cuda:0', dtype=torch.float64)
tensor([-108.0568,  -83.7593,  -92.8218, -131.2649,  -80.6059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8293, device='cuda:0', dtype=torch.float64)
tensor([-109.9638,  -83.4315,  -91.5640, -131.8902,  -81.6790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0381, device='cuda:0', dtype=torch.float64)
tensor([-111.8159,  -83.9581,  -90.8120, -133.8559,  -83.6477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9413, device='cuda:0', dtype=torch.float64)
tensor([-113.8623,  -84.6082,  -90.4569, -135.7545,  -85.8005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0102, device='cuda:0', dtype=torch.float64)
tensor([-116.8058,  -86.0312,  -89.8058, -137.8732,  -87.1107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2106, device='cuda:0', dtype=torch.float64)
tensor([-119.1453,  -87.5120,  -88.8924, -140.2363,  -88.8319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9367, device='cuda:0', dtype=torch.float64)
tensor([-119.9547,  -88.0652,  -87.9726, -141.3889,  -90.4470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0823, device='cuda:0', dtype=torch.float64)
tensor([-119.4605,  -88.1113,  -86.1506, -141.7125,  -90.7802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9177, device='cuda:0', dtype=torch.float64)
tensor([-118.8528,  -88.5598,  -85.3969, -142.4650,  -91.3145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9695, device='cuda:0', dtype=torch.float64)
tensor([-118.9227,  -88.9676,  -85.4213, -142.7712,  -92.1397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0848, device='cuda:0', dtype=torch.float64)
tensor([-120.9416,  -90.1400,  -85.9040, -143.5691,  -93.5294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1764, device='cuda:0', dtype=torch.float64)
tensor([-122.3484,  -91.7020,  -86.9759, -145.3270,  -96.6057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8079, device='cuda:0', dtype=torch.float64)
tensor([-122.6228,  -93.0321,  -88.5706, -147.5428,  -99.9470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0855, device='cuda:0', dtype=torch.float64)
tensor([-121.0649,  -93.6669,  -89.5437, -148.6463, -102.8857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9680, device='cuda:0', dtype=torch.float64)
tensor([-119.2839,  -94.0394,  -91.1679, -149.5382, -104.9606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([-116.3971,  -93.7360,  -92.0516, -149.3929, -106.3338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9534, device='cuda:0', dtype=torch.float64)
tensor([-113.7794,  -94.4635,  -92.8130, -149.2806, -107.6547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1424, device='cuda:0', dtype=torch.float64)
tensor([-111.6717,  -95.0251,  -92.8134, -148.5690, -109.2617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1291, device='cuda:0', dtype=torch.float64)
tensor([-110.8628,  -95.6674,  -92.0379, -148.1407, -111.3199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8754, device='cuda:0', dtype=torch.float64)
tensor([-110.3043,  -95.9966,  -91.1994, -148.1081, -112.4862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9952, device='cuda:0', dtype=torch.float64)
tensor([-107.7083,  -96.4909,  -90.4585, -146.6273, -112.9348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8801, device='cuda:0', dtype=torch.float64)
tensor([-105.4052,  -97.0417,  -89.8304, -144.8695, -112.6400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0916, device='cuda:0', dtype=torch.float64)
tensor([-105.2950,  -98.3058,  -89.0588, -144.4220, -112.6977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9051, device='cuda:0', dtype=torch.float64)
tensor([-104.9836,  -99.9215,  -88.8314, -144.3972, -112.7363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0472, device='cuda:0', dtype=torch.float64)
tensor([-105.0707, -101.4372,  -88.3502, -143.5842, -112.1490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0451, device='cuda:0', dtype=torch.float64)
tensor([-105.5776, -102.8081,  -88.2064, -143.0693, -111.8180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1418, device='cuda:0', dtype=torch.float64)
tensor([-107.4458, -104.4224,  -87.7258, -145.3342, -112.3752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0253, device='cuda:0', dtype=torch.float64)
tensor([-110.2554, -105.4163,  -87.0059, -148.1344, -112.1645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0667, device='cuda:0', dtype=torch.float64)
tensor([-111.5800, -106.4706,  -87.1101, -149.8344, -111.5096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8957, device='cuda:0', dtype=torch.float64)
tensor([-112.3049, -107.5633,  -87.2635, -150.7053, -110.3063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7928, device='cuda:0', dtype=torch.float64)
tensor([-112.8026, -108.6315,  -87.2838, -151.0830, -109.1665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9801, device='cuda:0', dtype=torch.float64)
tensor([-111.5410, -109.1183,  -87.9613, -151.4115, -107.7495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0179, device='cuda:0', dtype=torch.float64)
tensor([-110.3646, -110.0026,  -89.1868, -152.5430, -106.2905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8915, device='cuda:0', dtype=torch.float64)
tensor([-109.8409, -111.6671,  -91.5494, -155.7818, -105.7795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8664, device='cuda:0', dtype=torch.float64)
tensor([-109.8448, -113.5004,  -94.7256, -159.0537, -105.3841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0752, device='cuda:0', dtype=torch.float64)
tensor([-108.7743, -115.2483,  -97.1643, -159.5419, -104.5070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8542, device='cuda:0', dtype=torch.float64)
tensor([-107.8546, -118.1100, -100.4047, -161.1098, -103.7498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0141, device='cuda:0', dtype=torch.float64)
tensor([-107.3462, -120.6757, -102.7153, -162.5279, -103.5514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9760, device='cuda:0', dtype=torch.float64)
tensor([-106.1694, -120.9751, -104.3597, -162.7721, -103.1043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1977, device='cuda:0', dtype=torch.float64)
tensor([-105.9750, -121.5784, -105.5265, -163.4169, -102.5773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9424, device='cuda:0', dtype=torch.float64)
tensor([-105.6299, -122.3889, -106.5852, -164.0620, -102.3237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9041, device='cuda:0', dtype=torch.float64)
tensor([-106.6760, -122.6173, -107.7825, -165.8470, -102.4580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0016, device='cuda:0', dtype=torch.float64)
tensor([-107.1767, -123.9077, -109.0276, -167.6675, -101.9978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9362, device='cuda:0', dtype=torch.float64)
tensor([-107.5519, -125.7100, -109.6553, -169.2708, -101.9663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9213, device='cuda:0', dtype=torch.float64)
tensor([-108.1172, -128.1878, -111.2035, -171.2098, -101.9216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9931, device='cuda:0', dtype=torch.float64)
tensor([-109.0989, -130.6295, -112.0812, -172.5663, -102.3877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9584, device='cuda:0', dtype=torch.float64)
tensor([-110.5595, -132.0633, -112.2393, -173.1849, -102.3741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9067, device='cuda:0', dtype=torch.float64)
tensor([-112.6176, -134.6222, -112.5772, -174.6482, -102.5836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7584, device='cuda:0', dtype=torch.float64)
tensor([-114.4500, -136.5099, -112.0337, -175.7835, -102.3996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0028, device='cuda:0', dtype=torch.float64)
tensor([-116.1836, -138.7129, -111.4567, -176.5886, -102.6500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8554, device='cuda:0', dtype=torch.float64)
tensor([-117.4395, -140.1807, -110.4900, -177.7434, -103.2954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8203, device='cuda:0', dtype=torch.float64)
tensor([-119.1650, -142.0243, -110.0203, -179.5366, -104.1946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7843, device='cuda:0', dtype=torch.float64)
tensor([-120.1299, -143.7005, -108.6687, -180.8661, -105.1355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9417, device='cuda:0', dtype=torch.float64)
tensor([-120.6690, -144.7779, -107.4317, -181.8120, -105.5160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1308, device='cuda:0', dtype=torch.float64)
tensor([-120.6896, -147.0812, -106.8819, -182.4587, -106.1982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0434, device='cuda:0', dtype=torch.float64)
tensor([-119.8993, -148.8056, -107.2534, -181.3966, -104.9121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9074, device='cuda:0', dtype=torch.float64)
tensor([-119.7939, -148.8267, -106.7143, -180.9215, -104.0941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8957, device='cuda:0', dtype=torch.float64)
tensor([-120.1862, -149.2488, -106.5739, -180.9856, -103.7333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0271, device='cuda:0', dtype=torch.float64)
tensor([-120.7320, -149.8389, -106.8195, -181.3095, -102.3839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8784, device='cuda:0', dtype=torch.float64)
tensor([-120.9585, -149.8600, -107.1899, -181.4387, -101.1589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9114, device='cuda:0', dtype=torch.float64)
tensor([-122.5620, -150.5915, -108.1385, -182.4108, -100.0248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9793, device='cuda:0', dtype=torch.float64)
tensor([-124.2239, -150.6731, -108.0576, -182.6444,  -98.5980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9269, device='cuda:0', dtype=torch.float64)
tensor([-126.2582, -150.5561, -109.8794, -183.5701,  -96.7998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8191, device='cuda:0', dtype=torch.float64)
tensor([-128.3789, -149.9027, -111.1937, -184.1034,  -95.2739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9653, device='cuda:0', dtype=torch.float64)
tensor([-131.3563, -149.4638, -113.9684, -186.0552,  -94.5206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9887, device='cuda:0', dtype=torch.float64)
tensor([-135.9804, -148.9821, -116.8711, -189.5373,  -94.5422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8889, device='cuda:0', dtype=torch.float64)
tensor([-140.0256, -148.5483, -119.7418, -192.0675,  -95.1946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8601, device='cuda:0', dtype=torch.float64)
tensor([-145.3257, -150.4147, -123.2594, -195.9722,  -97.2606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9469, device='cuda:0', dtype=torch.float64)
tensor([-150.2771, -153.1100, -126.7372, -199.5465, -100.2044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8373, device='cuda:0', dtype=torch.float64)
tensor([-154.9711, -156.2717, -129.1747, -203.0975, -103.5604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8669, device='cuda:0', dtype=torch.float64)
tensor([-159.1090, -159.3824, -131.1079, -205.5969, -106.3536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0022, device='cuda:0', dtype=torch.float64)
tensor([-162.4302, -161.5783, -132.7616, -206.9864, -108.3603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8889, device='cuda:0', dtype=torch.float64)
tensor([-165.5533, -164.1380, -133.9412, -208.2591, -109.8793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9416, device='cuda:0', dtype=torch.float64)
tensor([-168.1636, -167.5757, -134.9706, -209.3487, -112.2228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8222, device='cuda:0', dtype=torch.float64)
tensor([-170.4861, -170.4461, -136.2203, -210.3103, -114.7456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7640, device='cuda:0', dtype=torch.float64)
tensor([-172.6277, -172.2386, -136.9568, -210.4898, -116.3923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8527, device='cuda:0', dtype=torch.float64)
tensor([-173.1402, -172.4283, -137.3647, -209.4592, -116.7792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9172, device='cuda:0', dtype=torch.float64)
tensor([-172.8749, -173.8410, -136.1443, -207.6119, -116.9407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0049, device='cuda:0', dtype=torch.float64)
tensor([-172.5413, -175.3423, -134.7084, -205.3893, -116.5210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8541, device='cuda:0', dtype=torch.float64)
tensor([-172.4509, -176.2407, -133.9468, -203.7984, -116.0708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8066, device='cuda:0', dtype=torch.float64)
tensor([-171.4062, -176.5040, -133.0228, -202.1209, -115.1970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([-169.6670, -177.0183, -131.6603, -199.0368, -113.5866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8658, device='cuda:0', dtype=torch.float64)
tensor([-167.5011, -177.5603, -131.1374, -195.9404, -112.3684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0265, device='cuda:0', dtype=torch.float64)
tensor([-166.8924, -178.0908, -131.7148, -194.8712, -111.6901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0031, device='cuda:0', dtype=torch.float64)
tensor([-165.8002, -178.8142, -132.2076, -193.1962, -110.5999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0545, device='cuda:0', dtype=torch.float64)
tensor([-164.3465, -180.2894, -131.9223, -190.8901, -109.0548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1861, device='cuda:0', dtype=torch.float64)
tensor([-163.6270, -180.3724, -131.9286, -189.1052, -107.4899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8038, device='cuda:0', dtype=torch.float64)
tensor([-162.8361, -179.5974, -131.6765, -187.0309, -105.5354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0129, device='cuda:0', dtype=torch.float64)
tensor([-163.1416, -177.5699, -132.0671, -186.4503, -104.7460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8333, device='cuda:0', dtype=torch.float64)
tensor([-162.8361, -174.2777, -132.6888, -185.9709, -103.5793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9289, device='cuda:0', dtype=torch.float64)
tensor([-162.5069, -170.5429, -133.4197, -184.6871, -101.8534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1102, device='cuda:0', dtype=torch.float64)
tensor([-162.3406, -165.4628, -134.1028, -183.3611, -100.4843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9285, device='cuda:0', dtype=torch.float64)
tensor([-160.8664, -160.3546, -132.5992, -180.1552,  -98.9162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7197, device='cuda:0', dtype=torch.float64)
tensor([-159.9136, -156.4154, -131.2590, -177.4993,  -97.4952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9558, device='cuda:0', dtype=torch.float64)
tensor([-158.3799, -153.3479, -128.0779, -173.0354,  -95.8900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0507, device='cuda:0', dtype=torch.float64)
tensor([-156.2179, -150.6066, -123.9151, -168.6146,  -94.6990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8448, device='cuda:0', dtype=torch.float64)
tensor([-154.9548, -146.2825, -119.9119, -164.8857,  -94.4342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7688, device='cuda:0', dtype=torch.float64)
tensor([-153.0103, -141.4280, -116.4634, -160.6336,  -94.4638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7778, device='cuda:0', dtype=torch.float64)
tensor([-151.5895, -137.1421, -113.6424, -157.3402,  -94.3341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7290, device='cuda:0', dtype=torch.float64)
tensor([-150.5452, -133.9021, -111.8480, -154.8291,  -94.0740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9685, device='cuda:0', dtype=torch.float64)
tensor([-149.6865, -130.8657, -110.5727, -152.6949,  -94.6506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8259, device='cuda:0', dtype=torch.float64)
tensor([-148.4921, -127.7243, -108.6943, -150.5255,  -95.0649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0652, device='cuda:0', dtype=torch.float64)
tensor([-146.8827, -125.2932, -105.9176, -147.8104,  -94.7949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7952, device='cuda:0', dtype=torch.float64)
tensor([-145.6452, -123.0733, -104.1062, -145.4742,  -94.1393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8009, device='cuda:0', dtype=torch.float64)
tensor([-145.1003, -121.3135, -104.0153, -143.8029,  -93.8613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9367, device='cuda:0', dtype=torch.float64)
tensor([-144.7009, -121.8156, -104.3464, -142.6997,  -94.6596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9220, device='cuda:0', dtype=torch.float64)
tensor([-144.4197, -122.1227, -105.4400, -141.8963,  -95.3509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8484, device='cuda:0', dtype=torch.float64)
tensor([-144.8368, -122.5726, -106.7335, -141.1433,  -96.3562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8824, device='cuda:0', dtype=torch.float64)
tensor([-145.7441, -123.5925, -108.7275, -140.9866,  -96.8197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9732, device='cuda:0', dtype=torch.float64)
tensor([-147.3376, -125.4912, -111.5496, -141.9723,  -97.1762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8252, device='cuda:0', dtype=torch.float64)
tensor([-149.1683, -127.6322, -115.4678, -142.8553,  -97.3971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8238, device='cuda:0', dtype=torch.float64)
tensor([-150.2477, -130.9227, -119.8060, -143.6583,  -97.5824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6157, device='cuda:0', dtype=torch.float64)
tensor([-151.3888, -133.7234, -124.3889, -145.5166,  -98.7437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9108, device='cuda:0', dtype=torch.float64)
tensor([-151.1968, -136.7649, -126.7817, -146.5089,  -99.3137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8197, device='cuda:0', dtype=torch.float64)
tensor([-150.6810, -139.1269, -128.9772, -148.4616, -100.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8454, device='cuda:0', dtype=torch.float64)
tensor([-149.9568, -141.0631, -130.7314, -150.2903, -100.9096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8233, device='cuda:0', dtype=torch.float64)
tensor([-148.9885, -142.6413, -130.3843, -151.7988, -101.6260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8429, device='cuda:0', dtype=torch.float64)
tensor([-149.3258, -143.2280, -130.0227, -153.5838, -102.2085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9884, device='cuda:0', dtype=torch.float64)
tensor([-148.7839, -144.4597, -128.5901, -154.3595, -102.2513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9198, device='cuda:0', dtype=torch.float64)
tensor([-148.3342, -146.0107, -127.1702, -154.9018, -102.0249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9631, device='cuda:0', dtype=torch.float64)
tensor([-147.4786, -146.5942, -126.7625, -154.9115, -101.5990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7981, device='cuda:0', dtype=torch.float64)
tensor([-147.4287, -146.9703, -127.2040, -155.5429, -100.9420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7903, device='cuda:0', dtype=torch.float64)
tensor([-147.9800, -147.2720, -128.6069, -156.0306,  -99.8016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0210, device='cuda:0', dtype=torch.float64)
tensor([-149.1943, -146.5442, -128.9396, -157.0447,  -98.6540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8605, device='cuda:0', dtype=torch.float64)
tensor([-150.3250, -146.1670, -130.2214, -158.5868,  -97.5466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7562, device='cuda:0', dtype=torch.float64)
tensor([-151.6277, -145.5181, -130.8057, -159.2067,  -96.2034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7686, device='cuda:0', dtype=torch.float64)
tensor([-152.8006, -145.7545, -131.0449, -159.0594,  -94.9401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6830, device='cuda:0', dtype=torch.float64)
tensor([-153.5133, -146.7287, -131.1736, -158.4771,  -93.6753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8828, device='cuda:0', dtype=torch.float64)
tensor([-153.7521, -147.6497, -131.1657, -157.0568,  -92.1000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9946, device='cuda:0', dtype=torch.float64)
tensor([-153.9428, -149.4606, -131.8380, -156.5722,  -91.8980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1384, device='cuda:0', dtype=torch.float64)
tensor([-153.1825, -150.4416, -130.7408, -154.7893,  -92.0922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9575, device='cuda:0', dtype=torch.float64)
tensor([-152.8553, -152.0378, -130.9470, -153.6810,  -92.4567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6943, device='cuda:0', dtype=torch.float64)
tensor([-151.9210, -153.2415, -130.3100, -152.1213,  -92.0677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7375, device='cuda:0', dtype=torch.float64)
tensor([-151.4317, -153.8045, -130.1003, -150.8963,  -92.1898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9527, device='cuda:0', dtype=torch.float64)
tensor([-151.0896, -153.4671, -129.7617, -149.4653,  -91.7762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9443, device='cuda:0', dtype=torch.float64)
tensor([-151.2201, -154.1050, -129.7207, -148.1014,  -92.4020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9444, device='cuda:0', dtype=torch.float64)
tensor([-151.3319, -154.5739, -129.2030, -146.5217,  -92.4480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8083, device='cuda:0', dtype=torch.float64)
tensor([-151.0458, -153.6997, -127.6652, -143.9239,  -91.9573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7580, device='cuda:0', dtype=torch.float64)
tensor([-150.7208, -152.6361, -127.0975, -141.7332,  -91.6093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8667, device='cuda:0', dtype=torch.float64)
tensor([-150.0200, -151.8064, -127.0354, -139.5380,  -91.5240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9036, device='cuda:0', dtype=torch.float64)
tensor([-149.3997, -150.1950, -128.4160, -138.0508,  -91.5563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8014, device='cuda:0', dtype=torch.float64)
tensor([-149.7193, -149.5831, -130.2863, -138.2937,  -92.1475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8935, device='cuda:0', dtype=torch.float64)
tensor([-149.1203, -149.6001, -131.6216, -138.5455,  -93.3252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8922, device='cuda:0', dtype=torch.float64)
tensor([-148.3254, -150.3751, -132.7773, -138.5068,  -94.7454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7892, device='cuda:0', dtype=torch.float64)
tensor([-147.1584, -151.8266, -132.4972, -138.0394,  -96.4908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8802, device='cuda:0', dtype=torch.float64)
tensor([-145.5477, -154.6115, -131.5896, -137.9535,  -98.4855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8307, device='cuda:0', dtype=torch.float64)
tensor([-143.4575, -156.9655, -131.3943, -138.2253,  -99.9741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8761, device='cuda:0', dtype=torch.float64)
tensor([-141.9426, -158.2918, -132.0659, -138.8790, -102.0181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8656, device='cuda:0', dtype=torch.float64)
tensor([-140.7788, -158.8978, -131.5166, -139.2003, -103.3334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8349, device='cuda:0', dtype=torch.float64)
tensor([-140.6558, -159.4516, -131.9090, -140.3790, -105.2600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7923, device='cuda:0', dtype=torch.float64)
tensor([-140.9003, -158.8092, -132.5105, -141.6141, -106.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8917, device='cuda:0', dtype=torch.float64)
tensor([-140.9884, -157.8912, -133.9014, -142.2760, -108.3152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7684, device='cuda:0', dtype=torch.float64)
tensor([-141.0504, -156.5737, -134.8909, -143.5851, -109.7257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7505, device='cuda:0', dtype=torch.float64)
tensor([-142.1967, -155.4133, -136.4343, -145.6445, -111.2692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7760, device='cuda:0', dtype=torch.float64)
tensor([-143.4185, -154.0220, -138.8931, -147.3640, -112.7301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8653, device='cuda:0', dtype=torch.float64)
tensor([-145.2207, -152.3936, -140.9330, -149.8440, -114.3073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8779, device='cuda:0', dtype=torch.float64)
tensor([-146.8108, -150.3305, -142.0630, -152.2155, -115.1949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7243, device='cuda:0', dtype=torch.float64)
tensor([-148.3992, -148.7936, -143.0674, -154.0304, -115.4711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8157, device='cuda:0', dtype=torch.float64)
tensor([-149.9357, -147.0101, -144.1698, -156.6286, -116.1793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9065, device='cuda:0', dtype=torch.float64)
tensor([-150.6487, -143.7316, -144.2236, -157.6283, -116.1841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8860, device='cuda:0', dtype=torch.float64)
tensor([-152.5990, -140.4054, -145.4515, -159.1569, -116.3345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9080, device='cuda:0', dtype=torch.float64)
tensor([-154.1856, -136.1381, -146.3740, -160.6556, -116.0433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8177, device='cuda:0', dtype=torch.float64)
tensor([-155.9113, -132.2777, -147.8844, -162.2133, -115.7541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0469, device='cuda:0', dtype=torch.float64)
tensor([-157.5437, -127.7589, -149.2817, -162.7710, -114.9603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-159.5886, -124.3557, -150.8141, -163.9181, -114.0411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7774, device='cuda:0', dtype=torch.float64)
tensor([-161.3000, -121.2082, -151.5528, -164.6213, -112.9358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9331, device='cuda:0', dtype=torch.float64)
tensor([-162.5047, -117.7832, -150.7680, -164.3977, -111.2654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8699, device='cuda:0', dtype=torch.float64)
tensor([-162.9681, -116.0044, -151.3393, -163.8496, -110.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8077, device='cuda:0', dtype=torch.float64)
tensor([-163.3595, -115.2993, -151.4698, -163.1454, -109.9097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9153, device='cuda:0', dtype=torch.float64)
tensor([-163.9106, -115.1081, -153.4328, -163.0162, -109.8760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6959, device='cuda:0', dtype=torch.float64)
tensor([-163.9953, -115.3728, -154.5447, -162.4360, -109.5727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9991, device='cuda:0', dtype=torch.float64)
tensor([-164.0702, -116.4087, -154.3056, -162.3695, -109.2380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9097, device='cuda:0', dtype=torch.float64)
tensor([-164.7021, -116.3146, -154.4146, -163.1319, -109.5704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8184, device='cuda:0', dtype=torch.float64)
tensor([-164.8016, -115.5354, -154.6301, -162.9646, -109.3027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9132, device='cuda:0', dtype=torch.float64)
tensor([-163.9689, -116.2878, -154.0291, -161.8400, -108.7519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7854, device='cuda:0', dtype=torch.float64)
tensor([-163.5938, -117.1722, -152.9695, -162.0985, -108.7129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0278, device='cuda:0', dtype=torch.float64)
tensor([-162.5944, -118.7958, -152.1753, -161.0996, -108.3027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8292, device='cuda:0', dtype=torch.float64)
tensor([-161.5449, -121.9075, -152.2753, -160.1709, -108.6210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9210, device='cuda:0', dtype=torch.float64)
tensor([-159.8727, -126.0886, -151.2032, -158.4807, -109.1970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8463, device='cuda:0', dtype=torch.float64)
tensor([-157.4670, -130.1539, -149.2118, -156.6221, -109.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8160, device='cuda:0', dtype=torch.float64)
tensor([-155.6893, -133.9137, -147.8977, -154.4304, -109.3292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8535, device='cuda:0', dtype=torch.float64)
tensor([-153.8564, -136.5610, -147.1869, -152.2327, -108.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7115, device='cuda:0', dtype=torch.float64)
tensor([-152.4227, -138.4799, -146.3451, -150.3723, -107.2589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7394, device='cuda:0', dtype=torch.float64)
tensor([-151.2599, -138.9060, -145.3478, -148.3289, -105.7846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7902, device='cuda:0', dtype=torch.float64)
tensor([-150.2651, -139.3400, -144.2885, -146.3232, -104.2171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7826, device='cuda:0', dtype=torch.float64)
tensor([-149.5410, -139.2569, -143.6824, -144.0069, -101.9770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8431, device='cuda:0', dtype=torch.float64)
tensor([-148.7723, -139.0888, -143.2551, -140.9707,  -99.7635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0186, device='cuda:0', dtype=torch.float64)
tensor([-148.9077, -139.7792, -143.8779, -138.9657,  -97.7055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9622, device='cuda:0', dtype=torch.float64)
tensor([-148.5796, -140.6325, -143.6985, -137.3351,  -96.7647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0433, device='cuda:0', dtype=torch.float64)
tensor([-149.8524, -141.1390, -142.8368, -136.3780,  -96.4818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8582, device='cuda:0', dtype=torch.float64)
tensor([-151.2010, -141.4280, -142.4235, -135.7061,  -96.2896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7644, device='cuda:0', dtype=torch.float64)
tensor([-151.6659, -141.6609, -142.3077, -134.9764,  -96.4576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9862, device='cuda:0', dtype=torch.float64)
tensor([-153.5639, -141.5297, -142.7626, -135.4145,  -96.9437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8738, device='cuda:0', dtype=torch.float64)
tensor([-155.0998, -141.7022, -143.0367, -135.9008,  -97.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8663, device='cuda:0', dtype=torch.float64)
tensor([-156.6045, -141.8232, -143.5859, -136.5603,  -98.2610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7389, device='cuda:0', dtype=torch.float64)
tensor([-156.6246, -142.6098, -142.6974, -136.3134,  -98.5181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7735, device='cuda:0', dtype=torch.float64)
tensor([-156.0402, -142.7550, -141.5399, -135.1979,  -98.4374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0379, device='cuda:0', dtype=torch.float64)
tensor([-154.1237, -143.9717, -140.0702, -134.4081,  -98.2267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8069, device='cuda:0', dtype=torch.float64)
tensor([-153.7066, -145.3276, -139.2095, -134.0285,  -98.5020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9152, device='cuda:0', dtype=torch.float64)
tensor([-154.6778, -146.1025, -139.4901, -133.7069,  -98.6002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9195, device='cuda:0', dtype=torch.float64)
tensor([-155.2778, -147.8048, -139.5118, -133.2729,  -99.0504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8561, device='cuda:0', dtype=torch.float64)
tensor([-156.7029, -149.9341, -140.7141, -133.4156,  -99.8527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7858, device='cuda:0', dtype=torch.float64)
tensor([-157.7559, -151.8922, -140.9755, -133.0215, -100.5302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8094, device='cuda:0', dtype=torch.float64)
tensor([-158.5911, -154.4242, -140.6322, -132.6354, -101.5375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8459, device='cuda:0', dtype=torch.float64)
tensor([-159.1675, -156.0642, -140.4794, -132.7453, -102.6465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7902, device='cuda:0', dtype=torch.float64)
tensor([-159.3171, -157.8594, -140.8619, -132.5129, -103.7431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6373, device='cuda:0', dtype=torch.float64)
tensor([-159.5809, -159.2916, -140.7420, -132.7298, -104.5432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7390, device='cuda:0', dtype=torch.float64)
tensor([-159.5152, -162.2036, -140.1305, -133.5441, -105.9697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6236, device='cuda:0', dtype=torch.float64)
tensor([-160.0345, -165.2856, -139.8521, -134.5391, -107.3823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7238, device='cuda:0', dtype=torch.float64)
tensor([-160.2683, -168.0509, -140.0015, -135.4586, -108.9521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9015, device='cuda:0', dtype=torch.float64)
tensor([-160.6907, -169.5810, -140.3726, -136.4901, -110.3706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7391, device='cuda:0', dtype=torch.float64)
tensor([-161.5616, -170.0282, -140.5883, -137.5677, -111.2290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6802, device='cuda:0', dtype=torch.float64)
tensor([-161.8633, -170.4413, -140.5982, -138.2133, -111.8889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8717, device='cuda:0', dtype=torch.float64)
tensor([-161.3894, -170.8142, -139.7180, -138.6237, -112.5939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7540, device='cuda:0', dtype=torch.float64)
tensor([-160.2479, -170.9841, -138.7280, -138.6347, -113.2956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8944, device='cuda:0', dtype=torch.float64)
tensor([-160.1224, -170.4783, -137.6240, -138.4897, -114.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9209, device='cuda:0', dtype=torch.float64)
tensor([-159.6483, -169.8566, -136.1165, -138.0407, -114.2351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7258, device='cuda:0', dtype=torch.float64)
tensor([-159.5552, -168.8446, -134.7368, -137.9800, -114.0508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8810, device='cuda:0', dtype=torch.float64)
tensor([-159.1441, -167.5040, -132.9592, -138.0433, -113.3620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6562, device='cuda:0', dtype=torch.float64)
tensor([-158.5529, -166.7404, -131.6071, -138.2661, -113.0080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8091, device='cuda:0', dtype=torch.float64)
tensor([-157.5300, -164.9988, -130.8017, -138.1940, -112.5386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8343, device='cuda:0', dtype=torch.float64)
tensor([-156.9199, -163.8365, -129.8403, -138.3600, -112.6766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9998, device='cuda:0', dtype=torch.float64)
tensor([-156.4286, -162.9620, -128.3554, -138.6123, -113.2627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7511, device='cuda:0', dtype=torch.float64)
tensor([-156.6826, -161.8489, -127.1446, -139.6172, -114.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7352, device='cuda:0', dtype=torch.float64)
tensor([-157.0879, -161.6582, -125.9850, -140.5238, -115.0748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8858, device='cuda:0', dtype=torch.float64)
tensor([-157.1015, -161.7233, -125.4553, -141.4230, -115.8653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8278, device='cuda:0', dtype=torch.float64)
tensor([-157.3949, -161.4647, -125.3948, -142.7780, -116.7998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8157, device='cuda:0', dtype=torch.float64)
tensor([-158.0550, -160.3233, -124.6165, -144.2448, -117.5866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7204, device='cuda:0', dtype=torch.float64)
tensor([-159.2987, -159.3246, -124.9393, -146.0870, -118.8739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9314, device='cuda:0', dtype=torch.float64)
tensor([-160.5824, -157.5332, -125.3180, -146.9904, -119.3054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9414, device='cuda:0', dtype=torch.float64)
tensor([-161.6512, -155.7744, -125.7901, -147.6150, -119.9237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0089, device='cuda:0', dtype=torch.float64)
tensor([-161.5360, -153.7051, -126.3257, -146.7313, -119.3568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9742, device='cuda:0', dtype=torch.float64)
tensor([-161.8894, -152.8317, -127.1252, -147.0349, -120.4144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8478, device='cuda:0', dtype=torch.float64)
tensor([-162.0422, -152.0795, -128.4840, -147.0065, -120.8244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8235, device='cuda:0', dtype=torch.float64)
tensor([-161.7988, -151.4665, -129.2182, -147.1618, -120.6940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8013, device='cuda:0', dtype=torch.float64)
tensor([-161.8613, -150.8062, -129.9268, -147.9127, -120.8957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8604, device='cuda:0', dtype=torch.float64)
tensor([-162.3716, -150.1754, -131.4025, -148.9755, -121.1447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6216, device='cuda:0', dtype=torch.float64)
tensor([-163.0225, -148.9436, -132.7955, -150.3326, -120.7621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8148, device='cuda:0', dtype=torch.float64)
tensor([-163.6500, -147.1809, -133.3304, -150.7460, -119.8954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8278, device='cuda:0', dtype=torch.float64)
tensor([-164.2415, -145.1692, -134.1982, -150.6190, -118.9250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7593, device='cuda:0', dtype=torch.float64)
tensor([-164.4664, -143.2738, -135.0105, -151.1712, -117.9774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7765, device='cuda:0', dtype=torch.float64)
tensor([-164.9416, -141.1022, -136.4585, -151.9512, -117.4931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8982, device='cuda:0', dtype=torch.float64)
tensor([-165.3449, -139.3866, -137.6376, -152.8955, -117.2501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9004, device='cuda:0', dtype=torch.float64)
tensor([-164.5223, -138.7889, -136.8906, -152.1238, -116.7201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8516, device='cuda:0', dtype=torch.float64)
tensor([-164.4517, -138.0248, -136.4939, -151.8867, -116.0428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9001, device='cuda:0', dtype=torch.float64)
tensor([-165.0036, -137.3150, -138.1217, -153.0170, -116.3000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8413, device='cuda:0', dtype=torch.float64)
tensor([-165.7205, -136.5466, -140.3338, -153.5754, -116.4276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7474, device='cuda:0', dtype=torch.float64)
tensor([-167.0862, -135.2122, -142.7614, -154.7541, -116.5455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8941, device='cuda:0', dtype=torch.float64)
tensor([-167.9609, -134.3744, -144.6367, -155.0389, -116.8289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9635, device='cuda:0', dtype=torch.float64)
tensor([-167.8738, -134.0601, -145.4870, -154.2520, -116.8392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6546, device='cuda:0', dtype=torch.float64)
tensor([-167.3571, -133.4690, -145.2675, -152.6668, -116.2923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7926, device='cuda:0', dtype=torch.float64)
tensor([-166.3299, -133.4343, -145.3281, -151.0067, -116.0620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7455, device='cuda:0', dtype=torch.float64)
tensor([-165.7033, -133.1135, -145.4545, -149.8470, -115.1095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7127, device='cuda:0', dtype=torch.float64)
tensor([-165.7464, -134.3608, -145.4277, -149.4098, -115.1057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8150, device='cuda:0', dtype=torch.float64)
tensor([-165.0020, -135.5729, -144.9931, -148.4072, -114.7316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8981, device='cuda:0', dtype=torch.float64)
tensor([-164.9361, -136.1798, -144.8793, -147.9227, -113.9419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-164.5619, -136.4375, -144.1250, -147.1781, -113.2775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6284, device='cuda:0', dtype=torch.float64)
tensor([-164.7048, -136.3804, -143.4885, -147.0122, -112.5227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7456, device='cuda:0', dtype=torch.float64)
tensor([-165.1985, -136.7081, -142.1118, -146.8723, -112.1611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6427, device='cuda:0', dtype=torch.float64)
tensor([-165.9864, -136.9390, -140.6718, -147.0853, -111.7074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8549, device='cuda:0', dtype=torch.float64)
tensor([-166.9420, -136.5946, -138.0886, -147.1463, -110.9524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9114, device='cuda:0', dtype=torch.float64)
tensor([-168.5671, -137.1313, -134.9507, -147.8835, -110.4802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7796, device='cuda:0', dtype=torch.float64)
tensor([-169.9817, -137.4995, -132.5470, -148.6137, -109.9698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9286, device='cuda:0', dtype=torch.float64)
tensor([-171.3148, -137.6174, -130.1284, -149.8440, -109.2380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8179, device='cuda:0', dtype=torch.float64)
tensor([-172.7118, -136.9894, -128.5307, -151.2349, -108.8305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7122, device='cuda:0', dtype=torch.float64)
tensor([-174.1080, -137.0862, -126.7673, -152.2818, -108.5818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7901, device='cuda:0', dtype=torch.float64)
tensor([-175.8096, -136.7985, -124.9696, -153.4424, -108.6478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7891, device='cuda:0', dtype=torch.float64)
tensor([-178.3447, -136.5205, -124.0151, -155.4349, -108.8578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8000, device='cuda:0', dtype=torch.float64)
tensor([-180.1722, -136.0891, -123.1547, -157.7217, -108.9943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7859, device='cuda:0', dtype=torch.float64)
tensor([-181.6037, -135.2697, -122.1968, -159.2772, -108.5027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8027, device='cuda:0', dtype=torch.float64)
tensor([-182.3308, -134.5274, -120.3438, -160.0591, -107.8107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8562, device='cuda:0', dtype=torch.float64)
tensor([-183.4465, -133.4831, -119.1434, -160.6670, -107.1348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8172, device='cuda:0', dtype=torch.float64)
tensor([-183.9700, -132.7915, -117.8393, -159.8403, -106.0417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7698, device='cuda:0', dtype=torch.float64)
tensor([-184.2458, -132.4864, -116.1450, -158.6849, -105.2261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7376, device='cuda:0', dtype=torch.float64)
tensor([-184.1641, -131.7699, -113.9615, -157.3111, -104.5749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8501, device='cuda:0', dtype=torch.float64)
tensor([-184.1119, -132.0121, -112.2378, -157.2097, -105.0062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9305, device='cuda:0', dtype=torch.float64)
tensor([-183.6955, -131.7908, -111.3119, -156.1905, -105.2307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7817, device='cuda:0', dtype=torch.float64)
tensor([-183.5981, -131.6213, -110.7055, -155.8125, -105.7236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7754, device='cuda:0', dtype=torch.float64)
tensor([-183.1932, -132.1366, -110.0314, -155.4240, -106.3525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7406, device='cuda:0', dtype=torch.float64)
tensor([-182.2898, -132.4356, -109.3459, -155.2998, -107.2762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6808, device='cuda:0', dtype=torch.float64)
tensor([-181.5094, -132.7321, -108.3556, -154.8433, -107.7823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8394, device='cuda:0', dtype=torch.float64)
tensor([-180.4105, -132.8188, -107.1883, -153.8622, -107.6964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7371, device='cuda:0', dtype=torch.float64)
tensor([-179.9662, -133.0866, -106.7962, -153.9653, -108.3413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7555, device='cuda:0', dtype=torch.float64)
tensor([-179.7586, -133.9061, -106.3014, -154.1836, -109.4012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8216, device='cuda:0', dtype=torch.float64)
tensor([-179.8480, -135.2134, -105.2222, -154.9567, -110.9659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7544, device='cuda:0', dtype=torch.float64)
tensor([-180.1426, -137.5705, -103.8364, -156.9352, -113.9281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9349, device='cuda:0', dtype=torch.float64)
tensor([-180.5327, -138.6237, -102.4087, -158.4942, -116.1971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9956, device='cuda:0', dtype=torch.float64)
tensor([-181.9458, -140.2940, -102.1915, -160.6221, -118.9857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7180, device='cuda:0', dtype=torch.float64)
tensor([-183.9784, -141.2597, -102.4985, -162.5523, -121.4627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7786, device='cuda:0', dtype=torch.float64)
tensor([-185.9283, -141.6462, -102.2002, -164.2180, -123.7886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8842, device='cuda:0', dtype=torch.float64)
tensor([-187.6936, -142.3919, -102.1349, -166.6281, -126.7237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6724, device='cuda:0', dtype=torch.float64)
tensor([-189.2658, -143.0159, -101.8116, -168.4215, -129.0554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8615, device='cuda:0', dtype=torch.float64)
tensor([-190.0500, -143.1413, -101.2591, -169.6575, -130.7099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7756, device='cuda:0', dtype=torch.float64)
tensor([-191.0549, -143.3936, -101.4646, -171.2545, -132.1237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9025, device='cuda:0', dtype=torch.float64)
tensor([-192.4314, -143.6417, -102.0677, -172.2664, -133.4985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6799, device='cuda:0', dtype=torch.float64)
tensor([-193.7411, -144.4794, -102.4344, -172.9215, -135.0746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7974, device='cuda:0', dtype=torch.float64)
tensor([-195.0856, -143.7968, -102.7724, -173.4518, -136.1149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7763, device='cuda:0', dtype=torch.float64)
tensor([-196.3894, -143.9637, -103.0131, -174.6860, -137.8044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7338, device='cuda:0', dtype=torch.float64)
tensor([-198.3313, -143.4710, -103.1608, -176.2843, -139.2866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9561, device='cuda:0', dtype=torch.float64)
tensor([-199.2524, -142.0588, -102.9776, -176.6988, -139.1459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7259, device='cuda:0', dtype=torch.float64)
tensor([-199.8188, -140.5285, -102.7601, -176.6127, -138.9984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8719, device='cuda:0', dtype=torch.float64)
tensor([-200.9237, -139.7500, -102.6912, -177.2287, -139.6144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7989, device='cuda:0', dtype=torch.float64)
tensor([-201.5976, -139.2011, -102.8472, -177.3876, -139.9049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8817, device='cuda:0', dtype=torch.float64)
tensor([-201.9940, -140.0455, -103.0128, -178.6295, -140.2769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6750, device='cuda:0', dtype=torch.float64)
tensor([-202.2124, -140.8173, -103.0012, -179.7116, -140.2656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8008, device='cuda:0', dtype=torch.float64)
tensor([-202.6240, -140.9348, -103.5370, -180.6638, -140.0362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7266, device='cuda:0', dtype=torch.float64)
tensor([-202.8884, -140.6880, -104.6278, -181.4198, -139.5049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7498, device='cuda:0', dtype=torch.float64)
tensor([-203.1372, -141.2178, -106.0772, -182.0888, -139.1672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7592, device='cuda:0', dtype=torch.float64)
tensor([-203.3438, -141.3804, -107.5547, -183.4683, -138.7848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7306, device='cuda:0', dtype=torch.float64)
tensor([-203.5301, -141.3064, -108.5355, -184.4047, -138.2330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7110, device='cuda:0', dtype=torch.float64)
tensor([-203.6590, -142.0247, -108.6983, -185.6969, -137.8325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7529, device='cuda:0', dtype=torch.float64)
tensor([-203.4294, -141.8060, -108.8045, -186.1679, -136.7240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7044, device='cuda:0', dtype=torch.float64)
tensor([-203.1991, -141.9436, -108.5180, -186.0401, -135.6805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8069, device='cuda:0', dtype=torch.float64)
tensor([-202.4483, -141.4241, -108.6094, -184.6526, -134.0693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8491, device='cuda:0', dtype=torch.float64)
tensor([-202.3339, -141.6463, -108.7480, -183.2657, -133.1672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7385, device='cuda:0', dtype=torch.float64)
tensor([-201.7510, -142.8120, -108.5766, -182.3184, -132.7109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8043, device='cuda:0', dtype=torch.float64)
tensor([-201.6903, -144.7629, -108.4066, -182.6970, -133.2374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8290, device='cuda:0', dtype=torch.float64)
tensor([-200.5981, -146.0861, -108.0592, -181.7913, -132.8760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6636, device='cuda:0', dtype=torch.float64)
tensor([-199.9413, -146.9962, -107.7854, -180.3933, -132.5786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7755, device='cuda:0', dtype=torch.float64)
tensor([-199.8667, -149.2475, -107.4545, -179.8507, -133.0724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7101, device='cuda:0', dtype=torch.float64)
tensor([-199.7632, -151.4598, -107.1924, -178.8130, -133.3558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6981, device='cuda:0', dtype=torch.float64)
tensor([-199.9393, -153.1186, -107.2517, -177.2614, -133.2240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6331, device='cuda:0', dtype=torch.float64)
tensor([-200.4248, -154.2968, -108.0276, -175.7372, -132.7346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7041, device='cuda:0', dtype=torch.float64)
tensor([-201.0029, -154.8653, -108.5222, -174.9615, -132.1682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7178, device='cuda:0', dtype=torch.float64)
tensor([-201.9527, -156.3110, -109.3572, -175.0841, -131.7081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6494, device='cuda:0', dtype=torch.float64)
tensor([-202.5329, -157.7050, -109.8080, -175.5665, -131.5977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6868, device='cuda:0', dtype=torch.float64)
tensor([-202.2852, -159.2239, -110.1123, -175.5939, -131.1832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6652, device='cuda:0', dtype=torch.float64)
tensor([-202.5235, -160.1037, -110.4410, -175.9428, -130.4541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7618, device='cuda:0', dtype=torch.float64)
tensor([-202.7914, -162.0239, -110.9795, -176.2694, -130.4435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8827, device='cuda:0', dtype=torch.float64)
tensor([-204.0947, -164.8919, -112.0616, -178.3744, -132.2114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6688, device='cuda:0', dtype=torch.float64)
tensor([-204.7587, -167.5960, -112.8194, -179.5252, -134.1874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6579, device='cuda:0', dtype=torch.float64)
tensor([-206.1667, -170.5845, -114.0263, -181.6144, -136.8547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6709, device='cuda:0', dtype=torch.float64)
tensor([-207.3619, -172.6131, -114.9394, -182.9072, -139.2076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6838, device='cuda:0', dtype=torch.float64)
tensor([-207.7650, -174.5637, -115.7218, -184.0163, -141.2018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7147, device='cuda:0', dtype=torch.float64)
tensor([-208.3905, -176.7779, -116.8546, -184.8997, -143.4682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7189, device='cuda:0', dtype=torch.float64)
tensor([-208.5664, -177.6549, -118.5669, -184.4270, -144.7621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7823, device='cuda:0', dtype=torch.float64)
tensor([-208.6510, -177.1908, -120.6614, -183.6008, -144.9753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8521, device='cuda:0', dtype=torch.float64)
tensor([-208.4180, -176.0540, -123.0613, -182.8536, -145.4748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7349, device='cuda:0', dtype=torch.float64)
tensor([-208.3076, -174.1733, -125.6471, -181.7380, -145.7614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7320, device='cuda:0', dtype=torch.float64)
tensor([-208.7110, -174.1569, -127.9445, -181.2594, -146.7759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6443, device='cuda:0', dtype=torch.float64)
tensor([-208.9641, -173.7652, -130.1463, -180.1278, -147.3242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6950, device='cuda:0', dtype=torch.float64)
tensor([-208.6134, -173.7866, -131.5596, -178.5051, -147.4173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7398, device='cuda:0', dtype=torch.float64)
tensor([-207.6296, -174.1743, -132.4959, -177.0503, -147.6277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8269, device='cuda:0', dtype=torch.float64)
tensor([-205.9532, -175.3023, -132.0643, -175.1561, -147.6780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7896, device='cuda:0', dtype=torch.float64)
tensor([-204.5797, -177.0702, -131.1824, -173.7024, -148.2979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6778, device='cuda:0', dtype=torch.float64)
tensor([-203.4280, -178.5556, -130.3647, -172.1851, -148.5108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7253, device='cuda:0', dtype=torch.float64)
tensor([-201.2578, -178.7124, -129.9070, -169.6979, -147.7128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7460, device='cuda:0', dtype=torch.float64)
tensor([-199.9721, -178.1596, -129.7044, -167.5418, -146.8931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8190, device='cuda:0', dtype=torch.float64)
tensor([-199.0211, -177.3420, -129.8126, -165.1778, -146.0363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7403, device='cuda:0', dtype=torch.float64)
tensor([-197.7262, -175.6569, -130.4184, -163.0059, -144.1711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7057, device='cuda:0', dtype=torch.float64)
tensor([-196.6239, -172.9828, -131.4485, -160.9379, -141.8407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6856, device='cuda:0', dtype=torch.float64)
tensor([-195.5430, -171.0611, -132.5484, -158.8721, -139.7525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6760, device='cuda:0', dtype=torch.float64)
tensor([-194.9772, -169.4105, -133.7526, -157.1894, -137.9833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6994, device='cuda:0', dtype=torch.float64)
tensor([-194.2219, -167.1611, -134.6667, -155.7507, -135.9826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7308, device='cuda:0', dtype=torch.float64)
tensor([-193.5737, -164.3533, -135.2984, -154.1652, -133.3416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5301, device='cuda:0', dtype=torch.float64)
tensor([-193.2005, -161.6514, -135.5730, -152.7705, -130.8397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7651, device='cuda:0', dtype=torch.float64)
tensor([-193.0654, -159.1247, -135.3482, -150.8507, -128.0086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7341, device='cuda:0', dtype=torch.float64)
tensor([-193.5114, -156.0804, -135.6828, -149.7010, -126.4496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6638, device='cuda:0', dtype=torch.float64)
tensor([-193.8470, -153.4830, -135.5268, -148.5426, -124.9913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5902, device='cuda:0', dtype=torch.float64)
tensor([-193.8937, -150.5092, -135.3825, -147.2069, -123.1743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6088, device='cuda:0', dtype=torch.float64)
tensor([-193.9090, -148.4483, -135.4363, -145.8094, -121.7982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7220, device='cuda:0', dtype=torch.float64)
tensor([-192.9853, -147.3025, -135.4405, -144.7181, -121.2270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6669, device='cuda:0', dtype=torch.float64)
tensor([-191.9415, -145.2075, -135.3701, -143.0263, -120.3899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6536, device='cuda:0', dtype=torch.float64)
tensor([-191.5262, -142.8906, -135.9926, -141.8539, -119.6551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7490, device='cuda:0', dtype=torch.float64)
tensor([-191.2489, -141.0208, -136.2219, -140.6432, -119.1737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7336, device='cuda:0', dtype=torch.float64)
tensor([-190.7638, -140.1764, -135.7180, -139.4412, -118.9382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7545, device='cuda:0', dtype=torch.float64)
tensor([-189.8758, -139.7372, -135.8780, -137.8371, -118.6886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7175, device='cuda:0', dtype=torch.float64)
tensor([-189.4940, -138.9197, -136.6390, -136.2131, -118.2179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6104, device='cuda:0', dtype=torch.float64)
tensor([-188.9777, -138.5629, -136.9772, -134.8348, -117.8302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5725, device='cuda:0', dtype=torch.float64)
tensor([-188.5422, -138.3423, -137.3011, -133.0327, -117.2840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6140, device='cuda:0', dtype=torch.float64)
tensor([-188.0347, -138.6131, -137.0727, -131.3108, -117.4092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5386, device='cuda:0', dtype=torch.float64)
tensor([-187.8671, -138.9254, -136.9732, -129.6061, -117.5533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7011, device='cuda:0', dtype=torch.float64)
tensor([-188.2450, -138.8389, -136.7507, -128.1657, -117.2134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6685, device='cuda:0', dtype=torch.float64)
tensor([-189.2642, -139.5533, -136.0462, -126.6599, -117.2482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7123, device='cuda:0', dtype=torch.float64)
tensor([-190.2656, -140.1819, -135.4877, -125.9753, -118.2352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6235, device='cuda:0', dtype=torch.float64)
tensor([-191.2653, -140.9623, -135.5913, -124.8196, -118.9546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6724, device='cuda:0', dtype=torch.float64)
tensor([-191.4004, -141.4700, -135.6826, -123.8738, -119.5712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6382, device='cuda:0', dtype=torch.float64)
tensor([-191.5384, -141.6620, -135.5117, -123.2365, -119.8244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6581, device='cuda:0', dtype=torch.float64)
tensor([-192.0193, -142.2469, -135.7837, -123.0798, -119.8735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6082, device='cuda:0', dtype=torch.float64)
tensor([-193.0952, -143.0873, -135.8623, -123.6302, -120.0390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6896, device='cuda:0', dtype=torch.float64)
tensor([-194.5147, -144.2279, -135.9406, -124.4260, -120.3110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6778, device='cuda:0', dtype=torch.float64)
tensor([-195.6976, -145.7548, -136.0856, -125.5883, -120.6950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6757, device='cuda:0', dtype=torch.float64)
tensor([-196.0530, -146.8770, -136.1146, -126.2274, -121.1269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7181, device='cuda:0', dtype=torch.float64)
tensor([-195.8306, -147.8043, -136.0287, -127.1010, -121.3012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5899, device='cuda:0', dtype=torch.float64)
tensor([-196.0503, -148.9523, -135.9211, -127.4099, -121.3300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7325, device='cuda:0', dtype=torch.float64)
tensor([-196.0354, -149.3961, -136.5735, -127.9349, -121.1918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6203, device='cuda:0', dtype=torch.float64)
tensor([-196.3911, -149.8559, -137.4865, -128.0025, -121.3062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7273, device='cuda:0', dtype=torch.float64)
tensor([-196.3350, -150.0077, -138.2431, -128.6805, -121.3219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6180, device='cuda:0', dtype=torch.float64)
tensor([-196.5674, -150.6845, -139.0725, -129.5991, -121.9970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6090, device='cuda:0', dtype=torch.float64)
tensor([-196.8711, -151.1173, -140.2850, -130.8393, -122.6905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7074, device='cuda:0', dtype=torch.float64)
tensor([-197.4449, -152.5784, -141.6603, -133.0820, -124.3985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6471, device='cuda:0', dtype=torch.float64)
tensor([-198.9079, -154.1761, -142.6241, -135.6486, -125.8521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6133, device='cuda:0', dtype=torch.float64)
tensor([-200.5665, -155.7248, -143.3479, -136.7845, -127.1243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5633, device='cuda:0', dtype=torch.float64)
tensor([-202.1463, -156.8733, -143.4165, -137.8005, -127.9917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5925, device='cuda:0', dtype=torch.float64)
tensor([-203.8443, -157.8239, -142.7461, -138.7118, -128.8608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5693, device='cuda:0', dtype=torch.float64)
tensor([-205.3001, -159.3796, -142.5317, -139.9255, -129.7104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5739, device='cuda:0', dtype=torch.float64)
tensor([-206.5464, -160.8028, -142.4282, -141.1876, -131.2774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6697, device='cuda:0', dtype=torch.float64)
tensor([-208.0628, -162.1444, -142.6177, -142.8546, -133.0594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7069, device='cuda:0', dtype=torch.float64)
tensor([-210.7013, -163.9733, -142.3796, -144.7372, -136.0144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5183, device='cuda:0', dtype=torch.float64)
tensor([-213.0969, -165.9214, -142.3467, -146.2400, -139.2521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6252, device='cuda:0', dtype=torch.float64)
tensor([-215.0905, -167.5056, -142.3298, -147.9387, -141.4335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6489, device='cuda:0', dtype=torch.float64)
tensor([-217.2111, -169.4965, -142.4997, -149.9012, -143.8802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5351, device='cuda:0', dtype=torch.float64)
tensor([-219.6796, -171.0767, -142.5561, -151.1603, -146.2445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6067, device='cuda:0', dtype=torch.float64)
tensor([-222.9224, -173.2217, -142.1174, -153.0208, -148.8781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6981, device='cuda:0', dtype=torch.float64)
tensor([-226.2176, -175.3415, -141.6385, -154.4014, -151.7378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7686, device='cuda:0', dtype=torch.float64)
tensor([-228.9527, -176.7037, -141.2065, -155.0839, -154.3292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6827, device='cuda:0', dtype=torch.float64)
tensor([-231.4011, -177.3167, -141.6824, -155.0880, -156.9118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6381, device='cuda:0', dtype=torch.float64)
tensor([-233.1852, -178.0615, -142.5372, -154.2997, -159.4944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7054, device='cuda:0', dtype=torch.float64)
tensor([-235.4537, -178.5640, -144.1634, -154.3146, -162.6069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7290, device='cuda:0', dtype=torch.float64)
tensor([-236.9676, -178.4038, -145.8968, -154.1988, -164.4796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5514, device='cuda:0', dtype=torch.float64)
tensor([-238.2982, -178.2668, -147.6272, -153.5597, -166.1315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5387, device='cuda:0', dtype=torch.float64)
tensor([-240.0594, -177.5226, -148.9701, -152.7339, -167.4361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6045, device='cuda:0', dtype=torch.float64)
tensor([-242.0369, -176.9364, -149.5586, -152.1863, -168.4898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5956, device='cuda:0', dtype=torch.float64)
tensor([-244.0379, -176.2564, -150.0820, -151.9771, -169.3110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6130, device='cuda:0', dtype=torch.float64)
tensor([-245.9931, -176.2568, -150.5007, -151.5806, -170.4421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5737, device='cuda:0', dtype=torch.float64)
tensor([-247.9478, -176.4908, -150.7703, -152.2286, -171.8020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5192, device='cuda:0', dtype=torch.float64)
tensor([-250.3703, -177.4190, -150.6643, -153.0816, -173.1728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5123, device='cuda:0', dtype=torch.float64)
tensor([-251.8550, -178.1532, -151.0361, -153.3290, -174.3713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5391, device='cuda:0', dtype=torch.float64)
tensor([-252.6565, -178.4977, -151.3119, -153.2257, -174.8523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4913, device='cuda:0', dtype=torch.float64)
tensor([-254.0349, -178.8425, -151.4852, -153.6639, -175.4931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6604, device='cuda:0', dtype=torch.float64)
tensor([-254.3252, -178.3069, -152.2047, -153.7934, -175.5211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6091, device='cuda:0', dtype=torch.float64)
tensor([-254.1061, -177.1232, -153.0311, -153.4541, -174.8538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6242, device='cuda:0', dtype=torch.float64)
tensor([-254.1900, -176.0852, -154.3736, -152.7824, -174.3505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5232, device='cuda:0', dtype=torch.float64)
tensor([-254.5544, -175.0273, -155.6837, -152.3059, -173.8044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5282, device='cuda:0', dtype=torch.float64)
tensor([-254.8619, -174.3684, -156.3308, -152.2138, -173.4479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6071, device='cuda:0', dtype=torch.float64)
tensor([-255.6780, -174.1949, -156.9027, -152.5030, -173.1535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6599, device='cuda:0', dtype=torch.float64)
tensor([-255.9918, -173.9698, -157.2598, -152.5377, -172.6397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5056, device='cuda:0', dtype=torch.float64)
tensor([-256.7487, -173.9391, -157.6154, -152.3903, -172.4131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6900, device='cuda:0', dtype=torch.float64)
tensor([-257.9029, -173.8955, -157.8615, -151.5246, -172.3179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6596, device='cuda:0', dtype=torch.float64)
tensor([-258.8821, -173.4855, -157.6002, -150.8279, -171.8370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5272, device='cuda:0', dtype=torch.float64)
tensor([-260.4144, -173.4086, -157.3890, -150.3072, -172.2749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4788, device='cuda:0', dtype=torch.float64)
tensor([-260.7827, -173.2701, -157.5237, -149.3055, -172.3314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4652, device='cuda:0', dtype=torch.float64)
tensor([-261.1231, -172.6759, -157.7783, -147.5675, -171.6550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4532, device='cuda:0', dtype=torch.float64)
tensor([-261.5235, -172.0020, -157.8927, -145.6616, -170.5694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5290, device='cuda:0', dtype=torch.float64)
tensor([-261.8041, -171.4266, -158.3762, -144.0534, -170.0838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5741, device='cuda:0', dtype=torch.float64)
tensor([-261.7869, -170.4727, -158.7161, -141.9340, -169.0355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5244, device='cuda:0', dtype=torch.float64)
tensor([-262.4571, -170.4102, -158.8717, -140.4856, -168.9702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4832, device='cuda:0', dtype=torch.float64)
tensor([-262.9321, -170.1565, -159.1151, -139.1205, -168.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4995, device='cuda:0', dtype=torch.float64)
tensor([-263.3455, -169.7008, -159.7667, -137.7006, -169.2558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4735, device='cuda:0', dtype=torch.float64)
tensor([-263.2711, -169.3142, -160.0983, -136.1128, -169.1885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5945, device='cuda:0', dtype=torch.float64)
tensor([-263.6723, -169.5844, -161.1079, -135.3236, -169.2362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5878, device='cuda:0', dtype=torch.float64)
tensor([-264.7093, -170.2495, -161.9495, -134.8066, -169.5396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4693, device='cuda:0', dtype=torch.float64)
tensor([-265.9159, -170.9403, -162.9954, -134.4060, -169.5991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4766, device='cuda:0', dtype=torch.float64)
tensor([-266.8716, -171.4203, -163.4774, -133.7194, -169.2284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4864, device='cuda:0', dtype=torch.float64)
tensor([-267.6687, -172.0207, -163.8722, -132.8144, -168.7214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5685, device='cuda:0', dtype=torch.float64)
tensor([-269.1403, -173.1004, -163.9929, -132.6502, -168.9267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5223, device='cuda:0', dtype=torch.float64)
tensor([-270.9877, -174.4407, -164.2022, -133.1397, -169.6548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5071, device='cuda:0', dtype=torch.float64)
tensor([-273.5995, -175.4188, -164.7385, -133.5068, -170.3588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4387, device='cuda:0', dtype=torch.float64)
tensor([-275.8248, -176.0892, -164.8713, -133.7445, -170.5439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5886, device='cuda:0', dtype=torch.float64)
tensor([-277.8781, -175.9392, -165.0448, -133.2838, -170.4926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4733, device='cuda:0', dtype=torch.float64)
tensor([-279.2036, -175.5378, -165.0153, -132.6174, -169.9056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5598, device='cuda:0', dtype=torch.float64)
tensor([-280.4171, -174.6658, -165.2360, -131.8062, -168.8206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5209, device='cuda:0', dtype=torch.float64)
tensor([-281.8728, -173.9877, -165.5419, -131.2928, -168.4798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5781, device='cuda:0', dtype=torch.float64)
tensor([-283.2537, -173.2021, -165.7233, -131.3531, -168.1974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5774, device='cuda:0', dtype=torch.float64)
tensor([-284.7067, -172.5777, -166.1263, -131.8505, -168.2940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5102, device='cuda:0', dtype=torch.float64)
tensor([-284.9621, -171.5893, -166.5533, -131.9181, -167.6711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5414, device='cuda:0', dtype=torch.float64)
tensor([-285.4450, -170.3796, -166.8815, -131.6372, -166.4298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4671, device='cuda:0', dtype=torch.float64)
tensor([-285.2417, -169.4563, -167.4372, -131.4774, -165.7756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4162, device='cuda:0', dtype=torch.float64)
tensor([-285.0162, -169.1786, -167.7460, -131.6137, -165.2184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4719, device='cuda:0', dtype=torch.float64)
tensor([-285.2100, -169.1321, -167.3873, -131.4796, -164.7015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4892, device='cuda:0', dtype=torch.float64)
tensor([-286.0372, -169.1413, -167.4120, -131.4294, -164.7950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5256, device='cuda:0', dtype=torch.float64)
tensor([-287.1603, -169.2706, -167.8357, -131.4193, -165.1075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6199, device='cuda:0', dtype=torch.float64)
tensor([-288.7040, -169.0822, -169.1460, -130.8582, -164.9743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5200, device='cuda:0', dtype=torch.float64)
tensor([-289.9922, -168.7756, -170.9195, -130.0259, -164.6687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4529, device='cuda:0', dtype=torch.float64)
tensor([-291.4148, -169.0542, -172.5501, -129.1152, -164.2661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4306, device='cuda:0', dtype=torch.float64)
tensor([-293.2129, -169.3829, -174.0077, -128.1671, -164.1942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4783, device='cuda:0', dtype=torch.float64)
tensor([-294.5299, -169.5913, -175.3437, -127.3501, -164.0588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4426, device='cuda:0', dtype=torch.float64)
tensor([-296.2561, -169.5709, -176.9827, -126.7520, -163.6513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4569, device='cuda:0', dtype=torch.float64)
tensor([-298.3814, -169.3859, -178.9800, -125.1553, -163.5033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4098, device='cuda:0', dtype=torch.float64)
tensor([-300.5650, -169.5883, -180.6864, -123.6861, -163.5358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4555, device='cuda:0', dtype=torch.float64)
tensor([-302.9774, -169.3505, -183.0890, -121.6622, -163.0396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5988, device='cuda:0', dtype=torch.float64)
tensor([-305.5507, -169.4474, -184.7463, -120.2224, -162.8894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4526, device='cuda:0', dtype=torch.float64)
tensor([-307.7609, -169.6425, -186.1571, -118.7457, -162.4931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4848, device='cuda:0', dtype=torch.float64)
tensor([-309.6901, -168.9628, -188.2133, -116.7766, -161.2434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4730, device='cuda:0', dtype=torch.float64)
tensor([-311.8184, -168.3379, -190.7909, -114.9226, -160.9632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3808, device='cuda:0', dtype=torch.float64)
tensor([-314.0098, -167.7973, -192.8873, -113.5400, -160.7970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5156, device='cuda:0', dtype=torch.float64)
tensor([-316.2660, -167.5658, -195.0549, -112.4808, -160.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4994, device='cuda:0', dtype=torch.float64)
tensor([-318.1255, -166.6239, -197.1189, -111.8462, -160.2298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5234, device='cuda:0', dtype=torch.float64)
tensor([-319.7043, -165.7226, -199.1154, -111.3663, -160.0724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4164, device='cuda:0', dtype=torch.float64)
tensor([-320.7960, -165.0537, -200.4700, -111.5667, -160.2367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4609, device='cuda:0', dtype=torch.float64)
tensor([-321.5920, -164.4642, -202.2772, -111.1114, -160.3844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5691, device='cuda:0', dtype=torch.float64)
tensor([-321.6739, -164.9082, -203.2863, -111.1384, -161.4798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4565, device='cuda:0', dtype=torch.float64)
tensor([-321.9283, -165.7535, -204.3384, -111.2151, -162.9448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4612, device='cuda:0', dtype=torch.float64)
tensor([-322.6577, -166.4354, -204.9209, -111.3246, -163.5432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5983, device='cuda:0', dtype=torch.float64)
tensor([-323.5357, -167.2305, -206.0607, -110.9692, -163.7493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5309, device='cuda:0', dtype=torch.float64)
tensor([-324.3257, -167.9724, -207.2992, -110.4257, -164.0714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5235, device='cuda:0', dtype=torch.float64)
tensor([-325.2439, -168.6405, -208.0324, -110.1388, -164.4596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4935, device='cuda:0', dtype=torch.float64)
tensor([-325.7507, -169.3049, -208.1998, -109.7562, -164.4221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5188, device='cuda:0', dtype=torch.float64)
tensor([-326.0965, -169.4127, -209.2282, -108.9515, -164.4522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5691, device='cuda:0', dtype=torch.float64)
tensor([-326.5093, -168.9455, -210.5793, -107.3226, -163.9876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6045, device='cuda:0', dtype=torch.float64)
tensor([-327.1812, -168.1831, -212.8248, -105.6890, -162.8501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5374, device='cuda:0', dtype=torch.float64)
tensor([-329.3780, -168.3125, -215.4528, -103.9266, -162.4048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4513, device='cuda:0', dtype=torch.float64)
tensor([-330.5457, -168.6923, -217.8678, -102.5888, -162.2991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4508, device='cuda:0', dtype=torch.float64)
tensor([-331.9236, -169.3256, -220.8453, -101.2919, -162.9561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4933, device='cuda:0', dtype=torch.float64)
tensor([-333.0695, -169.6030, -223.7807, -100.4375, -163.8907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4488, device='cuda:0', dtype=torch.float64)
tensor([-334.5466, -170.2141, -227.3185, -100.2226, -165.5797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4427, device='cuda:0', dtype=torch.float64)
tensor([-335.9608, -170.9637, -230.3610, -100.8958, -166.6097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4565, device='cuda:0', dtype=torch.float64)
tensor([-336.8656, -172.2686, -232.8289, -101.9872, -168.4248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4990, device='cuda:0', dtype=torch.float64)
tensor([-337.6382, -173.1821, -234.7779, -103.3550, -169.4220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4292, device='cuda:0', dtype=torch.float64)
tensor([-338.9092, -174.1620, -236.9284, -104.3905, -170.8475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4785, device='cuda:0', dtype=torch.float64)
tensor([-339.3626, -174.3955, -238.7255, -105.2379, -171.7379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4725, device='cuda:0', dtype=torch.float64)
tensor([-339.4540, -174.0209, -240.9548, -105.7028, -172.8490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4237, device='cuda:0', dtype=torch.float64)
tensor([-340.1148, -173.5017, -243.3585, -105.9841, -173.9716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4073, device='cuda:0', dtype=torch.float64)
tensor([-340.7260, -173.0092, -245.6613, -106.2649, -175.3366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3705, device='cuda:0', dtype=torch.float64)
tensor([-342.1332, -173.4289, -247.9654, -106.8660, -177.0165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4134, device='cuda:0', dtype=torch.float64)
tensor([-343.2378, -173.7631, -250.1722, -107.9394, -179.2173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3963, device='cuda:0', dtype=torch.float64)
tensor([-344.2286, -173.9876, -251.9061, -109.3156, -180.9891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4746, device='cuda:0', dtype=torch.float64)
tensor([-345.4838, -175.0318, -253.9196, -111.3310, -183.6879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4202, device='cuda:0', dtype=torch.float64)
tensor([-346.8990, -176.1187, -256.1371, -113.4729, -187.2019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4187, device='cuda:0', dtype=torch.float64)
tensor([-348.9237, -177.4860, -259.1159, -115.3156, -191.7724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4513, device='cuda:0', dtype=torch.float64)
tensor([-350.5953, -178.4729, -262.1714, -117.0292, -196.4187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3631, device='cuda:0', dtype=torch.float64)
tensor([-352.8162, -179.1916, -265.1190, -119.1490, -200.6674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3634, device='cuda:0', dtype=torch.float64)
tensor([-354.7617, -179.7328, -267.5111, -121.3713, -204.6145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4319, device='cuda:0', dtype=torch.float64)
tensor([-356.9055, -180.7061, -270.4288, -123.8852, -209.2237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3886, device='cuda:0', dtype=torch.float64)
tensor([-359.9568, -181.3531, -274.3448, -125.8392, -214.3915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3003, device='cuda:0', dtype=torch.float64)
tensor([-363.2868, -181.6512, -278.2279, -127.6249, -218.8583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4338, device='cuda:0', dtype=torch.float64)
tensor([-366.1691, -182.0070, -282.2791, -128.7460, -223.3164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3615, device='cuda:0', dtype=torch.float64)
tensor([-368.6497, -182.7457, -286.0614, -129.6936, -227.0804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3362, device='cuda:0', dtype=torch.float64)
tensor([-370.2659, -183.4119, -290.0218, -130.5865, -231.1332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3359, device='cuda:0', dtype=torch.float64)
tensor([-371.7291, -184.1182, -294.0665, -131.7466, -235.7905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3605, device='cuda:0', dtype=torch.float64)
tensor([-372.2958, -184.8399, -297.1359, -132.4164, -239.8403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3419, device='cuda:0', dtype=torch.float64)
tensor([-373.3504, -185.9107, -299.6970, -133.1810, -244.3393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3362, device='cuda:0', dtype=torch.float64)
tensor([-373.7904, -186.4027, -301.6096, -133.7542, -247.5457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3760, device='cuda:0', dtype=torch.float64)
tensor([-373.9227, -186.7401, -303.7074, -134.2585, -250.4806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3654, device='cuda:0', dtype=torch.float64)
tensor([-373.3166, -186.5916, -305.0905, -134.6844, -252.4896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3479, device='cuda:0', dtype=torch.float64)
tensor([-372.3937, -186.0844, -305.1801, -135.1213, -253.1894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3547, device='cuda:0', dtype=torch.float64)
tensor([-371.9453, -185.4735, -304.5020, -135.4138, -253.1589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3040, device='cuda:0', dtype=torch.float64)
tensor([-371.1584, -184.6360, -303.1341, -135.7161, -252.2663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2973, device='cuda:0', dtype=torch.float64)
tensor([-370.0266, -183.4071, -302.0245, -136.0546, -250.8159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3210, device='cuda:0', dtype=torch.float64)
tensor([-369.8164, -182.7199, -301.6152, -136.8921, -250.5289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3399, device='cuda:0', dtype=torch.float64)
tensor([-369.7561, -181.6928, -301.0621, -137.8261, -248.8002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3316, device='cuda:0', dtype=torch.float64)
tensor([-369.9730, -180.6301, -300.7595, -138.7925, -248.0285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3058, device='cuda:0', dtype=torch.float64)
tensor([-370.6332, -179.9720, -301.3396, -140.0265, -248.7234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3674, device='cuda:0', dtype=torch.float64)
tensor([-371.6730, -179.8711, -303.0366, -141.7441, -250.9815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3211, device='cuda:0', dtype=torch.float64)
tensor([-372.9724, -180.4086, -304.7302, -143.0727, -254.0616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3019, device='cuda:0', dtype=torch.float64)
tensor([-373.6787, -181.5254, -307.0293, -144.8952, -258.0557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2821, device='cuda:0', dtype=torch.float64)
tensor([-374.3921, -183.1688, -309.5986, -147.1992, -263.0428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3478, device='cuda:0', dtype=torch.float64)
tensor([-374.5983, -185.1228, -312.7954, -149.1887, -268.4073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2931, device='cuda:0', dtype=torch.float64)
tensor([-374.9604, -187.2575, -316.1879, -151.0651, -273.0281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2762, device='cuda:0', dtype=torch.float64)
tensor([-375.6854, -189.9173, -319.6336, -152.7347, -277.8306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2641, device='cuda:0', dtype=torch.float64)
tensor([-376.4399, -192.6154, -322.6569, -154.2003, -282.2088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3053, device='cuda:0', dtype=torch.float64)
tensor([-376.6390, -194.8614, -326.3298, -155.6948, -285.8004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2504, device='cuda:0', dtype=torch.float64)
tensor([-376.2474, -196.4785, -328.1827, -157.0910, -288.3594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2174, device='cuda:0', dtype=torch.float64)
tensor([-375.5191, -197.7078, -329.3869, -158.1713, -289.8773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2362, device='cuda:0', dtype=torch.float64)
tensor([-375.0459, -199.1076, -330.2613, -158.6963, -291.6214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3411, device='cuda:0', dtype=torch.float64)
tensor([-374.1821, -200.4937, -330.8413, -159.2007, -293.2953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2203, device='cuda:0', dtype=torch.float64)
tensor([-373.0767, -201.7261, -330.7295, -159.6713, -294.4355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2421, device='cuda:0', dtype=torch.float64)
tensor([-371.6509, -202.6696, -330.9920, -160.0366, -295.1135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2734, device='cuda:0', dtype=torch.float64)
tensor([-370.9773, -204.3052, -332.2172, -160.3955, -296.6646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2537, device='cuda:0', dtype=torch.float64)
tensor([-370.7400, -205.4030, -333.1041, -160.7292, -297.6308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1939, device='cuda:0', dtype=torch.float64)
tensor([-370.1132, -206.3220, -334.0512, -161.2205, -298.6069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2658, device='cuda:0', dtype=torch.float64)
tensor([-370.0606, -207.8544, -335.5424, -161.8068, -300.6874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1895, device='cuda:0', dtype=torch.float64)
tensor([-370.2129, -209.5650, -336.9569, -162.3748, -302.9247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2270, device='cuda:0', dtype=torch.float64)
tensor([-370.6389, -210.8527, -336.9464, -162.8983, -304.8564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2273, device='cuda:0', dtype=torch.float64)
tensor([-371.2307, -211.9380, -335.7740, -163.2395, -306.2957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2420, device='cuda:0', dtype=torch.float64)
tensor([-371.7045, -212.7894, -334.7360, -163.6267, -307.6093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2221, device='cuda:0', dtype=torch.float64)
tensor([-372.2391, -213.4220, -333.5425, -163.7857, -308.3034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2216, device='cuda:0', dtype=torch.float64)
tensor([-372.7148, -214.1254, -332.2036, -164.1316, -308.7981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2304, device='cuda:0', dtype=torch.float64)
tensor([-372.9029, -214.6417, -331.3771, -164.2450, -309.2261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2331, device='cuda:0', dtype=torch.float64)
tensor([-372.4753, -214.6632, -331.6876, -164.7596, -309.2122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2126, device='cuda:0', dtype=torch.float64)
tensor([-372.3139, -214.3497, -331.4458, -165.1740, -308.6910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2349, device='cuda:0', dtype=torch.float64)
tensor([-372.0260, -213.9327, -331.4802, -165.3925, -307.9068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2586, device='cuda:0', dtype=torch.float64)
tensor([-372.7081, -214.6367, -332.4485, -165.5039, -308.9124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2123, device='cuda:0', dtype=torch.float64)
tensor([-373.7844, -215.8765, -333.2941, -165.6217, -310.4976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2187, device='cuda:0', dtype=torch.float64)
tensor([-375.0405, -217.5507, -334.5236, -165.7378, -312.9360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1909, device='cuda:0', dtype=torch.float64)
tensor([-376.1951, -219.0005, -334.7346, -165.9778, -315.0966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1890, device='cuda:0', dtype=torch.float64)
tensor([-377.1702, -220.1289, -335.1566, -166.5298, -317.0269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2262, device='cuda:0', dtype=torch.float64)
tensor([-377.9825, -220.6892, -335.4921, -167.1641, -318.6711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1860, device='cuda:0', dtype=torch.float64)
tensor([-378.5069, -221.4496, -335.3974, -167.6880, -320.4028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2254, device='cuda:0', dtype=torch.float64)
tensor([-378.7031, -222.0840, -334.7829, -168.3421, -322.1069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1710, device='cuda:0', dtype=torch.float64)
tensor([-378.9070, -222.8948, -334.0707, -168.9562, -323.9135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2034, device='cuda:0', dtype=torch.float64)
tensor([-378.6287, -222.9302, -332.9618, -169.1523, -324.2510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1517, device='cuda:0', dtype=torch.float64)
tensor([-378.2397, -222.8620, -331.7943, -169.2824, -324.2210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1663, device='cuda:0', dtype=torch.float64)
tensor([-377.9479, -222.4848, -331.1160, -169.4799, -323.8694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1562, device='cuda:0', dtype=torch.float64)
tensor([-378.0787, -221.9692, -330.4213, -169.4772, -323.5256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1797, device='cuda:0', dtype=torch.float64)
tensor([-377.8086, -221.2856, -329.9637, -169.4871, -322.7932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1921, device='cuda:0', dtype=torch.float64)
tensor([-377.4299, -220.3584, -329.9134, -169.7152, -321.6911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1565, device='cuda:0', dtype=torch.float64)
tensor([-376.8064, -219.5574, -330.0386, -170.0351, -320.6466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1839, device='cuda:0', dtype=torch.float64)
tensor([-375.4046, -218.3968, -330.2157, -170.5784, -318.9278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1933, device='cuda:0', dtype=torch.float64)
tensor([-374.7176, -218.0172, -330.1864, -170.8147, -317.7338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2204, device='cuda:0', dtype=torch.float64)
tensor([-374.0316, -218.2068, -329.6139, -170.9796, -316.7208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1822, device='cuda:0', dtype=torch.float64)
tensor([-373.2416, -217.7271, -328.3971, -171.1054, -315.1296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1601, device='cuda:0', dtype=torch.float64)
tensor([-372.2037, -217.1752, -328.4378, -171.2856, -313.8090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1663, device='cuda:0', dtype=torch.float64)
tensor([-371.2123, -216.7230, -328.3047, -171.3213, -313.0334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1994, device='cuda:0', dtype=torch.float64)
tensor([-370.1585, -216.5691, -327.8766, -171.1582, -312.4213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1708, device='cuda:0', dtype=torch.float64)
tensor([-368.6271, -216.1068, -327.4346, -170.9204, -311.8710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1691, device='cuda:0', dtype=torch.float64)
tensor([-367.8503, -216.1731, -326.7531, -170.6489, -311.7581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1652, device='cuda:0', dtype=torch.float64)
tensor([-367.0110, -216.6886, -325.6409, -170.1771, -312.0234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1556, device='cuda:0', dtype=torch.float64)
tensor([-366.1932, -216.9608, -324.4300, -169.5242, -312.0797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1496, device='cuda:0', dtype=torch.float64)
tensor([-365.4526, -217.3433, -323.0055, -168.8073, -312.3582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1558, device='cuda:0', dtype=torch.float64)
tensor([-364.7448, -217.4664, -321.2133, -168.1773, -312.2211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1584, device='cuda:0', dtype=torch.float64)
tensor([-364.2127, -217.2525, -319.7402, -167.5010, -311.8035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1522, device='cuda:0', dtype=torch.float64)
tensor([-363.9879, -217.2704, -318.0309, -166.8900, -311.4314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1495, device='cuda:0', dtype=torch.float64)
tensor([-363.3269, -216.8511, -316.5261, -166.4499, -310.5443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1344, device='cuda:0', dtype=torch.float64)
tensor([-362.9933, -217.0400, -315.3444, -166.2571, -310.2131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1706, device='cuda:0', dtype=torch.float64)
tensor([-362.6818, -216.9814, -314.3447, -166.3051, -309.5661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1834, device='cuda:0', dtype=torch.float64)
tensor([-362.2342, -216.7904, -313.8736, -166.5175, -308.9841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1672, device='cuda:0', dtype=torch.float64)
tensor([-361.6511, -216.3383, -313.1095, -166.9599, -308.2173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2022, device='cuda:0', dtype=torch.float64)
tensor([-361.4254, -216.0726, -312.1508, -167.3940, -307.5967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1509, device='cuda:0', dtype=torch.float64)
tensor([-360.9984, -215.7342, -310.7831, -168.0831, -306.8014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1699, device='cuda:0', dtype=torch.float64)
tensor([-360.4979, -215.4335, -309.9046, -168.9015, -305.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1679, device='cuda:0', dtype=torch.float64)
tensor([-360.0466, -215.2214, -309.2991, -169.7206, -305.1053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1570, device='cuda:0', dtype=torch.float64)
tensor([-359.3009, -214.7240, -308.9979, -170.5096, -304.0154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1374, device='cuda:0', dtype=torch.float64)
tensor([-358.7127, -214.5084, -309.5696, -171.1411, -303.3013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1865, device='cuda:0', dtype=torch.float64)
tensor([-358.1928, -214.8608, -310.7786, -171.7837, -303.0711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1914, device='cuda:0', dtype=torch.float64)
tensor([-357.6143, -215.3094, -312.1934, -172.3369, -303.0357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1465, device='cuda:0', dtype=torch.float64)
tensor([-356.6054, -215.4453, -313.1874, -172.8208, -302.7409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1468, device='cuda:0', dtype=torch.float64)
tensor([-355.6068, -215.2448, -313.7162, -173.4625, -302.2717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1247, device='cuda:0', dtype=torch.float64)
tensor([-354.4257, -215.1686, -314.2050, -174.0685, -301.8381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1497, device='cuda:0', dtype=torch.float64)
tensor([-353.0735, -214.9464, -314.7053, -174.5292, -301.2310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1558, device='cuda:0', dtype=torch.float64)
tensor([-351.8869, -215.2944, -315.1750, -174.6752, -300.9501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1398, device='cuda:0', dtype=torch.float64)
tensor([-351.2893, -216.3842, -315.1595, -174.6698, -301.1060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1213, device='cuda:0', dtype=torch.float64)
tensor([-350.7570, -217.9907, -314.8930, -174.5297, -301.5496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1372, device='cuda:0', dtype=torch.float64)
tensor([-350.1252, -219.6328, -314.8068, -174.3649, -301.8278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1360, device='cuda:0', dtype=torch.float64)
tensor([-349.1146, -220.8127, -314.2672, -174.3028, -301.7266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1186, device='cuda:0', dtype=torch.float64)
tensor([-348.2883, -221.9912, -313.5547, -174.1601, -301.6291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1281, device='cuda:0', dtype=torch.float64)
tensor([-348.0241, -223.7042, -312.4874, -173.7360, -301.9441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1352, device='cuda:0', dtype=torch.float64)
tensor([-347.4799, -225.1207, -311.4538, -173.4275, -301.9380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1215, device='cuda:0', dtype=torch.float64)
tensor([-346.7835, -225.7493, -310.2022, -173.1804, -301.4540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1090, device='cuda:0', dtype=torch.float64)
tensor([-346.3846, -226.3273, -308.9854, -172.9406, -300.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1213, device='cuda:0', dtype=torch.float64)
tensor([-345.9004, -226.5301, -308.0965, -172.7360, -300.3728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1394, device='cuda:0', dtype=torch.float64)
tensor([-345.4495, -226.7212, -307.0859, -172.6003, -299.8047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1432, device='cuda:0', dtype=torch.float64)
tensor([-345.1480, -227.0696, -305.7939, -172.4535, -299.0540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1186, device='cuda:0', dtype=torch.float64)
tensor([-344.7918, -227.5642, -304.7009, -172.4151, -298.4411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1285, device='cuda:0', dtype=torch.float64)
tensor([-344.5415, -227.3733, -303.1810, -172.5328, -297.4959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1022, device='cuda:0', dtype=torch.float64)
tensor([-344.2695, -227.0724, -301.6428, -172.7377, -296.6126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0976, device='cuda:0', dtype=torch.float64)
tensor([-344.3228, -227.2022, -300.6129, -172.8042, -296.0270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1408, device='cuda:0', dtype=torch.float64)
tensor([-344.3682, -227.3649, -300.1955, -172.8692, -295.6128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1199, device='cuda:0', dtype=torch.float64)
tensor([-344.4214, -227.8171, -299.7825, -172.9152, -295.5250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1052, device='cuda:0', dtype=torch.float64)
tensor([-344.4152, -228.1469, -299.5860, -173.0852, -295.3181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1284, device='cuda:0', dtype=torch.float64)
tensor([-344.5608, -228.5018, -299.0009, -173.3662, -295.0609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1114, device='cuda:0', dtype=torch.float64)
tensor([-344.3816, -228.3124, -298.7362, -173.7244, -294.6254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1292, device='cuda:0', dtype=torch.float64)
tensor([-343.7841, -228.0218, -298.7577, -174.0477, -294.0228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1597, device='cuda:0', dtype=torch.float64)
tensor([-342.8055, -227.3794, -298.8855, -174.5072, -293.3666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1091, device='cuda:0', dtype=torch.float64)
tensor([-341.8832, -227.1026, -299.3752, -175.0436, -292.8293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1111, device='cuda:0', dtype=torch.float64)
tensor([-341.0195, -226.8223, -300.1243, -175.4933, -292.4058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1437, device='cuda:0', dtype=torch.float64)
tensor([-340.2609, -226.3948, -300.4561, -176.1948, -291.8935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1287, device='cuda:0', dtype=torch.float64)
tensor([-339.6620, -226.2915, -300.4790, -176.7508, -291.4654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1129, device='cuda:0', dtype=torch.float64)
tensor([-339.3136, -226.0989, -301.0207, -177.1463, -291.1346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-339.0477, -226.2188, -301.5831, -177.5437, -290.9575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1327, device='cuda:0', dtype=torch.float64)
tensor([-338.7629, -226.3514, -302.4283, -177.8271, -290.8508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1052, device='cuda:0', dtype=torch.float64)
tensor([-338.4266, -226.3814, -303.1734, -178.0827, -290.5866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1143, device='cuda:0', dtype=torch.float64)
tensor([-338.0715, -226.5320, -303.3460, -178.3177, -290.1406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1192, device='cuda:0', dtype=torch.float64)
tensor([-337.6985, -226.8919, -303.1912, -178.4783, -289.6916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1133, device='cuda:0', dtype=torch.float64)
tensor([-337.5464, -227.4962, -302.2867, -178.3201, -289.3999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1067, device='cuda:0', dtype=torch.float64)
tensor([-337.2303, -228.4620, -301.8059, -177.9260, -289.1951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1000, device='cuda:0', dtype=torch.float64)
tensor([-336.7357, -229.0046, -301.6410, -177.4953, -288.7572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1142, device='cuda:0', dtype=torch.float64)
tensor([-336.0639, -229.7906, -301.1896, -176.9714, -288.2393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1062, device='cuda:0', dtype=torch.float64)
tensor([-335.3518, -230.5541, -300.3751, -176.4226, -287.6662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1131, device='cuda:0', dtype=torch.float64)
tensor([-334.7772, -231.3497, -299.0000, -175.8735, -287.1228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1002, device='cuda:0', dtype=torch.float64)
tensor([-333.9812, -231.6304, -297.7639, -175.5636, -286.1162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1185, device='cuda:0', dtype=torch.float64)
tensor([-333.1360, -232.0255, -296.2521, -175.3500, -285.0227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1087, device='cuda:0', dtype=torch.float64)
tensor([-332.5613, -232.7952, -294.3852, -174.9287, -284.1335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0972, device='cuda:0', dtype=torch.float64)
tensor([-331.9903, -233.4517, -292.5492, -174.6218, -283.1608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1054, device='cuda:0', dtype=torch.float64)
tensor([-331.1824, -233.5705, -291.1106, -174.6509, -281.9558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1107, device='cuda:0', dtype=torch.float64)
tensor([-330.4407, -233.8549, -289.3796, -174.7073, -280.7504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1199, device='cuda:0', dtype=torch.float64)
tensor([-329.8180, -234.2951, -287.6760, -174.8862, -279.7512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0987, device='cuda:0', dtype=torch.float64)
tensor([-328.9187, -234.1599, -286.3501, -175.2281, -278.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1235, device='cuda:0', dtype=torch.float64)
tensor([-327.9898, -234.0230, -285.2679, -175.2581, -277.2224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1029, device='cuda:0', dtype=torch.float64)
tensor([-326.9843, -233.6575, -284.0675, -175.1594, -275.9016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0966, device='cuda:0', dtype=torch.float64)
tensor([-326.2302, -233.3582, -282.8216, -174.9636, -274.8134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1229, device='cuda:0', dtype=torch.float64)
tensor([-325.7572, -233.3307, -280.8766, -174.3859, -274.0182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1209, device='cuda:0', dtype=torch.float64)
tensor([-325.1588, -233.5619, -279.0572, -173.8228, -273.3212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1040, device='cuda:0', dtype=torch.float64)
tensor([-324.6269, -233.8751, -277.4679, -173.1443, -272.8576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1087, device='cuda:0', dtype=torch.float64)
tensor([-324.2211, -234.4269, -275.4761, -172.4510, -272.4528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0933, device='cuda:0', dtype=torch.float64)
tensor([-324.0652, -235.2018, -273.3477, -171.8378, -272.1713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0986, device='cuda:0', dtype=torch.float64)
tensor([-323.9519, -236.1933, -271.3548, -171.2185, -272.0901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1076, device='cuda:0', dtype=torch.float64)
tensor([-323.9471, -237.3564, -269.2966, -170.6477, -272.2295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0905, device='cuda:0', dtype=torch.float64)
tensor([-323.9422, -237.8833, -267.1978, -170.3603, -272.1015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0992, device='cuda:0', dtype=torch.float64)
tensor([-323.8364, -238.3633, -265.4579, -170.2811, -272.0719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0876, device='cuda:0', dtype=torch.float64)
tensor([-323.5401, -238.8331, -263.9166, -170.2414, -272.0465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0966, device='cuda:0', dtype=torch.float64)
tensor([-323.2989, -238.8912, -262.1593, -170.2889, -271.7354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1026, device='cuda:0', dtype=torch.float64)
tensor([-322.7808, -238.5614, -260.5637, -170.5329, -271.0865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0830, device='cuda:0', dtype=torch.float64)
tensor([-322.4751, -238.3097, -258.8084, -170.8974, -270.5384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0928, device='cuda:0', dtype=torch.float64)
tensor([-322.0714, -237.8588, -256.9855, -171.4076, -269.7145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0846, device='cuda:0', dtype=torch.float64)
tensor([-321.9333, -237.7034, -255.2342, -171.6636, -269.0718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-321.4564, -237.4375, -253.7012, -172.0209, -268.2760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0900, device='cuda:0', dtype=torch.float64)
tensor([-321.1421, -237.3043, -252.0149, -172.3275, -267.4403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0881, device='cuda:0', dtype=torch.float64)
tensor([-320.5987, -237.0927, -250.4700, -172.6994, -266.5506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0825, device='cuda:0', dtype=torch.float64)
tensor([-320.1812, -236.7202, -249.3180, -173.1914, -265.5845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0989, device='cuda:0', dtype=torch.float64)
tensor([-319.4424, -236.0308, -248.6685, -173.9885, -264.5980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1081, device='cuda:0', dtype=torch.float64)
tensor([-318.5768, -235.1919, -248.1197, -174.5968, -263.2083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0913, device='cuda:0', dtype=torch.float64)
tensor([-317.7597, -234.5054, -247.4970, -175.1875, -261.8086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1084, device='cuda:0', dtype=torch.float64)
tensor([-316.8489, -233.8275, -246.9857, -175.7008, -260.3695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0945, device='cuda:0', dtype=torch.float64)
tensor([-315.9370, -233.2642, -246.1528, -175.8348, -258.9439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1088, device='cuda:0', dtype=torch.float64)
tensor([-315.2117, -232.9790, -245.0820, -175.9978, -257.7244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1131, device='cuda:0', dtype=torch.float64)
tensor([-314.3515, -232.7524, -244.2649, -175.9860, -256.4146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0948, device='cuda:0', dtype=torch.float64)
tensor([-313.4295, -232.3483, -243.2420, -176.1643, -255.0241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0916, device='cuda:0', dtype=torch.float64)
tensor([-312.5203, -231.7742, -242.0322, -176.5133, -253.6788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1099, device='cuda:0', dtype=torch.float64)
tensor([-311.9422, -231.3439, -240.7254, -177.2057, -252.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0889, device='cuda:0', dtype=torch.float64)
tensor([-311.6431, -231.4238, -238.9612, -177.4203, -251.8841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0986, device='cuda:0', dtype=torch.float64)
tensor([-311.4167, -231.7646, -237.0388, -177.6076, -251.3365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1113, device='cuda:0', dtype=torch.float64)
tensor([-311.6375, -232.7682, -235.1385, -177.1386, -251.3408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0873, device='cuda:0', dtype=torch.float64)
tensor([-311.8290, -233.6574, -233.3172, -176.8779, -251.3238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1009, device='cuda:0', dtype=torch.float64)
tensor([-311.8399, -234.3249, -231.6769, -176.6848, -251.1712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0882, device='cuda:0', dtype=torch.float64)
tensor([-311.7188, -234.7853, -230.2546, -176.6861, -250.8197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0918, device='cuda:0', dtype=torch.float64)
tensor([-311.6650, -235.1781, -228.8584, -176.7936, -250.5036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0993, device='cuda:0', dtype=torch.float64)
tensor([-311.1648, -235.1970, -227.9667, -176.7939, -250.0202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0853, device='cuda:0', dtype=torch.float64)
tensor([-310.6478, -235.3815, -227.0479, -176.7098, -249.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0949, device='cuda:0', dtype=torch.float64)
tensor([-310.3845, -235.7878, -225.9020, -176.7263, -249.3183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0867, device='cuda:0', dtype=torch.float64)
tensor([-310.5741, -236.7193, -224.4445, -176.7172, -249.3670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0885, device='cuda:0', dtype=torch.float64)
tensor([-310.7469, -237.7298, -222.9799, -176.5848, -249.4313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0842, device='cuda:0', dtype=torch.float64)
tensor([-310.6161, -238.3440, -221.8305, -176.5763, -249.1595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0814, device='cuda:0', dtype=torch.float64)
tensor([-310.0855, -238.4318, -221.1161, -176.5588, -248.5924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0826, device='cuda:0', dtype=torch.float64)
tensor([-309.5943, -238.5400, -220.2492, -176.4183, -248.0737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0935, device='cuda:0', dtype=torch.float64)
tensor([-308.5636, -237.8424, -219.9985, -176.6520, -247.0409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0730, device='cuda:0', dtype=torch.float64)
tensor([-307.4500, -236.8288, -219.8279, -177.1478, -245.8499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0950, device='cuda:0', dtype=torch.float64)
tensor([-306.3137, -235.7851, -219.7393, -177.5824, -244.6382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0887, device='cuda:0', dtype=torch.float64)
tensor([-305.2356, -234.7785, -220.0353, -178.0596, -243.3775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0810, device='cuda:0', dtype=torch.float64)
tensor([-304.0854, -233.7180, -220.5985, -178.8304, -242.0290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0848, device='cuda:0', dtype=torch.float64)
tensor([-303.3849, -233.2500, -220.7146, -179.4518, -241.0644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0747, device='cuda:0', dtype=torch.float64)
tensor([-302.9043, -233.1821, -220.4102, -179.8987, -240.3824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0931, device='cuda:0', dtype=torch.float64)
tensor([-302.2775, -232.8634, -220.0677, -180.3279, -239.4470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0802, device='cuda:0', dtype=torch.float64)
tensor([-301.8701, -232.7182, -219.1210, -180.5027, -238.6460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1063, device='cuda:0', dtype=torch.float64)
tensor([-301.8096, -233.0989, -217.5572, -179.9776, -238.1944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0799, device='cuda:0', dtype=torch.float64)
tensor([-301.6408, -233.4392, -215.9051, -179.4169, -237.7450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-301.2678, -233.5328, -214.5065, -178.8023, -237.2005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0875, device='cuda:0', dtype=torch.float64)
tensor([-300.9114, -233.6788, -212.9193, -178.0827, -236.6694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0797, device='cuda:0', dtype=torch.float64)
tensor([-300.6714, -233.9764, -211.2523, -177.2443, -236.1870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0804, device='cuda:0', dtype=torch.float64)
tensor([-300.0227, -233.6706, -209.9418, -176.7042, -235.3418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0844, device='cuda:0', dtype=torch.float64)
tensor([-299.4807, -233.5391, -208.5194, -176.2226, -234.6720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0637, device='cuda:0', dtype=torch.float64)
tensor([-298.9915, -233.2814, -207.2106, -175.8059, -233.9325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0781, device='cuda:0', dtype=torch.float64)
tensor([-298.7544, -233.4370, -205.8066, -175.4733, -233.4445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0707, device='cuda:0', dtype=torch.float64)
tensor([-298.3081, -233.2886, -204.7301, -175.3676, -232.7785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0734, device='cuda:0', dtype=torch.float64)
tensor([-297.5258, -232.7392, -204.1295, -175.7039, -231.9583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0819, device='cuda:0', dtype=torch.float64)
tensor([-296.5313, -232.0174, -203.5953, -176.0231, -231.0099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0788, device='cuda:0', dtype=torch.float64)
tensor([-295.5131, -231.1792, -203.1888, -176.3690, -230.0895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-294.2441, -230.1841, -203.2060, -177.0534, -229.0783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0745, device='cuda:0', dtype=torch.float64)
tensor([-292.8607, -229.0396, -203.5191, -178.0807, -227.9179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0986, device='cuda:0', dtype=torch.float64)
tensor([-291.5224, -228.1360, -203.9387, -179.0960, -226.9202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0863, device='cuda:0', dtype=torch.float64)
tensor([-290.6799, -227.9171, -204.1870, -179.9799, -226.4200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-290.2167, -228.1011, -204.0658, -180.6464, -226.2359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0769, device='cuda:0', dtype=torch.float64)
tensor([-289.7429, -228.2343, -203.8247, -181.4697, -226.0634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0681, device='cuda:0', dtype=torch.float64)
tensor([-289.1785, -228.3037, -203.8982, -182.4174, -225.9140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0605, device='cuda:0', dtype=torch.float64)
tensor([-288.5128, -228.3065, -204.0395, -183.4128, -225.7934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0666, device='cuda:0', dtype=torch.float64)
tensor([-287.9670, -228.3018, -203.7684, -184.0324, -225.7045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0751, device='cuda:0', dtype=torch.float64)
tensor([-287.2750, -228.1172, -203.7218, -184.6777, -225.5676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0757, device='cuda:0', dtype=torch.float64)
tensor([-286.5153, -227.7787, -203.6310, -185.0578, -225.3920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0760, device='cuda:0', dtype=torch.float64)
tensor([-285.8772, -227.3398, -203.1033, -184.9808, -225.0718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0663, device='cuda:0', dtype=torch.float64)
tensor([-285.3698, -227.1484, -202.4550, -184.8752, -224.9231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-284.7210, -226.6950, -202.0120, -184.8426, -224.5948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-284.2369, -226.4435, -201.3634, -184.6810, -224.3731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-284.0351, -226.5424, -200.5635, -184.5864, -224.4082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-284.0675, -227.0157, -199.4771, -184.0061, -224.7043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0666, device='cuda:0', dtype=torch.float64)
tensor([-283.8695, -227.1495, -198.6756, -183.4731, -224.6733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0870, device='cuda:0', dtype=torch.float64)
tensor([-283.7434, -227.3935, -197.7486, -182.9454, -224.9063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-283.3173, -227.3160, -197.2115, -182.6830, -224.9272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0703, device='cuda:0', dtype=torch.float64)
tensor([-282.8870, -227.4050, -196.8264, -182.6385, -225.0763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0741, device='cuda:0', dtype=torch.float64)
tensor([-282.2323, -227.3227, -196.7144, -182.8777, -225.0269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0838, device='cuda:0', dtype=torch.float64)
tensor([-281.6425, -227.4168, -196.5885, -183.2536, -225.0651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-281.2529, -227.8551, -196.3768, -183.5952, -225.2962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0718, device='cuda:0', dtype=torch.float64)
tensor([-280.2760, -227.6648, -196.5736, -184.1932, -225.0225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0696, device='cuda:0', dtype=torch.float64)
tensor([-279.2998, -227.7118, -197.0094, -185.2166, -225.0246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0696, device='cuda:0', dtype=torch.float64)
tensor([-277.8331, -226.8450, -197.7224, -186.3852, -224.4319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-276.3610, -225.9543, -198.6470, -187.6792, -223.8471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-275.1495, -225.2213, -199.2164, -188.5054, -223.3369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-273.8813, -224.3739, -199.9067, -189.7049, -222.6674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0713, device='cuda:0', dtype=torch.float64)
tensor([-272.9801, -223.9868, -200.0580, -190.3609, -222.2894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-272.2496, -223.7212, -199.8863, -190.5278, -221.9845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-271.8254, -223.9122, -199.5812, -190.2819, -222.0059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-271.5622, -224.1352, -199.0363, -189.7934, -222.0554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-271.5481, -224.7030, -198.1656, -188.9035, -222.3193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0563, device='cuda:0', dtype=torch.float64)
tensor([-271.3178, -224.8697, -197.3613, -188.0007, -222.1760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-270.9733, -224.8157, -196.6729, -187.2253, -221.8144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-270.3968, -224.3919, -196.1700, -186.6462, -221.1531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0572, device='cuda:0', dtype=torch.float64)
tensor([-270.0136, -224.1218, -195.5434, -186.0867, -220.6663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-269.3201, -223.4567, -195.3484, -185.9116, -219.9218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-268.3482, -222.4693, -195.4311, -186.2003, -218.9726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0589, device='cuda:0', dtype=torch.float64)
tensor([-267.6746, -221.7558, -195.1654, -186.2881, -218.2751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-266.7163, -220.7315, -195.2959, -186.8508, -217.4016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-265.9944, -220.2028, -195.3766, -187.2936, -216.9316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0570, device='cuda:0', dtype=torch.float64)
tensor([-265.4354, -219.8988, -195.3666, -187.7514, -216.6982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-264.9692, -219.6650, -195.2873, -188.1650, -216.5933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0638, device='cuda:0', dtype=torch.float64)
tensor([-264.6408, -219.5479, -195.0338, -188.2698, -216.5764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-264.5600, -219.7633, -194.6487, -188.3673, -216.8292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-264.4095, -220.0540, -194.4206, -188.6518, -217.1876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-264.1939, -220.3430, -194.2933, -189.0515, -217.5546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-263.8847, -220.6558, -194.3898, -189.7794, -218.0090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-263.4025, -220.6846, -194.6108, -190.7156, -218.2630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-263.0108, -220.7303, -194.8399, -191.6650, -218.5511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-262.8020, -221.0711, -195.0002, -192.2969, -219.1442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-262.2308, -220.8876, -195.3268, -193.0755, -219.2447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-261.3825, -220.3025, -195.7067, -193.7233, -218.8310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-260.8102, -219.7011, -195.5242, -193.5579, -218.1870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-260.6018, -219.4718, -195.1072, -193.1144, -217.8807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-260.1510, -219.0219, -194.9466, -193.0098, -217.4257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-259.7492, -218.5975, -194.6253, -192.8187, -217.0109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0587, device='cuda:0', dtype=torch.float64)
tensor([-259.1897, -218.0426, -194.4968, -192.7474, -216.5259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-258.7561, -217.8736, -194.5151, -192.7235, -216.4685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-258.3030, -217.5684, -194.4610, -192.6860, -216.2866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-258.1145, -217.7267, -194.2989, -192.6420, -216.6088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-257.5893, -217.5403, -194.4259, -192.7504, -216.5597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-257.1610, -217.5475, -194.4833, -192.6634, -216.6784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-256.9977, -217.9676, -194.3793, -192.5382, -217.2382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-256.7268, -218.1898, -194.2580, -192.5204, -217.5721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-256.2765, -218.2926, -194.3030, -192.4639, -217.7318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-255.7414, -218.4343, -194.4322, -192.3613, -217.8121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-254.6454, -217.8315, -194.9865, -192.6912, -217.2156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-253.6975, -217.1378, -195.2303, -192.8574, -216.4494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-252.8367, -216.3779, -195.3896, -193.0371, -215.6042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-251.9154, -215.4562, -195.5249, -193.3791, -214.5934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-251.2546, -214.7612, -195.4667, -193.6411, -213.8695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-250.7358, -214.1792, -195.4037, -193.8484, -213.2587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-250.3301, -213.7913, -195.3086, -194.0245, -212.8312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-250.2730, -213.9587, -194.8525, -193.7804, -212.8869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-250.4649, -214.5094, -194.3361, -193.3255, -213.3120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-250.8216, -215.1959, -193.7786, -192.8569, -213.9224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-251.2126, -215.8899, -193.2028, -192.3051, -214.5083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-251.9292, -216.8557, -192.3024, -191.4628, -215.3236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-252.6200, -217.7633, -191.5510, -190.8075, -216.0929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-253.1545, -218.4142, -190.8361, -190.3715, -216.5990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-253.4505, -218.9245, -190.4001, -190.2477, -217.0391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-253.4913, -219.0922, -190.1033, -190.3744, -217.2269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-253.2874, -218.9875, -189.9129, -190.6650, -217.1931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-252.6355, -218.3809, -189.9812, -191.1140, -216.7226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-252.1670, -218.0984, -190.2024, -191.9427, -216.7174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0514, device='cuda:0', dtype=torch.float64)
tensor([-251.5975, -217.6716, -190.3027, -192.4901, -216.4839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-251.0550, -217.2505, -190.3519, -192.9502, -216.1849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-250.3946, -216.8637, -190.4864, -193.4022, -215.9312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-249.7705, -216.5301, -190.6029, -193.8137, -215.7262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-249.2446, -216.2545, -190.6608, -194.3749, -215.6588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-248.5661, -215.7743, -190.6448, -194.7063, -215.2987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-248.0437, -215.6008, -190.7218, -194.9975, -215.3050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-247.6634, -215.6026, -190.7360, -195.0906, -215.4484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-247.0858, -215.5072, -190.9176, -195.2353, -215.4745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-246.6817, -215.5684, -190.9417, -195.1193, -215.6117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-246.2666, -215.3542, -190.8024, -194.8774, -215.3465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-246.3908, -215.7106, -190.4541, -194.3530, -215.6528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-246.4737, -215.8309, -189.9742, -193.5317, -215.5905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-246.4338, -215.8644, -189.6653, -192.8351, -215.4684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-246.1654, -215.6935, -189.5427, -192.2925, -215.1690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-245.8439, -215.2221, -189.1543, -191.5476, -214.4646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-245.7269, -214.9525, -188.7162, -190.7003, -213.9782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-246.0357, -215.2561, -188.3334, -189.7855, -214.0926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-246.4709, -215.8449, -188.0006, -188.9592, -214.4813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-246.6015, -216.1951, -187.8762, -188.3905, -214.7071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-246.4596, -216.0770, -187.7250, -188.0081, -214.5562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-245.5869, -215.1022, -187.7900, -187.9213, -213.6383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-244.5936, -214.0554, -188.0074, -188.0573, -212.7257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-243.4388, -212.8905, -188.3779, -188.3255, -211.6831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-242.4270, -211.9536, -188.7714, -188.6017, -210.8519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-241.6060, -211.4568, -189.1650, -188.9108, -210.4241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-241.0701, -211.3782, -189.4497, -189.0161, -210.3632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-240.6887, -211.5596, -189.7688, -189.1689, -210.6001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-240.3615, -211.8598, -190.0842, -189.2906, -210.9678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-240.3903, -212.5238, -190.3296, -189.4566, -211.7736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-239.9367, -212.6323, -190.9516, -190.1174, -212.1361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-239.2848, -212.5176, -191.7227, -191.1022, -212.3579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-238.2275, -211.7136, -192.5373, -192.3835, -211.8462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-237.4014, -211.0831, -193.1209, -193.3901, -211.4134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-236.6144, -210.5333, -193.7205, -194.3910, -211.0334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-236.4076, -210.6218, -193.9874, -194.8414, -211.3463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-236.4335, -210.8744, -194.0428, -194.9244, -211.7548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-236.6462, -211.3422, -193.9403, -194.7891, -212.4229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-236.8806, -211.6537, -193.5947, -194.2562, -212.7528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-237.0903, -211.7645, -193.0886, -193.5564, -212.7574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-237.2175, -211.6935, -192.5090, -192.7493, -212.4599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-237.3935, -211.5622, -191.8546, -191.9084, -212.0569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-237.4153, -211.3918, -191.3732, -191.2594, -211.6569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-237.0155, -210.6332, -191.0742, -190.8342, -210.6298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-236.5100, -209.8619, -190.8782, -190.6545, -209.6667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-236.3274, -209.4388, -190.4732, -190.2686, -209.1028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-236.5367, -209.4522, -189.9561, -189.6544, -208.9826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-236.4548, -209.2767, -189.7273, -189.3095, -208.6941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-236.4348, -209.3464, -189.5530, -189.0225, -208.7040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-236.2522, -209.3461, -189.4557, -188.7842, -208.6286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-236.2816, -209.6207, -189.2894, -188.4103, -208.8162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-236.3465, -210.1559, -189.3551, -188.2667, -209.3553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-236.2514, -210.4530, -189.4559, -188.1738, -209.6364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-235.8125, -210.3677, -189.6874, -188.3981, -209.6007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-235.3424, -209.9819, -189.6253, -188.4646, -209.1514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-234.7469, -209.5461, -189.7958, -188.7919, -208.7218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-234.1259, -209.1231, -190.0397, -189.1836, -208.3227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-233.5327, -208.7543, -190.3807, -189.6363, -207.9817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-232.9952, -208.4049, -190.5896, -189.9404, -207.6209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-232.7532, -208.3757, -190.6963, -190.1278, -207.6202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-232.2385, -208.2216, -190.9930, -190.3555, -207.4018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-232.0083, -208.3933, -191.1442, -190.5325, -207.5929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-231.9043, -208.5990, -191.2365, -190.5619, -207.8122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-231.7152, -208.5906, -191.2561, -190.5499, -207.7535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-231.2939, -208.4069, -191.4635, -190.7270, -207.5050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-230.9132, -208.2655, -191.6362, -190.8271, -207.3009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-230.3837, -207.9505, -191.8546, -191.0289, -206.9310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-230.1119, -207.8586, -191.7764, -190.7689, -206.7208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-229.9799, -207.8600, -191.6061, -190.4208, -206.6141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-230.0094, -207.9801, -191.2991, -189.9526, -206.6468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-230.1285, -208.2398, -191.0114, -189.5949, -206.8775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-230.2969, -208.5107, -190.7835, -189.4623, -207.2016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-230.4722, -208.5662, -190.3100, -189.2255, -207.2775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-230.6007, -208.5845, -189.9049, -189.0447, -207.2925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-230.6436, -208.4208, -189.3924, -188.7255, -207.0382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-230.9024, -208.4623, -188.7642, -188.2141, -207.0140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-231.0840, -208.5001, -188.3231, -187.9475, -207.0524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-231.0909, -208.5088, -188.1090, -187.8826, -207.1041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-231.0950, -208.4802, -187.7989, -187.7090, -207.0864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-230.8867, -208.5284, -187.7531, -187.7068, -207.1474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-230.8075, -208.7533, -187.7190, -187.7103, -207.3979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-230.7997, -209.0842, -187.7510, -187.7294, -207.7551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-230.6432, -209.3083, -187.9039, -187.9251, -208.0404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-230.4386, -209.5156, -188.1269, -188.2433, -208.3551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-230.1600, -209.7746, -188.6383, -188.9284, -208.8655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-229.6368, -209.6415, -189.1223, -189.5986, -208.9338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-228.9664, -209.2160, -189.5242, -190.2156, -208.6251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-228.6277, -209.2538, -189.9775, -190.8049, -208.8636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-228.1865, -208.9472, -190.2227, -191.2860, -208.6631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-227.9212, -208.4596, -190.0447, -191.4052, -208.1751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-227.3956, -207.5917, -189.8639, -191.6591, -207.2851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-227.2602, -207.2359, -189.5925, -191.6659, -206.9600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-226.9880, -206.7187, -189.4243, -191.7294, -206.4416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-226.7536, -206.3311, -189.3474, -191.8191, -206.0998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-226.6137, -206.2710, -189.4405, -191.8674, -206.0979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-226.4895, -206.2310, -189.5714, -191.9587, -206.1428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-226.5509, -206.3808, -189.6661, -191.9836, -206.3864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-226.4706, -206.5593, -189.9617, -192.2653, -206.6762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-226.2592, -206.6500, -190.3197, -192.5654, -206.8309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-226.1673, -206.7915, -190.5275, -192.6807, -207.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-226.1884, -207.1589, -190.7558, -192.7194, -207.4840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-226.4390, -207.6316, -190.8124, -192.6394, -208.0744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-226.7696, -208.1451, -190.7604, -192.4369, -208.6754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-227.0324, -208.5041, -190.6747, -192.2433, -209.0838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-227.5402, -208.9692, -190.4037, -191.9077, -209.6002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-227.9343, -209.3507, -190.2051, -191.5941, -210.0007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-228.2614, -209.4331, -189.8127, -191.1308, -209.9773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-228.2671, -209.1960, -189.5650, -190.9113, -209.6473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-228.0125, -208.7224, -189.3468, -190.7121, -209.0426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-227.6570, -208.1474, -189.2247, -190.7844, -208.4246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-227.3558, -207.5086, -188.9885, -190.7270, -207.7013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-227.1967, -207.0127, -188.6600, -190.5382, -207.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-227.2050, -206.8510, -188.3714, -190.2416, -206.8719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-227.5321, -207.1742, -187.9904, -189.7956, -207.1075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-227.8545, -207.5501, -187.6427, -189.4381, -207.4268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-227.9153, -207.8856, -187.5688, -189.3863, -207.7615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-227.8439, -208.1059, -187.5474, -189.4010, -207.9694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-227.6815, -208.2484, -187.6066, -189.4746, -208.1140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-227.1024, -208.0487, -187.9189, -189.7867, -207.9187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-226.7533, -208.0144, -188.1000, -189.9018, -207.8560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-226.5121, -207.9702, -188.1215, -189.8744, -207.7526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-226.1690, -208.0173, -188.3769, -190.0699, -207.8223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-226.0906, -208.1922, -188.3920, -189.9724, -207.9629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-226.2798, -208.5326, -188.1491, -189.6186, -208.2238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-225.9689, -208.2830, -188.1336, -189.5397, -207.8848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-225.9489, -208.0798, -187.7584, -189.2146, -207.5474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-225.8290, -207.7031, -187.3931, -188.9632, -207.0647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-225.5096, -207.3576, -187.3868, -189.0569, -206.7055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-225.2271, -207.1243, -187.4477, -189.1984, -206.4631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-225.0392, -207.0098, -187.5335, -189.3604, -206.3648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-224.8257, -206.8901, -187.6812, -189.5818, -206.2829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-224.7171, -206.9222, -187.8194, -189.7604, -206.3676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-224.4153, -206.8532, -188.0942, -190.1245, -206.4015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-224.0060, -206.7359, -188.3726, -190.4751, -206.3327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-223.4560, -206.4522, -188.7181, -190.9536, -206.0799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-222.9681, -206.2922, -189.1002, -191.4771, -205.9721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-222.5290, -206.1123, -189.3117, -191.8178, -205.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-222.2278, -205.9325, -189.3918, -192.1012, -205.6368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-221.9770, -205.7732, -189.3703, -192.1658, -205.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-221.9980, -205.7925, -189.1374, -191.9730, -205.4325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-221.9544, -205.8404, -188.9298, -191.7034, -205.4226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-222.0306, -205.8945, -188.5575, -191.2429, -205.3706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-222.1691, -205.8978, -188.0484, -190.5610, -205.2280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-222.1702, -205.8713, -187.7262, -190.0616, -205.0652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-222.2242, -206.0018, -187.4630, -189.5587, -205.0755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-222.3254, -206.1682, -187.1646, -189.0632, -205.1089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-222.3926, -206.2518, -186.8859, -188.6390, -205.0493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-222.2366, -206.2741, -186.9090, -188.6034, -205.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-222.0879, -206.3120, -186.9522, -188.5928, -205.0041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-222.0921, -206.4856, -186.8756, -188.3876, -205.0979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-222.4356, -207.0133, -186.7291, -188.0601, -205.5679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-222.2295, -207.0719, -186.9304, -188.1101, -205.5817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-222.1805, -207.2703, -187.1063, -188.1102, -205.7501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-222.0362, -207.2312, -187.1734, -188.0878, -205.6430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-221.8172, -206.9090, -187.1169, -187.9926, -205.2237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-221.2992, -206.2691, -187.2157, -188.0598, -204.4757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-220.8797, -205.6491, -187.2291, -188.0970, -203.7553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-220.3230, -205.0771, -187.5455, -188.6087, -203.1886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-219.7155, -204.6327, -188.0371, -189.2422, -202.7445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-219.2742, -204.4648, -188.5629, -189.9100, -202.6100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-219.1621, -204.6776, -188.9905, -190.4048, -202.8951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-219.0924, -204.9344, -189.3442, -190.7652, -203.2177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-219.3836, -205.4824, -189.4655, -190.8581, -203.8717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-219.7724, -206.2312, -189.5980, -190.9553, -204.7878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-220.2772, -206.9883, -189.6796, -191.0021, -205.7269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-220.7120, -207.4417, -189.5678, -190.8311, -206.2763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-221.1632, -207.8601, -189.4713, -190.8439, -206.8519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-221.2567, -207.6961, -189.2825, -190.8491, -206.7500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-220.9306, -207.1396, -189.1591, -190.8942, -206.1611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-220.1484, -206.0406, -189.0120, -190.8463, -204.8665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-219.3772, -204.8404, -188.8154, -190.7603, -203.4608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-218.8423, -203.7652, -188.6271, -190.6966, -202.2622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-218.3973, -202.7809, -188.4186, -190.6037, -201.2013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-217.9992, -202.0045, -188.3052, -190.6270, -200.4010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-217.6985, -201.3281, -188.1474, -190.6145, -199.7323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-217.6780, -201.0638, -187.8148, -190.3695, -199.4619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-217.7463, -201.2229, -187.6058, -190.1829, -199.6318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-217.4387, -201.4399, -187.8892, -190.4931, -199.8741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-217.4130, -201.8288, -187.9296, -190.5734, -200.2998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-217.7398, -202.6691, -187.8801, -190.4933, -201.2248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-218.1982, -203.7772, -187.9745, -190.5068, -202.4750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-219.1424, -205.2737, -187.9389, -190.4203, -204.2243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-219.9829, -206.7024, -188.0991, -190.5363, -205.9137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-221.0512, -208.2782, -188.1801, -190.5967, -207.7460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-221.4642, -209.1235, -188.4063, -190.7949, -208.7482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-221.2567, -209.2241, -188.6915, -191.1215, -208.9335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-220.7808, -209.0083, -188.9281, -191.3178, -208.6782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-220.0367, -208.3764, -189.0523, -191.4631, -207.9139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-219.3729, -207.6018, -188.9527, -191.4277, -206.9313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-218.3980, -206.6337, -189.0753, -191.5650, -205.7603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-217.6170, -205.9682, -189.3350, -191.8357, -204.9864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-217.0642, -205.3025, -189.3393, -191.9749, -204.2288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-216.7144, -204.6709, -189.0727, -191.8332, -203.4821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-216.0251, -203.8593, -189.0942, -191.9141, -202.5377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-215.5958, -203.3504, -189.0444, -191.8708, -201.9346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-215.2072, -202.9233, -189.0036, -191.8428, -201.4273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-214.9338, -202.5589, -188.8719, -191.7005, -201.0007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-214.8149, -202.2674, -188.6204, -191.3967, -200.6393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-214.7814, -202.0448, -188.3380, -191.0691, -200.3526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-215.0732, -202.1605, -187.8787, -190.5121, -200.4282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-215.3834, -202.5082, -187.5917, -190.1766, -200.7829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-216.2028, -203.3274, -187.0636, -189.5919, -201.6256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-216.8486, -203.9767, -186.6902, -189.1784, -202.2746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-217.4001, -204.6541, -186.5663, -189.0069, -202.9957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-217.4016, -204.8576, -186.7122, -189.0242, -203.1952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-217.3057, -205.0946, -186.9075, -189.0533, -203.4055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-216.8760, -204.9482, -187.1121, -189.0099, -203.1373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-216.3192, -204.6130, -187.2411, -188.8574, -202.6119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-215.3535, -203.9305, -187.5934, -188.9381, -201.7390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-214.5281, -203.3909, -187.9501, -189.0325, -201.0346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-213.7636, -202.9997, -188.3870, -189.1957, -200.5018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-213.2363, -202.7329, -188.5562, -189.1580, -200.0922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-212.9612, -202.7960, -188.7106, -189.2134, -200.0951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-213.1470, -203.3605, -188.7108, -189.0393, -200.6275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-213.7167, -204.1199, -188.4973, -188.7178, -201.4026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-214.3407, -204.9784, -188.4326, -188.6699, -202.3749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-215.0452, -205.9483, -188.3595, -188.5777, -203.4363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-215.0259, -206.2530, -188.5871, -188.8074, -203.8210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-214.9980, -206.4752, -188.7155, -188.9355, -204.0848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-214.8431, -206.5685, -188.9466, -189.1735, -204.2357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-214.4808, -206.4072, -189.2004, -189.4494, -204.1157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-213.4631, -205.6852, -189.8536, -190.1718, -203.4292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-212.5337, -204.8986, -190.3168, -190.7744, -202.6151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-211.6118, -203.9852, -190.6677, -191.3172, -201.6258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-210.9429, -203.0704, -190.6794, -191.4203, -200.5931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-210.5995, -202.4930, -190.5355, -191.3505, -199.9577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-210.3512, -202.0154, -190.3922, -191.2949, -199.4604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-210.2717, -201.7818, -190.2194, -191.1377, -199.2276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-210.2871, -201.7196, -190.1173, -191.0504, -199.1920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-210.3702, -201.8705, -190.0509, -190.9613, -199.3614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-210.2105, -201.7318, -190.0227, -190.9289, -199.2055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-210.1460, -201.7524, -190.0441, -190.9900, -199.2447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-210.5554, -202.1714, -189.7307, -190.6792, -199.7381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-210.7954, -202.5193, -189.6179, -190.5318, -200.1447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-211.3324, -203.1847, -189.4155, -190.2864, -200.9045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-212.3664, -204.1317, -188.8340, -189.6552, -201.9531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-213.6934, -205.3056, -188.1115, -188.9563, -203.2304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-214.7587, -206.1763, -187.5249, -188.4391, -204.1574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-215.6309, -206.7024, -186.9691, -188.0215, -204.7301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-215.7199, -206.6113, -186.7340, -187.8005, -204.6196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-215.2647, -206.1487, -186.7379, -187.7494, -204.0975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-214.3925, -205.3543, -186.9428, -187.7890, -203.2250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-213.3447, -204.2225, -187.0885, -187.7460, -201.9436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-212.4547, -203.2102, -187.2190, -187.7760, -200.8193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-211.5467, -202.2972, -187.5201, -187.9328, -199.7893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-210.7214, -201.5927, -187.9558, -188.2891, -199.0193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-210.1533, -201.0977, -188.2165, -188.5272, -198.4685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-209.4368, -200.6089, -188.7213, -188.9684, -197.9146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-209.1163, -200.5569, -189.0405, -189.3304, -197.8546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-209.1186, -200.9651, -189.1742, -189.4075, -198.2680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-209.4982, -201.7620, -189.0877, -189.2267, -199.0997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-209.7545, -202.3903, -189.1003, -189.1598, -199.7658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-209.7818, -202.7263, -189.1894, -189.1294, -200.1000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-209.9027, -203.0668, -189.1608, -189.0560, -200.4606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-210.3051, -203.6589, -188.9525, -188.8404, -201.1264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-210.7243, -204.1635, -188.7624, -188.6775, -201.7247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-211.0774, -204.4267, -188.4497, -188.3771, -202.0350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-211.6864, -204.7421, -187.8678, -187.8770, -202.3830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-212.5424, -205.1716, -187.1410, -187.2951, -202.8421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-213.1197, -205.3682, -186.5760, -186.8834, -203.0636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-213.3250, -205.3190, -186.2567, -186.7232, -203.0646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-213.5897, -205.3526, -185.9277, -186.5574, -203.1331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-213.7995, -205.4641, -185.7169, -186.5229, -203.3095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-213.7829, -205.3705, -185.5888, -186.5149, -203.2533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-213.2074, -204.8652, -185.7172, -186.6775, -202.7670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-212.4804, -204.2374, -186.0711, -187.1032, -202.2289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-211.5993, -203.5424, -186.6320, -187.8562, -201.6998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-210.8567, -203.0622, -187.1643, -188.5409, -201.3324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-210.1740, -202.6505, -187.6468, -189.1844, -200.9724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-209.5889, -202.4077, -188.1606, -189.7862, -200.7585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-209.0121, -202.0974, -188.6030, -190.2937, -200.4363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-208.6972, -201.9665, -188.8243, -190.5755, -200.2695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-208.4386, -201.9294, -189.0554, -190.8542, -200.2055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-208.5773, -202.1301, -188.9023, -190.7363, -200.3943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-208.9723, -202.4537, -188.4572, -190.3137, -200.7035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-209.4095, -202.7308, -187.9630, -189.8040, -200.9448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-209.9009, -203.1058, -187.5144, -189.2914, -201.2675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-210.2411, -203.3941, -187.2759, -189.0126, -201.5495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-210.2021, -203.2605, -187.1230, -188.7845, -201.3692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-210.5325, -203.5774, -186.9438, -188.5893, -201.6998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-210.5563, -203.7502, -187.0358, -188.6580, -201.9220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-210.3627, -203.6942, -187.2783, -188.8909, -201.9358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-210.3007, -203.8071, -187.5925, -189.2158, -202.1469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-210.2310, -203.8335, -187.8532, -189.4607, -202.2615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-210.4015, -204.0754, -187.9954, -189.6140, -202.6169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-210.2569, -204.0318, -188.1512, -189.7482, -202.6017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-209.9233, -203.8039, -188.2628, -189.7715, -202.2965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-209.6330, -203.5147, -188.1735, -189.5523, -201.8586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-209.2062, -203.2121, -188.0727, -189.1995, -201.3374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-209.0586, -203.1098, -187.8884, -188.8665, -201.1018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-208.7142, -202.9865, -187.9795, -188.8607, -200.9050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-208.3891, -202.9341, -188.1191, -188.9384, -200.7943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-207.9504, -202.7456, -188.2286, -188.9615, -200.5357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-207.6773, -202.6711, -188.2367, -188.8826, -200.3967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-207.4245, -202.6315, -188.2829, -188.8257, -200.3075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-207.7595, -203.0628, -188.0522, -188.5468, -200.7293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-207.7110, -203.1542, -187.9874, -188.3920, -200.7863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-207.6923, -203.2455, -187.9116, -188.2278, -200.8471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-207.8282, -203.4271, -187.7291, -187.9204, -200.9744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-207.4955, -203.2059, -187.7615, -187.8133, -200.6873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-207.2275, -203.0471, -187.8119, -187.8072, -200.5004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-206.8946, -202.7632, -187.9351, -187.9978, -200.2534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-206.8659, -202.7694, -187.9354, -188.0925, -200.3051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-206.9177, -202.7385, -187.8914, -188.1527, -200.3437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-206.8748, -202.6480, -187.9316, -188.3147, -200.3144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-206.6428, -202.3800, -188.0549, -188.5304, -200.0997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-206.7194, -202.4646, -188.1461, -188.8201, -200.3084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-206.7252, -202.5904, -188.3376, -189.2204, -200.5683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-206.5380, -202.4262, -188.4130, -189.3833, -200.4313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-206.2477, -202.1296, -188.4190, -189.4335, -200.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-205.8931, -201.7979, -188.5050, -189.5411, -199.7547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-205.4646, -201.2946, -188.5015, -189.5486, -199.2032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-205.2268, -201.0445, -188.4585, -189.5653, -198.9148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-205.0730, -200.9345, -188.4377, -189.5916, -198.7723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-204.9818, -200.8363, -188.3650, -189.5527, -198.6594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-204.8235, -200.5886, -188.2779, -189.5378, -198.4033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-204.7234, -200.5097, -188.2535, -189.6131, -198.3405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-204.5506, -200.4354, -188.2893, -189.7462, -198.2454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-204.3862, -200.3667, -188.4041, -190.0790, -198.2169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-204.3654, -200.3884, -188.3909, -190.2252, -198.2768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-204.7525, -200.6303, -188.0259, -190.0575, -198.5807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-205.1286, -200.7884, -187.5213, -189.6916, -198.7403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-205.4994, -200.9916, -187.0803, -189.4639, -198.9635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-205.9688, -201.3627, -186.7282, -189.3018, -199.3595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-206.0673, -201.4536, -186.5637, -189.2881, -199.4659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-206.0672, -201.4480, -186.4796, -189.3104, -199.4675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-205.8444, -201.2518, -186.5089, -189.4214, -199.2750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-205.5667, -200.8949, -186.4847, -189.5107, -198.9253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-205.1469, -200.4759, -186.5720, -189.5925, -198.4800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-205.0610, -200.2325, -186.3946, -189.4769, -198.2261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-205.3593, -200.2591, -186.0513, -189.2339, -198.2822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-205.7528, -200.3584, -185.6794, -188.9388, -198.4196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-205.7503, -200.2647, -185.5559, -188.8323, -198.3395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-205.7785, -200.2190, -185.4802, -188.7787, -198.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-205.6454, -200.1331, -185.5488, -188.8331, -198.2562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-205.5358, -200.1735, -185.7422, -189.0233, -198.3521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-205.1885, -199.8924, -185.9604, -189.1250, -198.0938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-204.5236, -199.5591, -186.4943, -189.4760, -197.7604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-204.1743, -199.5456, -186.9893, -189.9237, -197.8288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-203.7873, -199.5438, -187.5075, -190.3219, -197.8688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-203.4202, -199.6169, -188.0910, -190.8355, -197.9934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-203.4299, -199.9189, -188.3734, -191.0695, -198.3697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-203.6871, -200.4168, -188.5193, -191.1707, -198.9511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-203.8615, -200.7093, -188.6386, -191.2525, -199.3311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-203.8154, -200.8714, -188.8692, -191.4248, -199.5421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-203.5717, -200.8487, -189.0465, -191.4109, -199.4573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-203.4539, -200.8695, -189.1451, -191.2777, -199.4117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-203.4259, -200.8980, -189.1307, -191.0681, -199.3809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-203.6485, -201.0686, -188.9207, -190.6974, -199.5285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-203.5856, -200.9002, -188.7010, -190.2786, -199.2725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-203.3273, -200.7253, -188.6517, -190.0259, -198.9808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-203.3922, -200.6845, -188.4041, -189.6638, -198.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-203.7454, -200.7754, -188.0205, -189.1609, -198.9836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-204.4031, -201.0256, -187.3529, -188.4314, -199.2377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-205.0860, -201.3870, -186.7501, -187.7715, -199.5817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-205.6188, -201.7315, -186.3466, -187.3569, -199.9353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-206.0549, -202.0025, -185.9841, -186.9590, -200.1953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-206.1320, -202.0641, -185.8670, -186.7729, -200.2614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-206.6188, -202.5105, -185.6267, -186.6139, -200.7498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-207.2681, -203.1455, -185.3536, -186.4269, -201.4193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-207.6491, -203.5563, -185.2538, -186.3668, -201.8702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-207.8800, -203.9120, -185.2606, -186.3433, -202.2493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-207.5624, -203.8125, -185.4442, -186.4316, -202.1609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-207.0408, -203.5374, -185.6691, -186.5487, -201.8734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-205.9490, -202.8705, -186.1957, -186.8362, -201.1497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-205.0224, -202.2639, -186.7144, -187.2324, -200.5359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-204.1238, -201.6149, -187.2024, -187.6496, -199.8735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-203.1522, -200.9053, -187.7538, -188.1720, -199.1456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-202.1129, -200.2173, -188.4236, -188.8824, -198.4253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-201.3777, -199.6907, -188.8638, -189.4192, -197.8600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-200.7686, -199.2713, -189.2615, -189.9505, -197.4074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-200.3972, -199.1699, -189.6931, -190.5963, -197.3137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-200.2385, -199.3582, -190.1053, -191.2853, -197.5452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-200.1719, -199.6282, -190.4403, -191.8338, -197.8409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-200.4778, -200.1225, -190.5157, -192.2019, -198.4578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-201.1385, -200.8141, -190.2540, -192.2154, -199.3141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-201.8328, -201.4757, -189.9587, -192.1952, -200.1518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-202.7505, -202.2740, -189.6326, -192.2373, -201.2011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-203.4507, -202.7916, -189.2837, -192.2462, -201.9140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-203.8338, -202.9809, -189.0041, -192.2254, -202.1981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-204.1512, -203.0270, -188.6494, -192.0710, -202.3037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-203.9206, -202.5536, -188.3520, -191.8064, -201.7516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-203.3917, -201.7202, -187.9639, -191.2710, -200.7180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-203.1596, -201.1018, -187.5124, -190.7942, -199.9864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-202.9537, -200.6462, -187.1487, -190.2990, -199.3788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-202.5330, -199.9196, -186.7925, -189.7426, -198.4769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-202.3705, -199.4879, -186.4487, -189.2005, -197.9132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-202.6365, -199.4581, -185.9857, -188.6350, -197.8172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-202.8315, -199.3756, -185.5709, -188.1165, -197.6724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-203.1042, -199.5470, -185.3024, -187.7875, -197.7870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-203.3888, -199.6996, -185.0333, -187.4440, -197.8829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-203.5451, -199.7155, -184.7892, -187.0692, -197.8236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-203.8296, -199.8134, -184.5014, -186.7434, -197.8987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-204.2096, -200.0288, -184.1886, -186.4272, -198.1080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-204.0977, -199.9635, -184.1726, -186.3876, -198.0377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-203.9266, -199.9009, -184.2002, -186.3596, -197.9425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-203.5745, -199.6168, -184.2785, -186.3668, -197.6332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-203.2128, -199.2902, -184.3382, -186.3725, -197.2869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-202.7044, -198.9800, -184.5601, -186.5415, -196.9485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-201.9851, -198.6745, -184.9658, -186.8909, -196.5610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-201.6197, -198.5985, -185.2191, -187.1608, -196.4512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-201.2189, -198.4294, -185.4585, -187.4140, -196.2469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-201.0216, -198.4326, -185.5876, -187.5919, -196.2121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-200.8551, -198.4072, -185.7599, -187.7825, -196.1714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-200.5412, -198.3027, -186.0420, -188.0828, -196.0416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-200.1218, -197.9985, -186.3447, -188.4081, -195.7377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-199.7979, -197.7928, -186.6395, -188.7886, -195.5352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-199.2510, -197.3705, -187.0211, -189.1602, -195.0893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-198.9335, -197.1663, -187.3059, -189.4403, -194.8786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-198.9197, -197.2595, -187.4219, -189.5555, -195.0083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-199.0564, -197.5743, -187.4805, -189.6704, -195.3644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-199.2560, -197.9614, -187.5692, -189.8302, -195.8225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-199.2992, -198.3524, -187.7683, -190.0512, -196.2220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-199.4759, -198.7749, -187.8817, -190.2231, -196.7004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-199.9874, -199.3784, -187.6781, -190.1246, -197.4019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-200.5594, -199.9132, -187.3175, -189.9090, -198.0546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-200.9796, -200.1933, -186.9287, -189.6360, -198.4381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-201.2956, -200.3975, -186.6530, -189.4501, -198.7147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-202.0764, -200.9145, -186.0871, -189.0654, -199.3374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-202.6497, -201.2644, -185.5822, -188.6841, -199.7473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-202.9766, -201.3952, -185.2201, -188.3826, -199.9144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-202.8877, -201.2464, -185.0876, -188.2527, -199.7831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-202.9111, -201.0757, -184.7884, -187.9458, -199.6130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-202.7373, -200.7929, -184.5765, -187.6200, -199.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-202.5912, -200.5089, -184.3303, -187.2149, -198.9214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-202.2000, -200.0489, -184.2351, -186.9348, -198.3741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-201.5144, -199.3535, -184.3171, -186.7216, -197.5681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-200.9885, -198.8546, -184.3429, -186.4783, -196.9470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-200.4458, -198.4040, -184.4832, -186.4203, -196.4015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-199.9352, -197.8926, -184.5805, -186.3512, -195.8098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-199.4951, -197.4677, -184.6530, -186.2433, -195.3191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-199.1893, -197.2089, -184.6823, -186.1760, -195.0193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-198.8682, -196.9303, -184.8130, -186.2761, -194.7242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-198.8765, -197.0338, -184.7766, -186.3100, -194.7976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-198.8773, -197.2622, -184.8427, -186.5008, -194.9858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-199.0699, -197.6425, -184.8312, -186.7016, -195.3719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-199.3702, -198.1311, -184.7253, -186.8540, -195.8719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-199.4618, -198.4047, -184.6891, -186.9686, -196.1335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-199.4844, -198.6345, -184.7242, -187.1154, -196.3540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-199.4593, -198.8806, -184.8151, -187.3414, -196.6008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-199.3383, -199.0007, -184.9947, -187.6176, -196.7309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-199.0102, -198.8658, -185.2300, -187.8534, -196.5785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-198.5381, -198.5856, -185.4428, -187.9605, -196.2360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-197.9053, -198.2084, -185.8229, -188.2226, -195.7851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-197.5047, -198.0253, -186.0962, -188.4122, -195.5478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-197.1948, -197.8812, -186.2769, -188.5759, -195.3506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-196.8501, -197.6256, -186.3986, -188.6252, -195.0502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-196.4680, -197.3191, -186.4977, -188.6405, -194.6804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-196.4039, -197.3193, -186.4586, -188.5988, -194.6675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-196.5962, -197.5610, -186.3200, -188.5089, -194.9409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-196.8874, -197.7020, -185.9758, -188.2234, -195.1425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-197.1815, -197.7426, -185.6137, -187.9169, -195.2767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-197.4430, -197.6868, -185.2549, -187.6215, -195.3154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-197.8850, -197.8513, -184.8641, -187.2748, -195.5653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-198.1699, -197.7896, -184.4456, -186.8221, -195.5395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-198.4647, -197.8570, -184.1320, -186.5320, -195.6365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-198.8268, -198.0225, -183.8661, -186.3415, -195.8250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-199.5122, -198.4570, -183.5064, -186.1295, -196.3171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-200.1098, -198.7285, -183.1140, -185.8723, -196.6464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-200.3650, -198.6656, -182.8793, -185.6748, -196.6390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-200.5936, -198.5810, -182.6562, -185.4477, -196.6039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-200.9752, -198.6509, -182.3530, -185.1770, -196.7082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-201.4748, -198.9030, -182.0499, -185.0276, -197.0149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-201.6730, -199.1675, -182.0407, -185.1850, -197.2940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-201.5745, -199.2192, -182.1652, -185.4027, -197.3580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-200.9901, -198.8514, -182.4491, -185.6304, -196.9769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-200.4042, -198.4426, -182.6818, -185.7134, -196.5425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-199.9389, -198.1343, -182.8968, -185.8389, -196.2219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-199.2790, -197.7185, -183.2625, -186.1038, -195.8007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-198.6051, -197.2914, -183.6357, -186.4059, -195.3581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-197.9397, -196.7981, -183.9595, -186.5943, -194.8346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-197.3775, -196.3522, -184.2065, -186.7946, -194.3846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-197.0271, -196.0474, -184.2920, -186.8394, -194.0944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-196.8885, -195.9065, -184.2523, -186.8637, -193.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-196.7174, -195.6741, -184.2156, -186.8347, -193.8056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-196.8324, -195.6055, -184.0048, -186.7056, -193.8048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-196.9104, -195.5329, -183.7008, -186.4470, -193.7634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-197.0420, -195.5431, -183.3819, -186.2262, -193.8069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-197.3479, -195.8116, -183.0776, -186.1083, -194.0796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-197.6058, -195.9782, -182.7064, -185.8190, -194.1984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-198.2202, -196.4032, -182.1748, -185.4892, -194.6100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-198.6830, -196.7227, -181.7633, -185.2338, -194.8942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-199.1465, -197.1051, -181.4144, -185.0700, -195.2367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-199.6231, -197.5237, -181.1314, -184.9730, -195.6295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-199.9812, -197.9930, -180.9800, -184.9868, -196.0582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-200.0951, -198.1885, -180.9127, -185.0077, -196.2335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-200.0717, -198.2875, -180.8746, -185.0065, -196.2872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-199.9902, -198.3403, -180.9921, -185.1922, -196.3605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-199.8587, -198.3250, -181.1291, -185.3999, -196.3893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-199.4807, -198.0532, -181.3302, -185.6367, -196.1597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-198.9286, -197.6369, -181.6394, -185.9091, -195.7746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-198.2372, -197.0426, -182.0056, -186.1753, -195.2228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-197.6493, -196.4857, -182.3003, -186.3607, -194.7029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-196.9232, -195.9815, -182.6797, -186.6194, -194.1590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-196.2667, -195.6044, -183.1320, -186.9917, -193.7333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-195.5435, -195.1387, -183.5563, -187.2679, -193.1941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-195.1836, -194.9783, -183.8683, -187.5438, -193.0073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-195.1622, -195.1529, -184.0529, -187.7784, -193.1806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-195.0799, -195.2628, -184.2744, -188.0182, -193.2625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-195.2395, -195.4470, -184.2960, -188.0996, -193.4928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-195.5115, -195.7689, -184.2448, -188.0688, -193.8112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-195.8796, -196.1423, -184.1891, -188.0939, -194.2296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-196.3750, -196.6158, -184.1212, -188.2077, -194.7876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-196.9565, -197.1083, -184.0235, -188.3674, -195.4266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-197.3925, -197.3880, -183.8342, -188.3252, -195.8291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-197.4940, -197.3366, -183.6039, -188.0827, -195.8259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-197.4046, -197.0508, -183.3999, -187.7956, -195.5869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-197.1846, -196.7201, -183.3426, -187.6835, -195.2995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-196.8428, -196.3759, -183.4189, -187.6394, -194.9634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-196.5776, -196.0491, -183.4431, -187.5074, -194.6448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-196.2543, -195.8033, -183.4795, -187.3213, -194.3530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-196.0981, -195.6851, -183.3771, -186.9741, -194.1674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-195.7556, -195.4143, -183.3470, -186.6895, -193.8009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-195.3585, -195.1559, -183.3523, -186.4535, -193.4323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-195.1508, -195.0911, -183.3005, -186.2058, -193.2847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-194.9330, -195.0532, -183.3211, -186.0782, -193.1618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-194.8522, -195.0287, -183.2024, -185.8021, -193.0783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-194.7520, -194.9600, -183.1558, -185.6199, -192.9758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-194.8604, -195.0733, -183.0126, -185.4522, -193.0639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-194.8728, -195.0448, -182.9015, -185.3000, -193.0153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-195.0438, -195.0696, -182.7315, -185.1182, -193.0653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-195.2681, -195.1989, -182.5849, -185.0449, -193.1946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-195.5719, -195.3777, -182.4327, -185.0319, -193.4182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-195.8250, -195.5664, -182.3491, -185.0793, -193.6520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-196.2703, -195.9150, -182.1686, -185.0922, -194.0414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-196.5400, -196.1872, -182.0776, -185.1590, -194.2907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-196.5650, -196.2346, -182.0620, -185.1685, -194.3122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-196.6323, -196.2832, -181.9441, -185.0570, -194.3487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-196.7447, -196.3585, -181.7585, -184.9073, -194.4290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-196.8915, -196.3966, -181.5286, -184.7255, -194.4780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-197.0939, -196.4768, -181.2707, -184.4785, -194.5529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-197.1649, -196.4318, -180.9892, -184.1172, -194.4789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-197.6603, -196.7236, -180.5154, -183.6992, -194.7467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-198.5000, -197.3644, -179.9406, -183.2582, -195.3169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-199.1367, -197.8362, -179.4758, -182.8454, -195.6960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-199.8573, -198.3188, -179.0465, -182.5641, -196.1344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-200.8301, -199.0698, -178.5581, -182.2984, -196.8229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-201.3200, -199.4398, -178.3222, -182.2171, -197.1783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-201.4944, -199.5188, -178.2294, -182.2413, -197.2811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-201.3304, -199.3274, -178.2901, -182.4151, -197.1481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-200.8121, -198.8756, -178.4923, -182.6111, -196.7207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-200.3156, -198.5266, -178.7362, -182.8666, -196.3762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-199.8330, -198.1931, -178.9699, -183.0464, -196.0222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-199.1801, -197.7093, -179.1861, -183.1631, -195.5292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-198.8100, -197.4495, -179.2835, -183.2725, -195.2626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-198.5322, -197.1995, -179.3440, -183.3677, -195.0404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-197.9760, -196.7353, -179.4585, -183.4347, -194.5704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-197.4361, -196.1738, -179.5491, -183.4820, -194.0619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-196.7363, -195.5074, -179.6781, -183.5047, -193.4059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-196.0362, -194.9561, -179.8422, -183.5469, -192.8287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-195.2914, -194.3923, -180.1201, -183.6799, -192.2271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-194.8680, -194.0555, -180.2517, -183.8024, -191.8938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-194.3550, -193.6300, -180.4433, -183.9617, -191.4625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-193.9466, -193.2044, -180.5427, -183.9908, -191.0394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-193.7112, -192.8748, -180.5462, -183.9397, -190.7370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-193.6598, -192.8276, -180.4381, -183.8584, -190.6399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-193.4580, -192.7422, -180.4342, -183.8292, -190.4781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-193.5093, -192.8076, -180.3075, -183.7375, -190.5050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-193.5007, -192.7857, -180.2465, -183.6872, -190.4636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-193.3403, -192.7568, -180.3214, -183.7257, -190.3611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-193.3381, -192.8986, -180.3211, -183.7429, -190.4245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-193.2964, -192.9449, -180.2895, -183.6436, -190.3842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-193.4253, -193.0555, -180.1134, -183.3942, -190.4459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-193.6047, -193.1781, -179.8756, -183.0676, -190.5107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-194.3171, -193.5854, -179.2755, -182.5731, -190.9262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-194.9884, -193.9138, -178.8006, -182.1803, -191.2792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-196.1003, -194.7101, -178.1928, -181.8478, -192.0674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-196.9987, -195.3500, -177.7982, -181.7018, -192.7209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-198.0067, -196.1173, -177.4644, -181.6599, -193.5126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-198.8627, -196.6771, -177.1435, -181.5403, -194.1125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-199.4400, -196.9815, -176.9971, -181.5729, -194.4936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-200.1066, -197.3732, -176.8973, -181.7346, -194.9772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-200.4893, -197.5977, -176.9082, -181.9034, -195.2781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-200.7186, -197.7229, -177.0187, -182.1477, -195.4964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-200.5023, -197.5258, -177.3741, -182.5698, -195.4364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-200.0978, -197.1298, -177.7216, -182.8519, -195.1525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-199.6439, -196.7195, -178.0754, -183.1311, -194.8385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-198.5311, -195.7719, -178.6268, -183.4350, -193.9870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-197.3898, -194.8528, -179.1883, -183.7253, -193.0978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-196.2218, -194.0377, -179.8551, -184.0860, -192.2529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-195.7550, -193.7909, -180.1736, -184.2754, -191.9499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-195.4439, -193.7293, -180.4419, -184.4308, -191.8077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-195.3326, -193.7777, -180.6159, -184.5467, -191.8282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-195.1471, -193.6589, -180.7092, -184.5211, -191.6999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-194.7883, -193.4188, -180.9557, -184.6234, -191.4318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-194.6124, -193.2060, -181.0420, -184.5937, -191.2333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-194.5270, -193.0544, -180.9833, -184.4296, -191.1013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-194.6718, -193.0603, -180.7683, -184.2010, -191.1297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-195.1730, -193.3568, -180.3311, -183.8820, -191.4461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-195.4730, -193.5119, -179.9917, -183.5609, -191.5857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-195.9609, -193.8000, -179.5748, -183.1888, -191.8714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-196.3318, -193.9881, -179.2018, -182.8389, -192.0414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-196.6306, -194.1997, -178.8421, -182.5127, -192.1739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-196.9052, -194.4427, -178.5582, -182.2941, -192.3456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-197.4080, -194.8804, -178.1768, -182.0233, -192.7213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-197.7915, -195.1672, -177.8249, -181.7551, -192.9638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-198.0786, -195.4935, -177.5768, -181.5585, -193.2062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-198.1955, -195.6878, -177.4499, -181.4251, -193.3336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-198.1676, -195.7333, -177.4252, -181.3755, -193.3438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-198.1330, -195.7197, -177.3882, -181.3551, -193.3059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-198.1339, -195.7450, -177.3592, -181.3309, -193.2995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-198.0243, -195.7595, -177.3910, -181.3743, -193.2770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-197.7698, -195.6868, -177.4683, -181.4025, -193.1673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-197.5329, -195.5601, -177.4787, -181.3136, -193.0165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-197.3199, -195.4025, -177.3564, -181.1256, -192.8342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-196.9987, -195.1728, -177.3005, -180.9585, -192.5666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-196.3125, -194.6811, -177.5267, -181.0501, -192.0534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-195.9642, -194.5099, -177.6601, -181.1914, -191.8406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-195.6262, -194.3414, -177.8013, -181.3626, -191.6253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-195.7203, -194.5317, -177.8055, -181.5107, -191.7723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-195.5220, -194.4228, -177.9263, -181.7638, -191.6600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-195.4709, -194.4049, -178.0220, -182.0261, -191.6655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-195.7569, -194.6682, -177.9520, -182.1336, -191.9277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-195.6131, -194.5502, -178.0199, -182.2794, -191.8253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-195.0893, -194.1702, -178.3086, -182.5469, -191.4348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-194.6932, -193.8614, -178.5571, -182.8396, -191.1505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-194.2666, -193.4362, -178.7338, -182.9908, -190.7764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-193.8139, -192.8986, -178.8322, -183.0209, -190.3089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-193.6723, -192.6551, -178.8038, -183.0856, -190.1336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-193.4912, -192.4090, -178.7544, -183.1166, -189.9264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-193.2423, -192.1691, -178.6982, -183.0159, -189.6589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-192.9118, -191.9167, -178.7240, -182.9991, -189.3657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-192.5603, -191.6607, -178.7161, -182.9293, -189.0729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-192.1706, -191.3907, -178.6936, -182.7652, -188.7395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-191.9506, -191.2111, -178.5461, -182.4704, -188.4929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-191.9165, -191.2489, -178.3762, -182.2558, -188.4785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-192.0691, -191.4204, -178.1257, -182.0269, -188.6048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-192.2905, -191.6945, -177.8749, -181.8213, -188.8255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-192.6192, -192.0538, -177.6117, -181.6684, -189.1425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-193.1525, -192.6049, -177.2767, -181.4767, -189.5977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-193.4899, -193.0421, -177.1066, -181.3838, -189.9383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-193.8657, -193.4992, -177.0107, -181.4166, -190.3363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-194.1776, -193.8846, -177.0131, -181.5417, -190.6752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-194.2302, -194.0130, -177.1436, -181.6910, -190.7713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-194.3738, -194.1565, -177.1090, -181.6513, -190.8911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-194.4725, -194.2450, -177.0902, -181.6772, -190.9768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-194.5600, -194.2446, -176.9928, -181.5561, -190.9969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-194.6734, -194.1934, -176.9249, -181.5328, -191.0159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-194.8137, -194.1401, -176.8013, -181.5066, -191.0393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-195.0004, -194.1092, -176.7881, -181.6611, -191.1243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-195.2494, -194.1514, -176.6713, -181.6571, -191.2658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-195.3363, -194.1286, -176.5979, -181.6574, -191.3066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-195.3971, -194.1439, -176.5343, -181.6586, -191.3521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-195.6130, -194.2311, -176.4795, -181.7659, -191.5065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-195.9317, -194.4002, -176.4271, -181.9268, -191.7469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-196.0766, -194.3773, -176.3373, -181.9578, -191.7781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-196.3063, -194.3963, -176.1663, -181.8503, -191.8371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-196.4363, -194.3169, -175.9763, -181.6644, -191.8057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-196.8522, -194.4105, -175.6568, -181.4866, -191.9794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-196.9558, -194.3452, -175.5647, -181.4691, -191.9727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-196.5589, -193.8668, -175.5961, -181.4082, -191.5536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-196.0182, -193.3345, -175.6731, -181.2844, -191.0188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-195.5074, -192.8145, -175.6707, -181.0308, -190.4732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-195.3816, -192.6033, -175.5585, -180.8767, -190.2774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-195.2178, -192.2939, -175.5038, -180.8385, -190.0133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-195.0454, -192.0753, -175.5496, -180.9693, -189.8375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-194.7941, -191.8695, -175.6582, -181.1389, -189.6308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-194.5816, -191.7105, -175.6685, -181.1884, -189.4485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-194.4993, -191.6793, -175.5788, -181.1772, -189.3689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-194.2921, -191.5419, -175.5823, -181.1919, -189.1806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-194.0988, -191.4369, -175.6272, -181.2798, -189.0346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-193.9047, -191.3161, -175.6647, -181.3354, -188.8841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-193.6243, -191.1989, -175.7711, -181.4679, -188.6999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-193.6181, -191.2828, -175.7938, -181.6016, -188.7412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-193.7394, -191.5132, -175.7283, -181.6864, -188.8910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-193.8381, -191.6649, -175.6412, -181.7150, -188.9819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-193.8526, -191.8183, -175.5513, -181.6978, -189.0103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-193.8335, -191.8896, -175.4596, -181.6657, -188.9926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-193.8132, -191.9481, -175.3108, -181.5110, -188.9739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-194.0244, -192.1634, -175.1325, -181.4406, -189.1458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-194.1565, -192.2931, -175.0186, -181.4401, -189.2367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-194.2076, -192.3825, -174.8745, -181.3732, -189.2704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-194.0758, -192.3145, -174.7236, -181.1836, -189.1544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-193.9338, -192.2092, -174.5457, -180.9493, -189.0070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-193.8722, -192.1787, -174.2773, -180.6432, -188.9599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-193.7063, -192.0323, -174.0994, -180.3953, -188.8125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-193.7072, -192.0136, -173.8735, -180.1803, -188.8265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-193.7960, -192.0054, -173.4768, -179.7418, -188.8524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-193.8034, -191.9356, -173.1617, -179.4084, -188.8096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-193.8379, -191.8797, -172.8694, -179.0678, -188.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-193.6598, -191.6964, -172.8033, -178.9443, -188.7163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-193.4981, -191.5230, -172.7727, -178.8094, -188.6111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-193.3706, -191.4418, -172.7738, -178.8179, -188.5589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-193.3982, -191.4289, -172.7388, -178.8379, -188.5873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-193.2803, -191.3482, -172.7771, -178.8002, -188.5411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-193.1164, -191.1764, -172.8068, -178.6544, -188.4293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-193.0234, -191.0839, -172.8384, -178.5618, -188.3733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-192.8235, -190.8826, -172.9407, -178.5148, -188.2031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-192.3908, -190.5018, -173.1624, -178.5041, -187.8218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-191.9209, -190.1082, -173.4397, -178.4959, -187.4252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-191.6623, -189.8870, -173.5777, -178.4278, -187.1964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-191.6660, -189.8637, -173.6468, -178.4343, -187.1638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-191.8146, -189.9668, -173.6423, -178.4604, -187.2574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-192.0114, -190.0927, -173.6465, -178.5407, -187.3951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-192.3096, -190.2754, -173.5835, -178.5796, -187.6091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-192.7107, -190.4747, -173.4298, -178.5207, -187.8620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-193.3112, -190.8244, -173.2111, -178.5080, -188.2695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-193.8080, -191.0776, -173.0630, -178.5023, -188.5827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-194.5960, -191.5368, -172.7369, -178.4513, -189.1174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-195.2777, -191.9202, -172.4593, -178.4312, -189.5259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-196.0682, -192.3928, -172.0640, -178.3075, -190.0131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-196.6158, -192.7703, -171.8322, -178.3109, -190.3594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-197.1080, -193.1176, -171.6070, -178.3238, -190.6519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-197.5329, -193.4568, -171.4593, -178.3647, -190.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-198.0990, -193.9377, -171.2457, -178.4407, -191.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-198.6141, -194.3785, -170.9782, -178.4870, -191.7194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-199.3534, -194.9649, -170.6957, -178.6216, -192.2979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-199.4498, -195.0888, -170.5803, -178.6649, -192.3625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-199.0764, -194.8517, -170.6035, -178.6983, -192.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-198.6366, -194.5561, -170.6286, -178.6327, -191.6484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-197.6831, -193.7915, -170.7721, -178.3925, -190.8103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-196.7359, -193.0434, -170.9747, -178.2714, -190.0180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-195.9446, -192.4372, -171.1344, -178.1124, -189.3566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-195.3482, -192.0583, -171.2871, -178.0562, -188.8936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-194.6278, -191.5605, -171.4553, -177.8873, -188.2966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-193.9575, -191.1054, -171.5677, -177.6423, -187.7341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-193.0734, -190.4730, -171.8905, -177.5943, -187.0309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-192.4155, -189.9688, -172.1199, -177.5458, -186.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-192.0656, -189.7265, -172.2406, -177.4870, -186.1819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-191.7281, -189.4672, -172.3266, -177.3709, -185.8916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-191.0940, -188.9277, -172.5271, -177.1311, -185.3608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-190.4472, -188.4106, -172.7656, -176.9124, -184.8232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-189.6807, -187.7632, -173.1316, -176.8229, -184.1878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-189.2027, -187.3108, -173.3703, -176.7337, -183.7878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-188.8619, -186.9813, -173.5598, -176.7086, -183.5072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-188.6677, -186.7595, -173.6280, -176.6133, -183.3327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-188.6376, -186.5783, -173.6012, -176.4452, -183.2447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-188.8130, -186.5911, -173.3960, -176.2871, -183.3423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-189.2551, -186.8859, -172.9947, -176.0944, -183.6805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-189.6630, -187.1639, -172.7052, -176.0142, -184.0022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-190.2018, -187.5591, -172.3821, -175.9651, -184.4361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-190.8602, -188.1153, -172.0724, -176.0287, -185.0076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-191.2874, -188.4535, -171.9722, -176.2017, -185.3678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-191.8136, -188.8748, -171.8700, -176.4611, -185.8110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-192.2543, -189.2638, -171.7984, -176.6862, -186.2019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-192.9710, -189.8905, -171.5673, -176.8886, -186.8006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-193.6454, -190.4340, -171.3078, -176.9689, -187.3133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-194.3739, -191.0058, -170.9693, -176.9666, -187.8634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-195.1417, -191.5977, -170.5595, -176.8298, -188.4191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-195.4993, -191.8747, -170.3291, -176.6862, -188.6468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-195.8563, -192.1722, -170.1393, -176.5670, -188.8924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-195.9954, -192.2307, -169.9927, -176.3672, -188.9351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-195.7831, -191.9484, -169.8858, -176.0725, -188.6766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-195.7149, -191.7594, -169.7120, -175.7751, -188.5369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-195.5893, -191.5167, -169.5905, -175.5053, -188.3486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-195.5741, -191.3176, -169.4302, -175.2491, -188.2551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-195.7810, -191.3004, -169.2341, -175.0838, -188.3513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-195.7678, -191.0705, -169.1774, -175.0042, -188.2815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-195.5359, -190.7122, -169.1905, -174.8410, -188.0490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-195.1473, -190.3220, -169.2856, -174.7341, -187.7309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-194.9624, -190.0876, -169.3072, -174.6511, -187.5732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-194.8315, -189.9159, -169.2814, -174.5340, -187.4557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-194.6657, -189.7227, -169.3168, -174.5108, -187.3025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-194.6220, -189.5799, -169.3395, -174.4913, -187.2127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-194.3898, -189.3252, -169.3582, -174.3192, -186.9594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-194.2696, -189.1661, -169.3737, -174.2836, -186.7979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-194.0681, -189.0531, -169.4512, -174.2762, -186.6152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-193.8342, -188.8886, -169.5899, -174.3141, -186.3878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-193.5620, -188.6538, -169.7464, -174.4126, -186.1157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-193.4266, -188.4901, -169.7913, -174.4073, -185.9137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-193.1023, -188.1776, -169.9656, -174.4481, -185.5699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-192.8285, -187.9654, -170.1035, -174.4552, -185.3048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-192.4427, -187.7652, -170.2367, -174.3862, -184.9767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-192.1757, -187.6995, -170.2999, -174.2932, -184.7790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-192.0623, -187.7588, -170.2641, -174.1369, -184.7264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-191.9215, -187.8175, -170.2065, -173.9088, -184.6436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-191.4548, -187.6006, -170.3630, -173.7326, -184.3285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-190.8782, -187.2966, -170.5872, -173.5729, -183.8976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-190.2731, -186.9576, -170.9189, -173.4962, -183.4569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-189.9240, -186.7901, -171.0599, -173.3371, -183.1756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-190.0222, -186.9733, -171.0226, -173.2697, -183.2393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-190.0910, -187.1722, -171.0677, -173.2858, -183.3085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-190.2376, -187.4443, -171.1195, -173.3885, -183.4384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-190.4214, -187.7684, -171.1351, -173.4732, -183.6278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-190.7429, -188.1667, -171.0060, -173.4431, -183.8991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-190.9948, -188.5741, -170.9007, -173.4124, -184.1365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-191.1119, -188.8593, -170.8388, -173.3343, -184.2595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-191.0809, -188.9882, -170.7576, -173.1150, -184.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-191.1055, -189.0829, -170.6338, -172.9088, -184.1962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-191.4485, -189.3772, -170.3635, -172.7514, -184.4204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-191.6263, -189.5194, -170.1318, -172.5319, -184.5056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-191.7342, -189.6034, -169.8824, -172.2704, -184.5233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-191.8402, -189.6339, -169.6272, -172.0241, -184.5281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-192.0380, -189.7853, -169.3551, -171.8553, -184.6581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-192.2841, -189.9785, -169.0835, -171.7194, -184.8350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-192.3558, -190.0590, -168.8888, -171.5531, -184.8730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-192.5987, -190.2547, -168.6067, -171.3669, -185.0558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-193.0873, -190.5981, -168.2584, -171.2696, -185.3904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-193.2522, -190.6096, -168.0360, -171.1369, -185.4543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-193.4683, -190.6093, -167.7533, -170.9044, -185.5243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-193.6766, -190.6259, -167.4829, -170.6830, -185.5946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-193.9114, -190.6836, -167.2566, -170.5312, -185.7333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-193.9786, -190.6142, -167.1393, -170.3911, -185.7452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-194.0271, -190.5524, -167.0212, -170.2134, -185.7435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-194.1995, -190.6403, -166.8684, -170.0541, -185.8624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-194.8887, -191.1994, -166.4799, -169.9193, -186.3831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-194.9996, -191.2598, -166.2670, -169.7416, -186.4140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-195.1621, -191.3956, -166.1192, -169.6808, -186.5199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-195.2656, -191.4919, -165.9210, -169.4347, -186.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-195.5501, -191.7345, -165.6482, -169.1809, -186.7638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-195.6200, -191.7795, -165.5053, -168.9804, -186.7649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-195.9347, -192.0292, -165.3200, -168.8939, -186.9807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-196.1484, -192.1415, -165.1289, -168.7831, -187.0763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-195.9356, -191.8689, -165.1378, -168.7049, -186.8603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-195.4432, -191.4210, -165.2931, -168.6865, -186.4579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-194.7418, -190.7864, -165.5113, -168.6320, -185.8713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-193.9841, -190.1932, -165.8185, -168.6788, -185.2857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-193.0775, -189.4862, -166.1596, -168.6378, -184.5931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-192.0991, -188.6777, -166.5450, -168.5767, -183.8098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-191.1335, -187.9176, -166.9819, -168.6162, -183.0450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-190.3926, -187.3634, -167.3171, -168.6315, -182.4657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-189.7142, -186.8859, -167.6102, -168.6597, -181.9324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-189.2390, -186.5401, -167.6998, -168.5179, -181.5626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-189.1211, -186.4511, -167.5841, -168.3501, -181.4588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-189.3663, -186.5883, -167.2449, -168.1363, -181.6221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-189.4932, -186.6106, -167.0242, -167.9870, -181.6745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-189.4987, -186.5776, -166.9221, -167.8964, -181.6518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-189.7935, -186.7699, -166.6245, -167.7617, -181.8255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-190.1587, -187.0267, -166.3221, -167.6744, -182.0579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-190.4195, -187.2125, -166.0928, -167.6270, -182.2028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-190.7786, -187.4287, -165.8003, -167.5704, -182.4136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-191.1017, -187.5910, -165.5301, -167.4831, -182.5983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-191.2436, -187.5686, -165.3882, -167.4271, -182.6498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-191.3967, -187.5744, -165.2046, -167.3083, -182.6787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-191.3759, -187.4570, -165.1134, -167.1868, -182.5809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-191.4486, -187.4658, -165.0068, -167.1767, -182.5829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-191.7436, -187.6752, -164.8020, -167.2154, -182.7752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-192.1870, -188.0139, -164.5382, -167.3359, -183.0642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-192.5603, -188.2607, -164.3112, -167.4275, -183.2604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-192.8987, -188.4384, -164.1908, -167.6290, -183.4261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-193.2169, -188.6115, -164.0568, -167.8177, -183.6069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-193.4340, -188.6814, -163.9917, -168.0041, -183.7191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-193.4893, -188.6049, -163.9897, -168.1325, -183.6844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-193.4046, -188.4355, -164.0313, -168.2434, -183.5482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-193.1213, -188.1105, -164.1403, -168.2776, -183.2643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-192.9386, -187.8471, -164.1438, -168.2144, -183.0672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-192.7894, -187.5856, -164.1838, -168.1935, -182.9069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-192.5029, -187.1943, -164.2415, -168.1669, -182.6306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-192.3859, -186.9270, -164.1918, -168.1182, -182.4831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-192.2803, -186.6968, -164.1567, -168.0816, -182.3788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-192.2515, -186.5617, -164.1253, -168.1741, -182.3423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-192.0558, -186.3326, -164.1533, -168.1646, -182.1835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-191.9450, -186.2619, -164.0877, -168.0866, -182.1070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-191.8835, -186.1816, -163.9647, -167.9513, -182.0619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-191.7099, -185.9963, -163.8924, -167.8312, -181.9101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-191.7224, -185.9427, -163.7235, -167.6453, -181.8919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-191.8407, -185.9430, -163.5037, -167.4655, -181.9618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-192.0045, -185.9933, -163.2897, -167.3859, -182.0618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-192.0546, -185.9692, -163.0843, -167.2001, -182.0508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-192.2143, -186.0264, -162.8458, -167.0373, -182.1298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-192.4846, -186.1987, -162.5878, -166.8918, -182.3158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-192.7292, -186.4106, -162.4052, -166.8750, -182.5277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-193.0523, -186.6865, -162.2222, -166.9640, -182.7966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-193.2056, -186.8306, -162.1521, -167.0596, -182.9660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-193.1444, -186.8097, -162.1454, -167.0834, -182.9505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-192.7306, -186.5175, -162.2088, -166.9054, -182.6281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-192.3034, -186.2523, -162.3283, -166.8254, -182.2786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-192.0019, -186.1159, -162.4007, -166.7886, -182.0435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-191.6574, -185.9396, -162.4677, -166.6712, -181.7920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-191.4318, -185.8877, -162.5380, -166.7063, -181.6322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-191.0325, -185.6989, -162.6792, -166.6926, -181.3550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-190.8302, -185.6525, -162.6939, -166.6592, -181.2323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-190.5787, -185.5412, -162.7391, -166.6411, -181.0646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-190.5049, -185.5810, -162.6567, -166.6324, -181.0163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-190.2935, -185.5283, -162.6613, -166.6470, -180.8560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-190.0129, -185.3659, -162.6999, -166.6054, -180.6201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-189.7016, -185.1718, -162.7368, -166.4936, -180.3504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-189.6424, -185.1590, -162.7052, -166.5290, -180.2742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-189.3803, -184.9715, -162.7578, -166.5434, -180.0521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-188.9038, -184.5879, -162.9021, -166.4779, -179.6483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-188.5160, -184.3100, -162.9557, -166.3875, -179.3648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-188.4011, -184.2616, -162.8120, -166.2352, -179.2913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-188.4839, -184.3470, -162.5096, -166.0740, -179.3583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-188.5922, -184.4499, -162.1661, -165.8375, -179.4570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-188.6046, -184.5056, -161.8940, -165.6175, -179.5002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-188.4501, -184.3845, -161.6276, -165.2172, -179.3809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-188.0489, -184.1293, -161.5432, -164.8407, -179.0727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-187.6950, -183.8929, -161.4925, -164.5381, -178.8083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-187.3433, -183.6807, -161.4251, -164.1914, -178.5784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-187.1822, -183.6026, -161.2477, -163.8504, -178.5152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-187.1563, -183.5861, -161.0173, -163.5150, -178.5359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-187.0641, -183.4150, -160.8835, -163.2029, -178.4565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-186.9748, -183.2785, -160.7694, -162.9427, -178.3825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-187.1445, -183.3860, -160.5122, -162.7626, -178.5503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-187.4264, -183.5711, -160.1717, -162.5898, -178.8026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-187.9266, -183.9510, -159.7268, -162.5086, -179.2269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-188.2643, -184.1495, -159.3536, -162.3393, -179.4852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-188.3115, -184.1249, -159.1436, -162.1899, -179.4835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-188.4464, -184.1877, -158.8969, -162.1004, -179.5620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-188.4971, -184.1555, -158.6735, -161.9829, -179.5411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-188.6327, -184.1829, -158.4408, -161.8774, -179.5887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-188.6537, -184.1288, -158.3137, -161.8622, -179.5549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-188.6828, -184.0510, -158.1979, -161.8368, -179.5354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-188.6954, -184.0007, -158.1078, -161.8123, -179.5033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-188.7573, -184.0241, -157.9337, -161.6927, -179.5117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-188.8292, -184.0389, -157.7685, -161.6658, -179.5076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-188.7558, -184.0223, -157.7218, -161.7246, -179.4254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-188.7685, -184.0397, -157.6158, -161.7347, -179.3767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-188.8736, -184.1102, -157.4517, -161.6525, -179.4032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-188.9475, -184.2151, -157.3584, -161.7234, -179.4186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-189.3155, -184.6410, -157.0819, -161.8697, -179.7136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-189.4403, -184.7657, -156.9291, -161.9463, -179.8205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-189.4128, -184.7167, -156.8358, -161.9608, -179.7814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-189.4397, -184.7610, -156.7037, -161.9702, -179.8269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-189.4591, -184.7860, -156.6007, -162.0449, -179.8335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-189.5648, -184.8145, -156.4414, -162.1131, -179.9031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-189.2656, -184.4794, -156.4947, -162.0213, -179.6254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-189.0013, -184.1726, -156.5477, -161.9450, -179.3632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-188.7465, -183.8599, -156.5999, -161.8276, -179.1251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-188.6536, -183.6960, -156.5710, -161.7575, -179.0202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-188.5850, -183.5290, -156.5449, -161.6932, -178.9168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-188.2193, -183.0432, -156.6764, -161.5872, -178.5433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-187.8361, -182.5631, -156.8071, -161.4800, -178.1635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-187.5497, -182.1648, -156.9040, -161.2613, -177.8622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-187.1431, -181.7201, -157.0626, -160.9350, -177.4822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-187.0693, -181.6198, -157.0111, -160.6613, -177.4082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-187.0046, -181.5342, -156.9129, -160.3585, -177.3154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-186.9580, -181.5436, -156.7663, -160.1002, -177.2656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-186.8968, -181.5834, -156.6889, -160.0478, -177.1982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-186.9802, -181.7276, -156.5229, -160.0849, -177.2392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-186.9619, -181.7786, -156.4169, -160.0830, -177.1973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-187.0599, -181.9857, -156.2329, -160.1157, -177.2680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-187.0553, -182.0773, -156.1166, -160.1903, -177.2211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-187.2090, -182.3091, -155.8662, -160.2322, -177.2878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-187.3605, -182.5516, -155.5956, -160.2151, -177.3603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-187.2385, -182.5233, -155.4540, -160.0691, -177.1866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-187.1785, -182.5197, -155.2833, -159.9076, -177.0569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-187.1370, -182.5285, -155.1536, -159.8588, -176.9472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-187.0566, -182.4912, -155.0750, -159.9151, -176.8258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-186.7614, -182.2624, -155.0723, -159.8061, -176.4826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-186.7116, -182.2068, -154.9434, -159.6863, -176.3489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-186.7731, -182.2267, -154.7549, -159.6291, -176.3280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-186.8903, -182.3240, -154.5718, -159.7102, -176.3790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-187.0639, -182.4721, -154.3614, -159.7160, -176.4758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-187.2583, -182.5765, -154.1517, -159.6874, -176.5901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-187.3393, -182.6030, -153.9649, -159.5361, -176.6223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-187.5214, -182.6794, -153.7348, -159.3808, -176.7431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-187.5915, -182.6648, -153.6192, -159.3520, -176.7414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-187.5208, -182.5089, -153.5640, -159.2165, -176.5918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-187.4166, -182.3518, -153.5469, -159.1372, -176.4329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-187.3024, -182.1766, -153.5412, -159.0238, -176.2949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-187.2274, -182.0295, -153.4956, -158.9203, -176.1933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-187.0556, -181.7562, -153.5076, -158.7832, -175.9802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-186.8773, -181.4914, -153.5348, -158.5500, -175.7661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-186.6818, -181.1492, -153.5989, -158.3381, -175.5237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-186.5657, -180.8943, -153.6106, -158.0788, -175.3678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-186.3021, -180.5737, -153.7043, -157.8345, -175.0975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-186.1283, -180.3453, -153.7008, -157.6351, -174.8969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-186.0221, -180.2296, -153.6529, -157.4511, -174.7599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-185.7591, -179.9916, -153.6782, -157.2173, -174.4933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-185.4743, -179.7832, -153.6984, -157.0117, -174.2053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-185.3741, -179.6791, -153.6421, -156.8311, -174.0543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-185.0850, -179.4148, -153.7325, -156.6534, -173.7854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-184.9929, -179.3201, -153.6986, -156.5390, -173.6881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-185.0684, -179.3780, -153.5420, -156.4199, -173.7479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-185.1598, -179.4524, -153.4115, -156.3427, -173.8302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-185.2531, -179.5420, -153.2856, -156.1915, -173.9658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-185.3082, -179.6019, -153.2098, -156.0772, -174.0645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-185.3654, -179.6879, -153.1527, -156.0250, -174.2062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-185.4733, -179.7886, -153.0958, -155.9752, -174.3794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-185.6453, -179.9594, -153.0026, -155.9888, -174.5815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-186.0211, -180.2522, -152.7923, -156.0321, -174.9523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-186.5721, -180.7889, -152.4970, -156.2240, -175.4856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-186.9503, -181.1722, -152.2944, -156.3169, -175.8461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-187.2817, -181.5563, -152.1097, -156.4166, -176.1623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-187.7894, -182.2242, -151.8357, -156.5686, -176.6465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-188.4665, -182.9967, -151.4796, -156.6399, -177.2358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-189.3363, -183.9333, -151.0805, -156.7485, -178.0051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-190.0952, -184.7050, -150.7304, -156.7674, -178.6722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-190.7627, -185.2970, -150.4479, -156.7253, -179.2308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-191.7295, -186.1358, -150.0518, -156.7875, -180.0247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-192.4798, -186.7616, -149.7562, -156.8099, -180.6313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-193.1287, -187.3191, -149.4764, -156.6863, -181.1520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-193.5235, -187.6089, -149.2819, -156.6264, -181.4077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-193.6637, -187.6291, -149.1573, -156.4791, -181.4268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-193.9037, -187.7337, -149.0156, -156.3538, -181.5406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-194.0562, -187.7136, -148.9120, -156.3091, -181.5730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-194.3770, -187.8886, -148.7682, -156.3358, -181.7338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-194.7733, -188.0967, -148.5734, -156.3336, -181.9458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-195.1780, -188.3660, -148.3610, -156.2937, -182.1732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-195.1865, -188.1671, -148.2496, -156.1988, -182.0534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-195.5339, -188.3139, -148.0224, -156.1402, -182.2459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-195.9603, -188.5940, -147.8001, -156.1176, -182.5369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-196.0989, -188.5229, -147.6651, -155.9758, -182.5616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-196.2454, -188.4462, -147.4894, -155.7703, -182.5590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-196.4598, -188.4203, -147.3572, -155.6768, -182.6290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-196.9803, -188.7353, -147.1321, -155.7399, -182.9733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-197.4121, -189.0392, -146.9120, -155.8010, -183.2374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-197.6252, -189.1588, -146.7436, -155.7588, -183.3336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-197.8219, -189.2954, -146.6002, -155.7052, -183.4645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-197.5717, -188.9980, -146.5856, -155.6004, -183.1829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-197.2682, -188.6346, -146.5772, -155.3618, -182.8745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-196.6907, -187.9429, -146.6626, -155.0744, -182.3158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-196.4249, -187.6382, -146.6329, -154.8745, -182.0517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-196.2712, -187.4329, -146.5736, -154.6600, -181.8757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-196.1307, -187.2451, -146.4860, -154.4825, -181.6958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-195.6533, -186.6662, -146.5019, -154.2325, -181.2094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-195.3405, -186.3195, -146.4613, -154.0100, -180.8824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-194.9724, -185.8608, -146.4457, -153.7997, -180.4828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-194.5454, -185.4118, -146.4363, -153.5910, -180.0663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-194.0739, -184.9525, -146.4267, -153.3441, -179.6234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-193.4260, -184.2868, -146.5019, -153.1307, -179.0274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-192.9390, -183.8288, -146.5123, -152.9594, -178.5812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-192.6993, -183.6586, -146.4581, -152.8552, -178.3581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-192.4760, -183.5064, -146.3958, -152.7500, -178.1713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-192.2608, -183.3374, -146.3457, -152.5771, -178.0032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-191.8866, -182.9718, -146.3741, -152.3695, -177.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-191.6842, -182.8119, -146.3277, -152.2203, -177.5572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-191.5705, -182.6884, -146.2449, -152.0305, -177.4725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-191.4387, -182.5408, -146.1846, -151.8596, -177.3757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-191.3982, -182.4578, -146.1201, -151.7491, -177.3319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-191.2137, -182.2781, -146.0987, -151.7057, -177.1459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-191.0632, -182.2167, -146.0081, -151.7036, -177.0071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-190.9261, -182.1907, -145.8905, -151.7042, -176.8916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-190.6742, -182.0447, -145.8104, -151.6642, -176.6842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-190.3733, -181.8689, -145.7435, -151.6236, -176.4293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-189.9647, -181.5831, -145.7015, -151.5472, -176.0924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-189.5897, -181.3657, -145.6524, -151.4196, -175.8205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-189.1823, -181.1363, -145.6252, -151.2844, -175.5247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-188.9159, -181.0855, -145.5382, -151.2978, -175.3653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-188.6919, -181.0844, -145.4464, -151.3492, -175.2128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-188.4802, -181.0399, -145.3641, -151.3516, -175.0791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-188.3696, -181.0497, -145.2562, -151.2777, -175.0205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-188.2406, -180.9714, -145.1877, -151.1974, -174.9102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-188.0623, -180.8255, -145.1313, -151.0838, -174.7530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-188.1146, -180.9171, -144.9714, -151.0854, -174.8102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-188.1563, -180.9742, -144.8169, -150.9736, -174.8477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-188.1013, -180.9864, -144.6803, -150.9208, -174.8470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-188.2094, -181.1736, -144.5021, -150.9217, -175.0067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-188.1048, -181.1261, -144.4138, -150.7656, -174.9583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-187.7222, -180.7862, -144.4372, -150.4934, -174.6867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-187.3150, -180.3592, -144.4780, -150.2753, -174.3627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-186.7054, -179.7331, -144.6168, -150.1422, -173.8252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-186.0365, -179.0371, -144.7846, -150.0028, -173.2248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-185.4371, -178.4396, -144.9152, -149.8903, -172.6827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-185.0629, -178.0647, -144.9605, -149.8636, -172.3365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-184.8620, -177.8608, -144.9446, -149.9142, -172.1311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-184.4271, -177.4044, -145.0712, -149.8089, -171.7379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-184.2025, -177.1115, -145.0983, -149.7771, -171.5134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-184.2114, -177.0042, -145.0504, -149.8109, -171.4815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-184.2294, -176.8966, -144.9897, -149.7160, -171.4393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-184.3531, -176.8187, -144.9260, -149.5568, -171.4550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-184.3743, -176.7041, -144.9084, -149.3887, -171.4192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-184.3331, -176.5391, -144.9515, -149.2454, -171.3357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-184.1091, -176.2534, -145.0764, -149.1593, -171.0906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-183.9613, -175.9595, -145.2102, -148.9794, -170.8858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-183.8641, -175.7211, -145.3234, -148.8256, -170.7380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-183.7133, -175.4915, -145.4296, -148.7341, -170.5360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-183.6932, -175.4801, -145.3911, -148.7400, -170.4888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-183.8279, -175.7114, -145.2268, -148.8003, -170.6041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-184.1298, -176.0408, -145.0122, -148.8357, -170.8438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-184.5474, -176.4068, -144.7659, -148.8431, -171.1370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-185.1025, -176.8876, -144.4003, -148.8745, -171.4965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-185.9094, -177.6073, -143.9205, -149.0565, -172.0641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-186.7173, -178.4238, -143.4227, -149.3367, -172.6380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-187.7762, -179.4833, -142.8771, -149.6260, -173.4571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-188.7549, -180.4906, -142.4213, -149.8901, -174.2306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-189.5140, -181.3782, -142.0769, -150.1651, -174.8755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-189.9633, -181.9048, -141.8543, -150.2195, -175.2518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-190.4886, -182.5617, -141.6088, -150.2856, -175.7270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-191.1646, -183.3368, -141.3439, -150.4139, -176.3339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-191.6467, -183.8879, -141.1374, -150.4071, -176.7611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-191.9122, -184.2735, -140.9839, -150.3519, -177.0160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-192.1315, -184.6448, -140.8405, -150.2733, -177.2103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-192.4442, -185.1734, -140.6816, -150.4232, -177.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-192.7103, -185.6586, -140.5240, -150.4410, -177.6525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-193.1659, -186.2835, -140.3355, -150.5215, -178.0080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-193.8060, -187.0751, -140.1192, -150.6410, -178.5331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-194.0372, -187.3532, -140.0086, -150.5807, -178.7244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-194.4979, -187.9257, -139.8725, -150.5998, -179.1404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-194.7995, -188.3686, -139.7540, -150.6070, -179.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-194.5773, -188.2441, -139.7227, -150.3706, -179.2402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-194.0755, -187.7167, -139.7441, -149.8981, -178.8300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-193.5174, -187.1245, -139.7930, -149.3495, -178.3563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-192.9864, -186.4466, -139.8566, -148.7701, -177.8777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-192.1741, -185.4292, -140.0264, -148.1511, -177.1096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-191.2730, -184.3699, -140.2338, -147.6074, -176.2894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-190.4859, -183.4110, -140.4500, -147.1234, -175.5648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-189.7508, -182.4694, -140.6943, -146.6647, -174.8866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-189.1802, -181.6647, -140.9198, -146.2357, -174.3217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-188.8599, -181.1605, -141.0488, -145.9152, -173.9813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-188.6321, -180.8257, -141.1851, -145.6031, -173.7862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-188.3113, -180.4155, -141.3511, -145.2835, -173.5048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-187.9721, -179.9567, -141.5626, -144.9284, -173.2194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-187.9622, -179.8196, -141.6695, -144.6087, -173.2486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-188.0014, -179.8098, -141.7170, -144.3682, -173.3447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-188.2888, -180.0068, -141.6877, -144.1725, -173.6498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-188.8304, -180.5607, -141.5271, -144.1014, -174.2052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-189.2558, -180.9526, -141.4772, -143.9488, -174.6533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-189.6843, -181.4831, -141.2919, -143.8999, -175.1178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-190.1963, -182.0394, -141.1319, -143.8257, -175.6501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-190.5507, -182.4074, -141.0631, -143.7025, -176.0433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-190.9412, -182.8823, -140.9180, -143.6586, -176.4733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-191.0418, -183.1358, -140.7442, -143.6591, -176.6273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-190.9580, -183.2215, -140.6087, -143.6274, -176.6178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-190.7168, -183.1548, -140.4886, -143.5536, -176.4560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-190.4642, -183.1607, -140.3136, -143.5254, -176.3091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-190.0516, -182.9352, -140.1826, -143.4576, -175.9724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-189.5300, -182.3932, -140.2290, -143.3092, -175.5285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-189.0660, -181.9984, -140.1832, -143.2111, -175.1229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-189.0086, -182.1051, -139.9724, -143.2356, -175.1011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-189.1687, -182.4254, -139.6992, -143.3542, -175.2854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-189.2624, -182.6442, -139.4339, -143.4589, -175.3608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-189.4867, -182.9728, -139.1705, -143.5651, -175.5629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-189.6156, -183.1782, -138.9593, -143.6136, -175.6435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-189.6963, -183.3549, -138.7729, -143.7002, -175.7126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-189.6547, -183.4473, -138.6278, -143.7276, -175.6609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-189.4188, -183.2660, -138.5471, -143.7042, -175.4202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-189.0705, -182.9871, -138.4736, -143.6160, -175.0780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-188.4726, -182.4519, -138.4902, -143.4580, -174.5097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-187.8254, -181.8976, -138.5432, -143.3030, -173.9019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-187.3843, -181.5546, -138.5486, -143.1825, -173.4736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-187.1401, -181.3704, -138.5311, -143.0861, -173.2386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-186.8480, -181.1444, -138.5103, -143.0538, -172.9573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-186.6479, -180.8282, -138.4865, -143.0730, -172.7007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-186.4585, -180.4620, -138.4727, -143.0487, -172.4714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-186.3864, -180.2066, -138.4075, -143.0661, -172.3368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-186.5809, -180.1374, -138.2920, -143.0958, -172.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-186.5458, -179.8513, -138.2936, -143.0374, -172.3342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-186.5920, -179.6500, -138.2375, -143.0395, -172.2934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-186.6897, -179.5254, -138.1510, -143.0279, -172.2882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-186.9253, -179.4725, -138.0649, -143.0539, -172.4158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-187.4667, -179.7985, -137.8611, -143.1851, -172.8174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-187.8526, -179.9566, -137.6954, -143.2579, -173.0583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-188.3479, -180.2095, -137.4958, -143.3991, -173.3806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-188.7207, -180.3910, -137.2934, -143.5212, -173.5506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-189.5124, -180.9829, -136.9954, -143.8190, -174.1307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-190.2456, -181.4819, -136.7377, -144.0812, -174.6666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-190.9423, -181.9746, -136.5196, -144.3272, -175.2028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-191.7126, -182.6000, -136.2738, -144.6297, -175.8338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-192.5384, -183.2510, -136.0713, -144.8778, -176.5496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-192.9141, -183.5264, -135.9544, -145.0029, -176.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-193.3956, -183.9262, -135.7980, -145.2091, -177.2745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-194.2113, -184.7404, -135.5468, -145.5684, -177.9553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-194.7956, -185.3002, -135.3236, -145.9016, -178.4068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-195.4000, -185.8847, -135.1087, -146.1874, -178.8736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-195.9747, -186.5402, -134.8947, -146.4394, -179.3650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-196.5089, -187.0542, -134.7221, -146.7081, -179.8257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-197.1306, -187.6838, -134.5373, -147.0246, -180.3427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-197.5360, -188.0710, -134.4092, -147.2079, -180.6875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-197.7176, -188.2230, -134.3302, -147.2717, -180.8622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-197.8604, -188.3980, -134.2400, -147.2750, -180.9905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-197.9100, -188.5009, -134.1729, -147.1591, -181.1251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-198.0282, -188.6826, -134.0858, -147.0285, -181.3213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-197.7537, -188.4733, -134.0719, -146.7140, -181.2134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-197.5762, -188.3529, -134.0418, -146.4269, -181.1562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-197.4202, -188.2463, -134.0130, -146.1877, -181.1072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-196.9913, -187.8544, -134.0135, -145.7975, -180.7377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-196.5259, -187.3709, -134.0585, -145.4187, -180.3169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-196.1486, -186.9891, -134.0920, -145.0405, -180.0103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-195.4761, -186.2993, -134.1812, -144.5541, -179.4435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-195.2500, -186.0952, -134.1968, -144.2515, -179.2759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-195.0271, -185.8459, -134.2554, -143.9391, -179.1109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-194.6283, -185.3275, -134.4241, -143.5102, -178.8185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-194.3521, -184.9437, -134.5893, -143.1340, -178.6410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-193.9268, -184.3454, -134.7827, -142.7638, -178.2892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-193.6236, -183.8573, -134.9331, -142.4739, -178.0452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-193.5166, -183.6128, -134.9897, -142.2811, -177.9776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-193.4182, -183.4375, -134.9814, -142.1746, -177.9020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-193.3129, -183.2371, -134.9881, -142.0494, -177.8113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-193.1991, -183.1400, -134.9260, -141.9851, -177.7300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-192.9601, -182.9703, -134.8312, -141.8468, -177.5043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-192.8265, -182.9223, -134.7285, -141.7195, -177.3946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-192.5588, -182.8367, -134.6251, -141.5345, -177.1549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-192.3504, -182.7700, -134.5065, -141.3499, -176.9697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-192.5681, -183.2278, -134.2370, -141.3632, -177.1741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-192.7777, -183.6849, -133.9824, -141.3826, -177.3640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-192.9681, -184.0445, -133.7723, -141.3673, -177.5222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-192.9419, -184.1780, -133.6113, -141.2687, -177.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-192.7108, -184.0093, -133.5097, -141.1140, -177.2276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-192.3821, -183.6813, -133.4710, -140.9029, -176.8764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-192.2460, -183.5346, -133.3456, -140.7957, -176.6497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-192.4066, -183.6631, -133.1580, -140.7983, -176.6847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-192.7606, -183.9694, -132.9369, -140.8584, -176.9080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-193.0119, -184.1098, -132.7384, -140.9280, -177.0311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-193.1615, -184.2077, -132.4964, -140.9914, -177.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-193.3806, -184.3495, -132.2480, -141.0800, -177.0471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-193.6442, -184.5560, -132.0039, -141.1488, -177.1622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-194.0385, -184.9013, -131.7557, -141.2672, -177.4125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-194.2222, -185.0637, -131.5465, -141.3194, -177.4544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-194.5045, -185.2546, -131.3177, -141.4103, -177.5713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-195.0416, -185.6461, -131.1001, -141.5601, -177.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-195.5497, -185.9883, -130.9176, -141.6922, -178.3748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-195.9658, -186.1824, -130.7858, -141.7377, -178.6762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-196.2121, -186.2663, -130.6560, -141.8008, -178.8417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-196.2364, -186.1349, -130.5550, -141.7697, -178.7637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-196.4338, -186.2202, -130.4126, -141.7748, -178.8370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-196.4781, -186.0623, -130.3642, -141.6460, -178.8005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-196.6846, -186.0550, -130.3130, -141.6096, -178.9658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-196.9684, -186.0810, -130.2567, -141.5931, -179.2044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-197.4126, -186.2253, -130.2063, -141.6567, -179.6363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-197.8496, -186.4110, -130.1139, -141.7306, -180.0208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-198.3914, -186.7737, -129.9792, -141.8747, -180.4948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-199.1192, -187.4018, -129.7811, -142.0953, -181.1502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-199.8633, -188.0551, -129.6210, -142.3083, -181.8838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-200.6465, -188.7488, -129.4660, -142.5623, -182.6561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-201.4425, -189.4375, -129.2805, -142.8736, -183.3635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-202.6675, -190.6713, -129.0078, -143.4353, -184.5017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-203.4788, -191.4130, -128.8146, -143.7408, -185.2129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-204.3745, -192.3667, -128.5765, -144.1529, -185.9807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-204.8734, -192.8422, -128.4288, -144.3564, -186.4059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-204.8952, -192.8038, -128.2812, -144.3627, -186.3043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-205.1731, -193.0256, -128.1168, -144.5037, -186.4746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-204.9220, -192.5796, -128.0379, -144.3804, -186.1208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-204.2710, -191.7070, -128.0115, -144.0661, -185.4607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-204.0756, -191.3890, -127.9416, -143.9721, -185.2948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-204.1633, -191.4038, -127.8208, -144.0243, -185.3923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-203.8752, -190.9626, -127.7644, -143.8972, -185.1260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-203.2816, -190.0705, -127.7798, -143.5963, -184.5439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-202.4459, -188.9499, -127.8295, -143.2006, -183.7566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-202.1456, -188.3846, -127.8419, -143.0159, -183.5455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-202.0248, -188.1417, -127.7617, -142.9462, -183.4413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-202.0298, -187.9668, -127.6968, -142.9174, -183.4646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-202.3169, -188.1181, -127.6080, -143.0146, -183.7991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-202.5972, -188.2751, -127.5091, -143.1331, -184.1234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-202.5841, -188.1242, -127.4671, -143.0890, -184.1544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-202.4259, -187.8020, -127.4691, -142.9604, -184.0796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-202.1682, -187.4171, -127.5071, -142.7415, -183.9220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-201.9416, -187.1212, -127.5210, -142.5791, -183.7820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-201.4775, -186.5085, -127.6566, -142.2641, -183.4641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-201.1560, -186.0246, -127.7710, -141.9849, -183.2740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-200.8858, -185.5372, -127.8898, -141.7126, -183.1024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-200.8134, -185.3698, -127.9133, -141.5786, -183.1126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-200.8121, -185.3439, -127.8643, -141.4887, -183.1536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-200.5185, -185.0633, -127.8888, -141.2059, -182.9305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-200.3844, -184.9368, -127.8886, -141.0176, -182.8539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-200.2924, -184.8812, -127.8433, -140.9046, -182.8268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-200.4485, -184.9969, -127.7855, -140.9262, -183.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-200.2579, -184.6517, -127.8426, -140.7154, -182.8999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-200.0109, -184.3316, -127.8289, -140.5238, -182.6732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-199.6920, -183.8727, -127.8329, -140.3103, -182.3817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-199.6347, -183.6638, -127.8291, -140.2083, -182.3930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-199.3930, -183.3394, -127.8557, -140.0138, -182.2409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-198.9886, -182.8714, -127.8843, -139.7447, -181.9137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-198.3546, -182.2290, -127.9680, -139.2926, -181.3129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-197.5766, -181.4875, -128.0769, -138.8081, -180.5908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-196.7220, -180.7025, -128.1297, -138.3322, -179.7752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-195.8927, -180.0639, -128.0555, -137.8832, -178.9396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-195.3433, -179.7649, -127.9219, -137.6075, -178.4267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-195.0500, -179.7965, -127.6555, -137.5237, -178.1813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-194.5631, -179.5782, -127.4157, -137.3295, -177.6834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-194.1694, -179.3680, -127.2884, -137.1332, -177.3303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-193.7873, -179.2810, -127.0864, -136.9834, -176.9666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-193.5951, -179.2874, -126.9003, -136.9309, -176.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-193.5382, -179.4659, -126.5706, -136.9997, -176.6710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-193.7440, -179.9190, -126.2143, -137.2208, -176.8567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-194.0828, -180.4150, -125.9168, -137.4925, -177.1940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-194.1784, -180.5675, -125.7647, -137.5798, -177.3246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-194.1177, -180.5098, -125.6765, -137.5996, -177.3255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-194.1691, -180.5424, -125.5669, -137.6776, -177.4352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-194.6196, -181.0289, -125.4219, -137.9487, -177.9864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-195.2238, -181.7269, -125.2431, -138.3149, -178.7102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-195.8123, -182.4464, -125.0484, -138.6555, -179.4044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-196.3166, -183.0561, -124.8555, -138.9425, -180.0068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-196.9695, -183.8427, -124.5724, -139.3041, -180.7039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-197.5445, -184.5018, -124.3784, -139.6127, -181.3540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-198.1381, -185.1452, -124.2323, -139.9470, -182.0919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-198.7797, -185.8062, -124.1247, -140.2556, -182.8986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-199.3131, -186.2762, -124.1163, -140.5302, -183.6798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-199.7093, -186.5569, -124.1853, -140.7301, -184.3547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-200.3819, -187.1287, -124.1974, -141.1149, -185.3061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-201.1585, -187.7414, -124.2732, -141.5879, -186.4465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-201.9482, -188.4012, -124.3768, -142.0445, -187.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-202.6808, -189.0590, -124.4791, -142.4618, -188.7735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-203.3911, -189.6501, -124.5856, -142.8712, -189.8220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-204.0351, -190.1866, -124.6759, -143.2435, -190.7712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-204.3780, -190.3864, -124.8183, -143.4392, -191.3971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-204.7874, -190.6532, -124.9889, -143.6492, -192.1050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-205.3461, -191.1494, -125.1061, -143.9990, -193.0036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-205.7608, -191.4777, -125.2253, -144.2358, -193.7049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-206.3701, -192.0433, -125.3488, -144.5873, -194.6495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-207.0916, -192.7706, -125.4050, -145.0616, -195.6906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-207.9827, -193.8099, -125.4092, -145.6247, -196.9312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-208.9853, -195.0554, -125.3401, -146.2775, -198.2661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-209.8548, -196.0697, -125.3282, -146.8256, -199.4573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-210.7727, -197.1828, -125.2924, -147.4387, -200.7007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-211.8637, -198.5206, -125.3301, -148.1068, -202.2252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-212.7369, -199.7696, -125.2924, -148.6845, -203.5103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-213.7450, -201.1410, -125.2239, -149.3680, -204.8925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-214.7137, -202.4152, -125.1875, -150.1103, -206.2600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-215.7791, -203.8937, -125.0607, -150.9569, -207.6659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-216.5727, -205.0424, -124.8740, -151.6492, -208.6837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-217.1601, -205.8452, -124.7413, -152.1818, -209.4636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-217.3391, -206.1038, -124.6692, -152.4515, -209.7642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-217.4782, -206.3166, -124.5782, -152.6671, -209.9616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-217.6419, -206.6014, -124.4253, -152.8961, -210.1209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-217.8174, -206.8879, -124.3305, -153.0772, -210.3574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-217.8903, -206.9339, -124.3481, -153.1787, -210.5586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-217.8775, -206.8359, -124.3938, -153.1774, -210.6617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-217.6309, -206.4168, -124.4196, -153.0228, -210.4472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-217.1860, -205.8212, -124.3628, -152.7637, -209.9401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-216.7858, -205.2882, -124.3818, -152.4625, -209.5626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-216.1441, -204.4043, -124.5265, -151.9280, -209.0162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-215.5109, -203.4727, -124.6804, -151.4441, -208.4927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-215.1030, -202.8928, -124.7318, -151.1317, -208.1386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-214.6523, -202.1789, -124.8475, -150.7473, -207.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-214.2050, -201.4614, -124.9730, -150.3668, -207.3936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-213.7392, -200.6718, -125.1481, -149.9677, -207.0135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-213.3167, -199.9515, -125.2999, -149.5442, -206.6415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-213.0472, -199.4219, -125.4510, -149.2290, -206.4625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-212.6589, -198.7417, -125.6025, -148.8262, -206.1279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-212.1431, -197.9822, -125.7406, -148.3321, -205.6347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-211.7846, -197.3043, -125.9753, -147.8699, -205.3417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-211.7030, -197.1119, -126.0955, -147.5923, -205.3347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-211.7898, -197.0603, -126.2358, -147.4387, -205.5248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-212.0773, -197.1942, -126.3912, -147.3979, -205.9382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-212.8378, -197.9436, -126.4820, -147.6930, -206.8943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-213.7865, -198.9901, -126.5572, -148.1936, -208.1154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-215.0351, -200.3690, -126.6586, -148.8310, -209.6568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-216.3478, -201.8072, -126.7960, -149.4893, -211.2771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-217.8203, -203.5663, -126.8451, -150.3535, -213.1088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-219.5138, -205.6754, -126.8646, -151.3390, -215.1786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-220.8607, -207.3450, -126.9160, -152.1139, -216.8585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-222.4692, -209.2263, -126.9868, -153.1993, -218.8431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-223.6155, -210.3717, -127.1821, -153.8671, -220.2905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-224.6606, -211.4534, -127.3803, -154.4550, -221.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-226.1488, -213.2518, -127.4927, -155.3820, -223.5166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-227.3837, -214.6366, -127.6666, -156.0799, -225.0391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-228.8655, -216.4418, -127.7604, -156.9797, -226.8081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-229.5852, -217.2063, -127.9767, -157.2520, -227.7360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-230.5043, -218.3093, -128.1207, -157.6959, -228.8923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-231.2194, -219.0519, -128.2913, -157.9465, -229.7694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-232.0296, -220.0726, -128.3389, -158.3400, -230.7415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-232.3603, -220.3439, -128.4636, -158.4434, -231.1692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-232.9170, -221.0492, -128.4934, -158.7998, -231.8652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-233.3592, -221.3369, -128.6694, -159.0163, -232.4359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-233.7572, -221.4730, -128.8844, -159.2386, -232.9653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-233.9991, -221.3228, -129.2071, -159.2506, -233.3499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-233.8033, -220.5548, -129.5354, -158.9876, -233.2252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-233.7197, -220.0796, -129.8547, -158.7363, -233.2359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-233.6712, -219.6167, -130.1719, -158.5272, -233.2608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-233.2970, -218.7899, -130.4531, -158.0392, -232.8892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-232.8483, -217.8914, -130.6730, -157.5414, -232.3726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-232.1606, -216.7343, -130.8286, -156.9453, -231.5534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-231.3399, -215.2330, -131.1268, -156.2114, -230.5965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-230.6589, -214.0144, -131.4175, -155.5660, -229.8187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-230.4996, -213.4339, -131.7580, -155.2717, -229.6652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-230.4573, -213.0958, -132.0302, -155.0685, -229.6411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-230.5030, -212.8396, -132.3289, -154.9577, -229.7260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-230.7038, -212.9270, -132.4430, -155.0812, -229.9962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-230.5032, -212.7147, -132.3303, -155.1239, -229.8046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-230.3062, -212.5135, -132.1986, -155.1752, -229.6152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-230.1414, -212.3464, -132.0302, -155.2815, -229.4551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-230.3021, -212.7180, -131.8511, -155.5839, -229.7272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-230.4129, -213.1281, -131.6047, -155.9714, -229.9561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-231.2417, -214.3188, -131.4768, -156.7588, -230.9650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-231.9777, -215.4269, -131.3136, -157.5099, -231.8618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-232.2665, -216.0751, -131.0265, -158.0080, -232.1767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-231.8947, -215.7121, -130.8092, -158.0195, -231.6855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-231.7822, -215.8018, -130.4740, -158.2939, -231.4569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-231.5702, -215.7298, -130.1612, -158.5270, -231.1160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-231.6570, -216.0375, -129.9117, -158.9165, -231.1514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-231.7946, -216.4390, -129.6244, -159.3093, -231.2058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-232.3382, -217.3129, -129.4636, -159.8746, -231.7618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-232.6068, -217.7034, -129.4064, -160.0725, -232.0017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-232.8960, -218.1446, -129.3012, -160.3900, -232.2462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-233.0189, -218.5152, -129.0386, -160.6707, -232.2358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-233.4402, -219.2445, -128.7524, -161.1559, -232.5000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-234.1957, -220.4207, -128.4865, -161.7883, -233.1465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-234.5903, -220.9998, -128.3294, -162.2301, -233.4902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-235.0441, -221.5686, -128.2571, -162.6127, -233.8870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-235.6957, -222.3225, -128.2070, -163.2128, -234.4899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-236.3739, -223.1269, -128.1558, -163.7776, -235.1175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-236.7923, -223.6430, -128.1627, -164.0871, -235.5687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-237.5893, -224.4780, -128.3040, -164.5460, -236.4980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-238.7248, -225.7347, -128.4229, -165.3085, -237.7697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-239.6869, -226.6968, -128.6372, -165.9141, -238.9300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-240.4302, -227.4086, -128.8584, -166.3372, -239.8773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-241.4713, -228.5055, -128.9758, -166.9556, -241.0282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-242.5831, -229.6600, -129.1506, -167.6627, -242.3536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-244.0706, -231.3033, -129.3646, -168.6432, -244.1034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-246.3816, -234.0024, -129.5506, -170.1380, -246.6229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-248.8384, -236.7720, -129.8232, -171.7429, -249.2948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-250.7154, -238.8817, -130.0802, -172.9277, -251.3712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-251.9368, -240.1957, -130.3024, -173.6822, -252.7468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-253.2841, -241.7605, -130.4753, -174.4901, -254.2125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-254.1270, -242.6298, -130.7156, -175.0160, -255.2814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-254.8603, -243.3674, -130.9217, -175.4709, -256.2160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-256.4592, -245.0313, -131.2403, -176.5360, -258.0237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-258.6027, -247.5821, -131.3915, -177.8940, -260.1972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-260.2835, -249.5222, -131.5794, -178.9626, -261.9446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-261.7848, -251.1974, -131.8245, -179.8679, -263.5519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-262.8495, -252.3733, -132.0653, -180.5269, -264.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-262.6660, -252.0649, -132.3594, -180.4688, -265.0653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-263.1943, -252.5500, -132.6782, -180.8256, -265.9230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-263.8624, -253.2048, -132.9937, -181.1954, -266.8662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-265.4300, -254.9575, -133.4356, -182.0945, -268.8247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-267.0389, -256.8340, -133.7826, -183.0999, -270.7397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-268.8967, -258.9699, -134.0534, -184.3123, -272.7610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-271.1283, -261.4552, -134.3196, -185.6767, -274.9844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-273.8387, -264.6020, -134.5428, -187.2441, -277.5388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-276.6683, -267.9308, -134.8291, -188.7724, -280.1942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-279.1084, -270.7558, -135.1325, -190.1170, -282.5655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-281.5454, -273.4956, -135.5011, -191.4448, -284.9582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-283.0924, -275.2683, -135.9424, -192.3291, -286.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-284.9121, -277.4457, -136.4111, -193.4536, -288.9916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-286.7300, -279.5450, -137.0045, -194.5106, -291.2634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-287.8414, -280.6962, -137.5296, -195.1768, -292.7751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-289.4667, -282.4131, -137.9640, -196.2800, -294.5988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-290.3314, -283.1820, -138.4108, -196.9726, -295.8086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-291.1282, -283.9268, -138.8004, -197.6304, -296.9496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-291.4129, -284.0372, -139.2215, -197.9737, -297.6719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-291.1768, -283.5616, -139.6799, -197.9843, -298.0505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-291.1707, -283.3730, -140.1221, -198.1692, -298.6074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-291.7962, -283.8957, -140.6037, -198.7838, -299.7335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-292.4314, -284.4394, -141.1449, -199.3154, -300.9071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-292.8115, -284.6992, -141.6132, -199.6660, -301.7921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-293.0921, -284.7069, -142.0513, -199.9888, -302.5187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-292.8672, -283.9957, -142.5467, -199.9649, -302.8002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-292.3503, -282.6955, -143.0845, -199.7697, -302.7647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-291.7525, -281.2586, -143.6106, -199.5034, -302.5858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-291.7417, -280.4914, -144.1505, -199.4754, -302.8412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-291.2576, -278.9595, -144.8447, -199.1732, -302.7894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-290.8155, -277.4757, -145.5327, -198.8866, -302.7310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-290.6407, -276.3855, -146.1441, -198.7860, -302.8925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-291.6442, -277.0129, -146.5936, -199.4575, -304.0566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-293.3570, -278.7482, -146.8942, -200.6113, -305.8066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-295.7722, -281.6399, -147.0313, -202.1710, -308.1095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-298.0398, -284.3005, -147.1168, -203.6614, -310.1473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-300.8127, -287.6000, -147.1655, -205.5121, -312.5586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-303.1116, -290.1778, -147.1987, -206.9564, -314.4116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-305.8884, -293.2584, -147.3572, -208.5813, -316.7131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-307.4112, -294.6402, -147.4047, -209.5353, -317.7233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-308.4763, -295.2983, -147.4429, -210.1999, -318.2025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-309.4810, -295.7960, -147.3987, -210.8110, -318.4555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-310.0860, -295.6726, -147.4490, -211.1216, -318.3854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-309.6694, -294.2813, -147.5774, -210.9837, -317.6668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-309.6252, -293.3447, -147.7080, -211.0536, -317.2194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-309.9461, -292.8540, -147.8697, -211.2548, -317.0556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-310.9304, -293.1875, -147.9889, -211.8814, -317.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-312.2928, -294.1166, -148.1047, -212.7312, -318.1411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-313.8522, -295.2800, -148.2108, -213.7921, -319.0881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-315.8148, -297.0474, -148.3735, -215.0140, -320.4479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-318.0974, -299.1878, -148.5316, -216.3534, -322.0487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-319.6716, -300.6547, -148.7152, -217.3481, -323.2358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-321.1320, -301.9840, -148.9505, -218.1786, -324.3180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-322.5274, -303.2283, -149.2518, -218.8837, -325.3998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-323.5454, -303.9110, -149.6154, -219.4129, -326.2538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-325.2140, -305.3334, -149.9906, -220.2659, -327.5979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-326.6749, -306.3374, -150.4273, -220.8017, -328.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-328.3715, -307.6271, -150.8348, -221.4596, -329.7960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-330.1463, -309.1031, -151.1338, -222.2072, -330.9653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-331.7387, -310.2744, -151.5507, -222.7674, -332.0710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-334.0391, -312.3413, -152.0057, -223.7451, -333.8558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-336.5566, -314.7757, -152.4690, -224.9130, -335.9214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-339.0137, -317.0901, -152.9264, -226.0209, -337.8741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-342.2194, -320.3045, -153.4681, -227.4902, -340.5212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-345.4302, -323.5155, -154.0028, -229.0332, -343.1975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-349.4808, -327.8891, -154.6528, -231.0243, -346.7144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-354.1754, -332.9402, -155.3830, -233.3452, -350.7962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-359.1181, -338.1129, -156.1182, -235.9210, -355.1004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-364.1406, -343.3785, -156.6752, -238.7066, -359.3814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-368.9267, -348.3653, -157.2241, -241.4074, -363.4863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-372.9456, -352.5431, -157.7902, -243.7603, -367.1018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-376.2508, -355.8007, -158.3597, -245.6775, -370.1058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-379.3247, -358.6478, -159.0033, -247.6032, -373.0008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-382.9430, -362.1459, -159.6758, -249.6527, -376.2259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-385.5610, -364.3383, -160.3270, -251.1498, -378.5994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-388.1529, -366.3206, -160.9400, -252.4829, -380.6515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-389.8675, -367.3007, -161.4183, -253.4297, -381.9284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-391.3999, -368.0580, -161.7698, -254.4489, -383.0882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-392.2532, -367.8736, -162.0521, -255.0080, -383.4892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-392.8471, -367.5321, -162.3295, -255.7145, -383.8792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-393.4982, -367.2774, -162.6129, -256.5389, -384.3796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-393.9593, -366.7001, -162.8351, -257.1770, -384.5611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-394.1752, -365.7250, -163.0795, -257.3740, -384.2974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-394.2197, -364.6751, -163.2140, -257.4800, -383.7598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-393.7775, -363.1853, -163.3636, -257.3148, -382.8785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-392.4521, -360.7022, -163.4215, -256.7946, -381.2600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-390.9412, -358.0236, -163.5114, -256.2342, -379.5754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-388.5038, -354.3939, -163.6008, -255.2240, -377.2356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-386.9129, -351.7553, -163.8040, -254.6663, -375.6781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-385.3590, -349.1040, -164.0072, -254.1331, -374.0689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-383.2118, -345.8555, -164.1240, -253.3386, -372.0082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-382.1782, -343.8914, -164.3173, -252.9673, -370.7672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-380.4389, -341.0141, -164.4613, -252.0644, -368.8089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-378.6164, -338.0718, -164.6222, -251.0407, -366.7897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-377.1863, -335.5939, -164.8138, -250.2853, -365.1419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-375.5648, -332.8092, -165.1372, -249.3441, -363.3506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-374.1067, -330.1666, -165.5091, -248.4131, -361.6349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-373.7228, -328.6292, -165.9632, -247.9336, -360.7616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-373.8183, -327.6213, -166.4047, -247.5795, -360.1912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-374.3652, -327.1869, -166.8597, -247.4699, -360.0224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-376.2680, -328.1775, -167.2731, -247.9951, -360.7439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-378.6203, -329.6147, -167.6386, -248.7933, -361.7192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-381.0283, -331.3195, -167.8476, -249.7695, -362.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-384.1935, -333.9067, -168.0392, -251.0570, -364.3752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-387.6240, -336.9529, -168.3038, -252.4584, -366.3641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-391.6239, -340.7563, -168.5937, -254.2060, -368.8949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-395.1238, -343.8550, -169.0144, -255.5705, -370.9971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-399.3052, -347.4358, -169.5913, -256.9607, -373.3909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-404.3248, -352.1238, -170.2418, -258.9506, -376.7283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-410.1918, -357.7044, -171.0171, -261.2937, -380.7495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-416.2541, -363.5705, -171.8727, -263.6464, -384.9563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-422.4977, -369.5162, -172.7537, -266.1374, -389.2587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-429.1222, -375.8819, -173.8621, -268.7216, -393.9302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-435.0387, -381.4882, -174.9688, -271.1339, -398.2045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-440.7425, -386.9007, -176.0143, -273.5333, -402.3531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-446.1262, -392.0389, -176.9257, -275.9860, -406.3023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-450.7319, -396.3571, -177.6839, -278.2088, -409.6722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-454.9129, -400.0783, -178.4206, -280.2481, -412.6956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-459.0884, -403.8299, -179.1167, -282.4586, -415.8714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-462.7762, -406.9694, -179.8220, -284.4642, -418.6802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-465.5545, -409.1446, -180.4051, -286.0728, -420.7388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-469.8109, -412.7536, -181.1435, -288.3359, -423.8966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-473.1044, -415.5644, -181.7140, -290.3594, -426.4927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-476.2507, -418.1454, -182.1856, -292.2524, -428.8782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-479.7236, -420.9918, -182.6912, -294.2373, -431.4390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-482.2279, -422.7219, -183.1744, -295.6300, -433.1286],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_101343.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(138.7520, device='cuda:0', dtype=torch.float64)
tensor([-2.2527, -4.4318, -3.0269, -6.9525, -3.6944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(97.9458, device='cuda:0', dtype=torch.float64)
tensor([-2.4030, -4.9442, -3.0154, -4.2124, -3.8888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(91.1195, device='cuda:0', dtype=torch.float64)
tensor([-2.4211, -5.1225, -3.0221, -3.8528, -4.4973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(59.2269, device='cuda:0', dtype=torch.float64)
tensor([-2.4944, -4.3657, -2.9880, -3.5133, -4.8517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(58.0201, device='cuda:0', dtype=torch.float64)
tensor([-2.4282, -4.9603, -2.9395, -5.2084, -4.9928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(72.3352, device='cuda:0', dtype=torch.float64)
tensor([-2.1455, -4.5351, -2.8427, -5.4630, -5.1234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(69.9527, device='cuda:0', dtype=torch.float64)
tensor([-1.8935, -3.4909, -2.7819, -3.8044, -4.6280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.6008, device='cuda:0', dtype=torch.float64)
tensor([-1.7541, -3.2294, -2.8236, -3.9447, -4.0279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.6824, device='cuda:0', dtype=torch.float64)
tensor([-1.7297, -3.6189, -2.9330, -4.2365, -3.6427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.3089, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -3.8359, -3.0422, -4.4418, -3.4998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.3498, device='cuda:0', dtype=torch.float64)
tensor([-2.0923, -3.5087, -3.1411, -4.4932, -3.4634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.7846, device='cuda:0', dtype=torch.float64)
tensor([-1.9060, -3.1086, -3.2196, -4.2356, -3.3795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.9443, device='cuda:0', dtype=torch.float64)
tensor([-1.6610, -2.8616, -3.2921, -3.8754, -3.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.8110, device='cuda:0', dtype=torch.float64)
tensor([-1.5937, -2.7309, -3.4033, -3.6500, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.0118, device='cuda:0', dtype=torch.float64)
tensor([-1.6082, -2.7087, -3.3609, -3.4958, -3.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.8613, device='cuda:0', dtype=torch.float64)
tensor([-1.6779, -2.7624, -3.2688, -3.3673, -3.2661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4501, device='cuda:0', dtype=torch.float64)
tensor([-1.7918, -2.8887, -3.3052, -3.2551, -3.4047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4697, device='cuda:0', dtype=torch.float64)
tensor([-1.9232, -3.0878, -3.4094, -3.1541, -3.5056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.9841, device='cuda:0', dtype=torch.float64)
tensor([-2.0385, -3.2423, -3.4539, -3.0719, -3.5184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9313, device='cuda:0', dtype=torch.float64)
tensor([-2.1252, -3.2290, -3.3922, -3.0189, -3.4982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.7022, device='cuda:0', dtype=torch.float64)
tensor([-2.1833, -3.1632, -3.2791, -2.9909, -3.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2480, device='cuda:0', dtype=torch.float64)
tensor([-2.2091, -3.1045, -3.1716, -2.9811, -3.4334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.4633, device='cuda:0', dtype=torch.float64)
tensor([-2.1973, -3.0359, -3.0902, -2.9908, -3.3521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.9726, device='cuda:0', dtype=torch.float64)
tensor([-2.1408, -2.9679, -3.0386, -3.0227, -3.2605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6133, device='cuda:0', dtype=torch.float64)
tensor([-2.0434, -2.9374, -3.0155, -3.0715, -3.1773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.6489, device='cuda:0', dtype=torch.float64)
tensor([-1.9288, -2.9668, -3.0142, -3.1268, -3.1084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.5996, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -3.0008, -3.0249, -3.1803, -3.0578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2916, device='cuda:0', dtype=torch.float64)
tensor([-1.7421, -2.9499, -3.0373, -3.2252, -3.0301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2041, device='cuda:0', dtype=torch.float64)
tensor([-1.6859, -2.8261, -3.0428, -3.2550, -3.0266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.2421, device='cuda:0', dtype=torch.float64)
tensor([-1.6552, -2.7083, -3.0368, -3.2657, -3.0450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1601, device='cuda:0', dtype=torch.float64)
tensor([-1.6481, -2.6298, -3.0177, -3.2569, -3.0814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.1922, device='cuda:0', dtype=torch.float64)
tensor([-1.6620, -2.5870, -2.9876, -3.2321, -3.1323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9234, device='cuda:0', dtype=torch.float64)
tensor([-1.6932, -2.5728, -2.9511, -3.1978, -3.1934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7827, device='cuda:0', dtype=torch.float64)
tensor([-1.7367, -2.5809, -2.9125, -3.1616, -3.2575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9370, device='cuda:0', dtype=torch.float64)
tensor([-1.7863, -2.6050, -2.8754, -3.1304, -3.3158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7041, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6377, -2.8423, -3.1079, -3.3593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3802, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.6706, -2.8136, -3.0944, -3.3816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9701, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.6953, -2.7887, -3.0878, -3.3809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0807, device='cuda:0', dtype=torch.float64)
tensor([-1.9117, -2.7068, -2.7677, -3.0859, -3.3614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7253, device='cuda:0', dtype=torch.float64)
tensor([-1.9082, -2.7056, -2.7517, -3.0881, -3.3305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0852, device='cuda:0', dtype=torch.float64)
tensor([-1.8942, -2.6968, -2.7420, -3.0948, -3.2962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3858, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.6871, -2.7386, -3.1059, -3.2647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8996, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.6784, -2.7403, -3.1205, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9020, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6713, -2.7455, -3.1369, -3.2235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9304, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6660, -2.7526, -3.1527, -3.2161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8796, device='cuda:0', dtype=torch.float64)
tensor([-1.8131, -2.6625, -2.7599, -3.1660, -3.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7794, device='cuda:0', dtype=torch.float64)
tensor([-1.8095, -2.6611, -2.7653, -3.1757, -3.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6198, device='cuda:0', dtype=torch.float64)
tensor([-1.8095, -2.6615, -2.7674, -3.1813, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4612, device='cuda:0', dtype=torch.float64)
tensor([-1.8113, -2.6631, -2.7657, -3.1829, -3.2382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4410, device='cuda:0', dtype=torch.float64)
tensor([-1.8132, -2.6653, -2.7606, -3.1814, -3.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4770, device='cuda:0', dtype=torch.float64)
tensor([-1.8139, -2.6671, -2.7540, -3.1781, -3.2459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4383, device='cuda:0', dtype=torch.float64)
tensor([-1.8127, -2.6674, -2.7481, -3.1745, -3.2445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2627, device='cuda:0', dtype=torch.float64)
tensor([-1.8093, -2.6657, -2.7452, -3.1724, -3.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0448, device='cuda:0', dtype=torch.float64)
tensor([-1.8039, -2.6614, -2.7465, -3.1730, -3.2345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9232, device='cuda:0', dtype=torch.float64)
tensor([-1.7970, -2.6546, -2.7526, -3.1767, -3.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9349, device='cuda:0', dtype=torch.float64)
tensor([-1.7892, -2.6457, -2.7626, -3.1832, -3.2247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9595, device='cuda:0', dtype=torch.float64)
tensor([-1.7815, -2.6356, -2.7753, -3.1914, -3.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9167, device='cuda:0', dtype=torch.float64)
tensor([-1.7751, -2.6254, -2.7893, -3.2005, -3.2238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8206, device='cuda:0', dtype=torch.float64)
tensor([-1.7711, -2.6164, -2.8030, -3.2091, -3.2271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7604, device='cuda:0', dtype=torch.float64)
tensor([-1.7703, -2.6095, -2.8153, -3.2167, -3.2316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7431, device='cuda:0', dtype=torch.float64)
tensor([-1.7726, -2.6054, -2.8248, -3.2222, -3.2360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7017, device='cuda:0', dtype=torch.float64)
tensor([-1.7777, -2.6044, -2.8307, -3.2250, -3.2390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6272, device='cuda:0', dtype=torch.float64)
tensor([-1.7849, -2.6064, -2.8324, -3.2242, -3.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4834, device='cuda:0', dtype=torch.float64)
tensor([-1.7936, -2.6110, -2.8300, -3.2198, -3.2391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3269, device='cuda:0', dtype=torch.float64)
tensor([-1.8032, -2.6176, -2.8242, -3.2117, -3.2368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2177, device='cuda:0', dtype=torch.float64)
tensor([-1.8131, -2.6253, -2.8159, -3.2009, -3.2340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2297, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6333, -2.8065, -3.1881, -3.2316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2618, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6405, -2.7974, -3.1748, -3.2301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2880, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6461, -2.7895, -3.1620, -3.2298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2782, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.6495, -2.7838, -3.1507, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2004, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.6504, -2.7804, -3.1415, -3.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0709, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.6486, -2.7791, -3.1351, -3.2315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0140, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.6446, -2.7797, -3.1315, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0387, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6389, -2.7814, -3.1307, -3.2270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0499, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6320, -2.7837, -3.1325, -3.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0270, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6249, -2.7861, -3.1362, -3.2145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9765, device='cuda:0', dtype=torch.float64)
tensor([-1.8098, -2.6182, -2.7883, -3.1414, -3.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8982, device='cuda:0', dtype=torch.float64)
tensor([-1.8014, -2.6126, -2.7902, -3.1473, -3.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8147, device='cuda:0', dtype=torch.float64)
tensor([-1.7951, -2.6086, -2.7916, -3.1533, -3.1925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8276, device='cuda:0', dtype=torch.float64)
tensor([-1.7916, -2.6064, -2.7925, -3.1585, -3.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8640, device='cuda:0', dtype=torch.float64)
tensor([-1.7910, -2.6060, -2.7929, -3.1626, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8732, device='cuda:0', dtype=torch.float64)
tensor([-1.7930, -2.6073, -2.7929, -3.1651, -3.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8548, device='cuda:0', dtype=torch.float64)
tensor([-1.7971, -2.6100, -2.7926, -3.1661, -3.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8078, device='cuda:0', dtype=torch.float64)
tensor([-1.8026, -2.6138, -2.7917, -3.1655, -3.1927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7406, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.6182, -2.7903, -3.1636, -3.1958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7010, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.6229, -2.7886, -3.1608, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7018, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6276, -2.7865, -3.1573, -3.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7039, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6319, -2.7843, -3.1537, -3.1988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7080, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6355, -2.7822, -3.1505, -3.1971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7027, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6385, -2.7803, -3.1479, -3.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7000, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6406, -2.7791, -3.1464, -3.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6945, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6419, -2.7786, -3.1460, -3.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6752, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6424, -2.7788, -3.1466, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6333, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6422, -2.7795, -3.1481, -3.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6027, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6416, -2.7806, -3.1499, -3.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5905, device='cuda:0', dtype=torch.float64)
tensor([-1.8140, -2.6408, -2.7819, -3.1519, -3.1817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6031, device='cuda:0', dtype=torch.float64)
tensor([-1.8110, -2.6399, -2.7832, -3.1539, -3.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6012, device='cuda:0', dtype=torch.float64)
tensor([-1.8083, -2.6391, -2.7842, -3.1554, -3.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5978, device='cuda:0', dtype=torch.float64)
tensor([-1.8064, -2.6386, -2.7850, -3.1565, -3.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5776, device='cuda:0', dtype=torch.float64)
tensor([-1.8053, -2.6385, -2.7855, -3.1570, -3.1766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5625, device='cuda:0', dtype=torch.float64)
tensor([-1.8053, -2.6389, -2.7856, -3.1569, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5652, device='cuda:0', dtype=torch.float64)
tensor([-1.8064, -2.6397, -2.7855, -3.1565, -3.1770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5651, device='cuda:0', dtype=torch.float64)
tensor([-1.8084, -2.6409, -2.7852, -3.1558, -3.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5570, device='cuda:0', dtype=torch.float64)
tensor([-1.8111, -2.6421, -2.7849, -3.1552, -3.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5535, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.6433, -2.7847, -3.1548, -3.1820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5503, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.6443, -2.7847, -3.1545, -3.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5460, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6448, -2.7846, -3.1544, -3.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5495, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6448, -2.7847, -3.1547, -3.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5440, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6443, -2.7848, -3.1552, -3.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5287, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6434, -2.7850, -3.1558, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5146, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6421, -2.7852, -3.1566, -3.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4967, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6408, -2.7855, -3.1571, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4992, device='cuda:0', dtype=torch.float64)
tensor([-1.8152, -2.6396, -2.7859, -3.1575, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5006, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.6386, -2.7862, -3.1575, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4919, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.6379, -2.7862, -3.1572, -3.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4930, device='cuda:0', dtype=torch.float64)
tensor([-1.8142, -2.6374, -2.7861, -3.1566, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4802, device='cuda:0', dtype=torch.float64)
tensor([-1.8146, -2.6373, -2.7858, -3.1559, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4763, device='cuda:0', dtype=torch.float64)
tensor([-1.8151, -2.6373, -2.7854, -3.1550, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4787, device='cuda:0', dtype=torch.float64)
tensor([-1.8156, -2.6375, -2.7848, -3.1543, -3.1741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4796, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6376, -2.7843, -3.1536, -3.1741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4710, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6377, -2.7837, -3.1530, -3.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4685, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.6377, -2.7832, -3.1525, -3.1737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4614, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6376, -2.7830, -3.1521, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4540, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6375, -2.7828, -3.1517, -3.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4521, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6373, -2.7828, -3.1515, -3.1742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4529, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6369, -2.7829, -3.1515, -3.1745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4431, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6365, -2.7829, -3.1515, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4395, device='cuda:0', dtype=torch.float64)
tensor([-1.8163, -2.6362, -2.7829, -3.1514, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4447, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6361, -2.7827, -3.1513, -3.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4366, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6361, -2.7824, -3.1510, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4350, device='cuda:0', dtype=torch.float64)
tensor([-1.8163, -2.6361, -2.7820, -3.1508, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4341, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6360, -2.7816, -3.1506, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4364, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6359, -2.7813, -3.1506, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4275, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.6357, -2.7811, -3.1506, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4323, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6355, -2.7810, -3.1507, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4230, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6355, -2.7809, -3.1506, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4237, device='cuda:0', dtype=torch.float64)
tensor([-1.8156, -2.6354, -2.7808, -3.1507, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4194, device='cuda:0', dtype=torch.float64)
tensor([-1.8153, -2.6354, -2.7808, -3.1508, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4180, device='cuda:0', dtype=torch.float64)
tensor([-1.8152, -2.6355, -2.7807, -3.1508, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4129, device='cuda:0', dtype=torch.float64)
tensor([-1.8153, -2.6358, -2.7805, -3.1505, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4100, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.6361, -2.7802, -3.1502, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4075, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6364, -2.7801, -3.1498, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4093, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6366, -2.7800, -3.1495, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4055, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6369, -2.7799, -3.1490, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4020, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6370, -2.7799, -3.1486, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4092, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6371, -2.7798, -3.1482, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4012, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6372, -2.7799, -3.1479, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3961, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6372, -2.7801, -3.1478, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3981, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6372, -2.7801, -3.1478, -3.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3884, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6369, -2.7801, -3.1480, -3.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3942, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6365, -2.7800, -3.1484, -3.1713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3912, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6361, -2.7800, -3.1487, -3.1709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3896, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6356, -2.7799, -3.1492, -3.1707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3905, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6352, -2.7796, -3.1496, -3.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3976, device='cuda:0', dtype=torch.float64)
tensor([-1.8152, -2.6348, -2.7791, -3.1498, -3.1704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3899, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6347, -2.7786, -3.1499, -3.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3830, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6348, -2.7780, -3.1497, -3.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3910, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6348, -2.7775, -3.1494, -3.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3778, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6348, -2.7771, -3.1491, -3.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3765, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6349, -2.7770, -3.1490, -3.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3791, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6349, -2.7771, -3.1489, -3.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3790, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6348, -2.7772, -3.1488, -3.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3820, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6347, -2.7773, -3.1486, -3.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3723, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6345, -2.7774, -3.1483, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3750, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6344, -2.7775, -3.1479, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3773, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6345, -2.7777, -3.1475, -3.1677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3682, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.6347, -2.7778, -3.1472, -3.1675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3690, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6346, -2.7779, -3.1469, -3.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3702, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6346, -2.7782, -3.1465, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3699, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6345, -2.7784, -3.1463, -3.1671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3578, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6344, -2.7784, -3.1464, -3.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3660, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6343, -2.7783, -3.1467, -3.1671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3635, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6341, -2.7782, -3.1472, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3611, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6340, -2.7782, -3.1478, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3549, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6339, -2.7782, -3.1481, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3587, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6340, -2.7780, -3.1484, -3.1660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3586, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6342, -2.7779, -3.1485, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3631, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6343, -2.7777, -3.1485, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3604, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6343, -2.7777, -3.1483, -3.1659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3557, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6341, -2.7777, -3.1481, -3.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3553, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6340, -2.7775, -3.1478, -3.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3498, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6338, -2.7772, -3.1477, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3626, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6335, -2.7769, -3.1475, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3439, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6333, -2.7766, -3.1473, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3612, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6333, -2.7763, -3.1472, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3496, device='cuda:0', dtype=torch.float64)
tensor([-1.8163, -2.6333, -2.7760, -3.1468, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3485, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6333, -2.7758, -3.1464, -3.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3509, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6334, -2.7755, -3.1460, -3.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3539, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6337, -2.7754, -3.1457, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3464, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6340, -2.7756, -3.1454, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3472, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6343, -2.7756, -3.1452, -3.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3406, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6346, -2.7756, -3.1452, -3.1651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3532, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6348, -2.7755, -3.1453, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3460, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6348, -2.7754, -3.1455, -3.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3451, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6349, -2.7752, -3.1455, -3.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3486, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6348, -2.7751, -3.1455, -3.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3387, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6346, -2.7751, -3.1455, -3.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3401, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6342, -2.7750, -3.1452, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3420, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6340, -2.7749, -3.1450, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3449, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6336, -2.7750, -3.1450, -3.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3381, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6336, -2.7751, -3.1449, -3.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3356, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6336, -2.7750, -3.1447, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3375, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6336, -2.7747, -3.1444, -3.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3410, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.6339, -2.7741, -3.1441, -3.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3364, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6340, -2.7735, -3.1440, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3431, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6337, -2.7731, -3.1442, -3.1608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3348, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6336, -2.7725, -3.1444, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3387, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6334, -2.7721, -3.1445, -3.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3393, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6333, -2.7718, -3.1447, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3311, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6331, -2.7715, -3.1448, -3.1626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3321, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6330, -2.7712, -3.1449, -3.1632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3340, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6327, -2.7710, -3.1448, -3.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3370, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6322, -2.7710, -3.1445, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3342, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6316, -2.7711, -3.1441, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3346, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6312, -2.7713, -3.1439, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3352, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6310, -2.7714, -3.1436, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3376, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6311, -2.7717, -3.1435, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3361, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6316, -2.7719, -3.1431, -3.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3273, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6324, -2.7719, -3.1428, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3346, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6328, -2.7720, -3.1426, -3.1635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3263, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6329, -2.7720, -3.1426, -3.1635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3307, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6331, -2.7719, -3.1425, -3.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3243, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6333, -2.7717, -3.1421, -3.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3233, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6332, -2.7716, -3.1420, -3.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3289, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6329, -2.7715, -3.1419, -3.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3273, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6324, -2.7717, -3.1421, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3230, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.6316, -2.7722, -3.1425, -3.1612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3255, device='cuda:0', dtype=torch.float64)
tensor([-1.8163, -2.6307, -2.7726, -3.1429, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3191, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6299, -2.7730, -3.1433, -3.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3303, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6294, -2.7732, -3.1436, -3.1602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3217, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6291, -2.7731, -3.1436, -3.1601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3215, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6292, -2.7730, -3.1434, -3.1602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3288, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6294, -2.7728, -3.1432, -3.1601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3260, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6296, -2.7722, -3.1431, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3277, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6299, -2.7713, -3.1428, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3315, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6303, -2.7706, -3.1424, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3507, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6307, -2.7701, -3.1421, -3.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3308, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6312, -2.7700, -3.1420, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3171, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6316, -2.7701, -3.1421, -3.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3190, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6320, -2.7701, -3.1422, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3145, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6323, -2.7703, -3.1420, -3.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3256, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6327, -2.7704, -3.1417, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3232, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6329, -2.7706, -3.1417, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3144, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6327, -2.7709, -3.1417, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3059, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6322, -2.7710, -3.1415, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3189, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6315, -2.7711, -3.1416, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3222, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6308, -2.7710, -3.1415, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3277, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6302, -2.7706, -3.1411, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3184, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6298, -2.7702, -3.1407, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3271, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6300, -2.7697, -3.1399, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3287, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6304, -2.7692, -3.1388, -3.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3219, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6307, -2.7692, -3.1383, -3.1602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3250, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6313, -2.7693, -3.1381, -3.1602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3203, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6317, -2.7695, -3.1381, -3.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3252, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6318, -2.7697, -3.1384, -3.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3284, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.6317, -2.7697, -3.1390, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3249, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6313, -2.7700, -3.1400, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3168, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6311, -2.7702, -3.1410, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3212, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6310, -2.7701, -3.1419, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3186, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6305, -2.7699, -3.1424, -3.1595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3291, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6298, -2.7698, -3.1427, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3455, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6293, -2.7694, -3.1422, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3079, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6285, -2.7689, -3.1415, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3161, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6277, -2.7683, -3.1406, -3.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3265, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6275, -2.7677, -3.1398, -3.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3263, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6278, -2.7669, -3.1390, -3.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3053, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6286, -2.7662, -3.1385, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3134, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6297, -2.7658, -3.1381, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3485, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6307, -2.7655, -3.1374, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3312, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6316, -2.7657, -3.1371, -3.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3142, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6321, -2.7662, -3.1370, -3.1570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3179, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6322, -2.7675, -3.1373, -3.1570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3112, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6318, -2.7688, -3.1380, -3.1570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3040, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6312, -2.7696, -3.1387, -3.1570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3121, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6306, -2.7700, -3.1397, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3221, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6299, -2.7699, -3.1408, -3.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3130, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6294, -2.7694, -3.1414, -3.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3123, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6290, -2.7685, -3.1415, -3.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3212, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6286, -2.7677, -3.1412, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3107, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6281, -2.7669, -3.1405, -3.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3159, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6276, -2.7666, -3.1399, -3.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3203, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6278, -2.7664, -3.1395, -3.1562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3015, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6281, -2.7664, -3.1394, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3093, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6287, -2.7666, -3.1396, -3.1554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3111, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6292, -2.7669, -3.1403, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3051, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6300, -2.7672, -3.1407, -3.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3113, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6306, -2.7671, -3.1411, -3.1540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3235, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6308, -2.7670, -3.1413, -3.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3057, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6303, -2.7672, -3.1415, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3193, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6299, -2.7675, -3.1413, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3081, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6293, -2.7677, -3.1406, -3.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3189, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.6286, -2.7677, -3.1397, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3079, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6281, -2.7678, -3.1389, -3.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3191, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6280, -2.7679, -3.1383, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3063, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6276, -2.7680, -3.1381, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3133, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6270, -2.7686, -3.1381, -3.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3114, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6267, -2.7691, -3.1378, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3255, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6267, -2.7694, -3.1374, -3.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3034, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6264, -2.7694, -3.1372, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3087, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6264, -2.7691, -3.1372, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3422, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6272, -2.7683, -3.1371, -3.1555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3084, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6281, -2.7670, -3.1369, -3.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3066, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6292, -2.7658, -3.1367, -3.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3130, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6302, -2.7646, -3.1363, -3.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3175, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6306, -2.7636, -3.1361, -3.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3255, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6300, -2.7634, -3.1361, -3.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3348, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6292, -2.7634, -3.1361, -3.1542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3093, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6285, -2.7634, -3.1357, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3269, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6284, -2.7630, -3.1354, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3305, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6285, -2.7630, -3.1353, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3137, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6288, -2.7626, -3.1355, -3.1542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3090, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6291, -2.7625, -3.1358, -3.1540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3157, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6289, -2.7630, -3.1364, -3.1541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3232, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6286, -2.7641, -3.1378, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3009, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6280, -2.7654, -3.1393, -3.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3152, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6273, -2.7664, -3.1405, -3.1540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3127, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.6266, -2.7668, -3.1411, -3.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3062, device='cuda:0', dtype=torch.float64)
tensor([-1.8147, -2.6264, -2.7664, -3.1408, -3.1516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3043, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.6265, -2.7654, -3.1399, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3152, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6273, -2.7641, -3.1379, -3.1521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3033, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6283, -2.7629, -3.1360, -3.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3233, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6289, -2.7617, -3.1348, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3167, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6292, -2.7607, -3.1342, -3.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3224, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6288, -2.7602, -3.1338, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3144, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6279, -2.7604, -3.1344, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3105, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6269, -2.7611, -3.1357, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3198, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6261, -2.7616, -3.1369, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3283, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6258, -2.7619, -3.1381, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3330, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6263, -2.7621, -3.1387, -3.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3089, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6271, -2.7617, -3.1384, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3130, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6276, -2.7612, -3.1376, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3089, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6278, -2.7607, -3.1367, -3.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3215, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6276, -2.7609, -3.1355, -3.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3171, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6273, -2.7619, -3.1349, -3.1514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3135, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6264, -2.7627, -3.1352, -3.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3089, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6251, -2.7634, -3.1362, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3215, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6236, -2.7643, -3.1378, -3.1506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3160, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6227, -2.7646, -3.1390, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3415, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.6223, -2.7645, -3.1399, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2947, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6224, -2.7638, -3.1402, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3445, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6232, -2.7625, -3.1397, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3117, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6239, -2.7613, -3.1390, -3.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3445, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6244, -2.7603, -3.1380, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3484, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6249, -2.7600, -3.1372, -3.1545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3164, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6251, -2.7607, -3.1367, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3231, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6256, -2.7619, -3.1365, -3.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3364, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6259, -2.7631, -3.1368, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3290, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6258, -2.7638, -3.1375, -3.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3503, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6255, -2.7645, -3.1382, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3336, device='cuda:0', dtype=torch.float64)
tensor([-1.8156, -2.6253, -2.7642, -3.1381, -3.1465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3513, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.6257, -2.7637, -3.1365, -3.1449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3467, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.6261, -2.7627, -3.1336, -3.1442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3386, device='cuda:0', dtype=torch.float64)
tensor([-1.8153, -2.6273, -2.7609, -3.1304, -3.1448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3206, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6285, -2.7588, -3.1273, -3.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3276, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6301, -2.7572, -3.1257, -3.1475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3237, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6310, -2.7568, -3.1256, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3495, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6313, -2.7567, -3.1273, -3.1519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3145, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6307, -2.7573, -3.1306, -3.1530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3106, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6294, -2.7583, -3.1341, -3.1534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3055, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6278, -2.7595, -3.1373, -3.1530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3448, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6265, -2.7609, -3.1394, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3135, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6253, -2.7619, -3.1408, -3.1521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3207, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6245, -2.7620, -3.1408, -3.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3293, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6241, -2.7619, -3.1400, -3.1503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3202, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6241, -2.7612, -3.1378, -3.1502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3087, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6239, -2.7612, -3.1360, -3.1504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3390, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6235, -2.7615, -3.1345, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3172, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6237, -2.7619, -3.1329, -3.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3603, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6248, -2.7616, -3.1313, -3.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3140, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6258, -2.7613, -3.1304, -3.1475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3141, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6268, -2.7608, -3.1293, -3.1478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3607, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6283, -2.7607, -3.1291, -3.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3167, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6294, -2.7607, -3.1290, -3.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3416, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6293, -2.7606, -3.1299, -3.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3358, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6277, -2.7606, -3.1309, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3553, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6255, -2.7613, -3.1312, -3.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3179, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.6232, -2.7621, -3.1309, -3.1486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3527, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6214, -2.7617, -3.1301, -3.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3376, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6211, -2.7598, -3.1292, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3187, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6217, -2.7578, -3.1284, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3255, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6227, -2.7552, -3.1280, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3077, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6230, -2.7537, -3.1281, -3.1504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3280, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6230, -2.7530, -3.1285, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3229, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6225, -2.7528, -3.1300, -3.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3032, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6214, -2.7541, -3.1318, -3.1475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3038, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6205, -2.7555, -3.1330, -3.1461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2991, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6202, -2.7569, -3.1333, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3374, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6208, -2.7578, -3.1330, -3.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3296, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6211, -2.7592, -3.1323, -3.1475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3233, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6217, -2.7605, -3.1321, -3.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3085, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6216, -2.7615, -3.1325, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3166, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6210, -2.7622, -3.1327, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3391, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6210, -2.7625, -3.1332, -3.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3068, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6213, -2.7624, -3.1331, -3.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3322, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6218, -2.7618, -3.1321, -3.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3432, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6231, -2.7601, -3.1302, -3.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3343, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6245, -2.7583, -3.1287, -3.1484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3217, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6260, -2.7559, -3.1272, -3.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3284, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6266, -2.7541, -3.1261, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3346, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6267, -2.7527, -3.1257, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3297, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6267, -2.7516, -3.1257, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3207, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6259, -2.7522, -3.1262, -3.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3371, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6241, -2.7535, -3.1266, -3.1514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3367, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6226, -2.7554, -3.1276, -3.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3507, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6215, -2.7565, -3.1282, -3.1502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3306, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6205, -2.7571, -3.1290, -3.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3166, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6200, -2.7573, -3.1292, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3372, device='cuda:0', dtype=torch.float64)
tensor([-1.8163, -2.6203, -2.7569, -3.1287, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3704, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6213, -2.7566, -3.1271, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3450, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6231, -2.7562, -3.1256, -3.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3534, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6256, -2.7563, -3.1239, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3665, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6273, -2.7569, -3.1231, -3.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3544, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6280, -2.7571, -3.1231, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3234, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6280, -2.7567, -3.1235, -3.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3541, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6281, -2.7562, -3.1246, -3.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3649, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6278, -2.7547, -3.1257, -3.1482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3319, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6277, -2.7532, -3.1279, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3044, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6267, -2.7517, -3.1305, -3.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3299, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6250, -2.7510, -3.1325, -3.1432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3169, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6220, -2.7512, -3.1339, -3.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3155, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6188, -2.7522, -3.1348, -3.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3112, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6168, -2.7527, -3.1349, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3476, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6161, -2.7533, -3.1328, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3730, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6171, -2.7542, -3.1290, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3242, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6189, -2.7548, -3.1260, -3.1515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3200, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6202, -2.7559, -3.1239, -3.1520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3466, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6207, -2.7569, -3.1230, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3716, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6203, -2.7584, -3.1228, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3187, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.6203, -2.7594, -3.1238, -3.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3053, device='cuda:0', dtype=torch.float64)
tensor([-1.8150, -2.6209, -2.7596, -3.1243, -3.1473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3555, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6224, -2.7588, -3.1246, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3063, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6235, -2.7573, -3.1246, -3.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3583, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6235, -2.7556, -3.1242, -3.1488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3274, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6228, -2.7541, -3.1239, -3.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3285, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6216, -2.7529, -3.1235, -3.1484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3300, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6194, -2.7531, -3.1236, -3.1470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3373, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6170, -2.7541, -3.1238, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3459, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6151, -2.7550, -3.1245, -3.1420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3592, device='cuda:0', dtype=torch.float64)
tensor([-1.8163, -2.6147, -2.7555, -3.1247, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3287, device='cuda:0', dtype=torch.float64)
tensor([-1.8153, -2.6158, -2.7551, -3.1242, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3403, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6182, -2.7536, -3.1234, -3.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3401, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6211, -2.7521, -3.1227, -3.1392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3440, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6229, -2.7508, -3.1222, -3.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3568, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6236, -2.7503, -3.1223, -3.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3237, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6244, -2.7501, -3.1227, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3084, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6246, -2.7507, -3.1236, -3.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3536, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6236, -2.7524, -3.1258, -3.1454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3171, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6224, -2.7536, -3.1281, -3.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3380, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6217, -2.7544, -3.1288, -3.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3494, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6208, -2.7545, -3.1284, -3.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3315, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6198, -2.7545, -3.1278, -3.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3135, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6189, -2.7545, -3.1268, -3.1436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3421, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6185, -2.7548, -3.1244, -3.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3788, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6191, -2.7550, -3.1225, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3719, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6201, -2.7545, -3.1216, -3.1404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3277, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6219, -2.7538, -3.1213, -3.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3426, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6239, -2.7534, -3.1214, -3.1405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3437, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6253, -2.7530, -3.1222, -3.1408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3242, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6256, -2.7534, -3.1247, -3.1416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3058, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6246, -2.7543, -3.1272, -3.1422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3436, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6230, -2.7556, -3.1283, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3178, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6220, -2.7565, -3.1279, -3.1434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3903, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6209, -2.7572, -3.1269, -3.1431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3366, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6198, -2.7579, -3.1256, -3.1438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3280, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6191, -2.7584, -3.1241, -3.1454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3228, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6188, -2.7579, -3.1228, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3108, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6188, -2.7563, -3.1231, -3.1484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3272, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6185, -2.7542, -3.1240, -3.1475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3497, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6189, -2.7515, -3.1252, -3.1446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3322, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6194, -2.7496, -3.1253, -3.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3664, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6197, -2.7489, -3.1251, -3.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3939, device='cuda:0', dtype=torch.float64)
tensor([-1.8163, -2.6214, -2.7483, -3.1246, -3.1362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3835, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6232, -2.7482, -3.1229, -3.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3388, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6237, -2.7482, -3.1222, -3.1387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3708, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6233, -2.7476, -3.1212, -3.1392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3524, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6222, -2.7481, -3.1212, -3.1393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3167, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6199, -2.7496, -3.1229, -3.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3985, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6179, -2.7523, -3.1234, -3.1413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3197, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6156, -2.7549, -3.1247, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3137, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6143, -2.7566, -3.1260, -3.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3585, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6138, -2.7563, -3.1265, -3.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3154, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6140, -2.7554, -3.1267, -3.1431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3423, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6149, -2.7538, -3.1263, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3318, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6165, -2.7528, -3.1262, -3.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3841, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6187, -2.7517, -3.1260, -3.1446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3421, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6201, -2.7504, -3.1250, -3.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3847, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6208, -2.7502, -3.1242, -3.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3461, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6206, -2.7506, -3.1234, -3.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3460, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6195, -2.7514, -3.1235, -3.1448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3374, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6181, -2.7519, -3.1237, -3.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3327, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6172, -2.7521, -3.1235, -3.1412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3331, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6164, -2.7526, -3.1239, -3.1409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3321, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6159, -2.7526, -3.1241, -3.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3554, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6154, -2.7527, -3.1240, -3.1362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3674, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6155, -2.7530, -3.1241, -3.1336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3380, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6166, -2.7534, -3.1236, -3.1329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3662, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6183, -2.7537, -3.1215, -3.1345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3606, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6206, -2.7534, -3.1191, -3.1376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3272, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6222, -2.7517, -3.1173, -3.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3528, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6236, -2.7491, -3.1156, -3.1401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3349, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6233, -2.7469, -3.1148, -3.1384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3862, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6228, -2.7449, -3.1155, -3.1368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4083, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6215, -2.7440, -3.1173, -3.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3357, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6205, -2.7439, -3.1192, -3.1413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3841, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6189, -2.7441, -3.1214, -3.1420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4112, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6169, -2.7452, -3.1238, -3.1400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3564, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6138, -2.7473, -3.1261, -3.1377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3851, device='cuda:0', dtype=torch.float64)
tensor([-1.8145, -2.6119, -2.7489, -3.1265, -3.1365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3604, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.6117, -2.7501, -3.1256, -3.1365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3761, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6129, -2.7499, -3.1245, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3530, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6150, -2.7492, -3.1227, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3468, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6180, -2.7476, -3.1198, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3854, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6207, -2.7460, -3.1164, -3.1373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3585, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.6230, -2.7450, -3.1135, -3.1368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3607, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6229, -2.7461, -3.1126, -3.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5498, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6211, -2.7476, -3.1131, -3.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3847, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6182, -2.7492, -3.1156, -3.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3722, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6162, -2.7508, -3.1193, -3.1388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4229, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6137, -2.7523, -3.1226, -3.1355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3979, device='cuda:0', dtype=torch.float64)
tensor([-1.8136, -2.6125, -2.7521, -3.1249, -3.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3383, device='cuda:0', dtype=torch.float64)
tensor([-1.8143, -2.6131, -2.7511, -3.1253, -3.1327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3954, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6144, -2.7500, -3.1227, -3.1349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3723, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6155, -2.7490, -3.1188, -3.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3901, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6158, -2.7484, -3.1151, -3.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3567, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6140, -2.7485, -3.1141, -3.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3423, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6130, -2.7482, -3.1145, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3606, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6134, -2.7484, -3.1162, -3.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3887, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6156, -2.7495, -3.1180, -3.1407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3448, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6173, -2.7510, -3.1206, -3.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3883, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6184, -2.7514, -3.1225, -3.1436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3880, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6186, -2.7503, -3.1231, -3.1425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3759, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6174, -2.7484, -3.1228, -3.1400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4075, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6153, -2.7465, -3.1219, -3.1392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3691, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6125, -2.7466, -3.1214, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3091, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6103, -2.7476, -3.1220, -3.1404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3443, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6088, -2.7488, -3.1237, -3.1407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3726, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6089, -2.7490, -3.1256, -3.1387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3532, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6107, -2.7473, -3.1266, -3.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3587, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6135, -2.7450, -3.1256, -3.1324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3612, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6161, -2.7432, -3.1229, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3764, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.6195, -2.7421, -3.1188, -3.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3902, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.6210, -2.7423, -3.1157, -3.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3351, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6205, -2.7437, -3.1128, -3.1353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3285, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6183, -2.7454, -3.1113, -3.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3568, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6154, -2.7488, -3.1111, -3.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3861, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6134, -2.7527, -3.1113, -3.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3685, device='cuda:0', dtype=torch.float64)
tensor([-1.8150, -2.6123, -2.7542, -3.1124, -3.1349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3567, device='cuda:0', dtype=torch.float64)
tensor([-1.8151, -2.6129, -2.7525, -3.1125, -3.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3638, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.6141, -2.7503, -3.1128, -3.1338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3474, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6156, -2.7493, -3.1127, -3.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3991, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6169, -2.7483, -3.1130, -3.1404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3483, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6172, -2.7472, -3.1121, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3557, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6166, -2.7461, -3.1122, -3.1452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3427, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.6153, -2.7446, -3.1150, -3.1455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4243, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6131, -2.7443, -3.1182, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4058, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6119, -2.7437, -3.1209, -3.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3888, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6108, -2.7435, -3.1232, -3.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3268, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6110, -2.7427, -3.1237, -3.1345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3415, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.6129, -2.7420, -3.1222, -3.1333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3118, device='cuda:0', dtype=torch.float64)
tensor([-1.8128, -2.6157, -2.7415, -3.1191, -3.1338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3491, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.6178, -2.7418, -3.1155, -3.1356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3516, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6181, -2.7443, -3.1127, -3.1391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3862, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6178, -2.7477, -3.1106, -3.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3699, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6163, -2.7511, -3.1108, -3.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3903, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6129, -2.7535, -3.1120, -3.1406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3691, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6086, -2.7552, -3.1140, -3.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3136, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6060, -2.7545, -3.1139, -3.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3438, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6056, -2.7526, -3.1133, -3.1331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3739, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6076, -2.7496, -3.1118, -3.1343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4048, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6110, -2.7461, -3.1106, -3.1370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3435, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6144, -2.7426, -3.1093, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3203, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.6165, -2.7398, -3.1093, -3.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4059, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6161, -2.7383, -3.1107, -3.1343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4503, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6154, -2.7393, -3.1123, -3.1343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3579, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6139, -2.7414, -3.1140, -3.1368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4178, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6128, -2.7421, -3.1138, -3.1382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4455, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6129, -2.7404, -3.1120, -3.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3502, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6118, -2.7392, -3.1090, -3.1361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3823, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6108, -2.7397, -3.1072, -3.1344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3876, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6109, -2.7420, -3.1074, -3.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3870, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6121, -2.7460, -3.1100, -3.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3641, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6127, -2.7512, -3.1134, -3.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3643, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.6146, -2.7535, -3.1159, -3.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3851, device='cuda:0', dtype=torch.float64)
tensor([-1.8137, -2.6167, -2.7530, -3.1188, -3.1368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4091, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6191, -2.7513, -3.1199, -3.1356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4573, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6207, -2.7497, -3.1188, -3.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3865, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6207, -2.7486, -3.1177, -3.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4004, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6194, -2.7467, -3.1147, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4409, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6171, -2.7436, -3.1121, -3.1331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4125, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6146, -2.7411, -3.1105, -3.1272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4344, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6131, -2.7399, -3.1104, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3772, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6126, -2.7401, -3.1114, -3.1254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3888, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6134, -2.7402, -3.1116, -3.1279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4009, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6141, -2.7422, -3.1123, -3.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4504, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6146, -2.7444, -3.1147, -3.1323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4040, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6144, -2.7479, -3.1169, -3.1346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4010, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6123, -2.7510, -3.1207, -3.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4113, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6102, -2.7528, -3.1234, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4482, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6103, -2.7511, -3.1238, -3.1393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3689, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6097, -2.7484, -3.1204, -3.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3470, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6078, -2.7448, -3.1154, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4402, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6072, -2.7417, -3.1088, -3.1356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3841, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6075, -2.7392, -3.1041, -3.1325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3870, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6090, -2.7371, -3.1001, -3.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3521, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6110, -2.7359, -3.0986, -3.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4588, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6128, -2.7365, -3.0992, -3.1329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3463, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6132, -2.7379, -3.1019, -3.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3919, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6121, -2.7401, -3.1064, -3.1373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4442, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6107, -2.7419, -3.1111, -3.1377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3825, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6091, -2.7438, -3.1171, -3.1394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3914, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6076, -2.7460, -3.1217, -3.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3846, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6074, -2.7464, -3.1230, -3.1394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3708, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6083, -2.7447, -3.1224, -3.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3568, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6104, -2.7433, -3.1206, -3.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3541, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6121, -2.7416, -3.1174, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3889, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6127, -2.7411, -3.1156, -3.1313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3575, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6127, -2.7424, -3.1145, -3.1333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3503, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6125, -2.7439, -3.1131, -3.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3246, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6111, -2.7452, -3.1122, -3.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4163, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6094, -2.7444, -3.1121, -3.1302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3977, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6091, -2.7415, -3.1114, -3.1275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4124, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6080, -2.7390, -3.1116, -3.1255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3985, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6061, -2.7382, -3.1120, -3.1257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3945, device='cuda:0', dtype=torch.float64)
tensor([-1.8151, -2.6044, -2.7370, -3.1113, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3628, device='cuda:0', dtype=torch.float64)
tensor([-1.8146, -2.6049, -2.7359, -3.1099, -3.1280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3676, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6076, -2.7348, -3.1084, -3.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4700, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6119, -2.7351, -3.1072, -3.1366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3378, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6155, -2.7375, -3.1077, -3.1415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4448, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6171, -2.7401, -3.1096, -3.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3632, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6169, -2.7436, -3.1129, -3.1414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3653, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6158, -2.7467, -3.1150, -3.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3560, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6143, -2.7476, -3.1150, -3.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3529, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6123, -2.7458, -3.1125, -3.1343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3960, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6102, -2.7432, -3.1082, -3.1317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3560, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6077, -2.7407, -3.1041, -3.1301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3468, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6058, -2.7371, -3.1002, -3.1275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3808, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6054, -2.7339, -3.0980, -3.1280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3494, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6075, -2.7336, -3.0975, -3.1291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3977, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6109, -2.7338, -3.0983, -3.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3579, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6129, -2.7361, -3.1021, -3.1290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3767, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.6131, -2.7409, -3.1076, -3.1277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4054, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.6115, -2.7450, -3.1142, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4085, device='cuda:0', dtype=torch.float64)
tensor([-1.8147, -2.6093, -2.7479, -3.1174, -3.1275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3268, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6072, -2.7490, -3.1187, -3.1288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3383, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6058, -2.7484, -3.1176, -3.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3456, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6062, -2.7466, -3.1144, -3.1299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3868, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6070, -2.7455, -3.1092, -3.1307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3478, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6096, -2.7433, -3.1034, -3.1302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4172, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6120, -2.7428, -3.0985, -3.1279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3206, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6123, -2.7410, -3.0953, -3.1244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3909, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6107, -2.7382, -3.0952, -3.1205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3750, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6081, -2.7350, -3.0961, -3.1168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3501, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6054, -2.7328, -3.0985, -3.1174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3896, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6035, -2.7329, -3.1015, -3.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4298, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6034, -2.7350, -3.1030, -3.1351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4621, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6040, -2.7368, -3.1029, -3.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4589, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.6060, -2.7382, -3.1013, -3.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3610, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.6070, -2.7406, -3.1010, -3.1446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4342, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6079, -2.7421, -3.1021, -3.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4472, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6097, -2.7424, -3.1038, -3.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3688, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6098, -2.7428, -3.1076, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4884, device='cuda:0', dtype=torch.float64)
tensor([-1.8093, -2.6090, -2.7405, -3.1100, -3.1235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4533, device='cuda:0', dtype=torch.float64)
tensor([-1.8056, -2.6069, -2.7372, -3.1100, -3.1148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3867, device='cuda:0', dtype=torch.float64)
tensor([-1.8069, -2.6063, -2.7341, -3.1071, -3.1122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4211, device='cuda:0', dtype=torch.float64)
tensor([-1.8130, -2.6062, -2.7337, -3.1035, -3.1174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3547, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6073, -2.7338, -3.0998, -3.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3331, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6089, -2.7351, -3.0985, -3.1290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4291, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6099, -2.7349, -3.1009, -3.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4051, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6121, -2.7336, -3.1059, -3.1279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4135, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6141, -2.7321, -3.1132, -3.1276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4077, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6161, -2.7320, -3.1176, -3.1292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4254, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6164, -2.7337, -3.1215, -3.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4683, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6131, -2.7373, -3.1225, -3.1336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4673, device='cuda:0', dtype=torch.float64)
tensor([-1.8128, -2.6069, -2.7400, -3.1190, -3.1314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4149, device='cuda:0', dtype=torch.float64)
tensor([-1.8131, -2.6036, -2.7396, -3.1119, -3.1294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4202, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6047, -2.7357, -3.1050, -3.1273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4686, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6092, -2.7310, -3.0994, -3.1268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4088, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6133, -2.7280, -3.0946, -3.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3924, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6161, -2.7273, -3.0922, -3.1268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3913, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6162, -2.7287, -3.0938, -3.1258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5220, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6140, -2.7341, -3.0982, -3.1286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5287, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6134, -2.7392, -3.1026, -3.1333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3865, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6119, -2.7435, -3.1070, -3.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4511, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6091, -2.7450, -3.1089, -3.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4873, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6052, -2.7439, -3.1102, -3.1330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4370, device='cuda:0', dtype=torch.float64)
tensor([-1.8135, -2.6036, -2.7403, -3.1089, -3.1270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3449, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6029, -2.7357, -3.1061, -3.1220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4988, device='cuda:0', dtype=torch.float64)
tensor([-1.8150, -2.6029, -2.7317, -3.1020, -3.1211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4569, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6043, -2.7295, -3.0972, -3.1212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4588, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6058, -2.7294, -3.0945, -3.1231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4784, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6064, -2.7304, -3.0929, -3.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3707, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6074, -2.7326, -3.0933, -3.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3864, device='cuda:0', dtype=torch.float64)
tensor([-1.8275, -2.6075, -2.7347, -3.0983, -3.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4236, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6058, -2.7371, -3.1050, -3.1284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4505, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6058, -2.7398, -3.1100, -3.1291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4252, device='cuda:0', dtype=torch.float64)
tensor([-1.8095, -2.6041, -2.7405, -3.1131, -3.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3917, device='cuda:0', dtype=torch.float64)
tensor([-1.8055, -2.6025, -2.7398, -3.1121, -3.1266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3920, device='cuda:0', dtype=torch.float64)
tensor([-1.8059, -2.6003, -2.7369, -3.1077, -3.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3724, device='cuda:0', dtype=torch.float64)
tensor([-1.8116, -2.6002, -2.7329, -3.1018, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4293, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6026, -2.7300, -3.0977, -3.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3994, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6056, -2.7278, -3.0965, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4300, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6093, -2.7263, -3.0967, -3.1295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3584, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6132, -2.7269, -3.0992, -3.1275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3909, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6130, -2.7313, -3.1043, -3.1255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3635, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6110, -2.7373, -3.1100, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3648, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6086, -2.7408, -3.1131, -3.1231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4204, device='cuda:0', dtype=torch.float64)
tensor([-1.8135, -2.6049, -2.7404, -3.1119, -3.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3470, device='cuda:0', dtype=torch.float64)
tensor([-1.8135, -2.6028, -2.7369, -3.1077, -3.1184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4241, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6019, -2.7334, -3.1026, -3.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3921, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6036, -2.7304, -3.0976, -3.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4488, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6051, -2.7281, -3.0945, -3.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3748, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6066, -2.7282, -3.0942, -3.1235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3914, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6076, -2.7314, -3.0948, -3.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3846, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6100, -2.7337, -3.0975, -3.1200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3857, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6111, -2.7358, -3.1008, -3.1183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4610, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6108, -2.7347, -3.1020, -3.1181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3978, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6100, -2.7321, -3.1011, -3.1185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3695, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6078, -2.7291, -3.0995, -3.1162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3564, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6039, -2.7294, -3.0991, -3.1163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3823, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.5983, -2.7326, -3.0991, -3.1175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3878, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.5948, -2.7353, -3.0983, -3.1192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4811, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.5936, -2.7367, -3.0981, -3.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4326, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.5955, -2.7366, -3.0991, -3.1192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4634, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6003, -2.7362, -3.0981, -3.1207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3969, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6069, -2.7331, -3.0976, -3.1245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3728, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6129, -2.7309, -3.0982, -3.1285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4377, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6159, -2.7308, -3.1008, -3.1303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3621, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6139, -2.7337, -3.1058, -3.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3833, device='cuda:0', dtype=torch.float64)
tensor([-1.8156, -2.6082, -2.7368, -3.1077, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4287, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6028, -2.7369, -3.1074, -3.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4614, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.5994, -2.7371, -3.1048, -3.1329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4581, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.5982, -2.7355, -3.1025, -3.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4348, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6003, -2.7324, -3.0990, -3.1268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3852, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6047, -2.7291, -3.0968, -3.1268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4064, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6097, -2.7257, -3.0960, -3.1301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3958, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6113, -2.7246, -3.0984, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4273, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6092, -2.7271, -3.0995, -3.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3468, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6060, -2.7288, -3.1003, -3.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3579, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6032, -2.7298, -3.0987, -3.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4376, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6012, -2.7317, -3.0956, -3.1207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3897, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.5994, -2.7335, -3.0932, -3.1178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3974, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6011, -2.7357, -3.0906, -3.1185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4251, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6011, -2.7390, -3.0871, -3.1212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4589, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6015, -2.7403, -3.0850, -3.1237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4027, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6033, -2.7411, -3.0869, -3.1250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5424, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6067, -2.7403, -3.0907, -3.1243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3761, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.6078, -2.7402, -3.0977, -3.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4188, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.6076, -2.7402, -3.1052, -3.1224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4145, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6059, -2.7392, -3.1110, -3.1182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5073, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6034, -2.7351, -3.1132, -3.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4412, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.6028, -2.7299, -3.1107, -3.1095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4508, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6037, -2.7258, -3.1050, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5220, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6050, -2.7240, -3.1011, -3.1217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4175, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6059, -2.7217, -3.0991, -3.1309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3956, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6058, -2.7202, -3.1001, -3.1327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4838, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6034, -2.7211, -3.1035, -3.1280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4480, device='cuda:0', dtype=torch.float64)
tensor([-1.8093, -2.5992, -2.7239, -3.1066, -3.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4625, device='cuda:0', dtype=torch.float64)
tensor([-1.8064, -2.5970, -2.7286, -3.1091, -3.1204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4508, device='cuda:0', dtype=torch.float64)
tensor([-1.8082, -2.5966, -2.7326, -3.1082, -3.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4483, device='cuda:0', dtype=torch.float64)
tensor([-1.8117, -2.5994, -2.7330, -3.1022, -3.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4985, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6054, -2.7292, -3.0921, -3.1251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4352, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6113, -2.7225, -3.0794, -3.1257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4699, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6159, -2.7170, -3.0720, -3.1251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5353, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6179, -2.7165, -3.0714, -3.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4849, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6149, -2.7199, -3.0762, -3.1337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5814, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6077, -2.7257, -3.0859, -3.1298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5097, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.6014, -2.7308, -3.0952, -3.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3778, device='cuda:0', dtype=torch.float64)
tensor([-1.8081, -2.5959, -2.7372, -3.1019, -3.1150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5256, device='cuda:0', dtype=torch.float64)
tensor([-1.8084, -2.5963, -2.7424, -3.1038, -3.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3937, device='cuda:0', dtype=torch.float64)
tensor([-1.8133, -2.5987, -2.7450, -3.1023, -3.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3914, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6027, -2.7449, -3.0975, -3.1176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5753, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6074, -2.7403, -3.0939, -3.1194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4208, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6075, -2.7357, -3.0927, -3.1171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4227, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6052, -2.7337, -3.0940, -3.1147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4478, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.5999, -2.7347, -3.0959, -3.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3589, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.5962, -2.7349, -3.0977, -3.1124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4165, device='cuda:0', dtype=torch.float64)
tensor([-1.8135, -2.5974, -2.7329, -3.0977, -3.1140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4394, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.6040, -2.7282, -3.0946, -3.1178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4525, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6097, -2.7259, -3.0892, -3.1211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4729, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6117, -2.7263, -3.0873, -3.1252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4899, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6107, -2.7302, -3.0882, -3.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4225, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6086, -2.7300, -3.0898, -3.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4718, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6078, -2.7251, -3.0925, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4369, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6080, -2.7204, -3.0961, -3.1295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4929, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6084, -2.7162, -3.0996, -3.1268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5051, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6062, -2.7167, -3.1036, -3.1238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4408, device='cuda:0', dtype=torch.float64)
tensor([-1.8156, -2.6030, -2.7190, -3.1062, -3.1191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4622, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.5993, -2.7210, -3.1077, -3.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3900, device='cuda:0', dtype=torch.float64)
tensor([-1.8082, -2.5983, -2.7240, -3.1066, -3.1131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4641, device='cuda:0', dtype=torch.float64)
tensor([-1.8140, -2.5989, -2.7261, -3.1009, -3.1166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3977, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.5982, -2.7285, -3.0967, -3.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3684, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.5974, -2.7284, -3.0939, -3.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3968, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.5975, -2.7269, -3.0914, -3.1162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3619, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.5968, -2.7283, -3.0915, -3.1110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3905, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.5956, -2.7305, -3.0935, -3.1088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3804, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.5954, -2.7304, -3.0961, -3.1099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4495, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.5966, -2.7283, -3.0965, -3.1105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4912, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.5980, -2.7240, -3.0963, -3.1106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4399, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.5995, -2.7198, -3.0985, -3.1109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4240, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6007, -2.7183, -3.1004, -3.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4655, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6021, -2.7204, -3.1023, -3.1173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4452, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6050, -2.7242, -3.1008, -3.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5105, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6080, -2.7295, -3.0959, -3.1234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4492, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6124, -2.7331, -3.0896, -3.1230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4842, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6165, -2.7345, -3.0825, -3.1235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4691, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6165, -2.7353, -3.0785, -3.1232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4737, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6142, -2.7346, -3.0775, -3.1194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4410, device='cuda:0', dtype=torch.float64)
tensor([-1.8145, -2.6077, -2.7337, -3.0807, -3.1131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4456, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.6003, -2.7344, -3.0836, -3.1082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5206, device='cuda:0', dtype=torch.float64)
tensor([-1.8117, -2.5959, -2.7378, -3.0840, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4000, device='cuda:0', dtype=torch.float64)
tensor([-1.8147, -2.5916, -2.7393, -3.0844, -3.1159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3584, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.5900, -2.7371, -3.0834, -3.1177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4989, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.5907, -2.7341, -3.0832, -3.1192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5969, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.5904, -2.7314, -3.0848, -3.1222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4881, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.5903, -2.7307, -3.0902, -3.1286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4700, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.5935, -2.7295, -3.0959, -3.1341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5477, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.5988, -2.7268, -3.0983, -3.1314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5098, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6031, -2.7265, -3.0994, -3.1283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4058, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6050, -2.7266, -3.1017, -3.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4959, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6064, -2.7272, -3.1028, -3.1210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4509, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.6048, -2.7290, -3.1043, -3.1167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5097, device='cuda:0', dtype=torch.float64)
tensor([-1.8108, -2.6006, -2.7301, -3.1052, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4347, device='cuda:0', dtype=torch.float64)
tensor([-1.8098, -2.5992, -2.7267, -3.1027, -3.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4462, device='cuda:0', dtype=torch.float64)
tensor([-1.8137, -2.6006, -2.7247, -3.0965, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4999, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6013, -2.7245, -3.0913, -3.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4123, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6015, -2.7277, -3.0861, -3.1279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4732, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.6012, -2.7328, -3.0834, -3.1271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3793, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6000, -2.7356, -3.0804, -3.1210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4297, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.5993, -2.7361, -3.0797, -3.1115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4568, device='cuda:0', dtype=torch.float64)
tensor([-1.8146, -2.5982, -2.7342, -3.0826, -3.1080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4513, device='cuda:0', dtype=torch.float64)
tensor([-1.8134, -2.5957, -2.7309, -3.0869, -3.1082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4482, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.5911, -2.7280, -3.0914, -3.1120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5250, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.5885, -2.7246, -3.0933, -3.1147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4759, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.5890, -2.7220, -3.0905, -3.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4927, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.5908, -2.7194, -3.0898, -3.1202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4902, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.5961, -2.7153, -3.0906, -3.1196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5626, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.5992, -2.7120, -3.0932, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4265, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6011, -2.7116, -3.0977, -3.1083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6638, device='cuda:0', dtype=torch.float64)
tensor([-1.8127, -2.6003, -2.7161, -3.1017, -3.1064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5691, device='cuda:0', dtype=torch.float64)
tensor([-1.8124, -2.6012, -2.7227, -3.0994, -3.1097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5215, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6033, -2.7292, -3.0920, -3.1146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5962, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6092, -2.7284, -3.0782, -3.1183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5222, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6158, -2.7267, -3.0692, -3.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5572, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6191, -2.7266, -3.0695, -3.1242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5108, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6156, -2.7307, -3.0739, -3.1278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4884, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.6083, -2.7326, -3.0849, -3.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4687, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.5969, -2.7340, -3.0988, -3.1199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4484, device='cuda:0', dtype=torch.float64)
tensor([-1.8087, -2.5865, -2.7348, -3.1098, -3.1150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4703, device='cuda:0', dtype=torch.float64)
tensor([-1.8098, -2.5808, -2.7336, -3.1124, -3.1129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4743, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.5836, -2.7293, -3.1049, -3.1161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5038, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.5907, -2.7240, -3.0943, -3.1159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4329, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.5972, -2.7207, -3.0843, -3.1105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5527, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6021, -2.7203, -3.0762, -3.1041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5848, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6026, -2.7237, -3.0734, -3.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5392, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.6005, -2.7287, -3.0787, -3.1066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4869, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.5981, -2.7320, -3.0860, -3.1084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5310, device='cuda:0', dtype=torch.float64)
tensor([-1.8067, -2.5955, -2.7323, -3.0910, -3.1086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4152, device='cuda:0', dtype=torch.float64)
tensor([-1.8094, -2.5932, -2.7322, -3.0934, -3.1110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5005, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.5935, -2.7326, -3.0934, -3.1186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5214, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.5943, -2.7325, -3.0920, -3.1250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4848, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.5982, -2.7301, -3.0887, -3.1286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4350, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.5998, -2.7260, -3.0883, -3.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4512, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6000, -2.7244, -3.0919, -3.1171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4505, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6006, -2.7235, -3.0967, -3.1098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4597, device='cuda:0', dtype=torch.float64)
tensor([-1.8124, -2.6019, -2.7217, -3.0988, -3.1059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4264, device='cuda:0', dtype=torch.float64)
tensor([-1.8074, -2.6024, -2.7209, -3.0980, -3.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4489, device='cuda:0', dtype=torch.float64)
tensor([-1.8091, -2.6038, -2.7168, -3.0931, -3.0983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3685, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6041, -2.7128, -3.0842, -3.1021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5294, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6040, -2.7094, -3.0753, -3.1071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5103, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6023, -2.7096, -3.0730, -3.1142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4788, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6027, -2.7140, -3.0764, -3.1178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5891, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6000, -2.7233, -3.0894, -3.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3514, device='cuda:0', dtype=torch.float64)
tensor([-1.8132, -2.5950, -2.7337, -3.1034, -3.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5212, device='cuda:0', dtype=torch.float64)
tensor([-1.8060, -2.5947, -2.7373, -3.1075, -3.1145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4488, device='cuda:0', dtype=torch.float64)
tensor([-1.8071, -2.5953, -2.7351, -3.1035, -3.1096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4901, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.5983, -2.7283, -3.0960, -3.1052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5378, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6043, -2.7227, -3.0880, -3.1083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4561, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.6057, -2.7217, -3.0838, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4794, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6050, -2.7235, -3.0850, -3.1171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5708, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6031, -2.7258, -3.0937, -3.1185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4273, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.5979, -2.7284, -3.1056, -3.1140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4797, device='cuda:0', dtype=torch.float64)
tensor([-1.8101, -2.5946, -2.7295, -3.1166, -3.1100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4516, device='cuda:0', dtype=torch.float64)
tensor([-1.8068, -2.5939, -2.7281, -3.1196, -3.1107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5011, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.5956, -2.7218, -3.1104, -3.1166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4727, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.5979, -2.7127, -3.0958, -3.1178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5560, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.5970, -2.7050, -3.0830, -3.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4242, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.5939, -2.7013, -3.0781, -3.1119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5732, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.5889, -2.7040, -3.0811, -3.1152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4870, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.5855, -2.7106, -3.0886, -3.1174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4097, device='cuda:0', dtype=torch.float64)
tensor([-1.8098, -2.5857, -2.7159, -3.0957, -3.1152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4308, device='cuda:0', dtype=torch.float64)
tensor([-1.8070, -2.5896, -2.7209, -3.0970, -3.1154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4584, device='cuda:0', dtype=torch.float64)
tensor([-1.8100, -2.5949, -2.7241, -3.0911, -3.1166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4528, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6023, -2.7260, -3.0794, -3.1182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4520, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6076, -2.7244, -3.0655, -3.1170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5793, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6074, -2.7249, -3.0581, -3.1148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4546, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6004, -2.7302, -3.0603, -3.1104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4334, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.5925, -2.7357, -3.0710, -3.1049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3893, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.5877, -2.7388, -3.0832, -3.1010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5787, device='cuda:0', dtype=torch.float64)
tensor([-1.8117, -2.5936, -2.7354, -3.0871, -3.0993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5256, device='cuda:0', dtype=torch.float64)
tensor([-1.8111, -2.6038, -2.7284, -3.0835, -3.0984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5541, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6145, -2.7216, -3.0796, -3.1039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4671, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6206, -2.7180, -3.0784, -3.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4859, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6203, -2.7187, -3.0835, -3.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4774, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6141, -2.7192, -3.0910, -3.1213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4696, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6043, -2.7221, -3.0989, -3.1214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6023, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.5942, -2.7250, -3.1040, -3.1213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5520, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.5879, -2.7278, -3.1058, -3.1229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3844, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.5891, -2.7296, -3.0992, -3.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5106, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.5972, -2.7269, -3.0887, -3.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5200, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6055, -2.7182, -3.0771, -3.1177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5326, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6124, -2.7113, -3.0710, -3.1149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5233, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6133, -2.7094, -3.0709, -3.1169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4745, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6076, -2.7118, -3.0758, -3.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6062, device='cuda:0', dtype=torch.float64)
tensor([-1.8123, -2.5980, -2.7169, -3.0852, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5121, device='cuda:0', dtype=torch.float64)
tensor([-1.8054, -2.5875, -2.7227, -3.0923, -3.1090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6099, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.5829, -2.7259, -3.0945, -3.1096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6615, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.5836, -2.7280, -3.0942, -3.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5773, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.5867, -2.7272, -3.0903, -3.1091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4796, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.5904, -2.7251, -3.0900, -3.1016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5943, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.5939, -2.7255, -3.0915, -3.0980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5815, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.5981, -2.7281, -3.0937, -3.0959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4941, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6019, -2.7289, -3.0920, -3.0939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6311, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6081, -2.7224, -3.0884, -3.0921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6292, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6115, -2.7170, -3.0912, -3.0933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5901, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6116, -2.7123, -3.0943, -3.0954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4922, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6076, -2.7149, -3.0964, -3.1029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5672, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.5988, -2.7242, -3.0975, -3.1081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5833, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.5887, -2.7312, -3.0959, -3.1055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5345, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.5854, -2.7342, -3.0888, -3.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4510, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.5873, -2.7302, -3.0756, -3.1018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6595, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.5948, -2.7218, -3.0637, -3.1026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4568, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6016, -2.7162, -3.0545, -3.1061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4680, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6044, -2.7169, -3.0547, -3.1102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6283, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6012, -2.7209, -3.0588, -3.1108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4790, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.5949, -2.7269, -3.0705, -3.1119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4210, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.5909, -2.7288, -3.0818, -3.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5297, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.5904, -2.7224, -3.0896, -3.1142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5118, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.5928, -2.7105, -3.0916, -3.1147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4638, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.5934, -2.7028, -3.0914, -3.1133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4941, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.5922, -2.7014, -3.0930, -3.1113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4747, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.5873, -2.7063, -3.0950, -3.1078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5646, device='cuda:0', dtype=torch.float64)
tensor([-1.8069, -2.5873, -2.7085, -3.0958, -3.1088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5308, device='cuda:0', dtype=torch.float64)
tensor([-1.8100, -2.5910, -2.7067, -3.0929, -3.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5063, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.5976, -2.7010, -3.0877, -3.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4175, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6017, -2.6996, -3.0851, -3.1111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4929, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6009, -2.7050, -3.0855, -3.1043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5578, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.5971, -2.7148, -3.0859, -3.1009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4957, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.5921, -2.7219, -3.0848, -3.1008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4961, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.5946, -2.7269, -3.0802, -3.1053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4013, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.5998, -2.7309, -3.0743, -3.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3889, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.6018, -2.7313, -3.0737, -3.1152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5440, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6002, -2.7294, -3.0730, -3.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6167, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.5948, -2.7330, -3.0769, -3.1129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4569, device='cuda:0', dtype=torch.float64)
tensor([-1.8275, -2.5921, -2.7353, -3.0786, -3.1171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5635, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.5896, -2.7350, -3.0798, -3.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5689, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.5912, -2.7295, -3.0789, -3.1142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5168, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.5929, -2.7223, -3.0793, -3.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5552, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.5933, -2.7149, -3.0838, -3.1026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5528, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.5942, -2.7101, -3.0908, -3.0980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4857, device='cuda:0', dtype=torch.float64)
tensor([-1.8079, -2.5963, -2.7065, -3.0939, -3.0961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5667, device='cuda:0', dtype=torch.float64)
tensor([-1.8106, -2.6004, -2.7046, -3.0923, -3.1013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5065, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6041, -2.7053, -3.0882, -3.1101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4793, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6055, -2.7093, -3.0863, -3.1185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4785, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6030, -2.7161, -3.0864, -3.1211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5935, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.5963, -2.7262, -3.0928, -3.1229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4995, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.5890, -2.7325, -3.0990, -3.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4625, device='cuda:0', dtype=torch.float64)
tensor([-1.8131, -2.5870, -2.7300, -3.0984, -3.1056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4836, device='cuda:0', dtype=torch.float64)
tensor([-1.8125, -2.5882, -2.7229, -3.0913, -3.1004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5576, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.5909, -2.7137, -3.0805, -3.1049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6045, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.5959, -2.7041, -3.0681, -3.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5564, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.5982, -2.7024, -3.0634, -3.1109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5703, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.5955, -2.7068, -3.0686, -3.1043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5517, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.5895, -2.7162, -3.0780, -3.0967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4560, device='cuda:0', dtype=torch.float64)
tensor([-1.8127, -2.5867, -2.7259, -3.0853, -3.0942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6017, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.5906, -2.7281, -3.0873, -3.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5095, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.5974, -2.7270, -3.0819, -3.1065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5936, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6060, -2.7214, -3.0721, -3.1120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4831, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6096, -2.7192, -3.0626, -3.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5107, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6083, -2.7189, -3.0599, -3.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5346, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.6012, -2.7183, -3.0635, -3.1072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5639, device='cuda:0', dtype=torch.float64)
tensor([-1.8098, -2.5973, -2.7130, -3.0629, -3.1032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5628, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.5946, -2.7086, -3.0623, -3.1054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6375, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.5935, -2.7096, -3.0620, -3.1097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4922, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.5937, -2.7129, -3.0673, -3.1083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5550, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.5935, -2.7188, -3.0760, -3.1015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6083, device='cuda:0', dtype=torch.float64)
tensor([-1.8163, -2.5912, -2.7277, -3.0882, -3.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6125, device='cuda:0', dtype=torch.float64)
tensor([-1.8066, -2.5895, -2.7355, -3.0986, -3.0924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4538, device='cuda:0', dtype=torch.float64)
tensor([-1.8041, -2.5893, -2.7376, -3.1019, -3.0955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5704, device='cuda:0', dtype=torch.float64)
tensor([-1.8063, -2.5898, -2.7343, -3.0981, -3.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5920, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.5920, -2.7255, -3.0877, -3.0998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4743, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.5972, -2.7148, -3.0804, -3.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5471, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.5994, -2.7098, -3.0795, -3.1091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5714, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.5972, -2.7082, -3.0868, -3.1056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4795, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.5938, -2.7107, -3.0995, -3.0992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4874, device='cuda:0', dtype=torch.float64)
tensor([-1.8142, -2.5910, -2.7169, -3.1091, -3.0970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5845, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.5894, -2.7255, -3.1121, -3.1011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5260, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.5909, -2.7255, -3.1017, -3.1102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5536, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.5972, -2.7162, -3.0834, -3.1159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5294, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.6005, -2.7045, -3.0688, -3.1137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5687, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.5997, -2.6978, -3.0603, -3.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5489, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.5953, -2.7027, -3.0625, -3.1053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5995, device='cuda:0', dtype=torch.float64)
tensor([-1.8136, -2.5923, -2.7127, -3.0694, -3.1055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5630, device='cuda:0', dtype=torch.float64)
tensor([-1.8068, -2.5911, -2.7198, -3.0737, -3.1040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5831, device='cuda:0', dtype=torch.float64)
tensor([-1.8104, -2.5963, -2.7209, -3.0775, -3.1085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6001, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6067, -2.7184, -3.0783, -3.1165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5309, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6103, -2.7203, -3.0823, -3.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6055, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6070, -2.7248, -3.0845, -3.1181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5584, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.6000, -2.7285, -3.0834, -3.1075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4646, device='cuda:0', dtype=torch.float64)
tensor([-1.8033, -2.5936, -2.7294, -3.0767, -3.0975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4649, device='cuda:0', dtype=torch.float64)
tensor([-1.8097, -2.5893, -2.7225, -3.0657, -3.0926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5354, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.5884, -2.7093, -3.0565, -3.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5042, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.5881, -2.6982, -3.0596, -3.0983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5170, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.5859, -2.6921, -3.0748, -3.0932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6415, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.5862, -2.6923, -3.0972, -3.0825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5397, device='cuda:0', dtype=torch.float64)
tensor([-1.8129, -2.5849, -2.7001, -3.1159, -3.0817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5139, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.5860, -2.7096, -3.1177, -3.0913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4814, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.5905, -2.7140, -3.1042, -3.1040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4487, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.5953, -2.7136, -3.0845, -3.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4984, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.5943, -2.7154, -3.0671, -3.1211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5557, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.5883, -2.7238, -3.0602, -3.1214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5206, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.5803, -2.7323, -3.0629, -3.1159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6244, device='cuda:0', dtype=torch.float64)
tensor([-1.8084, -2.5754, -2.7394, -3.0726, -3.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6215, device='cuda:0', dtype=torch.float64)
tensor([-1.8012, -2.5775, -2.7444, -3.0838, -3.1088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4125, device='cuda:0', dtype=torch.float64)
tensor([-1.8035, -2.5821, -2.7452, -3.0895, -3.1150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5078, device='cuda:0', dtype=torch.float64)
tensor([-1.8128, -2.5887, -2.7393, -3.0865, -3.1195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4638, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.5957, -2.7245, -3.0779, -3.1152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5216, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6023, -2.7082, -3.0695, -3.1058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5668, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.6061, -2.6967, -3.0673, -3.0987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5611, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6036, -2.6923, -3.0717, -3.0921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4970, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.5973, -2.6911, -3.0774, -3.0799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4827, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.5929, -2.6949, -3.0830, -3.0712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4080, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.5915, -2.7010, -3.0844, -3.0735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4788, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.5929, -2.7067, -3.0802, -3.0848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5699, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.5957, -2.7071, -3.0717, -3.0946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5179, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.5990, -2.7076, -3.0697, -3.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5023, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6038, -2.7102, -3.0742, -3.1110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5235, device='cuda:0', dtype=torch.float64)
tensor([-1.8081, -2.6052, -2.7166, -3.0823, -3.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6547, device='cuda:0', dtype=torch.float64)
tensor([-1.8013, -2.6067, -2.7254, -3.0904, -3.1162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4245, device='cuda:0', dtype=torch.float64)
tensor([-1.7997, -2.6031, -2.7305, -3.0912, -3.1145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5286, device='cuda:0', dtype=torch.float64)
tensor([-1.8072, -2.5955, -2.7272, -3.0845, -3.1098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5624, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.5855, -2.7235, -3.0816, -3.1102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7162, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.5790, -2.7174, -3.0819, -3.1168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5295, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.5745, -2.7122, -3.0861, -3.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4967, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.5742, -2.7093, -3.0928, -3.1066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5648, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.5759, -2.7114, -3.0946, -3.1014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5846, device='cuda:0', dtype=torch.float64)
tensor([-1.8091, -2.5826, -2.7196, -3.0948, -3.1016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5748, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.5890, -2.7249, -3.0886, -3.1136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6333, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.5957, -2.7242, -3.0798, -3.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5975, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6001, -2.7146, -3.0698, -3.1161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5674, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.5977, -2.7101, -3.0689, -3.1102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5857, device='cuda:0', dtype=torch.float64)
tensor([-1.8140, -2.5894, -2.7111, -3.0734, -3.1082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6088, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.5830, -2.7120, -3.0766, -3.1032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5869, device='cuda:0', dtype=torch.float64)
tensor([-1.8099, -2.5825, -2.7083, -3.0732, -3.0978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6999, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.5886, -2.6976, -3.0618, -3.0942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5365, device='cuda:0', dtype=torch.float64)
tensor([-1.8275, -2.5950, -2.6917, -3.0526, -3.0928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5740, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6004, -2.6913, -3.0489, -3.0929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5344, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6016, -2.6984, -3.0545, -3.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6822, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6012, -2.7056, -3.0646, -3.0861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4940, device='cuda:0', dtype=torch.float64)
tensor([-1.8085, -2.6029, -2.7143, -3.0729, -3.0847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5806, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6081, -2.7175, -3.0713, -3.0936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5774, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6123, -2.7173, -3.0652, -3.1044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5989, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.6137, -2.7198, -3.0584, -3.1104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5470, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6053, -2.7262, -3.0619, -3.1024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5776, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.5887, -2.7340, -3.0757, -3.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6468, device='cuda:0', dtype=torch.float64)
tensor([-1.8044, -2.5751, -2.7360, -3.0893, -3.0728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6184, device='cuda:0', dtype=torch.float64)
tensor([-1.8088, -2.5714, -2.7307, -3.0941, -3.0757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4297, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.5717, -2.7228, -3.0923, -3.0837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5751, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.5774, -2.7133, -3.0844, -3.0918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6021, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.5819, -2.7082, -3.0828, -3.1017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5127, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.5867, -2.7079, -3.0867, -3.1129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4691, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.5951, -2.7049, -3.0920, -3.1255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5131, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6051, -2.7018, -3.0934, -3.1355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4891, device='cuda:0', dtype=torch.float64)
tensor([-1.8101, -2.6124, -2.6968, -3.0879, -3.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4843, device='cuda:0', dtype=torch.float64)
tensor([-1.8047, -2.6132, -2.6979, -3.0781, -3.1236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5587, device='cuda:0', dtype=torch.float64)
tensor([-1.8019, -2.6065, -2.7050, -3.0717, -3.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5388, device='cuda:0', dtype=torch.float64)
tensor([-1.8054, -2.5988, -2.7109, -3.0687, -3.1062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5921, device='cuda:0', dtype=torch.float64)
tensor([-1.8103, -2.5877, -2.7161, -3.0705, -3.0996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5802, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.5821, -2.7163, -3.0716, -3.0956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5131, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.5834, -2.7149, -3.0736, -3.0983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5097, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.5902, -2.7143, -3.0766, -3.1013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5710, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.5968, -2.7164, -3.0798, -3.1038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6369, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.5980, -2.7221, -3.0835, -3.1028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4574, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6000, -2.7225, -3.0821, -3.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3689, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.5966, -2.7215, -3.0769, -3.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4906, device='cuda:0', dtype=torch.float64)
tensor([-1.8100, -2.5914, -2.7208, -3.0706, -3.0945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6143, device='cuda:0', dtype=torch.float64)
tensor([-1.8106, -2.5844, -2.7206, -3.0640, -3.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5696, device='cuda:0', dtype=torch.float64)
tensor([-1.8091, -2.5782, -2.7220, -3.0630, -3.0916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4849, device='cuda:0', dtype=torch.float64)
tensor([-1.8081, -2.5754, -2.7223, -3.0635, -3.0871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4832, device='cuda:0', dtype=torch.float64)
tensor([-1.8134, -2.5793, -2.7201, -3.0641, -3.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4778, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.5873, -2.7186, -3.0631, -3.0933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5422, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.5987, -2.7138, -3.0557, -3.1026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6599, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.6098, -2.7091, -3.0529, -3.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4278, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.6146, -2.7065, -3.0590, -3.1095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6122, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.6113, -2.7071, -3.0700, -3.1075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5365, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6014, -2.7097, -3.0809, -3.1045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6500, device='cuda:0', dtype=torch.float64)
tensor([-1.8061, -2.5911, -2.7071, -3.0826, -3.0954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6084, device='cuda:0', dtype=torch.float64)
tensor([-1.8082, -2.5882, -2.7031, -3.0809, -3.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5047, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.5929, -2.6991, -3.0773, -3.1052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5377, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.5964, -2.7002, -3.0789, -3.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6419, device='cuda:0', dtype=torch.float64)
tensor([-1.8122, -2.5973, -2.7062, -3.0802, -3.1156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6292, device='cuda:0', dtype=torch.float64)
tensor([-1.8088, -2.5989, -2.7086, -3.0808, -3.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4970, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.6002, -2.7099, -3.0796, -3.1076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6987, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.5996, -2.7104, -3.0732, -3.1067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5510, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.5941, -2.7104, -3.0700, -3.1029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6064, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.5846, -2.7122, -3.0736, -3.0905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5425, device='cuda:0', dtype=torch.float64)
tensor([-1.8068, -2.5740, -2.7152, -3.0822, -3.0808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5432, device='cuda:0', dtype=torch.float64)
tensor([-1.8046, -2.5691, -2.7151, -3.0871, -3.0837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5514, device='cuda:0', dtype=torch.float64)
tensor([-1.8105, -2.5712, -2.7119, -3.0835, -3.0949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6894, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.5787, -2.7051, -3.0690, -3.1072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4833, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.5875, -2.6987, -3.0538, -3.1078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7115, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.5896, -2.7012, -3.0493, -3.1047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6269, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.5928, -2.7045, -3.0531, -3.1006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4569, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.5937, -2.7079, -3.0683, -3.0870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6815, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.5978, -2.7115, -3.0819, -3.0759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6427, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.5950, -2.7227, -3.0920, -3.0740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5792, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.5912, -2.7375, -3.0971, -3.0829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5966, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.5930, -2.7443, -3.0916, -3.0890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6272, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6010, -2.7394, -3.0759, -3.0906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6536, device='cuda:0', dtype=torch.float64)
tensor([-1.8096, -2.6061, -2.7266, -3.0609, -3.0881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6567, device='cuda:0', dtype=torch.float64)
tensor([-1.8054, -2.6087, -2.7159, -3.0530, -3.0895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5720, device='cuda:0', dtype=torch.float64)
tensor([-1.7990, -2.6049, -2.7085, -3.0536, -3.0888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5607, device='cuda:0', dtype=torch.float64)
tensor([-1.7953, -2.5982, -2.7033, -3.0568, -3.0842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6840, device='cuda:0', dtype=torch.float64)
tensor([-1.8005, -2.5906, -2.7002, -3.0641, -3.0832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5327, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.5862, -2.6967, -3.0685, -3.0915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5213, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.5851, -2.6958, -3.0672, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5528, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.5820, -2.6997, -3.0683, -3.1277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5507, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.5719, -2.7010, -3.0744, -3.1211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5703, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.5619, -2.7005, -3.0801, -3.1026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6241, device='cuda:0', dtype=torch.float64)
tensor([-1.8065, -2.5606, -2.6998, -3.0851, -3.0895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5763, device='cuda:0', dtype=torch.float64)
tensor([-1.8025, -2.5664, -2.7004, -3.0863, -3.0920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6863, device='cuda:0', dtype=torch.float64)
tensor([-1.8092, -2.5791, -2.6986, -3.0844, -3.0960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8439, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.5962, -2.6975, -3.0836, -3.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6177, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.6039, -2.7054, -3.0881, -3.0915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6991, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.6044, -2.7211, -3.0949, -3.0906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5716, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.5990, -2.7351, -3.0945, -3.0938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6439, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.5927, -2.7435, -3.0813, -3.0932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6003, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.5930, -2.7382, -3.0544, -3.0895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7181, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6008, -2.7241, -3.0271, -3.0856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7295, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6123, -2.7071, -3.0104, -3.0959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5801, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6176, -2.7000, -3.0160, -3.1095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7506, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6143, -2.7015, -3.0407, -3.1075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6138, device='cuda:0', dtype=torch.float64)
tensor([-1.7982, -2.5999, -2.7107, -3.0742, -3.0974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5253, device='cuda:0', dtype=torch.float64)
tensor([-1.7935, -2.5867, -2.7182, -3.1006, -3.0956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5831, device='cuda:0', dtype=torch.float64)
tensor([-1.8063, -2.5786, -2.7218, -3.1111, -3.1082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4423, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.5754, -2.7186, -3.1060, -3.1170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6476, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.5769, -2.7117, -3.0917, -3.1158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5081, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.5792, -2.7063, -3.0784, -3.1075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6651, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.5770, -2.7059, -3.0693, -3.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5801, device='cuda:0', dtype=torch.float64)
tensor([-1.8069, -2.5763, -2.7115, -3.0690, -3.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6963, device='cuda:0', dtype=torch.float64)
tensor([-1.7982, -2.5803, -2.7151, -3.0702, -3.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6734, device='cuda:0', dtype=torch.float64)
tensor([-1.8024, -2.5837, -2.7137, -3.0668, -3.0932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4191, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.5904, -2.7103, -3.0576, -3.0982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5880, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.5953, -2.7062, -3.0562, -3.1062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5344, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.5979, -2.7016, -3.0572, -3.1099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5045, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.5988, -2.6937, -3.0636, -3.0990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4980, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.5951, -2.6911, -3.0740, -3.0822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6960, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.5914, -2.6975, -3.0870, -3.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5883, device='cuda:0', dtype=torch.float64)
tensor([-1.8049, -2.5883, -2.7027, -3.0950, -3.0584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5821, device='cuda:0', dtype=torch.float64)
tensor([-1.8020, -2.5924, -2.7004, -3.0892, -3.0513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4928, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6020, -2.6959, -3.0769, -3.0662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5398, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.6077, -2.7006, -3.0663, -3.0945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5376, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6040, -2.7085, -3.0604, -3.1113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5326, device='cuda:0', dtype=torch.float64)
tensor([-1.8125, -2.5974, -2.7159, -3.0599, -3.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6334, device='cuda:0', dtype=torch.float64)
tensor([-1.7974, -2.5894, -2.7201, -3.0597, -3.1043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5869, device='cuda:0', dtype=torch.float64)
tensor([-1.7959, -2.5874, -2.7174, -3.0523, -3.1002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5090, device='cuda:0', dtype=torch.float64)
tensor([-1.8049, -2.5889, -2.7123, -3.0450, -3.1045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6367, device='cuda:0', dtype=torch.float64)
tensor([-1.8148, -2.5893, -2.7070, -3.0448, -3.1089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6161, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.5858, -2.7095, -3.0512, -3.1167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6285, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.5833, -2.7117, -3.0618, -3.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4954, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.5775, -2.7165, -3.0765, -3.1212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6961, device='cuda:0', dtype=torch.float64)
tensor([-1.8156, -2.5743, -2.7202, -3.0878, -3.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5688, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.5784, -2.7111, -3.0838, -3.0831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3977, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.5861, -2.6981, -3.0652, -3.0693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5090, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.5958, -2.6903, -3.0447, -3.0666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6344, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6014, -2.6906, -3.0371, -3.0711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6377, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6006, -2.6980, -3.0446, -3.0731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4846, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.5943, -2.7101, -3.0669, -3.0728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7003, device='cuda:0', dtype=torch.float64)
tensor([-1.8003, -2.5889, -2.7209, -3.0992, -3.0804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4502, device='cuda:0', dtype=torch.float64)
tensor([-1.8008, -2.5916, -2.7202, -3.1152, -3.0965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6931, device='cuda:0', dtype=torch.float64)
tensor([-1.8127, -2.5959, -2.7084, -3.1100, -3.1061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6613, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6002, -2.6959, -3.0953, -3.1058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7130, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6012, -2.6988, -3.0805, -3.1089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6266, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.5985, -2.7116, -3.0757, -3.1113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6569, device='cuda:0', dtype=torch.float64)
tensor([-1.8069, -2.5910, -2.7199, -3.0749, -3.1026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6787, device='cuda:0', dtype=torch.float64)
tensor([-1.7947, -2.5892, -2.7155, -3.0711, -3.0874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5355, device='cuda:0', dtype=torch.float64)
tensor([-1.7955, -2.5908, -2.7033, -3.0623, -3.0779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6917, device='cuda:0', dtype=torch.float64)
tensor([-1.8114, -2.5923, -2.6933, -3.0521, -3.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5992, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.5928, -2.6877, -3.0450, -3.0951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6818, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.5900, -2.6902, -3.0501, -3.0956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5892, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.5889, -2.6965, -3.0595, -3.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6455, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.5882, -2.7070, -3.0685, -3.1005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6219, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.5891, -2.7166, -3.0771, -3.1077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5742, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.5901, -2.7230, -3.0770, -3.1038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6715, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.5845, -2.7242, -3.0753, -3.0954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4946, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.5814, -2.7204, -3.0680, -3.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4877, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.5810, -2.7116, -3.0585, -3.0715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6224, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.5850, -2.7001, -3.0546, -3.0694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5688, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.5931, -2.6936, -3.0579, -3.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5751, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.5966, -2.6962, -3.0679, -3.0798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5642, device='cuda:0', dtype=torch.float64)
tensor([-1.8124, -2.5950, -2.7055, -3.0777, -3.0923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5891, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.5928, -2.7130, -3.0865, -3.1080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7752, device='cuda:0', dtype=torch.float64)
tensor([-1.8073, -2.5865, -2.7133, -3.0905, -3.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5020, device='cuda:0', dtype=torch.float64)
tensor([-1.8047, -2.5843, -2.7101, -3.0857, -3.1015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5125, device='cuda:0', dtype=torch.float64)
tensor([-1.8131, -2.5885, -2.7059, -3.0733, -3.1057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6001, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.5952, -2.7021, -3.0584, -3.1145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7063, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6002, -2.7042, -3.0465, -3.1182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6562, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6056, -2.7062, -3.0435, -3.1124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5619, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.5994, -2.7142, -3.0576, -3.1057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7752, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.5846, -2.7252, -3.0822, -3.0977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6170, device='cuda:0', dtype=torch.float64)
tensor([-1.8130, -2.5753, -2.7298, -3.0942, -3.0926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6747, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.5725, -2.7210, -3.0904, -3.0865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5594, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.5749, -2.7142, -3.0817, -3.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5074, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.5841, -2.7048, -3.0677, -3.0962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6126, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.5921, -2.6897, -3.0581, -3.0891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5214, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.5946, -2.6802, -3.0580, -3.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5897, device='cuda:0', dtype=torch.float64)
tensor([-1.7978, -2.5901, -2.6813, -3.0690, -3.0760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4484, device='cuda:0', dtype=torch.float64)
tensor([-1.7906, -2.5853, -2.6919, -3.0786, -3.0822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6368, device='cuda:0', dtype=torch.float64)
tensor([-1.7960, -2.5824, -2.7021, -3.0780, -3.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6662, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.5862, -2.7056, -3.0661, -3.0971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5865, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.5940, -2.7073, -3.0526, -3.0953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7102, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.6015, -2.7157, -3.0439, -3.0960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5779, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6014, -2.7236, -3.0428, -3.0884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9013, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.5982, -2.7290, -3.0490, -3.0806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5404, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.5925, -2.7267, -3.0555, -3.0764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5321, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.5892, -2.7177, -3.0581, -3.0836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6644, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.5871, -2.7087, -3.0557, -3.0890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6370, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.5909, -2.7029, -3.0476, -3.0953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7112, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.5944, -2.6960, -3.0430, -3.0944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5556, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.5951, -2.6934, -3.0464, -3.0934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6082, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.5901, -2.7001, -3.0640, -3.0938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5356, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.5828, -2.7086, -3.0827, -3.0891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6133, device='cuda:0', dtype=torch.float64)
tensor([-1.8116, -2.5764, -2.7137, -3.0926, -3.0824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4642, device='cuda:0', dtype=torch.float64)
tensor([-1.8124, -2.5755, -2.7133, -3.0890, -3.0831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4455, device='cuda:0', dtype=torch.float64)
tensor([-1.8148, -2.5762, -2.7043, -3.0770, -3.0843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7474, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.5822, -2.6889, -3.0625, -3.0886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5777, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.5843, -2.6754, -3.0524, -3.0915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5465, device='cuda:0', dtype=torch.float64)
tensor([-1.8136, -2.5811, -2.6664, -3.0501, -3.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7331, device='cuda:0', dtype=torch.float64)
tensor([-1.8080, -2.5767, -2.6720, -3.0545, -3.0929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6259, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.5765, -2.6793, -3.0556, -3.0997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7319, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.5812, -2.6939, -3.0602, -3.1052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5816, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.5904, -2.7045, -3.0630, -3.1082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8214, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6075, -2.7086, -3.0679, -3.1217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5847, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6156, -2.7140, -3.0813, -3.1289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8512, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6077, -2.7203, -3.0987, -3.1101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6919, device='cuda:0', dtype=torch.float64)
tensor([-1.7988, -2.5874, -2.7267, -3.1130, -3.0890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7775, device='cuda:0', dtype=torch.float64)
tensor([-1.7911, -2.5651, -2.7359, -3.1147, -3.0828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5428, device='cuda:0', dtype=torch.float64)
tensor([-1.8071, -2.5574, -2.7320, -3.0929, -3.0858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7472, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.5658, -2.7173, -3.0592, -3.0815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6019, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.5807, -2.7065, -3.0414, -3.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7145, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.5915, -2.7091, -3.0534, -3.0708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5874, device='cuda:0', dtype=torch.float64)
tensor([-1.8072, -2.5918, -2.7279, -3.0858, -3.0730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8357, device='cuda:0', dtype=torch.float64)
tensor([-1.7847, -2.5849, -2.7432, -3.1122, -3.0685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6999, device='cuda:0', dtype=torch.float64)
tensor([-1.7872, -2.5814, -2.7391, -3.1079, -3.0648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7514, device='cuda:0', dtype=torch.float64)
tensor([-1.8142, -2.5843, -2.7171, -3.0769, -3.0770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6327, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.5935, -2.6854, -3.0356, -3.0978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4558, device='cuda:0', dtype=torch.float64)
tensor([-1.8696, -2.5981, -2.6617, -3.0055, -3.1013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4637, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.5977, -2.6552, -3.0011, -3.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7487, device='cuda:0', dtype=torch.float64)
tensor([-1.8146, -2.5943, -2.6655, -3.0186, -3.0768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4363, device='cuda:0', dtype=torch.float64)
tensor([-1.7802, -2.5905, -2.6870, -3.0474, -3.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6048, device='cuda:0', dtype=torch.float64)
tensor([-1.7721, -2.5928, -2.7039, -3.0624, -3.0858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6864, device='cuda:0', dtype=torch.float64)
tensor([-1.7968, -2.5970, -2.7101, -3.0605, -3.1116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7923, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6002, -2.7085, -3.0541, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6027, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.5972, -2.7117, -3.0643, -3.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6307, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.5868, -2.7200, -3.0853, -3.1229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7074, device='cuda:0', dtype=torch.float64)
tensor([-1.8134, -2.5752, -2.7291, -3.1041, -3.1001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6293, device='cuda:0', dtype=torch.float64)
tensor([-1.8016, -2.5716, -2.7279, -3.1115, -3.0775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6299, device='cuda:0', dtype=torch.float64)
tensor([-1.8076, -2.5736, -2.7182, -3.1043, -3.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6676, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.5791, -2.7031, -3.0883, -3.0746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6361, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.5815, -2.6943, -3.0723, -3.0824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5483, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.5829, -2.6869, -3.0630, -3.0844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7144, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.5818, -2.6859, -3.0596, -3.0884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6522, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.5807, -2.6905, -3.0590, -3.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6154, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.5812, -2.6948, -3.0509, -3.1016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7204, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.5835, -2.6966, -3.0386, -3.0926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4067, device='cuda:0', dtype=torch.float64)
tensor([-1.8275, -2.5859, -2.6997, -3.0300, -3.0786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5552, device='cuda:0', dtype=torch.float64)
tensor([-1.8146, -2.5892, -2.7126, -3.0335, -3.0738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6695, device='cuda:0', dtype=torch.float64)
tensor([-1.7998, -2.5935, -2.7217, -3.0400, -3.0694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6155, device='cuda:0', dtype=torch.float64)
tensor([-1.7967, -2.5984, -2.7265, -3.0462, -3.0742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7011, device='cuda:0', dtype=torch.float64)
tensor([-1.7985, -2.6022, -2.7256, -3.0519, -3.0850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6711, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6049, -2.7192, -3.0558, -3.1007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6620, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6024, -2.7165, -3.0699, -3.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6854, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.5954, -2.7130, -3.0785, -3.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6164, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.5848, -2.7125, -3.0891, -3.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5261, device='cuda:0', dtype=torch.float64)
tensor([-1.8112, -2.5796, -2.7103, -3.0994, -3.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5810, device='cuda:0', dtype=torch.float64)
tensor([-1.8040, -2.5772, -2.7004, -3.0980, -3.0886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7486, device='cuda:0', dtype=torch.float64)
tensor([-1.8055, -2.5794, -2.6862, -3.0871, -3.0740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6541, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.5821, -2.6783, -3.0692, -3.0769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6229, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.5833, -2.6811, -3.0466, -3.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6679, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.5806, -2.6904, -3.0333, -3.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7338, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.5691, -2.7043, -3.0300, -3.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7969, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.5659, -2.7152, -3.0400, -3.0809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6235, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.5740, -2.7194, -3.0538, -3.0989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7776, device='cuda:0', dtype=torch.float64)
tensor([-1.8107, -2.5863, -2.7135, -3.0722, -3.1059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7286, device='cuda:0', dtype=torch.float64)
tensor([-1.8061, -2.6044, -2.7047, -3.0805, -3.1088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7625, device='cuda:0', dtype=torch.float64)
tensor([-1.8096, -2.6185, -2.7020, -3.0890, -3.1146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7202, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6227, -2.7000, -3.0869, -3.1105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5567, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6191, -2.6962, -3.0783, -3.0955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5415, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6059, -2.6910, -3.0691, -3.0773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6205, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.5889, -2.6892, -3.0670, -3.0647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6623, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.5756, -2.6981, -3.0759, -3.0626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5977, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.5688, -2.7038, -3.0798, -3.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6472, device='cuda:0', dtype=torch.float64)
tensor([-1.8123, -2.5722, -2.7069, -3.0772, -3.0589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5331, device='cuda:0', dtype=torch.float64)
tensor([-1.7997, -2.5766, -2.7115, -3.0745, -3.0599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5718, device='cuda:0', dtype=torch.float64)
tensor([-1.8040, -2.5846, -2.7112, -3.0631, -3.0741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7601, device='cuda:0', dtype=torch.float64)
tensor([-1.8135, -2.5949, -2.7053, -3.0460, -3.0896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8313, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.5997, -2.6950, -3.0392, -3.0966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6515, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.5931, -2.6907, -3.0471, -3.0889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8250, device='cuda:0', dtype=torch.float64)
tensor([-1.8126, -2.5775, -2.6958, -3.0660, -3.0815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6723, device='cuda:0', dtype=torch.float64)
tensor([-1.8077, -2.5638, -2.7097, -3.0885, -3.0828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8181, device='cuda:0', dtype=torch.float64)
tensor([-1.8024, -2.5608, -2.7146, -3.0974, -3.0796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6425, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.5675, -2.7122, -3.0902, -3.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8017, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.5807, -2.7085, -3.0707, -3.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4947, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.5991, -2.7019, -3.0509, -3.1272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7363, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6108, -2.7056, -3.0426, -3.1196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7470, device='cuda:0', dtype=torch.float64)
tensor([-1.8057, -2.6112, -2.7104, -3.0467, -3.0936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5942, device='cuda:0', dtype=torch.float64)
tensor([-1.7830, -2.6083, -2.7156, -3.0556, -3.0735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6294, device='cuda:0', dtype=torch.float64)
tensor([-1.7853, -2.6021, -2.7104, -3.0635, -3.0675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7355, device='cuda:0', dtype=torch.float64)
tensor([-1.8116, -2.5941, -2.6985, -3.0605, -3.0704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8360, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.5761, -2.6948, -3.0616, -3.0729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7121, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.5694, -2.6915, -3.0672, -3.0846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6753, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.5635, -2.7009, -3.0840, -3.0993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7162, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.5630, -2.7116, -3.1019, -3.0901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5572, device='cuda:0', dtype=torch.float64)
tensor([-1.8063, -2.5686, -2.7127, -3.1064, -3.0794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5484, device='cuda:0', dtype=torch.float64)
tensor([-1.8015, -2.5778, -2.7050, -3.0915, -3.0786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7383, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.5888, -2.6944, -3.0605, -3.0971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5485, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.5964, -2.6880, -3.0291, -3.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5838, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.5955, -2.6927, -3.0140, -3.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7098, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.5909, -2.6974, -3.0126, -3.1064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6046, device='cuda:0', dtype=torch.float64)
tensor([-1.8123, -2.5865, -2.7043, -3.0279, -3.1000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5801, device='cuda:0', dtype=torch.float64)
tensor([-1.7934, -2.5876, -2.7078, -3.0520, -3.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7053, device='cuda:0', dtype=torch.float64)
tensor([-1.7822, -2.5914, -2.7035, -3.0646, -3.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7297, device='cuda:0', dtype=torch.float64)
tensor([-1.7951, -2.5947, -2.7014, -3.0586, -3.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5497, device='cuda:0', dtype=torch.float64)
tensor([-1.8096, -2.5925, -2.7041, -3.0516, -3.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7309, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.5898, -2.7067, -3.0459, -3.0956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5893, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.5801, -2.7058, -3.0466, -3.0827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6422, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.5746, -2.6995, -3.0528, -3.0697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7342, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.5762, -2.7005, -3.0730, -3.0762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6656, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.5803, -2.7054, -3.0919, -3.0803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7373, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.5822, -2.7125, -3.1039, -3.0804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6220, device='cuda:0', dtype=torch.float64)
tensor([-1.8152, -2.5862, -2.7166, -3.1045, -3.0882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6305, device='cuda:0', dtype=torch.float64)
tensor([-1.8163, -2.5917, -2.7097, -3.0894, -3.0923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7300, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.5967, -2.6977, -3.0661, -3.0939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6256, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.5953, -2.6925, -3.0550, -3.0980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5452, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.5915, -2.6931, -3.0543, -3.0950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7740, device='cuda:0', dtype=torch.float64)
tensor([-1.8019, -2.5858, -2.7053, -3.0579, -3.0957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5142, device='cuda:0', dtype=torch.float64)
tensor([-1.7947, -2.5839, -2.7122, -3.0628, -3.0900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5212, device='cuda:0', dtype=torch.float64)
tensor([-1.7999, -2.5875, -2.7089, -3.0608, -3.0882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6175, device='cuda:0', dtype=torch.float64)
tensor([-1.8094, -2.5931, -2.6982, -3.0562, -3.0925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7898, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6039, -2.6858, -3.0464, -3.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6771, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6023, -2.6831, -3.0444, -3.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5294, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.5933, -2.6888, -3.0561, -3.0787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6702, device='cuda:0', dtype=torch.float64)
tensor([-1.8145, -2.5836, -2.6984, -3.0735, -3.0763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7450, device='cuda:0', dtype=torch.float64)
tensor([-1.8072, -2.5798, -2.7010, -3.0779, -3.0713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5190, device='cuda:0', dtype=torch.float64)
tensor([-1.8116, -2.5822, -2.6953, -3.0633, -3.0669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6817, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.5882, -2.6925, -3.0402, -3.0669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7056, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.5936, -2.6995, -3.0184, -3.0782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6448, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.5974, -2.7093, -3.0132, -3.0843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6392, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.5933, -2.7164, -3.0272, -3.0838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6565, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.5853, -2.7287, -3.0560, -3.0903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5821, device='cuda:0', dtype=torch.float64)
tensor([-1.8015, -2.5789, -2.7362, -3.0769, -3.1027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7781, device='cuda:0', dtype=torch.float64)
tensor([-1.8017, -2.5748, -2.7220, -3.0715, -3.0959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6296, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.5806, -2.6969, -3.0506, -3.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7064, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.5915, -2.6773, -3.0375, -3.1038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5866, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.5978, -2.6641, -3.0426, -3.1044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6133, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.5908, -2.6652, -3.0659, -3.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6748, device='cuda:0', dtype=torch.float64)
tensor([-1.7920, -2.5792, -2.6813, -3.0994, -3.0680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7305, device='cuda:0', dtype=torch.float64)
tensor([-1.7858, -2.5660, -2.6990, -3.1239, -3.0698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7958, device='cuda:0', dtype=torch.float64)
tensor([-1.7992, -2.5590, -2.7073, -3.1204, -3.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6816, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.5641, -2.7074, -3.0964, -3.0825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7371, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.5748, -2.7121, -3.0767, -3.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8208, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.5905, -2.7089, -3.0614, -3.0953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8682, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.6037, -2.7054, -3.0585, -3.0743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6671, device='cuda:0', dtype=torch.float64)
tensor([-1.7951, -2.6114, -2.7115, -3.0689, -3.0728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8236, device='cuda:0', dtype=torch.float64)
tensor([-1.7924, -2.6084, -2.7210, -3.0760, -3.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9854, device='cuda:0', dtype=torch.float64)
tensor([-1.8047, -2.6003, -2.7250, -3.0657, -3.1099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6995, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.5894, -2.7174, -3.0476, -3.1204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8069, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.5831, -2.6985, -3.0284, -3.1242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0305, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.5811, -2.6756, -3.0180, -3.1086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6458, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.5757, -2.6728, -3.0284, -3.0814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7566, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.5693, -2.6893, -3.0601, -3.0637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6743, device='cuda:0', dtype=torch.float64)
tensor([-1.7785, -2.5680, -2.7062, -3.0954, -3.0584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6955, device='cuda:0', dtype=torch.float64)
tensor([-1.7803, -2.5790, -2.7126, -3.1105, -3.0785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6780, device='cuda:0', dtype=torch.float64)
tensor([-1.7987, -2.5940, -2.7130, -3.1042, -3.1054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7248, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.5993, -2.7099, -3.0826, -3.1238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8878, device='cuda:0', dtype=torch.float64)
tensor([-1.8122, -2.5912, -2.7097, -3.0646, -3.1149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5630, device='cuda:0', dtype=torch.float64)
tensor([-1.8084, -2.5815, -2.7043, -3.0513, -3.0946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8952, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.5791, -2.6922, -3.0367, -3.0814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9519, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.5860, -2.6782, -3.0289, -3.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5682, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.5904, -2.6744, -3.0378, -3.0747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8272, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.5827, -2.6907, -3.0592, -3.0682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6745, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.5723, -2.7188, -3.0878, -3.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4771, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.5678, -2.7386, -3.1013, -3.0676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7312, device='cuda:0', dtype=torch.float64)
tensor([-1.8096, -2.5749, -2.7337, -3.0919, -3.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8425, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.5882, -2.7163, -3.0721, -3.0956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8407, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.5983, -2.7069, -3.0586, -3.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5873, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.5930, -2.7088, -3.0553, -3.1009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8812, device='cuda:0', dtype=torch.float64)
tensor([-1.8012, -2.5852, -2.7212, -3.0566, -3.0819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9056, device='cuda:0', dtype=torch.float64)
tensor([-1.7863, -2.5860, -2.7275, -3.0574, -3.0717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7329, device='cuda:0', dtype=torch.float64)
tensor([-1.7940, -2.5916, -2.7135, -3.0441, -3.0709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7368, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6004, -2.6915, -3.0283, -3.0808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9805, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.6054, -2.6892, -3.0339, -3.1021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9869, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.5969, -2.7047, -3.0579, -3.1208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6314, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.5859, -2.7165, -3.0843, -3.1184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7158, device='cuda:0', dtype=torch.float64)
tensor([-1.8040, -2.5784, -2.7124, -3.0877, -3.1020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0050, device='cuda:0', dtype=torch.float64)
tensor([-1.8131, -2.5824, -2.6921, -3.0667, -3.0888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7585, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.5865, -2.6745, -3.0439, -3.0734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8513, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.5811, -2.6735, -3.0371, -3.0627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8378, device='cuda:0', dtype=torch.float64)
tensor([-1.8084, -2.5695, -2.6836, -3.0439, -3.0598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6929, device='cuda:0', dtype=torch.float64)
tensor([-1.8061, -2.5638, -2.7004, -3.0549, -3.0719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9261, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.5631, -2.7122, -3.0585, -3.1065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8790, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.5694, -2.7182, -3.0538, -3.1199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8295, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.5810, -2.7079, -3.0460, -3.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6370, device='cuda:0', dtype=torch.float64)
tensor([-1.8051, -2.5909, -2.7007, -3.0506, -3.0801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7900, device='cuda:0', dtype=torch.float64)
tensor([-1.8054, -2.5956, -2.7013, -3.0673, -3.0868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8193, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6039, -2.6925, -3.0728, -3.0903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8415, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6130, -2.6831, -3.0754, -3.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4437, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.6096, -2.6840, -3.0778, -3.0974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9476, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.5969, -2.6933, -3.0879, -3.0850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6342, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.5846, -2.7017, -3.0901, -3.0646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6527, device='cuda:0', dtype=torch.float64)
tensor([-1.7931, -2.5842, -2.7022, -3.0744, -3.0488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8465, device='cuda:0', dtype=torch.float64)
tensor([-1.7956, -2.5942, -2.6935, -3.0498, -3.0493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4734, device='cuda:0', dtype=torch.float64)
tensor([-1.8064, -2.5997, -2.6893, -3.0365, -3.0629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5329, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.5940, -2.6983, -3.0405, -3.0817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5774, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.5751, -2.7180, -3.0533, -3.0938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8220, device='cuda:0', dtype=torch.float64)
tensor([-1.8084, -2.5579, -2.7265, -3.0608, -3.0875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6527, device='cuda:0', dtype=torch.float64)
tensor([-1.8113, -2.5489, -2.7265, -3.0505, -3.0876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5532, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.5556, -2.7112, -3.0331, -3.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6309, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.5713, -2.6944, -3.0257, -3.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6847, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.5881, -2.6745, -3.0261, -3.0986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6492, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.5994, -2.6600, -3.0338, -3.0869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5896, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6024, -2.6649, -3.0583, -3.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6266, device='cuda:0', dtype=torch.float64)
tensor([-1.8081, -2.5972, -2.6818, -3.0762, -3.0832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7242, device='cuda:0', dtype=torch.float64)
tensor([-1.7948, -2.5787, -2.7042, -3.0843, -3.0704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6041, device='cuda:0', dtype=torch.float64)
tensor([-1.7974, -2.5580, -2.7181, -3.0737, -3.0637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8754, device='cuda:0', dtype=torch.float64)
tensor([-1.8133, -2.5475, -2.7301, -3.0673, -3.0762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7418, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.5460, -2.7286, -3.0688, -3.0916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8661, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.5569, -2.7242, -3.0755, -3.0989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7848, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.5747, -2.7235, -3.0936, -3.1002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6879, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.5888, -2.7341, -3.1109, -3.1009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7713, device='cuda:0', dtype=torch.float64)
tensor([-1.7929, -2.6041, -2.7261, -3.1047, -3.0896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7523, device='cuda:0', dtype=torch.float64)
tensor([-1.7917, -2.6150, -2.7015, -3.0746, -3.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7232, device='cuda:0', dtype=torch.float64)
tensor([-1.8040, -2.6178, -2.6747, -3.0420, -3.0664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7408, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6057, -2.6668, -3.0248, -3.0793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7535, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.5806, -2.6742, -3.0187, -3.0783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6330, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.5647, -2.6842, -3.0136, -3.0648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7832, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.5647, -2.6975, -3.0141, -3.0631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8563, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.5729, -2.7052, -3.0125, -3.0692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8135, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.5837, -2.6997, -3.0186, -3.0795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9555, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.5818, -2.7024, -3.0456, -3.0732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9014, device='cuda:0', dtype=torch.float64)
tensor([-1.8096, -2.5730, -2.7154, -3.0926, -3.0870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6168, device='cuda:0', dtype=torch.float64)
tensor([-1.7969, -2.5744, -2.7154, -3.1171, -3.1025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7508, device='cuda:0', dtype=torch.float64)
tensor([-1.8048, -2.5848, -2.6866, -3.1044, -3.1021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0030, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.5964, -2.6566, -3.0812, -3.0934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6978, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.5948, -2.6502, -3.0691, -3.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6869, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.5816, -2.6614, -3.0697, -3.0759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8079, device='cuda:0', dtype=torch.float64)
tensor([-1.8064, -2.5671, -2.6893, -3.0793, -3.0776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7465, device='cuda:0', dtype=torch.float64)
tensor([-1.7919, -2.5585, -2.7187, -3.0869, -3.0816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7039, device='cuda:0', dtype=torch.float64)
tensor([-1.8012, -2.5694, -2.7363, -3.0718, -3.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7920, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.5974, -2.7394, -3.0447, -3.1171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8008, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.6226, -2.7266, -3.0206, -3.1172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6877, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6264, -2.7146, -3.0225, -3.0984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8370, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6080, -2.7122, -3.0440, -3.0895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7685, device='cuda:0', dtype=torch.float64)
tensor([-1.8068, -2.5803, -2.7157, -3.0794, -3.0823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7885, device='cuda:0', dtype=torch.float64)
tensor([-1.8084, -2.5637, -2.7043, -3.0927, -3.0788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8336, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.5616, -2.6880, -3.0834, -3.0960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7382, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.5619, -2.6766, -3.0744, -3.1045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7497, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.5631, -2.6770, -3.0638, -3.0859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4814, device='cuda:0', dtype=torch.float64)
tensor([-1.8024, -2.5688, -2.6832, -3.0530, -3.0667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8636, device='cuda:0', dtype=torch.float64)
tensor([-1.8117, -2.5831, -2.6835, -3.0434, -3.0680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6198, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.5971, -2.6828, -3.0331, -3.0812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8042, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.5975, -2.6923, -3.0316, -3.0937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7669, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.5838, -2.6996, -3.0347, -3.0746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8398, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.5659, -2.7078, -3.0509, -3.0564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8068, device='cuda:0', dtype=torch.float64)
tensor([-1.8004, -2.5543, -2.7186, -3.0683, -3.0543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9243, device='cuda:0', dtype=torch.float64)
tensor([-1.7992, -2.5609, -2.7108, -3.0649, -3.0567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7246, device='cuda:0', dtype=torch.float64)
tensor([-1.7993, -2.5736, -2.7001, -3.0601, -3.0568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7639, device='cuda:0', dtype=torch.float64)
tensor([-1.8116, -2.5874, -2.6961, -3.0623, -3.0751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8677, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6002, -2.6926, -3.0756, -3.0906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6792, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6032, -2.6974, -3.0872, -3.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6388, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.5986, -2.7070, -3.0927, -3.0826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9489, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.5889, -2.7112, -3.0835, -3.1034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6665, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.5749, -2.7072, -3.0720, -3.1208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7686, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.5636, -2.6996, -3.0586, -3.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7479, device='cuda:0', dtype=torch.float64)
tensor([-1.7989, -2.5552, -2.6908, -3.0506, -3.0934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8705, device='cuda:0', dtype=torch.float64)
tensor([-1.7785, -2.5629, -2.6918, -3.0500, -3.0842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8211, device='cuda:0', dtype=torch.float64)
tensor([-1.7759, -2.5862, -2.6956, -3.0359, -3.0746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8071, device='cuda:0', dtype=torch.float64)
tensor([-1.8038, -2.6114, -2.6938, -3.0111, -3.0763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8991, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6278, -2.6919, -2.9929, -3.0889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7325, device='cuda:0', dtype=torch.float64)
tensor([-1.8753, -2.6209, -2.6964, -3.0007, -3.0988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7478, device='cuda:0', dtype=torch.float64)
tensor([-1.8634, -2.5934, -2.7040, -3.0366, -3.0946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7034, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.5562, -2.7200, -3.0898, -3.0671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7707, device='cuda:0', dtype=torch.float64)
tensor([-1.7812, -2.5341, -2.7309, -3.1342, -3.0566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7057, device='cuda:0', dtype=torch.float64)
tensor([-1.7910, -2.5469, -2.7162, -3.1381, -3.0680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7544, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.5785, -2.6898, -3.1067, -3.0899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9798, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.6095, -2.6776, -3.0723, -3.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8866, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.6191, -2.6884, -3.0703, -3.1191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7865, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6110, -2.7089, -3.0911, -3.0957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6461, device='cuda:0', dtype=torch.float64)
tensor([-1.7782, -2.5895, -2.7146, -3.1014, -3.0505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6344, device='cuda:0', dtype=torch.float64)
tensor([-1.7684, -2.5663, -2.7055, -3.0985, -3.0231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6694, device='cuda:0', dtype=torch.float64)
tensor([-1.8011, -2.5571, -2.6892, -3.0691, -3.0353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7746, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.5576, -2.6821, -3.0322, -3.0688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6954, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.5695, -2.6838, -3.0118, -3.0832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7305, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.5902, -2.6886, -3.0146, -3.0880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8768, device='cuda:0', dtype=torch.float64)
tensor([-1.8142, -2.6133, -2.6970, -3.0312, -3.1019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7882, device='cuda:0', dtype=torch.float64)
tensor([-1.8010, -2.6309, -2.7003, -3.0363, -3.1011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7875, device='cuda:0', dtype=torch.float64)
tensor([-1.7907, -2.6281, -2.7082, -3.0367, -3.0924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7215, device='cuda:0', dtype=torch.float64)
tensor([-1.7962, -2.6083, -2.7089, -3.0345, -3.0878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7521, device='cuda:0', dtype=torch.float64)
tensor([-1.8084, -2.5778, -2.7069, -3.0355, -3.0878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7612, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.5506, -2.7031, -3.0416, -3.0831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7735, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.5420, -2.6968, -3.0629, -3.0799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6916, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.5506, -2.6925, -3.0814, -3.0881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7401, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.5748, -2.6946, -3.0957, -3.0991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5691, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.5957, -2.7067, -3.1047, -3.1046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7206, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6114, -2.7027, -3.0947, -3.0978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7304, device='cuda:0', dtype=torch.float64)
tensor([-1.8041, -2.6086, -2.6894, -3.0640, -3.0848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7553, device='cuda:0', dtype=torch.float64)
tensor([-1.7935, -2.5888, -2.6772, -3.0387, -3.0724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7807, device='cuda:0', dtype=torch.float64)
tensor([-1.7897, -2.5607, -2.6841, -3.0414, -3.0888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6869, device='cuda:0', dtype=torch.float64)
tensor([-1.7981, -2.5421, -2.7006, -3.0525, -3.1026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8329, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.5456, -2.7134, -3.0558, -3.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7277, device='cuda:0', dtype=torch.float64)
tensor([-1.8585, -2.5684, -2.7225, -3.0559, -3.1225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6169, device='cuda:0', dtype=torch.float64)
tensor([-1.8679, -2.5973, -2.7222, -3.0592, -3.1105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6652, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.6124, -2.7177, -3.0644, -3.0744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7506, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6185, -2.7159, -3.0668, -3.0586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7576, device='cuda:0', dtype=torch.float64)
tensor([-1.7983, -2.6201, -2.7117, -3.0483, -3.0527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7509, device='cuda:0', dtype=torch.float64)
tensor([-1.7934, -2.6152, -2.7073, -3.0282, -3.0612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5803, device='cuda:0', dtype=torch.float64)
tensor([-1.8071, -2.6078, -2.6893, -3.0095, -3.0728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8526, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.5977, -2.6668, -2.9994, -3.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7734, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.5843, -2.6634, -3.0136, -3.0846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6723, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.5708, -2.6765, -3.0452, -3.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5830, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.5609, -2.6966, -3.0730, -3.0590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7279, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.5605, -2.7189, -3.0808, -3.0717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8491, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.5593, -2.7361, -3.0743, -3.0953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8862, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.5485, -2.7458, -3.0568, -3.0988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9081, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.5385, -2.7394, -3.0440, -3.0975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8283, device='cuda:0', dtype=torch.float64)
tensor([-1.8106, -2.5451, -2.7199, -3.0407, -3.0970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9881, device='cuda:0', dtype=torch.float64)
tensor([-1.8024, -2.5696, -2.6955, -3.0450, -3.0870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7981, device='cuda:0', dtype=torch.float64)
tensor([-1.8006, -2.5939, -2.6864, -3.0603, -3.0820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9040, device='cuda:0', dtype=torch.float64)
tensor([-1.8015, -2.6088, -2.6960, -3.0869, -3.0940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8560, device='cuda:0', dtype=torch.float64)
tensor([-1.8022, -2.6113, -2.7108, -3.1178, -3.1045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7817, device='cuda:0', dtype=torch.float64)
tensor([-1.8001, -2.6048, -2.7061, -3.1253, -3.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7951, device='cuda:0', dtype=torch.float64)
tensor([-1.8052, -2.5921, -2.6851, -3.1033, -3.0621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7950, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.5819, -2.6649, -3.0644, -3.0566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9065, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.5777, -2.6640, -3.0278, -3.0588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7818, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.5747, -2.6861, -3.0161, -3.0697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7370, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.5767, -2.7166, -3.0290, -3.0940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8079, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.5811, -2.7420, -3.0504, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7681, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.5867, -2.7349, -3.0500, -3.1279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7824, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.5914, -2.7066, -3.0398, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8797, device='cuda:0', dtype=torch.float64)
tensor([-1.8053, -2.5820, -2.6950, -3.0375, -3.0895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6911, device='cuda:0', dtype=torch.float64)
tensor([-1.7942, -2.5685, -2.6888, -3.0424, -3.0658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7644, device='cuda:0', dtype=torch.float64)
tensor([-1.7880, -2.5614, -2.6796, -3.0456, -3.0461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6473, device='cuda:0', dtype=torch.float64)
tensor([-1.8016, -2.5711, -2.6738, -3.0505, -3.0588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6256, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.5857, -2.6770, -3.0621, -3.0909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6725, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.5971, -2.6808, -3.0722, -3.1032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7730, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6039, -2.6869, -3.0751, -3.1059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6401, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6006, -2.6956, -3.0715, -3.0915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7743, device='cuda:0', dtype=torch.float64)
tensor([-1.8087, -2.5918, -2.7050, -3.0586, -3.0791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6520, device='cuda:0', dtype=torch.float64)
tensor([-1.8026, -2.5798, -2.7074, -3.0418, -3.0625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6638, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.5756, -2.6947, -3.0217, -3.0505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5793, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.5793, -2.6870, -3.0128, -3.0614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6397, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.5841, -2.6956, -3.0289, -3.0856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7470, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.5835, -2.7180, -3.0540, -3.1018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8228, device='cuda:0', dtype=torch.float64)
tensor([-1.8110, -2.5879, -2.7273, -3.0747, -3.0971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7498, device='cuda:0', dtype=torch.float64)
tensor([-1.7902, -2.5902, -2.7261, -3.0850, -3.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8786, device='cuda:0', dtype=torch.float64)
tensor([-1.8010, -2.6002, -2.7031, -3.0694, -3.1052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6075, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6018, -2.6824, -3.0546, -3.1088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8085, device='cuda:0', dtype=torch.float64)
tensor([-1.8148, -2.5874, -2.6790, -3.0486, -3.0953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7822, device='cuda:0', dtype=torch.float64)
tensor([-1.8039, -2.5679, -2.6995, -3.0655, -3.0969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6378, device='cuda:0', dtype=torch.float64)
tensor([-1.8032, -2.5556, -2.7179, -3.0739, -3.0962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6701, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.5629, -2.7063, -3.0574, -3.0802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5429, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.5822, -2.6818, -3.0326, -3.0558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6648, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.5921, -2.6655, -3.0257, -3.0326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7111, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.5817, -2.6738, -3.0480, -3.0182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7436, device='cuda:0', dtype=torch.float64)
tensor([-1.8028, -2.5676, -2.6912, -3.0682, -3.0182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7516, device='cuda:0', dtype=torch.float64)
tensor([-1.8079, -2.5650, -2.7010, -3.0610, -3.0393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7760, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.5813, -2.7046, -3.0385, -3.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8686, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.5958, -2.7091, -3.0355, -3.1018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7764, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.5955, -2.7233, -3.0527, -3.1021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8100, device='cuda:0', dtype=torch.float64)
tensor([-1.7915, -2.5954, -2.7390, -3.0782, -3.0926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7492, device='cuda:0', dtype=torch.float64)
tensor([-1.7846, -2.5974, -2.7437, -3.0953, -3.0971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6685, device='cuda:0', dtype=torch.float64)
tensor([-1.7945, -2.6053, -2.7275, -3.0853, -3.0999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5378, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6147, -2.6988, -3.0608, -3.0971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7520, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.6115, -2.6698, -3.0301, -3.0812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6824, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.5998, -2.6545, -3.0145, -3.0735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6742, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.5835, -2.6561, -3.0207, -3.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9157, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.5672, -2.6689, -3.0455, -3.0700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5849, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.5634, -2.6866, -3.0678, -3.0796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7815, device='cuda:0', dtype=torch.float64)
tensor([-1.8145, -2.5658, -2.7044, -3.0752, -3.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7241, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.5760, -2.7207, -3.0750, -3.1092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7389, device='cuda:0', dtype=torch.float64)
tensor([-1.8106, -2.5815, -2.7311, -3.0579, -3.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8279, device='cuda:0', dtype=torch.float64)
tensor([-1.8094, -2.5830, -2.7164, -3.0408, -3.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0175, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.5815, -2.6987, -3.0342, -3.0743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7532, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.5636, -2.6992, -3.0504, -3.0759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9893, device='cuda:0', dtype=torch.float64)
tensor([-1.8139, -2.5530, -2.7014, -3.0637, -3.0572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6674, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.5572, -2.6985, -3.0625, -3.0548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9772, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.5776, -2.6958, -3.0550, -3.0763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8031, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6057, -2.6781, -3.0364, -3.0789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8671, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6277, -2.6607, -3.0216, -3.0515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6989, device='cuda:0', dtype=torch.float64)
tensor([-1.8077, -2.6247, -2.6653, -3.0287, -3.0307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8319, device='cuda:0', dtype=torch.float64)
tensor([-1.7958, -2.6024, -2.6779, -3.0476, -3.0440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9120, device='cuda:0', dtype=torch.float64)
tensor([-1.7901, -2.5687, -2.6895, -3.0616, -3.0478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7083, device='cuda:0', dtype=torch.float64)
tensor([-1.8018, -2.5424, -2.6945, -3.0673, -3.0611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8097, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.5300, -2.6968, -3.0678, -3.0822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8039, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.5376, -2.7021, -3.0766, -3.1072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6995, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.5577, -2.7087, -3.0718, -3.1032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7654, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.5873, -2.7171, -3.0595, -3.0918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6341, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6217, -2.7209, -3.0344, -3.0848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9356, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6427, -2.7194, -3.0186, -3.0915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9335, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.6440, -2.7231, -3.0215, -3.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8609, device='cuda:0', dtype=torch.float64)
tensor([-1.8142, -2.6103, -2.7407, -3.0554, -3.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9210, device='cuda:0', dtype=torch.float64)
tensor([-1.7976, -2.5828, -2.7395, -3.0700, -3.0702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7281, device='cuda:0', dtype=torch.float64)
tensor([-1.7982, -2.5597, -2.7139, -3.0665, -3.0627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7508, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.5508, -2.6809, -3.0524, -3.0664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9447, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.5537, -2.6667, -3.0477, -3.0902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8409, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.5611, -2.6693, -3.0470, -3.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7555, device='cuda:0', dtype=torch.float64)
tensor([-1.8012, -2.5719, -2.6800, -3.0516, -3.0866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0075, device='cuda:0', dtype=torch.float64)
tensor([-1.8078, -2.5861, -2.6912, -3.0487, -3.1026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7498, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.5960, -2.6874, -3.0488, -3.1229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9241, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.5982, -2.6767, -3.0614, -3.1184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8458, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.5860, -2.6821, -3.0947, -3.1080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0408, device='cuda:0', dtype=torch.float64)
tensor([-1.8045, -2.5628, -2.7189, -3.1350, -3.0936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8267, device='cuda:0', dtype=torch.float64)
tensor([-1.7732, -2.5590, -2.7373, -3.1352, -3.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7443, device='cuda:0', dtype=torch.float64)
tensor([-1.7867, -2.5834, -2.7087, -3.0806, -3.0433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9571, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6149, -2.6688, -3.0192, -3.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7649, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.6446, -2.6412, -2.9782, -3.0579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7332, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.6422, -2.6604, -2.9966, -3.0630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8928, device='cuda:0', dtype=torch.float64)
tensor([-1.7829, -2.6057, -2.7197, -3.0489, -3.0641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7385, device='cuda:0', dtype=torch.float64)
tensor([-1.7554, -2.5666, -2.7618, -3.0910, -3.0716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8315, device='cuda:0', dtype=torch.float64)
tensor([-1.7969, -2.5533, -2.7492, -3.0746, -3.0906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9683, device='cuda:0', dtype=torch.float64)
tensor([-1.8753, -2.5708, -2.6983, -3.0305, -3.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8556, device='cuda:0', dtype=torch.float64)
tensor([-1.9059, -2.5763, -2.6625, -3.0108, -3.1041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8372, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.5523, -2.6756, -3.0465, -3.0551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8757, device='cuda:0', dtype=torch.float64)
tensor([-1.7644, -2.5384, -2.7122, -3.1046, -3.0304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8044, device='cuda:0', dtype=torch.float64)
tensor([-1.7693, -2.5524, -2.7162, -3.1017, -3.0421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8046, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.5907, -2.6818, -3.0392, -3.0723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9384, device='cuda:0', dtype=torch.float64)
tensor([-1.8922, -2.6243, -2.6543, -2.9996, -3.1108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7742, device='cuda:0', dtype=torch.float64)
tensor([-1.8791, -2.6180, -2.6699, -3.0275, -3.1159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0593, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.5834, -2.7219, -3.0870, -3.0843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6714, device='cuda:0', dtype=torch.float64)
tensor([-1.7578, -2.5558, -2.7602, -3.1198, -3.0623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7290, device='cuda:0', dtype=torch.float64)
tensor([-1.7787, -2.5575, -2.7460, -3.0876, -3.0709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7571, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.5908, -2.6969, -3.0214, -3.1005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7543, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.6164, -2.6606, -2.9743, -3.1124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7951, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.6003, -2.6624, -2.9893, -3.0924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8160, device='cuda:0', dtype=torch.float64)
tensor([-1.7762, -2.5627, -2.7015, -3.0556, -3.0641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9190, device='cuda:0', dtype=torch.float64)
tensor([-1.7538, -2.5513, -2.7233, -3.0928, -3.0577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6984, device='cuda:0', dtype=torch.float64)
tensor([-1.7906, -2.5660, -2.7084, -3.0665, -3.0734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7298, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.5919, -2.6825, -3.0229, -3.1055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9204, device='cuda:0', dtype=torch.float64)
tensor([-1.8854, -2.6059, -2.6760, -3.0213, -3.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9373, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.5929, -2.6866, -3.0695, -3.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7201, device='cuda:0', dtype=torch.float64)
tensor([-1.7857, -2.5813, -2.7011, -3.1206, -3.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8158, device='cuda:0', dtype=torch.float64)
tensor([-1.7884, -2.5889, -2.6906, -3.1243, -3.0504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6873, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6038, -2.6649, -3.0924, -3.0490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8418, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.6030, -2.6620, -3.0584, -3.0581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7017, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.5785, -2.6890, -3.0544, -3.0755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6198, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.5440, -2.7298, -3.0649, -3.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8633, device='cuda:0', dtype=torch.float64)
tensor([-1.7882, -2.5274, -2.7559, -3.0552, -3.0838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8131, device='cuda:0', dtype=torch.float64)
tensor([-1.7927, -2.5480, -2.7470, -3.0187, -3.1056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6340, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.5908, -2.7087, -2.9732, -3.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7372, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6175, -2.6759, -2.9570, -3.1113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0916, device='cuda:0', dtype=torch.float64)
tensor([-1.8066, -2.6201, -2.6772, -2.9846, -3.0915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7163, device='cuda:0', dtype=torch.float64)
tensor([-1.7903, -2.6057, -2.6900, -3.0381, -3.0741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6928, device='cuda:0', dtype=torch.float64)
tensor([-1.8063, -2.5982, -2.6743, -3.0697, -3.0786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6211, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.5986, -2.6487, -3.0750, -3.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7439, device='cuda:0', dtype=torch.float64)
tensor([-1.8710, -2.5934, -2.6467, -3.0883, -3.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8239, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.5854, -2.6602, -3.1125, -3.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7770, device='cuda:0', dtype=torch.float64)
tensor([-1.8143, -2.5788, -2.6779, -3.1323, -3.1039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7479, device='cuda:0', dtype=torch.float64)
tensor([-1.7708, -2.5676, -2.6989, -3.1465, -3.0679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8854, device='cuda:0', dtype=torch.float64)
tensor([-1.7598, -2.5652, -2.7243, -3.1374, -3.0532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8171, device='cuda:0', dtype=torch.float64)
tensor([-1.7822, -2.5738, -2.7268, -3.0930, -3.0331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7309, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.5879, -2.7085, -3.0394, -3.0183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9848, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.5931, -2.7062, -3.0191, -3.0358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6434, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.5881, -2.7184, -3.0236, -3.0543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9338, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.5758, -2.7251, -3.0266, -3.0530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5084, device='cuda:0', dtype=torch.float64)
tensor([-1.8091, -2.5717, -2.7106, -3.0140, -3.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9672, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.5821, -2.6832, -2.9928, -3.0732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8482, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.5916, -2.6685, -2.9920, -3.0982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0676, device='cuda:0', dtype=torch.float64)
tensor([-1.8119, -2.5842, -2.6726, -3.0076, -3.0813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7457, device='cuda:0', dtype=torch.float64)
tensor([-1.7801, -2.5649, -2.7084, -3.0500, -3.0878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8964, device='cuda:0', dtype=torch.float64)
tensor([-1.7877, -2.5553, -2.7400, -3.0829, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8732, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.5666, -2.7215, -3.0733, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8027, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.5903, -2.6864, -3.0605, -3.1294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9818, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.6111, -2.6651, -3.0747, -3.1231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7698, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6097, -2.6632, -3.0945, -3.0890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8518, device='cuda:0', dtype=torch.float64)
tensor([-1.7777, -2.5872, -2.6848, -3.1049, -3.0496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7032, device='cuda:0', dtype=torch.float64)
tensor([-1.7849, -2.5650, -2.6973, -3.0796, -3.0482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6026, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.5546, -2.7009, -3.0346, -3.0718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8757, device='cuda:0', dtype=torch.float64)
tensor([-1.8701, -2.5525, -2.6876, -2.9876, -3.0676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7548, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.5596, -2.6876, -2.9865, -3.0381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0241, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.5510, -2.7185, -3.0311, -3.0120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5290, device='cuda:0', dtype=torch.float64)
tensor([-1.7792, -2.5458, -2.7418, -3.0766, -3.0020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9441, device='cuda:0', dtype=torch.float64)
tensor([-1.7956, -2.5594, -2.7154, -3.0682, -3.0131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7350, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.5820, -2.6796, -3.0431, -3.0619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7378, device='cuda:0', dtype=torch.float64)
tensor([-1.8706, -2.5916, -2.6747, -3.0512, -3.1137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7754, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.5858, -2.6993, -3.0770, -3.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8055, device='cuda:0', dtype=torch.float64)
tensor([-1.7631, -2.5831, -2.7239, -3.0972, -3.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8665, device='cuda:0', dtype=torch.float64)
tensor([-1.7690, -2.5950, -2.7129, -3.0690, -3.0981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8711, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6176, -2.6782, -3.0122, -3.1158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8718, device='cuda:0', dtype=torch.float64)
tensor([-1.8777, -2.6423, -2.6440, -2.9589, -3.1286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8462, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.6309, -2.6593, -2.9793, -3.1318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8361, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.5885, -2.7190, -3.0587, -3.1100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9601, device='cuda:0', dtype=torch.float64)
tensor([-1.7650, -2.5625, -2.7517, -3.1124, -3.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8512, device='cuda:0', dtype=torch.float64)
tensor([-1.7656, -2.5714, -2.7266, -3.0892, -3.0211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8737, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6026, -2.6689, -3.0300, -3.0205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7422, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.6168, -2.6376, -3.0107, -3.0460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9006, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.5911, -2.6645, -3.0605, -3.0539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7652, device='cuda:0', dtype=torch.float64)
tensor([-1.7847, -2.5494, -2.7251, -3.1454, -3.0525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7276, device='cuda:0', dtype=torch.float64)
tensor([-1.7472, -2.5332, -2.7654, -3.1858, -3.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7560, device='cuda:0', dtype=torch.float64)
tensor([-1.7733, -2.5489, -2.7466, -3.1390, -3.0986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6673, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.5725, -2.6941, -3.0476, -3.1112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5841, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.5760, -2.6691, -2.9887, -3.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6810, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.5550, -2.6850, -2.9913, -3.0977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9810, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.5367, -2.7104, -3.0254, -3.0830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6045, device='cuda:0', dtype=torch.float64)
tensor([-1.8095, -2.5464, -2.7155, -3.0461, -3.0698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0066, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.5850, -2.6850, -3.0211, -3.0496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1146, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.6272, -2.6626, -2.9959, -3.0478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8015, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6355, -2.6701, -3.0041, -3.0467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0370, device='cuda:0', dtype=torch.float64)
tensor([-1.8030, -2.6204, -2.6800, -3.0330, -3.0436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7493, device='cuda:0', dtype=torch.float64)
tensor([-1.7919, -2.5961, -2.6817, -3.0602, -3.0594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8964, device='cuda:0', dtype=torch.float64)
tensor([-1.8116, -2.5760, -2.6826, -3.0842, -3.0950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1040, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.5591, -2.6821, -3.0892, -3.0991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7850, device='cuda:0', dtype=torch.float64)
tensor([-1.8100, -2.5394, -2.7079, -3.0975, -3.0776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7755, device='cuda:0', dtype=torch.float64)
tensor([-1.7897, -2.5337, -2.7461, -3.1184, -3.0633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6392, device='cuda:0', dtype=torch.float64)
tensor([-1.7939, -2.5475, -2.7626, -3.1178, -3.0641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7901, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.5812, -2.7360, -3.0754, -3.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8558, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.6106, -2.6984, -3.0270, -3.0954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6633, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.6152, -2.6816, -3.0161, -3.0988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0389, device='cuda:0', dtype=torch.float64)
tensor([-1.7992, -2.5979, -2.6861, -3.0272, -3.0711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1748, device='cuda:0', dtype=torch.float64)
tensor([-1.7701, -2.5835, -2.6731, -3.0295, -3.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8720, device='cuda:0', dtype=torch.float64)
tensor([-1.8039, -2.5748, -2.6586, -3.0139, -3.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1312, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.5692, -2.6515, -3.0030, -3.1268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0338, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.5588, -2.6662, -3.0205, -3.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2585, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.5542, -2.7148, -3.0753, -3.0874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9539, device='cuda:0', dtype=torch.float64)
tensor([-1.7948, -2.5666, -2.7503, -3.1120, -3.0654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8990, device='cuda:0', dtype=torch.float64)
tensor([-1.8001, -2.5843, -2.7456, -3.1007, -3.0407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9093, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6102, -2.7062, -3.0518, -3.0378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7827, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.6030, -2.6889, -3.0395, -3.0468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8443, device='cuda:0', dtype=torch.float64)
tensor([-1.8134, -2.5726, -2.6998, -3.0492, -3.0340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9402, device='cuda:0', dtype=torch.float64)
tensor([-1.7722, -2.5466, -2.6976, -3.0604, -3.0245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8999, device='cuda:0', dtype=torch.float64)
tensor([-1.7785, -2.5565, -2.6771, -3.0388, -3.0440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8452, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.5862, -2.6537, -3.0101, -3.0772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7340, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6101, -2.6615, -3.0103, -3.1169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1075, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6164, -2.7020, -3.0436, -3.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7012, device='cuda:0', dtype=torch.float64)
tensor([-1.8131, -2.6080, -2.7300, -3.0712, -3.1355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8058, device='cuda:0', dtype=torch.float64)
tensor([-1.8042, -2.5984, -2.7196, -3.0583, -3.1188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8315, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.5957, -2.6775, -3.0194, -3.1077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7317, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.5747, -2.6494, -3.0058, -3.0880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7582, device='cuda:0', dtype=torch.float64)
tensor([-1.7968, -2.5400, -2.6591, -3.0447, -3.0663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7993, device='cuda:0', dtype=torch.float64)
tensor([-1.7696, -2.5213, -2.6898, -3.1006, -3.0685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6348, device='cuda:0', dtype=torch.float64)
tensor([-1.7809, -2.5389, -2.7029, -3.1315, -3.0772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6765, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.5749, -2.6961, -3.1222, -3.0876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7277, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.5978, -2.7021, -3.1050, -3.0858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8615, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6052, -2.7106, -3.0797, -3.0509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6757, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6040, -2.7158, -3.0594, -3.0204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7011, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.5933, -2.7168, -3.0527, -3.0278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7428, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.5851, -2.7029, -3.0498, -3.0486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9508, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.5843, -2.6794, -3.0504, -3.0665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7334, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.5856, -2.6773, -3.0556, -3.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6290, device='cuda:0', dtype=torch.float64)
tensor([-1.8067, -2.5854, -2.6912, -3.0615, -3.1154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7871, device='cuda:0', dtype=torch.float64)
tensor([-1.8069, -2.6020, -2.6984, -3.0347, -3.1088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9031, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6189, -2.6865, -2.9925, -3.0912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7903, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6193, -2.6870, -2.9772, -3.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6128, device='cuda:0', dtype=torch.float64)
tensor([-1.7976, -2.5913, -2.7114, -3.0084, -3.0526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9889, device='cuda:0', dtype=torch.float64)
tensor([-1.7716, -2.5623, -2.7374, -3.0432, -3.0582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9583, device='cuda:0', dtype=torch.float64)
tensor([-1.7878, -2.5576, -2.7350, -3.0394, -3.0678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8874, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.5773, -2.7143, -3.0183, -3.1010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8559, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.5947, -2.6965, -3.0234, -3.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5973, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.5922, -2.6889, -3.0557, -3.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6948, device='cuda:0', dtype=torch.float64)
tensor([-1.7987, -2.5711, -2.6991, -3.0938, -3.1084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7523, device='cuda:0', dtype=torch.float64)
tensor([-1.7714, -2.5586, -2.7122, -3.1088, -3.0991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4972, device='cuda:0', dtype=torch.float64)
tensor([-1.7952, -2.5661, -2.6915, -3.0729, -3.1013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8545, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.5784, -2.6644, -3.0301, -3.0914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7193, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.5839, -2.6328, -3.0095, -3.0687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9246, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.5735, -2.6266, -3.0273, -3.0411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5783, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.5510, -2.6525, -3.0826, -3.0341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9965, device='cuda:0', dtype=torch.float64)
tensor([-1.8076, -2.5388, -2.6935, -3.1177, -3.0450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8166, device='cuda:0', dtype=torch.float64)
tensor([-1.8081, -2.5439, -2.7275, -3.1057, -3.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6989, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.5637, -2.7356, -3.0635, -3.0910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7642, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.5818, -2.7206, -3.0181, -3.0803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6239, device='cuda:0', dtype=torch.float64)
tensor([-1.8098, -2.5920, -2.7118, -3.0016, -3.0474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8680, device='cuda:0', dtype=torch.float64)
tensor([-1.7905, -2.5939, -2.7220, -3.0224, -3.0486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9152, device='cuda:0', dtype=torch.float64)
tensor([-1.7835, -2.5970, -2.7364, -3.0565, -3.0579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9841, device='cuda:0', dtype=torch.float64)
tensor([-1.8014, -2.6008, -2.7361, -3.0737, -3.0880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7480, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.6195, -2.7079, -3.0768, -3.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9569, device='cuda:0', dtype=torch.float64)
tensor([-1.8775, -2.6337, -2.6537, -3.0711, -3.1280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8551, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.6210, -2.6261, -3.0824, -3.1029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8853, device='cuda:0', dtype=torch.float64)
tensor([-1.8147, -2.5912, -2.6386, -3.0963, -3.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5917, device='cuda:0', dtype=torch.float64)
tensor([-1.7747, -2.5696, -2.6661, -3.0901, -3.0468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6691, device='cuda:0', dtype=torch.float64)
tensor([-1.7920, -2.5737, -2.6707, -3.0418, -3.0548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6441, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.5848, -2.6704, -2.9987, -3.0758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6926, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.5898, -2.6771, -2.9867, -3.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7084, device='cuda:0', dtype=torch.float64)
tensor([-1.8156, -2.5767, -2.6997, -3.0138, -3.0870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7879, device='cuda:0', dtype=torch.float64)
tensor([-1.7875, -2.5532, -2.7280, -3.0579, -3.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6488, device='cuda:0', dtype=torch.float64)
tensor([-1.7901, -2.5481, -2.7196, -3.0620, -3.0641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5965, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.5622, -2.6731, -3.0294, -3.0549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9459, device='cuda:0', dtype=torch.float64)
tensor([-1.8758, -2.5724, -2.6375, -3.0156, -3.0660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6876, device='cuda:0', dtype=torch.float64)
tensor([-1.8689, -2.5677, -2.6369, -3.0419, -3.0787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9114, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.5600, -2.6621, -3.0933, -3.0605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7806, device='cuda:0', dtype=torch.float64)
tensor([-1.7913, -2.5659, -2.7014, -3.1323, -3.0811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6901, device='cuda:0', dtype=torch.float64)
tensor([-1.8136, -2.5815, -2.7202, -3.1246, -3.1170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9178, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6018, -2.7164, -3.0846, -3.1033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7179, device='cuda:0', dtype=torch.float64)
tensor([-1.8085, -2.6138, -2.7145, -3.0573, -3.0785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7714, device='cuda:0', dtype=torch.float64)
tensor([-1.7910, -2.6141, -2.7251, -3.0474, -3.0603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9414, device='cuda:0', dtype=torch.float64)
tensor([-1.7679, -2.6065, -2.7393, -3.0401, -3.0414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9497, device='cuda:0', dtype=torch.float64)
tensor([-1.7850, -2.5928, -2.7385, -3.0243, -3.0540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8340, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.5826, -2.7162, -3.0005, -3.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8222, device='cuda:0', dtype=torch.float64)
tensor([-1.8808, -2.5728, -2.6978, -2.9942, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7217, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.5520, -2.6857, -3.0104, -3.1059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8369, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.5385, -2.6725, -3.0330, -3.0732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0323, device='cuda:0', dtype=torch.float64)
tensor([-1.8010, -2.5477, -2.6468, -3.0353, -3.0390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9306, device='cuda:0', dtype=torch.float64)
tensor([-1.8108, -2.5693, -2.6150, -3.0247, -3.0278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8750, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.5782, -2.6203, -3.0289, -3.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8114, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.5742, -2.6613, -3.0698, -3.0651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8489, device='cuda:0', dtype=torch.float64)
tensor([-1.8114, -2.5575, -2.7074, -3.1215, -3.0631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8367, device='cuda:0', dtype=torch.float64)
tensor([-1.8040, -2.5555, -2.7273, -3.1342, -3.0487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9578, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.5793, -2.7165, -3.0831, -3.0436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7404, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.6151, -2.7063, -3.0227, -3.0665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0686, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.6241, -2.7162, -3.0014, -3.0811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9494, device='cuda:0', dtype=torch.float64)
tensor([-1.7983, -2.6167, -2.7413, -3.0238, -3.1017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8806, device='cuda:0', dtype=torch.float64)
tensor([-1.7758, -2.6011, -2.7512, -3.0517, -3.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7512, device='cuda:0', dtype=torch.float64)
tensor([-1.7969, -2.5939, -2.7249, -3.0353, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8847, device='cuda:0', dtype=torch.float64)
tensor([-1.8139, -2.5871, -2.6748, -2.9892, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8226, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.5634, -2.6550, -2.9824, -3.1158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7344, device='cuda:0', dtype=torch.float64)
tensor([-1.8137, -2.5422, -2.6685, -3.0116, -3.0787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8721, device='cuda:0', dtype=torch.float64)
tensor([-1.8060, -2.5324, -2.6867, -3.0488, -3.0349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6192, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.5399, -2.7043, -3.0724, -3.0282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9910, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.5607, -2.7086, -3.0876, -3.0546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7148, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.5835, -2.7164, -3.1000, -3.0754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9238, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.5988, -2.7260, -3.1024, -3.0637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8394, device='cuda:0', dtype=torch.float64)
tensor([-1.7806, -2.6086, -2.7258, -3.0777, -3.0404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9074, device='cuda:0', dtype=torch.float64)
tensor([-1.7993, -2.6294, -2.6931, -3.0258, -3.0407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7390, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.6387, -2.6626, -2.9735, -3.0424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7241, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.6243, -2.6650, -2.9780, -3.0471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7412, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.5940, -2.7048, -3.0333, -3.0520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7443, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.5756, -2.7443, -3.1006, -3.0729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6900, device='cuda:0', dtype=torch.float64)
tensor([-1.8110, -2.5693, -2.7629, -3.1455, -3.0986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6974, device='cuda:0', dtype=torch.float64)
tensor([-1.8132, -2.5681, -2.7410, -3.1322, -3.1061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8245, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.5621, -2.6971, -3.0837, -3.1046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6954, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.5568, -2.6514, -3.0374, -3.0897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8938, device='cuda:0', dtype=torch.float64)
tensor([-1.8069, -2.5552, -2.6196, -3.0049, -3.0754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9285, device='cuda:0', dtype=torch.float64)
tensor([-1.8146, -2.5545, -2.6162, -2.9965, -3.0859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7943, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.5610, -2.6353, -3.0047, -3.0987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7561, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.5693, -2.6719, -3.0201, -3.1146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1982, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.5811, -2.7000, -3.0354, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8769, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.5825, -2.7111, -3.0342, -3.0900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9344, device='cuda:0', dtype=torch.float64)
tensor([-1.8091, -2.5850, -2.7198, -3.0386, -3.0789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8991, device='cuda:0', dtype=torch.float64)
tensor([-1.8055, -2.5900, -2.7249, -3.0504, -3.0756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9357, device='cuda:0', dtype=torch.float64)
tensor([-1.7970, -2.5908, -2.7296, -3.0665, -3.0632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0032, device='cuda:0', dtype=torch.float64)
tensor([-1.7813, -2.5868, -2.7338, -3.0808, -3.0459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1177, device='cuda:0', dtype=torch.float64)
tensor([-1.7908, -2.5924, -2.7070, -3.0714, -3.0365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0066, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.6037, -2.6580, -3.0549, -3.0481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8846, device='cuda:0', dtype=torch.float64)
tensor([-1.8720, -2.5887, -2.6333, -3.0560, -3.0621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0248, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.5595, -2.6679, -3.0818, -3.0595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8948, device='cuda:0', dtype=torch.float64)
tensor([-1.8082, -2.5492, -2.7259, -3.1006, -3.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9338, device='cuda:0', dtype=torch.float64)
tensor([-1.8145, -2.5673, -2.7434, -3.0636, -3.0789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9596, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.6008, -2.7140, -3.0054, -3.0876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9267, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.6161, -2.6942, -3.0056, -3.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9121, device='cuda:0', dtype=torch.float64)
tensor([-1.8085, -2.5845, -2.7134, -3.0671, -3.1066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9944, device='cuda:0', dtype=torch.float64)
tensor([-1.7457, -2.5375, -2.7394, -3.1212, -3.0924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8069, device='cuda:0', dtype=torch.float64)
tensor([-1.7675, -2.5255, -2.7264, -3.1139, -3.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6696, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.5522, -2.6695, -3.0339, -3.1244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7238, device='cuda:0', dtype=torch.float64)
tensor([-1.8771, -2.5933, -2.6247, -2.9672, -3.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7277, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6117, -2.6279, -2.9744, -3.0420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7263, device='cuda:0', dtype=torch.float64)
tensor([-1.7866, -2.5968, -2.6782, -3.0444, -3.0203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7605, device='cuda:0', dtype=torch.float64)
tensor([-1.7561, -2.5834, -2.7187, -3.1027, -3.0274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7786, device='cuda:0', dtype=torch.float64)
tensor([-1.7980, -2.5812, -2.7219, -3.1087, -3.0815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7485, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.5895, -2.7182, -3.0815, -3.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9394, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.5939, -2.6976, -3.0390, -3.1070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8955, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.5828, -2.6987, -3.0331, -3.0671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9575, device='cuda:0', dtype=torch.float64)
tensor([-1.7982, -2.5894, -2.6969, -3.0361, -3.0360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1560, device='cuda:0', dtype=torch.float64)
tensor([-1.7954, -2.5984, -2.6978, -3.0287, -3.0089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8916, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.5990, -2.7087, -3.0124, -3.0138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7465, device='cuda:0', dtype=torch.float64)
tensor([-1.8601, -2.5943, -2.7249, -3.0082, -3.0659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0335, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.5738, -2.7340, -3.0170, -3.0749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8142, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.5618, -2.7307, -3.0257, -3.0770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1808, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.5711, -2.7086, -3.0331, -3.0924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8186, device='cuda:0', dtype=torch.float64)
tensor([-1.8044, -2.5851, -2.6731, -3.0362, -3.0740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8849, device='cuda:0', dtype=torch.float64)
tensor([-1.7823, -2.5974, -2.6471, -3.0377, -3.0618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8338, device='cuda:0', dtype=torch.float64)
tensor([-1.7829, -2.6021, -2.6445, -3.0518, -3.0779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9271, device='cuda:0', dtype=torch.float64)
tensor([-1.8103, -2.6015, -2.6573, -3.0773, -3.1007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9619, device='cuda:0', dtype=torch.float64)
tensor([-1.8151, -2.5949, -2.6732, -3.0930, -3.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6970, device='cuda:0', dtype=torch.float64)
tensor([-1.8115, -2.5783, -2.6957, -3.1201, -3.0657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8525, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.5679, -2.7110, -3.1295, -3.0611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0677, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.5813, -2.6899, -3.0918, -3.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8040, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.5855, -2.6836, -3.0550, -3.0441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9013, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.5707, -2.7005, -3.0398, -3.0581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7315, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.5502, -2.7137, -3.0296, -3.0589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9545, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.5502, -2.7059, -3.0084, -3.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9534, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.5609, -2.6892, -3.0037, -3.0843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7535, device='cuda:0', dtype=torch.float64)
tensor([-1.8117, -2.5584, -2.6831, -3.0286, -3.0687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9040, device='cuda:0', dtype=torch.float64)
tensor([-1.7689, -2.5499, -2.6933, -3.0594, -3.0409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7505, device='cuda:0', dtype=torch.float64)
tensor([-1.7942, -2.5712, -2.6884, -3.0480, -3.0599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8825, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.6091, -2.6765, -3.0212, -3.1222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9666, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.6412, -2.6700, -3.0094, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6587, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6383, -2.6904, -3.0408, -3.1170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2151, device='cuda:0', dtype=torch.float64)
tensor([-1.7694, -2.6250, -2.7111, -3.0732, -3.0796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5777, device='cuda:0', dtype=torch.float64)
tensor([-1.7636, -2.6155, -2.7059, -3.0628, -3.0608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8401, device='cuda:0', dtype=torch.float64)
tensor([-1.8024, -2.6080, -2.6802, -3.0267, -3.0483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8515, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.5886, -2.6825, -3.0198, -3.0688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0226, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.5606, -2.7111, -3.0429, -3.0963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8275, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.5390, -2.7391, -3.0721, -3.0775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9956, device='cuda:0', dtype=torch.float64)
tensor([-1.7846, -2.5240, -2.7435, -3.0719, -3.0475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8255, device='cuda:0', dtype=torch.float64)
tensor([-1.8012, -2.5318, -2.7114, -3.0478, -3.0457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8838, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.5521, -2.6688, -3.0200, -3.0591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.5656, -2.6512, -3.0202, -3.0540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8106, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.5781, -2.6621, -3.0487, -3.0539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0230, device='cuda:0', dtype=torch.float64)
tensor([-1.8130, -2.5956, -2.6790, -3.0563, -3.0802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0895, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6167, -2.6760, -3.0282, -3.0843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7944, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6207, -2.6796, -3.0156, -3.0965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6904, device='cuda:0', dtype=torch.float64)
tensor([-1.8126, -2.5965, -2.7038, -3.0430, -3.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9478, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.5859, -2.7130, -3.0647, -3.0900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8087, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.5868, -2.7075, -3.0796, -3.1027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7799, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.5952, -2.6977, -3.0955, -3.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0072, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.5978, -2.6834, -3.0867, -3.0720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8448, device='cuda:0', dtype=torch.float64)
tensor([-1.8067, -2.5827, -2.6760, -3.0685, -3.0414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7306, device='cuda:0', dtype=torch.float64)
tensor([-1.7898, -2.5523, -2.6825, -3.0548, -3.0307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7787, device='cuda:0', dtype=torch.float64)
tensor([-1.7945, -2.5271, -2.6893, -3.0282, -3.0303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6122, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.5259, -2.6944, -2.9970, -3.0653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6262, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.5446, -2.7036, -2.9966, -3.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7608, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.5736, -2.7131, -3.0259, -3.1175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7767, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6046, -2.7186, -3.0611, -3.1091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6963, device='cuda:0', dtype=torch.float64)
tensor([-1.7929, -2.6218, -2.7151, -3.0690, -3.1005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8957, device='cuda:0', dtype=torch.float64)
tensor([-1.7942, -2.6214, -2.6800, -3.0309, -3.0880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7353, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6135, -2.6379, -2.9812, -3.0922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1197, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.5969, -2.6173, -2.9822, -3.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8918, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.5639, -2.6422, -3.0355, -3.0811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6837, device='cuda:0', dtype=torch.float64)
tensor([-1.7905, -2.5308, -2.6888, -3.1037, -3.0598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9644, device='cuda:0', dtype=torch.float64)
tensor([-1.7928, -2.5246, -2.7364, -3.1459, -3.0531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8021, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.5475, -2.7638, -3.1313, -3.0638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6666, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.5746, -2.7666, -3.0794, -3.0573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8605, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.5889, -2.7652, -3.0387, -3.0579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7673, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.5970, -2.7490, -3.0106, -3.0412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6551, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.5975, -2.7318, -3.0086, -3.0323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7916, device='cuda:0', dtype=torch.float64)
tensor([-1.7911, -2.5870, -2.7329, -3.0211, -3.0364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9325, device='cuda:0', dtype=torch.float64)
tensor([-1.7936, -2.5884, -2.7227, -3.0139, -3.0481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8344, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.5971, -2.7033, -2.9934, -3.0771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9098, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.5957, -2.6977, -2.9976, -3.0851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8687, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.5920, -2.6761, -3.0341, -3.0649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5907, device='cuda:0', dtype=torch.float64)
tensor([-1.7850, -2.5908, -2.6644, -3.0904, -3.0564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7539, device='cuda:0', dtype=torch.float64)
tensor([-1.7713, -2.5879, -2.6607, -3.1325, -3.0862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2358, device='cuda:0', dtype=torch.float64)
tensor([-1.8012, -2.5940, -2.6450, -3.1248, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8966, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.5975, -2.6412, -3.0912, -3.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7941, device='cuda:0', dtype=torch.float64)
tensor([-1.8577, -2.5895, -2.6424, -3.0772, -3.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8166, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.5711, -2.6526, -3.0661, -3.1043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9118, device='cuda:0', dtype=torch.float64)
tensor([-1.7959, -2.5460, -2.6848, -3.0661, -3.0642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0376, device='cuda:0', dtype=torch.float64)
tensor([-1.7901, -2.5337, -2.7148, -3.0522, -3.0615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9290, device='cuda:0', dtype=torch.float64)
tensor([-1.8053, -2.5409, -2.7285, -3.0116, -3.0567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7886, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.5674, -2.7383, -2.9671, -3.0865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9597, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.5999, -2.7350, -2.9478, -3.0899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7787, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.6095, -2.7231, -2.9625, -3.0660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8551, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.5925, -2.7211, -3.0069, -3.0267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9453, device='cuda:0', dtype=torch.float64)
tensor([-1.7953, -2.5620, -2.7304, -3.0513, -3.0240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8182, device='cuda:0', dtype=torch.float64)
tensor([-1.8065, -2.5485, -2.7400, -3.0749, -3.0508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7843, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.5572, -2.7269, -3.0736, -3.0651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8483, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.5768, -2.7082, -3.0753, -3.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8689, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.6000, -2.6835, -3.0954, -3.0671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8011, device='cuda:0', dtype=torch.float64)
tensor([-1.8112, -2.6252, -2.6472, -3.1050, -3.0605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7170, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6343, -2.6243, -3.1103, -3.0812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7260, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.6153, -2.6241, -3.1126, -3.0867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6565, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.5756, -2.6348, -3.0978, -3.0689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6340, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.5415, -2.6454, -3.0635, -3.0614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7892, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.5302, -2.6484, -3.0138, -3.0460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0232, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.5424, -2.6608, -2.9839, -3.0491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9512, device='cuda:0', dtype=torch.float64)
tensor([-1.8064, -2.5640, -2.7023, -3.0048, -3.0429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8068, device='cuda:0', dtype=torch.float64)
tensor([-1.7739, -2.5848, -2.7559, -3.0497, -3.0582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0062, device='cuda:0', dtype=torch.float64)
tensor([-1.7738, -2.6051, -2.7763, -3.0577, -3.0644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6700, device='cuda:0', dtype=torch.float64)
tensor([-1.8076, -2.6136, -2.7610, -3.0357, -3.0807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7487, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6010, -2.7420, -3.0102, -3.0981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5973, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.5702, -2.7303, -3.0088, -3.1126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9069, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.5401, -2.7282, -3.0328, -3.1278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9076, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.5357, -2.7266, -3.0534, -3.1312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0009, device='cuda:0', dtype=torch.float64)
tensor([-1.8091, -2.5584, -2.7077, -3.0428, -3.0998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1781, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6018, -2.6705, -3.0042, -3.0537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1914, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.6323, -2.6501, -2.9850, -3.0670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0418, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.6202, -2.6641, -3.0246, -3.0415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9590, device='cuda:0', dtype=torch.float64)
tensor([-1.7801, -2.5821, -2.6960, -3.0970, -3.0208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8561, device='cuda:0', dtype=torch.float64)
tensor([-1.7707, -2.5508, -2.7127, -3.1441, -3.0499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9581, device='cuda:0', dtype=torch.float64)
tensor([-1.8034, -2.5440, -2.6937, -3.1198, -3.0732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9670, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.5629, -2.6530, -3.0395, -3.0550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0880, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.5741, -2.6612, -3.0103, -3.0565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8697, device='cuda:0', dtype=torch.float64)
tensor([-1.8114, -2.5762, -2.7032, -3.0471, -3.0675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0907, device='cuda:0', dtype=torch.float64)
tensor([-1.7888, -2.5962, -2.7210, -3.0845, -3.0724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8304, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.6258, -2.7089, -3.0845, -3.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9387, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.6479, -2.6948, -3.0626, -3.1436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1102, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6625, -2.6774, -3.0430, -3.1025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7806, device='cuda:0', dtype=torch.float64)
tensor([-1.8106, -2.6216, -2.6746, -3.0337, -3.0412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1214, device='cuda:0', dtype=torch.float64)
tensor([-1.8034, -2.5553, -2.7007, -3.0504, -3.0220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9639, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.5034, -2.7121, -3.0448, -3.0068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7619, device='cuda:0', dtype=torch.float64)
tensor([-1.8651, -2.4983, -2.6993, -3.0271, -3.0339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0749, device='cuda:0', dtype=torch.float64)
tensor([-1.8992, -2.5271, -2.6926, -3.0150, -3.0889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7296, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.5638, -2.6955, -3.0341, -3.1000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7977, device='cuda:0', dtype=torch.float64)
tensor([-1.7826, -2.5965, -2.7006, -3.0500, -3.0735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9016, device='cuda:0', dtype=torch.float64)
tensor([-1.7302, -2.6061, -2.7040, -3.0661, -3.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7972, device='cuda:0', dtype=torch.float64)
tensor([-1.7645, -2.6049, -2.6809, -3.0412, -3.1042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8085, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.5930, -2.6551, -2.9997, -3.1326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9323, device='cuda:0', dtype=torch.float64)
tensor([-1.8710, -2.5564, -2.6632, -2.9923, -3.1331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0462, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.5255, -2.7030, -3.0227, -3.1100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5230, device='cuda:0', dtype=torch.float64)
tensor([-1.8133, -2.5364, -2.7338, -3.0372, -3.0753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8810, device='cuda:0', dtype=torch.float64)
tensor([-1.8130, -2.5867, -2.7219, -3.0020, -3.0368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8797, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6393, -2.7046, -2.9816, -3.0582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8411, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6434, -2.7138, -3.0186, -3.0919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0035, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6184, -2.7236, -3.0551, -3.0938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9417, device='cuda:0', dtype=torch.float64)
tensor([-1.7935, -2.5804, -2.7253, -3.0791, -3.0650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8290, device='cuda:0', dtype=torch.float64)
tensor([-1.8038, -2.5528, -2.7022, -3.0814, -3.0457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6567, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.5449, -2.6667, -3.0701, -3.0157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0270, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.5506, -2.6495, -3.0722, -2.9969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8501, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.5553, -2.6777, -3.1143, -3.0109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4882, device='cuda:0', dtype=torch.float64)
tensor([-1.8096, -2.5611, -2.7170, -3.1487, -3.0242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7200, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.5705, -2.7189, -3.1096, -3.0301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9424, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.5748, -2.7014, -3.0304, -3.0708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7153, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.5744, -2.6857, -2.9771, -3.0970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7053, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.5687, -2.6907, -2.9811, -3.0961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8435, device='cuda:0', dtype=torch.float64)
tensor([-1.7736, -2.5645, -2.7148, -3.0183, -3.1021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6577, device='cuda:0', dtype=torch.float64)
tensor([-1.7634, -2.5707, -2.7292, -3.0510, -3.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7079, device='cuda:0', dtype=torch.float64)
tensor([-1.7943, -2.5943, -2.6953, -3.0337, -3.1307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1428, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6098, -2.6508, -3.0069, -3.1141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7544, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6032, -2.6331, -3.0049, -3.1024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7891, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.5881, -2.6228, -3.0234, -3.0744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7673, device='cuda:0', dtype=torch.float64)
tensor([-1.8502, -2.5753, -2.6387, -3.0594, -3.0649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7364, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.5546, -2.6931, -3.1194, -3.0887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6667, device='cuda:0', dtype=torch.float64)
tensor([-1.8018, -2.5498, -2.7272, -3.1279, -3.0938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0282, device='cuda:0', dtype=torch.float64)
tensor([-1.7950, -2.5338, -2.7370, -3.0997, -3.1065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9089, device='cuda:0', dtype=torch.float64)
tensor([-1.8117, -2.5319, -2.7272, -3.0604, -3.1205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8756, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.5475, -2.7109, -3.0272, -3.0986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0657, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.5529, -2.7115, -3.0076, -3.0571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9705, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.5565, -2.7296, -3.0113, -3.0508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9803, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.5768, -2.7405, -3.0065, -3.0291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9257, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6053, -2.7386, -3.0036, -3.0157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7901, device='cuda:0', dtype=torch.float64)
tensor([-1.8088, -2.6248, -2.7241, -3.0011, -3.0326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7182, device='cuda:0', dtype=torch.float64)
tensor([-1.7896, -2.6303, -2.6966, -3.0192, -3.0416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7278, device='cuda:0', dtype=torch.float64)
tensor([-1.7952, -2.6248, -2.6605, -3.0444, -3.0590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9530, device='cuda:0', dtype=torch.float64)
tensor([-1.8109, -2.6031, -2.6453, -3.0871, -3.0981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6230, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.5757, -2.6478, -3.1234, -3.1166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6476, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.5570, -2.6508, -3.1162, -3.0936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8744, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.5547, -2.6424, -3.0708, -3.0524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9320, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.5723, -2.6445, -3.0274, -3.0381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8778, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.5821, -2.6704, -3.0066, -3.0396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6649, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.5726, -2.7215, -3.0291, -3.0565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9907, device='cuda:0', dtype=torch.float64)
tensor([-1.7997, -2.5696, -2.7693, -3.0642, -3.0910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0230, device='cuda:0', dtype=torch.float64)
tensor([-1.7882, -2.5793, -2.7545, -3.0573, -3.0802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8594, device='cuda:0', dtype=torch.float64)
tensor([-1.8119, -2.6003, -2.7180, -3.0133, -3.0712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9524, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.5912, -2.6946, -2.9946, -3.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0939, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.5719, -2.6761, -2.9975, -3.0587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8433, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.5565, -2.6932, -3.0126, -3.0460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8689, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.5638, -2.7166, -3.0367, -3.0707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9407, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.5973, -2.7046, -3.0376, -3.0713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6510, device='cuda:0', dtype=torch.float64)
tensor([-1.8104, -2.6227, -2.6871, -3.0495, -3.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7956, device='cuda:0', dtype=torch.float64)
tensor([-1.8036, -2.6320, -2.6718, -3.0755, -3.0831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0771, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6232, -2.6493, -3.0979, -3.0964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1074, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.5974, -2.6367, -3.0816, -3.0922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0263, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.5619, -2.6606, -3.0724, -3.1008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9492, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.5263, -2.6860, -3.0557, -3.0936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0390, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.5202, -2.6947, -3.0184, -3.0591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8632, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.5432, -2.6924, -2.9914, -3.0413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9860, device='cuda:0', dtype=torch.float64)
tensor([-1.8045, -2.5680, -2.7046, -2.9964, -3.0321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1932, device='cuda:0', dtype=torch.float64)
tensor([-1.7902, -2.5897, -2.7119, -3.0116, -3.0227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6424, device='cuda:0', dtype=torch.float64)
tensor([-1.8133, -2.5990, -2.7232, -3.0318, -3.0563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7289, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.5893, -2.7367, -3.0624, -3.1151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8916, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.5804, -2.7149, -3.0777, -3.1213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6568, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.5710, -2.6894, -3.0773, -3.0734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0163, device='cuda:0', dtype=torch.float64)
tensor([-1.7967, -2.5819, -2.6780, -3.0731, -3.0408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8303, device='cuda:0', dtype=torch.float64)
tensor([-1.7703, -2.5956, -2.6772, -3.0495, -3.0073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0611, device='cuda:0', dtype=torch.float64)
tensor([-1.7981, -2.6020, -2.6615, -3.0132, -3.0043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8895, device='cuda:0', dtype=torch.float64)
tensor([-1.8631, -2.6033, -2.6662, -2.9935, -3.0828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8845, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.5964, -2.6746, -3.0001, -3.1291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1216, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.5781, -2.6748, -3.0221, -3.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9661, device='cuda:0', dtype=torch.float64)
tensor([-1.7677, -2.5598, -2.6904, -3.0595, -3.0866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7492, device='cuda:0', dtype=torch.float64)
tensor([-1.7585, -2.5498, -2.6947, -3.0882, -3.0980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3512, device='cuda:0', dtype=torch.float64)
tensor([-1.7805, -2.5490, -2.6859, -3.0588, -3.0708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8862, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.5721, -2.6654, -3.0175, -3.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1838, device='cuda:0', dtype=torch.float64)
tensor([-1.9023, -2.5867, -2.6869, -3.0406, -3.1122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2358, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.5803, -2.7157, -3.0865, -3.0425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8082, device='cuda:0', dtype=torch.float64)
tensor([-1.8129, -2.5667, -2.7533, -3.1227, -3.0157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([-1.7955, -2.5525, -2.7572, -3.1259, -3.0457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9212, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.5607, -2.7128, -3.0590, -3.0663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9012, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.5744, -2.6677, -2.9838, -3.0686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0151, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.5709, -2.6625, -2.9813, -3.1014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0907, device='cuda:0', dtype=torch.float64)
tensor([-1.7989, -2.5738, -2.6648, -3.0006, -3.1164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7256, device='cuda:0', dtype=torch.float64)
tensor([-1.7771, -2.5885, -2.6661, -3.0167, -3.1058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9251, device='cuda:0', dtype=torch.float64)
tensor([-1.7907, -2.6097, -2.6737, -3.0276, -3.1309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9409, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6276, -2.6843, -3.0223, -3.1333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9218, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6349, -2.6883, -3.0061, -3.0801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0372, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.6198, -2.6942, -3.0117, -3.0491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8652, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.5917, -2.7223, -3.0696, -3.0410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.5531, -2.7520, -3.1213, -3.0182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0678, device='cuda:0', dtype=torch.float64)
tensor([-1.8128, -2.5279, -2.7644, -3.1230, -3.0243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7929, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.5329, -2.7248, -3.0879, -3.0450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9893, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.5590, -2.6528, -3.0332, -3.0318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8263, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.5843, -2.6111, -3.0244, -3.0149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8444, device='cuda:0', dtype=torch.float64)
tensor([-1.7924, -2.5778, -2.6172, -3.0454, -3.0348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8774, device='cuda:0', dtype=torch.float64)
tensor([-1.7875, -2.5572, -2.6633, -3.0749, -3.0713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9142, device='cuda:0', dtype=torch.float64)
tensor([-1.8093, -2.5553, -2.6962, -3.0823, -3.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9222, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.5672, -2.7185, -3.0639, -3.1454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1960, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.5898, -2.7141, -3.0243, -3.1131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7681, device='cuda:0', dtype=torch.float64)
tensor([-1.8133, -2.5997, -2.7218, -3.0225, -3.0654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8983, device='cuda:0', dtype=torch.float64)
tensor([-1.7948, -2.6018, -2.7384, -3.0314, -3.0567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6273, device='cuda:0', dtype=torch.float64)
tensor([-1.8042, -2.5926, -2.7477, -3.0365, -3.0823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7540, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.5812, -2.7412, -3.0277, -3.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9555, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.5772, -2.7198, -3.0246, -3.1213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9006, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.5777, -2.7081, -3.0373, -3.0766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7917, device='cuda:0', dtype=torch.float64)
tensor([-1.7706, -2.5866, -2.7016, -3.0510, -3.0190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1169, device='cuda:0', dtype=torch.float64)
tensor([-1.7784, -2.5942, -2.6863, -3.0342, -3.0056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8055, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.5990, -2.6743, -3.0110, -3.0291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5933, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.5925, -2.6772, -3.0151, -3.0655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8112, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.5774, -2.6788, -3.0487, -3.0700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9303, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.5637, -2.6749, -3.0657, -3.0552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6305, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.5642, -2.6677, -3.0672, -3.0603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9662, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.5783, -2.6547, -3.0512, -3.0788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8930, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.5882, -2.6476, -3.0545, -3.0919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0821, device='cuda:0', dtype=torch.float64)
tensor([-1.7917, -2.5675, -2.6821, -3.0699, -3.1148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1763, device='cuda:0', dtype=torch.float64)
tensor([-1.7454, -2.5397, -2.7283, -3.0653, -3.1051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8884, device='cuda:0', dtype=torch.float64)
tensor([-1.7898, -2.5445, -2.7325, -3.0182, -3.1217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9345, device='cuda:0', dtype=torch.float64)
tensor([-1.8810, -2.5806, -2.6898, -2.9472, -3.1345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0290, device='cuda:0', dtype=torch.float64)
tensor([-1.9122, -2.6040, -2.6620, -2.9610, -3.1094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7985, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.5820, -2.6927, -3.0891, -3.0469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1544, device='cuda:0', dtype=torch.float64)
tensor([-1.7583, -2.5629, -2.7295, -3.1954, -3.0490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3431, device='cuda:0', dtype=torch.float64)
tensor([-1.7693, -2.5691, -2.7157, -3.1603, -3.0566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8258, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.5962, -2.6547, -3.0192, -3.0818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2381, device='cuda:0', dtype=torch.float64)
tensor([-1.9242, -2.6166, -2.6295, -2.9383, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2254, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.6005, -2.6649, -2.9780, -3.0664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1442, device='cuda:0', dtype=torch.float64)
tensor([-1.7257, -2.5740, -2.7361, -3.0884, -3.0083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0495, device='cuda:0', dtype=torch.float64)
tensor([-1.7134, -2.5765, -2.7719, -3.1478, -3.0375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4040, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6051, -2.7102, -3.0785, -3.0661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0138, device='cuda:0', dtype=torch.float64)
tensor([-1.8954, -2.6071, -2.6626, -3.0091, -3.0736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2019, device='cuda:0', dtype=torch.float64)
tensor([-1.8782, -2.5566, -2.6714, -3.0289, -3.0718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0222, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.5024, -2.6947, -3.0613, -3.0304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9106, device='cuda:0', dtype=torch.float64)
tensor([-1.8029, -2.4917, -2.6942, -3.0544, -3.0269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8844, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.5338, -2.6723, -3.0040, -3.0794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0600, device='cuda:0', dtype=torch.float64)
tensor([-1.8665, -2.5818, -2.6831, -2.9727, -3.1016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8817, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6146, -2.7014, -2.9893, -3.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9229, device='cuda:0', dtype=torch.float64)
tensor([-1.7840, -2.6240, -2.7308, -3.0497, -3.0926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9381, device='cuda:0', dtype=torch.float64)
tensor([-1.7787, -2.6237, -2.7185, -3.0723, -3.1108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9981, device='cuda:0', dtype=torch.float64)
tensor([-1.8032, -2.6278, -2.6742, -3.0435, -3.0997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0250, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.6205, -2.6629, -3.0415, -3.1211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7171, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6068, -2.6675, -3.0545, -3.1019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1126, device='cuda:0', dtype=torch.float64)
tensor([-1.8022, -2.5991, -2.6808, -3.0709, -3.0573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9931, device='cuda:0', dtype=torch.float64)
tensor([-1.7929, -2.5950, -2.7040, -3.0986, -3.0584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9317, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.5817, -2.7241, -3.1211, -3.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5062, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.5883, -2.7283, -3.0965, -3.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9119, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.5782, -2.7269, -3.0641, -3.0974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0210, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.5629, -2.7238, -3.0319, -3.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1605, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.5683, -2.6994, -2.9986, -3.0372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7000, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.5716, -2.6833, -2.9818, -3.0073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9306, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.5648, -2.6861, -3.0046, -3.0300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0423, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.5602, -2.6947, -3.0409, -3.0283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7392, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.5595, -2.6790, -3.0522, -3.0290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1918, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.5606, -2.6551, -3.0322, -3.0400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7915, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.5571, -2.6410, -3.0166, -3.0305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6977, device='cuda:0', dtype=torch.float64)
tensor([-1.8012, -2.5647, -2.6444, -3.0159, -3.0304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([-1.7824, -2.5654, -2.6752, -3.0482, -3.0567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2238, device='cuda:0', dtype=torch.float64)
tensor([-1.7974, -2.5772, -2.7120, -3.0579, -3.1047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9722, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6044, -2.7415, -3.0536, -3.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7788, device='cuda:0', dtype=torch.float64)
tensor([-1.8113, -2.6079, -2.7583, -3.0580, -3.1055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0954, device='cuda:0', dtype=torch.float64)
tensor([-1.7768, -2.5911, -2.7462, -3.0571, -3.0270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9832, device='cuda:0', dtype=torch.float64)
tensor([-1.7871, -2.5780, -2.7136, -3.0580, -3.0092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9522, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.5761, -2.6596, -3.0435, -3.0285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8454, device='cuda:0', dtype=torch.float64)
tensor([-1.8846, -2.5913, -2.6248, -3.0437, -3.0733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2202, device='cuda:0', dtype=torch.float64)
tensor([-1.8996, -2.5840, -2.6557, -3.0950, -3.1598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4584, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.5709, -2.6923, -3.1251, -3.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8931, device='cuda:0', dtype=torch.float64)
tensor([-1.7992, -2.5847, -2.6774, -3.0675, -3.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1172, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.5852, -2.6519, -3.0079, -3.1182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1203, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.5651, -2.6606, -3.0058, -3.1012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7413, device='cuda:0', dtype=torch.float64)
tensor([-1.7897, -2.5192, -2.7086, -3.0472, -3.0694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2161, device='cuda:0', dtype=torch.float64)
tensor([-1.8006, -2.4981, -2.7636, -3.0788, -3.1031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0464, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.5251, -2.7461, -3.0341, -3.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.5982, -2.6935, -2.9768, -3.0471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3873, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6269, -2.6912, -2.9963, -3.0516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2213, device='cuda:0', dtype=torch.float64)
tensor([-1.7793, -2.6162, -2.7040, -3.0358, -3.0048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9264, device='cuda:0', dtype=torch.float64)
tensor([-1.7462, -2.6116, -2.6929, -3.0494, -3.0091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3277, device='cuda:0', dtype=torch.float64)
tensor([-1.8005, -2.5966, -2.6633, -3.0401, -3.0899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0870, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.5958, -2.6242, -3.0049, -3.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7564, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.5818, -2.6261, -3.0057, -3.1022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1957, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.5765, -2.6566, -3.0424, -3.1353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0063, device='cuda:0', dtype=torch.float64)
tensor([-1.8128, -2.5895, -2.6997, -3.0702, -3.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8217, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6153, -2.7065, -3.0588, -3.0645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0245, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.6395, -2.6937, -3.0380, -3.0498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0360, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.6077, -2.7138, -3.0580, -3.0504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2546, device='cuda:0', dtype=torch.float64)
tensor([-1.7854, -2.5602, -2.7476, -3.0753, -2.9877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9326, device='cuda:0', dtype=torch.float64)
tensor([-1.7713, -2.5280, -2.7628, -3.0789, -2.9932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8067, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.5390, -2.7255, -3.0241, -3.0650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2576, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.5621, -2.6604, -2.9804, -3.0801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6473, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.5613, -2.6525, -3.0244, -3.0769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0172, device='cuda:0', dtype=torch.float64)
tensor([-1.7768, -2.5436, -2.6881, -3.1161, -3.1022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9094, device='cuda:0', dtype=torch.float64)
tensor([-1.7663, -2.5605, -2.6963, -3.1354, -3.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8227, device='cuda:0', dtype=torch.float64)
tensor([-1.8150, -2.5887, -2.6687, -3.0786, -3.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0437, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.5876, -2.6776, -3.0517, -3.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8552, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.5514, -2.7006, -3.0653, -3.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0672, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.5336, -2.7151, -3.0751, -3.0764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8567, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.5468, -2.6898, -3.0373, -3.0457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0930, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.5870, -2.6539, -2.9788, -3.0605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8081, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6034, -2.6644, -2.9717, -3.0348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6814, device='cuda:0', dtype=torch.float64)
tensor([-1.7840, -2.6103, -2.7059, -3.0138, -3.0204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1850, device='cuda:0', dtype=torch.float64)
tensor([-1.7637, -2.6132, -2.7419, -3.0261, -3.0532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0439, device='cuda:0', dtype=torch.float64)
tensor([-1.7955, -2.6171, -2.7428, -3.0080, -3.1109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8630, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6069, -2.7361, -2.9996, -3.1262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8282, device='cuda:0', dtype=torch.float64)
tensor([-1.8148, -2.5647, -2.7441, -3.0304, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7276, device='cuda:0', dtype=torch.float64)
tensor([-1.8073, -2.5247, -2.7340, -3.0787, -3.0829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9944, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.5020, -2.6772, -3.0852, -3.0214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1485, device='cuda:0', dtype=torch.float64)
tensor([-1.8849, -2.5189, -2.6358, -3.0921, -3.0355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7272, device='cuda:0', dtype=torch.float64)
tensor([-1.8935, -2.5621, -2.6181, -3.0923, -3.0341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7598, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6145, -2.6354, -3.0957, -3.0446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9327, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6570, -2.6664, -3.0856, -3.0552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0302, device='cuda:0', dtype=torch.float64)
tensor([-1.7926, -2.6642, -2.6940, -3.0531, -3.0540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8082, device='cuda:0', dtype=torch.float64)
tensor([-1.7591, -2.6205, -2.7283, -3.0282, -3.0537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7746, device='cuda:0', dtype=torch.float64)
tensor([-1.7589, -2.5536, -2.7499, -3.0132, -3.0720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9950, device='cuda:0', dtype=torch.float64)
tensor([-1.7942, -2.5069, -2.7321, -3.0037, -3.0814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8439, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.4957, -2.7052, -3.0050, -3.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7867, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.5154, -2.6706, -3.0292, -3.0753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7835, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.5545, -2.6399, -3.0623, -3.0234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9596, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.5902, -2.6247, -3.0951, -3.0151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8961, device='cuda:0', dtype=torch.float64)
tensor([-1.8520, -2.6121, -2.6263, -3.1044, -3.0537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0200, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.6143, -2.6691, -3.0867, -3.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9395, device='cuda:0', dtype=torch.float64)
tensor([-1.8756, -2.6080, -2.7296, -3.0736, -3.1475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7351, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.6082, -2.7729, -3.0548, -3.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9819, device='cuda:0', dtype=torch.float64)
tensor([-1.7968, -2.6287, -2.7462, -3.0064, -3.0871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0270, device='cuda:0', dtype=torch.float64)
tensor([-1.7714, -2.6373, -2.7147, -2.9868, -3.0450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9167, device='cuda:0', dtype=torch.float64)
tensor([-1.7574, -2.6236, -2.6871, -2.9978, -3.0134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2203, device='cuda:0', dtype=torch.float64)
tensor([-1.7645, -2.5970, -2.6792, -3.0352, -3.0269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1276, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.5497, -2.6866, -3.0727, -3.0959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6697, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.5009, -2.6921, -3.0842, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2115, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.4916, -2.6691, -3.0345, -3.0693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9529, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.5168, -2.6621, -3.0140, -3.0239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7549, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.5492, -2.6877, -3.0462, -3.0188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6040, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.5948, -2.7054, -3.0720, -3.0244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0375, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.6192, -2.7419, -3.1087, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9754, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6162, -2.7686, -3.1136, -3.1284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8789, device='cuda:0', dtype=torch.float64)
tensor([-1.7987, -2.6005, -2.7605, -3.0652, -3.0766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0210, device='cuda:0', dtype=torch.float64)
tensor([-1.7949, -2.5793, -2.7438, -3.0100, -3.0507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6236, device='cuda:0', dtype=torch.float64)
tensor([-1.7910, -2.5625, -2.7252, -2.9814, -3.0451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9046, device='cuda:0', dtype=torch.float64)
tensor([-1.7892, -2.5479, -2.7107, -2.9849, -3.0590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7341, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.5493, -2.6840, -2.9906, -3.1066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7779, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.5611, -2.6534, -3.0203, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9272, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.5775, -2.6165, -3.0535, -3.1033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1126, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.5825, -2.6154, -3.0820, -3.0527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8182, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.5717, -2.6464, -3.0779, -3.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0467, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.5744, -2.6744, -3.0344, -3.0368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7573, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.5874, -2.7032, -2.9965, -3.0388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8522, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6017, -2.7271, -2.9897, -3.0602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8373, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6079, -2.7334, -3.0034, -3.0443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9101, device='cuda:0', dtype=torch.float64)
tensor([-1.7899, -2.6250, -2.7247, -3.0253, -3.0104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1602, device='cuda:0', dtype=torch.float64)
tensor([-1.7927, -2.6156, -2.7288, -3.0432, -3.0567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0007, device='cuda:0', dtype=torch.float64)
tensor([-1.8106, -2.5959, -2.7247, -3.0418, -3.1072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7056, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.5666, -2.6948, -3.0282, -3.1142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1222, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.5281, -2.6617, -3.0341, -3.1145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8064, device='cuda:0', dtype=torch.float64)
tensor([-1.7830, -2.5100, -2.6456, -3.0665, -3.0785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8577, device='cuda:0', dtype=torch.float64)
tensor([-1.7554, -2.5219, -2.6304, -3.0760, -3.0253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1875, device='cuda:0', dtype=torch.float64)
tensor([-1.8128, -2.5707, -2.6329, -3.0571, -3.0441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8076, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.5981, -2.6769, -3.0699, -3.0820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0061, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.5969, -2.7225, -3.0882, -3.0742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2897, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.5750, -2.7622, -3.1079, -3.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6568, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.5798, -2.7511, -3.0705, -3.0404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1144, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.5995, -2.7349, -3.0091, -3.0128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.6229, -2.7165, -2.9696, -3.0009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1213, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6181, -2.7344, -2.9958, -3.0672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1810, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.5882, -2.7559, -3.0570, -3.0861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8432, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.5468, -2.7561, -3.1153, -3.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1332, device='cuda:0', dtype=torch.float64)
tensor([-1.8009, -2.5144, -2.7147, -3.1273, -3.0991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7855, device='cuda:0', dtype=torch.float64)
tensor([-1.8006, -2.5164, -2.6514, -3.0721, -3.0955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8757, device='cuda:0', dtype=torch.float64)
tensor([-1.7913, -2.5470, -2.6062, -3.0093, -3.0999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6323, device='cuda:0', dtype=torch.float64)
tensor([-1.7697, -2.5791, -2.6033, -3.0048, -3.1091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6678, device='cuda:0', dtype=torch.float64)
tensor([-1.7635, -2.6094, -2.6245, -3.0274, -3.1075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5308, device='cuda:0', dtype=torch.float64)
tensor([-1.7911, -2.6287, -2.6384, -3.0438, -3.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8397, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.6145, -2.6551, -3.0441, -3.0872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7151, device='cuda:0', dtype=torch.float64)
tensor([-1.8811, -2.5823, -2.6829, -3.0404, -3.0614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8646, device='cuda:0', dtype=torch.float64)
tensor([-1.8866, -2.5572, -2.6977, -3.0156, -3.0323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9506, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.5432, -2.7288, -3.0072, -3.0508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7813, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.5518, -2.7342, -2.9960, -3.0572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6366, device='cuda:0', dtype=torch.float64)
tensor([-1.8034, -2.5808, -2.7457, -3.0215, -3.0692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7851, device='cuda:0', dtype=torch.float64)
tensor([-1.7776, -2.6059, -2.7585, -3.0765, -3.0799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7749, device='cuda:0', dtype=torch.float64)
tensor([-1.7666, -2.6230, -2.7527, -3.1219, -3.0762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6045, device='cuda:0', dtype=torch.float64)
tensor([-1.8051, -2.6281, -2.7146, -3.1161, -3.0759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6866, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.6005, -2.6857, -3.0997, -3.0720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6816, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.5629, -2.6685, -3.0654, -3.0404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7269, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.5309, -2.6692, -3.0422, -3.0236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7157, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.5156, -2.6845, -3.0309, -3.0299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9067, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.5321, -2.6934, -3.0176, -3.0436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6142, device='cuda:0', dtype=torch.float64)
tensor([-1.8078, -2.5619, -2.7042, -3.0029, -3.0711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5994, device='cuda:0', dtype=torch.float64)
tensor([-1.8071, -2.5846, -2.7005, -2.9971, -3.1053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0091, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.5897, -2.6935, -3.0106, -3.1173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6678, device='cuda:0', dtype=torch.float64)
tensor([-1.8077, -2.5780, -2.6993, -3.0365, -3.1111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8665, device='cuda:0', dtype=torch.float64)
tensor([-1.7916, -2.5593, -2.7087, -3.0622, -3.1082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0414, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.5795, -2.6597, -3.0322, -3.0866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6140, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.5988, -2.6141, -3.0224, -3.0703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5539, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.5916, -2.6141, -3.0536, -3.0639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8161, device='cuda:0', dtype=torch.float64)
tensor([-1.7830, -2.5703, -2.6548, -3.0765, -3.0525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7986, device='cuda:0', dtype=torch.float64)
tensor([-1.7973, -2.5793, -2.6825, -3.0595, -3.0639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7467, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.5843, -2.6864, -3.0134, -3.0918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8034, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.5632, -2.7057, -2.9952, -3.0717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6382, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.5387, -2.7190, -2.9969, -3.0365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0075, device='cuda:0', dtype=torch.float64)
tensor([-1.8153, -2.5268, -2.7336, -3.0174, -3.0489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9556, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.5588, -2.7288, -3.0187, -3.0751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7357, device='cuda:0', dtype=torch.float64)
tensor([-1.8089, -2.6040, -2.7008, -3.0273, -3.0700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9671, device='cuda:0', dtype=torch.float64)
tensor([-1.8061, -2.6305, -2.6739, -3.0508, -3.0675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7730, device='cuda:0', dtype=torch.float64)
tensor([-1.7882, -2.6236, -2.6759, -3.0771, -3.0529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3289, device='cuda:0', dtype=torch.float64)
tensor([-1.7756, -2.5928, -2.6995, -3.0609, -3.0149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7954, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.5700, -2.7056, -3.0144, -3.0321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0751, device='cuda:0', dtype=torch.float64)
tensor([-1.8972, -2.5479, -2.7250, -3.0046, -3.0862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1288, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -2.5400, -2.7275, -3.0315, -3.0519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9205, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.5488, -2.7414, -3.0954, -3.0338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9854, device='cuda:0', dtype=torch.float64)
tensor([-1.7753, -2.5758, -2.7490, -3.1468, -3.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0517, device='cuda:0', dtype=torch.float64)
tensor([-1.7902, -2.6091, -2.7051, -3.1071, -3.1024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6665, device='cuda:0', dtype=torch.float64)
tensor([-1.8098, -2.6271, -2.6521, -3.0286, -3.1067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3198, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.6158, -2.6369, -2.9906, -3.1360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0086, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.5792, -2.6506, -3.0019, -3.0891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6235, device='cuda:0', dtype=torch.float64)
tensor([-1.8071, -2.5490, -2.6782, -3.0404, -3.0475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0631, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.5263, -2.7098, -3.0731, -3.0818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2230, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.5435, -2.7175, -3.0628, -3.0756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8730, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.5596, -2.7103, -3.0470, -3.0663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0979, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.5798, -2.6856, -3.0433, -3.0788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9002, device='cuda:0', dtype=torch.float64)
tensor([-1.7827, -2.5843, -2.6675, -3.0422, -3.0525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9004, device='cuda:0', dtype=torch.float64)
tensor([-1.7731, -2.6009, -2.6521, -3.0209, -3.0362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2527, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.6140, -2.6477, -2.9962, -3.1045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4544, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.6299, -2.6558, -2.9759, -3.0820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9071, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.6220, -2.6947, -2.9995, -3.0297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1508, device='cuda:0', dtype=torch.float64)
tensor([-1.8078, -2.5951, -2.7645, -3.0520, -3.0276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0780, device='cuda:0', dtype=torch.float64)
tensor([-1.7936, -2.5841, -2.7663, -3.0312, -2.9945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9524, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.5823, -2.7290, -2.9860, -3.0090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1458, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.5546, -2.7115, -2.9924, -3.0716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9613, device='cuda:0', dtype=torch.float64)
tensor([-1.7971, -2.5240, -2.7120, -3.0619, -3.0731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8746, device='cuda:0', dtype=torch.float64)
tensor([-1.7760, -2.5316, -2.6852, -3.1092, -3.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1112, device='cuda:0', dtype=torch.float64)
tensor([-1.7987, -2.5549, -2.6628, -3.1457, -3.1400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1407, device='cuda:0', dtype=torch.float64)
tensor([-1.8098, -2.5685, -2.6561, -3.1515, -3.1448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9293, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.5812, -2.6537, -3.1046, -3.1151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1585, device='cuda:0', dtype=torch.float64)
tensor([-1.8677, -2.5812, -2.6646, -3.0438, -3.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2711, device='cuda:0', dtype=torch.float64)
tensor([-1.8748, -2.5883, -2.6605, -2.9661, -3.0809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1104, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.5871, -2.6615, -2.9283, -3.0317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3777, device='cuda:0', dtype=torch.float64)
tensor([-1.7781, -2.5898, -2.6944, -2.9437, -2.9985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3037, device='cuda:0', dtype=torch.float64)
tensor([-1.7841, -2.6071, -2.7272, -2.9550, -3.0089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0868, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.6266, -2.7474, -2.9848, -3.0625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2000, device='cuda:0', dtype=torch.float64)
tensor([-1.8913, -2.5970, -2.7578, -3.0768, -3.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9665, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.5511, -2.7501, -3.1923, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1519, device='cuda:0', dtype=torch.float64)
tensor([-1.8100, -2.5240, -2.6876, -3.2267, -3.0411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3525, device='cuda:0', dtype=torch.float64)
tensor([-1.7915, -2.5395, -2.6172, -3.1792, -3.0127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8079, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.5781, -2.5700, -3.0741, -3.0215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2022, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6150, -2.5927, -3.0165, -3.0432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2243, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6178, -2.6804, -3.0462, -3.1046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9387, device='cuda:0', dtype=torch.float64)
tensor([-1.7739, -2.5846, -2.7729, -3.0786, -3.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8257, device='cuda:0', dtype=torch.float64)
tensor([-1.7499, -2.5636, -2.7954, -3.0425, -3.0547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8227, device='cuda:0', dtype=torch.float64)
tensor([-1.8132, -2.5619, -2.7648, -2.9660, -3.0464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4888, device='cuda:0', dtype=torch.float64)
tensor([-1.8797, -2.5593, -2.7307, -2.8969, -3.0900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2219, device='cuda:0', dtype=torch.float64)
tensor([-1.9043, -2.5791, -2.7182, -2.8924, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1910, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.5947, -2.7205, -2.9823, -3.1842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8193, device='cuda:0', dtype=torch.float64)
tensor([-1.7349, -2.6064, -2.7109, -3.0946, -3.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2402, device='cuda:0', dtype=torch.float64)
tensor([-1.7290, -2.6377, -2.6463, -3.1067, -3.0687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9084, device='cuda:0', dtype=torch.float64)
tensor([-1.7840, -2.6419, -2.5954, -3.0627, -3.0383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2298, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6230, -2.5950, -3.0539, -3.0459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1998, device='cuda:0', dtype=torch.float64)
tensor([-1.8633, -2.5760, -2.6484, -3.1192, -3.0472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0077, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.5310, -2.7096, -3.1868, -3.0671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8576, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.5074, -2.7138, -3.1780, -3.0382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8348, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.5218, -2.6976, -3.1028, -2.9815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0277, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.5302, -2.7078, -3.0426, -2.9859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9880, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.5335, -2.7226, -3.0077, -3.0348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0028, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.5620, -2.7094, -2.9695, -3.0682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0883, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.5768, -2.7164, -2.9935, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8857, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.5969, -2.7017, -3.0210, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8603, device='cuda:0', dtype=torch.float64)
tensor([-1.7760, -2.6089, -2.6780, -3.0188, -3.1080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1550, device='cuda:0', dtype=torch.float64)
tensor([-1.7486, -2.6095, -2.6759, -3.0136, -3.0794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8068, device='cuda:0', dtype=torch.float64)
tensor([-1.7935, -2.6147, -2.6625, -2.9745, -3.0822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1364, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.6116, -2.6728, -2.9603, -3.1008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1558, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.5812, -2.7299, -3.0371, -3.1116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9393, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.5514, -2.8029, -3.1349, -3.1069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3751, device='cuda:0', dtype=torch.float64)
tensor([-1.7938, -2.5595, -2.7918, -3.1146, -3.0474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3140, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.5728, -2.7334, -3.0431, -3.0585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8708, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -2.5893, -2.6636, -3.0026, -3.0757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4063, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.5827, -2.6135, -3.0180, -3.0054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3136, device='cuda:0', dtype=torch.float64)
tensor([-1.7982, -2.5614, -2.6107, -3.0924, -3.0178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9977, device='cuda:0', dtype=torch.float64)
tensor([-1.7939, -2.5490, -2.6295, -3.1390, -3.0642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5344, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.5606, -2.6246, -3.0992, -3.0412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3036, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.5744, -2.6407, -3.0380, -3.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8590, device='cuda:0', dtype=torch.float64)
tensor([-1.8812, -2.5988, -2.6595, -2.9974, -3.0880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1615, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.5978, -2.6936, -2.9986, -3.0144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0713, device='cuda:0', dtype=torch.float64)
tensor([-1.7725, -2.5676, -2.7610, -3.0504, -3.0140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7730, device='cuda:0', dtype=torch.float64)
tensor([-1.7846, -2.5428, -2.7993, -3.0700, -3.0832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4374, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.5578, -2.7557, -3.0060, -3.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2786, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.5774, -2.6819, -2.9785, -3.1164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7378, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.5874, -2.6430, -3.0204, -3.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3889, device='cuda:0', dtype=torch.float64)
tensor([-1.7591, -2.5973, -2.6269, -3.0990, -3.0618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9155, device='cuda:0', dtype=torch.float64)
tensor([-1.7450, -2.6008, -2.6366, -3.1526, -3.0552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8802, device='cuda:0', dtype=torch.float64)
tensor([-1.8078, -2.6019, -2.6623, -3.1299, -3.1215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9798, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.6103, -2.6797, -3.0661, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8869, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.6024, -2.6949, -3.0069, -3.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0874, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.5710, -2.7253, -3.0026, -3.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9855, device='cuda:0', dtype=torch.float64)
tensor([-1.7877, -2.5600, -2.7268, -3.0039, -2.9970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8747, device='cuda:0', dtype=torch.float64)
tensor([-1.7917, -2.5674, -2.7158, -2.9934, -2.9593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9367, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.5746, -2.6987, -2.9817, -3.0186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8706, device='cuda:0', dtype=torch.float64)
tensor([-1.9139, -2.5946, -2.6796, -3.0070, -3.0426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6459, device='cuda:0', dtype=torch.float64)
tensor([-1.8668, -2.5954, -2.6900, -3.0893, -3.0394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7739, device='cuda:0', dtype=torch.float64)
tensor([-1.7920, -2.5840, -2.7171, -3.1639, -3.0589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9205, device='cuda:0', dtype=torch.float64)
tensor([-1.7575, -2.5903, -2.6914, -3.1104, -3.0379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7015, device='cuda:0', dtype=torch.float64)
tensor([-1.8083, -2.5985, -2.6445, -3.0069, -3.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8836, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.5749, -2.6314, -2.9691, -3.1446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8793, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.5290, -2.6592, -3.0182, -3.1422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0211, device='cuda:0', dtype=torch.float64)
tensor([-1.7937, -2.5130, -2.6921, -3.0745, -3.1341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8616, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.5372, -2.6730, -3.0662, -3.1004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8281, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.5862, -2.6236, -3.0296, -3.0653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6988, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.5973, -2.6354, -3.0371, -3.0515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9051, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.5767, -2.7037, -3.0794, -3.0313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8214, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.5628, -2.7769, -3.0915, -3.0396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9617, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.5646, -2.8024, -3.0625, -3.0747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2448, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.5624, -2.7849, -3.0073, -3.0365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0843, device='cuda:0', dtype=torch.float64)
tensor([-1.8084, -2.5635, -2.7709, -2.9929, -3.0104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9664, device='cuda:0', dtype=torch.float64)
tensor([-1.7608, -2.5644, -2.7479, -2.9881, -3.0274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0841, device='cuda:0', dtype=torch.float64)
tensor([-1.7799, -2.5876, -2.6763, -2.9398, -3.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0375, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.6118, -2.6137, -2.9126, -3.1344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7355, device='cuda:0', dtype=torch.float64)
tensor([-1.8631, -2.6058, -2.5918, -2.9714, -3.1572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0835, device='cuda:0', dtype=torch.float64)
tensor([-1.7352, -2.5804, -2.6095, -3.0824, -3.0376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4429, device='cuda:0', dtype=torch.float64)
tensor([-1.7259, -2.5712, -2.6391, -3.1357, -3.0047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1577, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.5874, -2.6550, -3.0924, -3.0689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3542, device='cuda:0', dtype=torch.float64)
tensor([-1.9452, -2.5906, -2.7035, -3.0863, -3.0816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5738, device='cuda:0', dtype=torch.float64)
tensor([-1.8984, -2.5557, -2.7968, -3.1660, -3.1131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8545, device='cuda:0', dtype=torch.float64)
tensor([-1.8003, -2.5396, -2.8326, -3.1969, -3.0854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2173, device='cuda:0', dtype=torch.float64)
tensor([-1.7557, -2.5503, -2.7506, -3.0723, -2.9955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-1.7968, -2.5703, -2.6620, -2.9222, -2.9945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0608, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.5720, -2.6370, -2.8535, -3.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1671, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.5585, -2.6614, -2.8983, -3.0840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0252, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.5466, -2.7048, -3.0105, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8433, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.5643, -2.7188, -3.0849, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9926, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6007, -2.6776, -3.0797, -3.1204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1850, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.6165, -2.6483, -3.0504, -3.0615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6418, device='cuda:0', dtype=torch.float64)
tensor([-1.7855, -2.6043, -2.6548, -3.0603, -3.0229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1434, device='cuda:0', dtype=torch.float64)
tensor([-1.7973, -2.5902, -2.6665, -3.0715, -3.0134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9187, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.5784, -2.6858, -3.0882, -3.0427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8534, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.5702, -2.7152, -3.1103, -3.0844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8496, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.5660, -2.7410, -3.0878, -3.0887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8685, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.5795, -2.7472, -3.0091, -3.0581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7150, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.5976, -2.7134, -2.9252, -3.0303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8470, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.5896, -2.6915, -2.8987, -3.0246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8300, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.5482, -2.7135, -2.9497, -3.0358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0492, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.5237, -2.7274, -3.0094, -3.0483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8647, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.5429, -2.7256, -3.0652, -3.0776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0512, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.5735, -2.7062, -3.0917, -3.0991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9028, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6065, -2.6779, -3.0960, -3.0918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8628, device='cuda:0', dtype=torch.float64)
tensor([-1.7966, -2.5973, -2.6782, -3.1125, -3.1029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0086, device='cuda:0', dtype=torch.float64)
tensor([-1.7805, -2.5783, -2.6762, -3.1089, -3.1115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1043, device='cuda:0', dtype=torch.float64)
tensor([-1.7841, -2.5643, -2.6398, -3.0709, -3.0798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0950, device='cuda:0', dtype=torch.float64)
tensor([-1.7987, -2.5636, -2.6293, -3.0475, -3.0753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5939, device='cuda:0', dtype=torch.float64)
tensor([-1.7956, -2.5667, -2.6530, -3.0539, -3.0610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3402, device='cuda:0', dtype=torch.float64)
tensor([-1.8044, -2.5870, -2.6756, -3.0446, -3.0313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9534, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.6320, -2.6849, -3.0133, -3.0568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9283, device='cuda:0', dtype=torch.float64)
tensor([-1.9163, -2.6587, -2.6822, -3.0079, -3.0765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0927, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.6361, -2.7047, -3.0538, -3.0455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8799, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.5873, -2.7345, -3.0751, -3.0225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8972, device='cuda:0', dtype=torch.float64)
tensor([-1.7991, -2.5527, -2.7478, -3.0367, -3.0471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0900, device='cuda:0', dtype=torch.float64)
tensor([-1.8143, -2.5439, -2.7469, -2.9748, -3.0709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8278, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.5713, -2.7340, -2.9331, -3.1083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0948, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.5943, -2.7360, -2.9731, -3.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8798, device='cuda:0', dtype=torch.float64)
tensor([-1.7629, -2.5818, -2.7714, -3.0957, -3.0798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1827, device='cuda:0', dtype=torch.float64)
tensor([-1.7245, -2.5783, -2.7580, -3.1632, -3.0249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0917, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.5944, -2.6824, -3.1087, -3.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9925, device='cuda:0', dtype=torch.float64)
tensor([-1.9373, -2.6124, -2.5932, -3.0171, -3.1119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5352, device='cuda:0', dtype=torch.float64)
tensor([-1.9136, -2.5780, -2.5723, -3.0170, -3.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1269, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.5133, -2.6172, -3.0941, -3.0519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1955, device='cuda:0', dtype=torch.float64)
tensor([-1.7959, -2.5010, -2.6510, -3.0924, -3.0385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1550, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.5333, -2.6691, -3.0031, -3.0475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9969, device='cuda:0', dtype=torch.float64)
tensor([-1.8783, -2.5603, -2.6992, -2.9166, -3.0760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0024, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.5592, -2.7555, -2.9334, -3.1011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2056, device='cuda:0', dtype=torch.float64)
tensor([-1.7770, -2.5659, -2.7547, -2.9839, -3.0480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1437, device='cuda:0', dtype=torch.float64)
tensor([-1.7802, -2.5886, -2.7193, -3.0536, -3.0796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2052, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.6240, -2.6861, -3.1296, -3.1302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5323, device='cuda:0', dtype=torch.float64)
tensor([-1.7852, -2.6765, -2.6568, -3.1564, -3.0440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0891, device='cuda:0', dtype=torch.float64)
tensor([-1.7948, -2.7179, -2.6611, -3.1533, -3.0057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2773, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.7257, -2.6554, -3.1104, -3.0356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8311, device='cuda:0', dtype=torch.float64)
tensor([-1.9042, -2.6859, -2.6596, -3.0528, -3.0385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9157, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.5969, -2.7048, -3.0461, -3.0498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0049, device='cuda:0', dtype=torch.float64)
tensor([-1.8123, -2.5020, -2.7865, -3.0980, -3.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3172, device='cuda:0', dtype=torch.float64)
tensor([-1.7617, -2.4644, -2.7998, -3.0793, -3.0967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0657, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.5009, -2.7361, -2.9881, -3.1210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8048, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.5438, -2.6913, -2.9708, -3.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8893, device='cuda:0', dtype=torch.float64)
tensor([-1.8069, -2.5508, -2.6979, -3.0352, -3.1081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7138, device='cuda:0', dtype=torch.float64)
tensor([-1.7630, -2.5355, -2.7254, -3.1096, -3.0851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0624, device='cuda:0', dtype=torch.float64)
tensor([-1.8041, -2.5316, -2.7034, -3.1018, -3.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9005, device='cuda:0', dtype=torch.float64)
tensor([-1.8598, -2.5476, -2.6576, -3.0226, -3.0917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8058, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.5583, -2.6434, -2.9462, -3.0423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9376, device='cuda:0', dtype=torch.float64)
tensor([-1.8089, -2.5741, -2.6654, -2.9347, -3.0371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2071, device='cuda:0', dtype=torch.float64)
tensor([-1.7934, -2.6204, -2.6764, -2.9405, -3.0560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1813, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6707, -2.6787, -2.9543, -3.0984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1336, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6858, -2.7045, -3.0307, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0213, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6698, -2.7199, -3.1057, -3.1006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9743, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6449, -2.6991, -3.1289, -3.0273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6240, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.6126, -2.6826, -3.0935, -2.9666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8069, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.5666, -2.6985, -3.0683, -2.9206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2642, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.5183, -2.7326, -3.0884, -2.9163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0350, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.4965, -2.7503, -3.0957, -2.9990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7960, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.5279, -2.7155, -3.0501, -3.0699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0570, device='cuda:0', dtype=torch.float64)
tensor([-1.8061, -2.5629, -2.6826, -3.0155, -3.0753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1943, device='cuda:0', dtype=torch.float64)
tensor([-1.7666, -2.5783, -2.6773, -3.0228, -3.0897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8227, device='cuda:0', dtype=torch.float64)
tensor([-1.7883, -2.5689, -2.6714, -3.0225, -3.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7321, device='cuda:0', dtype=torch.float64)
tensor([-1.8576, -2.5614, -2.6470, -3.0193, -3.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0025, device='cuda:0', dtype=torch.float64)
tensor([-1.8792, -2.5351, -2.6640, -3.0807, -3.2195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8973, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.5121, -2.7019, -3.1364, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0693, device='cuda:0', dtype=torch.float64)
tensor([-1.7577, -2.5236, -2.7384, -3.1330, -3.0815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0812, device='cuda:0', dtype=torch.float64)
tensor([-1.8057, -2.5861, -2.7185, -3.0347, -3.0743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0318, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.6517, -2.6954, -2.9212, -3.0868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8578, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.6409, -2.7375, -2.9472, -3.0796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0160, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6118, -2.7660, -3.0110, -3.1048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8489, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.5995, -2.7242, -3.0021, -3.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7970, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.5890, -2.6573, -2.9652, -3.0970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6897, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.5761, -2.6216, -2.9724, -3.0492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8964, device='cuda:0', dtype=torch.float64)
tensor([-1.7673, -2.5485, -2.6255, -3.0499, -2.9903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8761, device='cuda:0', dtype=torch.float64)
tensor([-1.7574, -2.5417, -2.6240, -3.1060, -2.9863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0697, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.5535, -2.6195, -3.0944, -3.0302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7380, device='cuda:0', dtype=torch.float64)
tensor([-1.8621, -2.5731, -2.6656, -3.1083, -3.0666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9987, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.5733, -2.7555, -3.1354, -3.0652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7934, device='cuda:0', dtype=torch.float64)
tensor([-1.8095, -2.5864, -2.7957, -3.0979, -3.0337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6620, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.5973, -2.7732, -3.0181, -3.0423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6261, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.5846, -2.7318, -2.9685, -3.0553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8253, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.5471, -2.7236, -3.0010, -3.0463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2782, device='cuda:0', dtype=torch.float64)
tensor([-1.7827, -2.5310, -2.7245, -3.0379, -3.0656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9093, device='cuda:0', dtype=torch.float64)
tensor([-1.7770, -2.5532, -2.7080, -3.0400, -3.0818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7419, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6080, -2.6359, -2.9765, -3.0689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7642, device='cuda:0', dtype=torch.float64)
tensor([-1.8691, -2.6507, -2.5821, -2.9457, -3.0718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7459, device='cuda:0', dtype=torch.float64)
tensor([-1.8704, -2.6409, -2.5875, -2.9962, -3.0782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9259, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.5992, -2.6416, -3.1078, -3.0628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6949, device='cuda:0', dtype=torch.float64)
tensor([-1.7907, -2.5540, -2.7072, -3.1936, -3.0768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8346, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.5266, -2.7251, -3.1801, -3.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9001, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.5288, -2.7100, -3.1060, -3.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0670, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.5357, -2.6949, -3.0447, -3.1143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8465, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.5398, -2.7013, -3.0404, -3.0881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5337, device='cuda:0', dtype=torch.float64)
tensor([-1.7676, -2.5534, -2.7161, -3.0567, -3.0607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6281, device='cuda:0', dtype=torch.float64)
tensor([-1.7926, -2.5960, -2.7050, -3.0187, -3.0757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0600, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.6355, -2.6838, -2.9524, -3.1042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6807, device='cuda:0', dtype=torch.float64)
tensor([-1.8647, -2.6468, -2.6833, -2.9357, -3.0679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9204, device='cuda:0', dtype=torch.float64)
tensor([-1.8056, -2.6211, -2.7212, -2.9853, -3.0146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9067, device='cuda:0', dtype=torch.float64)
tensor([-1.7915, -2.6151, -2.7223, -3.0123, -2.9851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9485, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.6008, -2.7103, -3.0063, -3.0159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9885, device='cuda:0', dtype=torch.float64)
tensor([-1.8934, -2.5815, -2.7082, -3.0374, -3.1167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0011, device='cuda:0', dtype=torch.float64)
tensor([-1.8665, -2.5583, -2.7036, -3.0786, -3.1314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9224, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.5541, -2.6823, -3.0863, -3.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8180, device='cuda:0', dtype=torch.float64)
tensor([-1.7719, -2.5835, -2.6377, -3.0559, -3.0327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1016, device='cuda:0', dtype=torch.float64)
tensor([-1.7702, -2.6105, -2.6065, -3.0259, -2.9626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8357, device='cuda:0', dtype=torch.float64)
tensor([-1.8107, -2.5949, -2.6187, -3.0322, -2.9976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.5657, -2.6622, -3.0433, -3.0482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6158, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.5396, -2.7238, -3.0844, -3.1257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7261, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.5464, -2.7633, -3.0966, -3.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0498, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6040, -2.7414, -3.0431, -3.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8085, device='cuda:0', dtype=torch.float64)
tensor([-1.7994, -2.6589, -2.7266, -3.0073, -3.1334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8565, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6685, -2.7280, -2.9854, -3.1338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1005, device='cuda:0', dtype=torch.float64)
tensor([-1.7976, -2.6329, -2.7441, -3.0011, -3.0779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3001, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.5712, -2.7703, -3.0454, -3.0839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7418, device='cuda:0', dtype=torch.float64)
tensor([-1.8737, -2.5322, -2.7502, -3.0576, -3.0896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1044, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.5329, -2.6729, -3.0553, -3.0133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.5474, -2.6304, -3.0872, -2.9622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9323, device='cuda:0', dtype=torch.float64)
tensor([-1.7801, -2.5697, -2.6191, -3.1102, -2.9651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0114, device='cuda:0', dtype=torch.float64)
tensor([-1.7982, -2.5940, -2.6153, -3.1118, -3.0232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9835, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.6048, -2.6211, -3.0858, -3.0825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8955, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.5929, -2.6523, -3.0580, -3.1161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0263, device='cuda:0', dtype=torch.float64)
tensor([-1.8080, -2.5717, -2.7161, -3.0711, -3.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9606, device='cuda:0', dtype=torch.float64)
tensor([-1.7958, -2.5645, -2.7620, -3.0472, -3.0967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0339, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.5754, -2.7758, -2.9979, -3.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8750, device='cuda:0', dtype=torch.float64)
tensor([-1.8898, -2.6081, -2.7433, -2.9364, -3.1289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9105, device='cuda:0', dtype=torch.float64)
tensor([-1.8952, -2.6171, -2.7153, -2.9393, -3.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9020, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6077, -2.6696, -2.9773, -3.0571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0989, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.5837, -2.6391, -3.0388, -3.0311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9435, device='cuda:0', dtype=torch.float64)
tensor([-1.7866, -2.5608, -2.6410, -3.0889, -3.0197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8625, device='cuda:0', dtype=torch.float64)
tensor([-1.7873, -2.5514, -2.6503, -3.1046, -3.0637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0291, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.5635, -2.6531, -3.0650, -3.0889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8112, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.5741, -2.6503, -3.0575, -3.1025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0111, device='cuda:0', dtype=torch.float64)
tensor([-1.7917, -2.5552, -2.6971, -3.1145, -3.1234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2048, device='cuda:0', dtype=torch.float64)
tensor([-1.7517, -2.5579, -2.7282, -3.1012, -3.0593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4276, device='cuda:0', dtype=torch.float64)
tensor([-1.7649, -2.5667, -2.7140, -3.0229, -2.9835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2663, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.5802, -2.6886, -2.9513, -2.9963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9355, device='cuda:0', dtype=torch.float64)
tensor([-1.9017, -2.5929, -2.6719, -2.9334, -2.9784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5283, device='cuda:0', dtype=torch.float64)
tensor([-1.9202, -2.5877, -2.6861, -2.9991, -3.0148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0444, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.6008, -2.7216, -3.0998, -3.0654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9742, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6244, -2.7133, -3.1379, -3.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2727, device='cuda:0', dtype=torch.float64)
tensor([-1.7843, -2.6348, -2.6834, -3.0885, -3.0408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2365, device='cuda:0', dtype=torch.float64)
tensor([-1.7718, -2.6036, -2.6862, -3.0275, -3.0746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8960, device='cuda:0', dtype=torch.float64)
tensor([-1.8126, -2.5642, -2.6857, -2.9789, -3.1099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4275, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.5298, -2.6982, -2.9891, -3.1171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3270, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.5000, -2.7455, -3.0835, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1857, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.5326, -2.7356, -3.1303, -3.0991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1353, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6089, -2.6845, -3.0811, -3.0405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1873, device='cuda:0', dtype=torch.float64)
tensor([-1.8620, -2.6469, -2.6595, -3.0135, -3.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0171, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.6243, -2.6705, -2.9992, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0410, device='cuda:0', dtype=torch.float64)
tensor([-1.7802, -2.5599, -2.7162, -3.0645, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0881, device='cuda:0', dtype=torch.float64)
tensor([-1.7704, -2.5117, -2.7367, -3.1011, -3.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9434, device='cuda:0', dtype=torch.float64)
tensor([-1.7668, -2.5409, -2.6949, -3.0694, -3.1024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8748, device='cuda:0', dtype=torch.float64)
tensor([-1.7933, -2.6169, -2.6129, -2.9847, -2.9676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9809, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.6660, -2.5877, -2.9958, -2.9122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9691, device='cuda:0', dtype=torch.float64)
tensor([-1.8616, -2.6401, -2.6586, -3.0899, -2.9327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4834, device='cuda:0', dtype=torch.float64)
tensor([-1.8911, -2.6087, -2.7100, -3.1296, -2.9654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7921, device='cuda:0', dtype=torch.float64)
tensor([-1.9276, -2.5885, -2.7391, -3.1049, -3.0512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9688, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.5744, -2.7415, -3.0485, -3.1021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0203, device='cuda:0', dtype=torch.float64)
tensor([-1.7979, -2.5583, -2.7336, -3.0167, -3.0451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9679, device='cuda:0', dtype=torch.float64)
tensor([-1.7105, -2.5297, -2.7451, -3.0164, -3.0239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8291, device='cuda:0', dtype=torch.float64)
tensor([-1.7586, -2.5228, -2.7363, -2.9846, -3.1066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2352, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.5387, -2.6981, -2.9416, -3.1806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2751, device='cuda:0', dtype=torch.float64)
tensor([-1.8868, -2.5546, -2.6770, -3.0110, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0431, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.5525, -2.7128, -3.1318, -3.2076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3460, device='cuda:0', dtype=torch.float64)
tensor([-1.7601, -2.5698, -2.7250, -3.1466, -3.0997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7470, device='cuda:0', dtype=torch.float64)
tensor([-1.7858, -2.6092, -2.6545, -3.0405, -3.0206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2168, device='cuda:0', dtype=torch.float64)
tensor([-1.8873, -2.6338, -2.5849, -2.9330, -3.0369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1935, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.6015, -2.6251, -2.9632, -3.0191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9701, device='cuda:0', dtype=torch.float64)
tensor([-1.7705, -2.5666, -2.7044, -3.0730, -2.9557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1828, device='cuda:0', dtype=torch.float64)
tensor([-1.7842, -2.5673, -2.7378, -3.1141, -2.9926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0976, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.6233, -2.7025, -3.0664, -3.0182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1512, device='cuda:0', dtype=torch.float64)
tensor([-1.8814, -2.6625, -2.7044, -3.0811, -3.0729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7447, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6644, -2.7305, -3.1581, -3.0997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5634, device='cuda:0', dtype=torch.float64)
tensor([-1.7728, -2.6468, -2.7297, -3.1638, -3.0956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8118, device='cuda:0', dtype=torch.float64)
tensor([-1.7866, -2.6327, -2.6714, -3.0655, -3.0928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1267, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.5895, -2.6284, -2.9589, -3.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2035, device='cuda:0', dtype=torch.float64)
tensor([-1.8679, -2.5241, -2.6474, -2.9554, -3.1275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9223, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.4698, -2.7066, -3.0065, -3.1416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7525, device='cuda:0', dtype=torch.float64)
tensor([-1.7979, -2.4578, -2.7452, -3.0504, -3.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9072, device='cuda:0', dtype=torch.float64)
tensor([-1.8075, -2.5065, -2.7117, -3.0013, -3.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8944, device='cuda:0', dtype=torch.float64)
tensor([-1.8031, -2.5675, -2.6798, -2.9398, -3.0810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9888, device='cuda:0', dtype=torch.float64)
tensor([-1.7930, -2.6086, -2.6698, -2.9391, -3.0300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7885, device='cuda:0', dtype=torch.float64)
tensor([-1.7938, -2.6112, -2.6885, -3.0082, -3.0107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1246, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6082, -2.7278, -3.0724, -3.0331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1657, device='cuda:0', dtype=torch.float64)
tensor([-1.8963, -2.5875, -2.7540, -3.1085, -3.1070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1509, device='cuda:0', dtype=torch.float64)
tensor([-1.9580, -2.5939, -2.7491, -3.1103, -3.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8106, device='cuda:0', dtype=torch.float64)
tensor([-1.9126, -2.5916, -2.7185, -3.1169, -3.1168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0158, device='cuda:0', dtype=torch.float64)
tensor([-1.7804, -2.5727, -2.7081, -3.1574, -3.0243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8697, device='cuda:0', dtype=torch.float64)
tensor([-1.7295, -2.5713, -2.6806, -3.1388, -2.9779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0283, device='cuda:0', dtype=torch.float64)
tensor([-1.7818, -2.5794, -2.6487, -3.0552, -3.0360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8957, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.5746, -2.6555, -2.9997, -3.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0593, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.5578, -2.6980, -3.0344, -3.1377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0437, device='cuda:0', dtype=torch.float64)
tensor([-1.7783, -2.5663, -2.7184, -3.0405, -3.1331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9363, device='cuda:0', dtype=torch.float64)
tensor([-1.8079, -2.6042, -2.6891, -2.9700, -3.1166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8282, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6448, -2.6456, -2.9046, -3.0253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9769, device='cuda:0', dtype=torch.float64)
tensor([-1.8048, -2.6426, -2.6473, -2.9263, -2.9666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8075, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.6046, -2.6798, -2.9981, -2.9819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5119, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.5854, -2.6863, -3.0101, -2.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0079, device='cuda:0', dtype=torch.float64)
tensor([-1.9082, -2.5601, -2.6915, -2.9933, -3.0604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1962, device='cuda:0', dtype=torch.float64)
tensor([-1.9247, -2.5346, -2.7090, -3.0155, -3.1177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9468, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.5172, -2.7245, -3.0704, -3.0795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8277, device='cuda:0', dtype=torch.float64)
tensor([-1.7852, -2.5158, -2.7316, -3.1143, -3.0521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0742, device='cuda:0', dtype=torch.float64)
tensor([-1.7715, -2.5166, -2.7304, -3.1199, -3.1050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1881, device='cuda:0', dtype=torch.float64)
tensor([-1.7999, -2.5375, -2.6982, -3.0635, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8434, device='cuda:0', dtype=torch.float64)
tensor([-1.8119, -2.5522, -2.7055, -3.0713, -3.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6996, device='cuda:0', dtype=torch.float64)
tensor([-1.8113, -2.5856, -2.6902, -3.1084, -3.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3137, device='cuda:0', dtype=torch.float64)
tensor([-1.8028, -2.6311, -2.6467, -3.0997, -3.0674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3817, device='cuda:0', dtype=torch.float64)
tensor([-1.9132, -2.6635, -2.5915, -3.0532, -3.0651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1297, device='cuda:0', dtype=torch.float64)
tensor([-1.9009, -2.6360, -2.6075, -3.1014, -3.0972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6058, device='cuda:0', dtype=torch.float64)
tensor([-1.7849, -2.5631, -2.6874, -3.1778, -3.0871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9804, device='cuda:0', dtype=torch.float64)
tensor([-1.8084, -2.5151, -2.7113, -3.1253, -3.1063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1428, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.5359, -2.7025, -2.9891, -3.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1386, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.5777, -2.7057, -2.8835, -3.0567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8201, device='cuda:0', dtype=torch.float64)
tensor([-1.7759, -2.5912, -2.7670, -2.9273, -3.0118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7174, device='cuda:0', dtype=torch.float64)
tensor([-1.7346, -2.5985, -2.8225, -3.0234, -3.0148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8956, device='cuda:0', dtype=torch.float64)
tensor([-1.7868, -2.6071, -2.8169, -3.0907, -3.0489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8612, device='cuda:0', dtype=torch.float64)
tensor([-1.8799, -2.6067, -2.7763, -3.0915, -3.1167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9340, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.5827, -2.7423, -3.0847, -3.1028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8946, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.5695, -2.6730, -3.0433, -3.0225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4738, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.5939, -2.5985, -2.9963, -2.9793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9680, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.5921, -2.5736, -3.0076, -3.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3439, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.5798, -2.6125, -3.0772, -3.0693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0526, device='cuda:0', dtype=torch.float64)
tensor([-1.7822, -2.5533, -2.6783, -3.1525, -3.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0576, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.5402, -2.6770, -3.1319, -3.1716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.5455, -2.6324, -3.0639, -3.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2121, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.5426, -2.6420, -3.0513, -3.0907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4933, device='cuda:0', dtype=torch.float64)
tensor([-1.7524, -2.5599, -2.7050, -3.0637, -3.0459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7276, device='cuda:0', dtype=torch.float64)
tensor([-1.7727, -2.5958, -2.7465, -3.0153, -3.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0609, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.6298, -2.7644, -2.9655, -3.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1785, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6513, -2.7414, -2.9295, -3.0802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8358, device='cuda:0', dtype=torch.float64)
tensor([-1.7713, -2.6301, -2.7262, -2.9524, -3.0113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8605, device='cuda:0', dtype=torch.float64)
tensor([-1.7757, -2.5928, -2.7184, -2.9796, -3.0116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8387, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.5654, -2.6876, -2.9658, -3.0194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0798, device='cuda:0', dtype=torch.float64)
tensor([-1.8752, -2.5353, -2.6866, -2.9843, -3.0814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0188, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.5093, -2.7001, -3.0418, -3.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6773, device='cuda:0', dtype=torch.float64)
tensor([-1.8093, -2.5346, -2.6968, -3.1147, -3.1034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6315, device='cuda:0', dtype=torch.float64)
tensor([-1.7782, -2.5952, -2.6460, -3.1305, -3.0328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4275, device='cuda:0', dtype=torch.float64)
tensor([-1.7962, -2.6452, -2.6198, -3.1159, -3.0112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8985, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.6515, -2.6228, -3.0935, -3.0058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1138, device='cuda:0', dtype=torch.float64)
tensor([-1.9073, -2.5993, -2.6815, -3.1249, -3.0808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9339, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.5601, -2.7324, -3.1669, -3.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2213, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.5564, -2.7407, -3.1332, -3.0410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1692, device='cuda:0', dtype=torch.float64)
tensor([-1.7988, -2.5677, -2.7366, -3.0620, -3.0238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8666, device='cuda:0', dtype=torch.float64)
tensor([-1.7645, -2.5806, -2.7266, -2.9749, -3.0072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1027, device='cuda:0', dtype=torch.float64)
tensor([-1.7757, -2.5703, -2.7193, -2.9053, -3.0477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5468, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.5523, -2.7309, -2.8702, -3.1828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6472, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.5390, -2.7453, -2.9344, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2953, device='cuda:0', dtype=torch.float64)
tensor([-1.7795, -2.5523, -2.7459, -3.0369, -3.0818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5102, device='cuda:0', dtype=torch.float64)
tensor([-1.8044, -2.5879, -2.7228, -3.0931, -3.0497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1537, device='cuda:0', dtype=torch.float64)
tensor([-1.8694, -2.6193, -2.6679, -3.0890, -3.0396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3286, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.6169, -2.6493, -3.1106, -3.0222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2009, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.5837, -2.6646, -3.1547, -3.0649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7399, device='cuda:0', dtype=torch.float64)
tensor([-1.8109, -2.5721, -2.6529, -3.1298, -3.0474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1708, device='cuda:0', dtype=torch.float64)
tensor([-1.7740, -2.5912, -2.6222, -3.0379, -2.9993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3465, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.5918, -2.6278, -2.9576, -3.0639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4713, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.5804, -2.6742, -2.9243, -3.0730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9371, device='cuda:0', dtype=torch.float64)
tensor([-1.8096, -2.5606, -2.7366, -2.9762, -3.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5359, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.5618, -2.7727, -3.0566, -3.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0696, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.5818, -2.7635, -3.1292, -3.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2900, device='cuda:0', dtype=torch.float64)
tensor([-1.7943, -2.5951, -2.7261, -3.1264, -3.0519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4092, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.5733, -2.7075, -3.0851, -3.0756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([-1.8934, -2.5552, -2.6778, -3.0067, -3.0929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4113, device='cuda:0', dtype=torch.float64)
tensor([-1.9047, -2.5533, -2.6709, -2.9651, -3.0876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5156, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.5278, -2.7186, -3.0234, -3.1249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0857, device='cuda:0', dtype=torch.float64)
tensor([-1.8104, -2.5368, -2.7407, -3.0850, -3.0616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9379, device='cuda:0', dtype=torch.float64)
tensor([-1.7644, -2.5760, -2.7457, -3.0776, -3.0060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0826, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6242, -2.7099, -3.0080, -3.0532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1798, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.6376, -2.6677, -2.9446, -3.0803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1681, device='cuda:0', dtype=torch.float64)
tensor([-1.8972, -2.6268, -2.6377, -2.9599, -3.0836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8926, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.6047, -2.6430, -3.0269, -3.0457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0152, device='cuda:0', dtype=torch.float64)
tensor([-1.7936, -2.5974, -2.6545, -3.0872, -3.0224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7771, device='cuda:0', dtype=torch.float64)
tensor([-1.7916, -2.6024, -2.6448, -3.0956, -3.0200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0209, device='cuda:0', dtype=torch.float64)
tensor([-1.8020, -2.6085, -2.6433, -3.0665, -3.0620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2323, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.5830, -2.6736, -3.0556, -3.1722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2630, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.5608, -2.7048, -3.0554, -3.2387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1584, device='cuda:0', dtype=torch.float64)
tensor([-1.8092, -2.5447, -2.7262, -3.0582, -3.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4370, device='cuda:0', dtype=torch.float64)
tensor([-1.8020, -2.5588, -2.7056, -3.0235, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1584, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.5977, -2.6602, -2.9787, -3.0859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1118, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.5980, -2.6605, -3.0175, -3.0254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3429, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.5802, -2.7058, -3.0843, -3.0105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8892, device='cuda:0', dtype=torch.float64)
tensor([-1.8758, -2.5430, -2.7563, -3.1231, -3.0366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8865, device='cuda:0', dtype=torch.float64)
tensor([-1.9018, -2.5309, -2.7538, -3.0685, -3.0181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9668, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.5363, -2.7214, -2.9913, -2.9340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0806, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.5438, -2.6992, -2.9351, -2.9023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7377, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.5507, -2.7111, -2.9551, -2.9168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0166, device='cuda:0', dtype=torch.float64)
tensor([-1.8016, -2.5835, -2.7276, -3.0396, -3.0081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7200, device='cuda:0', dtype=torch.float64)
tensor([-1.8016, -2.6087, -2.7534, -3.1588, -3.1294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7591, device='cuda:0', dtype=torch.float64)
tensor([-1.7760, -2.6390, -2.7512, -3.1999, -3.1855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9283, device='cuda:0', dtype=torch.float64)
tensor([-1.7916, -2.6870, -2.6784, -3.0775, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0497, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6911, -2.6317, -2.9686, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3309, device='cuda:0', dtype=torch.float64)
tensor([-1.8066, -2.6354, -2.6467, -2.9302, -3.1020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9238, device='cuda:0', dtype=torch.float64)
tensor([-1.7642, -2.5714, -2.6906, -2.9660, -3.0310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3214, device='cuda:0', dtype=torch.float64)
tensor([-1.7936, -2.5288, -2.7346, -3.0544, -3.0857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1720, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.5214, -2.7189, -3.0823, -3.0575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8979, device='cuda:0', dtype=torch.float64)
tensor([-1.8900, -2.5358, -2.6926, -3.0716, -3.0490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0718, device='cuda:0', dtype=torch.float64)
tensor([-1.9134, -2.5373, -2.6820, -3.0515, -3.0891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9557, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.5261, -2.6583, -3.0314, -3.0759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7287, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.5284, -2.6347, -3.0141, -3.0240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2033, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.5496, -2.6422, -3.0190, -3.0969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2852, device='cuda:0', dtype=torch.float64)
tensor([-1.8006, -2.5763, -2.6806, -3.0281, -3.0939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2258, device='cuda:0', dtype=torch.float64)
tensor([-1.7960, -2.6154, -2.7037, -3.0219, -3.0748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1365, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.6307, -2.7036, -2.9961, -3.1317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9788, device='cuda:0', dtype=torch.float64)
tensor([-1.8853, -2.6377, -2.6708, -2.9922, -3.1049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7987, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6102, -2.6518, -3.0410, -3.0108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9233, device='cuda:0', dtype=torch.float64)
tensor([-1.8107, -2.5755, -2.6723, -3.1153, -3.0098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9940, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.5681, -2.7025, -3.1608, -3.0377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0293, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.5736, -2.7355, -3.1295, -3.0246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1358, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.5769, -2.7580, -3.0746, -3.0312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2677, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.5878, -2.7415, -3.0038, -3.0331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9528, device='cuda:0', dtype=torch.float64)
tensor([-1.7851, -2.5934, -2.7420, -2.9979, -3.0159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9424, device='cuda:0', dtype=torch.float64)
tensor([-1.7251, -2.5718, -2.7600, -3.0488, -3.0419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8538, device='cuda:0', dtype=torch.float64)
tensor([-1.7822, -2.5680, -2.7409, -3.0185, -3.1198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8246, device='cuda:0', dtype=torch.float64)
tensor([-1.8842, -2.5742, -2.7090, -2.9807, -3.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0010, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.5512, -2.7010, -3.0056, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9909, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.5461, -2.6892, -3.0421, -3.0628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0632, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.5533, -2.6705, -3.0431, -3.0781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1834, device='cuda:0', dtype=torch.float64)
tensor([-1.8738, -2.5821, -2.6383, -3.0143, -3.0616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2613, device='cuda:0', dtype=torch.float64)
tensor([-1.8767, -2.5948, -2.6494, -3.0222, -3.1113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0650, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.5996, -2.6673, -3.0315, -3.1289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8707, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6182, -2.6610, -3.0087, -3.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6519, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6138, -2.6631, -2.9987, -3.0566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8610, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.5664, -2.6884, -3.0189, -3.0803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1687, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.5014, -2.7123, -3.0780, -3.0599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8749, device='cuda:0', dtype=torch.float64)
tensor([-1.8061, -2.4774, -2.7364, -3.1631, -3.0402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0780, device='cuda:0', dtype=torch.float64)
tensor([-1.7932, -2.4998, -2.7535, -3.1879, -3.0425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9410, device='cuda:0', dtype=torch.float64)
tensor([-1.8103, -2.5909, -2.7099, -3.1079, -2.9936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1619, device='cuda:0', dtype=torch.float64)
tensor([-1.8747, -2.6903, -2.6577, -3.0184, -3.0094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9566, device='cuda:0', dtype=torch.float64)
tensor([-1.8818, -2.7337, -2.6450, -2.9929, -3.0181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7035, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.7006, -2.6814, -3.0304, -3.0223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8971, device='cuda:0', dtype=torch.float64)
tensor([-1.7846, -2.6294, -2.7292, -3.0692, -3.0900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9371, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.5641, -2.7376, -3.0610, -3.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1606, device='cuda:0', dtype=torch.float64)
tensor([-1.8657, -2.5063, -2.7215, -3.0039, -3.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1500, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.4875, -2.7140, -2.9830, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9441, device='cuda:0', dtype=torch.float64)
tensor([-1.8110, -2.5123, -2.6951, -2.9800, -3.0497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2577, device='cuda:0', dtype=torch.float64)
tensor([-1.7823, -2.5703, -2.6839, -2.9966, -3.0106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8008, device='cuda:0', dtype=torch.float64)
tensor([-1.8140, -2.6193, -2.6824, -3.0236, -3.0472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1548, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.5987, -2.7018, -3.0515, -3.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7635, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.5314, -2.7259, -3.0954, -3.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7488, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.4874, -2.7150, -3.1096, -3.0765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9586, device='cuda:0', dtype=torch.float64)
tensor([-1.8080, -2.4912, -2.6632, -3.0649, -2.9915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8268, device='cuda:0', dtype=torch.float64)
tensor([-1.8098, -2.5302, -2.6090, -2.9973, -2.9586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7359, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.5970, -2.6016, -2.9731, -3.0106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7605, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.6185, -2.6848, -3.0324, -3.1232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7683, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6235, -2.7967, -3.0864, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1243, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.6631, -2.7393, -3.0726, -3.2877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1396, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.6869, -2.6388, -3.0126, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7172, device='cuda:0', dtype=torch.float64)
tensor([-1.7053, -2.6448, -2.6127, -3.0207, -3.0501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8305, device='cuda:0', dtype=torch.float64)
tensor([-1.7057, -2.6078, -2.5944, -3.0312, -3.0274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3254, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6026, -2.5549, -2.9529, -3.0335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7359, device='cuda:0', dtype=torch.float64)
tensor([-1.9201, -2.6005, -2.5797, -2.9628, -3.1436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0098, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.5656, -2.6843, -3.0916, -3.1393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2068, device='cuda:0', dtype=torch.float64)
tensor([-1.7783, -2.5656, -2.7629, -3.1718, -3.0073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3680, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.5759, -2.7882, -3.1312, -2.9986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2592, device='cuda:0', dtype=torch.float64)
tensor([-1.9011, -2.6042, -2.7748, -3.0187, -3.0129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8137, device='cuda:0', dtype=torch.float64)
tensor([-1.8863, -2.5637, -2.8057, -3.0186, -3.0685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7358, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.4963, -2.8279, -3.0817, -3.1213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7834, device='cuda:0', dtype=torch.float64)
tensor([-1.7949, -2.4625, -2.7822, -3.1032, -3.1053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9518, device='cuda:0', dtype=torch.float64)
tensor([-1.7918, -2.4795, -2.6859, -3.0605, -3.0889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7655, device='cuda:0', dtype=torch.float64)
tensor([-1.8050, -2.5361, -2.6102, -3.0066, -3.0794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7673, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.5736, -2.5983, -2.9942, -3.0604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6850, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.5898, -2.6475, -3.0317, -3.0830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7833, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6146, -2.7132, -3.0762, -3.0971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1113, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6405, -2.7316, -3.0639, -3.0915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9225, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6571, -2.7165, -3.0216, -3.1013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8089, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6491, -2.7204, -3.0411, -3.0748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9846, device='cuda:0', dtype=torch.float64)
tensor([-1.7906, -2.6223, -2.7467, -3.0878, -3.0343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9712, device='cuda:0', dtype=torch.float64)
tensor([-1.7684, -2.5971, -2.7480, -3.0955, -2.9812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4849, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.5867, -2.6890, -3.0534, -3.0141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4852, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.5711, -2.6450, -3.0554, -3.0667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0844, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.5328, -2.6483, -3.1147, -3.0679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2613, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.5035, -2.6868, -3.1326, -3.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1660, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.5390, -2.6734, -3.0069, -3.1349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8855, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.5829, -2.6729, -2.8683, -3.1139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0818, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.5856, -2.7204, -2.8556, -3.1396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2092, device='cuda:0', dtype=torch.float64)
tensor([-1.7749, -2.5718, -2.7790, -2.9388, -3.1158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8793, device='cuda:0', dtype=torch.float64)
tensor([-1.7702, -2.5702, -2.8017, -3.0183, -3.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1455, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.5993, -2.7771, -3.0690, -3.1192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2382, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.6404, -2.7290, -3.1116, -3.0468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3162, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6721, -2.6760, -3.0702, -2.9476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2219, device='cuda:0', dtype=torch.float64)
tensor([-1.8848, -2.6640, -2.6372, -3.0523, -2.9858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3952, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.6226, -2.6141, -3.0507, -3.0376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0082, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.5389, -2.6543, -3.0932, -3.0198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2115, device='cuda:0', dtype=torch.float64)
tensor([-1.7576, -2.4709, -2.7020, -3.1153, -3.0391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1272, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.4692, -2.6520, -3.0156, -3.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3601, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.5213, -2.5867, -2.9184, -3.0751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2309, device='cuda:0', dtype=torch.float64)
tensor([-1.7592, -2.5575, -2.6193, -2.9813, -3.0490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0762, device='cuda:0', dtype=torch.float64)
tensor([-1.7223, -2.5867, -2.7027, -3.1181, -3.1040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4502, device='cuda:0', dtype=torch.float64)
tensor([-1.8103, -2.6459, -2.7124, -3.1692, -3.1320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8676, device='cuda:0', dtype=torch.float64)
tensor([-1.9300, -2.6688, -2.7091, -3.1722, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4928, device='cuda:0', dtype=torch.float64)
tensor([-1.9400, -2.6191, -2.7412, -3.1709, -3.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0820, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.5689, -2.7635, -3.1677, -3.0334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1910, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.5551, -2.7434, -3.1209, -2.9568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9794, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.5644, -2.7139, -3.0332, -2.9989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1689, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.5845, -2.6861, -2.9694, -3.0186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2147, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.5586, -2.7014, -2.9555, -3.0920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4579, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.5620, -2.7159, -2.9658, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8112, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.5902, -2.6780, -2.9499, -3.1200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8939, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.6108, -2.6256, -2.9722, -3.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0453, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.6044, -2.5932, -3.0302, -3.0869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9556, device='cuda:0', dtype=torch.float64)
tensor([-1.7694, -2.5752, -2.6318, -3.0864, -3.0979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8799, device='cuda:0', dtype=torch.float64)
tensor([-1.7816, -2.5688, -2.6471, -3.0632, -3.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3846, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -2.6064, -2.6258, -2.9857, -3.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5510, device='cuda:0', dtype=torch.float64)
tensor([-1.9024, -2.6137, -2.6641, -2.9770, -3.1092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9502, device='cuda:0', dtype=torch.float64)
tensor([-1.7835, -2.5803, -2.7576, -3.0640, -2.9901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0187, device='cuda:0', dtype=torch.float64)
tensor([-1.7450, -2.5638, -2.8187, -3.1237, -2.9452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0813, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.5600, -2.8162, -3.1307, -3.0208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2444, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -2.5648, -2.8133, -3.1403, -3.1013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2050, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.5573, -2.8437, -3.1290, -3.0904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3518, device='cuda:0', dtype=torch.float64)
tensor([-1.7607, -2.5584, -2.8403, -3.1002, -3.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2058, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6210, -2.7095, -2.9415, -3.0704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1383, device='cuda:0', dtype=torch.float64)
tensor([-1.9122, -2.6671, -2.5990, -2.8387, -3.0950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2228, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.6389, -2.5894, -2.9255, -3.1188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8065, device='cuda:0', dtype=torch.float64)
tensor([-1.7749, -2.5788, -2.6294, -3.1296, -3.1054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1631, device='cuda:0', dtype=torch.float64)
tensor([-1.7707, -2.5418, -2.6505, -3.2281, -3.1356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3398, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.5636, -2.6094, -3.1430, -3.1078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0660, device='cuda:0', dtype=torch.float64)
tensor([-1.9024, -2.6133, -2.5769, -3.0379, -3.0655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0909, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.6199, -2.6413, -3.0568, -3.0010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1314, device='cuda:0', dtype=torch.float64)
tensor([-1.7433, -2.5839, -2.7516, -3.1641, -2.9581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9358, device='cuda:0', dtype=torch.float64)
tensor([-1.7584, -2.5748, -2.7975, -3.1396, -2.9666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2917, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.5717, -2.7969, -3.0261, -3.0351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0757, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.5631, -2.7771, -2.9349, -3.0435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9508, device='cuda:0', dtype=torch.float64)
tensor([-1.8591, -2.5383, -2.7724, -2.9164, -3.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2689, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.5010, -2.7857, -2.9467, -3.0870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2145, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.4985, -2.7623, -2.9481, -3.1101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6633, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.5518, -2.6938, -2.9160, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8367, device='cuda:0', dtype=torch.float64)
tensor([-1.8783, -2.6262, -2.6335, -2.9474, -3.1285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9391, device='cuda:0', dtype=torch.float64)
tensor([-1.8059, -2.6582, -2.6149, -3.0650, -3.0410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7252, device='cuda:0', dtype=torch.float64)
tensor([-1.7558, -2.6447, -2.6420, -3.1947, -3.0228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7596, device='cuda:0', dtype=torch.float64)
tensor([-1.7787, -2.6013, -2.6655, -3.2119, -3.0360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0570, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -2.5772, -2.6544, -3.1142, -3.0781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1272, device='cuda:0', dtype=torch.float64)
tensor([-1.9181, -2.5437, -2.6697, -3.0730, -3.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8703, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.5244, -2.6966, -3.0934, -3.1143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5340, device='cuda:0', dtype=torch.float64)
tensor([-1.7265, -2.5404, -2.7177, -3.1076, -3.0748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1276, device='cuda:0', dtype=torch.float64)
tensor([-1.7758, -2.6079, -2.6972, -3.0140, -3.1392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8949, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.6789, -2.6559, -2.9127, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2635, device='cuda:0', dtype=torch.float64)
tensor([-1.9236, -2.6827, -2.6678, -2.8993, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7695, device='cuda:0', dtype=torch.float64)
tensor([-1.9100, -2.6383, -2.7189, -2.9710, -3.1225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8700, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.6025, -2.7267, -3.0281, -3.0255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8142, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.5741, -2.7002, -3.0275, -2.9809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7388, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.5644, -2.6688, -3.0233, -2.9580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9441, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.5556, -2.6658, -3.0454, -2.9569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7357, device='cuda:0', dtype=torch.float64)
tensor([-1.7381, -2.5412, -2.7191, -3.0939, -2.9677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7199, device='cuda:0', dtype=torch.float64)
tensor([-1.7508, -2.5371, -2.7522, -3.0989, -3.0591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1932, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.5794, -2.7126, -3.0435, -3.1382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9991, device='cuda:0', dtype=torch.float64)
tensor([-1.8997, -2.6098, -2.7083, -3.0607, -3.1454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2312, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.6175, -2.7333, -3.1505, -3.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9815, device='cuda:0', dtype=torch.float64)
tensor([-1.7650, -2.6128, -2.7513, -3.2175, -3.0505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8089, device='cuda:0', dtype=torch.float64)
tensor([-1.7796, -2.6335, -2.6979, -3.1431, -2.9733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8578, device='cuda:0', dtype=torch.float64)
tensor([-1.8753, -2.6368, -2.6427, -3.0475, -3.0083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8284, device='cuda:0', dtype=torch.float64)
tensor([-1.8889, -2.5834, -2.6614, -3.0462, -3.0700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0591, device='cuda:0', dtype=torch.float64)
tensor([-1.8067, -2.5266, -2.7049, -3.1026, -3.0554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8270, device='cuda:0', dtype=torch.float64)
tensor([-1.7797, -2.4941, -2.7270, -3.1211, -3.1059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9512, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.5395, -2.6819, -3.0351, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2792, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.5943, -2.6302, -2.9400, -3.1245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4689, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.5991, -2.6478, -2.9925, -3.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6887, device='cuda:0', dtype=torch.float64)
tensor([-1.8053, -2.5896, -2.6753, -3.0504, -3.0626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8670, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6022, -2.6678, -3.0075, -3.0353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8647, device='cuda:0', dtype=torch.float64)
tensor([-1.8986, -2.6107, -2.6629, -2.9319, -3.0711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9097, device='cuda:0', dtype=torch.float64)
tensor([-1.8880, -2.5887, -2.7171, -2.9443, -3.1165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1072, device='cuda:0', dtype=torch.float64)
tensor([-1.7857, -2.5633, -2.7772, -3.0010, -3.0555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1145, device='cuda:0', dtype=torch.float64)
tensor([-1.7493, -2.5417, -2.8220, -3.0466, -3.0792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0277, device='cuda:0', dtype=torch.float64)
tensor([-1.8037, -2.5751, -2.7655, -3.0114, -3.1266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1421, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.6400, -2.6664, -2.9751, -3.1367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1669, device='cuda:0', dtype=torch.float64)
tensor([-1.8775, -2.6505, -2.6298, -3.0541, -3.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0565, device='cuda:0', dtype=torch.float64)
tensor([-1.7947, -2.6073, -2.6591, -3.1955, -3.0892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3478, device='cuda:0', dtype=torch.float64)
tensor([-1.7493, -2.6066, -2.6371, -3.1973, -2.9527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1684, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.6040, -2.6146, -3.1094, -2.9723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9653, device='cuda:0', dtype=torch.float64)
tensor([-1.9035, -2.5978, -2.6607, -3.0706, -2.9847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2645, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.5833, -2.7119, -3.0568, -2.9269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0680, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.5351, -2.7672, -3.0565, -3.0023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0624, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.5139, -2.7683, -3.0098, -3.1415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2558, device='cuda:0', dtype=torch.float64)
tensor([-1.8061, -2.5150, -2.7355, -2.9899, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9784, device='cuda:0', dtype=torch.float64)
tensor([-1.7690, -2.5601, -2.6870, -2.9767, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3232, device='cuda:0', dtype=torch.float64)
tensor([-1.7936, -2.5981, -2.6736, -2.9993, -3.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5035, device='cuda:0', dtype=torch.float64)
tensor([-1.8035, -2.6295, -2.6813, -3.0076, -3.1945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7808, device='cuda:0', dtype=torch.float64)
tensor([-1.7846, -2.6168, -2.7140, -3.0552, -3.0905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2168, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.5747, -2.7438, -3.0889, -3.0887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9441, device='cuda:0', dtype=torch.float64)
tensor([-1.8933, -2.5559, -2.7305, -3.0697, -3.0532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2425, device='cuda:0', dtype=torch.float64)
tensor([-1.9366, -2.5792, -2.6681, -3.0049, -2.9830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3911, device='cuda:0', dtype=torch.float64)
tensor([-1.9126, -2.5826, -2.6726, -3.0376, -2.9786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8740, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.5630, -2.7183, -3.1007, -2.9874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0765, device='cuda:0', dtype=torch.float64)
tensor([-1.7778, -2.5572, -2.7355, -3.1167, -2.9680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1732, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.5585, -2.7182, -3.0854, -3.0331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1820, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.5756, -2.7169, -3.0621, -3.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4282, device='cuda:0', dtype=torch.float64)
tensor([-1.7707, -2.5787, -2.7366, -3.0264, -3.0354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0489, device='cuda:0', dtype=torch.float64)
tensor([-1.7868, -2.5934, -2.7235, -3.0051, -3.0676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2211, device='cuda:0', dtype=torch.float64)
tensor([-1.8877, -2.6094, -2.6761, -2.9567, -3.1680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3641, device='cuda:0', dtype=torch.float64)
tensor([-1.8890, -2.6277, -2.6434, -2.9506, -3.1461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8076, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6116, -2.6692, -3.0066, -3.1444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4127, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.5877, -2.7128, -3.0690, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1512, device='cuda:0', dtype=torch.float64)
tensor([-1.8074, -2.6051, -2.6902, -3.0437, -3.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1207, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6021, -2.6676, -3.0368, -3.0337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8301, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.5705, -2.6973, -3.0920, -2.9917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0604, device='cuda:0', dtype=torch.float64)
tensor([-1.7866, -2.5417, -2.7366, -3.1055, -2.9463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7839, device='cuda:0', dtype=torch.float64)
tensor([-1.7960, -2.5302, -2.7531, -3.1046, -2.9885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6711, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.5516, -2.7367, -3.0687, -3.0912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8744, device='cuda:0', dtype=torch.float64)
tensor([-1.8829, -2.5754, -2.6739, -3.0069, -3.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8457, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.5887, -2.6318, -3.0160, -3.0769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9212, device='cuda:0', dtype=torch.float64)
tensor([-1.7954, -2.5800, -2.6271, -3.0702, -3.0677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9070, device='cuda:0', dtype=torch.float64)
tensor([-1.7813, -2.5927, -2.6256, -3.0853, -3.0342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6655, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.5959, -2.6239, -3.0615, -3.0584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7383, device='cuda:0', dtype=torch.float64)
tensor([-1.8909, -2.5736, -2.6703, -3.0480, -3.0954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8007, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.5626, -2.7228, -3.0508, -3.0509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8379, device='cuda:0', dtype=torch.float64)
tensor([-1.7800, -2.5816, -2.7451, -3.0379, -3.0181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6732, device='cuda:0', dtype=torch.float64)
tensor([-1.7696, -2.6063, -2.7269, -2.9909, -3.0104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8099, device='cuda:0', dtype=torch.float64)
tensor([-1.7977, -2.6012, -2.7015, -2.9537, -3.0455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8483, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.5853, -2.6946, -2.9596, -3.1072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8497, device='cuda:0', dtype=torch.float64)
tensor([-1.8103, -2.5606, -2.7222, -3.0185, -3.1635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0054, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.5681, -2.7282, -3.0119, -3.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7874, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.5971, -2.7052, -2.9497, -3.0937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9026, device='cuda:0', dtype=torch.float64)
tensor([-1.8852, -2.5906, -2.7121, -2.9513, -3.0455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9090, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.5650, -2.7283, -2.9902, -3.0205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9130, device='cuda:0', dtype=torch.float64)
tensor([-1.8885, -2.5396, -2.7068, -3.0261, -3.0329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0780, device='cuda:0', dtype=torch.float64)
tensor([-1.8758, -2.5421, -2.6857, -3.0793, -3.0813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7156, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.5750, -2.6472, -3.1039, -3.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9928, device='cuda:0', dtype=torch.float64)
tensor([-1.8072, -2.6141, -2.6090, -3.1210, -3.0915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9198, device='cuda:0', dtype=torch.float64)
tensor([-1.7699, -2.5833, -2.6374, -3.1555, -3.1170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2493, device='cuda:0', dtype=torch.float64)
tensor([-1.7809, -2.5654, -2.6834, -3.1499, -3.1404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9952, device='cuda:0', dtype=torch.float64)
tensor([-1.7887, -2.5556, -2.7218, -3.1088, -3.1004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1711, device='cuda:0', dtype=torch.float64)
tensor([-1.7947, -2.5430, -2.7514, -3.1002, -3.0731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6726, device='cuda:0', dtype=torch.float64)
tensor([-1.8019, -2.5599, -2.7482, -3.0914, -3.0437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1145, device='cuda:0', dtype=torch.float64)
tensor([-1.8021, -2.6092, -2.6897, -3.0596, -2.9732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9622, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.6345, -2.6668, -3.0607, -3.0276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6275, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6253, -2.6833, -3.1210, -3.0717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1135, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6206, -2.7229, -3.1259, -3.0486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1020, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6220, -2.7200, -3.0554, -3.0659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0556, device='cuda:0', dtype=torch.float64)
tensor([-1.9085, -2.6069, -2.7044, -2.9789, -3.1102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2163, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.5614, -2.7175, -2.9555, -3.0377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9774, device='cuda:0', dtype=torch.float64)
tensor([-1.7676, -2.5282, -2.7523, -3.0008, -3.0145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3395, device='cuda:0', dtype=torch.float64)
tensor([-1.7835, -2.5362, -2.7535, -3.0199, -3.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5263, device='cuda:0', dtype=torch.float64)
tensor([-1.8658, -2.6048, -2.6526, -2.9416, -3.0960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0387, device='cuda:0', dtype=torch.float64)
tensor([-1.9100, -2.6300, -2.6121, -2.9662, -3.1407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7948, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6009, -2.6565, -3.1174, -3.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3636, device='cuda:0', dtype=torch.float64)
tensor([-1.7308, -2.5923, -2.6820, -3.2090, -3.0278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7221, device='cuda:0', dtype=torch.float64)
tensor([-1.8119, -2.6277, -2.6361, -3.1305, -2.9899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1043, device='cuda:0', dtype=torch.float64)
tensor([-1.9624, -2.6238, -2.6393, -3.0561, -3.0641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1369, device='cuda:0', dtype=torch.float64)
tensor([-1.9151, -2.5693, -2.6998, -3.0347, -3.0122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2907, device='cuda:0', dtype=torch.float64)
tensor([-1.7852, -2.4907, -2.8189, -3.0813, -3.0067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1875, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.4746, -2.8289, -3.0240, -3.1229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1864, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.5196, -2.7490, -2.8908, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8854, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.5686, -2.7001, -2.8734, -3.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8617, device='cuda:0', dtype=torch.float64)
tensor([-1.7224, -2.5964, -2.7142, -2.9827, -3.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9866, device='cuda:0', dtype=torch.float64)
tensor([-1.6869, -2.6441, -2.7012, -3.0705, -3.1278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9235, device='cuda:0', dtype=torch.float64)
tensor([-1.7800, -2.7073, -2.6469, -3.0559, -3.0908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8428, device='cuda:0', dtype=torch.float64)
tensor([-1.8883, -2.7188, -2.6446, -3.0693, -3.0983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8183, device='cuda:0', dtype=torch.float64)
tensor([-1.8854, -2.6670, -2.7025, -3.1433, -3.0375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6829, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.5940, -2.7385, -3.1681, -2.9266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8631, device='cuda:0', dtype=torch.float64)
tensor([-1.8814, -2.5488, -2.7089, -3.0780, -2.9275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([-1.9479, -2.5369, -2.6424, -2.9389, -2.9391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0059, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.4909, -2.6440, -2.9375, -2.9504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8241, device='cuda:0', dtype=torch.float64)
tensor([-1.7960, -2.4740, -2.6752, -3.0093, -3.0295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7344, device='cuda:0', dtype=torch.float64)
tensor([-1.7981, -2.5173, -2.6496, -3.0156, -3.1465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6784, device='cuda:0', dtype=torch.float64)
tensor([-1.8038, -2.5686, -2.6128, -2.9900, -3.2143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9736, device='cuda:0', dtype=torch.float64)
tensor([-1.8069, -2.6049, -2.6158, -2.9766, -3.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6332, device='cuda:0', dtype=torch.float64)
tensor([-1.7223, -2.5941, -2.6843, -3.0506, -3.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7228, device='cuda:0', dtype=torch.float64)
tensor([-1.7215, -2.5878, -2.7511, -3.1077, -3.0980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8233, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.6157, -2.7386, -3.0780, -3.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9942, device='cuda:0', dtype=torch.float64)
tensor([-1.9691, -2.6363, -2.7039, -3.0901, -3.1005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0887, device='cuda:0', dtype=torch.float64)
tensor([-1.9140, -2.6227, -2.7165, -3.1624, -3.0783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9588, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.6207, -2.7018, -3.1717, -3.0725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8236, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6425, -2.6431, -3.0587, -3.0414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8895, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6549, -2.6107, -2.9305, -3.0057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1632, device='cuda:0', dtype=torch.float64)
tensor([-1.8129, -2.6152, -2.6615, -2.9182, -3.0167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9071, device='cuda:0', dtype=torch.float64)
tensor([-1.7576, -2.5663, -2.7594, -3.0157, -2.9908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9667, device='cuda:0', dtype=torch.float64)
tensor([-1.7654, -2.5431, -2.8172, -3.0757, -2.9700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1263, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.5482, -2.8348, -3.1296, -3.1019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4614, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.5918, -2.7695, -3.0815, -3.0823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1611, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.6430, -2.6460, -3.0036, -3.0529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3452, device='cuda:0', dtype=torch.float64)
tensor([-1.8952, -2.6473, -2.5823, -3.0069, -3.1147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2288, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6093, -2.5846, -3.0578, -3.0971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7127, device='cuda:0', dtype=torch.float64)
tensor([-1.7725, -2.5287, -2.6615, -3.1111, -3.0933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0183, device='cuda:0', dtype=torch.float64)
tensor([-1.7895, -2.4578, -2.7648, -3.1299, -3.1791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1097, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.4630, -2.7999, -3.0565, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9038, device='cuda:0', dtype=torch.float64)
tensor([-1.8980, -2.5023, -2.7810, -2.9886, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9417, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.5421, -2.7534, -3.0026, -3.1118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0381, device='cuda:0', dtype=torch.float64)
tensor([-1.7849, -2.5998, -2.6964, -3.0245, -3.0112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5813, device='cuda:0', dtype=torch.float64)
tensor([-1.7707, -2.6484, -2.6466, -3.0536, -2.9877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8400, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6681, -2.6230, -3.0906, -3.0826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1720, device='cuda:0', dtype=torch.float64)
tensor([-1.8651, -2.6643, -2.6177, -3.0721, -3.0970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6430, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.6401, -2.6303, -3.0204, -3.0559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4757, device='cuda:0', dtype=torch.float64)
tensor([-1.8645, -2.5827, -2.6582, -3.0413, -3.0716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0230, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.5703, -2.6339, -3.0083, -3.0204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8802, device='cuda:0', dtype=torch.float64)
tensor([-1.8736, -2.5614, -2.6080, -2.9729, -2.9764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4660, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.5291, -2.6822, -3.0201, -3.0103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8637, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.5145, -2.7423, -3.0653, -3.0317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1737, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.5495, -2.7725, -3.0804, -3.0687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1471, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.5834, -2.8096, -3.1292, -3.1886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7651, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.5906, -2.8247, -3.1533, -3.1779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9444, device='cuda:0', dtype=torch.float64)
tensor([-1.7624, -2.5961, -2.7796, -3.1053, -3.0856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2390, device='cuda:0', dtype=torch.float64)
tensor([-1.7851, -2.6230, -2.7073, -3.0179, -3.0456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8821, device='cuda:0', dtype=torch.float64)
tensor([-1.8051, -2.6217, -2.6697, -2.9537, -3.0174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0118, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.6096, -2.6723, -2.9649, -2.9922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2107, device='cuda:0', dtype=torch.float64)
tensor([-1.8904, -2.6052, -2.6924, -3.0117, -3.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2088, device='cuda:0', dtype=torch.float64)
tensor([-1.9717, -2.6491, -2.6659, -2.9915, -3.1327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8670, device='cuda:0', dtype=torch.float64)
tensor([-1.9246, -2.6418, -2.6609, -3.0200, -3.1419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9469, device='cuda:0', dtype=torch.float64)
tensor([-1.7774, -2.6138, -2.6781, -3.1006, -3.1105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9587, device='cuda:0', dtype=torch.float64)
tensor([-1.6801, -2.5797, -2.6784, -3.1136, -3.0627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1404, device='cuda:0', dtype=torch.float64)
tensor([-1.7398, -2.5665, -2.6242, -3.0637, -3.0815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8617, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.5234, -2.6256, -3.0554, -3.1320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9368, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.4733, -2.6964, -3.1105, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6697, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.4770, -2.7351, -3.1109, -3.0143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2402, device='cuda:0', dtype=torch.float64)
tensor([-1.9256, -2.5626, -2.6887, -3.0160, -2.9891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7536, device='cuda:0', dtype=torch.float64)
tensor([-2.0273, -2.6380, -2.6535, -2.9445, -2.9994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2117, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.6284, -2.6905, -2.9762, -2.9348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0928, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.5679, -2.7501, -3.0444, -2.9551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-1.7971, -2.5259, -2.7965, -3.0565, -3.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6810, device='cuda:0', dtype=torch.float64)
tensor([-1.7843, -2.5643, -2.7436, -2.9685, -3.0540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9922, device='cuda:0', dtype=torch.float64)
tensor([-1.7909, -2.5964, -2.7135, -2.9643, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3363, device='cuda:0', dtype=torch.float64)
tensor([-1.8020, -2.6116, -2.7014, -3.0192, -3.2200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3481, device='cuda:0', dtype=torch.float64)
tensor([-1.7520, -2.6338, -2.6730, -3.0911, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1268, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6824, -2.6083, -3.1004, -3.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9475, device='cuda:0', dtype=torch.float64)
tensor([-1.9265, -2.6926, -2.5860, -3.1149, -3.2018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5419, device='cuda:0', dtype=torch.float64)
tensor([-1.8643, -2.6509, -2.6266, -3.0851, -3.1107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6469, device='cuda:0', dtype=torch.float64)
tensor([-1.7669, -2.5690, -2.7299, -3.0795, -3.0613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1922, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.5245, -2.7661, -3.0042, -3.1163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0812, device='cuda:0', dtype=torch.float64)
tensor([-1.8696, -2.5316, -2.7428, -2.9143, -3.0821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0688, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.5300, -2.7674, -2.9716, -3.0475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0089, device='cuda:0', dtype=torch.float64)
tensor([-1.7357, -2.5251, -2.7990, -3.0817, -2.9932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8238, device='cuda:0', dtype=torch.float64)
tensor([-1.7722, -2.5594, -2.7346, -3.0821, -2.9881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0741, device='cuda:0', dtype=torch.float64)
tensor([-1.8738, -2.5805, -2.6471, -3.0404, -3.0134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5719, device='cuda:0', dtype=torch.float64)
tensor([-1.9154, -2.5737, -2.5975, -3.0332, -2.9978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7812, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.5386, -2.6492, -3.1288, -3.0125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9858, device='cuda:0', dtype=torch.float64)
tensor([-1.8850, -2.5568, -2.6741, -3.1273, -3.0201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1913, device='cuda:0', dtype=torch.float64)
tensor([-1.8784, -2.5879, -2.6948, -3.0808, -3.0625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4670, device='cuda:0', dtype=torch.float64)
tensor([-1.8865, -2.6238, -2.7056, -3.0338, -3.1365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9265, device='cuda:0', dtype=torch.float64)
tensor([-1.7809, -2.6308, -2.7675, -3.0833, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8662, device='cuda:0', dtype=torch.float64)
tensor([-1.7091, -2.6197, -2.8147, -3.1215, -3.1956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0851, device='cuda:0', dtype=torch.float64)
tensor([-1.7937, -2.6545, -2.7330, -3.0103, -3.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0276, device='cuda:0', dtype=torch.float64)
tensor([-1.8810, -2.6475, -2.6749, -2.9416, -3.1264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1394, device='cuda:0', dtype=torch.float64)
tensor([-1.8743, -2.5673, -2.6776, -3.0173, -3.0452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1951, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.4991, -2.6922, -3.1373, -2.9247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9193, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.4950, -2.6820, -3.2310, -2.9367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1738, device='cuda:0', dtype=torch.float64)
tensor([-1.9105, -2.5474, -2.6633, -3.2312, -2.9877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2023, device='cuda:0', dtype=torch.float64)
tensor([-1.8890, -2.6374, -2.6391, -3.1344, -2.9982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5278, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.6778, -2.6761, -3.1075, -3.0972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0532, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6862, -2.6650, -3.0395, -3.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0182, device='cuda:0', dtype=torch.float64)
tensor([-1.7880, -2.6390, -2.6946, -2.9986, -3.1400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8265, device='cuda:0', dtype=torch.float64)
tensor([-1.7872, -2.5725, -2.7086, -2.9686, -3.1230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9305, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.5138, -2.6956, -2.9078, -3.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9861, device='cuda:0', dtype=torch.float64)
tensor([-1.9215, -2.4962, -2.6992, -2.8900, -3.0821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1731, device='cuda:0', dtype=torch.float64)
tensor([-1.9242, -2.4892, -2.7543, -2.9876, -3.0591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9121, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.5165, -2.8122, -3.1243, -3.0318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9576, device='cuda:0', dtype=torch.float64)
tensor([-1.8051, -2.5693, -2.7901, -3.1296, -3.0339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7752, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6312, -2.7240, -3.0162, -3.0770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1713, device='cuda:0', dtype=torch.float64)
tensor([-1.7909, -2.6522, -2.6784, -2.9469, -3.0574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1116, device='cuda:0', dtype=torch.float64)
tensor([-1.6821, -2.6403, -2.7096, -2.9747, -2.9891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7265, device='cuda:0', dtype=torch.float64)
tensor([-1.7436, -2.5899, -2.6949, -3.0069, -3.0756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1952, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.5626, -2.6839, -3.0738, -3.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1490, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.5727, -2.6791, -3.1312, -3.1419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2822, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.6252, -2.6846, -3.1426, -3.1519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0732, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.6933, -2.6783, -3.0876, -3.1166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0172, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.7180, -2.6407, -3.0047, -3.0107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9032, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.6713, -2.6277, -2.9819, -2.9784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8542, device='cuda:0', dtype=torch.float64)
tensor([-1.8761, -2.5646, -2.6533, -3.0598, -2.9966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0759, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.4859, -2.6864, -3.1480, -3.0056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8451, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.4558, -2.7152, -3.1615, -3.0125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0692, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.4954, -2.7146, -3.0910, -3.0925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0757, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.5537, -2.7018, -3.0150, -3.0744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8766, device='cuda:0', dtype=torch.float64)
tensor([-1.7925, -2.5764, -2.7294, -2.9820, -3.0804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7960, device='cuda:0', dtype=torch.float64)
tensor([-1.8019, -2.5545, -2.7458, -2.9680, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.5212, -2.7259, -2.9489, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7359, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.5223, -2.6975, -2.9309, -3.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1961, device='cuda:0', dtype=torch.float64)
tensor([-1.8681, -2.5576, -2.7066, -2.9757, -3.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2196, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.6424, -2.6977, -3.0453, -3.0769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0388, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.7111, -2.7146, -3.1575, -3.0506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8446, device='cuda:0', dtype=torch.float64)
tensor([-1.8133, -2.7184, -2.7546, -3.2269, -3.0463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0997, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.6997, -2.7233, -3.1477, -3.0108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9353, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.6490, -2.6565, -3.0494, -2.9926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9574, device='cuda:0', dtype=torch.float64)
tensor([-1.8899, -2.5775, -2.6087, -3.0064, -2.9722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8317, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.5034, -2.6299, -3.0455, -2.9729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8735, device='cuda:0', dtype=torch.float64)
tensor([-1.7620, -2.4873, -2.6782, -3.0945, -2.9875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6915, device='cuda:0', dtype=torch.float64)
tensor([-1.8030, -2.5269, -2.7026, -3.0737, -3.0918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7331, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.5799, -2.7270, -3.0664, -3.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9471, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.6167, -2.7387, -3.0443, -3.2528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8177, device='cuda:0', dtype=torch.float64)
tensor([-1.8053, -2.6088, -2.7273, -3.0192, -3.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0003, device='cuda:0', dtype=torch.float64)
tensor([-1.7796, -2.5866, -2.7062, -2.9976, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6942, device='cuda:0', dtype=torch.float64)
tensor([-1.8520, -2.5923, -2.6656, -2.9417, -3.1149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1259, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.5815, -2.6936, -2.9338, -3.0355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1571, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.5487, -2.7800, -3.0050, -2.9821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5974, device='cuda:0', dtype=torch.float64)
tensor([-1.8893, -2.5386, -2.8196, -3.0575, -2.9663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7900, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.5574, -2.7727, -3.0332, -2.9735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2083, device='cuda:0', dtype=torch.float64)
tensor([-1.8991, -2.5701, -2.7191, -3.0322, -3.0612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8954, device='cuda:0', dtype=torch.float64)
tensor([-1.8130, -2.5956, -2.6633, -3.0461, -3.0904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9253, device='cuda:0', dtype=torch.float64)
tensor([-1.7137, -2.6260, -2.6503, -3.0987, -3.1447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8898, device='cuda:0', dtype=torch.float64)
tensor([-1.7296, -2.6841, -2.6163, -3.0559, -3.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8236, device='cuda:0', dtype=torch.float64)
tensor([-1.8071, -2.6968, -2.5933, -3.0058, -3.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9582, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.6452, -2.6391, -3.0370, -3.1700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0563, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.5629, -2.7243, -3.1309, -3.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8263, device='cuda:0', dtype=torch.float64)
tensor([-1.8585, -2.5096, -2.7542, -3.1545, -3.0121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2217, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -2.5140, -2.7511, -3.0699, -2.9696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1214, device='cuda:0', dtype=torch.float64)
tensor([-1.9422, -2.5506, -2.7295, -2.9764, -2.9875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8369, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.5763, -2.7504, -2.9927, -3.0016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1032, device='cuda:0', dtype=torch.float64)
tensor([-1.7588, -2.6209, -2.7833, -3.0848, -3.0213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8530, device='cuda:0', dtype=torch.float64)
tensor([-1.7453, -2.6626, -2.7729, -3.1326, -3.0580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8884, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6607, -2.7061, -3.0606, -3.0978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0435, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.6482, -2.6137, -2.9621, -3.0812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6207, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.6009, -2.5817, -2.9654, -3.0579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9133, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.5586, -2.6101, -3.0229, -3.0572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9231, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.5587, -2.6467, -3.0527, -3.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8874, device='cuda:0', dtype=torch.float64)
tensor([-1.9080, -2.5837, -2.6638, -3.0458, -3.1534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0502, device='cuda:0', dtype=torch.float64)
tensor([-1.9384, -2.5870, -2.6875, -3.0548, -3.1694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1116, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.5580, -2.7570, -3.1161, -3.1329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1660, device='cuda:0', dtype=torch.float64)
tensor([-1.7577, -2.5471, -2.8035, -3.1256, -3.0035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2789, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.5538, -2.7902, -3.0225, -3.0421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1534, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.5817, -2.7620, -2.9478, -3.1448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3063, device='cuda:0', dtype=torch.float64)
tensor([-1.8143, -2.5920, -2.7373, -2.9766, -3.0764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2307, device='cuda:0', dtype=torch.float64)
tensor([-1.7096, -2.6066, -2.7231, -3.0782, -3.0834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7391, device='cuda:0', dtype=torch.float64)
tensor([-1.7516, -2.6645, -2.6167, -3.0427, -3.1233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0601, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.7332, -2.5101, -2.9441, -3.1423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5574, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.6651, -2.5703, -2.9798, -3.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1856, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.5556, -2.7032, -3.0898, -3.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8458, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.4978, -2.7566, -3.1260, -3.0983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0510, device='cuda:0', dtype=torch.float64)
tensor([-1.8771, -2.4862, -2.7470, -3.1005, -2.9960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5263, device='cuda:0', dtype=torch.float64)
tensor([-1.9116, -2.5192, -2.7155, -3.1061, -2.9318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3061, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.5763, -2.7252, -3.1229, -2.8077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3921, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6198, -2.7568, -3.1152, -2.8705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9144, device='cuda:0', dtype=torch.float64)
tensor([-1.8869, -2.6458, -2.7632, -3.0379, -3.0307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0503, device='cuda:0', dtype=torch.float64)
tensor([-1.8930, -2.6352, -2.7460, -2.9589, -3.0883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7482, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.5820, -2.7457, -2.9430, -3.1171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2563, device='cuda:0', dtype=torch.float64)
tensor([-1.8065, -2.5284, -2.7325, -2.9652, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-1.7687, -2.5208, -2.7117, -3.0214, -3.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9684, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.5344, -2.6881, -3.0655, -3.1277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3538, device='cuda:0', dtype=torch.float64)
tensor([-1.7973, -2.5424, -2.7376, -3.0948, -3.2215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5042, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6038, -2.7114, -3.0766, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8730, device='cuda:0', dtype=torch.float64)
tensor([-1.9080, -2.6754, -2.6186, -2.9756, -3.1229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1531, device='cuda:0', dtype=torch.float64)
tensor([-1.9316, -2.6921, -2.5778, -2.9570, -3.1131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1522, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.6681, -2.5654, -2.9909, -3.0040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7971, device='cuda:0', dtype=torch.float64)
tensor([-1.7633, -2.6192, -2.6294, -3.0629, -2.9233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0394, device='cuda:0', dtype=torch.float64)
tensor([-1.8046, -2.5557, -2.7013, -3.0978, -3.0419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1543, device='cuda:0', dtype=torch.float64)
tensor([-1.9035, -2.5316, -2.7262, -3.0366, -3.1298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1537, device='cuda:0', dtype=torch.float64)
tensor([-1.9038, -2.5412, -2.7248, -2.9772, -3.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6662, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.5428, -2.7842, -3.0798, -3.0770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9825, device='cuda:0', dtype=torch.float64)
tensor([-1.7644, -2.5802, -2.8000, -3.1436, -3.0255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4110, device='cuda:0', dtype=torch.float64)
tensor([-1.7926, -2.6604, -2.7396, -3.1021, -2.9425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2576, device='cuda:0', dtype=torch.float64)
tensor([-1.9290, -2.6742, -2.7009, -3.0392, -3.0622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8652, device='cuda:0', dtype=torch.float64)
tensor([-1.9124, -2.6153, -2.7339, -3.0743, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1890, device='cuda:0', dtype=torch.float64)
tensor([-1.7686, -2.5482, -2.7491, -3.1141, -3.0683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2527, device='cuda:0', dtype=torch.float64)
tensor([-1.7343, -2.5254, -2.7172, -3.0860, -3.0771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3183, device='cuda:0', dtype=torch.float64)
tensor([-1.8150, -2.5252, -2.6477, -2.9785, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0969, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.5464, -2.5863, -2.9030, -3.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8363, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.5547, -2.5957, -2.9226, -3.0443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4327, device='cuda:0', dtype=torch.float64)
tensor([-1.8843, -2.5431, -2.6527, -2.9758, -3.1367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0582, device='cuda:0', dtype=torch.float64)
tensor([-1.9007, -2.5577, -2.6829, -3.0069, -3.1299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2135, device='cuda:0', dtype=torch.float64)
tensor([-1.8773, -2.5689, -2.6858, -3.0117, -3.0506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3737, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.5828, -2.7263, -3.1328, -3.0281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0168, device='cuda:0', dtype=torch.float64)
tensor([-1.7446, -2.6085, -2.7818, -3.2510, -2.9395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0236, device='cuda:0', dtype=torch.float64)
tensor([-1.7657, -2.6618, -2.7919, -3.2193, -2.9214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9904, device='cuda:0', dtype=torch.float64)
tensor([-1.9130, -2.6751, -2.7578, -3.1170, -3.0326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2951, device='cuda:0', dtype=torch.float64)
tensor([-2.0012, -2.6867, -2.7209, -3.0608, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0343, device='cuda:0', dtype=torch.float64)
tensor([-1.8939, -2.6642, -2.7037, -3.0680, -3.1142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4376, device='cuda:0', dtype=torch.float64)
tensor([-1.7690, -2.6212, -2.6947, -3.0839, -3.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7094, device='cuda:0', dtype=torch.float64)
tensor([-1.7744, -2.6016, -2.6109, -2.9663, -3.0991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2260, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.5972, -2.5181, -2.7976, -3.1057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9732, device='cuda:0', dtype=torch.float64)
tensor([-1.8750, -2.5511, -2.5704, -2.8143, -3.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8679, device='cuda:0', dtype=torch.float64)
tensor([-1.8012, -2.4892, -2.7269, -2.9899, -3.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1951, device='cuda:0', dtype=torch.float64)
tensor([-1.7937, -2.4698, -2.8327, -3.0978, -3.1709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0776, device='cuda:0', dtype=torch.float64)
tensor([-1.8930, -2.5252, -2.7885, -3.0560, -3.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4259, device='cuda:0', dtype=torch.float64)
tensor([-1.9342, -2.5387, -2.7520, -3.0499, -3.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0491, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.5191, -2.7358, -3.1161, -3.0199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1822, device='cuda:0', dtype=torch.float64)
tensor([-1.7273, -2.5203, -2.7096, -3.1579, -2.9314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8930, device='cuda:0', dtype=torch.float64)
tensor([-1.8127, -2.5557, -2.6415, -3.1165, -3.0137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8575, device='cuda:0', dtype=torch.float64)
tensor([-1.9140, -2.6151, -2.6114, -3.0764, -3.1331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7922, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.6313, -2.6661, -3.1142, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9020, device='cuda:0', dtype=torch.float64)
tensor([-1.7670, -2.6130, -2.7391, -3.1453, -3.0862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9398, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6202, -2.7129, -3.0178, -3.1063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1768, device='cuda:0', dtype=torch.float64)
tensor([-1.9442, -2.6495, -2.6365, -2.8548, -3.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7913, device='cuda:0', dtype=torch.float64)
tensor([-1.8651, -2.6150, -2.6627, -2.9036, -3.0095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1263, device='cuda:0', dtype=torch.float64)
tensor([-1.7515, -2.5474, -2.7666, -3.1110, -2.9959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0517, device='cuda:0', dtype=torch.float64)
tensor([-1.7826, -2.5184, -2.7839, -3.1693, -3.0415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8881, device='cuda:0', dtype=torch.float64)
tensor([-1.9335, -2.5531, -2.6898, -3.1131, -3.0871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1844, device='cuda:0', dtype=torch.float64)
tensor([-1.9940, -2.5766, -2.6406, -3.1401, -3.1133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2180, device='cuda:0', dtype=torch.float64)
tensor([-1.8075, -2.5260, -2.7046, -3.2408, -3.0207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0601, device='cuda:0', dtype=torch.float64)
tensor([-1.6788, -2.5484, -2.7485, -3.2594, -2.9238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0725, device='cuda:0', dtype=torch.float64)
tensor([-1.7905, -2.6068, -2.6995, -3.0816, -3.0247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0502, device='cuda:0', dtype=torch.float64)
tensor([-1.9462, -2.6855, -2.6356, -2.8799, -3.1008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0009, device='cuda:0', dtype=torch.float64)
tensor([-1.9248, -2.6798, -2.6644, -2.8561, -3.0738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5202, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.5950, -2.7865, -3.0550, -3.1015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0958, device='cuda:0', dtype=torch.float64)
tensor([-1.7726, -2.5496, -2.8511, -3.1768, -3.0873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8643, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.5778, -2.7526, -3.0724, -3.0045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3687, device='cuda:0', dtype=torch.float64)
tensor([-1.9217, -2.5933, -2.6614, -2.9815, -3.0726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1439, device='cuda:0', dtype=torch.float64)
tensor([-1.8856, -2.5723, -2.6663, -2.9639, -3.1356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2861, device='cuda:0', dtype=torch.float64)
tensor([-1.7805, -2.5504, -2.6500, -2.9759, -3.0829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1233, device='cuda:0', dtype=torch.float64)
tensor([-1.7984, -2.5301, -2.6276, -2.9736, -3.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1147, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.5153, -2.6084, -2.9877, -3.2442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3296, device='cuda:0', dtype=torch.float64)
tensor([-1.8135, -2.5241, -2.6101, -3.0007, -3.1290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8510, device='cuda:0', dtype=torch.float64)
tensor([-1.7514, -2.5536, -2.6651, -3.0430, -3.0281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9467, device='cuda:0', dtype=torch.float64)
tensor([-1.8064, -2.5885, -2.7116, -3.0737, -3.0692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2683, device='cuda:0', dtype=torch.float64)
tensor([-1.8962, -2.6563, -2.6779, -3.0460, -3.0505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8966, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.6802, -2.6997, -3.0806, -2.9818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1151, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.6417, -2.7605, -3.1746, -3.0453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1326, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.6194, -2.7708, -3.1537, -3.0792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1143, device='cuda:0', dtype=torch.float64)
tensor([-1.7929, -2.6371, -2.7342, -3.0602, -3.0444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2846, device='cuda:0', dtype=torch.float64)
tensor([-1.7855, -2.6338, -2.7292, -2.9926, -3.0964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9689, device='cuda:0', dtype=torch.float64)
tensor([-1.7979, -2.6084, -2.7279, -2.9834, -3.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4665, device='cuda:0', dtype=torch.float64)
tensor([-1.7698, -2.5840, -2.7305, -2.9844, -3.0615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4995, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.5203, -2.7651, -3.0060, -3.1204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6704, device='cuda:0', dtype=torch.float64)
tensor([-1.9768, -2.4978, -2.7544, -2.9872, -3.2027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0418, device='cuda:0', dtype=torch.float64)
tensor([-1.9757, -2.5175, -2.6924, -2.9453, -3.1046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1309, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.5428, -2.6648, -2.9723, -2.9754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9837, device='cuda:0', dtype=torch.float64)
tensor([-1.7923, -2.5563, -2.6614, -3.0404, -2.9723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2745, device='cuda:0', dtype=torch.float64)
tensor([-1.7919, -2.5959, -2.6212, -3.0506, -2.9570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0974, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.6332, -2.6132, -3.0835, -2.9787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4810, device='cuda:0', dtype=torch.float64)
tensor([-1.9503, -2.6363, -2.6628, -3.1739, -3.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0858, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.6231, -2.7095, -3.2479, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8331, device='cuda:0', dtype=torch.float64)
tensor([-1.7038, -2.6098, -2.7381, -3.2550, -3.0647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4468, device='cuda:0', dtype=torch.float64)
tensor([-1.7327, -2.6086, -2.7000, -3.1672, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8023, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6147, -2.6467, -3.0353, -3.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0604, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.5901, -2.6455, -2.9946, -3.0945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2108, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.5398, -2.7164, -3.0332, -3.0865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1692, device='cuda:0', dtype=torch.float64)
tensor([-1.8999, -2.5476, -2.7377, -3.0255, -3.1276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1086, device='cuda:0', dtype=torch.float64)
tensor([-1.9250, -2.5969, -2.7120, -2.9715, -3.0231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1213, device='cuda:0', dtype=torch.float64)
tensor([-1.9017, -2.6360, -2.7166, -2.9596, -2.9045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2624, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6194, -2.7596, -3.0154, -2.9152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1466, device='cuda:0', dtype=torch.float64)
tensor([-1.8072, -2.6074, -2.7453, -2.9939, -2.9148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9818, device='cuda:0', dtype=torch.float64)
tensor([-1.8703, -2.6239, -2.6647, -2.9234, -2.9630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4487, device='cuda:0', dtype=torch.float64)
tensor([-1.9685, -2.5854, -2.6339, -2.9330, -3.1291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0178, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.5342, -2.6954, -3.0628, -3.2327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2251, device='cuda:0', dtype=torch.float64)
tensor([-1.7141, -2.5257, -2.7300, -3.1882, -3.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0171, device='cuda:0', dtype=torch.float64)
tensor([-1.6877, -2.5507, -2.7059, -3.1691, -3.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8656, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.5981, -2.6380, -3.0348, -3.2763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6291, device='cuda:0', dtype=torch.float64)
tensor([-1.9773, -2.6329, -2.6310, -2.9517, -3.3029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8031, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.5868, -2.7306, -3.0794, -3.1773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3923, device='cuda:0', dtype=torch.float64)
tensor([-1.7888, -2.5342, -2.8541, -3.2162, -3.1172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8681, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.5613, -2.8047, -3.1105, -3.0516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0459, device='cuda:0', dtype=torch.float64)
tensor([-1.9600, -2.6402, -2.6616, -2.9262, -2.9872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2081, device='cuda:0', dtype=torch.float64)
tensor([-1.8933, -2.6442, -2.6416, -2.9455, -2.9746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9147, device='cuda:0', dtype=torch.float64)
tensor([-1.7497, -2.6175, -2.6762, -3.0829, -2.9462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0755, device='cuda:0', dtype=torch.float64)
tensor([-1.7411, -2.6079, -2.6342, -3.1013, -2.9252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1176, device='cuda:0', dtype=torch.float64)
tensor([-1.8785, -2.6298, -2.5737, -3.0401, -3.0157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9129, device='cuda:0', dtype=torch.float64)
tensor([-1.9382, -2.5865, -2.6215, -3.1166, -3.1010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0153, device='cuda:0', dtype=torch.float64)
tensor([-1.8096, -2.4936, -2.7461, -3.2758, -3.0268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7454, device='cuda:0', dtype=torch.float64)
tensor([-1.7195, -2.4547, -2.8246, -3.2946, -2.9450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9119, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.5132, -2.7557, -3.0835, -3.0112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2714, device='cuda:0', dtype=torch.float64)
tensor([-2.0005, -2.6264, -2.6947, -2.8825, -3.0971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9774, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.6538, -2.7359, -2.8799, -3.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0379, device='cuda:0', dtype=torch.float64)
tensor([-1.7615, -2.6576, -2.8149, -2.9776, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8450, device='cuda:0', dtype=torch.float64)
tensor([-1.7444, -2.6746, -2.8204, -2.9948, -3.2222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1620, device='cuda:0', dtype=torch.float64)
tensor([-1.8112, -2.7364, -2.7199, -2.8883, -3.2517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9703, device='cuda:0', dtype=torch.float64)
tensor([-1.7864, -2.7687, -2.6345, -2.8870, -3.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2301, device='cuda:0', dtype=torch.float64)
tensor([-1.7522, -2.7096, -2.6049, -3.0159, -3.0908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9352, device='cuda:0', dtype=torch.float64)
tensor([-1.7722, -2.6354, -2.5951, -3.1616, -2.9925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2304, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.5620, -2.5900, -3.2017, -3.0024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1314, device='cuda:0', dtype=torch.float64)
tensor([-2.0189, -2.5240, -2.6038, -3.1765, -3.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9894, device='cuda:0', dtype=torch.float64)
tensor([-2.0354, -2.4879, -2.6507, -3.1648, -3.0613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0604, device='cuda:0', dtype=torch.float64)
tensor([-1.9459, -2.4618, -2.6931, -3.1329, -3.0042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0391, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.4627, -2.7142, -3.1060, -2.9739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8398, device='cuda:0', dtype=torch.float64)
tensor([-1.7721, -2.5107, -2.7040, -3.0604, -2.9938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0840, device='cuda:0', dtype=torch.float64)
tensor([-1.7963, -2.5922, -2.7032, -3.0142, -3.1021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5705, device='cuda:0', dtype=torch.float64)
tensor([-1.7896, -2.5983, -2.7752, -3.0543, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1108, device='cuda:0', dtype=torch.float64)
tensor([-1.7686, -2.6031, -2.8592, -3.0962, -3.2844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0156, device='cuda:0', dtype=torch.float64)
tensor([-1.7916, -2.6456, -2.8472, -3.0396, -3.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7877, device='cuda:0', dtype=torch.float64)
tensor([-1.9130, -2.7215, -2.7242, -2.8927, -3.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4843, device='cuda:0', dtype=torch.float64)
tensor([-1.9279, -2.7241, -2.6785, -2.8767, -3.0809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1234, device='cuda:0', dtype=torch.float64)
tensor([-1.7913, -2.6459, -2.7379, -3.0142, -2.9658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8851, device='cuda:0', dtype=torch.float64)
tensor([-1.7381, -2.5829, -2.7840, -3.1412, -2.9347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8587, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.5772, -2.7516, -3.1125, -2.9987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2814, device='cuda:0', dtype=torch.float64)
tensor([-1.9507, -2.5807, -2.7050, -3.0209, -3.0659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1363, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.5831, -2.6668, -2.9766, -2.9940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2197, device='cuda:0', dtype=torch.float64)
tensor([-1.7849, -2.5734, -2.6678, -3.0492, -2.9640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8167, device='cuda:0', dtype=torch.float64)
tensor([-1.7893, -2.5913, -2.6290, -3.0788, -3.0234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3199, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.6061, -2.6005, -3.0651, -3.0883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0495, device='cuda:0', dtype=torch.float64)
tensor([-1.9020, -2.5967, -2.6511, -3.0898, -3.2115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9859, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.5736, -2.7197, -3.1245, -3.2236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3197, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.5989, -2.6837, -3.0345, -3.1268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1838, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.6088, -2.6435, -2.9664, -3.0704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1378, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.6094, -2.6583, -2.9543, -2.9940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0807, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.5668, -2.7363, -3.0234, -3.0151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7285, device='cuda:0', dtype=torch.float64)
tensor([-1.8132, -2.5262, -2.8077, -3.0848, -3.0874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0946, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.5510, -2.7909, -3.0547, -3.1404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1332, device='cuda:0', dtype=torch.float64)
tensor([-1.8863, -2.6022, -2.7163, -2.9704, -3.1162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9833, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6115, -2.6971, -3.0046, -3.0597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5974, device='cuda:0', dtype=torch.float64)
tensor([-1.7581, -2.5999, -2.7018, -3.0899, -2.9837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9546, device='cuda:0', dtype=torch.float64)
tensor([-1.7760, -2.5765, -2.7096, -3.1223, -2.9569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7345, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.5592, -2.6985, -3.1218, -3.0409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5651, device='cuda:0', dtype=torch.float64)
tensor([-1.9518, -2.5568, -2.6747, -3.1319, -3.1090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7912, device='cuda:0', dtype=torch.float64)
tensor([-1.9344, -2.5693, -2.6399, -3.1391, -3.1049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1846, device='cuda:0', dtype=torch.float64)
tensor([-1.8104, -2.5752, -2.6527, -3.1506, -3.0473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5481, device='cuda:0', dtype=torch.float64)
tensor([-1.7590, -2.6196, -2.6439, -3.1005, -3.0239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7305, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.6801, -2.6008, -2.9481, -3.0606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0269, device='cuda:0', dtype=torch.float64)
tensor([-1.9440, -2.6738, -2.6270, -2.8963, -3.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9061, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.6077, -2.7436, -2.9756, -3.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9460, device='cuda:0', dtype=torch.float64)
tensor([-1.7445, -2.5630, -2.8626, -3.0722, -3.0776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7977, device='cuda:0', dtype=torch.float64)
tensor([-1.7783, -2.5525, -2.8689, -3.0665, -3.0543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0326, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.5500, -2.8371, -3.0199, -3.0372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9918, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.4903, -2.8287, -3.0233, -2.9951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0294, device='cuda:0', dtype=torch.float64)
tensor([-1.7928, -2.4364, -2.8188, -3.1145, -3.0063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0506, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.4709, -2.7171, -3.0939, -3.0162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2720, device='cuda:0', dtype=torch.float64)
tensor([-1.9970, -2.5717, -2.6075, -2.9941, -3.1289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8516, device='cuda:0', dtype=torch.float64)
tensor([-1.9777, -2.6414, -2.6089, -3.0472, -3.2242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8381, device='cuda:0', dtype=torch.float64)
tensor([-1.7622, -2.6794, -2.6573, -3.1795, -3.1061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7255, device='cuda:0', dtype=torch.float64)
tensor([-1.6617, -2.7208, -2.6679, -3.1789, -3.0123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1471, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.7397, -2.6026, -3.0067, -3.1224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0235, device='cuda:0', dtype=torch.float64)
tensor([-1.9452, -2.6868, -2.6106, -2.9145, -3.1704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8178, device='cuda:0', dtype=torch.float64)
tensor([-1.9037, -2.5802, -2.6921, -2.9819, -3.1184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3911, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.4762, -2.7917, -3.1055, -3.1150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8259, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.4774, -2.7633, -3.0920, -3.0624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4029, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.5346, -2.7648, -2.9875, -3.0236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0890, device='cuda:0', dtype=torch.float64)
tensor([-1.8701, -2.5984, -2.6978, -2.9019, -2.9710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1571, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.6178, -2.6704, -2.9834, -3.0339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1768, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.5933, -2.7132, -3.1666, -3.1178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1319, device='cuda:0', dtype=torch.float64)
tensor([-1.7963, -2.6002, -2.6830, -3.2096, -3.1048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4445, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.6317, -2.5952, -3.1248, -3.1159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0872, device='cuda:0', dtype=torch.float64)
tensor([-1.9607, -2.6638, -2.5486, -3.0241, -3.1105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3667, device='cuda:0', dtype=torch.float64)
tensor([-1.8696, -2.6739, -2.5999, -2.9812, -2.9891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7322, device='cuda:0', dtype=torch.float64)
tensor([-1.7321, -2.6455, -2.7283, -3.0397, -2.9115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0941, device='cuda:0', dtype=torch.float64)
tensor([-1.7595, -2.5776, -2.8506, -3.0407, -3.0401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1025, device='cuda:0', dtype=torch.float64)
tensor([-1.8853, -2.5472, -2.8639, -2.9482, -3.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7609, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.5288, -2.8192, -2.8854, -3.1761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1124, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.5050, -2.8093, -2.9643, -3.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2720, device='cuda:0', dtype=torch.float64)
tensor([-1.7749, -2.5187, -2.7710, -3.0840, -3.0259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8145, device='cuda:0', dtype=torch.float64)
tensor([-1.8132, -2.5705, -2.6737, -3.1050, -2.9884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0395, device='cuda:0', dtype=torch.float64)
tensor([-1.9174, -2.6588, -2.5754, -3.0696, -3.0431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3783, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.6704, -2.6286, -3.1736, -3.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9094, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6755, -2.7163, -3.2740, -3.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8599, device='cuda:0', dtype=torch.float64)
tensor([-1.7521, -2.6935, -2.6996, -3.2045, -3.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5517, device='cuda:0', dtype=torch.float64)
tensor([-1.8101, -2.6688, -2.6233, -3.0273, -3.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8102, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.6337, -2.5658, -2.8995, -3.0956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1186, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.5430, -2.5894, -2.9518, -2.9745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9692, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.4390, -2.7170, -3.1179, -3.0787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5977, device='cuda:0', dtype=torch.float64)
tensor([-1.8897, -2.4701, -2.7476, -3.1263, -3.0655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4171, device='cuda:0', dtype=torch.float64)
tensor([-1.9340, -2.5694, -2.6522, -2.9813, -2.9151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4585, device='cuda:0', dtype=torch.float64)
tensor([-1.9902, -2.6507, -2.6453, -2.9640, -2.9686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6342, device='cuda:0', dtype=torch.float64)
tensor([-1.8961, -2.6305, -2.7336, -3.0814, -3.0622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6224, device='cuda:0', dtype=torch.float64)
tensor([-1.7182, -2.6031, -2.8091, -3.1326, -3.0025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1924, device='cuda:0', dtype=torch.float64)
tensor([-1.7336, -2.6157, -2.7990, -3.0328, -2.9959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3688, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.6240, -2.7497, -2.9103, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9251, device='cuda:0', dtype=torch.float64)
tensor([-1.9242, -2.6298, -2.7487, -2.8967, -3.2553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3165, device='cuda:0', dtype=torch.float64)
tensor([-1.7661, -2.6143, -2.7633, -2.9851, -3.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3176, device='cuda:0', dtype=torch.float64)
tensor([-1.7639, -2.6075, -2.7473, -3.0531, -3.0478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3650, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.5759, -2.7192, -3.0588, -3.1376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3721, device='cuda:0', dtype=torch.float64)
tensor([-1.9191, -2.5847, -2.6464, -3.0329, -3.0445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4436, device='cuda:0', dtype=torch.float64)
tensor([-1.9022, -2.5657, -2.6235, -3.0941, -2.9890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3045, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.5157, -2.6909, -3.2053, -3.0591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1419, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.5211, -2.6860, -3.1736, -3.0758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3925, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.5757, -2.5763, -3.0368, -3.1064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4191, device='cuda:0', dtype=torch.float64)
tensor([-1.8946, -2.5978, -2.5413, -3.0061, -3.2343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9375, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.5711, -2.6040, -3.1062, -3.2804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3582, device='cuda:0', dtype=torch.float64)
tensor([-1.7090, -2.5428, -2.6911, -3.1828, -3.1243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0609, device='cuda:0', dtype=torch.float64)
tensor([-1.7369, -2.5559, -2.7454, -3.1509, -3.0590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7966, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.6219, -2.7337, -3.0224, -3.0507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3599, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.6822, -2.7221, -2.9856, -2.9213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8169, device='cuda:0', dtype=torch.float64)
tensor([-1.8849, -2.6584, -2.8017, -3.0790, -2.8553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9170, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6123, -2.8636, -3.1838, -2.8932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1327, device='cuda:0', dtype=torch.float64)
tensor([-1.8877, -2.5982, -2.8367, -3.1523, -2.9854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0364, device='cuda:0', dtype=torch.float64)
tensor([-1.8705, -2.5928, -2.7906, -3.0373, -3.0443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9137, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.5832, -2.7656, -2.9960, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9579, device='cuda:0', dtype=torch.float64)
tensor([-1.7924, -2.6032, -2.7249, -2.9691, -3.2596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2525, device='cuda:0', dtype=torch.float64)
tensor([-1.8004, -2.6588, -2.6214, -2.9127, -3.2505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9612, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6676, -2.5961, -2.9607, -3.3017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9511, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6409, -2.6487, -3.0714, -3.3296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5758, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6241, -2.6756, -3.0666, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1890, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.6059, -2.6671, -3.0365, -3.0876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2647, device='cuda:0', dtype=torch.float64)
tensor([-1.9063, -2.5416, -2.6993, -3.0582, -3.0520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2108, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.4952, -2.7120, -3.0857, -2.9073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7557, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.4941, -2.7041, -3.0677, -2.8473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2719, device='cuda:0', dtype=torch.float64)
tensor([-1.9059, -2.5236, -2.6887, -3.0165, -2.9484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8772, device='cuda:0', dtype=torch.float64)
tensor([-1.9488, -2.5414, -2.7211, -3.0340, -3.0686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5554, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.5798, -2.7287, -3.0319, -2.9823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9526, device='cuda:0', dtype=torch.float64)
tensor([-1.7896, -2.6301, -2.7512, -3.0537, -2.9861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3016, device='cuda:0', dtype=torch.float64)
tensor([-1.7903, -2.6811, -2.7633, -3.0561, -3.0563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1080, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.7059, -2.7020, -2.9837, -3.0903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8077, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6834, -2.6604, -2.9697, -3.0802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0564, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.5984, -2.6893, -3.0242, -3.1044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8065, device='cuda:0', dtype=torch.float64)
tensor([-1.7797, -2.5594, -2.7008, -3.0549, -3.0922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1880, device='cuda:0', dtype=torch.float64)
tensor([-1.8050, -2.6036, -2.6680, -2.9830, -3.0469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8559, device='cuda:0', dtype=torch.float64)
tensor([-1.8942, -2.6356, -2.6617, -2.9582, -3.0999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9409, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.6177, -2.6731, -2.9973, -3.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0528, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.5574, -2.7103, -3.0973, -3.1141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2094, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.5059, -2.7283, -3.1480, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9546, device='cuda:0', dtype=torch.float64)
tensor([-1.8791, -2.5078, -2.6798, -3.0941, -3.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7774, device='cuda:0', dtype=torch.float64)
tensor([-1.8912, -2.5702, -2.6279, -3.0168, -3.1091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0673, device='cuda:0', dtype=torch.float64)
tensor([-1.8687, -2.6127, -2.6452, -3.0114, -3.0651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8551, device='cuda:0', dtype=torch.float64)
tensor([-1.7841, -2.6254, -2.7332, -3.0666, -2.9793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0490, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6294, -2.7655, -3.0800, -2.9755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8261, device='cuda:0', dtype=torch.float64)
tensor([-1.9498, -2.6291, -2.7428, -3.0313, -3.0724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7731, device='cuda:0', dtype=torch.float64)
tensor([-1.9820, -2.5861, -2.7510, -3.0534, -3.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9489, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.5264, -2.7736, -3.1407, -3.0899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0286, device='cuda:0', dtype=torch.float64)
tensor([-1.7430, -2.5186, -2.7543, -3.1617, -3.0407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2051, device='cuda:0', dtype=torch.float64)
tensor([-1.7599, -2.6017, -2.6572, -3.0942, -3.0468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0538, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.6843, -2.6070, -3.0561, -3.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2154, device='cuda:0', dtype=torch.float64)
tensor([-1.7872, -2.6806, -2.6839, -3.1101, -3.1473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1518, device='cuda:0', dtype=torch.float64)
tensor([-1.7326, -2.6636, -2.7916, -3.1452, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0433, device='cuda:0', dtype=torch.float64)
tensor([-1.7898, -2.6719, -2.7760, -3.0710, -3.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7593, device='cuda:0', dtype=torch.float64)
tensor([-1.8954, -2.6892, -2.6600, -2.9290, -3.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9214, device='cuda:0', dtype=torch.float64)
tensor([-1.8821, -2.6456, -2.5890, -2.9006, -3.0171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0250, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.5692, -2.6098, -2.9445, -2.9125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9879, device='cuda:0', dtype=torch.float64)
tensor([-1.8975, -2.5141, -2.6217, -2.9643, -2.9041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([-2.0280, -2.4786, -2.6527, -2.9918, -3.0069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9495, device='cuda:0', dtype=torch.float64)
tensor([-2.0515, -2.4626, -2.7418, -3.0707, -3.1069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7549, device='cuda:0', dtype=torch.float64)
tensor([-1.9311, -2.4770, -2.7908, -3.1133, -3.0811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0143, device='cuda:0', dtype=torch.float64)
tensor([-1.7786, -2.5331, -2.8423, -3.1223, -3.0661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6460, device='cuda:0', dtype=torch.float64)
tensor([-1.6851, -2.6058, -2.8553, -3.0718, -3.0627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0398, device='cuda:0', dtype=torch.float64)
tensor([-1.6585, -2.6905, -2.8341, -2.9829, -3.0316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9529, device='cuda:0', dtype=torch.float64)
tensor([-1.7934, -2.7244, -2.7666, -2.9145, -3.1056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8870, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.6837, -2.7546, -2.9857, -3.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9364, device='cuda:0', dtype=torch.float64)
tensor([-1.9048, -2.6262, -2.7129, -3.0849, -3.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1914, device='cuda:0', dtype=torch.float64)
tensor([-1.9342, -2.5863, -2.6661, -3.1568, -3.1071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9809, device='cuda:0', dtype=torch.float64)
tensor([-2.0315, -2.5732, -2.5821, -3.1148, -3.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0034, device='cuda:0', dtype=torch.float64)
tensor([-1.9820, -2.5702, -2.5137, -3.0351, -3.0886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9108, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.5517, -2.5551, -3.0338, -2.9883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9823, device='cuda:0', dtype=torch.float64)
tensor([-1.7685, -2.5305, -2.6555, -3.0825, -3.0593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0608, device='cuda:0', dtype=torch.float64)
tensor([-1.7928, -2.5576, -2.7068, -3.0727, -3.1282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1253, device='cuda:0', dtype=torch.float64)
tensor([-1.8022, -2.5768, -2.7363, -3.0671, -3.0925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3270, device='cuda:0', dtype=torch.float64)
tensor([-1.7787, -2.5600, -2.8193, -3.1384, -3.1077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9291, device='cuda:0', dtype=torch.float64)
tensor([-1.7741, -2.5535, -2.8492, -3.1565, -3.0712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1507, device='cuda:0', dtype=torch.float64)
tensor([-1.8106, -2.5765, -2.7970, -3.0942, -2.9939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1315, device='cuda:0', dtype=torch.float64)
tensor([-1.9289, -2.5926, -2.7325, -3.0341, -3.0299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9586, device='cuda:0', dtype=torch.float64)
tensor([-1.9504, -2.5821, -2.7268, -3.0699, -3.0882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3856, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.5702, -2.7412, -3.0917, -3.0370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7288, device='cuda:0', dtype=torch.float64)
tensor([-1.8101, -2.5961, -2.7146, -3.0615, -3.0214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3405, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.6396, -2.6837, -3.0174, -3.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2891, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.6895, -2.6685, -3.0179, -3.2025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9578, device='cuda:0', dtype=torch.float64)
tensor([-1.7508, -2.6661, -2.7167, -3.1226, -3.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2813, device='cuda:0', dtype=torch.float64)
tensor([-1.7496, -2.6261, -2.7325, -3.1724, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9475, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.6209, -2.6592, -3.0749, -3.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6924, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6201, -2.6009, -2.9920, -3.0553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1931, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.5889, -2.5927, -3.0320, -2.9968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7170, device='cuda:0', dtype=torch.float64)
tensor([-1.8819, -2.5252, -2.6573, -3.0934, -2.9548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0378, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.4664, -2.7578, -3.0236, -2.8812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9621, device='cuda:0', dtype=torch.float64)
tensor([-1.8951, -2.4759, -2.7652, -2.8826, -2.9465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8051, device='cuda:0', dtype=torch.float64)
tensor([-1.9735, -2.5221, -2.7406, -2.7981, -3.0897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6866, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.5763, -2.7605, -2.8679, -3.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0415, device='cuda:0', dtype=torch.float64)
tensor([-1.7332, -2.6385, -2.8034, -3.0088, -3.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8831, device='cuda:0', dtype=torch.float64)
tensor([-1.7105, -2.7012, -2.7900, -3.0688, -3.1970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9351, device='cuda:0', dtype=torch.float64)
tensor([-1.7982, -2.7425, -2.7098, -3.0520, -3.2133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9111, device='cuda:0', dtype=torch.float64)
tensor([-1.8143, -2.7231, -2.6677, -3.0999, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8452, device='cuda:0', dtype=torch.float64)
tensor([-1.7854, -2.6421, -2.6647, -3.1857, -3.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7952, device='cuda:0', dtype=torch.float64)
tensor([-1.8085, -2.5520, -2.6579, -3.2473, -3.0462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8989, device='cuda:0', dtype=torch.float64)
tensor([-1.8809, -2.4965, -2.6244, -3.1891, -3.0453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7531, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.4703, -2.6121, -3.1290, -3.0445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0759, device='cuda:0', dtype=torch.float64)
tensor([-1.9328, -2.4470, -2.6582, -3.1369, -3.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2639, device='cuda:0', dtype=torch.float64)
tensor([-1.9197, -2.4922, -2.6910, -3.1072, -3.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9708, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.5729, -2.7257, -3.0751, -3.0879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9422, device='cuda:0', dtype=torch.float64)
tensor([-1.7938, -2.6360, -2.7597, -3.0489, -3.1344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0044, device='cuda:0', dtype=torch.float64)
tensor([-1.7737, -2.6844, -2.7474, -3.0011, -3.0920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0175, device='cuda:0', dtype=torch.float64)
tensor([-1.7553, -2.6831, -2.7624, -3.0125, -3.0560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7285, device='cuda:0', dtype=torch.float64)
tensor([-1.7841, -2.6625, -2.7725, -3.0323, -3.0571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8778, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.6577, -2.7503, -3.0614, -3.0703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7635, device='cuda:0', dtype=torch.float64)
tensor([-1.9501, -2.6417, -2.7338, -3.0755, -3.0892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8488, device='cuda:0', dtype=torch.float64)
tensor([-1.9590, -2.6303, -2.7188, -3.0543, -3.0701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7582, device='cuda:0', dtype=torch.float64)
tensor([-1.9271, -2.6482, -2.6755, -2.9766, -3.0032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8855, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.6426, -2.6651, -2.9405, -2.9432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8506, device='cuda:0', dtype=torch.float64)
tensor([-1.8148, -2.6348, -2.6615, -2.9324, -2.9369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9568, device='cuda:0', dtype=torch.float64)
tensor([-1.8121, -2.6151, -2.6520, -2.9566, -2.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7820, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.5766, -2.6589, -3.0183, -3.0403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7581, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.5339, -2.6973, -3.0868, -3.0964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7726, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.5395, -2.7048, -3.1003, -3.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6803, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.5617, -2.6852, -3.1026, -3.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8613, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.5627, -2.6678, -3.0951, -3.1060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0977, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.5696, -2.6745, -3.1075, -3.0482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8590, device='cuda:0', dtype=torch.float64)
tensor([-1.8094, -2.5553, -2.7228, -3.1330, -3.1108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6622, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.5479, -2.7487, -3.1040, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9827, device='cuda:0', dtype=torch.float64)
tensor([-1.8749, -2.5651, -2.7431, -3.0501, -3.2559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1591, device='cuda:0', dtype=torch.float64)
tensor([-1.9167, -2.5972, -2.7108, -2.9736, -3.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9866, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.6179, -2.6942, -3.0002, -3.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8325, device='cuda:0', dtype=torch.float64)
tensor([-1.7723, -2.6167, -2.7317, -3.1029, -3.0419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0630, device='cuda:0', dtype=torch.float64)
tensor([-1.7270, -2.6255, -2.7502, -3.1290, -2.9450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7909, device='cuda:0', dtype=torch.float64)
tensor([-1.7952, -2.6484, -2.7290, -3.0374, -2.9383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9091, device='cuda:0', dtype=torch.float64)
tensor([-1.9155, -2.6880, -2.7063, -2.9187, -3.0361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7842, device='cuda:0', dtype=torch.float64)
tensor([-1.9383, -2.6942, -2.6970, -2.9188, -3.0539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7601, device='cuda:0', dtype=torch.float64)
tensor([-1.7749, -2.6322, -2.7442, -3.0799, -2.9676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0014, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.5779, -2.7301, -3.1401, -2.9597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6757, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.5265, -2.7101, -3.0813, -3.0321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7650, device='cuda:0', dtype=torch.float64)
tensor([-1.9762, -2.4925, -2.7104, -3.0381, -3.1063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5866, device='cuda:0', dtype=torch.float64)
tensor([-1.9531, -2.4835, -2.7294, -3.0417, -3.1343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6943, device='cuda:0', dtype=torch.float64)
tensor([-1.8919, -2.5074, -2.7313, -3.0529, -3.1171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8686, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.5543, -2.6905, -3.0087, -3.0959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8879, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6266, -2.6373, -2.9730, -3.0462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6202, device='cuda:0', dtype=torch.float64)
tensor([-1.7843, -2.6509, -2.6715, -3.0225, -3.0214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1229, device='cuda:0', dtype=torch.float64)
tensor([-1.7720, -2.6314, -2.7240, -3.0682, -3.0783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2019, device='cuda:0', dtype=torch.float64)
tensor([-1.7900, -2.6324, -2.7597, -3.0795, -3.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8879, device='cuda:0', dtype=torch.float64)
tensor([-1.8014, -2.6504, -2.7396, -3.0518, -3.0831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9961, device='cuda:0', dtype=torch.float64)
tensor([-1.8648, -2.6468, -2.6777, -3.0006, -3.0699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0457, device='cuda:0', dtype=torch.float64)
tensor([-1.8935, -2.6317, -2.6308, -2.9751, -3.0513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2714, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.6143, -2.6096, -2.9814, -2.9696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2669, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.5668, -2.6282, -3.0645, -2.9818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3417, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.5442, -2.6647, -3.1383, -3.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6662, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -2.5663, -2.6823, -3.1330, -3.1742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7781, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.5882, -2.7174, -3.0852, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0166, device='cuda:0', dtype=torch.float64)
tensor([-1.7882, -2.6008, -2.7549, -3.0737, -3.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8541, device='cuda:0', dtype=torch.float64)
tensor([-1.7955, -2.6039, -2.7490, -3.0598, -3.0833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1795, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6173, -2.6983, -3.0439, -3.0199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8493, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.5563, -2.7448, -3.1515, -3.0278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0096, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.5010, -2.8127, -3.2548, -3.1455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5335, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.5196, -2.8036, -3.2182, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3242, device='cuda:0', dtype=torch.float64)
tensor([-1.9203, -2.5612, -2.7173, -3.0898, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2791, device='cuda:0', dtype=torch.float64)
tensor([-1.9734, -2.6023, -2.6492, -2.9627, -3.1070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3350, device='cuda:0', dtype=torch.float64)
tensor([-1.8984, -2.5844, -2.6568, -2.9715, -3.0301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-1.7707, -2.5540, -2.7284, -3.0477, -2.9032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3112, device='cuda:0', dtype=torch.float64)
tensor([-1.7653, -2.5641, -2.7691, -3.0652, -2.8891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8888, device='cuda:0', dtype=torch.float64)
tensor([-1.8913, -2.5957, -2.7539, -3.0014, -3.0164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0557, device='cuda:0', dtype=torch.float64)
tensor([-1.9481, -2.6138, -2.7584, -2.9802, -3.1066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1669, device='cuda:0', dtype=torch.float64)
tensor([-1.8803, -2.6239, -2.7230, -2.9550, -3.0554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0932, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.6381, -2.7013, -2.9137, -3.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9500, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.6727, -2.6205, -2.8142, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0854, device='cuda:0', dtype=torch.float64)
tensor([-1.8890, -2.6866, -2.5809, -2.7756, -3.2143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0028, device='cuda:0', dtype=torch.float64)
tensor([-1.8079, -2.6426, -2.6353, -2.8824, -3.2786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7352, device='cuda:0', dtype=torch.float64)
tensor([-1.7194, -2.5709, -2.7419, -3.0511, -3.2945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9462, device='cuda:0', dtype=torch.float64)
tensor([-1.7052, -2.5539, -2.7865, -3.1211, -3.2223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7997, device='cuda:0', dtype=torch.float64)
tensor([-1.7854, -2.5802, -2.7496, -3.1137, -3.1368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0930, device='cuda:0', dtype=torch.float64)
tensor([-1.8976, -2.6108, -2.7244, -3.1681, -3.1304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0359, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.5652, -2.7642, -3.3219, -3.0693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5473, device='cuda:0', dtype=torch.float64)
tensor([-1.8148, -2.4836, -2.8502, -3.4709, -3.0358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7579, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.4859, -2.8334, -3.4407, -3.0317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0754, device='cuda:0', dtype=torch.float64)
tensor([-1.9366, -2.5721, -2.7235, -3.2623, -3.0286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6234, device='cuda:0', dtype=torch.float64)
tensor([-1.9396, -2.6793, -2.6379, -3.0835, -2.9151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8370, device='cuda:0', dtype=torch.float64)
tensor([-1.8797, -2.6723, -2.6501, -3.0703, -3.0106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3571, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6395, -2.7002, -3.0771, -3.1039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2488, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6621, -2.6396, -2.9276, -3.1115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9441, device='cuda:0', dtype=torch.float64)
tensor([-1.9325, -2.6832, -2.5875, -2.7956, -3.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1090, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.6772, -2.6172, -2.7861, -3.2869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1746, device='cuda:0', dtype=torch.float64)
tensor([-1.7508, -2.6209, -2.6654, -2.9071, -3.1302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8930, device='cuda:0', dtype=torch.float64)
tensor([-1.6429, -2.5925, -2.6934, -2.9746, -2.9659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2418, device='cuda:0', dtype=torch.float64)
tensor([-1.8033, -2.5665, -2.6654, -2.9590, -3.0505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9600, device='cuda:0', dtype=torch.float64)
tensor([-1.9492, -2.5274, -2.7232, -2.9911, -3.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1095, device='cuda:0', dtype=torch.float64)
tensor([-1.8921, -2.5025, -2.8133, -3.0914, -3.0640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1014, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.5460, -2.8523, -3.1783, -3.0102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9320, device='cuda:0', dtype=torch.float64)
tensor([-1.9213, -2.6269, -2.7849, -3.1407, -3.0018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0181, device='cuda:0', dtype=torch.float64)
tensor([-1.9380, -2.7192, -2.6407, -3.0320, -2.9032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8575, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.7456, -2.5684, -3.0140, -2.8318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3180, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6334, -2.6038, -3.1038, -2.9709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7668, device='cuda:0', dtype=torch.float64)
tensor([-1.8050, -2.5652, -2.6661, -3.1669, -3.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7742, device='cuda:0', dtype=torch.float64)
tensor([-1.7992, -2.5577, -2.6887, -3.1215, -3.1409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2022, device='cuda:0', dtype=torch.float64)
tensor([-1.8545, -2.5834, -2.7080, -3.0646, -3.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7890, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.5820, -2.7764, -3.0870, -3.2871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2047, device='cuda:0', dtype=torch.float64)
tensor([-1.7437, -2.5713, -2.8309, -3.0561, -3.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9481, device='cuda:0', dtype=torch.float64)
tensor([-1.7960, -2.5732, -2.8250, -3.0475, -3.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3129, device='cuda:0', dtype=torch.float64)
tensor([-1.9487, -2.5964, -2.8042, -3.0272, -3.1317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0903, device='cuda:0', dtype=torch.float64)
tensor([-1.9548, -2.5763, -2.7807, -3.0624, -3.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0598, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.5171, -2.7471, -3.0928, -3.0444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3337, device='cuda:0', dtype=torch.float64)
tensor([-1.9095, -2.4985, -2.6775, -3.0442, -3.0777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0210, device='cuda:0', dtype=torch.float64)
tensor([-1.9181, -2.5182, -2.6351, -3.0146, -3.1358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7772, device='cuda:0', dtype=torch.float64)
tensor([-1.8060, -2.5688, -2.6386, -3.0438, -3.1006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7908, device='cuda:0', dtype=torch.float64)
tensor([-1.7115, -2.6422, -2.6639, -3.0730, -3.0673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3283, device='cuda:0', dtype=torch.float64)
tensor([-1.7678, -2.6641, -2.6981, -3.0977, -3.1935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8208, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.7064, -2.7169, -3.0494, -3.2639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0918, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.7009, -2.6911, -2.9541, -3.1070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2831, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.5989, -2.6851, -2.9366, -2.9518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3645, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.5146, -2.6913, -2.9709, -2.9682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4231, device='cuda:0', dtype=torch.float64)
tensor([-1.8767, -2.4699, -2.6545, -2.9706, -2.9337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1969, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.5001, -2.6245, -2.9910, -2.9050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4042, device='cuda:0', dtype=torch.float64)
tensor([-1.9207, -2.5448, -2.6764, -3.0866, -3.0664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6802, device='cuda:0', dtype=torch.float64)
tensor([-1.8958, -2.6047, -2.7571, -3.2228, -3.2129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8077, device='cuda:0', dtype=torch.float64)
tensor([-1.7916, -2.6582, -2.7727, -3.2004, -3.1213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0014, device='cuda:0', dtype=torch.float64)
tensor([-1.8121, -2.6705, -2.7260, -3.0753, -3.1101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3656, device='cuda:0', dtype=torch.float64)
tensor([-1.8979, -2.6364, -2.7107, -2.9603, -3.2310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2748, device='cuda:0', dtype=torch.float64)
tensor([-1.8723, -2.5667, -2.7387, -2.9600, -3.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7413, device='cuda:0', dtype=torch.float64)
tensor([-1.7300, -2.4996, -2.8180, -3.0937, -3.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4485, device='cuda:0', dtype=torch.float64)
tensor([-1.7686, -2.4838, -2.8415, -3.1393, -3.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8212, device='cuda:0', dtype=torch.float64)
tensor([-1.8962, -2.5498, -2.7713, -3.0393, -3.1988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3980, device='cuda:0', dtype=torch.float64)
tensor([-1.9961, -2.6584, -2.6391, -2.9816, -3.1154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9318, device='cuda:0', dtype=torch.float64)
tensor([-1.8897, -2.6985, -2.6517, -3.0507, -2.9743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4600, device='cuda:0', dtype=torch.float64)
tensor([ -2.1907, -12.7444,  -3.4542,  -6.4248,  -8.7457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(48.6261, device='cuda:0', dtype=torch.float64)
tensor([-1168.1220, -1046.0081, -1640.4938, -1713.1405, -1265.8957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(826.7728, device='cuda:0', dtype=torch.float64)
tensor([-1296.1743,  -781.3469,  -367.4601,  -779.3417,  -581.8849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(696.9763, device='cuda:0', dtype=torch.float64)
tensor([-726.8783, -544.3298, -300.1749, -951.4221, -585.5999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(327.6266, device='cuda:0', dtype=torch.float64)
tensor([-206.2191, -346.7193, -240.6991, -534.8487, -361.9485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(154.0598, device='cuda:0', dtype=torch.float64)
tensor([-128.2602, -162.8015, -240.6828, -297.4648, -282.1425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(107.0705, device='cuda:0', dtype=torch.float64)
tensor([-121.6433, -159.7352, -230.5414, -231.6152, -218.5513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(81.7512, device='cuda:0', dtype=torch.float64)
tensor([-151.1016, -196.0678, -200.3057, -206.9530, -158.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(71.9770, device='cuda:0', dtype=torch.float64)
tensor([-155.0108, -238.5404, -156.4162, -188.0021, -117.4858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(68.4994, device='cuda:0', dtype=torch.float64)
tensor([-133.7607, -252.2060, -124.7396, -155.4473,  -86.2366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(64.8135, device='cuda:0', dtype=torch.float64)
tensor([ -95.4795, -225.9625,  -92.6267, -109.3759,  -69.3984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(55.3144, device='cuda:0', dtype=torch.float64)
tensor([ -62.3242, -182.9713,  -65.8027,  -74.2528,  -66.2080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(43.7449, device='cuda:0', dtype=torch.float64)
tensor([ -44.7589, -143.7053,  -66.6889,  -57.3897,  -71.3183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(35.4391, device='cuda:0', dtype=torch.float64)
tensor([ -44.4752, -114.0875,  -79.2232,  -53.1852,  -78.0999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(31.5584, device='cuda:0', dtype=torch.float64)
tensor([-47.4673, -92.0059, -89.4105, -56.9388, -81.1100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(31.2900, device='cuda:0', dtype=torch.float64)
tensor([-47.9941, -73.7462, -90.6260, -61.8549, -78.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.4724, device='cuda:0', dtype=torch.float64)
tensor([-47.2167, -60.7504, -85.2068, -64.8904, -69.9247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.1560, device='cuda:0', dtype=torch.float64)
tensor([-46.0813, -53.5285, -76.1598, -65.7816, -59.8908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.3581, device='cuda:0', dtype=torch.float64)
tensor([-43.7896, -49.9231, -65.3111, -64.4519, -50.5349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.0982, device='cuda:0', dtype=torch.float64)
tensor([-39.6233, -48.1634, -55.4218, -61.6836, -42.8823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.4878, device='cuda:0', dtype=torch.float64)
tensor([-33.5364, -46.4579, -47.2525, -57.9770, -36.9363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.5147, device='cuda:0', dtype=torch.float64)
tensor([-27.1606, -45.1474, -40.4181, -54.5541, -32.0606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.6304, device='cuda:0', dtype=torch.float64)
tensor([-23.1874, -43.7078, -35.5956, -51.9559, -27.8191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.4824, device='cuda:0', dtype=torch.float64)
tensor([-21.1560, -41.8626, -32.4403, -49.6705, -24.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.8901, device='cuda:0', dtype=torch.float64)
tensor([-19.7611, -40.2490, -29.8993, -47.7865, -21.0914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.2114, device='cuda:0', dtype=torch.float64)
tensor([-18.6830, -39.0087, -27.5736, -45.7814, -18.7497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.7668, device='cuda:0', dtype=torch.float64)
tensor([-17.0527, -37.7814, -25.3933, -43.2247, -17.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.3062, device='cuda:0', dtype=torch.float64)
tensor([-14.9556, -36.2931, -23.5206, -40.2192, -16.3994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.5229, device='cuda:0', dtype=torch.float64)
tensor([-12.8154, -34.3137, -22.0864, -37.0559, -16.1081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.5970, device='cuda:0', dtype=torch.float64)
tensor([-10.7240, -31.7987, -21.1348, -33.9613, -16.1202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.3873, device='cuda:0', dtype=torch.float64)
tensor([ -8.8137, -28.9825, -20.5926, -31.0703, -16.3352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9738, device='cuda:0', dtype=torch.float64)
tensor([ -7.4915, -26.1819, -20.3773, -28.5188, -16.7256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.8392, device='cuda:0', dtype=torch.float64)
tensor([ -6.7771, -23.5943, -20.4339, -26.3376, -17.2666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.7687, device='cuda:0', dtype=torch.float64)
tensor([ -6.3497, -21.3486, -20.4275, -24.4178, -17.8362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.4259, device='cuda:0', dtype=torch.float64)
tensor([ -6.0362, -19.5686, -20.0896, -22.6816, -18.3062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.3312, device='cuda:0', dtype=torch.float64)
tensor([ -5.7791, -18.1649, -19.3577, -21.1234, -18.5920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.8825, device='cuda:0', dtype=torch.float64)
tensor([ -5.5670, -17.0580, -18.2833, -19.7511, -18.6729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6070, device='cuda:0', dtype=torch.float64)
tensor([ -5.3897, -16.1576, -17.0298, -18.5851, -18.5421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2482, device='cuda:0', dtype=torch.float64)
tensor([ -5.2405, -15.4035, -15.7860, -17.6168, -18.2190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.8503, device='cuda:0', dtype=torch.float64)
tensor([ -5.1063, -14.7457, -14.7105, -16.8215, -17.7405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3766, device='cuda:0', dtype=torch.float64)
tensor([ -4.9855, -14.1765, -13.8508, -16.1794, -17.1356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0769, device='cuda:0', dtype=torch.float64)
tensor([ -4.8802, -13.6633, -13.1746, -15.6707, -16.4221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5646, device='cuda:0', dtype=torch.float64)
tensor([ -4.7923, -13.1947, -12.6350, -15.2743, -15.6255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2045, device='cuda:0', dtype=torch.float64)
tensor([ -4.7134, -12.7457, -12.1939, -14.9574, -14.7976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8877, device='cuda:0', dtype=torch.float64)
tensor([ -4.6364, -12.3078, -11.8040, -14.6983, -13.9799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7267, device='cuda:0', dtype=torch.float64)
tensor([ -4.5602, -11.8586, -11.4457, -14.4713, -13.2060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5584, device='cuda:0', dtype=torch.float64)
tensor([ -4.4828, -11.3931, -11.1006, -14.2396, -12.5075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4917, device='cuda:0', dtype=torch.float64)
tensor([ -4.4096, -10.9205, -10.7689, -13.9997, -11.9039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5551, device='cuda:0', dtype=torch.float64)
tensor([ -4.3382, -10.4516, -10.4547, -13.7333, -11.3929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4347, device='cuda:0', dtype=torch.float64)
tensor([ -4.2786,  -9.9973, -10.1625, -13.4522, -10.9600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5588, device='cuda:0', dtype=torch.float64)
tensor([ -4.2350,  -9.5733,  -9.8955, -13.1671, -10.5935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3594, device='cuda:0', dtype=torch.float64)
tensor([ -4.2022,  -9.1915,  -9.6533, -12.8860, -10.2834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1547, device='cuda:0', dtype=torch.float64)
tensor([ -4.1749,  -8.8672,  -9.4272, -12.6203, -10.0206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2467, device='cuda:0', dtype=torch.float64)
tensor([ -4.1567,  -8.5921,  -9.2265, -12.3720,  -9.8198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0223, device='cuda:0', dtype=torch.float64)
tensor([ -4.1454,  -8.3734,  -9.0493, -12.1414,  -9.6637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9106, device='cuda:0', dtype=torch.float64)
tensor([ -4.1387,  -8.1996,  -8.8896, -11.9347,  -9.5371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7965, device='cuda:0', dtype=torch.float64)
tensor([ -4.1370,  -8.0695,  -8.7484, -11.7561,  -9.4345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7537, device='cuda:0', dtype=torch.float64)
tensor([ -4.1398,  -7.9782,  -8.6071, -11.6007,  -9.3517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6018, device='cuda:0', dtype=torch.float64)
tensor([ -4.1438,  -7.9203,  -8.4685, -11.4637,  -9.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5915, device='cuda:0', dtype=torch.float64)
tensor([ -4.1446,  -7.8868,  -8.3318, -11.3513,  -9.2098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5428, device='cuda:0', dtype=torch.float64)
tensor([ -4.1453,  -7.8733,  -8.1944, -11.2597,  -9.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4524, device='cuda:0', dtype=torch.float64)
tensor([ -4.1501,  -7.8572,  -8.0568, -11.1935,  -9.0185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3148, device='cuda:0', dtype=torch.float64)
tensor([ -4.1552,  -7.8402,  -7.9307, -11.1438,  -8.9086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1304, device='cuda:0', dtype=torch.float64)
tensor([ -4.1508,  -7.8334,  -7.8166, -11.1158,  -8.7924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2121, device='cuda:0', dtype=torch.float64)
tensor([ -4.1446,  -7.8241,  -7.7132, -11.1062,  -8.6689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0737, device='cuda:0', dtype=torch.float64)
tensor([ -4.1411,  -7.8063,  -7.6136, -11.1044,  -8.5440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0532, device='cuda:0', dtype=torch.float64)
tensor([ -4.1296,  -7.7855,  -7.5298, -11.1160,  -8.4169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9220, device='cuda:0', dtype=torch.float64)
tensor([ -4.1192,  -7.7638,  -7.4475, -11.1177,  -8.2903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7398, device='cuda:0', dtype=torch.float64)
tensor([ -4.1064,  -7.7290,  -7.3711, -11.1168,  -8.1704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7578, device='cuda:0', dtype=torch.float64)
tensor([ -4.0939,  -7.6876,  -7.3017, -11.1153,  -8.0560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7061, device='cuda:0', dtype=torch.float64)
tensor([ -4.0813,  -7.6367,  -7.2351, -11.1023,  -7.9499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5814, device='cuda:0', dtype=torch.float64)
tensor([ -4.0650,  -7.5855,  -7.1709, -11.0782,  -7.8440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5806, device='cuda:0', dtype=torch.float64)
tensor([ -4.0477,  -7.5350,  -7.1078, -11.0444,  -7.7464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7104, device='cuda:0', dtype=torch.float64)
tensor([ -4.0302,  -7.4879,  -7.0472, -11.0045,  -7.6514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6057, device='cuda:0', dtype=torch.float64)
tensor([ -4.0130,  -7.4441,  -6.9875, -10.9464,  -7.5666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4822, device='cuda:0', dtype=torch.float64)
tensor([ -3.9865,  -7.3983,  -6.9295, -10.8912,  -7.4866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4755, device='cuda:0', dtype=torch.float64)
tensor([ -3.9588,  -7.3541,  -6.8695, -10.8283,  -7.4159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4000, device='cuda:0', dtype=torch.float64)
tensor([ -3.9292,  -7.3075,  -6.8129, -10.7660,  -7.3512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3329, device='cuda:0', dtype=torch.float64)
tensor([ -3.9046,  -7.2591,  -6.7575, -10.7007,  -7.2951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2899, device='cuda:0', dtype=torch.float64)
tensor([ -3.8830,  -7.2057,  -6.7023, -10.6358,  -7.2464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2147, device='cuda:0', dtype=torch.float64)
tensor([ -3.8697,  -7.1507,  -6.6442, -10.5689,  -7.2068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2958, device='cuda:0', dtype=torch.float64)
tensor([ -3.8562,  -7.0948,  -6.5868, -10.5080,  -7.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2934, device='cuda:0', dtype=torch.float64)
tensor([ -3.8427,  -7.0413,  -6.5294, -10.4456,  -7.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3013, device='cuda:0', dtype=torch.float64)
tensor([ -3.8309,  -6.9874,  -6.4705, -10.3861,  -7.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1955, device='cuda:0', dtype=torch.float64)
tensor([ -3.8195,  -6.9347,  -6.4152, -10.3282,  -7.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1876, device='cuda:0', dtype=torch.float64)
tensor([ -3.8072,  -6.8828,  -6.3593, -10.2654,  -7.0730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1380, device='cuda:0', dtype=torch.float64)
tensor([ -3.7925,  -6.8353,  -6.3023, -10.2003,  -7.0509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1232, device='cuda:0', dtype=torch.float64)
tensor([ -3.7803,  -6.7877,  -6.2468, -10.1348,  -7.0353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1935, device='cuda:0', dtype=torch.float64)
tensor([ -3.7745,  -6.7474,  -6.1904, -10.0672,  -7.0179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1875, device='cuda:0', dtype=torch.float64)
tensor([ -3.7659,  -6.7061,  -6.1409, -10.0080,  -6.9998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1012, device='cuda:0', dtype=torch.float64)
tensor([-3.7579, -6.6681, -6.0905, -9.9502, -6.9783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1199, device='cuda:0', dtype=torch.float64)
tensor([-3.7522, -6.6330, -6.0429, -9.8939, -6.9556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1327, device='cuda:0', dtype=torch.float64)
tensor([-3.7510, -6.5900, -6.0017, -9.8386, -6.9339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0941, device='cuda:0', dtype=torch.float64)
tensor([-3.7422, -6.5555, -5.9614, -9.7862, -6.9031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0975, device='cuda:0', dtype=torch.float64)
tensor([-3.7297, -6.5262, -5.9223, -9.7367, -6.8706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2099, device='cuda:0', dtype=torch.float64)
tensor([-3.7165, -6.4991, -5.8860, -9.6992, -6.8377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0647, device='cuda:0', dtype=torch.float64)
tensor([-3.7007, -6.4701, -5.8553, -9.6646, -6.8015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0578, device='cuda:0', dtype=torch.float64)
tensor([-3.6831, -6.4457, -5.8242, -9.6376, -6.7597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9801, device='cuda:0', dtype=torch.float64)
tensor([-3.6695, -6.4207, -5.7925, -9.6064, -6.7227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0671, device='cuda:0', dtype=torch.float64)
tensor([-3.6588, -6.3966, -5.7710, -9.5792, -6.6927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9133, device='cuda:0', dtype=torch.float64)
tensor([-3.6463, -6.3823, -5.7545, -9.5480, -6.6592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9202, device='cuda:0', dtype=torch.float64)
tensor([-3.6364, -6.3721, -5.7386, -9.5141, -6.6307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9820, device='cuda:0', dtype=torch.float64)
tensor([-3.6233, -6.3708, -5.7270, -9.4843, -6.6005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9307, device='cuda:0', dtype=torch.float64)
tensor([-3.6159, -6.3640, -5.7154, -9.4528, -6.5718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9334, device='cuda:0', dtype=torch.float64)
tensor([-3.6084, -6.3527, -5.7041, -9.4153, -6.5422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9761, device='cuda:0', dtype=torch.float64)
tensor([-3.6067, -6.3277, -5.6950, -9.3716, -6.5152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9678, device='cuda:0', dtype=torch.float64)
tensor([-3.6078, -6.2977, -5.6878, -9.3311, -6.4918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9134, device='cuda:0', dtype=torch.float64)
tensor([-3.6122, -6.2554, -5.6790, -9.2928, -6.4681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8822, device='cuda:0', dtype=torch.float64)
tensor([-3.6155, -6.2141, -5.6701, -9.2549, -6.4481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7402, device='cuda:0', dtype=torch.float64)
tensor([-3.6121, -6.1743, -5.6616, -9.2250, -6.4284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9066, device='cuda:0', dtype=torch.float64)
tensor([-3.6043, -6.1381, -5.6477, -9.1938, -6.4099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7863, device='cuda:0', dtype=torch.float64)
tensor([-3.5910, -6.1022, -5.6377, -9.1703, -6.3948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7940, device='cuda:0', dtype=torch.float64)
tensor([-3.5759, -6.0756, -5.6274, -9.1418, -6.3844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7436, device='cuda:0', dtype=torch.float64)
tensor([-3.5592, -6.0475, -5.6202, -9.1143, -6.3726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7302, device='cuda:0', dtype=torch.float64)
tensor([-3.5455, -6.0199, -5.6121, -9.0870, -6.3636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7403, device='cuda:0', dtype=torch.float64)
tensor([-3.5314, -5.9912, -5.6035, -9.0675, -6.3551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7490, device='cuda:0', dtype=torch.float64)
tensor([-3.5198, -5.9683, -5.5885, -9.0379, -6.3490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7374, device='cuda:0', dtype=torch.float64)
tensor([-3.5037, -5.9483, -5.5701, -9.0129, -6.3400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7733, device='cuda:0', dtype=torch.float64)
tensor([-3.4954, -5.9284, -5.5478, -8.9817, -6.3298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7422, device='cuda:0', dtype=torch.float64)
tensor([-3.4880, -5.9115, -5.5216, -8.9490, -6.3187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7690, device='cuda:0', dtype=torch.float64)
tensor([-3.4827, -5.8962, -5.4976, -8.9175, -6.3072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6670, device='cuda:0', dtype=torch.float64)
tensor([-3.4799, -5.8805, -5.4775, -8.8853, -6.2950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5993, device='cuda:0', dtype=torch.float64)
tensor([-3.4807, -5.8621, -5.4596, -8.8532, -6.2815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7059, device='cuda:0', dtype=torch.float64)
tensor([-3.4810, -5.8445, -5.4418, -8.8258, -6.2655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7019, device='cuda:0', dtype=torch.float64)
tensor([-3.4844, -5.8264, -5.4240, -8.7979, -6.2492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7931, device='cuda:0', dtype=torch.float64)
tensor([-3.4919, -5.8083, -5.4078, -8.7684, -6.2335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7377, device='cuda:0', dtype=torch.float64)
tensor([-3.4989, -5.7936, -5.3967, -8.7351, -6.2165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6936, device='cuda:0', dtype=torch.float64)
tensor([-3.5032, -5.7783, -5.3848, -8.7034, -6.1970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6165, device='cuda:0', dtype=torch.float64)
tensor([-3.5061, -5.7669, -5.3749, -8.6714, -6.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6027, device='cuda:0', dtype=torch.float64)
tensor([-3.5134, -5.7565, -5.3641, -8.6314, -6.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6150, device='cuda:0', dtype=torch.float64)
tensor([-3.5168, -5.7446, -5.3483, -8.5969, -6.1519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7774, device='cuda:0', dtype=torch.float64)
tensor([-3.5113, -5.7275, -5.3365, -8.5590, -6.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5668, device='cuda:0', dtype=torch.float64)
tensor([-3.4990, -5.6992, -5.3258, -8.5220, -6.1152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6465, device='cuda:0', dtype=torch.float64)
tensor([-3.4836, -5.6731, -5.3182, -8.4868, -6.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6525, device='cuda:0', dtype=torch.float64)
tensor([-3.4686, -5.6449, -5.3126, -8.4522, -6.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5755, device='cuda:0', dtype=torch.float64)
tensor([-3.4482, -5.6218, -5.3031, -8.4216, -6.0626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6379, device='cuda:0', dtype=torch.float64)
tensor([-3.4219, -5.5980, -5.2943, -8.3964, -6.0474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6756, device='cuda:0', dtype=torch.float64)
tensor([-3.3985, -5.5758, -5.2843, -8.3663, -6.0355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5910, device='cuda:0', dtype=torch.float64)
tensor([-3.3806, -5.5543, -5.2746, -8.3393, -6.0254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5354, device='cuda:0', dtype=torch.float64)
tensor([-3.3650, -5.5345, -5.2645, -8.3185, -6.0171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5325, device='cuda:0', dtype=torch.float64)
tensor([-3.3570, -5.5144, -5.2474, -8.2954, -6.0113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5351, device='cuda:0', dtype=torch.float64)
tensor([-3.3464, -5.5022, -5.2346, -8.2740, -6.0064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5912, device='cuda:0', dtype=torch.float64)
tensor([-3.3379, -5.4919, -5.2216, -8.2556, -6.0001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5236, device='cuda:0', dtype=torch.float64)
tensor([-3.3305, -5.4816, -5.2071, -8.2333, -5.9946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5590, device='cuda:0', dtype=torch.float64)
tensor([-3.3281, -5.4706, -5.1926, -8.2098, -5.9898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5057, device='cuda:0', dtype=torch.float64)
tensor([-3.3283, -5.4620, -5.1802, -8.1867, -5.9868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5210, device='cuda:0', dtype=torch.float64)
tensor([-3.3246, -5.4570, -5.1669, -8.1657, -5.9808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5268, device='cuda:0', dtype=torch.float64)
tensor([-3.3231, -5.4536, -5.1541, -8.1361, -5.9744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4604, device='cuda:0', dtype=torch.float64)
tensor([-3.3248, -5.4460, -5.1403, -8.1126, -5.9695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6243, device='cuda:0', dtype=torch.float64)
tensor([-3.3281, -5.4341, -5.1293, -8.0927, -5.9688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5123, device='cuda:0', dtype=torch.float64)
tensor([-3.3263, -5.4205, -5.1252, -8.0721, -5.9682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4621, device='cuda:0', dtype=torch.float64)
tensor([-3.3240, -5.4042, -5.1192, -8.0573, -5.9649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4755, device='cuda:0', dtype=torch.float64)
tensor([-3.3292, -5.3863, -5.1161, -8.0320, -5.9633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6177, device='cuda:0', dtype=torch.float64)
tensor([-3.3308, -5.3741, -5.1130, -8.0078, -5.9591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4756, device='cuda:0', dtype=torch.float64)
tensor([-3.3292, -5.3639, -5.1117, -7.9924, -5.9565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3920, device='cuda:0', dtype=torch.float64)
tensor([-3.3248, -5.3514, -5.1110, -7.9818, -5.9477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5590, device='cuda:0', dtype=torch.float64)
tensor([-3.3209, -5.3428, -5.1102, -7.9763, -5.9373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4021, device='cuda:0', dtype=torch.float64)
tensor([-3.3166, -5.3345, -5.1107, -7.9717, -5.9243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4949, device='cuda:0', dtype=torch.float64)
tensor([-3.3073, -5.3321, -5.1087, -7.9623, -5.9094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5288, device='cuda:0', dtype=torch.float64)
tensor([-3.3014, -5.3275, -5.1019, -7.9476, -5.8957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4276, device='cuda:0', dtype=torch.float64)
tensor([-3.2974, -5.3191, -5.0935, -7.9319, -5.8826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5954, device='cuda:0', dtype=torch.float64)
tensor([-3.2901, -5.3108, -5.0883, -7.9201, -5.8724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4986, device='cuda:0', dtype=torch.float64)
tensor([-3.2829, -5.3001, -5.0826, -7.9047, -5.8604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5420, device='cuda:0', dtype=torch.float64)
tensor([-3.2774, -5.2861, -5.0743, -7.8811, -5.8479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4933, device='cuda:0', dtype=torch.float64)
tensor([-3.2715, -5.2690, -5.0627, -7.8495, -5.8340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3616, device='cuda:0', dtype=torch.float64)
tensor([-3.2644, -5.2515, -5.0525, -7.8235, -5.8187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3938, device='cuda:0', dtype=torch.float64)
tensor([-3.2579, -5.2301, -5.0421, -7.8043, -5.8054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3355, device='cuda:0', dtype=torch.float64)
tensor([-3.2537, -5.2038, -5.0333, -7.7852, -5.7939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4516, device='cuda:0', dtype=torch.float64)
tensor([-3.2493, -5.1810, -5.0230, -7.7705, -5.7862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5854, device='cuda:0', dtype=torch.float64)
tensor([-3.2402, -5.1579, -5.0145, -7.7495, -5.7777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4405, device='cuda:0', dtype=torch.float64)
tensor([-3.2348, -5.1375, -5.0033, -7.7244, -5.7704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4403, device='cuda:0', dtype=torch.float64)
tensor([-3.2277, -5.1237, -4.9881, -7.6889, -5.7610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3046, device='cuda:0', dtype=torch.float64)
tensor([-3.2154, -5.1088, -4.9723, -7.6629, -5.7486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3946, device='cuda:0', dtype=torch.float64)
tensor([-3.2047, -5.0961, -4.9559, -7.6375, -5.7371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3667, device='cuda:0', dtype=torch.float64)
tensor([-3.1913, -5.0833, -4.9435, -7.6187, -5.7254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3984, device='cuda:0', dtype=torch.float64)
tensor([-3.1796, -5.0746, -4.9305, -7.5945, -5.7162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3806, device='cuda:0', dtype=torch.float64)
tensor([-3.1679, -5.0716, -4.9188, -7.5736, -5.7061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4860, device='cuda:0', dtype=torch.float64)
tensor([-3.1600, -5.0698, -4.9125, -7.5552, -5.6961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4734, device='cuda:0', dtype=torch.float64)
tensor([-3.1483, -5.0665, -4.9084, -7.5359, -5.6842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3870, device='cuda:0', dtype=torch.float64)
tensor([-3.1394, -5.0686, -4.9007, -7.5196, -5.6716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4193, device='cuda:0', dtype=torch.float64)
tensor([-3.1349, -5.0669, -4.8951, -7.5069, -5.6594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3491, device='cuda:0', dtype=torch.float64)
tensor([-3.1329, -5.0595, -4.8925, -7.4935, -5.6493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3987, device='cuda:0', dtype=torch.float64)
tensor([-3.1346, -5.0536, -4.8886, -7.4826, -5.6447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2923, device='cuda:0', dtype=torch.float64)
tensor([-3.1343, -5.0447, -4.8875, -7.4676, -5.6397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3261, device='cuda:0', dtype=torch.float64)
tensor([-3.1343, -5.0353, -4.8838, -7.4528, -5.6382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2706, device='cuda:0', dtype=torch.float64)
tensor([-3.1335, -5.0258, -4.8784, -7.4388, -5.6356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3168, device='cuda:0', dtype=torch.float64)
tensor([-3.1313, -5.0131, -4.8729, -7.4237, -5.6324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3889, device='cuda:0', dtype=torch.float64)
tensor([-3.1347, -4.9996, -4.8634, -7.4049, -5.6303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2783, device='cuda:0', dtype=torch.float64)
tensor([-3.1399, -4.9819, -4.8507, -7.3908, -5.6268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3907, device='cuda:0', dtype=torch.float64)
tensor([-3.1475, -4.9701, -4.8344, -7.3764, -5.6245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6325, device='cuda:0', dtype=torch.float64)
tensor([-3.1587, -4.9613, -4.8142, -7.3510, -5.6240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3101, device='cuda:0', dtype=torch.float64)
tensor([-3.1668, -4.9537, -4.7964, -7.3248, -5.6220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4609, device='cuda:0', dtype=torch.float64)
tensor([-3.1706, -4.9510, -4.7849, -7.3016, -5.6169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3170, device='cuda:0', dtype=torch.float64)
tensor([-3.1691, -4.9493, -4.7751, -7.2812, -5.6101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2714, device='cuda:0', dtype=torch.float64)
tensor([-3.1607, -4.9459, -4.7660, -7.2607, -5.5999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3268, device='cuda:0', dtype=torch.float64)
tensor([-3.1517, -4.9433, -4.7571, -7.2424, -5.5901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3819, device='cuda:0', dtype=torch.float64)
tensor([-3.1454, -4.9415, -4.7512, -7.2299, -5.5807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3496, device='cuda:0', dtype=torch.float64)
tensor([-3.1355, -4.9434, -4.7496, -7.2255, -5.5681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3058, device='cuda:0', dtype=torch.float64)
tensor([-3.1276, -4.9461, -4.7418, -7.2123, -5.5536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1894, device='cuda:0', dtype=torch.float64)
tensor([-3.1201, -4.9449, -4.7284, -7.1979, -5.5401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3448, device='cuda:0', dtype=torch.float64)
tensor([-3.1126, -4.9416, -4.7118, -7.1853, -5.5285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3054, device='cuda:0', dtype=torch.float64)
tensor([-3.1062, -4.9305, -4.6956, -7.1724, -5.5196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2617, device='cuda:0', dtype=torch.float64)
tensor([-3.1004, -4.9158, -4.6815, -7.1657, -5.5118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3404, device='cuda:0', dtype=torch.float64)
tensor([-3.0960, -4.8969, -4.6692, -7.1596, -5.5052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3390, device='cuda:0', dtype=torch.float64)
tensor([-3.0876, -4.8795, -4.6584, -7.1558, -5.4956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2559, device='cuda:0', dtype=torch.float64)
tensor([-3.0830, -4.8603, -4.6484, -7.1499, -5.4878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3172, device='cuda:0', dtype=torch.float64)
tensor([-3.0837, -4.8363, -4.6386, -7.1384, -5.4840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3180, device='cuda:0', dtype=torch.float64)
tensor([-3.0873, -4.8113, -4.6317, -7.1252, -5.4801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3532, device='cuda:0', dtype=torch.float64)
tensor([-3.0904, -4.7923, -4.6262, -7.1063, -5.4772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3139, device='cuda:0', dtype=torch.float64)
tensor([-3.0982, -4.7788, -4.6137, -7.0826, -5.4750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3915, device='cuda:0', dtype=torch.float64)
tensor([-3.1037, -4.7722, -4.6053, -7.0606, -5.4733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3199, device='cuda:0', dtype=torch.float64)
tensor([-3.1054, -4.7692, -4.5961, -7.0307, -5.4695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4152, device='cuda:0', dtype=torch.float64)
tensor([-3.1061, -4.7639, -4.5893, -7.0007, -5.4669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2704, device='cuda:0', dtype=torch.float64)
tensor([-3.1008, -4.7609, -4.5896, -6.9747, -5.4623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3626, device='cuda:0', dtype=torch.float64)
tensor([-3.0960, -4.7587, -4.5919, -6.9485, -5.4592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3780, device='cuda:0', dtype=torch.float64)
tensor([-3.0941, -4.7553, -4.5974, -6.9227, -5.4574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2793, device='cuda:0', dtype=torch.float64)
tensor([-3.0890, -4.7512, -4.6047, -6.9021, -5.4517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2021, device='cuda:0', dtype=torch.float64)
tensor([-3.0836, -4.7453, -4.6114, -6.8873, -5.4488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2306, device='cuda:0', dtype=torch.float64)
tensor([-3.0738, -4.7420, -4.6148, -6.8722, -5.4441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3591, device='cuda:0', dtype=torch.float64)
tensor([-3.0677, -4.7386, -4.6197, -6.8584, -5.4393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2943, device='cuda:0', dtype=torch.float64)
tensor([-3.0637, -4.7331, -4.6209, -6.8469, -5.4349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3312, device='cuda:0', dtype=torch.float64)
tensor([-3.0604, -4.7297, -4.6183, -6.8378, -5.4335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3344, device='cuda:0', dtype=torch.float64)
tensor([-3.0565, -4.7286, -4.6144, -6.8316, -5.4331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3241, device='cuda:0', dtype=torch.float64)
tensor([-3.0482, -4.7267, -4.6118, -6.8306, -5.4288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2568, device='cuda:0', dtype=torch.float64)
tensor([-3.0442, -4.7262, -4.6038, -6.8237, -5.4242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3851, device='cuda:0', dtype=torch.float64)
tensor([-3.0383, -4.7279, -4.5944, -6.8168, -5.4185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2148, device='cuda:0', dtype=torch.float64)
tensor([-3.0301, -4.7276, -4.5846, -6.8074, -5.4098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3781, device='cuda:0', dtype=torch.float64)
tensor([-3.0262, -4.7287, -4.5732, -6.7976, -5.4006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1630, device='cuda:0', dtype=torch.float64)
tensor([-3.0204, -4.7290, -4.5628, -6.7917, -5.3906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2397, device='cuda:0', dtype=torch.float64)
tensor([-3.0140, -4.7236, -4.5521, -6.7864, -5.3834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3059, device='cuda:0', dtype=torch.float64)
tensor([-3.0117, -4.7151, -4.5436, -6.7811, -5.3795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2194, device='cuda:0', dtype=torch.float64)
tensor([-3.0080, -4.7074, -4.5356, -6.7761, -5.3779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3704, device='cuda:0', dtype=torch.float64)
tensor([-3.0079, -4.6967, -4.5268, -6.7664, -5.3725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2059, device='cuda:0', dtype=torch.float64)
tensor([-3.0054, -4.6801, -4.5231, -6.7647, -5.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3094, device='cuda:0', dtype=torch.float64)
tensor([-3.0017, -4.6655, -4.5256, -6.7607, -5.3534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([-2.9992, -4.6554, -4.5245, -6.7488, -5.3396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1918, device='cuda:0', dtype=torch.float64)
tensor([-2.9914, -4.6425, -4.5239, -6.7472, -5.3222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2511, device='cuda:0', dtype=torch.float64)
tensor([-2.9844, -4.6296, -4.5265, -6.7509, -5.3062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1795, device='cuda:0', dtype=torch.float64)
tensor([-2.9789, -4.6167, -4.5331, -6.7581, -5.2948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([-2.9730, -4.6015, -4.5386, -6.7583, -5.2864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1682, device='cuda:0', dtype=torch.float64)
tensor([-2.9666, -4.5899, -4.5424, -6.7628, -5.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3357, device='cuda:0', dtype=torch.float64)
tensor([-2.9610, -4.5813, -4.5395, -6.7530, -5.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3683, device='cuda:0', dtype=torch.float64)
tensor([-2.9578, -4.5749, -4.5335, -6.7309, -5.2771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3107, device='cuda:0', dtype=torch.float64)
tensor([-2.9618, -4.5697, -4.5235, -6.6997, -5.2789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2080, device='cuda:0', dtype=torch.float64)
tensor([-2.9704, -4.5649, -4.5113, -6.6652, -5.2853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3097, device='cuda:0', dtype=torch.float64)
tensor([-2.9809, -4.5642, -4.4963, -6.6270, -5.2892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1068, device='cuda:0', dtype=torch.float64)
tensor([-2.9893, -4.5657, -4.4831, -6.5892, -5.2910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3700, device='cuda:0', dtype=torch.float64)
tensor([-2.9961, -4.5689, -4.4702, -6.5569, -5.2926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3875, device='cuda:0', dtype=torch.float64)
tensor([-2.9979, -4.5722, -4.4608, -6.5240, -5.2965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1838, device='cuda:0', dtype=torch.float64)
tensor([-3.0009, -4.5755, -4.4505, -6.4954, -5.2969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2839, device='cuda:0', dtype=torch.float64)
tensor([-3.0056, -4.5814, -4.4363, -6.4635, -5.2963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2378, device='cuda:0', dtype=torch.float64)
tensor([-3.0106, -4.5899, -4.4214, -6.4384, -5.2920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([-3.0142, -4.5975, -4.4095, -6.4160, -5.2858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1480, device='cuda:0', dtype=torch.float64)
tensor([-3.0173, -4.6020, -4.4001, -6.4028, -5.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2370, device='cuda:0', dtype=torch.float64)
tensor([-3.0184, -4.6016, -4.3919, -6.3925, -5.2695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1616, device='cuda:0', dtype=torch.float64)
tensor([-3.0173, -4.5991, -4.3840, -6.3875, -5.2569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1780, device='cuda:0', dtype=torch.float64)
tensor([-3.0051, -4.5930, -4.3845, -6.3958, -5.2422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1232, device='cuda:0', dtype=torch.float64)
tensor([-2.9960, -4.5844, -4.3825, -6.4068, -5.2306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2497, device='cuda:0', dtype=torch.float64)
tensor([-2.9852, -4.5733, -4.3841, -6.4239, -5.2218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1527, device='cuda:0', dtype=torch.float64)
tensor([-2.9739, -4.5594, -4.3870, -6.4423, -5.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1552, device='cuda:0', dtype=torch.float64)
tensor([-2.9633, -4.5462, -4.3928, -6.4641, -5.2133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3673, device='cuda:0', dtype=torch.float64)
tensor([-2.9519, -4.5320, -4.4039, -6.4803, -5.2105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2791, device='cuda:0', dtype=torch.float64)
tensor([-2.9423, -4.5259, -4.4064, -6.4832, -5.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2262, device='cuda:0', dtype=torch.float64)
tensor([-2.9348, -4.5134, -4.4048, -6.4756, -5.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3081, device='cuda:0', dtype=torch.float64)
tensor([-2.9261, -4.5020, -4.3984, -6.4675, -5.1938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2127, device='cuda:0', dtype=torch.float64)
tensor([-2.9249, -4.4923, -4.3885, -6.4495, -5.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2079, device='cuda:0', dtype=torch.float64)
tensor([-2.9226, -4.4850, -4.3817, -6.4307, -5.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1944, device='cuda:0', dtype=torch.float64)
tensor([-2.9159, -4.4785, -4.3743, -6.4121, -5.1921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2711, device='cuda:0', dtype=torch.float64)
tensor([-2.9083, -4.4722, -4.3756, -6.3970, -5.1850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1732, device='cuda:0', dtype=torch.float64)
tensor([-2.9023, -4.4694, -4.3782, -6.3854, -5.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1343, device='cuda:0', dtype=torch.float64)
tensor([-2.8979, -4.4637, -4.3776, -6.3777, -5.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1536, device='cuda:0', dtype=torch.float64)
tensor([-2.8914, -4.4584, -4.3783, -6.3757, -5.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2408, device='cuda:0', dtype=torch.float64)
tensor([-2.8829, -4.4538, -4.3801, -6.3769, -5.1594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2505, device='cuda:0', dtype=torch.float64)
tensor([-2.8772, -4.4481, -4.3826, -6.3759, -5.1521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1873, device='cuda:0', dtype=torch.float64)
tensor([-2.8759, -4.4445, -4.3785, -6.3641, -5.1478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3333, device='cuda:0', dtype=torch.float64)
tensor([-2.8786, -4.4405, -4.3675, -6.3499, -5.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2911, device='cuda:0', dtype=torch.float64)
tensor([-2.8804, -4.4378, -4.3571, -6.3381, -5.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2151, device='cuda:0', dtype=torch.float64)
tensor([-2.8859, -4.4327, -4.3479, -6.3296, -5.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1182, device='cuda:0', dtype=torch.float64)
tensor([-2.8903, -4.4270, -4.3392, -6.3158, -5.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2210, device='cuda:0', dtype=torch.float64)
tensor([-2.8908, -4.4200, -4.3325, -6.3064, -5.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2404, device='cuda:0', dtype=torch.float64)
tensor([-2.8898, -4.4191, -4.3228, -6.2971, -5.1708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1466, device='cuda:0', dtype=torch.float64)
tensor([-2.8887, -4.4186, -4.3162, -6.2882, -5.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2668, device='cuda:0', dtype=torch.float64)
tensor([-2.8867, -4.4205, -4.3132, -6.2794, -5.1714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1650, device='cuda:0', dtype=torch.float64)
tensor([-2.8841, -4.4157, -4.3174, -6.2709, -5.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2290, device='cuda:0', dtype=torch.float64)
tensor([-2.8786, -4.4114, -4.3198, -6.2629, -5.1692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1467, device='cuda:0', dtype=torch.float64)
tensor([-2.8727, -4.4040, -4.3223, -6.2532, -5.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1053, device='cuda:0', dtype=torch.float64)
tensor([-2.8686, -4.3955, -4.3246, -6.2539, -5.1658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2787, device='cuda:0', dtype=torch.float64)
tensor([-2.8642, -4.3844, -4.3263, -6.2522, -5.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1239, device='cuda:0', dtype=torch.float64)
tensor([-2.8574, -4.3763, -4.3303, -6.2539, -5.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1743, device='cuda:0', dtype=torch.float64)
tensor([-2.8517, -4.3676, -4.3344, -6.2548, -5.1573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1325, device='cuda:0', dtype=torch.float64)
tensor([-2.8477, -4.3627, -4.3379, -6.2433, -5.1516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0681, device='cuda:0', dtype=torch.float64)
tensor([-2.8424, -4.3589, -4.3372, -6.2224, -5.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2735, device='cuda:0', dtype=torch.float64)
tensor([-2.8432, -4.3578, -4.3338, -6.1938, -5.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2402, device='cuda:0', dtype=torch.float64)
tensor([-2.8471, -4.3580, -4.3275, -6.1608, -5.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1751, device='cuda:0', dtype=torch.float64)
tensor([-2.8521, -4.3575, -4.3168, -6.1206, -5.1376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2656, device='cuda:0', dtype=torch.float64)
tensor([-2.8538, -4.3609, -4.3049, -6.0863, -5.1360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1663, device='cuda:0', dtype=torch.float64)
tensor([-2.8554, -4.3635, -4.2901, -6.0534, -5.1314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1548, device='cuda:0', dtype=torch.float64)
tensor([-2.8564, -4.3638, -4.2806, -6.0292, -5.1238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0803, device='cuda:0', dtype=torch.float64)
tensor([-2.8572, -4.3618, -4.2683, -6.0124, -5.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2596, device='cuda:0', dtype=torch.float64)
tensor([-2.8585, -4.3586, -4.2564, -5.9954, -5.1088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2187, device='cuda:0', dtype=torch.float64)
tensor([-2.8597, -4.3538, -4.2438, -5.9806, -5.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1065, device='cuda:0', dtype=torch.float64)
tensor([-2.8598, -4.3479, -4.2324, -5.9738, -5.0920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0045, device='cuda:0', dtype=torch.float64)
tensor([-2.8583, -4.3375, -4.2258, -5.9747, -5.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1029, device='cuda:0', dtype=torch.float64)
tensor([-2.8625, -4.3248, -4.2144, -5.9706, -5.0798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2275, device='cuda:0', dtype=torch.float64)
tensor([-2.8659, -4.3105, -4.2102, -5.9695, -5.0746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1905, device='cuda:0', dtype=torch.float64)
tensor([-2.8694, -4.2952, -4.2074, -5.9682, -5.0699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2634, device='cuda:0', dtype=torch.float64)
tensor([-2.8731, -4.2815, -4.2059, -5.9730, -5.0630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0842, device='cuda:0', dtype=torch.float64)
tensor([-2.8758, -4.2707, -4.2053, -5.9737, -5.0549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3005, device='cuda:0', dtype=torch.float64)
tensor([-2.8759, -4.2622, -4.2065, -5.9693, -5.0470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1488, device='cuda:0', dtype=torch.float64)
tensor([-2.8776, -4.2568, -4.2109, -5.9665, -5.0375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3165, device='cuda:0', dtype=torch.float64)
tensor([-2.8757, -4.2540, -4.2184, -5.9686, -5.0279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1101, device='cuda:0', dtype=torch.float64)
tensor([-2.8683, -4.2564, -4.2274, -5.9713, -5.0132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0909, device='cuda:0', dtype=torch.float64)
tensor([-2.8617, -4.2610, -4.2336, -5.9692, -4.9991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2212, device='cuda:0', dtype=torch.float64)
tensor([-2.8588, -4.2636, -4.2436, -5.9676, -4.9870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2568, device='cuda:0', dtype=torch.float64)
tensor([-2.8560, -4.2735, -4.2518, -5.9626, -4.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0993, device='cuda:0', dtype=torch.float64)
tensor([-2.8524, -4.2852, -4.2575, -5.9586, -4.9676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0804, device='cuda:0', dtype=torch.float64)
tensor([-2.8482, -4.2955, -4.2618, -5.9558, -4.9589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1959, device='cuda:0', dtype=torch.float64)
tensor([-2.8511, -4.3100, -4.2604, -5.9441, -4.9540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1414, device='cuda:0', dtype=torch.float64)
tensor([-2.8516, -4.3213, -4.2651, -5.9352, -4.9486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2689, device='cuda:0', dtype=torch.float64)
tensor([-2.8538, -4.3281, -4.2636, -5.9143, -4.9479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2434, device='cuda:0', dtype=torch.float64)
tensor([-2.8506, -4.3297, -4.2663, -5.9102, -4.9487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2329, device='cuda:0', dtype=torch.float64)
tensor([-2.8501, -4.3293, -4.2686, -5.9092, -4.9486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2376, device='cuda:0', dtype=torch.float64)
tensor([-2.8556, -4.3260, -4.2715, -5.9036, -4.9535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1775, device='cuda:0', dtype=torch.float64)
tensor([-2.8582, -4.3246, -4.2732, -5.8979, -4.9584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3328, device='cuda:0', dtype=torch.float64)
tensor([-2.8674, -4.3242, -4.2675, -5.8892, -4.9649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0346, device='cuda:0', dtype=torch.float64)
tensor([-2.8727, -4.3251, -4.2583, -5.8786, -4.9711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1804, device='cuda:0', dtype=torch.float64)
tensor([-2.8731, -4.3216, -4.2497, -5.8759, -4.9729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1664, device='cuda:0', dtype=torch.float64)
tensor([-2.8769, -4.3154, -4.2385, -5.8741, -4.9783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0559, device='cuda:0', dtype=torch.float64)
tensor([-2.8695, -4.3060, -4.2366, -5.8772, -4.9762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0815, device='cuda:0', dtype=torch.float64)
tensor([-2.8593, -4.2993, -4.2322, -5.8813, -4.9736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9975, device='cuda:0', dtype=torch.float64)
tensor([-2.8460, -4.2874, -4.2287, -5.8880, -4.9671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0993, device='cuda:0', dtype=torch.float64)
tensor([-2.8361, -4.2753, -4.2227, -5.8940, -4.9628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0755, device='cuda:0', dtype=torch.float64)
tensor([-2.8317, -4.2651, -4.2143, -5.8952, -4.9588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0476, device='cuda:0', dtype=torch.float64)
tensor([-2.8285, -4.2586, -4.2049, -5.8946, -4.9549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0655, device='cuda:0', dtype=torch.float64)
tensor([-2.8297, -4.2537, -4.1954, -5.8939, -4.9527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0824, device='cuda:0', dtype=torch.float64)
tensor([-2.8325, -4.2530, -4.1858, -5.8884, -4.9465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2702, device='cuda:0', dtype=torch.float64)
tensor([-2.8338, -4.2564, -4.1804, -5.8713, -4.9352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2182, device='cuda:0', dtype=torch.float64)
tensor([-2.8319, -4.2580, -4.1779, -5.8544, -4.9234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2331, device='cuda:0', dtype=torch.float64)
tensor([-2.8357, -4.2573, -4.1742, -5.8351, -4.9152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1717, device='cuda:0', dtype=torch.float64)
tensor([-2.8405, -4.2570, -4.1718, -5.8127, -4.9105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2338, device='cuda:0', dtype=torch.float64)
tensor([-2.8434, -4.2609, -4.1695, -5.7885, -4.9053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0797, device='cuda:0', dtype=torch.float64)
tensor([-2.8414, -4.2675, -4.1724, -5.7703, -4.8975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1112, device='cuda:0', dtype=torch.float64)
tensor([-2.8368, -4.2716, -4.1762, -5.7572, -4.8893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0534, device='cuda:0', dtype=torch.float64)
tensor([-2.8284, -4.2736, -4.1798, -5.7469, -4.8799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0480, device='cuda:0', dtype=torch.float64)
tensor([-2.8205, -4.2734, -4.1852, -5.7426, -4.8706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1158, device='cuda:0', dtype=torch.float64)
tensor([-2.8095, -4.2677, -4.1888, -5.7451, -4.8609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1603, device='cuda:0', dtype=torch.float64)
tensor([-2.7996, -4.2557, -4.1908, -5.7520, -4.8542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9942, device='cuda:0', dtype=torch.float64)
tensor([-2.7902, -4.2424, -4.1849, -5.7618, -4.8471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1039, device='cuda:0', dtype=torch.float64)
tensor([-2.7828, -4.2277, -4.1802, -5.7673, -4.8420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1353, device='cuda:0', dtype=torch.float64)
tensor([-2.7741, -4.2145, -4.1743, -5.7729, -4.8404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1314, device='cuda:0', dtype=torch.float64)
tensor([-2.7680, -4.2024, -4.1698, -5.7700, -4.8377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1227, device='cuda:0', dtype=torch.float64)
tensor([-2.7666, -4.1926, -4.1640, -5.7672, -4.8402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0121, device='cuda:0', dtype=torch.float64)
tensor([-2.7680, -4.1846, -4.1594, -5.7650, -4.8449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2493, device='cuda:0', dtype=torch.float64)
tensor([-2.7713, -4.1773, -4.1564, -5.7677, -4.8514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2243, device='cuda:0', dtype=torch.float64)
tensor([-2.7751, -4.1659, -4.1594, -5.7751, -4.8568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1032, device='cuda:0', dtype=torch.float64)
tensor([-2.7814, -4.1528, -4.1652, -5.7846, -4.8635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1971, device='cuda:0', dtype=torch.float64)
tensor([-2.7859, -4.1364, -4.1738, -5.7986, -4.8673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2093, device='cuda:0', dtype=torch.float64)
tensor([-2.7906, -4.1242, -4.1790, -5.8066, -4.8690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1160, device='cuda:0', dtype=torch.float64)
tensor([-2.7969, -4.1113, -4.1848, -5.8070, -4.8715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0302, device='cuda:0', dtype=torch.float64)
tensor([-2.8001, -4.1048, -4.1896, -5.8101, -4.8732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0419, device='cuda:0', dtype=torch.float64)
tensor([-2.8025, -4.1061, -4.1956, -5.8109, -4.8725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2139, device='cuda:0', dtype=torch.float64)
tensor([-2.8062, -4.1116, -4.1996, -5.8141, -4.8721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1752, device='cuda:0', dtype=torch.float64)
tensor([-2.8078, -4.1159, -4.1998, -5.8208, -4.8694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9568, device='cuda:0', dtype=torch.float64)
tensor([-2.8110, -4.1230, -4.1957, -5.8217, -4.8645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2075, device='cuda:0', dtype=torch.float64)
tensor([-2.8133, -4.1326, -4.1872, -5.8121, -4.8601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0900, device='cuda:0', dtype=torch.float64)
tensor([-2.8141, -4.1425, -4.1745, -5.7944, -4.8519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1882, device='cuda:0', dtype=torch.float64)
tensor([-2.8219, -4.1518, -4.1587, -5.7649, -4.8477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0823, device='cuda:0', dtype=torch.float64)
tensor([-2.8318, -4.1635, -4.1433, -5.7316, -4.8442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0816, device='cuda:0', dtype=torch.float64)
tensor([-2.8412, -4.1735, -4.1253, -5.7080, -4.8396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9358, device='cuda:0', dtype=torch.float64)
tensor([-2.8480, -4.1821, -4.1078, -5.6867, -4.8354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2151, device='cuda:0', dtype=torch.float64)
tensor([-2.8555, -4.1899, -4.0921, -5.6665, -4.8317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1188, device='cuda:0', dtype=torch.float64)
tensor([-2.8576, -4.1951, -4.0836, -5.6593, -4.8282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9860, device='cuda:0', dtype=torch.float64)
tensor([-2.8550, -4.1967, -4.0789, -5.6584, -4.8229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0982, device='cuda:0', dtype=torch.float64)
tensor([-2.8483, -4.1948, -4.0751, -5.6596, -4.8148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1331, device='cuda:0', dtype=torch.float64)
tensor([-2.8430, -4.1884, -4.0740, -5.6663, -4.8101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1760, device='cuda:0', dtype=torch.float64)
tensor([-2.8414, -4.1843, -4.0776, -5.6716, -4.8090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9317, device='cuda:0', dtype=torch.float64)
tensor([-2.8361, -4.1785, -4.0859, -5.6781, -4.8049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1112, device='cuda:0', dtype=torch.float64)
tensor([-2.8301, -4.1769, -4.0948, -5.6807, -4.8024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0726, device='cuda:0', dtype=torch.float64)
tensor([-2.8233, -4.1710, -4.1074, -5.6882, -4.8015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0122, device='cuda:0', dtype=torch.float64)
tensor([-2.8139, -4.1641, -4.1224, -5.7053, -4.7963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1450, device='cuda:0', dtype=torch.float64)
tensor([-2.8004, -4.1558, -4.1350, -5.7345, -4.7920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0906, device='cuda:0', dtype=torch.float64)
tensor([-2.7846, -4.1470, -4.1460, -5.7612, -4.7870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9918, device='cuda:0', dtype=torch.float64)
tensor([-2.7702, -4.1389, -4.1560, -5.7761, -4.7829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1209, device='cuda:0', dtype=torch.float64)
tensor([-2.7573, -4.1361, -4.1600, -5.7817, -4.7804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3219, device='cuda:0', dtype=torch.float64)
tensor([-2.7494, -4.1360, -4.1614, -5.7750, -4.7816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0933, device='cuda:0', dtype=torch.float64)
tensor([-2.7485, -4.1392, -4.1587, -5.7593, -4.7843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0379, device='cuda:0', dtype=torch.float64)
tensor([-2.7473, -4.1427, -4.1509, -5.7418, -4.7879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9827, device='cuda:0', dtype=torch.float64)
tensor([-2.7500, -4.1411, -4.1419, -5.7214, -4.7945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1676, device='cuda:0', dtype=torch.float64)
tensor([-2.7558, -4.1366, -4.1343, -5.7035, -4.8054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0787, device='cuda:0', dtype=torch.float64)
tensor([-2.7632, -4.1317, -4.1259, -5.6888, -4.8149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2250, device='cuda:0', dtype=torch.float64)
tensor([-2.7692, -4.1291, -4.1137, -5.6694, -4.8212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2674, device='cuda:0', dtype=torch.float64)
tensor([-2.7735, -4.1268, -4.1021, -5.6506, -4.8238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9427, device='cuda:0', dtype=torch.float64)
tensor([-2.7712, -4.1205, -4.0935, -5.6417, -4.8222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1597, device='cuda:0', dtype=torch.float64)
tensor([-2.7734, -4.1153, -4.0836, -5.6276, -4.8237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0820, device='cuda:0', dtype=torch.float64)
tensor([-2.7769, -4.1098, -4.0739, -5.6123, -4.8234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0848, device='cuda:0', dtype=torch.float64)
tensor([-2.7803, -4.1023, -4.0642, -5.5939, -4.8207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9874, device='cuda:0', dtype=torch.float64)
tensor([-2.7798, -4.0966, -4.0561, -5.5790, -4.8161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1825, device='cuda:0', dtype=torch.float64)
tensor([-2.7772, -4.0908, -4.0551, -5.5743, -4.8095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0054, device='cuda:0', dtype=torch.float64)
tensor([-2.7734, -4.0825, -4.0568, -5.5711, -4.8043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1832, device='cuda:0', dtype=torch.float64)
tensor([-2.7706, -4.0743, -4.0585, -5.5726, -4.7997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1261, device='cuda:0', dtype=torch.float64)
tensor([-2.7685, -4.0680, -4.0635, -5.5799, -4.7982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1751, device='cuda:0', dtype=torch.float64)
tensor([-2.7644, -4.0615, -4.0660, -5.5868, -4.7941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1005, device='cuda:0', dtype=torch.float64)
tensor([-2.7611, -4.0576, -4.0687, -5.5894, -4.7888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1159, device='cuda:0', dtype=torch.float64)
tensor([-2.7554, -4.0560, -4.0685, -5.5879, -4.7824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1619, device='cuda:0', dtype=torch.float64)
tensor([-2.7503, -4.0549, -4.0690, -5.5893, -4.7759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1730, device='cuda:0', dtype=torch.float64)
tensor([-2.7426, -4.0583, -4.0667, -5.5910, -4.7660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9876, device='cuda:0', dtype=torch.float64)
tensor([-2.7407, -4.0620, -4.0618, -5.5811, -4.7585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0796, device='cuda:0', dtype=torch.float64)
tensor([-2.7462, -4.0688, -4.0514, -5.5656, -4.7540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9730, device='cuda:0', dtype=torch.float64)
tensor([-2.7495, -4.0722, -4.0450, -5.5551, -4.7483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([-2.7513, -4.0741, -4.0393, -5.5482, -4.7437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1051, device='cuda:0', dtype=torch.float64)
tensor([-2.7527, -4.0752, -4.0357, -5.5345, -4.7360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1071, device='cuda:0', dtype=torch.float64)
tensor([-2.7531, -4.0778, -4.0329, -5.5216, -4.7294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1775, device='cuda:0', dtype=torch.float64)
tensor([-2.7515, -4.0780, -4.0322, -5.5111, -4.7217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0637, device='cuda:0', dtype=torch.float64)
tensor([-2.7490, -4.0756, -4.0306, -5.5009, -4.7135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0416, device='cuda:0', dtype=torch.float64)
tensor([-2.7470, -4.0710, -4.0325, -5.4888, -4.7087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1665, device='cuda:0', dtype=torch.float64)
tensor([-2.7433, -4.0654, -4.0396, -5.4823, -4.7099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0831, device='cuda:0', dtype=torch.float64)
tensor([-2.7346, -4.0638, -4.0459, -5.4794, -4.7063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0943, device='cuda:0', dtype=torch.float64)
tensor([-2.7304, -4.0588, -4.0511, -5.4794, -4.7065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1293, device='cuda:0', dtype=torch.float64)
tensor([-2.7241, -4.0527, -4.0572, -5.4824, -4.7086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4183, device='cuda:0', dtype=torch.float64)
tensor([-2.7167, -4.0516, -4.0665, -5.4914, -4.7115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0212, device='cuda:0', dtype=torch.float64)
tensor([-2.7101, -4.0482, -4.0761, -5.5041, -4.7139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0672, device='cuda:0', dtype=torch.float64)
tensor([-2.7090, -4.0474, -4.0812, -5.5097, -4.7188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0894, device='cuda:0', dtype=torch.float64)
tensor([-2.7072, -4.0493, -4.0819, -5.5139, -4.7238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9943, device='cuda:0', dtype=torch.float64)
tensor([-2.7047, -4.0504, -4.0822, -5.5168, -4.7304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0898, device='cuda:0', dtype=torch.float64)
tensor([-2.7055, -4.0550, -4.0790, -5.5137, -4.7366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1304, device='cuda:0', dtype=torch.float64)
tensor([-2.7093, -4.0601, -4.0764, -5.5082, -4.7419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1410, device='cuda:0', dtype=torch.float64)
tensor([-2.7179, -4.0649, -4.0706, -5.4990, -4.7486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2870, device='cuda:0', dtype=torch.float64)
tensor([-2.7292, -4.0675, -4.0690, -5.4854, -4.7570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9570, device='cuda:0', dtype=torch.float64)
tensor([-2.7403, -4.0715, -4.0694, -5.4737, -4.7669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0105, device='cuda:0', dtype=torch.float64)
tensor([-2.7489, -4.0744, -4.0719, -5.4663, -4.7752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1672, device='cuda:0', dtype=torch.float64)
tensor([-2.7542, -4.0767, -4.0751, -5.4507, -4.7813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0741, device='cuda:0', dtype=torch.float64)
tensor([-2.7555, -4.0739, -4.0790, -5.4385, -4.7804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0126, device='cuda:0', dtype=torch.float64)
tensor([-2.7516, -4.0699, -4.0820, -5.4318, -4.7743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0728, device='cuda:0', dtype=torch.float64)
tensor([-2.7449, -4.0651, -4.0826, -5.4242, -4.7674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1925, device='cuda:0', dtype=torch.float64)
tensor([-2.7423, -4.0665, -4.0788, -5.4114, -4.7595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1622, device='cuda:0', dtype=torch.float64)
tensor([-2.7437, -4.0689, -4.0707, -5.3989, -4.7536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9981, device='cuda:0', dtype=torch.float64)
tensor([-2.7426, -4.0701, -4.0611, -5.3937, -4.7453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0915, device='cuda:0', dtype=torch.float64)
tensor([-2.7421, -4.0711, -4.0467, -5.3881, -4.7387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1137, device='cuda:0', dtype=torch.float64)
tensor([-2.7388, -4.0674, -4.0338, -5.3886, -4.7319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1006, device='cuda:0', dtype=torch.float64)
tensor([-2.7344, -4.0650, -4.0209, -5.3934, -4.7228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4513, device='cuda:0', dtype=torch.float64)
tensor([-2.7278, -4.0654, -4.0113, -5.3985, -4.7098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1434, device='cuda:0', dtype=torch.float64)
tensor([-2.7213, -4.0609, -4.0025, -5.4064, -4.7001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2783, device='cuda:0', dtype=torch.float64)
tensor([-2.7231, -4.0589, -3.9917, -5.4130, -4.6953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0373, device='cuda:0', dtype=torch.float64)
tensor([-2.7227, -4.0549, -3.9852, -5.4232, -4.6915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1125, device='cuda:0', dtype=torch.float64)
tensor([-2.7232, -4.0477, -3.9806, -5.4345, -4.6903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1441, device='cuda:0', dtype=torch.float64)
tensor([-2.7253, -4.0419, -3.9772, -5.4421, -4.6935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1563, device='cuda:0', dtype=torch.float64)
tensor([-2.7253, -4.0402, -3.9760, -5.4474, -4.6930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9610, device='cuda:0', dtype=torch.float64)
tensor([-2.7217, -4.0329, -3.9805, -5.4597, -4.6928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([-2.7187, -4.0249, -3.9846, -5.4728, -4.6901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1000, device='cuda:0', dtype=torch.float64)
tensor([-2.7177, -4.0138, -3.9909, -5.4903, -4.6933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0813, device='cuda:0', dtype=torch.float64)
tensor([-2.7200, -3.9977, -3.9973, -5.5034, -4.7017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9798, device='cuda:0', dtype=torch.float64)
tensor([-2.7244, -3.9827, -4.0000, -5.5056, -4.7109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-2.7255, -3.9687, -4.0018, -5.5088, -4.7138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9032, device='cuda:0', dtype=torch.float64)
tensor([-2.7273, -3.9577, -3.9999, -5.5042, -4.7157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0471, device='cuda:0', dtype=torch.float64)
tensor([-2.7326, -3.9536, -3.9973, -5.4870, -4.7132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0961, device='cuda:0', dtype=torch.float64)
tensor([-2.7378, -3.9539, -3.9965, -5.4634, -4.7098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0811, device='cuda:0', dtype=torch.float64)
tensor([-2.7445, -3.9551, -3.9959, -5.4359, -4.7061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0683, device='cuda:0', dtype=torch.float64)
tensor([-2.7522, -3.9546, -3.9955, -5.4070, -4.6994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9648, device='cuda:0', dtype=torch.float64)
tensor([-2.7561, -3.9566, -3.9959, -5.3835, -4.6921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9588, device='cuda:0', dtype=torch.float64)
tensor([-2.7601, -3.9588, -3.9959, -5.3623, -4.6850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9050, device='cuda:0', dtype=torch.float64)
tensor([-2.7637, -3.9592, -3.9954, -5.3462, -4.6794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0287, device='cuda:0', dtype=torch.float64)
tensor([-2.7659, -3.9570, -3.9963, -5.3367, -4.6788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1167, device='cuda:0', dtype=torch.float64)
tensor([-2.7649, -3.9580, -3.9973, -5.3274, -4.6768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0536, device='cuda:0', dtype=torch.float64)
tensor([-2.7611, -3.9593, -3.9969, -5.3208, -4.6724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1224, device='cuda:0', dtype=torch.float64)
tensor([-2.7572, -3.9599, -3.9966, -5.3208, -4.6693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1909, device='cuda:0', dtype=torch.float64)
tensor([-2.7499, -3.9601, -3.9991, -5.3245, -4.6679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9807, device='cuda:0', dtype=torch.float64)
tensor([-2.7375, -3.9547, -4.0078, -5.3426, -4.6651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2283, device='cuda:0', dtype=torch.float64)
tensor([-2.7293, -3.9509, -4.0141, -5.3553, -4.6628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1144, device='cuda:0', dtype=torch.float64)
tensor([-2.7219, -3.9437, -4.0192, -5.3583, -4.6627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9920, device='cuda:0', dtype=torch.float64)
tensor([-2.7131, -3.9390, -4.0226, -5.3580, -4.6617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9376, device='cuda:0', dtype=torch.float64)
tensor([-2.7072, -3.9330, -4.0237, -5.3578, -4.6602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0313, device='cuda:0', dtype=torch.float64)
tensor([-2.6995, -3.9300, -4.0219, -5.3604, -4.6557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8810, device='cuda:0', dtype=torch.float64)
tensor([-2.6917, -3.9228, -4.0207, -5.3653, -4.6520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0546, device='cuda:0', dtype=torch.float64)
tensor([-2.6933, -3.9213, -4.0111, -5.3514, -4.6509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1799, device='cuda:0', dtype=torch.float64)
tensor([-2.6956, -3.9253, -4.0014, -5.3287, -4.6483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9686, device='cuda:0', dtype=torch.float64)
tensor([-2.7015, -3.9311, -3.9899, -5.3001, -4.6471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9869, device='cuda:0', dtype=torch.float64)
tensor([-2.7087, -3.9372, -3.9804, -5.2780, -4.6462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1053, device='cuda:0', dtype=torch.float64)
tensor([-2.7204, -3.9422, -3.9706, -5.2555, -4.6481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1921, device='cuda:0', dtype=torch.float64)
tensor([-2.7307, -3.9490, -3.9608, -5.2398, -4.6484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0873, device='cuda:0', dtype=torch.float64)
tensor([-2.7411, -3.9547, -3.9533, -5.2211, -4.6510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9858, device='cuda:0', dtype=torch.float64)
tensor([-2.7564, -3.9585, -3.9439, -5.1989, -4.6572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0856, device='cuda:0', dtype=torch.float64)
tensor([-2.7707, -3.9591, -3.9380, -5.1789, -4.6643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2163, device='cuda:0', dtype=torch.float64)
tensor([-2.7799, -3.9583, -3.9341, -5.1655, -4.6666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1347, device='cuda:0', dtype=torch.float64)
tensor([-2.7852, -3.9572, -3.9296, -5.1589, -4.6653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0984, device='cuda:0', dtype=torch.float64)
tensor([-2.7848, -3.9541, -3.9309, -5.1582, -4.6636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1666, device='cuda:0', dtype=torch.float64)
tensor([-2.7838, -3.9470, -3.9319, -5.1664, -4.6666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1275, device='cuda:0', dtype=torch.float64)
tensor([-2.7771, -3.9338, -3.9384, -5.1791, -4.6683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9574, device='cuda:0', dtype=torch.float64)
tensor([-2.7647, -3.9209, -3.9456, -5.2067, -4.6704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0009, device='cuda:0', dtype=torch.float64)
tensor([-2.7512, -3.9074, -3.9519, -5.2329, -4.6721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0452, device='cuda:0', dtype=torch.float64)
tensor([-2.7336, -3.8906, -3.9652, -5.2671, -4.6740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1088, device='cuda:0', dtype=torch.float64)
tensor([-2.7141, -3.8782, -3.9755, -5.2979, -4.6703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9112, device='cuda:0', dtype=torch.float64)
tensor([-2.6926, -3.8663, -3.9877, -5.3296, -4.6649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9753, device='cuda:0', dtype=torch.float64)
tensor([-2.6781, -3.8602, -3.9942, -5.3542, -4.6599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0922, device='cuda:0', dtype=torch.float64)
tensor([-2.6704, -3.8580, -3.9947, -5.3589, -4.6556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1610, device='cuda:0', dtype=torch.float64)
tensor([-2.6661, -3.8597, -3.9948, -5.3475, -4.6530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9893, device='cuda:0', dtype=torch.float64)
tensor([-2.6580, -3.8630, -3.9961, -5.3377, -4.6485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8942, device='cuda:0', dtype=torch.float64)
tensor([-2.6548, -3.8680, -3.9965, -5.3177, -4.6435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1278, device='cuda:0', dtype=torch.float64)
tensor([-2.6521, -3.8721, -3.9954, -5.2969, -4.6381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0144, device='cuda:0', dtype=torch.float64)
tensor([-2.6477, -3.8687, -3.9966, -5.2869, -4.6321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2086, device='cuda:0', dtype=torch.float64)
tensor([-2.6480, -3.8648, -3.9977, -5.2799, -4.6285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9941, device='cuda:0', dtype=torch.float64)
tensor([-2.6539, -3.8623, -3.9964, -5.2688, -4.6271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0492, device='cuda:0', dtype=torch.float64)
tensor([-2.6580, -3.8590, -3.9970, -5.2673, -4.6226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1565, device='cuda:0', dtype=torch.float64)
tensor([-2.6697, -3.8564, -3.9908, -5.2570, -4.6205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0099, device='cuda:0', dtype=torch.float64)
tensor([-2.6789, -3.8528, -3.9861, -5.2496, -4.6171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1505, device='cuda:0', dtype=torch.float64)
tensor([-2.6885, -3.8500, -3.9822, -5.2327, -4.6149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0505, device='cuda:0', dtype=torch.float64)
tensor([-2.6981, -3.8510, -3.9741, -5.2110, -4.6097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1388, device='cuda:0', dtype=torch.float64)
tensor([-2.7072, -3.8507, -3.9665, -5.1999, -4.6069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0621, device='cuda:0', dtype=torch.float64)
tensor([-2.7136, -3.8492, -3.9593, -5.1968, -4.6043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8160, device='cuda:0', dtype=torch.float64)
tensor([-2.7126, -3.8459, -3.9560, -5.1990, -4.5998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1306, device='cuda:0', dtype=torch.float64)
tensor([-2.7112, -3.8407, -3.9511, -5.1981, -4.5966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0880, device='cuda:0', dtype=torch.float64)
tensor([-2.7137, -3.8339, -3.9456, -5.1903, -4.6001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1139, device='cuda:0', dtype=torch.float64)
tensor([-2.7175, -3.8292, -3.9395, -5.1778, -4.6013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1239, device='cuda:0', dtype=torch.float64)
tensor([-2.7181, -3.8262, -3.9342, -5.1744, -4.6030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1432, device='cuda:0', dtype=torch.float64)
tensor([-2.7229, -3.8262, -3.9256, -5.1613, -4.6062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9623, device='cuda:0', dtype=torch.float64)
tensor([-2.7284, -3.8275, -3.9163, -5.1481, -4.6087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0248, device='cuda:0', dtype=torch.float64)
tensor([-2.7317, -3.8312, -3.9058, -5.1329, -4.6095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9203, device='cuda:0', dtype=torch.float64)
tensor([-2.7323, -3.8375, -3.8960, -5.1202, -4.6089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0985, device='cuda:0', dtype=torch.float64)
tensor([-2.7275, -3.8449, -3.8862, -5.1130, -4.6077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0727, device='cuda:0', dtype=torch.float64)
tensor([-2.7216, -3.8547, -3.8797, -5.1121, -4.6084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2437, device='cuda:0', dtype=torch.float64)
tensor([-2.7212, -3.8666, -3.8700, -5.1062, -4.6127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1023, device='cuda:0', dtype=torch.float64)
tensor([-2.7199, -3.8814, -3.8643, -5.1073, -4.6184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0852, device='cuda:0', dtype=torch.float64)
tensor([-2.7164, -3.8927, -3.8630, -5.1110, -4.6207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9495, device='cuda:0', dtype=torch.float64)
tensor([-2.7115, -3.9031, -3.8619, -5.1091, -4.6207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9880, device='cuda:0', dtype=torch.float64)
tensor([-2.7034, -3.9094, -3.8668, -5.1075, -4.6180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1234, device='cuda:0', dtype=torch.float64)
tensor([-2.6993, -3.9167, -3.8695, -5.0979, -4.6142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-2.6994, -3.9201, -3.8721, -5.0932, -4.6114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0733, device='cuda:0', dtype=torch.float64)
tensor([-2.7046, -3.9225, -3.8754, -5.0863, -4.6114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1836, device='cuda:0', dtype=torch.float64)
tensor([-2.7130, -3.9200, -3.8805, -5.0780, -4.6123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0186, device='cuda:0', dtype=torch.float64)
tensor([-2.7205, -3.9131, -3.8834, -5.0745, -4.6127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2113, device='cuda:0', dtype=torch.float64)
tensor([-2.7285, -3.9086, -3.8847, -5.0733, -4.6102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0190, device='cuda:0', dtype=torch.float64)
tensor([-2.7366, -3.9029, -3.8855, -5.0686, -4.6089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8680, device='cuda:0', dtype=torch.float64)
tensor([-2.7449, -3.8976, -3.8855, -5.0662, -4.6054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1552, device='cuda:0', dtype=torch.float64)
tensor([-2.7520, -3.8861, -3.8884, -5.0700, -4.6052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0543, device='cuda:0', dtype=torch.float64)
tensor([-2.7561, -3.8744, -3.8908, -5.0766, -4.6062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0222, device='cuda:0', dtype=torch.float64)
tensor([-2.7636, -3.8670, -3.8897, -5.0764, -4.6110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0922, device='cuda:0', dtype=torch.float64)
tensor([-2.7648, -3.8554, -3.8928, -5.0752, -4.6121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1145, device='cuda:0', dtype=torch.float64)
tensor([-2.7638, -3.8461, -3.8937, -5.0782, -4.6120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0330, device='cuda:0', dtype=torch.float64)
tensor([-2.7632, -3.8367, -3.8914, -5.0789, -4.6102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0415, device='cuda:0', dtype=torch.float64)
tensor([-2.7614, -3.8279, -3.8916, -5.0775, -4.6110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0308, device='cuda:0', dtype=torch.float64)
tensor([-2.7573, -3.8190, -3.8909, -5.0847, -4.6090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1913, device='cuda:0', dtype=torch.float64)
tensor([-2.7520, -3.8098, -3.8899, -5.0928, -4.6079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0591, device='cuda:0', dtype=torch.float64)
tensor([-2.7487, -3.8053, -3.8891, -5.1022, -4.6091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0471, device='cuda:0', dtype=torch.float64)
tensor([-2.7444, -3.8001, -3.8859, -5.1096, -4.6075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9763, device='cuda:0', dtype=torch.float64)
tensor([-2.7316, -3.7988, -3.8817, -5.1246, -4.6034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1541, device='cuda:0', dtype=torch.float64)
tensor([-2.7202, -3.7952, -3.8805, -5.1311, -4.5991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0377, device='cuda:0', dtype=torch.float64)
tensor([-2.7159, -3.7947, -3.8798, -5.1301, -4.5950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0451, device='cuda:0', dtype=torch.float64)
tensor([-2.7096, -3.7920, -3.8808, -5.1335, -4.5918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-2.7069, -3.7932, -3.8780, -5.1371, -4.5922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0690, device='cuda:0', dtype=torch.float64)
tensor([-2.7045, -3.7982, -3.8739, -5.1412, -4.5908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1557, device='cuda:0', dtype=torch.float64)
tensor([-2.7025, -3.8047, -3.8693, -5.1445, -4.5876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8898, device='cuda:0', dtype=torch.float64)
tensor([-2.6986, -3.8137, -3.8663, -5.1441, -4.5817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1198, device='cuda:0', dtype=torch.float64)
tensor([-2.6945, -3.8244, -3.8616, -5.1481, -4.5726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1219, device='cuda:0', dtype=torch.float64)
tensor([-2.6895, -3.8367, -3.8579, -5.1488, -4.5595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-2.6834, -3.8444, -3.8595, -5.1508, -4.5469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0165, device='cuda:0', dtype=torch.float64)
tensor([-2.6690, -3.8490, -3.8657, -5.1540, -4.5298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0121, device='cuda:0', dtype=torch.float64)
tensor([-2.6613, -3.8484, -3.8746, -5.1587, -4.5185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1437, device='cuda:0', dtype=torch.float64)
tensor([-2.6584, -3.8466, -3.8816, -5.1569, -4.5130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0676, device='cuda:0', dtype=torch.float64)
tensor([-2.6598, -3.8449, -3.8859, -5.1470, -4.5106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9776, device='cuda:0', dtype=torch.float64)
tensor([-2.6626, -3.8491, -3.8869, -5.1326, -4.5059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9031, device='cuda:0', dtype=torch.float64)
tensor([-2.6677, -3.8516, -3.8868, -5.1142, -4.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0197, device='cuda:0', dtype=torch.float64)
tensor([-2.6733, -3.8502, -3.8891, -5.0881, -4.5042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1528, device='cuda:0', dtype=torch.float64)
tensor([-2.6781, -3.8485, -3.8916, -5.0690, -4.5031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1423, device='cuda:0', dtype=torch.float64)
tensor([-2.6839, -3.8447, -3.8956, -5.0451, -4.5029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9605, device='cuda:0', dtype=torch.float64)
tensor([-2.6894, -3.8410, -3.8954, -5.0264, -4.5054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8969, device='cuda:0', dtype=torch.float64)
tensor([-2.6922, -3.8362, -3.8966, -5.0152, -4.5061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2276, device='cuda:0', dtype=torch.float64)
tensor([-2.6902, -3.8296, -3.8970, -5.0088, -4.5050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0520, device='cuda:0', dtype=torch.float64)
tensor([-2.6830, -3.8246, -3.9008, -5.0145, -4.5053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9920, device='cuda:0', dtype=torch.float64)
tensor([-2.6759, -3.8218, -3.9010, -5.0212, -4.5041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1626, device='cuda:0', dtype=torch.float64)
tensor([-2.6687, -3.8196, -3.9017, -5.0259, -4.5018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1310, device='cuda:0', dtype=torch.float64)
tensor([-2.6552, -3.8125, -3.9081, -5.0391, -4.4959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1496, device='cuda:0', dtype=torch.float64)
tensor([-2.6433, -3.8054, -3.9141, -5.0510, -4.4884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1831, device='cuda:0', dtype=torch.float64)
tensor([-2.6368, -3.8017, -3.9167, -5.0542, -4.4802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1018, device='cuda:0', dtype=torch.float64)
tensor([-2.6340, -3.8009, -3.9168, -5.0580, -4.4760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1888, device='cuda:0', dtype=torch.float64)
tensor([-2.6320, -3.8043, -3.9118, -5.0507, -4.4701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0318, device='cuda:0', dtype=torch.float64)
tensor([-2.6277, -3.8012, -3.9078, -5.0486, -4.4611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9384, device='cuda:0', dtype=torch.float64)
tensor([-2.6235, -3.8023, -3.9025, -5.0433, -4.4525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1137, device='cuda:0', dtype=torch.float64)
tensor([-2.6238, -3.8027, -3.8962, -5.0365, -4.4467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1255, device='cuda:0', dtype=torch.float64)
tensor([-2.6248, -3.8050, -3.8896, -5.0276, -4.4437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9986, device='cuda:0', dtype=torch.float64)
tensor([-2.6240, -3.8035, -3.8896, -5.0260, -4.4423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0353, device='cuda:0', dtype=torch.float64)
tensor([-2.6258, -3.8066, -3.8870, -5.0296, -4.4404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1713, device='cuda:0', dtype=torch.float64)
tensor([-2.6268, -3.8081, -3.8894, -5.0418, -4.4352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0045, device='cuda:0', dtype=torch.float64)
tensor([-2.6275, -3.8089, -3.8910, -5.0541, -4.4315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0576, device='cuda:0', dtype=torch.float64)
tensor([-2.6339, -3.8077, -3.8903, -5.0619, -4.4365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9728, device='cuda:0', dtype=torch.float64)
tensor([-2.6421, -3.8082, -3.8861, -5.0655, -4.4454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3327, device='cuda:0', dtype=torch.float64)
tensor([-2.6476, -3.8070, -3.8826, -5.0698, -4.4577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2131, device='cuda:0', dtype=torch.float64)
tensor([-2.6588, -3.8038, -3.8762, -5.0694, -4.4723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9453, device='cuda:0', dtype=torch.float64)
tensor([-2.6719, -3.8024, -3.8668, -5.0638, -4.4860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0566, device='cuda:0', dtype=torch.float64)
tensor([-2.6876, -3.8005, -3.8555, -5.0566, -4.5007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1051, device='cuda:0', dtype=torch.float64)
tensor([-2.7039, -3.7983, -3.8474, -5.0484, -4.5145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9559, device='cuda:0', dtype=torch.float64)
tensor([-2.7218, -3.7965, -3.8379, -5.0368, -4.5289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1081, device='cuda:0', dtype=torch.float64)
tensor([-2.7356, -3.7968, -3.8352, -5.0248, -4.5390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0416, device='cuda:0', dtype=torch.float64)
tensor([-2.7447, -3.7946, -3.8338, -5.0113, -4.5417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0974, device='cuda:0', dtype=torch.float64)
tensor([-2.7473, -3.7937, -3.8395, -5.0027, -4.5374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2065, device='cuda:0', dtype=torch.float64)
tensor([-2.7430, -3.7933, -3.8463, -4.9972, -4.5276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0933, device='cuda:0', dtype=torch.float64)
tensor([-2.7365, -3.7946, -3.8545, -4.9929, -4.5197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1001, device='cuda:0', dtype=torch.float64)
tensor([-2.7287, -3.7970, -3.8585, -4.9890, -4.5114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1751, device='cuda:0', dtype=torch.float64)
tensor([-2.7188, -3.7998, -3.8649, -4.9885, -4.4997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8742, device='cuda:0', dtype=torch.float64)
tensor([-2.7074, -3.8028, -3.8709, -4.9887, -4.4853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9653, device='cuda:0', dtype=torch.float64)
tensor([-2.6908, -3.8088, -3.8729, -4.9925, -4.4673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1464, device='cuda:0', dtype=torch.float64)
tensor([-2.6772, -3.8119, -3.8702, -4.9983, -4.4583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0851, device='cuda:0', dtype=torch.float64)
tensor([-2.6650, -3.8160, -3.8652, -5.0005, -4.4523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1975, device='cuda:0', dtype=torch.float64)
tensor([-2.6552, -3.8194, -3.8623, -5.0035, -4.4493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1176, device='cuda:0', dtype=torch.float64)
tensor([-2.6538, -3.8246, -3.8518, -4.9971, -4.4503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1527, device='cuda:0', dtype=torch.float64)
tensor([-2.6548, -3.8311, -3.8440, -4.9922, -4.4572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1028, device='cuda:0', dtype=torch.float64)
tensor([-2.6579, -3.8333, -3.8421, -4.9973, -4.4677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0083, device='cuda:0', dtype=torch.float64)
tensor([-2.6603, -3.8397, -3.8373, -5.0022, -4.4728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1764, device='cuda:0', dtype=torch.float64)
tensor([-2.6648, -3.8474, -3.8310, -5.0098, -4.4766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1106, device='cuda:0', dtype=torch.float64)
tensor([-2.6709, -3.8554, -3.8251, -5.0149, -4.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0443, device='cuda:0', dtype=torch.float64)
tensor([-2.6747, -3.8628, -3.8242, -5.0194, -4.4828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1039, device='cuda:0', dtype=torch.float64)
tensor([-2.6754, -3.8656, -3.8207, -5.0181, -4.4823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0685, device='cuda:0', dtype=torch.float64)
tensor([-2.6783, -3.8665, -3.8170, -5.0155, -4.4846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-2.6806, -3.8688, -3.8159, -5.0142, -4.4859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9486, device='cuda:0', dtype=torch.float64)
tensor([-2.6824, -3.8746, -3.8134, -5.0090, -4.4885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9194, device='cuda:0', dtype=torch.float64)
tensor([-2.6838, -3.8769, -3.8139, -5.0052, -4.4925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9836, device='cuda:0', dtype=torch.float64)
tensor([-2.6879, -3.8814, -3.8158, -4.9969, -4.5011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9187, device='cuda:0', dtype=torch.float64)
tensor([-2.6907, -3.8834, -3.8190, -4.9843, -4.5067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0550, device='cuda:0', dtype=torch.float64)
tensor([-2.6901, -3.8815, -3.8280, -4.9791, -4.5090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8964, device='cuda:0', dtype=torch.float64)
tensor([-2.6900, -3.8806, -3.8327, -4.9783, -4.5109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0777, device='cuda:0', dtype=torch.float64)
tensor([-2.6891, -3.8734, -3.8372, -4.9813, -4.5138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1736, device='cuda:0', dtype=torch.float64)
tensor([-2.6897, -3.8670, -3.8476, -4.9914, -4.5200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9980, device='cuda:0', dtype=torch.float64)
tensor([-2.6910, -3.8576, -3.8575, -5.0054, -4.5228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1973, device='cuda:0', dtype=torch.float64)
tensor([-2.6999, -3.8486, -3.8663, -5.0138, -4.5285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1903, device='cuda:0', dtype=torch.float64)
tensor([-2.7095, -3.8387, -3.8727, -5.0201, -4.5342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0436, device='cuda:0', dtype=torch.float64)
tensor([-2.7129, -3.8283, -3.8769, -5.0236, -4.5359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2609, device='cuda:0', dtype=torch.float64)
tensor([-2.7156, -3.8195, -3.8818, -5.0217, -4.5407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9650, device='cuda:0', dtype=torch.float64)
tensor([-2.7174, -3.8107, -3.8830, -5.0165, -4.5448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0199, device='cuda:0', dtype=torch.float64)
tensor([-2.7138, -3.8008, -3.8872, -5.0195, -4.5436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0434, device='cuda:0', dtype=torch.float64)
tensor([-2.7113, -3.7923, -3.8859, -5.0139, -4.5425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9496, device='cuda:0', dtype=torch.float64)
tensor([-2.7055, -3.7857, -3.8844, -5.0169, -4.5394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9893, device='cuda:0', dtype=torch.float64)
tensor([-2.6963, -3.7819, -3.8793, -5.0177, -4.5332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1098, device='cuda:0', dtype=torch.float64)
tensor([-2.6888, -3.7814, -3.8718, -5.0164, -4.5279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0478, device='cuda:0', dtype=torch.float64)
tensor([-2.6817, -3.7840, -3.8607, -5.0091, -4.5204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8785, device='cuda:0', dtype=torch.float64)
tensor([-2.6758, -3.7871, -3.8488, -5.0000, -4.5139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0562, device='cuda:0', dtype=torch.float64)
tensor([-2.6765, -3.7921, -3.8375, -4.9884, -4.5078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1964, device='cuda:0', dtype=torch.float64)
tensor([-2.6775, -3.7956, -3.8254, -4.9784, -4.5018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1049, device='cuda:0', dtype=torch.float64)
tensor([-2.6800, -3.8011, -3.8101, -4.9740, -4.4965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0053, device='cuda:0', dtype=torch.float64)
tensor([-2.6848, -3.8085, -3.7969, -4.9698, -4.4960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0010, device='cuda:0', dtype=torch.float64)
tensor([-2.6871, -3.8188, -3.7874, -4.9628, -4.4967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1721, device='cuda:0', dtype=torch.float64)
tensor([-2.6900, -3.8259, -3.7799, -4.9580, -4.4964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9640, device='cuda:0', dtype=torch.float64)
tensor([-2.6933, -3.8319, -3.7733, -4.9516, -4.4961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0695, device='cuda:0', dtype=torch.float64)
tensor([-2.6950, -3.8346, -3.7683, -4.9472, -4.4990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9974, device='cuda:0', dtype=torch.float64)
tensor([-2.6969, -3.8354, -3.7653, -4.9347, -4.5010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0051, device='cuda:0', dtype=torch.float64)
tensor([-2.6981, -3.8333, -3.7656, -4.9255, -4.5002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0733, device='cuda:0', dtype=torch.float64)
tensor([-2.6964, -3.8284, -3.7683, -4.9240, -4.4943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0506, device='cuda:0', dtype=torch.float64)
tensor([-2.6931, -3.8227, -3.7722, -4.9248, -4.4863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1481, device='cuda:0', dtype=torch.float64)
tensor([-2.6890, -3.8188, -3.7784, -4.9200, -4.4782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0501, device='cuda:0', dtype=torch.float64)
tensor([-2.6832, -3.8117, -3.7871, -4.9177, -4.4675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0374, device='cuda:0', dtype=torch.float64)
tensor([-2.6741, -3.8054, -3.7946, -4.9206, -4.4585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0872, device='cuda:0', dtype=torch.float64)
tensor([-2.6700, -3.8014, -3.8009, -4.9212, -4.4547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9940, device='cuda:0', dtype=torch.float64)
tensor([-2.6621, -3.7963, -3.8064, -4.9318, -4.4465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2212, device='cuda:0', dtype=torch.float64)
tensor([-2.6548, -3.7949, -3.8119, -4.9376, -4.4397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0315, device='cuda:0', dtype=torch.float64)
tensor([-2.6487, -3.7898, -3.8221, -4.9469, -4.4343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9802, device='cuda:0', dtype=torch.float64)
tensor([-2.6420, -3.7821, -3.8349, -4.9575, -4.4308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9924, device='cuda:0', dtype=torch.float64)
tensor([-2.6420, -3.7768, -3.8430, -4.9608, -4.4298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1198, device='cuda:0', dtype=torch.float64)
tensor([-2.6369, -3.7695, -3.8501, -4.9673, -4.4258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0701, device='cuda:0', dtype=torch.float64)
tensor([-2.6356, -3.7641, -3.8564, -4.9708, -4.4249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1721, device='cuda:0', dtype=torch.float64)
tensor([-2.6353, -3.7566, -3.8602, -4.9731, -4.4241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1475, device='cuda:0', dtype=torch.float64)
tensor([-2.6438, -3.7503, -3.8586, -4.9619, -4.4286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0046, device='cuda:0', dtype=torch.float64)
tensor([-2.6521, -3.7473, -3.8553, -4.9554, -4.4341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9312, device='cuda:0', dtype=torch.float64)
tensor([-2.6643, -3.7428, -3.8467, -4.9433, -4.4413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8403, device='cuda:0', dtype=torch.float64)
tensor([-2.6757, -3.7408, -3.8390, -4.9252, -4.4461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1324, device='cuda:0', dtype=torch.float64)
tensor([-2.6839, -3.7382, -3.8302, -4.9139, -4.4506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1144, device='cuda:0', dtype=torch.float64)
tensor([-2.6904, -3.7350, -3.8201, -4.9078, -4.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0162, device='cuda:0', dtype=torch.float64)
tensor([-2.6942, -3.7274, -3.8129, -4.9057, -4.4561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9493, device='cuda:0', dtype=torch.float64)
tensor([-2.6960, -3.7236, -3.8036, -4.9029, -4.4575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0807, device='cuda:0', dtype=torch.float64)
tensor([-2.6995, -3.7243, -3.7936, -4.9022, -4.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0600, device='cuda:0', dtype=torch.float64)
tensor([-2.7015, -3.7221, -3.7856, -4.9041, -4.4589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0404, device='cuda:0', dtype=torch.float64)
tensor([-2.7011, -3.7218, -3.7755, -4.9099, -4.4547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0104, device='cuda:0', dtype=torch.float64)
tensor([-2.6964, -3.7169, -3.7682, -4.9149, -4.4510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9518, device='cuda:0', dtype=torch.float64)
tensor([-2.6891, -3.7171, -3.7612, -4.9205, -4.4445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9000, device='cuda:0', dtype=torch.float64)
tensor([-2.6833, -3.7186, -3.7558, -4.9264, -4.4404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1503, device='cuda:0', dtype=torch.float64)
tensor([-2.6797, -3.7238, -3.7468, -4.9249, -4.4335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0568, device='cuda:0', dtype=torch.float64)
tensor([-2.6742, -3.7299, -3.7395, -4.9288, -4.4223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9654, device='cuda:0', dtype=torch.float64)
tensor([-2.6688, -3.7353, -3.7332, -4.9380, -4.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9906, device='cuda:0', dtype=torch.float64)
tensor([-2.6635, -3.7428, -3.7274, -4.9450, -4.4087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0920, device='cuda:0', dtype=torch.float64)
tensor([-2.6590, -3.7514, -3.7253, -4.9582, -4.4075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1733, device='cuda:0', dtype=torch.float64)
tensor([-2.6585, -3.7575, -3.7229, -4.9602, -4.4105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1380, device='cuda:0', dtype=torch.float64)
tensor([-2.6616, -3.7637, -3.7214, -4.9538, -4.4155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0350, device='cuda:0', dtype=torch.float64)
tensor([-2.6638, -3.7680, -3.7228, -4.9471, -4.4201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9811, device='cuda:0', dtype=torch.float64)
tensor([-2.6613, -3.7683, -3.7290, -4.9452, -4.4252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1727, device='cuda:0', dtype=torch.float64)
tensor([-2.6568, -3.7664, -3.7354, -4.9486, -4.4294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1061, device='cuda:0', dtype=torch.float64)
tensor([-2.6581, -3.7702, -3.7395, -4.9470, -4.4371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9800, device='cuda:0', dtype=torch.float64)
tensor([-2.6548, -3.7697, -3.7494, -4.9476, -4.4433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2653, device='cuda:0', dtype=torch.float64)
tensor([-2.6554, -3.7695, -3.7591, -4.9461, -4.4496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0608, device='cuda:0', dtype=torch.float64)
tensor([-2.6585, -3.7671, -3.7714, -4.9378, -4.4555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0932, device='cuda:0', dtype=torch.float64)
tensor([-2.6691, -3.7637, -3.7837, -4.9233, -4.4669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1274, device='cuda:0', dtype=torch.float64)
tensor([-2.6785, -3.7625, -3.7963, -4.9117, -4.4784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1390, device='cuda:0', dtype=torch.float64)
tensor([-2.6841, -3.7631, -3.8072, -4.8976, -4.4882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1474, device='cuda:0', dtype=torch.float64)
tensor([-2.6832, -3.7632, -3.8148, -4.8951, -4.4902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0367, device='cuda:0', dtype=torch.float64)
tensor([-2.6840, -3.7650, -3.8262, -4.8911, -4.4953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0717, device='cuda:0', dtype=torch.float64)
tensor([-2.6847, -3.7654, -3.8339, -4.8810, -4.4975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9813, device='cuda:0', dtype=torch.float64)
tensor([-2.6764, -3.7620, -3.8449, -4.8847, -4.4916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1242, device='cuda:0', dtype=torch.float64)
tensor([-2.6653, -3.7615, -3.8542, -4.8896, -4.4835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1512, device='cuda:0', dtype=torch.float64)
tensor([-2.6616, -3.7621, -3.8597, -4.8950, -4.4801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0412, device='cuda:0', dtype=torch.float64)
tensor([-2.6551, -3.7606, -3.8687, -4.9047, -4.4737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8807, device='cuda:0', dtype=torch.float64)
tensor([-2.6522, -3.7565, -3.8754, -4.9202, -4.4685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0276, device='cuda:0', dtype=torch.float64)
tensor([-2.6527, -3.7530, -3.8795, -4.9340, -4.4625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9733, device='cuda:0', dtype=torch.float64)
tensor([-2.6558, -3.7498, -3.8830, -4.9458, -4.4565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2361, device='cuda:0', dtype=torch.float64)
tensor([-2.6625, -3.7520, -3.8885, -4.9548, -4.4526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9280, device='cuda:0', dtype=torch.float64)
tensor([-2.6675, -3.7518, -3.8906, -4.9661, -4.4475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0598, device='cuda:0', dtype=torch.float64)
tensor([-2.6708, -3.7501, -3.8894, -4.9670, -4.4379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9832, device='cuda:0', dtype=torch.float64)
tensor([-2.6715, -3.7512, -3.8865, -4.9680, -4.4270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0873, device='cuda:0', dtype=torch.float64)
tensor([-2.6702, -3.7532, -3.8807, -4.9728, -4.4164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9612, device='cuda:0', dtype=torch.float64)
tensor([-2.6711, -3.7537, -3.8756, -4.9746, -4.4089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9620, device='cuda:0', dtype=torch.float64)
tensor([-2.6706, -3.7588, -3.8670, -4.9685, -4.4003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1300, device='cuda:0', dtype=torch.float64)
tensor([-2.6645, -3.7678, -3.8548, -4.9537, -4.3864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1115, device='cuda:0', dtype=torch.float64)
tensor([-2.6585, -3.7766, -3.8441, -4.9422, -4.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0177, device='cuda:0', dtype=torch.float64)
tensor([-2.6496, -3.7845, -3.8338, -4.9335, -4.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9532, device='cuda:0', dtype=torch.float64)
tensor([-2.6387, -3.7932, -3.8246, -4.9204, -4.3583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0690, device='cuda:0', dtype=torch.float64)
tensor([-2.6292, -3.8005, -3.8129, -4.9036, -4.3489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0522, device='cuda:0', dtype=torch.float64)
tensor([-2.6185, -3.8056, -3.8020, -4.8896, -4.3398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0023, device='cuda:0', dtype=torch.float64)
tensor([-2.6090, -3.8086, -3.7922, -4.8755, -4.3362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9761, device='cuda:0', dtype=torch.float64)
tensor([-2.6002, -3.8088, -3.7816, -4.8623, -4.3299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9731, device='cuda:0', dtype=torch.float64)
tensor([-2.5990, -3.8076, -3.7781, -4.8475, -4.3342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0700, device='cuda:0', dtype=torch.float64)
tensor([-2.5996, -3.8090, -3.7713, -4.8290, -4.3413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2192, device='cuda:0', dtype=torch.float64)
tensor([-2.6023, -3.8124, -3.7662, -4.8069, -4.3501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2998, device='cuda:0', dtype=torch.float64)
tensor([-2.6086, -3.8127, -3.7632, -4.7768, -4.3633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1713, device='cuda:0', dtype=torch.float64)
tensor([-2.6157, -3.8125, -3.7622, -4.7563, -4.3757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0967, device='cuda:0', dtype=torch.float64)
tensor([-2.6222, -3.8097, -3.7650, -4.7433, -4.3877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0890, device='cuda:0', dtype=torch.float64)
tensor([-2.6331, -3.8022, -3.7671, -4.7303, -4.4032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0675, device='cuda:0', dtype=torch.float64)
tensor([-2.6442, -3.7903, -3.7720, -4.7308, -4.4179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8897, device='cuda:0', dtype=torch.float64)
tensor([-2.6493, -3.7695, -3.7862, -4.7467, -4.4291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9505, device='cuda:0', dtype=torch.float64)
tensor([-2.6524, -3.7495, -3.8008, -4.7804, -4.4386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3212, device='cuda:0', dtype=torch.float64)
tensor([-2.6564, -3.7350, -3.8120, -4.8272, -4.4484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1321, device='cuda:0', dtype=torch.float64)
tensor([-2.6607, -3.7188, -3.8245, -4.8692, -4.4554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0911, device='cuda:0', dtype=torch.float64)
tensor([-2.6666, -3.7023, -3.8331, -4.9032, -4.4638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9785, device='cuda:0', dtype=torch.float64)
tensor([-2.6715, -3.6906, -3.8360, -4.9339, -4.4671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-2.6735, -3.6821, -3.8367, -4.9600, -4.4666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9312, device='cuda:0', dtype=torch.float64)
tensor([-2.6758, -3.6779, -3.8360, -4.9815, -4.4633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0622, device='cuda:0', dtype=torch.float64)
tensor([-2.6768, -3.6758, -3.8358, -5.0014, -4.4572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1553, device='cuda:0', dtype=torch.float64)
tensor([-2.6798, -3.6737, -3.8360, -5.0243, -4.4527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9055, device='cuda:0', dtype=torch.float64)
tensor([-2.6793, -3.6721, -3.8344, -5.0386, -4.4435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0406, device='cuda:0', dtype=torch.float64)
tensor([-2.6720, -3.6682, -3.8338, -5.0507, -4.4291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1453, device='cuda:0', dtype=torch.float64)
tensor([-2.6596, -3.6649, -3.8353, -5.0571, -4.4129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1147, device='cuda:0', dtype=torch.float64)
tensor([-2.6521, -3.6649, -3.8380, -5.0551, -4.3985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0777, device='cuda:0', dtype=torch.float64)
tensor([-2.6418, -3.6675, -3.8394, -5.0389, -4.3825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0456, device='cuda:0', dtype=torch.float64)
tensor([-2.6370, -3.6728, -3.8387, -5.0217, -4.3700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9391, device='cuda:0', dtype=torch.float64)
tensor([-2.6341, -3.6764, -3.8403, -4.9955, -4.3613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9932, device='cuda:0', dtype=torch.float64)
tensor([-2.6301, -3.6785, -3.8394, -4.9771, -4.3521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1134, device='cuda:0', dtype=torch.float64)
tensor([-2.6299, -3.6829, -3.8347, -4.9564, -4.3430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2681, device='cuda:0', dtype=torch.float64)
tensor([-2.6287, -3.6855, -3.8316, -4.9364, -4.3318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9940, device='cuda:0', dtype=torch.float64)
tensor([-2.6254, -3.6908, -3.8295, -4.9195, -4.3197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9724, device='cuda:0', dtype=torch.float64)
tensor([-2.6240, -3.6993, -3.8305, -4.8966, -4.3077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0723, device='cuda:0', dtype=torch.float64)
tensor([-2.6247, -3.7060, -3.8336, -4.8726, -4.3012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2183, device='cuda:0', dtype=torch.float64)
tensor([-2.6310, -3.7142, -3.8361, -4.8420, -4.3019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9320, device='cuda:0', dtype=torch.float64)
tensor([-2.6412, -3.7223, -3.8349, -4.8149, -4.3057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1971, device='cuda:0', dtype=torch.float64)
tensor([-2.6481, -3.7323, -3.8330, -4.7933, -4.3048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1026, device='cuda:0', dtype=torch.float64)
tensor([-2.6556, -3.7448, -3.8300, -4.7685, -4.3058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0288, device='cuda:0', dtype=torch.float64)
tensor([-2.6615, -3.7520, -3.8263, -4.7524, -4.3065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1577, device='cuda:0', dtype=torch.float64)
tensor([-2.6683, -3.7538, -3.8280, -4.7377, -4.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-2.6719, -3.7528, -3.8294, -4.7300, -4.3109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9384, device='cuda:0', dtype=torch.float64)
tensor([-2.6721, -3.7490, -3.8349, -4.7293, -4.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1161, device='cuda:0', dtype=torch.float64)
tensor([-2.6722, -3.7441, -3.8388, -4.7303, -4.3167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1884, device='cuda:0', dtype=torch.float64)
tensor([-2.6724, -3.7409, -3.8484, -4.7414, -4.3224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0305, device='cuda:0', dtype=torch.float64)
tensor([-2.6756, -3.7400, -3.8527, -4.7564, -4.3287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0660, device='cuda:0', dtype=torch.float64)
tensor([-2.6857, -3.7416, -3.8514, -4.7684, -4.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0980, device='cuda:0', dtype=torch.float64)
tensor([-2.6901, -3.7425, -3.8503, -4.7828, -4.3429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1737, device='cuda:0', dtype=torch.float64)
tensor([-2.7001, -3.7428, -3.8483, -4.7865, -4.3557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0832, device='cuda:0', dtype=torch.float64)
tensor([-2.7086, -3.7460, -3.8418, -4.7811, -4.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0228, device='cuda:0', dtype=torch.float64)
tensor([-2.7156, -3.7549, -3.8370, -4.7666, -4.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1784, device='cuda:0', dtype=torch.float64)
tensor([-2.7163, -3.7640, -3.8340, -4.7508, -4.3837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9119, device='cuda:0', dtype=torch.float64)
tensor([-2.7151, -3.7726, -3.8286, -4.7361, -4.3877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9639, device='cuda:0', dtype=torch.float64)
tensor([-2.7075, -3.7768, -3.8251, -4.7392, -4.3915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1550, device='cuda:0', dtype=torch.float64)
tensor([-2.7001, -3.7789, -3.8247, -4.7430, -4.3933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0096, device='cuda:0', dtype=torch.float64)
tensor([-2.6983, -3.7815, -3.8212, -4.7378, -4.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8455, device='cuda:0', dtype=torch.float64)
tensor([-2.6942, -3.7807, -3.8197, -4.7380, -4.4036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0495, device='cuda:0', dtype=torch.float64)
tensor([-2.6900, -3.7839, -3.8177, -4.7403, -4.4065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2177, device='cuda:0', dtype=torch.float64)
tensor([-2.6824, -3.7849, -3.8202, -4.7492, -4.4093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0355, device='cuda:0', dtype=torch.float64)
tensor([-2.6748, -3.7874, -3.8204, -4.7568, -4.4134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0384, device='cuda:0', dtype=torch.float64)
tensor([-2.6658, -3.7858, -3.8154, -4.7671, -4.4169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9505, device='cuda:0', dtype=torch.float64)
tensor([-2.6619, -3.7838, -3.8090, -4.7793, -4.4228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9222, device='cuda:0', dtype=torch.float64)
tensor([-2.6605, -3.7786, -3.8010, -4.7864, -4.4279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9295, device='cuda:0', dtype=torch.float64)
tensor([-2.6593, -3.7742, -3.7922, -4.7855, -4.4308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-2.6628, -3.7664, -3.7827, -4.7797, -4.4359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0321, device='cuda:0', dtype=torch.float64)
tensor([-2.6650, -3.7586, -3.7775, -4.7848, -4.4380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0250, device='cuda:0', dtype=torch.float64)
tensor([-2.6697, -3.7507, -3.7701, -4.7895, -4.4394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0748, device='cuda:0', dtype=torch.float64)
tensor([-2.6780, -3.7408, -3.7627, -4.7935, -4.4425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2216, device='cuda:0', dtype=torch.float64)
tensor([-2.6861, -3.7302, -3.7593, -4.8042, -4.4442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1611, device='cuda:0', dtype=torch.float64)
tensor([-2.6919, -3.7228, -3.7588, -4.8133, -4.4436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9679, device='cuda:0', dtype=torch.float64)
tensor([-2.6945, -3.7169, -3.7602, -4.8195, -4.4403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9998, device='cuda:0', dtype=torch.float64)
tensor([-2.6914, -3.7073, -3.7679, -4.8372, -4.4348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0865, device='cuda:0', dtype=torch.float64)
tensor([-2.6873, -3.7040, -3.7741, -4.8515, -4.4270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0648, device='cuda:0', dtype=torch.float64)
tensor([-2.6823, -3.7044, -3.7808, -4.8577, -4.4170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0600, device='cuda:0', dtype=torch.float64)
tensor([-2.6808, -3.7051, -3.7911, -4.8690, -4.4081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0032, device='cuda:0', dtype=torch.float64)
tensor([-2.6770, -3.7087, -3.8000, -4.8763, -4.3989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2446, device='cuda:0', dtype=torch.float64)
tensor([-2.6745, -3.7121, -3.8080, -4.8755, -4.3915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1499, device='cuda:0', dtype=torch.float64)
tensor([-2.6728, -3.7146, -3.8105, -4.8681, -4.3870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0951, device='cuda:0', dtype=torch.float64)
tensor([-2.6716, -3.7157, -3.8115, -4.8628, -4.3868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1983, device='cuda:0', dtype=torch.float64)
tensor([-2.6748, -3.7186, -3.8107, -4.8561, -4.3871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0526, device='cuda:0', dtype=torch.float64)
tensor([-2.6749, -3.7215, -3.8102, -4.8494, -4.3849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0277, device='cuda:0', dtype=torch.float64)
tensor([-2.6748, -3.7232, -3.8072, -4.8456, -4.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8797, device='cuda:0', dtype=torch.float64)
tensor([-2.6761, -3.7252, -3.8046, -4.8392, -4.3790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1451, device='cuda:0', dtype=torch.float64)
tensor([-2.6758, -3.7311, -3.8035, -4.8397, -4.3748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2451, device='cuda:0', dtype=torch.float64)
tensor([-2.6772, -3.7380, -3.8012, -4.8259, -4.3742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0407, device='cuda:0', dtype=torch.float64)
tensor([-2.6822, -3.7450, -3.7947, -4.8080, -4.3756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9894, device='cuda:0', dtype=torch.float64)
tensor([-2.6855, -3.7459, -3.7876, -4.7987, -4.3757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1468, device='cuda:0', dtype=torch.float64)
tensor([-2.6830, -3.7468, -3.7844, -4.7976, -4.3696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1139, device='cuda:0', dtype=torch.float64)
tensor([-2.6886, -3.7469, -3.7800, -4.7946, -4.3690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0173, device='cuda:0', dtype=torch.float64)
tensor([-2.6961, -3.7482, -3.7740, -4.7874, -4.3712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0152, device='cuda:0', dtype=torch.float64)
tensor([-2.6978, -3.7474, -3.7695, -4.7807, -4.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9599, device='cuda:0', dtype=torch.float64)
tensor([-2.6966, -3.7460, -3.7683, -4.7720, -4.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0259, device='cuda:0', dtype=torch.float64)
tensor([-2.6976, -3.7428, -3.7695, -4.7625, -4.3625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0938, device='cuda:0', dtype=torch.float64)
tensor([-2.6941, -3.7375, -3.7732, -4.7630, -4.3544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1320, device='cuda:0', dtype=torch.float64)
tensor([-2.6941, -3.7353, -3.7743, -4.7596, -4.3473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9422, device='cuda:0', dtype=torch.float64)
tensor([-2.6940, -3.7348, -3.7738, -4.7546, -4.3413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9098, device='cuda:0', dtype=torch.float64)
tensor([-2.6914, -3.7340, -3.7763, -4.7489, -4.3346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9655, device='cuda:0', dtype=torch.float64)
tensor([-2.6927, -3.7338, -3.7750, -4.7418, -4.3339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1296, device='cuda:0', dtype=torch.float64)
tensor([-2.6938, -3.7274, -3.7788, -4.7364, -4.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2758, device='cuda:0', dtype=torch.float64)
tensor([-2.6920, -3.7274, -3.7749, -4.7258, -4.3335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1705, device='cuda:0', dtype=torch.float64)
tensor([-2.6902, -3.7272, -3.7686, -4.7124, -4.3323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0038, device='cuda:0', dtype=torch.float64)
tensor([-2.6858, -3.7235, -3.7622, -4.7036, -4.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0703, device='cuda:0', dtype=torch.float64)
tensor([-2.6822, -3.7193, -3.7561, -4.7047, -4.3312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0990, device='cuda:0', dtype=torch.float64)
tensor([-2.6781, -3.7209, -3.7507, -4.7021, -4.3370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9729, device='cuda:0', dtype=torch.float64)
tensor([-2.6735, -3.7213, -3.7461, -4.7070, -4.3412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1429, device='cuda:0', dtype=torch.float64)
tensor([-2.6737, -3.7199, -3.7421, -4.7128, -4.3481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0664, device='cuda:0', dtype=torch.float64)
tensor([-2.6687, -3.7146, -3.7444, -4.7277, -4.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0261, device='cuda:0', dtype=torch.float64)
tensor([-2.6670, -3.7095, -3.7457, -4.7406, -4.3568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3801, device='cuda:0', dtype=torch.float64)
tensor([-2.6728, -3.7067, -3.7423, -4.7548, -4.3669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0536, device='cuda:0', dtype=torch.float64)
tensor([-2.6790, -3.7061, -3.7392, -4.7704, -4.3739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0114, device='cuda:0', dtype=torch.float64)
tensor([-2.6873, -3.7077, -3.7379, -4.7790, -4.3826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1195, device='cuda:0', dtype=torch.float64)
tensor([-2.6963, -3.7066, -3.7364, -4.7899, -4.3905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1196, device='cuda:0', dtype=torch.float64)
tensor([-2.7064, -3.7055, -3.7370, -4.7973, -4.4010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9088, device='cuda:0', dtype=torch.float64)
tensor([-2.7113, -3.7041, -3.7383, -4.8134, -4.4053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0525, device='cuda:0', dtype=torch.float64)
tensor([-2.7169, -3.7037, -3.7458, -4.8315, -4.4065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0525, device='cuda:0', dtype=torch.float64)
tensor([-2.7241, -3.7064, -3.7531, -4.8473, -4.4065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0978, device='cuda:0', dtype=torch.float64)
tensor([-2.7249, -3.7079, -3.7603, -4.8652, -4.4027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0448, device='cuda:0', dtype=torch.float64)
tensor([-2.7223, -3.7109, -3.7669, -4.8787, -4.3983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0549, device='cuda:0', dtype=torch.float64)
tensor([-2.7159, -3.7121, -3.7750, -4.8921, -4.3923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2560, device='cuda:0', dtype=torch.float64)
tensor([-2.7106, -3.7193, -3.7779, -4.8961, -4.3772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1512, device='cuda:0', dtype=torch.float64)
tensor([-2.7036, -3.7220, -3.7804, -4.8959, -4.3640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1483, device='cuda:0', dtype=torch.float64)
tensor([-2.7036, -3.7252, -3.7819, -4.8814, -4.3561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9646, device='cuda:0', dtype=torch.float64)
tensor([-2.7027, -3.7259, -3.7846, -4.8726, -4.3517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1068, device='cuda:0', dtype=torch.float64)
tensor([-2.6964, -3.7262, -3.7891, -4.8620, -4.3416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0994, device='cuda:0', dtype=torch.float64)
tensor([-2.6914, -3.7259, -3.7950, -4.8539, -4.3338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9905, device='cuda:0', dtype=torch.float64)
tensor([-2.6880, -3.7253, -3.7955, -4.8450, -4.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2982, device='cuda:0', dtype=torch.float64)
tensor([-2.6862, -3.7281, -3.7958, -4.8374, -4.3139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0464, device='cuda:0', dtype=torch.float64)
tensor([-2.6852, -3.7323, -3.7953, -4.8365, -4.3045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0136, device='cuda:0', dtype=torch.float64)
tensor([-2.6821, -3.7357, -3.7946, -4.8343, -4.2971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0304, device='cuda:0', dtype=torch.float64)
tensor([-2.6832, -3.7413, -3.7902, -4.8232, -4.2965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1666, device='cuda:0', dtype=torch.float64)
tensor([-2.6874, -3.7475, -3.7845, -4.8076, -4.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1738, device='cuda:0', dtype=torch.float64)
tensor([-2.6961, -3.7564, -3.7746, -4.7877, -4.2973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2021, device='cuda:0', dtype=torch.float64)
tensor([-2.7104, -3.7650, -3.7672, -4.7603, -4.3031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0679, device='cuda:0', dtype=torch.float64)
tensor([-2.7227, -3.7655, -3.7634, -4.7405, -4.3091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2250, device='cuda:0', dtype=torch.float64)
tensor([-2.7369, -3.7718, -3.7580, -4.7214, -4.3202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1109, device='cuda:0', dtype=torch.float64)
tensor([-2.7511, -3.7757, -3.7542, -4.7111, -4.3339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9906, device='cuda:0', dtype=torch.float64)
tensor([-2.7635, -3.7748, -3.7558, -4.7063, -4.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0067, device='cuda:0', dtype=torch.float64)
tensor([-2.7684, -3.7693, -3.7614, -4.7083, -4.3558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0958, device='cuda:0', dtype=torch.float64)
tensor([-2.7711, -3.7652, -3.7670, -4.7106, -4.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2030, device='cuda:0', dtype=torch.float64)
tensor([-2.7747, -3.7615, -3.7723, -4.7181, -4.3795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1074, device='cuda:0', dtype=torch.float64)
tensor([-2.7796, -3.7592, -3.7743, -4.7236, -4.3924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0316, device='cuda:0', dtype=torch.float64)
tensor([-2.7863, -3.7573, -3.7770, -4.7331, -4.4039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9643, device='cuda:0', dtype=torch.float64)
tensor([-2.7908, -3.7565, -3.7812, -4.7327, -4.4142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9666, device='cuda:0', dtype=torch.float64)
tensor([-2.7890, -3.7513, -3.7847, -4.7383, -4.4181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1763, device='cuda:0', dtype=torch.float64)
tensor([-2.7847, -3.7464, -3.7826, -4.7430, -4.4149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0317, device='cuda:0', dtype=torch.float64)
tensor([-2.7747, -3.7370, -3.7815, -4.7545, -4.4094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9620, device='cuda:0', dtype=torch.float64)
tensor([-2.7643, -3.7350, -3.7750, -4.7600, -4.4002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-2.7519, -3.7329, -3.7721, -4.7645, -4.3891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0510, device='cuda:0', dtype=torch.float64)
tensor([-2.7397, -3.7307, -3.7717, -4.7681, -4.3778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1169, device='cuda:0', dtype=torch.float64)
tensor([-2.7258, -3.7309, -3.7707, -4.7739, -4.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-2.7132, -3.7337, -3.7693, -4.7759, -4.3590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1889, device='cuda:0', dtype=torch.float64)
tensor([-2.6989, -3.7387, -3.7663, -4.7801, -4.3516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0025, device='cuda:0', dtype=torch.float64)
tensor([-2.6810, -3.7438, -3.7709, -4.7953, -4.3398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0494, device='cuda:0', dtype=torch.float64)
tensor([-2.6636, -3.7487, -3.7744, -4.8101, -4.3267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9748, device='cuda:0', dtype=torch.float64)
tensor([-2.6477, -3.7557, -3.7780, -4.8299, -4.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2512, device='cuda:0', dtype=torch.float64)
tensor([-2.6322, -3.7569, -3.7879, -4.8597, -4.3006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9602, device='cuda:0', dtype=torch.float64)
tensor([-2.6202, -3.7587, -3.7969, -4.8806, -4.2897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1646, device='cuda:0', dtype=torch.float64)
tensor([-2.6174, -3.7571, -3.7984, -4.8824, -4.2849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0604, device='cuda:0', dtype=torch.float64)
tensor([-2.6186, -3.7597, -3.7946, -4.8696, -4.2813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0788, device='cuda:0', dtype=torch.float64)
tensor([-2.6239, -3.7602, -3.7896, -4.8620, -4.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1002, device='cuda:0', dtype=torch.float64)
tensor([-2.6333, -3.7592, -3.7810, -4.8503, -4.2826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0591, device='cuda:0', dtype=torch.float64)
tensor([-2.6457, -3.7582, -3.7719, -4.8378, -4.2863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0017, device='cuda:0', dtype=torch.float64)
tensor([-2.6606, -3.7561, -3.7634, -4.8273, -4.2935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0017, device='cuda:0', dtype=torch.float64)
tensor([-2.6788, -3.7497, -3.7593, -4.8148, -4.3025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1739, device='cuda:0', dtype=torch.float64)
tensor([-2.6979, -3.7447, -3.7552, -4.7982, -4.3113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0416, device='cuda:0', dtype=torch.float64)
tensor([-2.7183, -3.7428, -3.7533, -4.7806, -4.3216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1643, device='cuda:0', dtype=torch.float64)
tensor([-2.7393, -3.7391, -3.7506, -4.7585, -4.3339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9578, device='cuda:0', dtype=torch.float64)
tensor([-2.7576, -3.7327, -3.7527, -4.7430, -4.3483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0534, device='cuda:0', dtype=torch.float64)
tensor([-2.7750, -3.7262, -3.7590, -4.7241, -4.3600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9497, device='cuda:0', dtype=torch.float64)
tensor([-2.7884, -3.7248, -3.7635, -4.7110, -4.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9512, device='cuda:0', dtype=torch.float64)
tensor([-2.7942, -3.7227, -3.7700, -4.7021, -4.3735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1118, device='cuda:0', dtype=torch.float64)
tensor([-2.8002, -3.7241, -3.7745, -4.6963, -4.3800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9609, device='cuda:0', dtype=torch.float64)
tensor([-2.8054, -3.7225, -3.7821, -4.6930, -4.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9387, device='cuda:0', dtype=torch.float64)
tensor([-2.8071, -3.7197, -3.7913, -4.6939, -4.3795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2205, device='cuda:0', dtype=torch.float64)
tensor([-2.8135, -3.7189, -3.8044, -4.6966, -4.3818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1487, device='cuda:0', dtype=torch.float64)
tensor([-2.8131, -3.7140, -3.8180, -4.7089, -4.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9742, device='cuda:0', dtype=torch.float64)
tensor([-2.8090, -3.7062, -3.8284, -4.7232, -4.3794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9312, device='cuda:0', dtype=torch.float64)
tensor([-2.7971, -3.6956, -3.8398, -4.7406, -4.3770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0753, device='cuda:0', dtype=torch.float64)
tensor([-2.7854, -3.6834, -3.8481, -4.7600, -4.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1277, device='cuda:0', dtype=torch.float64)
tensor([-2.7790, -3.6733, -3.8561, -4.7730, -4.3769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9141, device='cuda:0', dtype=torch.float64)
tensor([-2.7722, -3.6631, -3.8618, -4.7883, -4.3801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1016, device='cuda:0', dtype=torch.float64)
tensor([-2.7708, -3.6543, -3.8655, -4.7908, -4.3863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0888, device='cuda:0', dtype=torch.float64)
tensor([-2.7690, -3.6488, -3.8667, -4.7888, -4.3908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1006, device='cuda:0', dtype=torch.float64)
tensor([-2.7698, -3.6487, -3.8635, -4.7755, -4.3955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0715, device='cuda:0', dtype=torch.float64)
tensor([-2.7710, -3.6526, -3.8588, -4.7602, -4.4001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1195, device='cuda:0', dtype=torch.float64)
tensor([-2.7804, -3.6607, -3.8510, -4.7392, -4.4152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1505, device='cuda:0', dtype=torch.float64)
tensor([-2.7919, -3.6727, -3.8378, -4.7178, -4.4324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9166, device='cuda:0', dtype=torch.float64)
tensor([-2.8007, -3.6845, -3.8194, -4.6931, -4.4452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9731, device='cuda:0', dtype=torch.float64)
tensor([-2.8096, -3.6952, -3.8005, -4.6664, -4.4530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3089, device='cuda:0', dtype=torch.float64)
tensor([-2.8220, -3.7037, -3.7822, -4.6391, -4.4610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1322, device='cuda:0', dtype=torch.float64)
tensor([-2.8323, -3.7111, -3.7667, -4.6188, -4.4640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([-2.8348, -3.7163, -3.7552, -4.6003, -4.4578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0532, device='cuda:0', dtype=torch.float64)
tensor([-2.8300, -3.7173, -3.7499, -4.6059, -4.4492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0933, device='cuda:0', dtype=torch.float64)
tensor([-2.8220, -3.7184, -3.7439, -4.6165, -4.4395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8939, device='cuda:0', dtype=torch.float64)
tensor([-2.8049, -3.7190, -3.7408, -4.6338, -4.4242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9060, device='cuda:0', dtype=torch.float64)
tensor([-2.7865, -3.7174, -3.7401, -4.6494, -4.4037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0191, device='cuda:0', dtype=torch.float64)
tensor([-2.7746, -3.7143, -3.7427, -4.6648, -4.3856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1654, device='cuda:0', dtype=torch.float64)
tensor([-2.7618, -3.7104, -3.7471, -4.6757, -4.3671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1924, device='cuda:0', dtype=torch.float64)
tensor([-2.7518, -3.7051, -3.7511, -4.6862, -4.3501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0317, device='cuda:0', dtype=torch.float64)
tensor([-2.7371, -3.6974, -3.7596, -4.7098, -4.3299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1543, device='cuda:0', dtype=torch.float64)
tensor([-2.7272, -3.6903, -3.7717, -4.7384, -4.3171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1488, device='cuda:0', dtype=torch.float64)
tensor([-2.7180, -3.6818, -3.7802, -4.7679, -4.3069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0669, device='cuda:0', dtype=torch.float64)
tensor([-2.7155, -3.6749, -3.7858, -4.7774, -4.3034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9712, device='cuda:0', dtype=torch.float64)
tensor([-2.7190, -3.6726, -3.7910, -4.7859, -4.3021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0987, device='cuda:0', dtype=torch.float64)
tensor([-2.7215, -3.6693, -3.8014, -4.7921, -4.3044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9637, device='cuda:0', dtype=torch.float64)
tensor([-2.7282, -3.6653, -3.8138, -4.7959, -4.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1297, device='cuda:0', dtype=torch.float64)
tensor([-2.7412, -3.6626, -3.8213, -4.7949, -4.3207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9852, device='cuda:0', dtype=torch.float64)
tensor([-2.7546, -3.6603, -3.8281, -4.7898, -4.3364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0116, device='cuda:0', dtype=torch.float64)
tensor([-2.7690, -3.6562, -3.8359, -4.7902, -4.3523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9328, device='cuda:0', dtype=torch.float64)
tensor([-2.7786, -3.6536, -3.8425, -4.7891, -4.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1380, device='cuda:0', dtype=torch.float64)
tensor([-2.7865, -3.6532, -3.8436, -4.7855, -4.3728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0426, device='cuda:0', dtype=torch.float64)
tensor([-2.7903, -3.6531, -3.8419, -4.7833, -4.3789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0373, device='cuda:0', dtype=torch.float64)
tensor([-2.7949, -3.6560, -3.8432, -4.7762, -4.3864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0441, device='cuda:0', dtype=torch.float64)
tensor([-2.7983, -3.6601, -3.8425, -4.7683, -4.3915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0898, device='cuda:0', dtype=torch.float64)
tensor([-2.7980, -3.6675, -3.8434, -4.7580, -4.3921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1221, device='cuda:0', dtype=torch.float64)
tensor([-2.8008, -3.6785, -3.8374, -4.7463, -4.3945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8709, device='cuda:0', dtype=torch.float64)
tensor([-2.7994, -3.6865, -3.8308, -4.7357, -4.3928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0170, device='cuda:0', dtype=torch.float64)
tensor([-2.7986, -3.6926, -3.8282, -4.7279, -4.3907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9606, device='cuda:0', dtype=torch.float64)
tensor([-2.7916, -3.6946, -3.8301, -4.7235, -4.3858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0629, device='cuda:0', dtype=torch.float64)
tensor([-2.7807, -3.6979, -3.8254, -4.7161, -4.3789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0828, device='cuda:0', dtype=torch.float64)
tensor([-2.7810, -3.7021, -3.8210, -4.7099, -4.3789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0261, device='cuda:0', dtype=torch.float64)
tensor([-2.7741, -3.7001, -3.8207, -4.7086, -4.3728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0103, device='cuda:0', dtype=torch.float64)
tensor([-2.7631, -3.6964, -3.8210, -4.7044, -4.3650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9239, device='cuda:0', dtype=torch.float64)
tensor([-2.7548, -3.6924, -3.8238, -4.7014, -4.3590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2008, device='cuda:0', dtype=torch.float64)
tensor([-2.7553, -3.6929, -3.8225, -4.7024, -4.3547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9686, device='cuda:0', dtype=torch.float64)
tensor([-2.7524, -3.6869, -3.8252, -4.7104, -4.3510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1008, device='cuda:0', dtype=torch.float64)
tensor([-2.7472, -3.6802, -3.8279, -4.7164, -4.3464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2285, device='cuda:0', dtype=torch.float64)
tensor([-2.7418, -3.6738, -3.8281, -4.7362, -4.3440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9440, device='cuda:0', dtype=torch.float64)
tensor([-2.7306, -3.6649, -3.8296, -4.7624, -4.3375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9147, device='cuda:0', dtype=torch.float64)
tensor([-2.7189, -3.6602, -3.8295, -4.7845, -4.3303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0133, device='cuda:0', dtype=torch.float64)
tensor([-2.7071, -3.6565, -3.8271, -4.8049, -4.3212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9803, device='cuda:0', dtype=torch.float64)
tensor([-2.6967, -3.6525, -3.8258, -4.8202, -4.3130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1444, device='cuda:0', dtype=torch.float64)
tensor([-2.6936, -3.6496, -3.8217, -4.8277, -4.3095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-2.6995, -3.6526, -3.8152, -4.8285, -4.3130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0230, device='cuda:0', dtype=torch.float64)
tensor([-2.7123, -3.6560, -3.8027, -4.8189, -4.3207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9428, device='cuda:0', dtype=torch.float64)
tensor([-2.7245, -3.6614, -3.7936, -4.8109, -4.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9494, device='cuda:0', dtype=torch.float64)
tensor([-2.7374, -3.6691, -3.7819, -4.7908, -4.3306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0145, device='cuda:0', dtype=torch.float64)
tensor([-2.7493, -3.6808, -3.7666, -4.7703, -4.3330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0352, device='cuda:0', dtype=torch.float64)
tensor([-2.7608, -3.6944, -3.7554, -4.7564, -4.3375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0546, device='cuda:0', dtype=torch.float64)
tensor([-2.7658, -3.7067, -3.7489, -4.7497, -4.3434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9666, device='cuda:0', dtype=torch.float64)
tensor([-2.7723, -3.7178, -3.7422, -4.7422, -4.3494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0675, device='cuda:0', dtype=torch.float64)
tensor([-2.7747, -3.7318, -3.7338, -4.7348, -4.3556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0417, device='cuda:0', dtype=torch.float64)
tensor([-2.7790, -3.7438, -3.7262, -4.7243, -4.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2782, device='cuda:0', dtype=torch.float64)
tensor([-2.7854, -3.7563, -3.7210, -4.6993, -4.3770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9271, device='cuda:0', dtype=torch.float64)
tensor([-2.7914, -3.7703, -3.7193, -4.6697, -4.3884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1430, device='cuda:0', dtype=torch.float64)
tensor([-2.7955, -3.7830, -3.7173, -4.6394, -4.3985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1310, device='cuda:0', dtype=torch.float64)
tensor([-2.7990, -3.7906, -3.7239, -4.6211, -4.4090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9396, device='cuda:0', dtype=torch.float64)
tensor([-2.7968, -3.7871, -3.7346, -4.6138, -4.4179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0380, device='cuda:0', dtype=torch.float64)
tensor([-2.7954, -3.7862, -3.7471, -4.6103, -4.4303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1194, device='cuda:0', dtype=torch.float64)
tensor([-2.7885, -3.7879, -3.7566, -4.6113, -4.4345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8880, device='cuda:0', dtype=torch.float64)
tensor([-2.7747, -3.7859, -3.7699, -4.6204, -4.4340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9891, device='cuda:0', dtype=torch.float64)
tensor([-2.7593, -3.7805, -3.7843, -4.6226, -4.4278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2987, device='cuda:0', dtype=torch.float64)
tensor([-2.7459, -3.7811, -3.8002, -4.6223, -4.4163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1001, device='cuda:0', dtype=torch.float64)
tensor([-2.7388, -3.7857, -3.8133, -4.6204, -4.4085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2703, device='cuda:0', dtype=torch.float64)
tensor([-2.7342, -3.7857, -3.8178, -4.6193, -4.4024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1271, device='cuda:0', dtype=torch.float64)
tensor([-2.7243, -3.7839, -3.8224, -4.6330, -4.3927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0649, device='cuda:0', dtype=torch.float64)
tensor([-2.7156, -3.7834, -3.8211, -4.6475, -4.3826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1755, device='cuda:0', dtype=torch.float64)
tensor([-2.7070, -3.7819, -3.8175, -4.6587, -4.3740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0635, device='cuda:0', dtype=torch.float64)
tensor([-2.7012, -3.7772, -3.8162, -4.6774, -4.3685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9228, device='cuda:0', dtype=torch.float64)
tensor([-2.6985, -3.7712, -3.8154, -4.7040, -4.3654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2051, device='cuda:0', dtype=torch.float64)
tensor([-2.6998, -3.7686, -3.8161, -4.7309, -4.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1596, device='cuda:0', dtype=torch.float64)
tensor([-2.7008, -3.7677, -3.8139, -4.7562, -4.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9717, device='cuda:0', dtype=torch.float64)
tensor([-2.7067, -3.7708, -3.8060, -4.7631, -4.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0183, device='cuda:0', dtype=torch.float64)
tensor([-2.7031, -3.7725, -3.8016, -4.7822, -4.3546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1721, device='cuda:0', dtype=torch.float64)
tensor([-2.6962, -3.7694, -3.8007, -4.8045, -4.3428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1352, device='cuda:0', dtype=torch.float64)
tensor([-2.6946, -3.7716, -3.7988, -4.8143, -4.3387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1160, device='cuda:0', dtype=torch.float64)
tensor([-2.7005, -3.7735, -3.7950, -4.8113, -4.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9848, device='cuda:0', dtype=torch.float64)
tensor([-2.7099, -3.7760, -3.7910, -4.8063, -4.3442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9289, device='cuda:0', dtype=torch.float64)
tensor([-2.7265, -3.7814, -3.7864, -4.7947, -4.3530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0289, device='cuda:0', dtype=torch.float64)
tensor([-2.7427, -3.7844, -3.7838, -4.7817, -4.3627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8552, device='cuda:0', dtype=torch.float64)
tensor([-2.7607, -3.7908, -3.7800, -4.7579, -4.3699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9630, device='cuda:0', dtype=torch.float64)
tensor([-2.7803, -3.7947, -3.7748, -4.7259, -4.3796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0769, device='cuda:0', dtype=torch.float64)
tensor([-2.7963, -3.7940, -3.7731, -4.7003, -4.3900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0719, device='cuda:0', dtype=torch.float64)
tensor([-2.8029, -3.7880, -3.7767, -4.6838, -4.3922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1923, device='cuda:0', dtype=torch.float64)
tensor([-2.8129, -3.7829, -3.7815, -4.6675, -4.3994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0006, device='cuda:0', dtype=torch.float64)
tensor([-2.8191, -3.7840, -3.7891, -4.6524, -4.4024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9316, device='cuda:0', dtype=torch.float64)
tensor([-2.8228, -3.7833, -3.7964, -4.6411, -4.3989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0259, device='cuda:0', dtype=torch.float64)
tensor([-2.8209, -3.7802, -3.8039, -4.6468, -4.3944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1988, device='cuda:0', dtype=torch.float64)
tensor([-2.8127, -3.7680, -3.8164, -4.6597, -4.3907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1477, device='cuda:0', dtype=torch.float64)
tensor([-2.8057, -3.7571, -3.8274, -4.6848, -4.3881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8536, device='cuda:0', dtype=torch.float64)
tensor([-2.7997, -3.7467, -3.8378, -4.7122, -4.3863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8440, device='cuda:0', dtype=torch.float64)
tensor([-2.7899, -3.7358, -3.8450, -4.7387, -4.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0094, device='cuda:0', dtype=torch.float64)
tensor([-2.7826, -3.7243, -3.8536, -4.7609, -4.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0203, device='cuda:0', dtype=torch.float64)
tensor([-2.7754, -3.7123, -3.8590, -4.7873, -4.3738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8493, device='cuda:0', dtype=torch.float64)
tensor([-2.7692, -3.7060, -3.8626, -4.8129, -4.3676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9698, device='cuda:0', dtype=torch.float64)
tensor([-2.7695, -3.7019, -3.8616, -4.8256, -4.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9568, device='cuda:0', dtype=torch.float64)
tensor([-2.7720, -3.7051, -3.8525, -4.8228, -4.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9722, device='cuda:0', dtype=torch.float64)
tensor([-2.7725, -3.7091, -3.8483, -4.8280, -4.3432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1378, device='cuda:0', dtype=torch.float64)
tensor([-2.7799, -3.7159, -3.8451, -4.8228, -4.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3194, device='cuda:0', dtype=torch.float64)
tensor([-2.7938, -3.7240, -3.8340, -4.8090, -4.3355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0173, device='cuda:0', dtype=torch.float64)
tensor([-2.8081, -3.7320, -3.8216, -4.7840, -4.3309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1183, device='cuda:0', dtype=torch.float64)
tensor([-2.8215, -3.7430, -3.8106, -4.7490, -4.3304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1150, device='cuda:0', dtype=torch.float64)
tensor([-2.8299, -3.7480, -3.8071, -4.7311, -4.3321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0364, device='cuda:0', dtype=torch.float64)
tensor([-2.8384, -3.7521, -3.8069, -4.7157, -4.3371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0456, device='cuda:0', dtype=torch.float64)
tensor([-2.8419, -3.7559, -3.8084, -4.7066, -4.3367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8899, device='cuda:0', dtype=torch.float64)
tensor([-2.8429, -3.7596, -3.8127, -4.7094, -4.3368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8596, device='cuda:0', dtype=torch.float64)
tensor([-2.8442, -3.7615, -3.8208, -4.7138, -4.3384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8713, device='cuda:0', dtype=torch.float64)
tensor([-2.8459, -3.7658, -3.8261, -4.7112, -4.3418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9588, device='cuda:0', dtype=torch.float64)
tensor([-2.8448, -3.7680, -3.8316, -4.7201, -4.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0131, device='cuda:0', dtype=torch.float64)
tensor([-2.8386, -3.7704, -3.8407, -4.7401, -4.3470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1272, device='cuda:0', dtype=torch.float64)
tensor([-2.8326, -3.7756, -3.8502, -4.7449, -4.3445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2028, device='cuda:0', dtype=torch.float64)
tensor([-2.8310, -3.7814, -3.8569, -4.7480, -4.3450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1890, device='cuda:0', dtype=torch.float64)
tensor([-2.8252, -3.7890, -3.8631, -4.7592, -4.3437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9160, device='cuda:0', dtype=torch.float64)
tensor([-2.8191, -3.7926, -3.8676, -4.7754, -4.3417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9322, device='cuda:0', dtype=torch.float64)
tensor([-2.8104, -3.7936, -3.8677, -4.7911, -4.3376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0792, device='cuda:0', dtype=torch.float64)
tensor([-2.8030, -3.7975, -3.8649, -4.8084, -4.3328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0218, device='cuda:0', dtype=torch.float64)
tensor([-2.7977, -3.8016, -3.8611, -4.8229, -4.3281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0518, device='cuda:0', dtype=torch.float64)
tensor([-2.7967, -3.8036, -3.8587, -4.8259, -4.3232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0794, device='cuda:0', dtype=torch.float64)
tensor([-2.7879, -3.8038, -3.8556, -4.8246, -4.3113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9866, device='cuda:0', dtype=torch.float64)
tensor([-2.7819, -3.8067, -3.8550, -4.8208, -4.3010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2164, device='cuda:0', dtype=torch.float64)
tensor([-2.7835, -3.8114, -3.8496, -4.8056, -4.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8891, device='cuda:0', dtype=torch.float64)
tensor([-2.7855, -3.8154, -3.8434, -4.7890, -4.2924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1994, device='cuda:0', dtype=torch.float64)
tensor([-2.7939, -3.8192, -3.8391, -4.7704, -4.2956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9596, device='cuda:0', dtype=torch.float64)
tensor([-2.8060, -3.8261, -3.8316, -4.7497, -4.2974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1011, device='cuda:0', dtype=torch.float64)
tensor([-2.8176, -3.8354, -3.8249, -4.7292, -4.3016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9678, device='cuda:0', dtype=torch.float64)
tensor([-2.8264, -3.8441, -3.8178, -4.7073, -4.3040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1139, device='cuda:0', dtype=torch.float64)
tensor([-2.8363, -3.8568, -3.8114, -4.6801, -4.3096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0202, device='cuda:0', dtype=torch.float64)
tensor([-2.8514, -3.8745, -3.8073, -4.6465, -4.3156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0595, device='cuda:0', dtype=torch.float64)
tensor([-2.8709, -3.8922, -3.8056, -4.6140, -4.3250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1585, device='cuda:0', dtype=torch.float64)
tensor([-2.8957, -3.9072, -3.8081, -4.5854, -4.3339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9902, device='cuda:0', dtype=torch.float64)
tensor([-2.9123, -3.9166, -3.8162, -4.5823, -4.3416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9995, device='cuda:0', dtype=torch.float64)
tensor([-2.9267, -3.9224, -3.8235, -4.5879, -4.3474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9113, device='cuda:0', dtype=torch.float64)
tensor([-2.9345, -3.9222, -3.8322, -4.6008, -4.3501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8953, device='cuda:0', dtype=torch.float64)
tensor([-2.9391, -3.9164, -3.8431, -4.6216, -4.3539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0975, device='cuda:0', dtype=torch.float64)
tensor([-2.9385, -3.9073, -3.8563, -4.6491, -4.3593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9365, device='cuda:0', dtype=torch.float64)
tensor([-2.9310, -3.8974, -3.8706, -4.6856, -4.3616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8464, device='cuda:0', dtype=torch.float64)
tensor([-2.9217, -3.8861, -3.8826, -4.7161, -4.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0044, device='cuda:0', dtype=torch.float64)
tensor([-2.9105, -3.8762, -3.8916, -4.7390, -4.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0639, device='cuda:0', dtype=torch.float64)
tensor([-2.8985, -3.8667, -3.8960, -4.7581, -4.3574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1061, device='cuda:0', dtype=torch.float64)
tensor([-2.8872, -3.8557, -3.9016, -4.7747, -4.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0379, device='cuda:0', dtype=torch.float64)
tensor([-2.8743, -3.8458, -3.9062, -4.7854, -4.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9486, device='cuda:0', dtype=torch.float64)
tensor([-2.8621, -3.8326, -3.9064, -4.7903, -4.3586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9338, device='cuda:0', dtype=torch.float64)
tensor([-2.8470, -3.8216, -3.9044, -4.7886, -4.3561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0134, device='cuda:0', dtype=torch.float64)
tensor([-2.8410, -3.8158, -3.9008, -4.7722, -4.3604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8117, device='cuda:0', dtype=torch.float64)
tensor([-2.8349, -3.8111, -3.8977, -4.7590, -4.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9850, device='cuda:0', dtype=torch.float64)
tensor([-2.8312, -3.8095, -3.8862, -4.7426, -4.3628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1166, device='cuda:0', dtype=torch.float64)
tensor([-2.8317, -3.8123, -3.8752, -4.7231, -4.3693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0026, device='cuda:0', dtype=torch.float64)
tensor([-2.8353, -3.8128, -3.8657, -4.7025, -4.3803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1882, device='cuda:0', dtype=torch.float64)
tensor([-2.8397, -3.8134, -3.8584, -4.6890, -4.3883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1000, device='cuda:0', dtype=torch.float64)
tensor([-2.8433, -3.8117, -3.8546, -4.6823, -4.3936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9952, device='cuda:0', dtype=torch.float64)
tensor([-2.8475, -3.8100, -3.8472, -4.6778, -4.3964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0119, device='cuda:0', dtype=torch.float64)
tensor([-2.8549, -3.8122, -3.8379, -4.6641, -4.3986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1146, device='cuda:0', dtype=torch.float64)
tensor([-2.8569, -3.8120, -3.8262, -4.6568, -4.3962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0515, device='cuda:0', dtype=torch.float64)
tensor([-2.8606, -3.8159, -3.8169, -4.6488, -4.3941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9732, device='cuda:0', dtype=torch.float64)
tensor([-2.8655, -3.8236, -3.8044, -4.6371, -4.3892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0394, device='cuda:0', dtype=torch.float64)
tensor([-2.8682, -3.8301, -3.7992, -4.6300, -4.3866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8802, device='cuda:0', dtype=torch.float64)
tensor([-2.8696, -3.8374, -3.7928, -4.6141, -4.3825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2531, device='cuda:0', dtype=torch.float64)
tensor([-2.8765, -3.8515, -3.7864, -4.5895, -4.3853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9236, device='cuda:0', dtype=torch.float64)
tensor([-2.8789, -3.8637, -3.7774, -4.5676, -4.3850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1190, device='cuda:0', dtype=torch.float64)
tensor([-2.8818, -3.8771, -3.7762, -4.5511, -4.3859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8635, device='cuda:0', dtype=torch.float64)
tensor([-2.8826, -3.8860, -3.7768, -4.5360, -4.3900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0672, device='cuda:0', dtype=torch.float64)
tensor([-2.8879, -3.8942, -3.7780, -4.5145, -4.3949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1357, device='cuda:0', dtype=torch.float64)
tensor([-2.8926, -3.9012, -3.7842, -4.4939, -4.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9810, device='cuda:0', dtype=torch.float64)
tensor([-2.8937, -3.9067, -3.7952, -4.4825, -4.4026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0209, device='cuda:0', dtype=torch.float64)
tensor([-2.8894, -3.9074, -3.8040, -4.4797, -4.3969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9072, device='cuda:0', dtype=torch.float64)
tensor([-2.8820, -3.9054, -3.8100, -4.4757, -4.3927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0197, device='cuda:0', dtype=torch.float64)
tensor([-2.8756, -3.8969, -3.8207, -4.4825, -4.3877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0146, device='cuda:0', dtype=torch.float64)
tensor([-2.8747, -3.8887, -3.8265, -4.4870, -4.3883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9044, device='cuda:0', dtype=torch.float64)
tensor([-2.8729, -3.8799, -3.8287, -4.4904, -4.3842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0675, device='cuda:0', dtype=torch.float64)
tensor([-2.8670, -3.8652, -3.8352, -4.5064, -4.3817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0440, device='cuda:0', dtype=torch.float64)
tensor([-2.8558, -3.8469, -3.8418, -4.5373, -4.3755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2106, device='cuda:0', dtype=torch.float64)
tensor([-2.8484, -3.8309, -3.8563, -4.5789, -4.3744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0911, device='cuda:0', dtype=torch.float64)
tensor([-2.8423, -3.8133, -3.8703, -4.6183, -4.3733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0340, device='cuda:0', dtype=torch.float64)
tensor([-2.8403, -3.8011, -3.8789, -4.6610, -4.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8877, device='cuda:0', dtype=torch.float64)
tensor([-2.8457, -3.7928, -3.8824, -4.6967, -4.3918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8585, device='cuda:0', dtype=torch.float64)
tensor([-2.8532, -3.7849, -3.8784, -4.7230, -4.3992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1287, device='cuda:0', dtype=torch.float64)
tensor([-2.8568, -3.7766, -3.8765, -4.7544, -4.4053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0758, device='cuda:0', dtype=torch.float64)
tensor([-2.8620, -3.7721, -3.8741, -4.7713, -4.4146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9592, device='cuda:0', dtype=torch.float64)
tensor([-2.8705, -3.7686, -3.8729, -4.7846, -4.4230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2615, device='cuda:0', dtype=torch.float64)
tensor([-2.8854, -3.7693, -3.8695, -4.7824, -4.4359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0107, device='cuda:0', dtype=torch.float64)
tensor([-2.8947, -3.7703, -3.8667, -4.7835, -4.4460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8989, device='cuda:0', dtype=torch.float64)
tensor([-2.9130, -3.7782, -3.8587, -4.7672, -4.4573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0228, device='cuda:0', dtype=torch.float64)
tensor([-2.9279, -3.7878, -3.8525, -4.7504, -4.4637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9929, device='cuda:0', dtype=torch.float64)
tensor([-2.9420, -3.8035, -3.8466, -4.7388, -4.4693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1466, device='cuda:0', dtype=torch.float64)
tensor([-2.9521, -3.8174, -3.8447, -4.7305, -4.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1899, device='cuda:0', dtype=torch.float64)
tensor([-2.9588, -3.8309, -3.8418, -4.7211, -4.4789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9820, device='cuda:0', dtype=torch.float64)
tensor([-2.9645, -3.8420, -3.8435, -4.7205, -4.4859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-2.9667, -3.8532, -3.8491, -4.7159, -4.4879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1793, device='cuda:0', dtype=torch.float64)
tensor([-2.9709, -3.8613, -3.8545, -4.7131, -4.4902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([-2.9753, -3.8722, -3.8592, -4.7201, -4.4949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9131, device='cuda:0', dtype=torch.float64)
tensor([-2.9771, -3.8818, -3.8641, -4.7245, -4.5016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9883, device='cuda:0', dtype=torch.float64)
tensor([-2.9780, -3.8869, -3.8725, -4.7394, -4.5101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-2.9773, -3.8922, -3.8783, -4.7472, -4.5157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0717, device='cuda:0', dtype=torch.float64)
tensor([-2.9688, -3.8958, -3.8874, -4.7572, -4.5172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9109, device='cuda:0', dtype=torch.float64)
tensor([-2.9578, -3.8975, -3.8963, -4.7620, -4.5170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0117, device='cuda:0', dtype=torch.float64)
tensor([-2.9455, -3.8996, -3.9076, -4.7760, -4.5168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9565, device='cuda:0', dtype=torch.float64)
tensor([-2.9307, -3.8952, -3.9228, -4.7857, -4.5154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1065, device='cuda:0', dtype=torch.float64)
tensor([-2.9171, -3.8821, -3.9370, -4.7843, -4.5126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1326, device='cuda:0', dtype=torch.float64)
tensor([-2.9076, -3.8709, -3.9483, -4.7737, -4.5143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0448, device='cuda:0', dtype=torch.float64)
tensor([-2.9033, -3.8653, -3.9537, -4.7497, -4.5195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0406, device='cuda:0', dtype=torch.float64)
tensor([-2.8989, -3.8614, -3.9555, -4.7219, -4.5242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8948, device='cuda:0', dtype=torch.float64)
tensor([-2.8976, -3.8608, -3.9615, -4.6948, -4.5322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9599, device='cuda:0', dtype=torch.float64)
tensor([-2.8982, -3.8609, -3.9631, -4.6654, -4.5416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9819, device='cuda:0', dtype=torch.float64)
tensor([-2.9022, -3.8601, -3.9642, -4.6466, -4.5510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0261, device='cuda:0', dtype=torch.float64)
tensor([-2.9052, -3.8610, -3.9602, -4.6266, -4.5552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0437, device='cuda:0', dtype=torch.float64)
tensor([-2.9127, -3.8660, -3.9487, -4.6072, -4.5568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9977, device='cuda:0', dtype=torch.float64)
tensor([-2.9216, -3.8698, -3.9418, -4.5880, -4.5648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0227, device='cuda:0', dtype=torch.float64)
tensor([-2.9289, -3.8749, -3.9404, -4.5765, -4.5719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0290, device='cuda:0', dtype=torch.float64)
tensor([-2.9417, -3.8844, -3.9401, -4.5651, -4.5774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9851, device='cuda:0', dtype=torch.float64)
tensor([-2.9536, -3.8959, -3.9358, -4.5558, -4.5833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0944, device='cuda:0', dtype=torch.float64)
tensor([-2.9608, -3.9070, -3.9357, -4.5477, -4.5830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9546, device='cuda:0', dtype=torch.float64)
tensor([-2.9647, -3.9208, -3.9343, -4.5275, -4.5790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9852, device='cuda:0', dtype=torch.float64)
tensor([-2.9629, -3.9262, -3.9390, -4.5131, -4.5708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8836, device='cuda:0', dtype=torch.float64)
tensor([-2.9645, -3.9321, -3.9418, -4.4986, -4.5620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9739, device='cuda:0', dtype=torch.float64)
tensor([-2.9630, -3.9397, -3.9420, -4.4977, -4.5492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0889, device='cuda:0', dtype=torch.float64)
tensor([-2.9611, -3.9472, -3.9416, -4.4946, -4.5370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9690, device='cuda:0', dtype=torch.float64)
tensor([-2.9624, -3.9566, -3.9426, -4.4860, -4.5253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9528, device='cuda:0', dtype=torch.float64)
tensor([-2.9627, -3.9626, -3.9443, -4.4830, -4.5117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9736, device='cuda:0', dtype=torch.float64)
tensor([-2.9512, -3.9630, -3.9464, -4.4933, -4.4946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0104, device='cuda:0', dtype=torch.float64)
tensor([-2.9361, -3.9590, -3.9550, -4.5153, -4.4745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0208, device='cuda:0', dtype=torch.float64)
tensor([-2.9266, -3.9521, -3.9657, -4.5440, -4.4600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1395, device='cuda:0', dtype=torch.float64)
tensor([-2.9216, -3.9453, -3.9757, -4.5713, -4.4501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0793, device='cuda:0', dtype=torch.float64)
tensor([-2.9198, -3.9374, -3.9863, -4.6030, -4.4463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1168, device='cuda:0', dtype=torch.float64)
tensor([-2.9226, -3.9321, -3.9898, -4.6234, -4.4449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0157, device='cuda:0', dtype=torch.float64)
tensor([-2.9218, -3.9233, -3.9923, -4.6472, -4.4438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9849, device='cuda:0', dtype=torch.float64)
tensor([-2.9253, -3.9142, -3.9913, -4.6724, -4.4439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0239, device='cuda:0', dtype=torch.float64)
tensor([-2.9268, -3.9095, -3.9890, -4.6874, -4.4481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0486, device='cuda:0', dtype=torch.float64)
tensor([-2.9262, -3.9061, -3.9887, -4.7039, -4.4491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1090, device='cuda:0', dtype=torch.float64)
tensor([-2.9236, -3.9033, -3.9921, -4.7247, -4.4528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0109, device='cuda:0', dtype=torch.float64)
tensor([-2.9211, -3.9046, -3.9964, -4.7439, -4.4528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1805, device='cuda:0', dtype=torch.float64)
tensor([-2.9210, -3.9064, -3.9998, -4.7489, -4.4532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1255, device='cuda:0', dtype=torch.float64)
tensor([-2.9179, -3.9101, -4.0035, -4.7645, -4.4544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1522, device='cuda:0', dtype=torch.float64)
tensor([-2.9156, -3.9135, -4.0042, -4.7752, -4.4621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0665, device='cuda:0', dtype=torch.float64)
tensor([-2.9222, -3.9204, -3.9979, -4.7704, -4.4749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1349, device='cuda:0', dtype=torch.float64)
tensor([-2.9276, -3.9266, -3.9908, -4.7701, -4.4885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0602, device='cuda:0', dtype=torch.float64)
tensor([-2.9306, -3.9299, -3.9866, -4.7666, -4.4955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8915, device='cuda:0', dtype=torch.float64)
tensor([-2.9406, -3.9391, -3.9771, -4.7482, -4.5033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9071, device='cuda:0', dtype=torch.float64)
tensor([-2.9486, -3.9488, -3.9752, -4.7343, -4.5133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8405, device='cuda:0', dtype=torch.float64)
tensor([-2.9570, -3.9568, -3.9739, -4.7248, -4.5224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0103, device='cuda:0', dtype=torch.float64)
tensor([-2.9645, -3.9597, -3.9783, -4.7074, -4.5279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1500, device='cuda:0', dtype=torch.float64)
tensor([-2.9643, -3.9587, -3.9834, -4.6955, -4.5210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0232, device='cuda:0', dtype=torch.float64)
tensor([-2.9727, -3.9624, -3.9853, -4.6732, -4.5164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9954, device='cuda:0', dtype=torch.float64)
tensor([-2.9802, -3.9645, -3.9877, -4.6498, -4.5110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9677, device='cuda:0', dtype=torch.float64)
tensor([-2.9913, -3.9750, -3.9827, -4.6238, -4.5063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0411, device='cuda:0', dtype=torch.float64)
tensor([-2.9982, -3.9850, -3.9789, -4.6002, -4.4983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1540, device='cuda:0', dtype=torch.float64)
tensor([-3.0011, -3.9960, -3.9820, -4.5724, -4.4942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1713, device='cuda:0', dtype=torch.float64)
tensor([-3.0053, -3.9992, -3.9892, -4.5551, -4.4991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-3.0090, -3.9975, -3.9962, -4.5439, -4.5024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0424, device='cuda:0', dtype=torch.float64)
tensor([-3.0088, -3.9958, -4.0057, -4.5365, -4.5040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0209, device='cuda:0', dtype=torch.float64)
tensor([-3.0044, -3.9933, -4.0063, -4.5349, -4.4967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0233, device='cuda:0', dtype=torch.float64)
tensor([-2.9960, -3.9816, -4.0142, -4.5504, -4.4892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8960, device='cuda:0', dtype=torch.float64)
tensor([-2.9829, -3.9650, -4.0197, -4.5674, -4.4795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9840, device='cuda:0', dtype=torch.float64)
tensor([-2.9750, -3.9472, -4.0218, -4.5831, -4.4727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1928, device='cuda:0', dtype=torch.float64)
tensor([-2.9740, -3.9359, -4.0194, -4.5954, -4.4671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9918, device='cuda:0', dtype=torch.float64)
tensor([-2.9772, -3.9255, -4.0168, -4.6043, -4.4622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0291, device='cuda:0', dtype=torch.float64)
tensor([-2.9756, -3.9173, -4.0102, -4.6099, -4.4537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1921, device='cuda:0', dtype=torch.float64)
tensor([-2.9780, -3.9186, -3.9997, -4.6107, -4.4455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1408, device='cuda:0', dtype=torch.float64)
tensor([-2.9863, -3.9199, -3.9921, -4.6161, -4.4469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-2.9961, -3.9207, -3.9845, -4.6212, -4.4511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-3.0053, -3.9236, -3.9810, -4.6306, -4.4569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1613, device='cuda:0', dtype=torch.float64)
tensor([-3.0158, -3.9272, -3.9818, -4.6511, -4.4682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0013, device='cuda:0', dtype=torch.float64)
tensor([-3.0214, -3.9281, -3.9860, -4.6630, -4.4751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9410, device='cuda:0', dtype=torch.float64)
tensor([-3.0259, -3.9277, -3.9863, -4.6613, -4.4766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9538, device='cuda:0', dtype=torch.float64)
tensor([-3.0300, -3.9226, -3.9845, -4.6502, -4.4739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0348, device='cuda:0', dtype=torch.float64)
tensor([-3.0296, -3.9192, -3.9834, -4.6454, -4.4675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9901, device='cuda:0', dtype=torch.float64)
tensor([-3.0326, -3.9135, -3.9881, -4.6386, -4.4635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9775, device='cuda:0', dtype=torch.float64)
tensor([-3.0336, -3.9083, -3.9932, -4.6336, -4.4599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9601, device='cuda:0', dtype=torch.float64)
tensor([-3.0355, -3.9030, -3.9995, -4.6442, -4.4569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9501, device='cuda:0', dtype=torch.float64)
tensor([-3.0377, -3.9014, -4.0059, -4.6521, -4.4536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0153, device='cuda:0', dtype=torch.float64)
tensor([-3.0409, -3.9013, -4.0122, -4.6595, -4.4542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9341, device='cuda:0', dtype=torch.float64)
tensor([-3.0473, -3.8988, -4.0178, -4.6696, -4.4636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9374, device='cuda:0', dtype=torch.float64)
tensor([-3.0492, -3.8945, -4.0236, -4.6903, -4.4707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9282, device='cuda:0', dtype=torch.float64)
tensor([-3.0456, -3.8948, -4.0219, -4.7087, -4.4759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0143, device='cuda:0', dtype=torch.float64)
tensor([-3.0398, -3.8982, -4.0171, -4.7247, -4.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0062, device='cuda:0', dtype=torch.float64)
tensor([-3.0377, -3.9015, -4.0161, -4.7426, -4.4865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1081, device='cuda:0', dtype=torch.float64)
tensor([-3.0344, -3.9035, -4.0109, -4.7558, -4.4971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0163, device='cuda:0', dtype=torch.float64)
tensor([-3.0380, -3.9098, -4.0074, -4.7615, -4.5089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1855, device='cuda:0', dtype=torch.float64)
tensor([-3.0329, -3.9141, -4.0046, -4.7701, -4.5140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8807, device='cuda:0', dtype=torch.float64)
tensor([-3.0261, -3.9178, -4.0029, -4.7865, -4.5217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0227, device='cuda:0', dtype=torch.float64)
tensor([-3.0234, -3.9207, -4.0058, -4.8034, -4.5283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9186, device='cuda:0', dtype=torch.float64)
tensor([-3.0176, -3.9248, -4.0072, -4.8101, -4.5287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9945, device='cuda:0', dtype=torch.float64)
tensor([-3.0110, -3.9271, -4.0140, -4.8059, -4.5266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1328, device='cuda:0', dtype=torch.float64)
tensor([-3.0056, -3.9310, -4.0214, -4.8019, -4.5248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9579, device='cuda:0', dtype=torch.float64)
tensor([-3.0026, -3.9347, -4.0265, -4.7917, -4.5271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0862, device='cuda:0', dtype=torch.float64)
tensor([-3.0087, -3.9455, -4.0267, -4.7714, -4.5331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0593, device='cuda:0', dtype=torch.float64)
tensor([-3.0208, -3.9556, -4.0241, -4.7624, -4.5411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9897, device='cuda:0', dtype=torch.float64)
tensor([-3.0368, -3.9675, -4.0201, -4.7548, -4.5532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0940, device='cuda:0', dtype=torch.float64)
tensor([-3.0521, -3.9801, -4.0156, -4.7550, -4.5659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9549, device='cuda:0', dtype=torch.float64)
tensor([-3.0654, -3.9972, -4.0103, -4.7517, -4.5731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9234, device='cuda:0', dtype=torch.float64)
tensor([-3.0722, -4.0121, -4.0059, -4.7516, -4.5756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8962, device='cuda:0', dtype=torch.float64)
tensor([-3.0771, -4.0273, -4.0016, -4.7459, -4.5746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9764, device='cuda:0', dtype=torch.float64)
tensor([-3.0777, -4.0436, -3.9932, -4.7430, -4.5747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9967, device='cuda:0', dtype=torch.float64)
tensor([-3.0773, -4.0560, -3.9866, -4.7371, -4.5725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9698, device='cuda:0', dtype=torch.float64)
tensor([-3.0764, -4.0619, -3.9807, -4.7349, -4.5725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0214, device='cuda:0', dtype=torch.float64)
tensor([-3.0739, -4.0613, -3.9741, -4.7328, -4.5691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1858, device='cuda:0', dtype=torch.float64)
tensor([-3.0600, -4.0557, -3.9760, -4.7454, -4.5560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0607, device='cuda:0', dtype=torch.float64)
tensor([-3.0497, -4.0483, -3.9784, -4.7533, -4.5418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3334, device='cuda:0', dtype=torch.float64)
tensor([-3.0404, -4.0420, -3.9820, -4.7658, -4.5297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1274, device='cuda:0', dtype=torch.float64)
tensor([-3.0378, -4.0378, -3.9799, -4.7822, -4.5173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0810, device='cuda:0', dtype=torch.float64)
tensor([-3.0350, -4.0328, -3.9797, -4.8012, -4.5029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8933, device='cuda:0', dtype=torch.float64)
tensor([-3.0357, -4.0299, -3.9828, -4.8174, -4.4900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9241, device='cuda:0', dtype=torch.float64)
tensor([-3.0386, -4.0268, -3.9850, -4.8313, -4.4821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9584, device='cuda:0', dtype=torch.float64)
tensor([-3.0416, -4.0199, -3.9889, -4.8436, -4.4747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1247, device='cuda:0', dtype=torch.float64)
tensor([-3.0482, -4.0185, -3.9894, -4.8514, -4.4673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8196, device='cuda:0', dtype=torch.float64)
tensor([-3.0538, -4.0166, -3.9879, -4.8522, -4.4580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8046, device='cuda:0', dtype=torch.float64)
tensor([-3.0616, -4.0163, -3.9871, -4.8442, -4.4580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0884, device='cuda:0', dtype=torch.float64)
tensor([-3.0685, -4.0175, -3.9828, -4.8346, -4.4592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0148, device='cuda:0', dtype=torch.float64)
tensor([-3.0682, -4.0144, -3.9933, -4.8385, -4.4597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9511, device='cuda:0', dtype=torch.float64)
tensor([-3.0597, -4.0096, -4.0121, -4.8486, -4.4607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9329, device='cuda:0', dtype=torch.float64)
tensor([-3.0556, -4.0035, -4.0332, -4.8570, -4.4634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1091, device='cuda:0', dtype=torch.float64)
tensor([-3.0550, -4.0015, -4.0505, -4.8607, -4.4687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8635, device='cuda:0', dtype=torch.float64)
tensor([-3.0539, -4.0031, -4.0606, -4.8604, -4.4697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8636, device='cuda:0', dtype=torch.float64)
tensor([-3.0535, -4.0037, -4.0705, -4.8628, -4.4728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0781, device='cuda:0', dtype=torch.float64)
tensor([-3.0579, -4.0016, -4.0781, -4.8657, -4.4836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0587, device='cuda:0', dtype=torch.float64)
tensor([-3.0714, -4.0016, -4.0816, -4.8612, -4.4963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([-3.0842, -4.0016, -4.0870, -4.8454, -4.5100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0303, device='cuda:0', dtype=torch.float64)
tensor([-3.0950, -4.0030, -4.0889, -4.8300, -4.5196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0303, device='cuda:0', dtype=torch.float64)
tensor([-3.1022, -4.0005, -4.0951, -4.8185, -4.5286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8967, device='cuda:0', dtype=torch.float64)
tensor([-3.1102, -3.9985, -4.1017, -4.8022, -4.5409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0573, device='cuda:0', dtype=torch.float64)
tensor([-3.1164, -3.9928, -4.1152, -4.7882, -4.5514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0725, device='cuda:0', dtype=torch.float64)
tensor([-3.1236, -3.9923, -4.1212, -4.7676, -4.5594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9115, device='cuda:0', dtype=torch.float64)
tensor([-3.1293, -3.9947, -4.1298, -4.7439, -4.5630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1568, device='cuda:0', dtype=torch.float64)
tensor([-3.1362, -4.0017, -4.1360, -4.7130, -4.5691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0559, device='cuda:0', dtype=torch.float64)
tensor([-3.1484, -4.0094, -4.1419, -4.6797, -4.5813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9962, device='cuda:0', dtype=torch.float64)
tensor([-3.1551, -4.0140, -4.1450, -4.6560, -4.5889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0282, device='cuda:0', dtype=torch.float64)
tensor([-3.1667, -4.0214, -4.1477, -4.6344, -4.6001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1476, device='cuda:0', dtype=torch.float64)
tensor([-3.1779, -4.0246, -4.1510, -4.6148, -4.6146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9719, device='cuda:0', dtype=torch.float64)
tensor([-3.1842, -4.0270, -4.1542, -4.6053, -4.6220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1898, device='cuda:0', dtype=torch.float64)
tensor([-3.1935, -4.0344, -4.1531, -4.5974, -4.6309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9088, device='cuda:0', dtype=torch.float64)
tensor([-3.1929, -4.0382, -4.1463, -4.5935, -4.6335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0160, device='cuda:0', dtype=torch.float64)
tensor([-3.1852, -4.0377, -4.1366, -4.5957, -4.6314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1110, device='cuda:0', dtype=torch.float64)
tensor([-3.1668, -4.0317, -4.1269, -4.6080, -4.6238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1154, device='cuda:0', dtype=torch.float64)
tensor([-3.1556, -4.0254, -4.1155, -4.6266, -4.6186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0690, device='cuda:0', dtype=torch.float64)
tensor([-3.1442, -4.0170, -4.0963, -4.6520, -4.6074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0827, device='cuda:0', dtype=torch.float64)
tensor([-3.1319, -4.0113, -4.0801, -4.6747, -4.6011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9206, device='cuda:0', dtype=torch.float64)
tensor([-3.1186, -4.0071, -4.0685, -4.7039, -4.5962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1333, device='cuda:0', dtype=torch.float64)
tensor([-3.1126, -4.0001, -4.0629, -4.7266, -4.5950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9573, device='cuda:0', dtype=torch.float64)
tensor([-3.1118, -4.0046, -4.0578, -4.7385, -4.5970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1502, device='cuda:0', dtype=torch.float64)
tensor([-3.1109, -4.0113, -4.0519, -4.7506, -4.6018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1046, device='cuda:0', dtype=torch.float64)
tensor([-3.1120, -4.0220, -4.0433, -4.7594, -4.6085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9687, device='cuda:0', dtype=torch.float64)
tensor([-3.1111, -4.0298, -4.0386, -4.7690, -4.6175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0606, device='cuda:0', dtype=torch.float64)
tensor([-3.1088, -4.0332, -4.0352, -4.7859, -4.6283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0360, device='cuda:0', dtype=torch.float64)
tensor([-3.1096, -4.0341, -4.0398, -4.7947, -4.6426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0420, device='cuda:0', dtype=torch.float64)
tensor([-3.1177, -4.0411, -4.0360, -4.7941, -4.6579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1458, device='cuda:0', dtype=torch.float64)
tensor([-3.1228, -4.0401, -4.0367, -4.7970, -4.6703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1350, device='cuda:0', dtype=torch.float64)
tensor([-3.1345, -4.0448, -4.0391, -4.7924, -4.6850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0378, device='cuda:0', dtype=torch.float64)
tensor([-3.1410, -4.0447, -4.0446, -4.8030, -4.6995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9307, device='cuda:0', dtype=torch.float64)
tensor([-3.1493, -4.0463, -4.0477, -4.8075, -4.7174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9726, device='cuda:0', dtype=torch.float64)
tensor([-3.1604, -4.0466, -4.0494, -4.8044, -4.7350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0684, device='cuda:0', dtype=torch.float64)
tensor([-3.1753, -4.0442, -4.0504, -4.7988, -4.7553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0595, device='cuda:0', dtype=torch.float64)
tensor([-3.1805, -4.0389, -4.0530, -4.8052, -4.7700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0887, device='cuda:0', dtype=torch.float64)
tensor([-3.1900, -4.0342, -4.0599, -4.8164, -4.7872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8409, device='cuda:0', dtype=torch.float64)
tensor([-3.2026, -4.0308, -4.0658, -4.8247, -4.8041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9814, device='cuda:0', dtype=torch.float64)
tensor([-3.2145, -4.0264, -4.0704, -4.8346, -4.8166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9843, device='cuda:0', dtype=torch.float64)
tensor([-3.2190, -4.0239, -4.0684, -4.8587, -4.8190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0771, device='cuda:0', dtype=torch.float64)
tensor([-3.2261, -4.0279, -4.0647, -4.8650, -4.8211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9342, device='cuda:0', dtype=torch.float64)
tensor([-3.2320, -4.0376, -4.0617, -4.8755, -4.8219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8898, device='cuda:0', dtype=torch.float64)
tensor([-3.2440, -4.0503, -4.0602, -4.8774, -4.8238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0879, device='cuda:0', dtype=torch.float64)
tensor([-3.2507, -4.0603, -4.0611, -4.8742, -4.8224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0255, device='cuda:0', dtype=torch.float64)
tensor([-3.2513, -4.0676, -4.0642, -4.8730, -4.8150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9718, device='cuda:0', dtype=torch.float64)
tensor([-3.2547, -4.0766, -4.0720, -4.8697, -4.8055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-3.2505, -4.0844, -4.0750, -4.8820, -4.7869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9418, device='cuda:0', dtype=torch.float64)
tensor([-3.2409, -4.0844, -4.0825, -4.8967, -4.7710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0801, device='cuda:0', dtype=torch.float64)
tensor([-3.2294, -4.0836, -4.0893, -4.9131, -4.7497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8489, device='cuda:0', dtype=torch.float64)
tensor([-3.2206, -4.0871, -4.0955, -4.9354, -4.7296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9923, device='cuda:0', dtype=torch.float64)
tensor([-3.2097, -4.0885, -4.1072, -4.9507, -4.7092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0488, device='cuda:0', dtype=torch.float64)
tensor([-3.1992, -4.0913, -4.1176, -4.9675, -4.6903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0129, device='cuda:0', dtype=torch.float64)
tensor([-3.1956, -4.0944, -4.1292, -4.9886, -4.6797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1440, device='cuda:0', dtype=torch.float64)
tensor([-3.1943, -4.0969, -4.1456, -5.0093, -4.6735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9984, device='cuda:0', dtype=torch.float64)
tensor([-3.1951, -4.0967, -4.1672, -5.0121, -4.6678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9347, device='cuda:0', dtype=torch.float64)
tensor([-3.1996, -4.0968, -4.1931, -5.0168, -4.6662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9646, device='cuda:0', dtype=torch.float64)
tensor([-3.2057, -4.0976, -4.2138, -5.0173, -4.6620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8837, device='cuda:0', dtype=torch.float64)
tensor([-3.2129, -4.1004, -4.2292, -5.0141, -4.6554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1255, device='cuda:0', dtype=torch.float64)
tensor([-3.2169, -4.1027, -4.2403, -5.0172, -4.6502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0606, device='cuda:0', dtype=torch.float64)
tensor([-3.2255, -4.1065, -4.2420, -5.0133, -4.6465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9910, device='cuda:0', dtype=torch.float64)
tensor([-3.2351, -4.1168, -4.2378, -5.0010, -4.6416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9039, device='cuda:0', dtype=torch.float64)
tensor([-3.2482, -4.1273, -4.2283, -4.9742, -4.6377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0413, device='cuda:0', dtype=torch.float64)
tensor([-3.2523, -4.1377, -4.2211, -4.9582, -4.6288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0520, device='cuda:0', dtype=torch.float64)
tensor([-3.2632, -4.1511, -4.2149, -4.9400, -4.6283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1679, device='cuda:0', dtype=torch.float64)
tensor([-3.2774, -4.1628, -4.2052, -4.9158, -4.6316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9771, device='cuda:0', dtype=torch.float64)
tensor([-3.2944, -4.1775, -4.1947, -4.8887, -4.6382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8570, device='cuda:0', dtype=torch.float64)
tensor([-3.3129, -4.1995, -4.1844, -4.8576, -4.6467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9583, device='cuda:0', dtype=torch.float64)
tensor([-3.3283, -4.2187, -4.1770, -4.8324, -4.6538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8203, device='cuda:0', dtype=torch.float64)
tensor([-3.3397, -4.2303, -4.1746, -4.8261, -4.6602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0621, device='cuda:0', dtype=torch.float64)
tensor([-3.3529, -4.2446, -4.1767, -4.8236, -4.6713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1372, device='cuda:0', dtype=torch.float64)
tensor([-3.3574, -4.2537, -4.1814, -4.8296, -4.6759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8743, device='cuda:0', dtype=torch.float64)
tensor([-3.3519, -4.2522, -4.1903, -4.8574, -4.6782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8718, device='cuda:0', dtype=torch.float64)
tensor([-3.3442, -4.2415, -4.1986, -4.8908, -4.6748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9479, device='cuda:0', dtype=torch.float64)
tensor([-3.3392, -4.2250, -4.2110, -4.9225, -4.6746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1526, device='cuda:0', dtype=torch.float64)
tensor([-3.3339, -4.2097, -4.2226, -4.9503, -4.6751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1123, device='cuda:0', dtype=torch.float64)
tensor([-3.3285, -4.1923, -4.2302, -4.9750, -4.6840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0934, device='cuda:0', dtype=torch.float64)
tensor([-3.3211, -4.1687, -4.2323, -4.9941, -4.6860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1194, device='cuda:0', dtype=torch.float64)
tensor([-3.3188, -4.1473, -4.2334, -5.0168, -4.6901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8818, device='cuda:0', dtype=torch.float64)
tensor([-3.3206, -4.1308, -4.2293, -5.0292, -4.6948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9243, device='cuda:0', dtype=torch.float64)
tensor([-3.3258, -4.1222, -4.2266, -5.0443, -4.7068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1101, device='cuda:0', dtype=torch.float64)
tensor([-3.3220, -4.1163, -4.2264, -5.0738, -4.7145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9299, device='cuda:0', dtype=torch.float64)
tensor([-3.3259, -4.1119, -4.2235, -5.0972, -4.7238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9459, device='cuda:0', dtype=torch.float64)
tensor([-3.3274, -4.1081, -4.2198, -5.1162, -4.7326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9788, device='cuda:0', dtype=torch.float64)
tensor([-3.3341, -4.1090, -4.2131, -5.1228, -4.7422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8626, device='cuda:0', dtype=torch.float64)
tensor([-3.3408, -4.1110, -4.2082, -5.1345, -4.7463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9787, device='cuda:0', dtype=torch.float64)
tensor([-3.3481, -4.1141, -4.2060, -5.1407, -4.7460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9354, device='cuda:0', dtype=torch.float64)
tensor([-3.3571, -4.1181, -4.1985, -5.1436, -4.7428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9437, device='cuda:0', dtype=torch.float64)
tensor([-3.3580, -4.1173, -4.1940, -5.1498, -4.7346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9149, device='cuda:0', dtype=torch.float64)
tensor([-3.3591, -4.1171, -4.1901, -5.1565, -4.7216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1781, device='cuda:0', dtype=torch.float64)
tensor([-3.3610, -4.1162, -4.1901, -5.1605, -4.7133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9044, device='cuda:0', dtype=torch.float64)
tensor([-3.3632, -4.1216, -4.1903, -5.1601, -4.7042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2049, device='cuda:0', dtype=torch.float64)
tensor([-3.3716, -4.1282, -4.1933, -5.1519, -4.7018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9802, device='cuda:0', dtype=torch.float64)
tensor([-3.3893, -4.1408, -4.1904, -5.1370, -4.7067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0762, device='cuda:0', dtype=torch.float64)
tensor([-3.4173, -4.1555, -4.1873, -5.1026, -4.7172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8011, device='cuda:0', dtype=torch.float64)
tensor([-3.4451, -4.1691, -4.1863, -5.0664, -4.7328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9957, device='cuda:0', dtype=torch.float64)
tensor([-3.4737, -4.1853, -4.1850, -5.0244, -4.7484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2422, device='cuda:0', dtype=torch.float64)
tensor([-3.5084, -4.2043, -4.1891, -4.9741, -4.7655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0898, device='cuda:0', dtype=torch.float64)
tensor([-3.5373, -4.2229, -4.1946, -4.9236, -4.7707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1361, device='cuda:0', dtype=torch.float64)
tensor([-3.5633, -4.2388, -4.2025, -4.8714, -4.7760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0126, device='cuda:0', dtype=torch.float64)
tensor([-3.5860, -4.2514, -4.2120, -4.8278, -4.7807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8597, device='cuda:0', dtype=torch.float64)
tensor([-3.6017, -4.2639, -4.2350, -4.8023, -4.7875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8846, device='cuda:0', dtype=torch.float64)
tensor([-3.6022, -4.2739, -4.2535, -4.7975, -4.7863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8709, device='cuda:0', dtype=torch.float64)
tensor([-3.5989, -4.2763, -4.2725, -4.8052, -4.7867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1429, device='cuda:0', dtype=torch.float64)
tensor([-3.5849, -4.2792, -4.2922, -4.8269, -4.7788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8457, device='cuda:0', dtype=torch.float64)
tensor([-3.5848, -4.2878, -4.3094, -4.8456, -4.7775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9740, device='cuda:0', dtype=torch.float64)
tensor([-3.5796, -4.2953, -4.3215, -4.8677, -4.7768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0687, device='cuda:0', dtype=torch.float64)
tensor([-3.5744, -4.3008, -4.3376, -4.8888, -4.7733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0540, device='cuda:0', dtype=torch.float64)
tensor([-3.5623, -4.3052, -4.3499, -4.8974, -4.7695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0590, device='cuda:0', dtype=torch.float64)
tensor([-3.5485, -4.3121, -4.3614, -4.8975, -4.7651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0639, device='cuda:0', dtype=torch.float64)
tensor([-3.5344, -4.3201, -4.3725, -4.9030, -4.7639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9333, device='cuda:0', dtype=torch.float64)
tensor([-3.5207, -4.3290, -4.3776, -4.9021, -4.7631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9105, device='cuda:0', dtype=torch.float64)
tensor([-3.4991, -4.3329, -4.3854, -4.9086, -4.7642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8660, device='cuda:0', dtype=torch.float64)
tensor([-3.4800, -4.3377, -4.3887, -4.9127, -4.7684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1294, device='cuda:0', dtype=torch.float64)
tensor([-3.4541, -4.3369, -4.3957, -4.9219, -4.7683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9379, device='cuda:0', dtype=torch.float64)
tensor([-3.4261, -4.3337, -4.4048, -4.9373, -4.7694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9337, device='cuda:0', dtype=torch.float64)
tensor([-3.3979, -4.3241, -4.4159, -4.9643, -4.7719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8828, device='cuda:0', dtype=torch.float64)
tensor([-3.3790, -4.3150, -4.4249, -4.9921, -4.7744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0966, device='cuda:0', dtype=torch.float64)
tensor([-3.3659, -4.3059, -4.4203, -5.0088, -4.7763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9532, device='cuda:0', dtype=torch.float64)
tensor([-3.3531, -4.3033, -4.4096, -5.0250, -4.7805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0113, device='cuda:0', dtype=torch.float64)
tensor([-3.3515, -4.3016, -4.3995, -5.0270, -4.7904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0288, device='cuda:0', dtype=torch.float64)
tensor([-3.3449, -4.2991, -4.3874, -5.0305, -4.7972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0419, device='cuda:0', dtype=torch.float64)
tensor([-3.3402, -4.2974, -4.3720, -5.0414, -4.8078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0793, device='cuda:0', dtype=torch.float64)
tensor([-3.3403, -4.2971, -4.3524, -5.0467, -4.8245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8319, device='cuda:0', dtype=torch.float64)
tensor([-3.3412, -4.2970, -4.3383, -5.0556, -4.8415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9488, device='cuda:0', dtype=torch.float64)
tensor([-3.3493, -4.2989, -4.3216, -5.0622, -4.8647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1171, device='cuda:0', dtype=torch.float64)
tensor([-3.3553, -4.2968, -4.3140, -5.0779, -4.8886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0574, device='cuda:0', dtype=torch.float64)
tensor([-3.3742, -4.2972, -4.3073, -5.0853, -4.9156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9165, device='cuda:0', dtype=torch.float64)
tensor([-3.3913, -4.2971, -4.3021, -5.0973, -4.9341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1389, device='cuda:0', dtype=torch.float64)
tensor([-3.4041, -4.2993, -4.3076, -5.1140, -4.9594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9402, device='cuda:0', dtype=torch.float64)
tensor([-3.4218, -4.3008, -4.3118, -5.1280, -4.9804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9200, device='cuda:0', dtype=torch.float64)
tensor([-3.4338, -4.3019, -4.3167, -5.1501, -4.9948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8805, device='cuda:0', dtype=torch.float64)
tensor([-3.4518, -4.3075, -4.3250, -5.1681, -5.0137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([-3.4642, -4.3093, -4.3346, -5.2001, -5.0294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8894, device='cuda:0', dtype=torch.float64)
tensor([-3.4802, -4.3098, -4.3477, -5.2349, -5.0481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0487, device='cuda:0', dtype=torch.float64)
tensor([-3.4881, -4.3097, -4.3569, -5.2627, -5.0662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1309, device='cuda:0', dtype=torch.float64)
tensor([-3.5005, -4.3108, -4.3662, -5.3102, -5.0871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9667, device='cuda:0', dtype=torch.float64)
tensor([-3.5104, -4.3135, -4.3735, -5.3509, -5.1038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9693, device='cuda:0', dtype=torch.float64)
tensor([-3.5198, -4.3165, -4.3840, -5.3731, -5.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8052, device='cuda:0', dtype=torch.float64)
tensor([-3.5269, -4.3139, -4.3928, -5.3905, -5.1362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0098, device='cuda:0', dtype=torch.float64)
tensor([-3.5388, -4.3104, -4.4059, -5.4068, -5.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0188, device='cuda:0', dtype=torch.float64)
tensor([-3.5438, -4.3025, -4.4242, -5.4331, -5.1723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1654, device='cuda:0', dtype=torch.float64)
tensor([-3.5448, -4.2936, -4.4415, -5.4575, -5.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0352, device='cuda:0', dtype=torch.float64)
tensor([-3.5448, -4.2872, -4.4554, -5.4799, -5.1971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8597, device='cuda:0', dtype=torch.float64)
tensor([-3.5390, -4.2793, -4.4667, -5.5094, -5.2030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9146, device='cuda:0', dtype=torch.float64)
tensor([-3.5380, -4.2726, -4.4823, -5.5499, -5.2104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9740, device='cuda:0', dtype=torch.float64)
tensor([-3.5349, -4.2664, -4.5006, -5.5978, -5.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0047, device='cuda:0', dtype=torch.float64)
tensor([-3.5355, -4.2620, -4.5178, -5.6343, -5.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9883, device='cuda:0', dtype=torch.float64)
tensor([-3.5404, -4.2646, -4.5245, -5.6562, -5.2342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9258, device='cuda:0', dtype=torch.float64)
tensor([-3.5429, -4.2637, -4.5292, -5.6744, -5.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8669, device='cuda:0', dtype=torch.float64)
tensor([-3.5462, -4.2640, -4.5276, -5.6792, -5.2384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8437, device='cuda:0', dtype=torch.float64)
tensor([-3.5503, -4.2631, -4.5276, -5.6757, -5.2423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9962, device='cuda:0', dtype=torch.float64)
tensor([-3.5515, -4.2653, -4.5269, -5.6677, -5.2506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9662, device='cuda:0', dtype=torch.float64)
tensor([-3.5541, -4.2690, -4.5204, -5.6451, -5.2579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9092, device='cuda:0', dtype=torch.float64)
tensor([-3.5522, -4.2690, -4.5139, -5.6193, -5.2579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8509, device='cuda:0', dtype=torch.float64)
tensor([-3.5460, -4.2737, -4.5036, -5.5850, -5.2530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9289, device='cuda:0', dtype=torch.float64)
tensor([-3.5381, -4.2715, -4.4853, -5.5542, -5.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8101, device='cuda:0', dtype=torch.float64)
tensor([-3.5235, -4.2674, -4.4679, -5.5222, -5.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9012, device='cuda:0', dtype=torch.float64)
tensor([-3.5077, -4.2635, -4.4503, -5.4866, -5.2107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9654, device='cuda:0', dtype=torch.float64)
tensor([-3.4990, -4.2627, -4.4321, -5.4539, -5.1962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8992, device='cuda:0', dtype=torch.float64)
tensor([-3.4867, -4.2589, -4.4159, -5.4331, -5.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9758, device='cuda:0', dtype=torch.float64)
tensor([-3.4769, -4.2557, -4.3990, -5.4094, -5.1512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1394, device='cuda:0', dtype=torch.float64)
tensor([-3.4773, -4.2598, -4.3888, -5.3895, -5.1343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8972, device='cuda:0', dtype=torch.float64)
tensor([-3.4857, -4.2674, -4.3791, -5.3732, -5.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9930, device='cuda:0', dtype=torch.float64)
tensor([-3.4875, -4.2765, -4.3780, -5.3671, -5.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9416, device='cuda:0', dtype=torch.float64)
tensor([-3.4892, -4.2853, -4.3782, -5.3572, -5.1096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9319, device='cuda:0', dtype=torch.float64)
tensor([-3.4901, -4.2892, -4.3839, -5.3537, -5.1092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0115, device='cuda:0', dtype=torch.float64)
tensor([-3.4944, -4.2941, -4.3926, -5.3403, -5.1112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8869, device='cuda:0', dtype=torch.float64)
tensor([-3.4970, -4.2973, -4.4015, -5.3154, -5.1111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8832, device='cuda:0', dtype=torch.float64)
tensor([-3.5086, -4.3059, -4.4120, -5.2995, -5.1137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9866, device='cuda:0', dtype=torch.float64)
tensor([-3.5290, -4.3200, -4.4306, -5.2750, -5.1318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9223, device='cuda:0', dtype=torch.float64)
tensor([-3.5514, -4.3355, -4.4484, -5.2622, -5.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0898, device='cuda:0', dtype=torch.float64)
tensor([-3.5759, -4.3499, -4.4674, -5.2499, -5.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0269, device='cuda:0', dtype=torch.float64)
tensor([-3.6016, -4.3618, -4.4927, -5.2373, -5.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8448, device='cuda:0', dtype=torch.float64)
tensor([-3.6283, -4.3766, -4.5171, -5.2167, -5.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0374, device='cuda:0', dtype=torch.float64)
tensor([-3.6526, -4.3898, -4.5397, -5.2042, -5.2246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1581, device='cuda:0', dtype=torch.float64)
tensor([-3.6855, -4.4064, -4.5642, -5.1925, -5.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0252, device='cuda:0', dtype=torch.float64)
tensor([-3.7193, -4.4184, -4.5935, -5.1918, -5.2729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9387, device='cuda:0', dtype=torch.float64)
tensor([-3.7484, -4.4278, -4.6241, -5.2045, -5.2905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9527, device='cuda:0', dtype=torch.float64)
tensor([-3.7785, -4.4356, -4.6464, -5.2149, -5.3074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0524, device='cuda:0', dtype=torch.float64)
tensor([-3.8070, -4.4401, -4.6664, -5.2242, -5.3212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8477, device='cuda:0', dtype=torch.float64)
tensor([-3.8322, -4.4404, -4.6860, -5.2342, -5.3323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9176, device='cuda:0', dtype=torch.float64)
tensor([-3.8503, -4.4428, -4.7074, -5.2451, -5.3375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8766, device='cuda:0', dtype=torch.float64)
tensor([-3.8719, -4.4483, -4.7315, -5.2454, -5.3486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8289, device='cuda:0', dtype=torch.float64)
tensor([-3.8914, -4.4528, -4.7501, -5.2445, -5.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7930, device='cuda:0', dtype=torch.float64)
tensor([-3.9045, -4.4561, -4.7666, -5.2449, -5.3737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0776, device='cuda:0', dtype=torch.float64)
tensor([-3.9142, -4.4587, -4.7713, -5.2402, -5.3750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0060, device='cuda:0', dtype=torch.float64)
tensor([-3.9235, -4.4613, -4.7698, -5.2322, -5.3791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9401, device='cuda:0', dtype=torch.float64)
tensor([-3.9259, -4.4594, -4.7716, -5.2149, -5.3757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0075, device='cuda:0', dtype=torch.float64)
tensor([-3.9316, -4.4590, -4.7656, -5.1920, -5.3680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9745, device='cuda:0', dtype=torch.float64)
tensor([-3.9300, -4.4585, -4.7497, -5.1751, -5.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9096, device='cuda:0', dtype=torch.float64)
tensor([-3.9267, -4.4538, -4.7321, -5.1610, -5.3521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7977, device='cuda:0', dtype=torch.float64)
tensor([-3.9273, -4.4525, -4.7118, -5.1511, -5.3475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8390, device='cuda:0', dtype=torch.float64)
tensor([-3.9231, -4.4497, -4.6946, -5.1537, -5.3388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9003, device='cuda:0', dtype=torch.float64)
tensor([-3.9158, -4.4449, -4.6879, -5.1623, -5.3325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8379, device='cuda:0', dtype=torch.float64)
tensor([-3.9008, -4.4380, -4.6760, -5.1638, -5.3209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9970, device='cuda:0', dtype=torch.float64)
tensor([-3.8950, -4.4346, -4.6716, -5.1630, -5.3164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1254, device='cuda:0', dtype=torch.float64)
tensor([-3.9098, -4.4364, -4.6717, -5.1581, -5.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8881, device='cuda:0', dtype=torch.float64)
tensor([-3.9263, -4.4457, -4.6749, -5.1573, -5.3467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8670, device='cuda:0', dtype=torch.float64)
tensor([-3.9436, -4.4535, -4.6814, -5.1543, -5.3632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0689, device='cuda:0', dtype=torch.float64)
tensor([-3.9537, -4.4606, -4.6855, -5.1578, -5.3730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1154, device='cuda:0', dtype=torch.float64)
tensor([-3.9779, -4.4708, -4.6926, -5.1553, -5.3942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8664, device='cuda:0', dtype=torch.float64)
tensor([-4.0120, -4.4846, -4.7011, -5.1509, -5.4250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9645, device='cuda:0', dtype=torch.float64)
tensor([-4.0541, -4.4994, -4.7133, -5.1441, -5.4621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9055, device='cuda:0', dtype=torch.float64)
tensor([-4.0971, -4.5159, -4.7216, -5.1467, -5.5020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0069, device='cuda:0', dtype=torch.float64)
tensor([-4.1355, -4.5334, -4.7305, -5.1501, -5.5372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9116, device='cuda:0', dtype=torch.float64)
tensor([-4.1683, -4.5496, -4.7401, -5.1639, -5.5736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1094, device='cuda:0', dtype=torch.float64)
tensor([-4.2037, -4.5670, -4.7473, -5.1741, -5.6154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8898, device='cuda:0', dtype=torch.float64)
tensor([-4.2383, -4.5820, -4.7637, -5.1986, -5.6591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0161, device='cuda:0', dtype=torch.float64)
tensor([-4.2618, -4.5925, -4.7791, -5.2347, -5.6983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1075, device='cuda:0', dtype=torch.float64)
tensor([-4.2680, -4.5977, -4.7855, -5.2606, -5.7318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9678, device='cuda:0', dtype=torch.float64)
tensor([-4.2653, -4.6045, -4.7864, -5.2779, -5.7509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9499, device='cuda:0', dtype=torch.float64)
tensor([-4.2707, -4.6171, -4.7910, -5.2855, -5.7735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8445, device='cuda:0', dtype=torch.float64)
tensor([-4.2717, -4.6245, -4.7981, -5.2880, -5.7891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8463, device='cuda:0', dtype=torch.float64)
tensor([-4.2699, -4.6276, -4.8015, -5.2927, -5.7993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1052, device='cuda:0', dtype=torch.float64)
tensor([-4.2664, -4.6293, -4.8058, -5.2914, -5.8037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9546, device='cuda:0', dtype=torch.float64)
tensor([-4.2553, -4.6326, -4.8073, -5.2936, -5.8064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0130, device='cuda:0', dtype=torch.float64)
tensor([-4.2416, -4.6321, -4.8079, -5.2937, -5.8070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1047, device='cuda:0', dtype=torch.float64)
tensor([-4.2247, -4.6327, -4.8157, -5.2819, -5.8083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9497, device='cuda:0', dtype=torch.float64)
tensor([-4.2046, -4.6340, -4.8395, -5.2700, -5.8174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9271, device='cuda:0', dtype=torch.float64)
tensor([-4.1900, -4.6319, -4.8592, -5.2657, -5.8300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9564, device='cuda:0', dtype=torch.float64)
tensor([-4.1791, -4.6348, -4.8676, -5.2451, -5.8368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8811, device='cuda:0', dtype=torch.float64)
tensor([-4.1746, -4.6339, -4.8768, -5.2242, -5.8418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8706, device='cuda:0', dtype=torch.float64)
tensor([-4.1737, -4.6333, -4.8799, -5.2066, -5.8459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7928, device='cuda:0', dtype=torch.float64)
tensor([-4.1733, -4.6304, -4.8841, -5.1940, -5.8573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8455, device='cuda:0', dtype=torch.float64)
tensor([-4.1754, -4.6307, -4.8899, -5.1777, -5.8633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9604, device='cuda:0', dtype=torch.float64)
tensor([-4.1851, -4.6359, -4.9015, -5.1671, -5.8847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1228, device='cuda:0', dtype=torch.float64)
tensor([-4.1893, -4.6431, -4.9115, -5.1572, -5.8971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9022, device='cuda:0', dtype=torch.float64)
tensor([-4.1885, -4.6543, -4.9197, -5.1540, -5.9084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9974, device='cuda:0', dtype=torch.float64)
tensor([-4.1758, -4.6622, -4.9274, -5.1436, -5.9150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9162, device='cuda:0', dtype=torch.float64)
tensor([-4.1606, -4.6696, -4.9377, -5.1422, -5.9189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8964, device='cuda:0', dtype=torch.float64)
tensor([-4.1360, -4.6764, -4.9461, -5.1491, -5.9146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0556, device='cuda:0', dtype=torch.float64)
tensor([-4.1080, -4.6824, -4.9403, -5.1557, -5.8953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8700, device='cuda:0', dtype=torch.float64)
tensor([-4.0760, -4.6882, -4.9370, -5.1735, -5.8714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9667, device='cuda:0', dtype=torch.float64)
tensor([-4.0548, -4.6994, -4.9382, -5.1922, -5.8546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8019, device='cuda:0', dtype=torch.float64)
tensor([-4.0378, -4.7120, -4.9382, -5.2012, -5.8342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1616, device='cuda:0', dtype=torch.float64)
tensor([-4.0165, -4.7260, -4.9362, -5.2118, -5.8100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0248, device='cuda:0', dtype=torch.float64)
tensor([-3.9992, -4.7447, -4.9342, -5.2255, -5.7863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9181, device='cuda:0', dtype=torch.float64)
tensor([-3.9889, -4.7645, -4.9327, -5.2416, -5.7623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8329, device='cuda:0', dtype=torch.float64)
tensor([-3.9807, -4.7861, -4.9282, -5.2556, -5.7428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8142, device='cuda:0', dtype=torch.float64)
tensor([-3.9796, -4.8077, -4.9255, -5.2742, -5.7291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0704, device='cuda:0', dtype=torch.float64)
tensor([-3.9876, -4.8268, -4.9227, -5.2816, -5.7219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8725, device='cuda:0', dtype=torch.float64)
tensor([-3.9989, -4.8512, -4.9236, -5.2931, -5.7169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0680, device='cuda:0', dtype=torch.float64)
tensor([-4.0211, -4.8798, -4.9267, -5.3105, -5.7254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9922, device='cuda:0', dtype=torch.float64)
tensor([-4.0457, -4.9051, -4.9258, -5.3254, -5.7308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9462, device='cuda:0', dtype=torch.float64)
tensor([-4.0757, -4.9326, -4.9258, -5.3415, -5.7431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9451, device='cuda:0', dtype=torch.float64)
tensor([-4.1001, -4.9579, -4.9155, -5.3588, -5.7487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9155, device='cuda:0', dtype=torch.float64)
tensor([-4.1246, -4.9857, -4.9150, -5.3849, -5.7568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8763, device='cuda:0', dtype=torch.float64)
tensor([-4.1493, -5.0136, -4.9271, -5.4264, -5.7716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9827, device='cuda:0', dtype=torch.float64)
tensor([-4.1831, -5.0420, -4.9463, -5.4749, -5.7908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8803, device='cuda:0', dtype=torch.float64)
tensor([-4.2269, -5.0740, -4.9691, -5.5226, -5.8152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0220, device='cuda:0', dtype=torch.float64)
tensor([-4.2664, -5.1049, -4.9893, -5.5667, -5.8307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8397, device='cuda:0', dtype=torch.float64)
tensor([-4.3092, -5.1328, -5.0099, -5.6113, -5.8546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-4.3543, -5.1627, -5.0348, -5.6714, -5.8824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7945, device='cuda:0', dtype=torch.float64)
tensor([-4.3976, -5.1862, -5.0582, -5.7229, -5.9068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9053, device='cuda:0', dtype=torch.float64)
tensor([-4.4367, -5.2054, -5.0818, -5.7550, -5.9312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9215, device='cuda:0', dtype=torch.float64)
tensor([-4.4813, -5.2261, -5.1081, -5.7832, -5.9576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8456, device='cuda:0', dtype=torch.float64)
tensor([-4.5291, -5.2450, -5.1315, -5.7977, -5.9792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7497, device='cuda:0', dtype=torch.float64)
tensor([-4.5710, -5.2620, -5.1585, -5.8183, -5.9986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9670, device='cuda:0', dtype=torch.float64)
tensor([-4.6092, -5.2770, -5.1901, -5.8344, -6.0241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8544, device='cuda:0', dtype=torch.float64)
tensor([-4.6290, -5.2865, -5.2233, -5.8505, -6.0423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8740, device='cuda:0', dtype=torch.float64)
tensor([-4.6584, -5.2950, -5.2517, -5.8679, -6.0614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([-4.6791, -5.3020, -5.2841, -5.8822, -6.0792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0345, device='cuda:0', dtype=torch.float64)
tensor([-4.6911, -5.3008, -5.3191, -5.9075, -6.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9786, device='cuda:0', dtype=torch.float64)
tensor([-4.7016, -5.2889, -5.3566, -5.9233, -6.0921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7436, device='cuda:0', dtype=torch.float64)
tensor([-4.7065, -5.2750, -5.3947, -5.9381, -6.0935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9529, device='cuda:0', dtype=torch.float64)
tensor([-4.7113, -5.2650, -5.4224, -5.9363, -6.0949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8470, device='cuda:0', dtype=torch.float64)
tensor([-4.7139, -5.2536, -5.4461, -5.9514, -6.0960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8834, device='cuda:0', dtype=torch.float64)
tensor([-4.7135, -5.2379, -5.4602, -5.9874, -6.0924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9751, device='cuda:0', dtype=torch.float64)
tensor([-4.7132, -5.2187, -5.4701, -6.0032, -6.0862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8129, device='cuda:0', dtype=torch.float64)
tensor([-4.7150, -5.2052, -5.4709, -6.0177, -6.0708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0169, device='cuda:0', dtype=torch.float64)
tensor([-4.7220, -5.1990, -5.4650, -6.0059, -6.0572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9230, device='cuda:0', dtype=torch.float64)
tensor([-4.7355, -5.1961, -5.4556, -5.9807, -6.0511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9367, device='cuda:0', dtype=torch.float64)
tensor([-4.7552, -5.1976, -5.4566, -5.9669, -6.0517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9851, device='cuda:0', dtype=torch.float64)
tensor([-4.7849, -5.1998, -5.4613, -5.9557, -6.0532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8153, device='cuda:0', dtype=torch.float64)
tensor([-4.8188, -5.2028, -5.4764, -5.9537, -6.0594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9459, device='cuda:0', dtype=torch.float64)
tensor([-4.8577, -5.2056, -5.4860, -5.9570, -6.0649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7853, device='cuda:0', dtype=torch.float64)
tensor([-4.8834, -5.2082, -5.5009, -5.9780, -6.0685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0184, device='cuda:0', dtype=torch.float64)
tensor([-4.8981, -5.2086, -5.5268, -6.0063, -6.0729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8599, device='cuda:0', dtype=torch.float64)
tensor([-4.9134, -5.2075, -5.5534, -6.0395, -6.0797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9774, device='cuda:0', dtype=torch.float64)
tensor([-4.9242, -5.2058, -5.5602, -6.0692, -6.0831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9624, device='cuda:0', dtype=torch.float64)
tensor([-4.9146, -5.2036, -5.5576, -6.1049, -6.0638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9313, device='cuda:0', dtype=torch.float64)
tensor([-4.8970, -5.1973, -5.5494, -6.1465, -6.0435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9521, device='cuda:0', dtype=torch.float64)
tensor([-4.8861, -5.1948, -5.5444, -6.1769, -6.0319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9882, device='cuda:0', dtype=torch.float64)
tensor([-4.8848, -5.1970, -5.5385, -6.2034, -6.0267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9281, device='cuda:0', dtype=torch.float64)
tensor([-4.9014, -5.2021, -5.5274, -6.2138, -6.0312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8592, device='cuda:0', dtype=torch.float64)
tensor([-4.9104, -5.2072, -5.5283, -6.2417, -6.0406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9270, device='cuda:0', dtype=torch.float64)
tensor([-4.9222, -5.2196, -5.5303, -6.2669, -6.0616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9419, device='cuda:0', dtype=torch.float64)
tensor([-4.9229, -5.2327, -5.5286, -6.2975, -6.0831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8554, device='cuda:0', dtype=torch.float64)
tensor([-4.9196, -5.2453, -5.5336, -6.3228, -6.1100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8180, device='cuda:0', dtype=torch.float64)
tensor([-4.9254, -5.2590, -5.5449, -6.3561, -6.1424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8850, device='cuda:0', dtype=torch.float64)
tensor([-4.9221, -5.2719, -5.5658, -6.3992, -6.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9295, device='cuda:0', dtype=torch.float64)
tensor([-4.9324, -5.2913, -5.5959, -6.4554, -6.2168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0901, device='cuda:0', dtype=torch.float64)
tensor([-4.9530, -5.3191, -5.6243, -6.5061, -6.2562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8900, device='cuda:0', dtype=torch.float64)
tensor([-4.9769, -5.3452, -5.6647, -6.5529, -6.2925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9086, device='cuda:0', dtype=torch.float64)
tensor([-5.0045, -5.3722, -5.6945, -6.5779, -6.3185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-5.0356, -5.4001, -5.7270, -6.5959, -6.3550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-5.0820, -5.4316, -5.7721, -6.6074, -6.4029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8467, device='cuda:0', dtype=torch.float64)
tensor([-5.1258, -5.4612, -5.8094, -6.6299, -6.4491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0144, device='cuda:0', dtype=torch.float64)
tensor([-5.1831, -5.5011, -5.8577, -6.6712, -6.4883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2069, device='cuda:0', dtype=torch.float64)
tensor([-5.2333, -5.5368, -5.9438, -6.7189, -6.5253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8752, device='cuda:0', dtype=torch.float64)
tensor([-5.2817, -5.5745, -6.0280, -6.7738, -6.5513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8913, device='cuda:0', dtype=torch.float64)
tensor([-5.3172, -5.6055, -6.1117, -6.8207, -6.5808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8914, device='cuda:0', dtype=torch.float64)
tensor([-5.3566, -5.6274, -6.1911, -6.8401, -6.6039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8904, device='cuda:0', dtype=torch.float64)
tensor([-5.3903, -5.6457, -6.2720, -6.8429, -6.6287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8673, device='cuda:0', dtype=torch.float64)
tensor([-5.4228, -5.6570, -6.3433, -6.8239, -6.6460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9906, device='cuda:0', dtype=torch.float64)
tensor([-5.4503, -5.6642, -6.4064, -6.8064, -6.6623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0355, device='cuda:0', dtype=torch.float64)
tensor([-5.4826, -5.6673, -6.4631, -6.7949, -6.6839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8815, device='cuda:0', dtype=torch.float64)
tensor([-5.5288, -5.6743, -6.5295, -6.7853, -6.7094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8500, device='cuda:0', dtype=torch.float64)
tensor([-5.5761, -5.6785, -6.5754, -6.7573, -6.7323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8578, device='cuda:0', dtype=torch.float64)
tensor([-5.6239, -5.6915, -6.6150, -6.7305, -6.7593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8589, device='cuda:0', dtype=torch.float64)
tensor([-5.6599, -5.6993, -6.6404, -6.6985, -6.7791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-5.6902, -5.6985, -6.6611, -6.6570, -6.7992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8538, device='cuda:0', dtype=torch.float64)
tensor([-5.7191, -5.7001, -6.6843, -6.6269, -6.8167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7764, device='cuda:0', dtype=torch.float64)
tensor([-5.7648, -5.7016, -6.7055, -6.6134, -6.8323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0594, device='cuda:0', dtype=torch.float64)
tensor([-5.8158, -5.7137, -6.7238, -6.5962, -6.8511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9522, device='cuda:0', dtype=torch.float64)
tensor([-5.8759, -5.7309, -6.7601, -6.5867, -6.8799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0458, device='cuda:0', dtype=torch.float64)
tensor([-5.9367, -5.7452, -6.7877, -6.5842, -6.9071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9674, device='cuda:0', dtype=torch.float64)
tensor([-5.9903, -5.7524, -6.8126, -6.5883, -6.9336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8613, device='cuda:0', dtype=torch.float64)
tensor([-6.0468, -5.7578, -6.8439, -6.5934, -6.9559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9998, device='cuda:0', dtype=torch.float64)
tensor([-6.1168, -5.7662, -6.8992, -6.6066, -6.9761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9293, device='cuda:0', dtype=torch.float64)
tensor([-6.1911, -5.7875, -6.9485, -6.6046, -7.0117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7266, device='cuda:0', dtype=torch.float64)
tensor([-6.2661, -5.8099, -6.9990, -6.5977, -7.0472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8839, device='cuda:0', dtype=torch.float64)
tensor([-6.3509, -5.8376, -7.0513, -6.6047, -7.0787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8463, device='cuda:0', dtype=torch.float64)
tensor([-6.4249, -5.8662, -7.1016, -6.6146, -7.1110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9001, device='cuda:0', dtype=torch.float64)
tensor([-6.5215, -5.8994, -7.1493, -6.6297, -7.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6920, device='cuda:0', dtype=torch.float64)
tensor([-6.6201, -5.9338, -7.2005, -6.6478, -7.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8883, device='cuda:0', dtype=torch.float64)
tensor([-6.7409, -5.9757, -7.2687, -6.6910, -7.2150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8455, device='cuda:0', dtype=torch.float64)
tensor([-6.8762, -6.0248, -7.3419, -6.7583, -7.2577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8778, device='cuda:0', dtype=torch.float64)
tensor([-7.0044, -6.0754, -7.3746, -6.8130, -7.2962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8836, device='cuda:0', dtype=torch.float64)
tensor([-7.1261, -6.1261, -7.4303, -6.8970, -7.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9579, device='cuda:0', dtype=torch.float64)
tensor([-7.2519, -6.1833, -7.4914, -6.9882, -7.3892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7993, device='cuda:0', dtype=torch.float64)
tensor([-7.3569, -6.2410, -7.5546, -7.0806, -7.4443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8419, device='cuda:0', dtype=torch.float64)
tensor([-7.4542, -6.2868, -7.5814, -7.1780, -7.4883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0424, device='cuda:0', dtype=torch.float64)
tensor([-7.5401, -6.3341, -7.6081, -7.2939, -7.5322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9743, device='cuda:0', dtype=torch.float64)
tensor([-7.6108, -6.3840, -7.6557, -7.3864, -7.5793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9359, device='cuda:0', dtype=torch.float64)
tensor([-7.6881, -6.4310, -7.6687, -7.4589, -7.6353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8139, device='cuda:0', dtype=torch.float64)
tensor([-7.7429, -6.4673, -7.6859, -7.5149, -7.6949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9199, device='cuda:0', dtype=torch.float64)
tensor([-7.7902, -6.5075, -7.7040, -7.5861, -7.7509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0722, device='cuda:0', dtype=torch.float64)
tensor([-7.8388, -6.5476, -7.7335, -7.6630, -7.8101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0370, device='cuda:0', dtype=torch.float64)
tensor([-7.8965, -6.5989, -7.7825, -7.7446, -7.8878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8608, device='cuda:0', dtype=torch.float64)
tensor([-7.9501, -6.6412, -7.8262, -7.8353, -7.9551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0672, device='cuda:0', dtype=torch.float64)
tensor([-7.9994, -6.6943, -7.8851, -7.9499, -8.0164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9861, device='cuda:0', dtype=torch.float64)
tensor([-8.0511, -6.7489, -7.9601, -8.0398, -8.1016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0077, device='cuda:0', dtype=torch.float64)
tensor([-8.1113, -6.8075, -8.0336, -8.1585, -8.1889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9993, device='cuda:0', dtype=torch.float64)
tensor([-8.1697, -6.8661, -8.0930, -8.2861, -8.2690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9043, device='cuda:0', dtype=torch.float64)
tensor([-8.1981, -6.9290, -8.1686, -8.3955, -8.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8250, device='cuda:0', dtype=torch.float64)
tensor([-8.2244, -6.9902, -8.2305, -8.5092, -8.4327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9546, device='cuda:0', dtype=torch.float64)
tensor([-8.2654, -7.0566, -8.3094, -8.5814, -8.5149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1568, device='cuda:0', dtype=torch.float64)
tensor([-8.3028, -7.1143, -8.3826, -8.6094, -8.5961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9125, device='cuda:0', dtype=torch.float64)
tensor([-8.3280, -7.1654, -8.4085, -8.6339, -8.6798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7840, device='cuda:0', dtype=torch.float64)
tensor([-8.3538, -7.2123, -8.4596, -8.6437, -8.7663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9752, device='cuda:0', dtype=torch.float64)
tensor([-8.3777, -7.2605, -8.5224, -8.6857, -8.8572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8423, device='cuda:0', dtype=torch.float64)
tensor([-8.4165, -7.3081, -8.5800, -8.7045, -8.9528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9368, device='cuda:0', dtype=torch.float64)
tensor([-8.4586, -7.3599, -8.6449, -8.7288, -9.0600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8365, device='cuda:0', dtype=torch.float64)
tensor([-8.4857, -7.4066, -8.6729, -8.7638, -9.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9123, device='cuda:0', dtype=torch.float64)
tensor([-8.5019, -7.4621, -8.7038, -8.8212, -9.2700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8966, device='cuda:0', dtype=torch.float64)
tensor([-8.5269, -7.5150, -8.7481, -8.8800, -9.3694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8853, device='cuda:0', dtype=torch.float64)
tensor([-8.5495, -7.5603, -8.7950, -8.9287, -9.4872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8192, device='cuda:0', dtype=torch.float64)
tensor([-8.5543, -7.5906, -8.8290, -8.9623, -9.5948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9136, device='cuda:0', dtype=torch.float64)
tensor([-8.5488, -7.6275, -8.8389, -8.9919, -9.6921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8699, device='cuda:0', dtype=torch.float64)
tensor([-8.5389, -7.6568, -8.8312, -9.0054, -9.7883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0045, device='cuda:0', dtype=torch.float64)
tensor([-8.5284, -7.6864, -8.8284, -9.0414, -9.8521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8700, device='cuda:0', dtype=torch.float64)
tensor([-8.5123, -7.7079, -8.8260, -9.0914, -9.9166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7961, device='cuda:0', dtype=torch.float64)
tensor([-8.4907, -7.7209, -8.8382, -9.1244, -9.9707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8826, device='cuda:0', dtype=torch.float64)
tensor([ -8.4878,  -7.7455,  -8.8482,  -9.1375, -10.0159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7988, device='cuda:0', dtype=torch.float64)
tensor([ -8.5100,  -7.7677,  -8.8699,  -9.1595, -10.0774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8419, device='cuda:0', dtype=torch.float64)
tensor([ -8.5155,  -7.7926,  -8.8898,  -9.1896, -10.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8758, device='cuda:0', dtype=torch.float64)
tensor([ -8.5190,  -7.8106,  -8.9072,  -9.2036, -10.1834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9903, device='cuda:0', dtype=torch.float64)
tensor([ -8.5353,  -7.8285,  -8.9414,  -9.2261, -10.2286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9619, device='cuda:0', dtype=torch.float64)
tensor([ -8.5294,  -7.8403,  -8.9870,  -9.2499, -10.2422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7987, device='cuda:0', dtype=torch.float64)
tensor([ -8.5233,  -7.8497,  -9.0410,  -9.2770, -10.2651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9688, device='cuda:0', dtype=torch.float64)
tensor([ -8.5364,  -7.8792,  -9.1370,  -9.3207, -10.2835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9079, device='cuda:0', dtype=torch.float64)
tensor([ -8.5588,  -7.9138,  -9.1990,  -9.3489, -10.3071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9584, device='cuda:0', dtype=torch.float64)
tensor([ -8.5668,  -7.9423,  -9.2231,  -9.3569, -10.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9081, device='cuda:0', dtype=torch.float64)
tensor([ -8.5640,  -7.9752,  -9.2172,  -9.3843, -10.3354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8855, device='cuda:0', dtype=torch.float64)
tensor([ -8.5491,  -8.0061,  -9.2205,  -9.3943, -10.3547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8886, device='cuda:0', dtype=torch.float64)
tensor([ -8.5270,  -8.0455,  -9.2235,  -9.4156, -10.3624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1484, device='cuda:0', dtype=torch.float64)
tensor([ -8.5280,  -8.0753,  -9.1818,  -9.4121, -10.3793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8487, device='cuda:0', dtype=torch.float64)
tensor([ -8.5488,  -8.1051,  -9.1159,  -9.4017, -10.4261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9572, device='cuda:0', dtype=torch.float64)
tensor([ -8.5588,  -8.1365,  -9.0642,  -9.3928, -10.4728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8341, device='cuda:0', dtype=torch.float64)
tensor([ -8.5650,  -8.1614,  -8.9971,  -9.3782, -10.5064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9157, device='cuda:0', dtype=torch.float64)
tensor([ -8.5684,  -8.1840,  -8.9503,  -9.3744, -10.5319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7825, device='cuda:0', dtype=torch.float64)
tensor([ -8.5626,  -8.1953,  -8.9235,  -9.3861, -10.5314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8139, device='cuda:0', dtype=torch.float64)
tensor([ -8.5526,  -8.2121,  -8.9189,  -9.4030, -10.5554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9883, device='cuda:0', dtype=torch.float64)
tensor([ -8.5390,  -8.2367,  -8.9153,  -9.4137, -10.5751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0797, device='cuda:0', dtype=torch.float64)
tensor([ -8.5404,  -8.2707,  -8.9250,  -9.4282, -10.5988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9345, device='cuda:0', dtype=torch.float64)
tensor([ -8.5458,  -8.3162,  -8.9744,  -9.4669, -10.6398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9692, device='cuda:0', dtype=torch.float64)
tensor([ -8.5681,  -8.3470,  -9.0421,  -9.4405, -10.6981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9897, device='cuda:0', dtype=torch.float64)
tensor([ -8.5842,  -8.3657,  -9.0828,  -9.4419, -10.7526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9989, device='cuda:0', dtype=torch.float64)
tensor([ -8.5945,  -8.3795,  -9.1221,  -9.4504, -10.8048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9952, device='cuda:0', dtype=torch.float64)
tensor([ -8.6119,  -8.3845,  -9.1673,  -9.4448, -10.8564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0462, device='cuda:0', dtype=torch.float64)
tensor([ -8.6311,  -8.3935,  -9.1848,  -9.4736, -10.9229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9656, device='cuda:0', dtype=torch.float64)
tensor([ -8.6462,  -8.3851,  -9.2003,  -9.4561, -11.0010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9480, device='cuda:0', dtype=torch.float64)
tensor([ -8.6637,  -8.3843,  -9.2424,  -9.4376, -11.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8440, device='cuda:0', dtype=torch.float64)
tensor([ -8.6745,  -8.3915,  -9.2841,  -9.4143, -11.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8947, device='cuda:0', dtype=torch.float64)
tensor([ -8.6848,  -8.4048,  -9.3374,  -9.4018, -11.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8751, device='cuda:0', dtype=torch.float64)
tensor([ -8.7073,  -8.4153,  -9.4100,  -9.3904, -11.2659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0392, device='cuda:0', dtype=torch.float64)
tensor([ -8.6979,  -8.4344,  -9.4547,  -9.4033, -11.2752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8130, device='cuda:0', dtype=torch.float64)
tensor([ -8.6991,  -8.4684,  -9.5170,  -9.4258, -11.2866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9621, device='cuda:0', dtype=torch.float64)
tensor([ -8.6855,  -8.5019,  -9.5818,  -9.4845, -11.3042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9556, device='cuda:0', dtype=torch.float64)
tensor([ -8.6805,  -8.5237,  -9.6227,  -9.5355, -11.3163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0686, device='cuda:0', dtype=torch.float64)
tensor([ -8.6629,  -8.5406,  -9.6226,  -9.5764, -11.3129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9756, device='cuda:0', dtype=torch.float64)
tensor([ -8.6434,  -8.5625,  -9.6411,  -9.5810, -11.3179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7918, device='cuda:0', dtype=torch.float64)
tensor([ -8.6244,  -8.5882,  -9.6496,  -9.6115, -11.3341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8728, device='cuda:0', dtype=torch.float64)
tensor([ -8.6183,  -8.6215,  -9.6643,  -9.6508, -11.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9389, device='cuda:0', dtype=torch.float64)
tensor([ -8.6350,  -8.6494,  -9.6915,  -9.6743, -11.3430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0795, device='cuda:0', dtype=torch.float64)
tensor([ -8.6682,  -8.6775,  -9.6961,  -9.6874, -11.3481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9018, device='cuda:0', dtype=torch.float64)
tensor([ -8.7005,  -8.7021,  -9.6882,  -9.7009, -11.3586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0199, device='cuda:0', dtype=torch.float64)
tensor([ -8.7406,  -8.7300,  -9.6387,  -9.6997, -11.3680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0074, device='cuda:0', dtype=torch.float64)
tensor([ -8.7531,  -8.7491,  -9.5490,  -9.7004, -11.4068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8622, device='cuda:0', dtype=torch.float64)
tensor([ -8.7654,  -8.7605,  -9.4404,  -9.7075, -11.4462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9144, device='cuda:0', dtype=torch.float64)
tensor([ -8.7719,  -8.7537,  -9.3194,  -9.6865, -11.4680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8018, device='cuda:0', dtype=torch.float64)
tensor([ -8.7827,  -8.7440,  -9.2369,  -9.6766, -11.4970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9117, device='cuda:0', dtype=torch.float64)
tensor([ -8.8132,  -8.7390,  -9.1748,  -9.6623, -11.5468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9067, device='cuda:0', dtype=torch.float64)
tensor([ -8.8429,  -8.7204,  -9.1220,  -9.6331, -11.5692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8927, device='cuda:0', dtype=torch.float64)
tensor([ -8.8797,  -8.6988,  -9.0866,  -9.5930, -11.6003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9977, device='cuda:0', dtype=torch.float64)
tensor([ -8.9217,  -8.6694,  -9.0506,  -9.5388, -11.6565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9042, device='cuda:0', dtype=torch.float64)
tensor([ -8.9685,  -8.6527,  -9.0669,  -9.4970, -11.7090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9454, device='cuda:0', dtype=torch.float64)
tensor([ -9.0233,  -8.6404,  -9.1087,  -9.4638, -11.7620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0763, device='cuda:0', dtype=torch.float64)
tensor([ -9.0935,  -8.6203,  -9.1614,  -9.4107, -11.8073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7037, device='cuda:0', dtype=torch.float64)
tensor([ -9.1623,  -8.5955,  -9.1812,  -9.3623, -11.8469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8596, device='cuda:0', dtype=torch.float64)
tensor([ -9.2375,  -8.5857,  -9.1812,  -9.3108, -11.8894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8138, device='cuda:0', dtype=torch.float64)
tensor([ -9.3116,  -8.5903,  -9.1951,  -9.2664, -11.9333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8601, device='cuda:0', dtype=torch.float64)
tensor([ -9.3784,  -8.5840,  -9.2053,  -9.2352, -11.9706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8241, device='cuda:0', dtype=torch.float64)
tensor([ -9.4535,  -8.5947,  -9.2181,  -9.2348, -12.0263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9117, device='cuda:0', dtype=torch.float64)
tensor([ -9.5395,  -8.6112,  -9.2722,  -9.2250, -12.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7888, device='cuda:0', dtype=torch.float64)
tensor([ -9.6124,  -8.6208,  -9.3085,  -9.2108, -12.1999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0395, device='cuda:0', dtype=torch.float64)
tensor([ -9.6653,  -8.6322,  -9.3653,  -9.2022, -12.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8856, device='cuda:0', dtype=torch.float64)
tensor([ -9.7230,  -8.6331,  -9.3942,  -9.1886, -12.3278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8378, device='cuda:0', dtype=torch.float64)
tensor([ -9.8001,  -8.6402,  -9.4494,  -9.2153, -12.3928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9653, device='cuda:0', dtype=torch.float64)
tensor([ -9.8650,  -8.6567,  -9.5149,  -9.2378, -12.4929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8355, device='cuda:0', dtype=torch.float64)
tensor([ -9.9260,  -8.6868,  -9.5840,  -9.2616, -12.6147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9978, device='cuda:0', dtype=torch.float64)
tensor([ -9.9595,  -8.7227,  -9.6347,  -9.3014, -12.7454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8661, device='cuda:0', dtype=torch.float64)
tensor([ -9.9809,  -8.7469,  -9.6710,  -9.3439, -12.9148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9526, device='cuda:0', dtype=torch.float64)
tensor([ -9.9839,  -8.7779,  -9.7405,  -9.3540, -13.0970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([ -9.9628,  -8.8021,  -9.7734,  -9.3780, -13.2564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9197, device='cuda:0', dtype=torch.float64)
tensor([ -9.9362,  -8.8401,  -9.8533,  -9.4126, -13.4045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9124, device='cuda:0', dtype=torch.float64)
tensor([ -9.9084,  -8.8757,  -9.9275,  -9.4416, -13.5560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9645, device='cuda:0', dtype=torch.float64)
tensor([ -9.9072,  -8.9166,  -9.9873,  -9.4444, -13.6992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8772, device='cuda:0', dtype=torch.float64)
tensor([ -9.9232,  -8.9534, -10.0779,  -9.4440, -13.8286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8882, device='cuda:0', dtype=torch.float64)
tensor([ -9.9412,  -8.9940, -10.1618,  -9.4779, -13.9089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8895, device='cuda:0', dtype=torch.float64)
tensor([ -9.9637,  -9.0230, -10.2595,  -9.5033, -13.9859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0398, device='cuda:0', dtype=torch.float64)
tensor([ -9.9975,  -9.0757, -10.3618,  -9.5341, -14.0701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([-10.0234,  -9.1141, -10.4585,  -9.5485, -14.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8857, device='cuda:0', dtype=torch.float64)
tensor([-10.0478,  -9.1652, -10.5525,  -9.5658, -14.2486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8074, device='cuda:0', dtype=torch.float64)
tensor([-10.0741,  -9.2130, -10.6676,  -9.5971, -14.3301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0421, device='cuda:0', dtype=torch.float64)
tensor([-10.0982,  -9.2447, -10.8018,  -9.6511, -14.4252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7428, device='cuda:0', dtype=torch.float64)
tensor([-10.1363,  -9.2678, -10.9512,  -9.6735, -14.5342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8875, device='cuda:0', dtype=torch.float64)
tensor([-10.1516,  -9.2977, -11.1113,  -9.7109, -14.6481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9552, device='cuda:0', dtype=torch.float64)
tensor([-10.1712,  -9.3247, -11.2430,  -9.7432, -14.7332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7555, device='cuda:0', dtype=torch.float64)
tensor([-10.1981,  -9.3667, -11.3737,  -9.7884, -14.8468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2888, device='cuda:0', dtype=torch.float64)
tensor([-10.2207,  -9.4169, -11.5043,  -9.8358, -14.9120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9696, device='cuda:0', dtype=torch.float64)
tensor([-10.2458,  -9.4639, -11.6224,  -9.8692, -14.9935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8027, device='cuda:0', dtype=torch.float64)
tensor([-10.2534,  -9.5127, -11.7224,  -9.9031, -15.0604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8939, device='cuda:0', dtype=torch.float64)
tensor([-10.2462,  -9.5465, -11.8164,  -9.9681, -15.1182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9964, device='cuda:0', dtype=torch.float64)
tensor([-10.2379,  -9.5588, -11.9108,  -9.9987, -15.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8484, device='cuda:0', dtype=torch.float64)
tensor([-10.2192,  -9.5805, -12.0227, -10.0234, -15.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9516, device='cuda:0', dtype=torch.float64)
tensor([-10.2074,  -9.6050, -12.1218, -10.0509, -15.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8682, device='cuda:0', dtype=torch.float64)
tensor([-10.2051,  -9.6325, -12.2082, -10.0774, -15.3064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9673, device='cuda:0', dtype=torch.float64)
tensor([-10.2149,  -9.6495, -12.3081, -10.0906, -15.3529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0055, device='cuda:0', dtype=torch.float64)
tensor([-10.2274,  -9.6651, -12.4190, -10.0926, -15.4277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1744, device='cuda:0', dtype=torch.float64)
tensor([-10.2574,  -9.6777, -12.5244, -10.0968, -15.5491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8514, device='cuda:0', dtype=torch.float64)
tensor([-10.2741,  -9.6928, -12.6183, -10.0846, -15.6893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8212, device='cuda:0', dtype=torch.float64)
tensor([-10.2990,  -9.7267, -12.7412, -10.0811, -15.8559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9517, device='cuda:0', dtype=torch.float64)
tensor([-10.3161,  -9.7396, -12.8572, -10.0617, -16.0188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9672, device='cuda:0', dtype=torch.float64)
tensor([-10.3290,  -9.7513, -12.9921, -10.0387, -16.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8202, device='cuda:0', dtype=torch.float64)
tensor([-10.3401,  -9.7695, -13.1133, -10.0105, -16.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7569, device='cuda:0', dtype=torch.float64)
tensor([-10.3250,  -9.7750, -13.2459,  -9.9849, -16.3810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8109, device='cuda:0', dtype=torch.float64)
tensor([-10.3192,  -9.7979, -13.3923,  -9.9652, -16.4751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9919, device='cuda:0', dtype=torch.float64)
tensor([-10.3010,  -9.8113, -13.4984,  -9.9371, -16.5694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9407, device='cuda:0', dtype=torch.float64)
tensor([-10.2833,  -9.8250, -13.5949,  -9.8989, -16.5711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9649, device='cuda:0', dtype=torch.float64)
tensor([-10.2778,  -9.8321, -13.6676,  -9.8598, -16.5920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9012, device='cuda:0', dtype=torch.float64)
tensor([-10.2663,  -9.8230, -13.7440,  -9.8253, -16.5961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0127, device='cuda:0', dtype=torch.float64)
tensor([-10.2615,  -9.8220, -13.7836,  -9.7901, -16.5967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8346, device='cuda:0', dtype=torch.float64)
tensor([-10.2550,  -9.8235, -13.8244,  -9.7653, -16.6102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8536, device='cuda:0', dtype=torch.float64)
tensor([-10.2627,  -9.8354, -13.8687,  -9.7620, -16.6564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9630, device='cuda:0', dtype=torch.float64)
tensor([-10.2524,  -9.8399, -13.9194,  -9.7433, -16.7022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9800, device='cuda:0', dtype=torch.float64)
tensor([-10.2452,  -9.8553, -14.0028,  -9.7445, -16.7171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8866, device='cuda:0', dtype=torch.float64)
tensor([-10.2282,  -9.8835, -14.0546,  -9.7524, -16.7114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8160, device='cuda:0', dtype=torch.float64)
tensor([-10.2302,  -9.9135, -14.1248,  -9.7697, -16.7104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9200, device='cuda:0', dtype=torch.float64)
tensor([-10.2133,  -9.9425, -14.1695,  -9.7714, -16.7081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9836, device='cuda:0', dtype=torch.float64)
tensor([-10.1985,  -9.9711, -14.2240,  -9.7703, -16.7138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1141, device='cuda:0', dtype=torch.float64)
tensor([-10.1921, -10.0059, -14.3009,  -9.7927, -16.7684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7579, device='cuda:0', dtype=torch.float64)
tensor([-10.2138, -10.0478, -14.4137,  -9.8085, -16.8629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9688, device='cuda:0', dtype=torch.float64)
tensor([-10.2385, -10.0830, -14.5451,  -9.8360, -16.9273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9139, device='cuda:0', dtype=torch.float64)
tensor([-10.2658, -10.1285, -14.7039,  -9.8466, -16.9751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9169, device='cuda:0', dtype=torch.float64)
tensor([-10.2931, -10.1665, -14.8902,  -9.8806, -16.9877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8629, device='cuda:0', dtype=torch.float64)
tensor([-10.3174, -10.2110, -15.0567,  -9.9303, -17.0121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8798, device='cuda:0', dtype=torch.float64)
tensor([-10.3272, -10.2611, -15.2441,  -9.9944, -17.0378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8386, device='cuda:0', dtype=torch.float64)
tensor([-10.3352, -10.3011, -15.4121, -10.0698, -17.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8166, device='cuda:0', dtype=torch.float64)
tensor([-10.3598, -10.3483, -15.6336, -10.1409, -17.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8227, device='cuda:0', dtype=torch.float64)
tensor([-10.3981, -10.3888, -15.8151, -10.1999, -17.2238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9084, device='cuda:0', dtype=torch.float64)
tensor([-10.4218, -10.4279, -15.9764, -10.2580, -17.2654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9756, device='cuda:0', dtype=torch.float64)
tensor([-10.4642, -10.4826, -16.1797, -10.3045, -17.3115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8697, device='cuda:0', dtype=torch.float64)
tensor([-10.5035, -10.5304, -16.3739, -10.3693, -17.3413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9615, device='cuda:0', dtype=torch.float64)
tensor([-10.5419, -10.5791, -16.5613, -10.4344, -17.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8402, device='cuda:0', dtype=torch.float64)
tensor([-10.5659, -10.6118, -16.7151, -10.4897, -17.3751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9334, device='cuda:0', dtype=torch.float64)
tensor([-10.6038, -10.6540, -16.8643, -10.5446, -17.3626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9122, device='cuda:0', dtype=torch.float64)
tensor([-10.6492, -10.7027, -16.9913, -10.6072, -17.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8929, device='cuda:0', dtype=torch.float64)
tensor([-10.6973, -10.7535, -17.1198, -10.6736, -17.3676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8803, device='cuda:0', dtype=torch.float64)
tensor([-10.7376, -10.7861, -17.2671, -10.7286, -17.3669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9233, device='cuda:0', dtype=torch.float64)
tensor([-10.7600, -10.8209, -17.3916, -10.7822, -17.3914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8320, device='cuda:0', dtype=torch.float64)
tensor([-10.7965, -10.8842, -17.5365, -10.8397, -17.4376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7914, device='cuda:0', dtype=torch.float64)
tensor([-10.8666, -10.9559, -17.7111, -10.9210, -17.5357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9074, device='cuda:0', dtype=torch.float64)
tensor([-10.9430, -11.0421, -17.8801, -11.0330, -17.6260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8901, device='cuda:0', dtype=torch.float64)
tensor([-11.0081, -11.1088, -18.0073, -11.0972, -17.6984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9370, device='cuda:0', dtype=torch.float64)
tensor([-11.0733, -11.1809, -18.0968, -11.1685, -17.7646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-11.1243, -11.2568, -18.1392, -11.2357, -17.8016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8744, device='cuda:0', dtype=torch.float64)
tensor([-11.1623, -11.3196, -18.1843, -11.2748, -17.8441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0327, device='cuda:0', dtype=torch.float64)
tensor([-11.2189, -11.3777, -18.2324, -11.3052, -17.8648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9672, device='cuda:0', dtype=torch.float64)
tensor([-11.2651, -11.4579, -18.2892, -11.3507, -17.9007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8390, device='cuda:0', dtype=torch.float64)
tensor([-11.3159, -11.5390, -18.3788, -11.4155, -17.9615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8552, device='cuda:0', dtype=torch.float64)
tensor([-11.3840, -11.6247, -18.5210, -11.4839, -18.0613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9789, device='cuda:0', dtype=torch.float64)
tensor([-11.4547, -11.7181, -18.6344, -11.5499, -18.1881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9879, device='cuda:0', dtype=torch.float64)
tensor([-11.5179, -11.7952, -18.7248, -11.5784, -18.2825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9576, device='cuda:0', dtype=torch.float64)
tensor([-11.5724, -11.8727, -18.7844, -11.6382, -18.3539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0444, device='cuda:0', dtype=torch.float64)
tensor([-11.6286, -11.9357, -18.8153, -11.6732, -18.4246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0314, device='cuda:0', dtype=torch.float64)
tensor([-11.6523, -12.0027, -18.7957, -11.7286, -18.4849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7489, device='cuda:0', dtype=torch.float64)
tensor([-11.6681, -12.0549, -18.7539, -11.7532, -18.5350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9282, device='cuda:0', dtype=torch.float64)
tensor([-11.7029, -12.1152, -18.7155, -11.8093, -18.5506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9357, device='cuda:0', dtype=torch.float64)
tensor([-11.7298, -12.1675, -18.6742, -11.8502, -18.5866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1382, device='cuda:0', dtype=torch.float64)
tensor([-11.7300, -12.2021, -18.6271, -11.8671, -18.6307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9700, device='cuda:0', dtype=torch.float64)
tensor([-11.7168, -12.2343, -18.5580, -11.8804, -18.6932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8904, device='cuda:0', dtype=torch.float64)
tensor([-11.6830, -12.2641, -18.4860, -11.8929, -18.7819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8152, device='cuda:0', dtype=torch.float64)
tensor([-11.6467, -12.3029, -18.4836, -11.9235, -18.8897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9375, device='cuda:0', dtype=torch.float64)
tensor([-11.5817, -12.3082, -18.3898, -11.9337, -18.9451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8843, device='cuda:0', dtype=torch.float64)
tensor([-11.5108, -12.3019, -18.2682, -11.9351, -19.0054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9088, device='cuda:0', dtype=torch.float64)
tensor([-11.4485, -12.3245, -18.1560, -11.9490, -19.0377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0072, device='cuda:0', dtype=torch.float64)
tensor([-11.3945, -12.3434, -18.0905, -11.9212, -19.0509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8634, device='cuda:0', dtype=torch.float64)
tensor([-11.3621, -12.3639, -18.0428, -11.9150, -19.0795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0600, device='cuda:0', dtype=torch.float64)
tensor([-11.3527, -12.4081, -18.0570, -11.9551, -19.1108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8508, device='cuda:0', dtype=torch.float64)
tensor([-11.3481, -12.4441, -18.0488, -11.9893, -19.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8726, device='cuda:0', dtype=torch.float64)
tensor([-11.3538, -12.5013, -18.0669, -12.0347, -19.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7867, device='cuda:0', dtype=torch.float64)
tensor([-11.3615, -12.5510, -18.0777, -12.0891, -19.2141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9250, device='cuda:0', dtype=torch.float64)
tensor([-11.3863, -12.6042, -18.1800, -12.1574, -19.2552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9154, device='cuda:0', dtype=torch.float64)
tensor([-11.3987, -12.6469, -18.2695, -12.2448, -19.2814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7385, device='cuda:0', dtype=torch.float64)
tensor([-11.4148, -12.6836, -18.3399, -12.3170, -19.3010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8403, device='cuda:0', dtype=torch.float64)
tensor([-11.4207, -12.7037, -18.4173, -12.3631, -19.3203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8845, device='cuda:0', dtype=torch.float64)
tensor([-11.4511, -12.7286, -18.5371, -12.4525, -19.3449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7684, device='cuda:0', dtype=torch.float64)
tensor([-11.4973, -12.7692, -18.6187, -12.5438, -19.3962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0941, device='cuda:0', dtype=torch.float64)
tensor([-11.5181, -12.8270, -18.7059, -12.6260, -19.4175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8488, device='cuda:0', dtype=torch.float64)
tensor([-11.5452, -12.8804, -18.7556, -12.6785, -19.4435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0059, device='cuda:0', dtype=torch.float64)
tensor([-11.5994, -12.9215, -18.8215, -12.6948, -19.4644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8658, device='cuda:0', dtype=torch.float64)
tensor([-11.6562, -12.9428, -18.9289, -12.7005, -19.4495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8763, device='cuda:0', dtype=torch.float64)
tensor([-11.7140, -12.9165, -18.9762, -12.6749, -19.4476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9564, device='cuda:0', dtype=torch.float64)
tensor([-11.7813, -12.9115, -19.0446, -12.6418, -19.4460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9021, device='cuda:0', dtype=torch.float64)
tensor([-11.8649, -12.8985, -19.1611, -12.6399, -19.4642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9993, device='cuda:0', dtype=torch.float64)
tensor([-11.9397, -12.8824, -19.2049, -12.6017, -19.5010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8105, device='cuda:0', dtype=torch.float64)
tensor([-12.0143, -12.8579, -19.2282, -12.5632, -19.5589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8205, device='cuda:0', dtype=torch.float64)
tensor([-12.0734, -12.8435, -19.2290, -12.5245, -19.6286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8413, device='cuda:0', dtype=torch.float64)
tensor([-12.1000, -12.8460, -19.1915, -12.4996, -19.6776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8731, device='cuda:0', dtype=torch.float64)
tensor([-12.1169, -12.8688, -19.1660, -12.4685, -19.7686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8513, device='cuda:0', dtype=torch.float64)
tensor([-12.1599, -12.9003, -19.1682, -12.4597, -19.8423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0349, device='cuda:0', dtype=torch.float64)
tensor([-12.1954, -12.9109, -19.1516, -12.4550, -19.8733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8989, device='cuda:0', dtype=torch.float64)
tensor([-12.2133, -12.9137, -19.0651, -12.4278, -19.9354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8972, device='cuda:0', dtype=torch.float64)
tensor([-12.2422, -12.9256, -18.9769, -12.3796, -19.9469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9844, device='cuda:0', dtype=torch.float64)
tensor([-12.2684, -12.9543, -18.9141, -12.3753, -19.9973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8472, device='cuda:0', dtype=torch.float64)
tensor([-12.2765, -12.9781, -18.8560, -12.3879, -20.0463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8937, device='cuda:0', dtype=torch.float64)
tensor([-12.2552, -13.0088, -18.8044, -12.3851, -20.0782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9148, device='cuda:0', dtype=torch.float64)
tensor([-12.2590, -13.0306, -18.7775, -12.3927, -20.0952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8414, device='cuda:0', dtype=torch.float64)
tensor([-12.2947, -13.0863, -18.8099, -12.4409, -20.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1993, device='cuda:0', dtype=torch.float64)
tensor([-12.3446, -13.1259, -18.8210, -12.4932, -20.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9176, device='cuda:0', dtype=torch.float64)
tensor([-12.4046, -13.1792, -18.9078, -12.5442, -20.2675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9043, device='cuda:0', dtype=torch.float64)
tensor([-12.4741, -13.2891, -18.9777, -12.6144, -20.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9266, device='cuda:0', dtype=torch.float64)
tensor([-12.5461, -13.4213, -19.0802, -12.7038, -20.4939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9707, device='cuda:0', dtype=torch.float64)
tensor([-12.6024, -13.5586, -19.1477, -12.8307, -20.5779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7689, device='cuda:0', dtype=torch.float64)
tensor([-12.6478, -13.7136, -19.2588, -12.9528, -20.6753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9038, device='cuda:0', dtype=torch.float64)
tensor([-12.6843, -13.8248, -19.3152, -13.0468, -20.7011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8656, device='cuda:0', dtype=torch.float64)
tensor([-12.7039, -13.9192, -19.3408, -13.1039, -20.7074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9213, device='cuda:0', dtype=torch.float64)
tensor([-12.6974, -13.9847, -19.3311, -13.1571, -20.7098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0069, device='cuda:0', dtype=torch.float64)
tensor([-12.6848, -14.0556, -19.2996, -13.1990, -20.7319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9382, device='cuda:0', dtype=torch.float64)
tensor([-12.6743, -14.1262, -19.2883, -13.2681, -20.7184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9123, device='cuda:0', dtype=torch.float64)
tensor([-12.6543, -14.2083, -19.2862, -13.3171, -20.7193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8760, device='cuda:0', dtype=torch.float64)
tensor([-12.6409, -14.2476, -19.2616, -13.3481, -20.7110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8810, device='cuda:0', dtype=torch.float64)
tensor([-12.5878, -14.2876, -19.2399, -13.3566, -20.7007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9652, device='cuda:0', dtype=torch.float64)
tensor([-12.5458, -14.3563, -19.1824, -13.3786, -20.6815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9026, device='cuda:0', dtype=torch.float64)
tensor([-12.5079, -14.4493, -19.1448, -13.3995, -20.7140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9877, device='cuda:0', dtype=torch.float64)
tensor([-12.4756, -14.5057, -19.1171, -13.3803, -20.7031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9609, device='cuda:0', dtype=torch.float64)
tensor([-12.4790, -14.5579, -19.1274, -13.3681, -20.6698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0960, device='cuda:0', dtype=torch.float64)
tensor([-12.4815, -14.5965, -19.1906, -13.3419, -20.6748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0465, device='cuda:0', dtype=torch.float64)
tensor([-12.4930, -14.6239, -19.2704, -13.3206, -20.6533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9370, device='cuda:0', dtype=torch.float64)
tensor([-12.4930, -14.6224, -19.2457, -13.2748, -20.5574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9014, device='cuda:0', dtype=torch.float64)
tensor([-12.4955, -14.6282, -19.2842, -13.2695, -20.4980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8368, device='cuda:0', dtype=torch.float64)
tensor([-12.5080, -14.6297, -19.2569, -13.2541, -20.4311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9055, device='cuda:0', dtype=torch.float64)
tensor([-12.5002, -14.6048, -19.2288, -13.2456, -20.3315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9337, device='cuda:0', dtype=torch.float64)
tensor([-12.4851, -14.5933, -19.1817, -13.2560, -20.2099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1498, device='cuda:0', dtype=torch.float64)
tensor([-12.4614, -14.5782, -19.1111, -13.2502, -20.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8293, device='cuda:0', dtype=torch.float64)
tensor([-12.4370, -14.5456, -19.0554, -13.2149, -20.1264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8093, device='cuda:0', dtype=torch.float64)
tensor([-12.4318, -14.5582, -19.0253, -13.2028, -20.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0551, device='cuda:0', dtype=torch.float64)
tensor([-12.4445, -14.5720, -19.0282, -13.1948, -20.1972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9238, device='cuda:0', dtype=torch.float64)
tensor([-12.4951, -14.6357, -19.0683, -13.2436, -20.2208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8826, device='cuda:0', dtype=torch.float64)
tensor([-12.5774, -14.6798, -19.1251, -13.2915, -20.2593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8756, device='cuda:0', dtype=torch.float64)
tensor([-12.6653, -14.7553, -19.1591, -13.3770, -20.2756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8946, device='cuda:0', dtype=torch.float64)
tensor([-12.7740, -14.8728, -19.2473, -13.5123, -20.2786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8957, device='cuda:0', dtype=torch.float64)
tensor([-12.8671, -14.9845, -19.2790, -13.6297, -20.2546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7938, device='cuda:0', dtype=torch.float64)
tensor([-12.9386, -15.0674, -19.3179, -13.7362, -20.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8367, device='cuda:0', dtype=torch.float64)
tensor([-12.9891, -15.1551, -19.3726, -13.8615, -20.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8132, device='cuda:0', dtype=torch.float64)
tensor([-13.0136, -15.2155, -19.3998, -13.9567, -20.2975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7773, device='cuda:0', dtype=torch.float64)
tensor([-13.0265, -15.2742, -19.4369, -14.0469, -20.3117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8441, device='cuda:0', dtype=torch.float64)
tensor([-13.0402, -15.2909, -19.4738, -14.0880, -20.3282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0391, device='cuda:0', dtype=torch.float64)
tensor([-13.0566, -15.3029, -19.5587, -14.1036, -20.3959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8539, device='cuda:0', dtype=torch.float64)
tensor([-13.1072, -15.3415, -19.6863, -14.1313, -20.4867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8292, device='cuda:0', dtype=torch.float64)
tensor([-13.1608, -15.3595, -19.7963, -14.1351, -20.5780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9834, device='cuda:0', dtype=torch.float64)
tensor([-13.2440, -15.4005, -19.9097, -14.1367, -20.7049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9411, device='cuda:0', dtype=torch.float64)
tensor([-13.3257, -15.4389, -20.0766, -14.1458, -20.7914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9996, device='cuda:0', dtype=torch.float64)
tensor([-13.3712, -15.4398, -20.2022, -14.1369, -20.8618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8579, device='cuda:0', dtype=torch.float64)
tensor([-13.3985, -15.4302, -20.3169, -14.1389, -20.9023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9124, device='cuda:0', dtype=torch.float64)
tensor([-13.4264, -15.4302, -20.4059, -14.1494, -20.9198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8861, device='cuda:0', dtype=torch.float64)
tensor([-13.4360, -15.4102, -20.4676, -14.1341, -20.9234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0002, device='cuda:0', dtype=torch.float64)
tensor([-13.4379, -15.4435, -20.6865, -14.1549, -20.9345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9942, device='cuda:0', dtype=torch.float64)
tensor([-13.4367, -15.4787, -20.8251, -14.1609, -20.9584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8658, device='cuda:0', dtype=torch.float64)
tensor([-13.4522, -15.5435, -20.9883, -14.1761, -21.0390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8247, device='cuda:0', dtype=torch.float64)
tensor([-13.4691, -15.6213, -21.1100, -14.1905, -21.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0395, device='cuda:0', dtype=torch.float64)
tensor([-13.5001, -15.7157, -21.2190, -14.1715, -21.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9062, device='cuda:0', dtype=torch.float64)
tensor([-13.5276, -15.7985, -21.3579, -14.1456, -21.1935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8719, device='cuda:0', dtype=torch.float64)
tensor([-13.5550, -15.8624, -21.5231, -14.1034, -21.2260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0453, device='cuda:0', dtype=torch.float64)
tensor([-13.5579, -15.9211, -21.6903, -14.0842, -21.2897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0072, device='cuda:0', dtype=torch.float64)
tensor([-13.5509, -15.9382, -21.8903, -14.0577, -21.3005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9982, device='cuda:0', dtype=torch.float64)
tensor([-13.5458, -15.9817, -22.0653, -14.0516, -21.3054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0010, device='cuda:0', dtype=torch.float64)
tensor([-13.5282, -15.9716, -22.1723, -14.0403, -21.3644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1057, device='cuda:0', dtype=torch.float64)
tensor([-13.5394, -15.9986, -22.3019, -14.0723, -21.3888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1030, device='cuda:0', dtype=torch.float64)
tensor([-13.5918, -16.0100, -22.4871, -14.1108, -21.3872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8245, device='cuda:0', dtype=torch.float64)
tensor([-13.6649, -16.0123, -22.6617, -14.1197, -21.4065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0229, device='cuda:0', dtype=torch.float64)
tensor([-13.7499, -16.0064, -22.8730, -14.1210, -21.4318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8587, device='cuda:0', dtype=torch.float64)
tensor([-13.8291, -16.0346, -23.1143, -14.1335, -21.4818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9413, device='cuda:0', dtype=torch.float64)
tensor([-13.9281, -16.0917, -23.3099, -14.1599, -21.4869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8378, device='cuda:0', dtype=torch.float64)
tensor([-14.0319, -16.1724, -23.6142, -14.2054, -21.4908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0007, device='cuda:0', dtype=torch.float64)
tensor([-14.1113, -16.2649, -23.8987, -14.2549, -21.5227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9672, device='cuda:0', dtype=torch.float64)
tensor([-14.2162, -16.3685, -24.2746, -14.3241, -21.5310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8017, device='cuda:0', dtype=torch.float64)
tensor([-14.3201, -16.4739, -24.6473, -14.3926, -21.5099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8851, device='cuda:0', dtype=torch.float64)
tensor([-14.3956, -16.6157, -24.9742, -14.4751, -21.5055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9663, device='cuda:0', dtype=torch.float64)
tensor([-14.4501, -16.7745, -25.3263, -14.5724, -21.5412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9287, device='cuda:0', dtype=torch.float64)
tensor([-14.5169, -16.9440, -25.6900, -14.6679, -21.5819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8302, device='cuda:0', dtype=torch.float64)
tensor([-14.5882, -17.0925, -26.0027, -14.7423, -21.5732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8570, device='cuda:0', dtype=torch.float64)
tensor([-14.6611, -17.2572, -26.2945, -14.8594, -21.5592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9635, device='cuda:0', dtype=torch.float64)
tensor([-14.7176, -17.3651, -26.5130, -14.9559, -21.5116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8606, device='cuda:0', dtype=torch.float64)
tensor([-14.7796, -17.4996, -26.6674, -15.0599, -21.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7737, device='cuda:0', dtype=torch.float64)
tensor([-14.8487, -17.5884, -26.8386, -15.1410, -21.4726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8358, device='cuda:0', dtype=torch.float64)
tensor([-14.9011, -17.6432, -26.9756, -15.2056, -21.4498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8217, device='cuda:0', dtype=torch.float64)
tensor([-14.9334, -17.6649, -27.0513, -15.2587, -21.4131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9303, device='cuda:0', dtype=torch.float64)
tensor([-14.9932, -17.7087, -27.0479, -15.2912, -21.4051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7810, device='cuda:0', dtype=torch.float64)
tensor([-15.0415, -17.7960, -27.0724, -15.3163, -21.4267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8799, device='cuda:0', dtype=torch.float64)
tensor([-15.0624, -17.8713, -27.1344, -15.3294, -21.4467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9090, device='cuda:0', dtype=torch.float64)
tensor([-15.0784, -17.9745, -27.2422, -15.3699, -21.4793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8709, device='cuda:0', dtype=torch.float64)
tensor([-15.1171, -18.0173, -27.3654, -15.3841, -21.4986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0077, device='cuda:0', dtype=torch.float64)
tensor([-15.1375, -18.0599, -27.4909, -15.4161, -21.5822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7573, device='cuda:0', dtype=torch.float64)
tensor([-15.1551, -18.0862, -27.6208, -15.4392, -21.6805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8373, device='cuda:0', dtype=torch.float64)
tensor([-15.1885, -18.1082, -27.7499, -15.4629, -21.7467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8666, device='cuda:0', dtype=torch.float64)
tensor([-15.2285, -18.1159, -27.9496, -15.4422, -21.8229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8137, device='cuda:0', dtype=torch.float64)
tensor([-15.2936, -18.1613, -28.1820, -15.4488, -21.9144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8138, device='cuda:0', dtype=torch.float64)
tensor([-15.3567, -18.1752, -28.3991, -15.4297, -21.9459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9289, device='cuda:0', dtype=torch.float64)
tensor([-15.4295, -18.1687, -28.5325, -15.4226, -22.0114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0247, device='cuda:0', dtype=torch.float64)
tensor([-15.4965, -18.1780, -28.5399, -15.4102, -22.0459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9052, device='cuda:0', dtype=torch.float64)
tensor([-15.5714, -18.1796, -28.5232, -15.3685, -22.1086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8368, device='cuda:0', dtype=torch.float64)
tensor([-15.6267, -18.2071, -28.6191, -15.3289, -22.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9191, device='cuda:0', dtype=torch.float64)
tensor([-15.6970, -18.2686, -28.8109, -15.3052, -22.2535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8575, device='cuda:0', dtype=torch.float64)
tensor([-15.7554, -18.3012, -28.9994, -15.2719, -22.3669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7157, device='cuda:0', dtype=torch.float64)
tensor([-15.8119, -18.3464, -29.1252, -15.2476, -22.4263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7428, device='cuda:0', dtype=torch.float64)
tensor([-15.8503, -18.4244, -29.2863, -15.2472, -22.5071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7722, device='cuda:0', dtype=torch.float64)
tensor([-15.9135, -18.5126, -29.3855, -15.2409, -22.6264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8486, device='cuda:0', dtype=torch.float64)
tensor([-15.9574, -18.5621, -29.3596, -15.2001, -22.7485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9075, device='cuda:0', dtype=torch.float64)
tensor([-16.0038, -18.5687, -29.1899, -15.1361, -22.8934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8634, device='cuda:0', dtype=torch.float64)
tensor([-16.0472, -18.5864, -29.0270, -15.0714, -23.0839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8155, device='cuda:0', dtype=torch.float64)
tensor([-16.0864, -18.6064, -28.8442, -14.9958, -23.2366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9336, device='cuda:0', dtype=torch.float64)
tensor([-16.1041, -18.5732, -28.6875, -14.9188, -23.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8921, device='cuda:0', dtype=torch.float64)
tensor([-16.1085, -18.5861, -28.5730, -14.8746, -23.4255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8612, device='cuda:0', dtype=torch.float64)
tensor([-16.1152, -18.5662, -28.4559, -14.8240, -23.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8224, device='cuda:0', dtype=torch.float64)
tensor([-16.1558, -18.6113, -28.4206, -14.7932, -23.5072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8451, device='cuda:0', dtype=torch.float64)
tensor([-16.1857, -18.6180, -28.3614, -14.7592, -23.5223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8940, device='cuda:0', dtype=torch.float64)
tensor([-16.1909, -18.6458, -28.3810, -14.7496, -23.5373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8564, device='cuda:0', dtype=torch.float64)
tensor([-16.1985, -18.6543, -28.4109, -14.7223, -23.5376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8182, device='cuda:0', dtype=torch.float64)
tensor([-16.2229, -18.6489, -28.4598, -14.7054, -23.4836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8962, device='cuda:0', dtype=torch.float64)
tensor([-16.2620, -18.6844, -28.6069, -14.7175, -23.4334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9120, device='cuda:0', dtype=torch.float64)
tensor([-16.3013, -18.7055, -28.8506, -14.7137, -23.3898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8031, device='cuda:0', dtype=torch.float64)
tensor([-16.3380, -18.7302, -29.1096, -14.7078, -23.3787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7661, device='cuda:0', dtype=torch.float64)
tensor([-16.4078, -18.7745, -29.4377, -14.7452, -23.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8566, device='cuda:0', dtype=torch.float64)
tensor([-16.4682, -18.8254, -29.7609, -14.7985, -23.3981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7069, device='cuda:0', dtype=torch.float64)
tensor([-16.5158, -18.8776, -30.1020, -14.8613, -23.4035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9274, device='cuda:0', dtype=torch.float64)
tensor([-16.5799, -18.9147, -30.3432, -14.9351, -23.3654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8176, device='cuda:0', dtype=torch.float64)
tensor([-16.6415, -18.9555, -30.5831, -15.0329, -23.3404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7862, device='cuda:0', dtype=torch.float64)
tensor([-16.6794, -18.9981, -30.8424, -15.1149, -23.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9034, device='cuda:0', dtype=torch.float64)
tensor([-16.6921, -19.0291, -30.9824, -15.1559, -23.3002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8016, device='cuda:0', dtype=torch.float64)
tensor([-16.7177, -19.0480, -31.1198, -15.2061, -23.3245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9969, device='cuda:0', dtype=torch.float64)
tensor([-16.7652, -19.0757, -31.2383, -15.2283, -23.3695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8026, device='cuda:0', dtype=torch.float64)
tensor([-16.8224, -19.1281, -31.3541, -15.2653, -23.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8149, device='cuda:0', dtype=torch.float64)
tensor([-16.8913, -19.2146, -31.4807, -15.3330, -23.4203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8533, device='cuda:0', dtype=torch.float64)
tensor([-16.9710, -19.3270, -31.6073, -15.4341, -23.4481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8734, device='cuda:0', dtype=torch.float64)
tensor([-17.0523, -19.4561, -31.7770, -15.5187, -23.4948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8488, device='cuda:0', dtype=torch.float64)
tensor([-17.1583, -19.6164, -32.0352, -15.6405, -23.5181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8732, device='cuda:0', dtype=torch.float64)
tensor([-17.2551, -19.8294, -32.2795, -15.8129, -23.5327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8454, device='cuda:0', dtype=torch.float64)
tensor([-17.3507, -19.9986, -32.3891, -15.9431, -23.5236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8527, device='cuda:0', dtype=torch.float64)
tensor([-17.4444, -20.1831, -32.4903, -16.0617, -23.5455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8577, device='cuda:0', dtype=torch.float64)
tensor([-17.5241, -20.3269, -32.4980, -16.1441, -23.5786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8424, device='cuda:0', dtype=torch.float64)
tensor([-17.6334, -20.5135, -32.5994, -16.2753, -23.5985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8255, device='cuda:0', dtype=torch.float64)
tensor([-17.7581, -20.6906, -32.7539, -16.4023, -23.6154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8822, device='cuda:0', dtype=torch.float64)
tensor([-17.8741, -20.8397, -32.8609, -16.4948, -23.6360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7827, device='cuda:0', dtype=torch.float64)
tensor([-17.9461, -20.9933, -32.9036, -16.5949, -23.6495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7020, device='cuda:0', dtype=torch.float64)
tensor([-17.9899, -21.1518, -32.9352, -16.6670, -23.6421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9264, device='cuda:0', dtype=torch.float64)
tensor([-18.0111, -21.3041, -33.0593, -16.7426, -23.6701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7847, device='cuda:0', dtype=torch.float64)
tensor([-18.0238, -21.4744, -33.1279, -16.8419, -23.7101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7649, device='cuda:0', dtype=torch.float64)
tensor([-18.0486, -21.6528, -33.1530, -16.9416, -23.7802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8300, device='cuda:0', dtype=torch.float64)
tensor([-18.1135, -21.8342, -33.3036, -17.0700, -23.7824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7458, device='cuda:0', dtype=torch.float64)
tensor([-18.1566, -22.0108, -33.4640, -17.2130, -23.8077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7686, device='cuda:0', dtype=torch.float64)
tensor([-18.1915, -22.1629, -33.5854, -17.3285, -23.7983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9783, device='cuda:0', dtype=torch.float64)
tensor([-18.1811, -22.2350, -33.5379, -17.3929, -23.8130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7407, device='cuda:0', dtype=torch.float64)
tensor([-18.1971, -22.3418, -33.5877, -17.4901, -23.7818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9225, device='cuda:0', dtype=torch.float64)
tensor([-18.2246, -22.3723, -33.5722, -17.5870, -23.7574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8245, device='cuda:0', dtype=torch.float64)
tensor([-18.2400, -22.3747, -33.5978, -17.6805, -23.7585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8819, device='cuda:0', dtype=torch.float64)
tensor([-18.2648, -22.4117, -33.5600, -17.7666, -23.7843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8756, device='cuda:0', dtype=torch.float64)
tensor([-18.3173, -22.4825, -33.6006, -17.8877, -23.8267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9032, device='cuda:0', dtype=torch.float64)
tensor([-18.3376, -22.4844, -33.5477, -17.9654, -23.8817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8970, device='cuda:0', dtype=torch.float64)
tensor([-18.3607, -22.4506, -33.4045, -18.0327, -23.8592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8718, device='cuda:0', dtype=torch.float64)
tensor([-18.4076, -22.4250, -33.3116, -18.0999, -23.8154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7894, device='cuda:0', dtype=torch.float64)
tensor([-18.4522, -22.4156, -33.1921, -18.1758, -23.7704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8082, device='cuda:0', dtype=torch.float64)
tensor([-18.4727, -22.4933, -33.1683, -18.2989, -23.7096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8370, device='cuda:0', dtype=torch.float64)
tensor([-18.4721, -22.5931, -33.1483, -18.4416, -23.6695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9733, device='cuda:0', dtype=torch.float64)
tensor([-18.4713, -22.7094, -33.1423, -18.5722, -23.6318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8682, device='cuda:0', dtype=torch.float64)
tensor([-18.4861, -22.8022, -33.2436, -18.6898, -23.5768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8844, device='cuda:0', dtype=torch.float64)
tensor([-18.5243, -22.9491, -33.3480, -18.8223, -23.4886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8660, device='cuda:0', dtype=torch.float64)
tensor([-18.5300, -23.0299, -33.2745, -18.8626, -23.3945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7734, device='cuda:0', dtype=torch.float64)
tensor([-18.5281, -23.1082, -33.1351, -18.9124, -23.3356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7918, device='cuda:0', dtype=torch.float64)
tensor([-18.5404, -23.1885, -33.0998, -18.9574, -23.2961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8380, device='cuda:0', dtype=torch.float64)
tensor([-18.5273, -23.2768, -32.9467, -18.9894, -23.2550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8414, device='cuda:0', dtype=torch.float64)
tensor([-18.5618, -23.3978, -32.8990, -19.0435, -23.2578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7515, device='cuda:0', dtype=torch.float64)
tensor([-18.5675, -23.5050, -32.8035, -19.0909, -23.2735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9699, device='cuda:0', dtype=torch.float64)
tensor([-18.5918, -23.6093, -32.5517, -19.1308, -23.2748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8191, device='cuda:0', dtype=torch.float64)
tensor([-18.5856, -23.7552, -32.3533, -19.1952, -23.2415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7996, device='cuda:0', dtype=torch.float64)
tensor([-18.5940, -23.9429, -32.2382, -19.2902, -23.2025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7777, device='cuda:0', dtype=torch.float64)
tensor([-18.6348, -24.1736, -32.1487, -19.4515, -23.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8359, device='cuda:0', dtype=torch.float64)
tensor([-18.6949, -24.3617, -32.0994, -19.5974, -23.1147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0325, device='cuda:0', dtype=torch.float64)
tensor([-18.7521, -24.5386, -32.1414, -19.7433, -23.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8998, device='cuda:0', dtype=torch.float64)
tensor([-18.8044, -24.6946, -32.1092, -19.8438, -23.0482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7390, device='cuda:0', dtype=torch.float64)
tensor([-18.8424, -24.8262, -32.0179, -19.9038, -23.0476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6767, device='cuda:0', dtype=torch.float64)
tensor([-18.9030, -24.9781, -31.8924, -19.9881, -23.0464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9084, device='cuda:0', dtype=torch.float64)
tensor([-18.9564, -25.0788, -31.7032, -20.0113, -23.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7768, device='cuda:0', dtype=torch.float64)
tensor([-18.9991, -25.1840, -31.6017, -20.0555, -23.0833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7086, device='cuda:0', dtype=torch.float64)
tensor([-19.0796, -25.2607, -31.5989, -20.1026, -23.1063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8672, device='cuda:0', dtype=torch.float64)
tensor([-19.1448, -25.3866, -31.7009, -20.1310, -23.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8355, device='cuda:0', dtype=torch.float64)
tensor([-19.1972, -25.4720, -31.8229, -20.1458, -23.2156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7676, device='cuda:0', dtype=torch.float64)
tensor([-19.2494, -25.4846, -31.8733, -20.1248, -23.2335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6592, device='cuda:0', dtype=torch.float64)
tensor([-19.3304, -25.5213, -31.9504, -20.1263, -23.2358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7954, device='cuda:0', dtype=torch.float64)
tensor([-19.4299, -25.6291, -32.1472, -20.1653, -23.2554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9770, device='cuda:0', dtype=torch.float64)
tensor([-19.5708, -25.7788, -32.4163, -20.2582, -23.2776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7937, device='cuda:0', dtype=torch.float64)
tensor([-19.7246, -25.9117, -32.5497, -20.3005, -23.3102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8895, device='cuda:0', dtype=torch.float64)
tensor([-19.8488, -26.0468, -32.8135, -20.3849, -23.3397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9083, device='cuda:0', dtype=torch.float64)
tensor([-19.9835, -26.1694, -33.1273, -20.5128, -23.3818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8731, device='cuda:0', dtype=torch.float64)
tensor([-20.1227, -26.2712, -33.3541, -20.6657, -23.3880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8290, device='cuda:0', dtype=torch.float64)
tensor([-20.2325, -26.4217, -33.5403, -20.8141, -23.4167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8906, device='cuda:0', dtype=torch.float64)
tensor([-20.3570, -26.5781, -33.7222, -20.9769, -23.4204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7878, device='cuda:0', dtype=torch.float64)
tensor([-20.4206, -26.6874, -33.8993, -21.1246, -23.4608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8416, device='cuda:0', dtype=torch.float64)
tensor([-20.4453, -26.7500, -34.0354, -21.2336, -23.5145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7213, device='cuda:0', dtype=torch.float64)
tensor([-20.4886, -26.7937, -34.1569, -21.3586, -23.5714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7865, device='cuda:0', dtype=torch.float64)
tensor([-20.5297, -26.8267, -34.1532, -21.4717, -23.6203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7902, device='cuda:0', dtype=torch.float64)
tensor([-20.6050, -26.8720, -34.2591, -21.6159, -23.6575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7686, device='cuda:0', dtype=torch.float64)
tensor([-20.6790, -26.9698, -34.3843, -21.8030, -23.6628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8163, device='cuda:0', dtype=torch.float64)
tensor([-20.7147, -27.0615, -34.4362, -21.9500, -23.6661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6973, device='cuda:0', dtype=torch.float64)
tensor([-20.7117, -27.1825, -34.4085, -22.0810, -23.6531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8871, device='cuda:0', dtype=torch.float64)
tensor([-20.6983, -27.2284, -34.4166, -22.1438, -23.6710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8671, device='cuda:0', dtype=torch.float64)
tensor([-20.7123, -27.2730, -34.4755, -22.2714, -23.7192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7612, device='cuda:0', dtype=torch.float64)
tensor([-20.7350, -27.3736, -34.6747, -22.4318, -23.7644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7103, device='cuda:0', dtype=torch.float64)
tensor([-20.7759, -27.4655, -34.8625, -22.5338, -23.8117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7539, device='cuda:0', dtype=torch.float64)
tensor([-20.8441, -27.5752, -35.1826, -22.6644, -23.8164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8848, device='cuda:0', dtype=torch.float64)
tensor([-20.9168, -27.6016, -35.4825, -22.7923, -23.8186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9414, device='cuda:0', dtype=torch.float64)
tensor([-21.0011, -27.6720, -35.9337, -22.9399, -23.8342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6359, device='cuda:0', dtype=torch.float64)
tensor([-21.0885, -27.7175, -36.3185, -23.0735, -23.8276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8475, device='cuda:0', dtype=torch.float64)
tensor([-21.1479, -27.7807, -36.6319, -23.2172, -23.8314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8166, device='cuda:0', dtype=torch.float64)
tensor([-21.2171, -27.8455, -37.0828, -23.3537, -23.8865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6967, device='cuda:0', dtype=torch.float64)
tensor([-21.2999, -27.9729, -37.5091, -23.5318, -23.8980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8359, device='cuda:0', dtype=torch.float64)
tensor([-21.3627, -28.1581, -37.9507, -23.7388, -23.9571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7094, device='cuda:0', dtype=torch.float64)
tensor([-21.4079, -28.2897, -38.3246, -23.8574, -24.0513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8853, device='cuda:0', dtype=torch.float64)
tensor([-21.4666, -28.4247, -38.7151, -23.9825, -24.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9402, device='cuda:0', dtype=torch.float64)
tensor([-21.5301, -28.5785, -39.0502, -24.0767, -24.1955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7829, device='cuda:0', dtype=torch.float64)
tensor([-21.5811, -28.7996, -39.3531, -24.2057, -24.2938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9110, device='cuda:0', dtype=torch.float64)
tensor([-21.6429, -29.0337, -39.5683, -24.3286, -24.3365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8354, device='cuda:0', dtype=torch.float64)
tensor([-21.7392, -29.2976, -39.9130, -24.4159, -24.4389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7185, device='cuda:0', dtype=torch.float64)
tensor([-21.8154, -29.4916, -40.0878, -24.4695, -24.4799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7628, device='cuda:0', dtype=torch.float64)
tensor([-21.8682, -29.6681, -40.2181, -24.4867, -24.5329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8565, device='cuda:0', dtype=torch.float64)
tensor([-21.8892, -29.7945, -40.1489, -24.4180, -24.6322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7055, device='cuda:0', dtype=torch.float64)
tensor([-21.9138, -29.9056, -40.0716, -24.4116, -24.7377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7209, device='cuda:0', dtype=torch.float64)
tensor([-21.9374, -30.0442, -39.9995, -24.4250, -24.8143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6648, device='cuda:0', dtype=torch.float64)
tensor([-21.9467, -30.1787, -39.9689, -24.4389, -24.8879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7817, device='cuda:0', dtype=torch.float64)
tensor([-21.9596, -30.2681, -39.9413, -24.4571, -24.9762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7334, device='cuda:0', dtype=torch.float64)
tensor([-21.9656, -30.4075, -39.9172, -24.4909, -25.0721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7884, device='cuda:0', dtype=torch.float64)
tensor([-21.9855, -30.5283, -40.0225, -24.5618, -25.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9041, device='cuda:0', dtype=torch.float64)
tensor([-21.9979, -30.6628, -40.1310, -24.6379, -25.2044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8411, device='cuda:0', dtype=torch.float64)
tensor([-22.0023, -30.8169, -40.2887, -24.7108, -25.2663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7250, device='cuda:0', dtype=torch.float64)
tensor([-22.0325, -30.9717, -40.3766, -24.7757, -25.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8378, device='cuda:0', dtype=torch.float64)
tensor([-22.0127, -31.0719, -40.3253, -24.7969, -25.4646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8654, device='cuda:0', dtype=torch.float64)
tensor([-21.9878, -31.2112, -40.3365, -24.8702, -25.5553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8262, device='cuda:0', dtype=torch.float64)
tensor([-21.9615, -31.3111, -40.3533, -24.9747, -25.6790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8804, device='cuda:0', dtype=torch.float64)
tensor([-21.9663, -31.4604, -40.4862, -25.1223, -25.8386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7269, device='cuda:0', dtype=torch.float64)
tensor([-22.0066, -31.6368, -40.6160, -25.2999, -25.9736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8892, device='cuda:0', dtype=torch.float64)
tensor([-22.0750, -31.6922, -40.7228, -25.4200, -26.1602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7017, device='cuda:0', dtype=torch.float64)
tensor([-22.1186, -31.6975, -40.7545, -25.5202, -26.3490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0088, device='cuda:0', dtype=torch.float64)
tensor([-22.1660, -31.6808, -40.5600, -25.5500, -26.5174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7608, device='cuda:0', dtype=torch.float64)
tensor([-22.2104, -31.7186, -40.3689, -25.5981, -26.6952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8652, device='cuda:0', dtype=torch.float64)
tensor([-22.2425, -31.7239, -40.1832, -25.5998, -26.8602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8160, device='cuda:0', dtype=torch.float64)
tensor([-22.2876, -31.7860, -40.0098, -25.6425, -27.0020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7733, device='cuda:0', dtype=torch.float64)
tensor([-22.3029, -31.7732, -39.9338, -25.6722, -27.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7106, device='cuda:0', dtype=torch.float64)
tensor([-22.3365, -31.7788, -39.9261, -25.7197, -27.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8137, device='cuda:0', dtype=torch.float64)
tensor([-22.3479, -31.7456, -39.8284, -25.6886, -27.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6792, device='cuda:0', dtype=torch.float64)
tensor([-22.3896, -31.7153, -39.6966, -25.6644, -27.5596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6505, device='cuda:0', dtype=torch.float64)
tensor([-22.4724, -31.7310, -39.6451, -25.6322, -27.6495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6914, device='cuda:0', dtype=torch.float64)
tensor([-22.5508, -31.7095, -39.5692, -25.5719, -27.7615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8548, device='cuda:0', dtype=torch.float64)
tensor([-22.6213, -31.7299, -39.5655, -25.4969, -27.8521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8257, device='cuda:0', dtype=torch.float64)
tensor([-22.6913, -31.7111, -39.5522, -25.4461, -27.9621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8243, device='cuda:0', dtype=torch.float64)
tensor([-22.7641, -31.7351, -39.4989, -25.3919, -28.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7876, device='cuda:0', dtype=torch.float64)
tensor([-22.8416, -31.7571, -39.4604, -25.3513, -28.2573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8106, device='cuda:0', dtype=torch.float64)
tensor([-22.9510, -31.8360, -39.4560, -25.3500, -28.4118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8382, device='cuda:0', dtype=torch.float64)
tensor([-23.0363, -31.8948, -39.4281, -25.3551, -28.5956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9156, device='cuda:0', dtype=torch.float64)
tensor([-23.1334, -32.0245, -39.4431, -25.3734, -28.7752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8114, device='cuda:0', dtype=torch.float64)
tensor([-23.1901, -32.1481, -39.4324, -25.3837, -28.9600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8893, device='cuda:0', dtype=torch.float64)
tensor([-23.2656, -32.2284, -39.3663, -25.3317, -29.1369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7840, device='cuda:0', dtype=torch.float64)
tensor([-23.3927, -32.3390, -39.4180, -25.2649, -29.3070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8674, device='cuda:0', dtype=torch.float64)
tensor([-23.4607, -32.4707, -39.3813, -25.2434, -29.4444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7369, device='cuda:0', dtype=torch.float64)
tensor([-23.5393, -32.5853, -39.3913, -25.2202, -29.5725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7110, device='cuda:0', dtype=torch.float64)
tensor([-23.6031, -32.7472, -39.4998, -25.2731, -29.7085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7812, device='cuda:0', dtype=torch.float64)
tensor([-23.7128, -32.8629, -39.7283, -25.2809, -29.8996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7591, device='cuda:0', dtype=torch.float64)
tensor([-23.8142, -32.9676, -39.9263, -25.3278, -30.0655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8101, device='cuda:0', dtype=torch.float64)
tensor([-23.9131, -33.0878, -40.1356, -25.3798, -30.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8600, device='cuda:0', dtype=torch.float64)
tensor([-24.0252, -33.2869, -40.2764, -25.5007, -30.4821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8300, device='cuda:0', dtype=torch.float64)
tensor([-24.1234, -33.5222, -40.4604, -25.6265, -30.6972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7247, device='cuda:0', dtype=torch.float64)
tensor([-24.2131, -33.7497, -40.6335, -25.6996, -30.8976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8105, device='cuda:0', dtype=torch.float64)
tensor([-24.2652, -33.8825, -40.8136, -25.7752, -31.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7818, device='cuda:0', dtype=torch.float64)
tensor([-24.3521, -33.9947, -40.9670, -25.8683, -31.3258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7301, device='cuda:0', dtype=torch.float64)
tensor([-24.4135, -34.0958, -41.1563, -25.9501, -31.5305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7617, device='cuda:0', dtype=torch.float64)
tensor([-24.4791, -34.1516, -41.4086, -25.9870, -31.7368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7626, device='cuda:0', dtype=torch.float64)
tensor([-24.5632, -34.2588, -41.7713, -26.1118, -31.8779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6072, device='cuda:0', dtype=torch.float64)
tensor([-24.6810, -34.3968, -42.1265, -26.2396, -32.0083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7066, device='cuda:0', dtype=torch.float64)
tensor([-24.8138, -34.6460, -42.5113, -26.4044, -32.1234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7598, device='cuda:0', dtype=torch.float64)
tensor([-24.9326, -34.9101, -42.7800, -26.5598, -32.1218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7806, device='cuda:0', dtype=torch.float64)
tensor([-25.0670, -35.1844, -43.1019, -26.7045, -32.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8110, device='cuda:0', dtype=torch.float64)
tensor([-25.2126, -35.4733, -43.4464, -26.8367, -32.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7443, device='cuda:0', dtype=torch.float64)
tensor([-25.3809, -35.8115, -43.8643, -26.9830, -32.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8007, device='cuda:0', dtype=torch.float64)
tensor([-25.5653, -36.1694, -44.3741, -27.1113, -32.1995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8257, device='cuda:0', dtype=torch.float64)
tensor([-25.7305, -36.5795, -44.9285, -27.3112, -32.2361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7376, device='cuda:0', dtype=torch.float64)
tensor([-25.8930, -36.8882, -45.3977, -27.4364, -32.3046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6339, device='cuda:0', dtype=torch.float64)
tensor([-26.0246, -37.1962, -45.8629, -27.5719, -32.4002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7671, device='cuda:0', dtype=torch.float64)
tensor([-26.1180, -37.5855, -46.2979, -27.7402, -32.4997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7183, device='cuda:0', dtype=torch.float64)
tensor([-26.2015, -37.8978, -46.5768, -27.9048, -32.5593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8654, device='cuda:0', dtype=torch.float64)
tensor([-26.2559, -38.1507, -46.7085, -28.0780, -32.5740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8379, device='cuda:0', dtype=torch.float64)
tensor([-26.3343, -38.4666, -46.8348, -28.2962, -32.5555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8034, device='cuda:0', dtype=torch.float64)
tensor([-26.3599, -38.7590, -46.9354, -28.4993, -32.5933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7591, device='cuda:0', dtype=torch.float64)
tensor([-26.4045, -39.0559, -47.0530, -28.7243, -32.6194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7569, device='cuda:0', dtype=torch.float64)
tensor([-26.4345, -39.3380, -47.1286, -28.9541, -32.5938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7799, device='cuda:0', dtype=torch.float64)
tensor([-26.5013, -39.6341, -47.1732, -29.2015, -32.5493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8586, device='cuda:0', dtype=torch.float64)
tensor([-26.5485, -39.8845, -47.1517, -29.4182, -32.5633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7375, device='cuda:0', dtype=torch.float64)
tensor([-26.6004, -40.1949, -47.3301, -29.6696, -32.5783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7655, device='cuda:0', dtype=torch.float64)
tensor([-26.6265, -40.4428, -47.4869, -29.9032, -32.6647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7206, device='cuda:0', dtype=torch.float64)
tensor([-26.6274, -40.6425, -47.5895, -30.0894, -32.7356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7198, device='cuda:0', dtype=torch.float64)
tensor([-26.6238, -40.8634, -47.6685, -30.3407, -32.7750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7538, device='cuda:0', dtype=torch.float64)
tensor([-26.6328, -41.1230, -47.7929, -30.5499, -32.8036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8792, device='cuda:0', dtype=torch.float64)
tensor([-26.6125, -41.3374, -47.8729, -30.7199, -32.8137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7479, device='cuda:0', dtype=torch.float64)
tensor([-26.6022, -41.5700, -48.0121, -30.8679, -32.8499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8513, device='cuda:0', dtype=torch.float64)
tensor([-26.6102, -41.7347, -47.9954, -30.9480, -32.8867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6832, device='cuda:0', dtype=torch.float64)
tensor([-26.6006, -41.7693, -47.9831, -30.9947, -32.9220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6608, device='cuda:0', dtype=torch.float64)
tensor([-26.5538, -41.8274, -47.9301, -31.0439, -32.9766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7009, device='cuda:0', dtype=torch.float64)
tensor([-26.5329, -41.8555, -47.9403, -31.1412, -33.0370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-26.5494, -41.9425, -47.9857, -31.3002, -33.0295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8270, device='cuda:0', dtype=torch.float64)
tensor([-26.5670, -42.0826, -48.0336, -31.5052, -32.9928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7937, device='cuda:0', dtype=torch.float64)
tensor([-26.5934, -42.1548, -48.0717, -31.7259, -32.9946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8382, device='cuda:0', dtype=torch.float64)
tensor([-26.6339, -42.3066, -48.2627, -32.0009, -33.0163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7479, device='cuda:0', dtype=torch.float64)
tensor([-26.6843, -42.4953, -48.4619, -32.2889, -33.0486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6472, device='cuda:0', dtype=torch.float64)
tensor([-26.7344, -42.6946, -48.5994, -32.5211, -33.1089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7262, device='cuda:0', dtype=torch.float64)
tensor([-26.8079, -42.8956, -48.7917, -32.7037, -33.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7068, device='cuda:0', dtype=torch.float64)
tensor([-26.8359, -43.0529, -49.0136, -32.8661, -33.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8256, device='cuda:0', dtype=torch.float64)
tensor([-26.8875, -43.1719, -49.1581, -33.0082, -33.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7668, device='cuda:0', dtype=torch.float64)
tensor([-26.9500, -43.3892, -49.3472, -33.1777, -33.3590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7060, device='cuda:0', dtype=torch.float64)
tensor([-26.9699, -43.6833, -49.5991, -33.4108, -33.4788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7773, device='cuda:0', dtype=torch.float64)
tensor([-26.9954, -43.9648, -49.8282, -33.6719, -33.6199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8615, device='cuda:0', dtype=torch.float64)
tensor([-27.0388, -44.2797, -49.9796, -33.9024, -33.7736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7267, device='cuda:0', dtype=torch.float64)
tensor([-27.0812, -44.5914, -50.1060, -34.1212, -33.8795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8111, device='cuda:0', dtype=torch.float64)
tensor([-27.1253, -44.8042, -50.1705, -34.2836, -34.0368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9031, device='cuda:0', dtype=torch.float64)
tensor([-27.1638, -45.0476, -50.2290, -34.5766, -34.2395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8479, device='cuda:0', dtype=torch.float64)
tensor([-27.2095, -45.1155, -50.1803, -34.7659, -34.5051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7011, device='cuda:0', dtype=torch.float64)
tensor([-27.2062, -45.2311, -50.1016, -34.9312, -34.7686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7859, device='cuda:0', dtype=torch.float64)
tensor([-27.2060, -45.4036, -50.0234, -35.1031, -34.9388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7265, device='cuda:0', dtype=torch.float64)
tensor([-27.2135, -45.5651, -49.9305, -35.2389, -35.0843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6993, device='cuda:0', dtype=torch.float64)
tensor([-27.2295, -45.7829, -49.9595, -35.3837, -35.2883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7013, device='cuda:0', dtype=torch.float64)
tensor([-27.2438, -46.0111, -50.0297, -35.5642, -35.4339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6684, device='cuda:0', dtype=torch.float64)
tensor([-27.2584, -46.2765, -50.0914, -35.7276, -35.5642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7109, device='cuda:0', dtype=torch.float64)
tensor([-27.2299, -46.4805, -50.2009, -35.8719, -35.6960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8712, device='cuda:0', dtype=torch.float64)
tensor([-27.1821, -46.7528, -50.3409, -36.0415, -35.7964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6854, device='cuda:0', dtype=torch.float64)
tensor([-27.1245, -47.0911, -50.5286, -36.2212, -35.8258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8444, device='cuda:0', dtype=torch.float64)
tensor([-27.0582, -47.2982, -50.6778, -36.3045, -35.8317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8002, device='cuda:0', dtype=torch.float64)
tensor([-27.0043, -47.4564, -50.8852, -36.3295, -35.8535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7363, device='cuda:0', dtype=torch.float64)
tensor([-26.9275, -47.4574, -50.9473, -36.2362, -35.8969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6844, device='cuda:0', dtype=torch.float64)
tensor([-26.8754, -47.3900, -51.0170, -36.1521, -35.9362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7681, device='cuda:0', dtype=torch.float64)
tensor([-26.7978, -47.1874, -50.9989, -35.9565, -36.0033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8168, device='cuda:0', dtype=torch.float64)
tensor([-26.7554, -47.0536, -50.9438, -35.8743, -36.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7193, device='cuda:0', dtype=torch.float64)
tensor([-26.7193, -46.9297, -50.9371, -35.7839, -36.1850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6303, device='cuda:0', dtype=torch.float64)
tensor([-26.6779, -46.9040, -50.9500, -35.7506, -36.2587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7400, device='cuda:0', dtype=torch.float64)
tensor([-26.6400, -46.8259, -50.9040, -35.6256, -36.3136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6230, device='cuda:0', dtype=torch.float64)
tensor([-26.5974, -46.8096, -50.8541, -35.5345, -36.3827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7784, device='cuda:0', dtype=torch.float64)
tensor([-26.5807, -46.8668, -50.9495, -35.4692, -36.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7844, device='cuda:0', dtype=torch.float64)
tensor([-26.5651, -46.9840, -51.0675, -35.4523, -36.5974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8276, device='cuda:0', dtype=torch.float64)
tensor([-26.5241, -47.0152, -51.1359, -35.3943, -36.7624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7461, device='cuda:0', dtype=torch.float64)
tensor([-26.4915, -47.2036, -51.2234, -35.4376, -36.8942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7693, device='cuda:0', dtype=torch.float64)
tensor([-26.4690, -47.4377, -51.4256, -35.5009, -37.0128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8497, device='cuda:0', dtype=torch.float64)
tensor([-26.5129, -47.7370, -51.7015, -35.7059, -37.1100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7157, device='cuda:0', dtype=torch.float64)
tensor([-26.5455, -48.0056, -51.9959, -35.9185, -37.1874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7625, device='cuda:0', dtype=torch.float64)
tensor([-26.6357, -48.3262, -52.3370, -36.1917, -37.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7651, device='cuda:0', dtype=torch.float64)
tensor([-26.6970, -48.6780, -52.6620, -36.4820, -37.4496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7312, device='cuda:0', dtype=torch.float64)
tensor([-26.7654, -49.1370, -53.0685, -36.8120, -37.5828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7318, device='cuda:0', dtype=torch.float64)
tensor([-26.8112, -49.5406, -53.5007, -37.0819, -37.7369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7349, device='cuda:0', dtype=torch.float64)
tensor([-26.8285, -49.8486, -53.7192, -37.3228, -37.8828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7153, device='cuda:0', dtype=torch.float64)
tensor([-26.9087, -50.2332, -54.0134, -37.6359, -38.0054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6867, device='cuda:0', dtype=torch.float64)
tensor([-27.0199, -50.5902, -54.3311, -37.9426, -38.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7121, device='cuda:0', dtype=torch.float64)
tensor([-27.0978, -50.9561, -54.5796, -38.2105, -38.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6864, device='cuda:0', dtype=torch.float64)
tensor([-27.1553, -51.3275, -54.8071, -38.4421, -38.2785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8551, device='cuda:0', dtype=torch.float64)
tensor([-27.2031, -51.7056, -55.0057, -38.6973, -38.4921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6843, device='cuda:0', dtype=torch.float64)
tensor([-27.2545, -52.0498, -55.1712, -38.8858, -38.6451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7906, device='cuda:0', dtype=torch.float64)
tensor([-27.3332, -52.3973, -55.3439, -39.1156, -38.7962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7713, device='cuda:0', dtype=torch.float64)
tensor([-27.4286, -52.7781, -55.6434, -39.4221, -38.9821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8741, device='cuda:0', dtype=torch.float64)
tensor([-27.5271, -53.1457, -55.9372, -39.6775, -39.1266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7445, device='cuda:0', dtype=torch.float64)
tensor([-27.6347, -53.5284, -56.1633, -39.9856, -39.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7791, device='cuda:0', dtype=torch.float64)
tensor([-27.7200, -53.8927, -56.3692, -40.2717, -39.4076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8475, device='cuda:0', dtype=torch.float64)
tensor([-27.7865, -54.1764, -56.5430, -40.5130, -39.5831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6960, device='cuda:0', dtype=torch.float64)
tensor([-27.8035, -54.3875, -56.6093, -40.6949, -39.7278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6497, device='cuda:0', dtype=torch.float64)
tensor([-27.8338, -54.5648, -56.6171, -40.8458, -39.8533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6911, device='cuda:0', dtype=torch.float64)
tensor([-27.8782, -54.7501, -56.6270, -40.9692, -39.9427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6302, device='cuda:0', dtype=torch.float64)
tensor([-27.8982, -54.8884, -56.5317, -41.0684, -40.0314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7589, device='cuda:0', dtype=torch.float64)
tensor([-27.9320, -54.9128, -56.4261, -41.0671, -40.0522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7575, device='cuda:0', dtype=torch.float64)
tensor([-27.9816, -55.0259, -56.3742, -41.0756, -40.0237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6516, device='cuda:0', dtype=torch.float64)
tensor([-28.0270, -55.1452, -56.3802, -41.0564, -40.0164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7122, device='cuda:0', dtype=torch.float64)
tensor([-28.0500, -55.3621, -56.4359, -41.0984, -40.0171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6590, device='cuda:0', dtype=torch.float64)
tensor([-28.0555, -55.5578, -56.4473, -41.1073, -40.0633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5773, device='cuda:0', dtype=torch.float64)
tensor([-28.0392, -55.7518, -56.4781, -41.1080, -40.0876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8301, device='cuda:0', dtype=torch.float64)
tensor([-28.0472, -55.9643, -56.4561, -41.1076, -40.1147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6152, device='cuda:0', dtype=torch.float64)
tensor([-28.0635, -56.1322, -56.3982, -41.0359, -40.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6932, device='cuda:0', dtype=torch.float64)
tensor([-28.0926, -56.3140, -56.4213, -41.0138, -40.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7419, device='cuda:0', dtype=torch.float64)
tensor([-28.0722, -56.4633, -56.3844, -41.0007, -40.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7215, device='cuda:0', dtype=torch.float64)
tensor([-28.0246, -56.6484, -56.3518, -41.0145, -40.3268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6385, device='cuda:0', dtype=torch.float64)
tensor([-27.9804, -56.9213, -56.3765, -41.0523, -40.3802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6714, device='cuda:0', dtype=torch.float64)
tensor([-27.9237, -57.2685, -56.5142, -41.1533, -40.4413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8093, device='cuda:0', dtype=torch.float64)
tensor([-27.8798, -57.7847, -56.8773, -41.4251, -40.5561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7287, device='cuda:0', dtype=torch.float64)
tensor([-27.8596, -58.2496, -57.1362, -41.6862, -40.6666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7662, device='cuda:0', dtype=torch.float64)
tensor([-27.8531, -58.7402, -57.4373, -41.9660, -40.8020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6955, device='cuda:0', dtype=torch.float64)
tensor([-27.8681, -59.2296, -57.7397, -42.2357, -40.9208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6066, device='cuda:0', dtype=torch.float64)
tensor([-27.8668, -59.6666, -58.0714, -42.4388, -41.0764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7907, device='cuda:0', dtype=torch.float64)
tensor([-27.9102, -60.1381, -58.3807, -42.7103, -41.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7624, device='cuda:0', dtype=torch.float64)
tensor([-27.9486, -60.6176, -58.7297, -43.0368, -41.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6068, device='cuda:0', dtype=torch.float64)
tensor([-28.0151, -60.9958, -58.9952, -43.3221, -41.4902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6833, device='cuda:0', dtype=torch.float64)
tensor([-28.0924, -61.3023, -59.2516, -43.5714, -41.6248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6734, device='cuda:0', dtype=torch.float64)
tensor([-28.1450, -61.5909, -59.5413, -43.8132, -41.8114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6923, device='cuda:0', dtype=torch.float64)
tensor([-28.1698, -61.9896, -59.7242, -44.0952, -41.9395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7740, device='cuda:0', dtype=torch.float64)
tensor([-28.2472, -62.5227, -60.0718, -44.3735, -42.0403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6734, device='cuda:0', dtype=torch.float64)
tensor([-28.3164, -62.8921, -60.2419, -44.5762, -42.1211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7260, device='cuda:0', dtype=torch.float64)
tensor([-28.4281, -63.2523, -60.5162, -44.8534, -42.2351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6471, device='cuda:0', dtype=torch.float64)
tensor([-28.5587, -63.6195, -60.9375, -45.0810, -42.3696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6535, device='cuda:0', dtype=torch.float64)
tensor([-28.6877, -63.8105, -61.3390, -45.2861, -42.5062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6403, device='cuda:0', dtype=torch.float64)
tensor([-28.8202, -64.0404, -61.7029, -45.5126, -42.6834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7562, device='cuda:0', dtype=torch.float64)
tensor([-28.9081, -64.2183, -62.0232, -45.7189, -42.8630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7206, device='cuda:0', dtype=torch.float64)
tensor([-29.0559, -64.5038, -62.2764, -45.9667, -42.9912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6032, device='cuda:0', dtype=torch.float64)
tensor([-29.1835, -64.8825, -62.5044, -46.2836, -43.1290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6018, device='cuda:0', dtype=torch.float64)
tensor([-29.3509, -65.1872, -62.7173, -46.5800, -43.2728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7221, device='cuda:0', dtype=torch.float64)
tensor([-29.4704, -65.4186, -62.7343, -46.8112, -43.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7552, device='cuda:0', dtype=torch.float64)
tensor([-29.5899, -65.7060, -62.8050, -47.0998, -43.6143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6119, device='cuda:0', dtype=torch.float64)
tensor([-29.6829, -65.9506, -62.8221, -47.3429, -43.7763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8093, device='cuda:0', dtype=torch.float64)
tensor([-29.7944, -66.2076, -62.9669, -47.6489, -43.9760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7585, device='cuda:0', dtype=torch.float64)
tensor([-29.8963, -66.4218, -63.1706, -47.9592, -44.1709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7107, device='cuda:0', dtype=torch.float64)
tensor([-29.9559, -66.5616, -63.3799, -48.2410, -44.3316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6118, device='cuda:0', dtype=torch.float64)
tensor([-30.0087, -66.7432, -63.4783, -48.4745, -44.4761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6373, device='cuda:0', dtype=torch.float64)
tensor([-30.0609, -66.9045, -63.5896, -48.6692, -44.6352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6194, device='cuda:0', dtype=torch.float64)
tensor([-30.1096, -67.0183, -63.7042, -48.7845, -44.7926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6500, device='cuda:0', dtype=torch.float64)
tensor([-30.1790, -67.1467, -63.9064, -48.9470, -44.9397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5771, device='cuda:0', dtype=torch.float64)
tensor([-30.2516, -67.2705, -64.1112, -49.0916, -45.0733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6012, device='cuda:0', dtype=torch.float64)
tensor([-30.3015, -67.4566, -64.3593, -49.3116, -45.2138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6230, device='cuda:0', dtype=torch.float64)
tensor([-30.3810, -67.7671, -64.7309, -49.5972, -45.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7031, device='cuda:0', dtype=torch.float64)
tensor([-30.4857, -68.1142, -65.1970, -49.8557, -45.5869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6909, device='cuda:0', dtype=torch.float64)
tensor([-30.6226, -68.4557, -65.6442, -50.1559, -45.7371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6012, device='cuda:0', dtype=torch.float64)
tensor([-30.7060, -68.8577, -66.0907, -50.4009, -45.8516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6130, device='cuda:0', dtype=torch.float64)
tensor([-30.8050, -69.2731, -66.5321, -50.6888, -45.9927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7811, device='cuda:0', dtype=torch.float64)
tensor([-30.9025, -69.5706, -66.8354, -50.9506, -46.1077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6800, device='cuda:0', dtype=torch.float64)
tensor([-30.9795, -69.7694, -67.0611, -51.2097, -46.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7371, device='cuda:0', dtype=torch.float64)
tensor([-31.0774, -69.8880, -67.1890, -51.3901, -46.2397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5885, device='cuda:0', dtype=torch.float64)
tensor([-31.1300, -70.0246, -67.2274, -51.5312, -46.3119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6316, device='cuda:0', dtype=torch.float64)
tensor([-31.1880, -70.0295, -67.2648, -51.5607, -46.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6369, device='cuda:0', dtype=torch.float64)
tensor([-31.2814, -70.0307, -67.3568, -51.5826, -46.4679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6946, device='cuda:0', dtype=torch.float64)
tensor([-31.3570, -70.1340, -67.4523, -51.6080, -46.5466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6882, device='cuda:0', dtype=torch.float64)
tensor([-31.4061, -70.1612, -67.4927, -51.6205, -46.6443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6939, device='cuda:0', dtype=torch.float64)
tensor([-31.4034, -70.1131, -67.4586, -51.4637, -46.7639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6412, device='cuda:0', dtype=torch.float64)
tensor([-31.4180, -70.1086, -67.5065, -51.2977, -46.9486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6670, device='cuda:0', dtype=torch.float64)
tensor([-31.4268, -70.0593, -67.4106, -51.0705, -47.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6513, device='cuda:0', dtype=torch.float64)
tensor([-31.4373, -70.0655, -67.4240, -50.9530, -47.4071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7773, device='cuda:0', dtype=torch.float64)
tensor([-31.4552, -70.1408, -67.4597, -50.9565, -47.6489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5722, device='cuda:0', dtype=torch.float64)
tensor([-31.4865, -70.2788, -67.4431, -50.9385, -47.8502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6375, device='cuda:0', dtype=torch.float64)
tensor([-31.5360, -70.5278, -67.4399, -51.0153, -48.0276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6074, device='cuda:0', dtype=torch.float64)
tensor([-31.6146, -70.6811, -67.3588, -51.1176, -48.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6025, device='cuda:0', dtype=torch.float64)
tensor([-31.6811, -70.7362, -67.2273, -51.1962, -48.3229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6816, device='cuda:0', dtype=torch.float64)
tensor([-31.7349, -70.7142, -67.1067, -51.2006, -48.4612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7246, device='cuda:0', dtype=torch.float64)
tensor([-31.7755, -70.8461, -67.0838, -51.2513, -48.6031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7261, device='cuda:0', dtype=torch.float64)
tensor([-31.8080, -70.9564, -67.0429, -51.3043, -48.6918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6102, device='cuda:0', dtype=torch.float64)
tensor([-31.8465, -71.0835, -67.0603, -51.3800, -48.7692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5973, device='cuda:0', dtype=torch.float64)
tensor([-31.9372, -71.2743, -67.1311, -51.4303, -48.8319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6329, device='cuda:0', dtype=torch.float64)
tensor([-32.0221, -71.5293, -67.2213, -51.5489, -48.9006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6970, device='cuda:0', dtype=torch.float64)
tensor([-32.1138, -71.7556, -67.3551, -51.6207, -48.9623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6723, device='cuda:0', dtype=torch.float64)
tensor([-32.2108, -71.8626, -67.4817, -51.6187, -49.0703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6434, device='cuda:0', dtype=torch.float64)
tensor([-32.3022, -71.9882, -67.5956, -51.6654, -49.1482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6377, device='cuda:0', dtype=torch.float64)
tensor([-32.4127, -72.1764, -67.8492, -51.8196, -49.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6557, device='cuda:0', dtype=torch.float64)
tensor([-32.5058, -72.4404, -68.1295, -52.0178, -49.3275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6319, device='cuda:0', dtype=torch.float64)
tensor([-32.6385, -72.7669, -68.4595, -52.3184, -49.4623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6386, device='cuda:0', dtype=torch.float64)
tensor([-32.7598, -73.0133, -68.6815, -52.5073, -49.5144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7569, device='cuda:0', dtype=torch.float64)
tensor([-32.8402, -73.3615, -68.9259, -52.6517, -49.5620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6614, device='cuda:0', dtype=torch.float64)
tensor([-32.9654, -73.7091, -69.0965, -52.8290, -49.5661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6178, device='cuda:0', dtype=torch.float64)
tensor([-33.1132, -73.9672, -69.2400, -52.9318, -49.5477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5757, device='cuda:0', dtype=torch.float64)
tensor([-33.2783, -74.3315, -69.4288, -53.1080, -49.5161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7153, device='cuda:0', dtype=torch.float64)
tensor([-33.4077, -74.8638, -69.7476, -53.4158, -49.5661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7339, device='cuda:0', dtype=torch.float64)
tensor([-33.5062, -75.3734, -69.9304, -53.6023, -49.6823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7188, device='cuda:0', dtype=torch.float64)
tensor([-33.6083, -75.9811, -70.3491, -53.9696, -49.7959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5786, device='cuda:0', dtype=torch.float64)
tensor([-33.6962, -76.6996, -70.7925, -54.4609, -49.8910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6837, device='cuda:0', dtype=torch.float64)
tensor([-33.7949, -77.4726, -71.2621, -54.9612, -50.0620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6498, device='cuda:0', dtype=torch.float64)
tensor([-33.8805, -78.3592, -71.9180, -55.5305, -50.3048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7447, device='cuda:0', dtype=torch.float64)
tensor([-33.9867, -79.4909, -72.7511, -56.2761, -50.6045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7052, device='cuda:0', dtype=torch.float64)
tensor([-34.0871, -80.6427, -73.5146, -57.0537, -50.8503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6549, device='cuda:0', dtype=torch.float64)
tensor([-34.1693, -81.6517, -74.2091, -57.7667, -51.0570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7032, device='cuda:0', dtype=torch.float64)
tensor([-34.2448, -82.6638, -74.8380, -58.4806, -51.2029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6451, device='cuda:0', dtype=torch.float64)
tensor([-34.3177, -83.5506, -75.4592, -59.1639, -51.3732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6542, device='cuda:0', dtype=torch.float64)
tensor([-34.3370, -84.1929, -75.9727, -59.5934, -51.5163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6745, device='cuda:0', dtype=torch.float64)
tensor([-34.3901, -84.8586, -76.6527, -60.0847, -51.6408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6470, device='cuda:0', dtype=torch.float64)
tensor([-34.4352, -85.5433, -77.3689, -60.5580, -51.8073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6915, device='cuda:0', dtype=torch.float64)
tensor([-34.4634, -86.0142, -77.9762, -60.9539, -51.9891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5962, device='cuda:0', dtype=torch.float64)
tensor([-34.4833, -86.3225, -78.3732, -61.1496, -52.0967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5601, device='cuda:0', dtype=torch.float64)
tensor([-34.5373, -86.7469, -78.9820, -61.3959, -52.2427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6708, device='cuda:0', dtype=torch.float64)
tensor([-34.5403, -87.0234, -79.3132, -61.4795, -52.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6984, device='cuda:0', dtype=torch.float64)
tensor([-34.4974, -87.0817, -79.4294, -61.4082, -52.4287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5859, device='cuda:0', dtype=torch.float64)
tensor([-34.5274, -87.1552, -79.5583, -61.3628, -52.5334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7298, device='cuda:0', dtype=torch.float64)
tensor([-34.5434, -87.0795, -79.5755, -61.2748, -52.6750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6185, device='cuda:0', dtype=torch.float64)
tensor([-34.5879, -87.0190, -79.6443, -61.2601, -52.8063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6287, device='cuda:0', dtype=torch.float64)
tensor([-34.6357, -86.8090, -79.7658, -61.1058, -52.9324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5285, device='cuda:0', dtype=torch.float64)
tensor([-34.7080, -86.6906, -79.9734, -61.0580, -53.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6097, device='cuda:0', dtype=torch.float64)
tensor([-34.7836, -86.5929, -80.0933, -61.1081, -53.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5932, device='cuda:0', dtype=torch.float64)
tensor([-34.9195, -86.5016, -80.2513, -61.2377, -53.2883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5788, device='cuda:0', dtype=torch.float64)
tensor([-35.0545, -86.3378, -80.4679, -61.3530, -53.4677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5741, device='cuda:0', dtype=torch.float64)
tensor([-35.1905, -86.1770, -80.6228, -61.4129, -53.5884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6741, device='cuda:0', dtype=torch.float64)
tensor([-35.3496, -86.1879, -80.9605, -61.5598, -53.7269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6638, device='cuda:0', dtype=torch.float64)
tensor([-35.4944, -86.2792, -81.1850, -61.6983, -53.8338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6030, device='cuda:0', dtype=torch.float64)
tensor([-35.6237, -86.3454, -81.3885, -61.7731, -53.9347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5640, device='cuda:0', dtype=torch.float64)
tensor([-35.7169, -86.5690, -81.7144, -62.0055, -54.1099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5829, device='cuda:0', dtype=torch.float64)
tensor([-35.7803, -86.7968, -81.9508, -62.2931, -54.2316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6957, device='cuda:0', dtype=torch.float64)
tensor([-35.8501, -86.9089, -82.0794, -62.4707, -54.3106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6768, device='cuda:0', dtype=torch.float64)
tensor([-35.9006, -87.1163, -82.2075, -62.5577, -54.4102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5459, device='cuda:0', dtype=torch.float64)
tensor([-35.9101, -87.2640, -82.2886, -62.5803, -54.5138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6013, device='cuda:0', dtype=torch.float64)
tensor([-35.9159, -87.2544, -82.2290, -62.5721, -54.6214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6229, device='cuda:0', dtype=torch.float64)
tensor([-36.0089, -87.4376, -82.3789, -62.8265, -54.6949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6243, device='cuda:0', dtype=torch.float64)
tensor([-36.0891, -87.8268, -82.6217, -63.1969, -54.8271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6232, device='cuda:0', dtype=torch.float64)
tensor([-36.1469, -88.1319, -82.7286, -63.5302, -55.0040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7985, device='cuda:0', dtype=torch.float64)
tensor([-36.2045, -88.4662, -82.9151, -63.8663, -55.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5548, device='cuda:0', dtype=torch.float64)
tensor([-36.2370, -88.8427, -83.0100, -64.1503, -55.2549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5883, device='cuda:0', dtype=torch.float64)
tensor([-36.2935, -89.3936, -83.2676, -64.5233, -55.4063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6535, device='cuda:0', dtype=torch.float64)
tensor([-36.3850, -89.7951, -83.3525, -64.8062, -55.5282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6525, device='cuda:0', dtype=torch.float64)
tensor([-36.4706, -90.3038, -83.6546, -65.2324, -55.6639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5838, device='cuda:0', dtype=torch.float64)
tensor([-36.5651, -91.0550, -84.1349, -65.8280, -55.8741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6511, device='cuda:0', dtype=torch.float64)
tensor([-36.6774, -91.5446, -84.2830, -66.2549, -55.9641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6002, device='cuda:0', dtype=torch.float64)
tensor([-36.8136, -92.1159, -84.5977, -66.8005, -56.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6618, device='cuda:0', dtype=torch.float64)
tensor([-36.9251, -92.7138, -84.9986, -67.3904, -56.3093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6461, device='cuda:0', dtype=torch.float64)
tensor([-37.0140, -93.2424, -85.3359, -67.9349, -56.5085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6896, device='cuda:0', dtype=torch.float64)
tensor([-37.1211, -93.8356, -85.7839, -68.5384, -56.7053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5606, device='cuda:0', dtype=torch.float64)
tensor([-37.2033, -94.2876, -86.2079, -69.1183, -56.9277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5911, device='cuda:0', dtype=torch.float64)
tensor([-37.2754, -94.7478, -86.5489, -69.5925, -57.0999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5695, device='cuda:0', dtype=torch.float64)
tensor([-37.3481, -95.2233, -86.8171, -70.1263, -57.2154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6385, device='cuda:0', dtype=torch.float64)
tensor([-37.4541, -95.5116, -86.8657, -70.5348, -57.3185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5747, device='cuda:0', dtype=torch.float64)
tensor([-37.5687, -95.5724, -86.7886, -70.7576, -57.3896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5828, device='cuda:0', dtype=torch.float64)
tensor([-37.6741, -95.6363, -86.7527, -70.9366, -57.4607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6063, device='cuda:0', dtype=torch.float64)
tensor([-37.7135, -95.8320, -86.8129, -71.2338, -57.5869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5299, device='cuda:0', dtype=torch.float64)
tensor([-37.7272, -96.1081, -86.9476, -71.5281, -57.7444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5960, device='cuda:0', dtype=torch.float64)
tensor([-37.7431, -96.4831, -87.1792, -71.8831, -57.9032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5872, device='cuda:0', dtype=torch.float64)
tensor([-37.7715, -97.0499, -87.5197, -72.3071, -58.1078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6302, device='cuda:0', dtype=torch.float64)
tensor([-37.7496, -97.6543, -87.7986, -72.6647, -58.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6455, device='cuda:0', dtype=torch.float64)
tensor([-37.7521, -98.4226, -88.2878, -73.2244, -58.4808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6926, device='cuda:0', dtype=torch.float64)
tensor([-37.8011, -99.0647, -88.6669, -73.6723, -58.7139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6257, device='cuda:0', dtype=torch.float64)
tensor([-37.8347, -99.4766, -88.9673, -73.9486, -58.9711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6241, device='cuda:0', dtype=torch.float64)
tensor([-37.8579, -99.9835, -89.3405, -74.3163, -59.2969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5942, device='cuda:0', dtype=torch.float64)
tensor([ -37.8843, -100.5242,  -89.8827,  -74.8255,  -59.6382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5167, device='cuda:0', dtype=torch.float64)
tensor([ -37.8756, -100.8362,  -90.2775,  -75.1247,  -59.9752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6282, device='cuda:0', dtype=torch.float64)
tensor([ -37.8849, -101.2823,  -90.6392,  -75.4219,  -60.2711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5047, device='cuda:0', dtype=torch.float64)
tensor([ -37.8905, -101.5970,  -90.8607,  -75.5920,  -60.5160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5551, device='cuda:0', dtype=torch.float64)
tensor([ -37.8828, -101.9743,  -91.1214,  -75.7972,  -60.7290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4934, device='cuda:0', dtype=torch.float64)
tensor([ -37.8548, -102.3529,  -91.3756,  -75.9642,  -60.9103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5621, device='cuda:0', dtype=torch.float64)
tensor([ -37.8297, -102.7018,  -91.6094,  -76.0775,  -61.0893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5937, device='cuda:0', dtype=torch.float64)
tensor([ -37.8360, -103.0362,  -91.9710,  -76.1602,  -61.2222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6980, device='cuda:0', dtype=torch.float64)
tensor([ -37.8233, -103.2606,  -92.2084,  -76.1344,  -61.3242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6949, device='cuda:0', dtype=torch.float64)
tensor([ -37.8155, -103.6007,  -92.4963,  -76.2315,  -61.4079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7047, device='cuda:0', dtype=torch.float64)
tensor([ -37.7982, -103.9714,  -92.6928,  -76.3718,  -61.5945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5649, device='cuda:0', dtype=torch.float64)
tensor([ -37.7806, -104.3520,  -92.9049,  -76.4829,  -61.8137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7249, device='cuda:0', dtype=torch.float64)
tensor([ -37.7876, -104.8056,  -93.1516,  -76.7100,  -61.9956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7220, device='cuda:0', dtype=torch.float64)
tensor([ -37.8010, -105.2700,  -93.1779,  -76.9314,  -62.1307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6238, device='cuda:0', dtype=torch.float64)
tensor([ -37.8285, -105.7297,  -93.2622,  -77.1734,  -62.3183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5852, device='cuda:0', dtype=torch.float64)
tensor([ -37.8685, -106.1051,  -93.3415,  -77.4085,  -62.4976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6313, device='cuda:0', dtype=torch.float64)
tensor([ -37.9253, -106.4857,  -93.4674,  -77.6723,  -62.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6968, device='cuda:0', dtype=torch.float64)
tensor([ -37.9832, -106.7837,  -93.7085,  -77.8974,  -62.7683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5991, device='cuda:0', dtype=torch.float64)
tensor([ -38.0524, -106.9585,  -93.7925,  -78.0670,  -62.8891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6064, device='cuda:0', dtype=torch.float64)
tensor([ -38.1171, -107.2793,  -94.0104,  -78.3012,  -63.0574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5495, device='cuda:0', dtype=torch.float64)
tensor([ -38.2110, -107.6023,  -94.2333,  -78.5664,  -63.2261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6652, device='cuda:0', dtype=torch.float64)
tensor([ -38.3380, -107.9535,  -94.4684,  -78.8337,  -63.4167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6315, device='cuda:0', dtype=torch.float64)
tensor([ -38.5013, -108.2757,  -94.7595,  -79.1509,  -63.5949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6491, device='cuda:0', dtype=torch.float64)
tensor([ -38.6909, -108.6884,  -95.0389,  -79.5218,  -63.7803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5720, device='cuda:0', dtype=torch.float64)
tensor([ -38.8822, -109.1367,  -95.4231,  -79.9265,  -63.9882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6147, device='cuda:0', dtype=torch.float64)
tensor([ -39.0851, -109.5320,  -95.8057,  -80.3050,  -64.1936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6789, device='cuda:0', dtype=torch.float64)
tensor([ -39.2429, -109.8912,  -96.1199,  -80.6422,  -64.4470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6272, device='cuda:0', dtype=torch.float64)
tensor([ -39.4127, -110.2321,  -96.3939,  -80.9658,  -64.6500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6172, device='cuda:0', dtype=torch.float64)
tensor([ -39.5767, -110.3776,  -96.6025,  -81.1709,  -64.8672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6300, device='cuda:0', dtype=torch.float64)
tensor([ -39.7101, -110.6815,  -97.0945,  -81.4711,  -65.1287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6302, device='cuda:0', dtype=torch.float64)
tensor([ -39.8219, -110.8683,  -97.5845,  -81.6576,  -65.3586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6455, device='cuda:0', dtype=torch.float64)
tensor([ -39.9193, -111.2186,  -98.1407,  -81.8556,  -65.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5142, device='cuda:0', dtype=torch.float64)
tensor([ -40.0484, -111.4712,  -98.5907,  -82.0036,  -65.8583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5666, device='cuda:0', dtype=torch.float64)
tensor([ -40.2001, -111.9193,  -98.9991,  -82.2747,  -66.1084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5840, device='cuda:0', dtype=torch.float64)
tensor([ -40.3809, -112.3604,  -99.3334,  -82.5654,  -66.2706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5885, device='cuda:0', dtype=torch.float64)
tensor([ -40.5894, -112.8318,  -99.5951,  -82.9300,  -66.3817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7046, device='cuda:0', dtype=torch.float64)
tensor([ -40.7569, -113.1656,  -99.8467,  -83.1241,  -66.4970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6658, device='cuda:0', dtype=torch.float64)
tensor([ -40.8804, -113.6308, -100.3145,  -83.5741,  -66.6372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5541, device='cuda:0', dtype=torch.float64)
tensor([ -40.9858, -114.2172, -100.8726,  -84.1275,  -66.7745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5734, device='cuda:0', dtype=torch.float64)
tensor([ -41.0949, -114.6878, -101.3461,  -84.6740,  -66.9278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6677, device='cuda:0', dtype=torch.float64)
tensor([ -41.2139, -115.2542, -101.8086,  -85.2643,  -67.1441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6392, device='cuda:0', dtype=torch.float64)
tensor([ -41.2952, -115.9270, -102.3525,  -85.8883,  -67.3981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6183, device='cuda:0', dtype=torch.float64)
tensor([ -41.3734, -116.4605, -102.7067,  -86.3499,  -67.5610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4684, device='cuda:0', dtype=torch.float64)
tensor([ -41.4597, -117.0789, -103.0932,  -86.7654,  -67.7190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5832, device='cuda:0', dtype=torch.float64)
tensor([ -41.5387, -117.5177, -103.4381,  -87.0389,  -67.8957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6644, device='cuda:0', dtype=torch.float64)
tensor([ -41.6018, -117.9984, -103.8203,  -87.3019,  -68.1108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6173, device='cuda:0', dtype=torch.float64)
tensor([ -41.7116, -118.6369, -104.1673,  -87.6726,  -68.3175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5760, device='cuda:0', dtype=torch.float64)
tensor([ -41.7918, -119.3838, -104.6886,  -88.1705,  -68.5309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6609, device='cuda:0', dtype=torch.float64)
tensor([ -41.8538, -120.0404, -105.1556,  -88.6371,  -68.8072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6279, device='cuda:0', dtype=torch.float64)
tensor([ -41.9432, -120.8795, -105.8705,  -89.2036,  -69.0279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6023, device='cuda:0', dtype=torch.float64)
tensor([ -42.0646, -121.7190, -106.6484,  -89.7761,  -69.2425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5327, device='cuda:0', dtype=torch.float64)
tensor([ -42.1958, -122.5474, -107.3997,  -90.3540,  -69.5139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6019, device='cuda:0', dtype=torch.float64)
tensor([ -42.3436, -123.4828, -108.0725,  -90.9783,  -69.7458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5257, device='cuda:0', dtype=torch.float64)
tensor([ -42.4847, -124.3258, -108.7537,  -91.4922,  -69.9500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5216, device='cuda:0', dtype=torch.float64)
tensor([ -42.6401, -124.9674, -109.4546,  -91.9086,  -70.0553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5527, device='cuda:0', dtype=torch.float64)
tensor([ -42.8242, -125.8030, -110.2105,  -92.4906,  -70.1548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5782, device='cuda:0', dtype=torch.float64)
tensor([ -42.9908, -126.6019, -111.0139,  -93.0093,  -70.2670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6105, device='cuda:0', dtype=torch.float64)
tensor([ -43.1895, -127.6893, -111.9479,  -93.7707,  -70.3852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5833, device='cuda:0', dtype=torch.float64)
tensor([ -43.3370, -128.5794, -112.7658,  -94.5342,  -70.4721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6234, device='cuda:0', dtype=torch.float64)
tensor([ -43.5139, -129.5194, -113.5911,  -95.2657,  -70.5320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6281, device='cuda:0', dtype=torch.float64)
tensor([ -43.6571, -130.4739, -114.3450,  -95.9146,  -70.6272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5777, device='cuda:0', dtype=torch.float64)
tensor([ -43.8193, -131.3327, -114.9886,  -96.5606,  -70.7145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4991, device='cuda:0', dtype=torch.float64)
tensor([ -43.9520, -132.2006, -115.6486,  -97.1471,  -70.8190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6403, device='cuda:0', dtype=torch.float64)
tensor([ -44.0759, -132.8317, -116.2069,  -97.4733,  -70.9434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6686, device='cuda:0', dtype=torch.float64)
tensor([ -44.0974, -133.0352, -116.5497,  -97.4294,  -71.1110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5562, device='cuda:0', dtype=torch.float64)
tensor([ -44.1254, -133.1214, -116.8304,  -97.3201,  -71.2375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5086, device='cuda:0', dtype=torch.float64)
tensor([ -44.1345, -133.4423, -117.1745,  -97.4116,  -71.3352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5281, device='cuda:0', dtype=torch.float64)
tensor([ -44.2202, -133.9121, -117.5017,  -97.5321,  -71.4226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5516, device='cuda:0', dtype=torch.float64)
tensor([ -44.3177, -134.2440, -117.8074,  -97.6498,  -71.5228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6148, device='cuda:0', dtype=torch.float64)
tensor([ -44.3148, -134.4065, -117.9097,  -97.5539,  -71.6000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6306, device='cuda:0', dtype=torch.float64)
tensor([ -44.3221, -134.5838, -118.0419,  -97.5426,  -71.7077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4791, device='cuda:0', dtype=torch.float64)
tensor([ -44.3322, -134.9187, -118.2493,  -97.6122,  -71.8235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5056, device='cuda:0', dtype=torch.float64)
tensor([ -44.3410, -135.1913, -118.4817,  -97.7720,  -72.0098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7347, device='cuda:0', dtype=torch.float64)
tensor([ -44.2704, -135.5093, -118.7621,  -98.0440,  -72.1639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4748, device='cuda:0', dtype=torch.float64)
tensor([ -44.2570, -135.7873, -119.1444,  -98.3543,  -72.4046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6402, device='cuda:0', dtype=torch.float64)
tensor([ -44.2403, -136.0850, -119.4237,  -98.7440,  -72.5896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5481, device='cuda:0', dtype=torch.float64)
tensor([ -44.2505, -136.2146, -119.7360,  -99.1061,  -72.8379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5080, device='cuda:0', dtype=torch.float64)
tensor([ -44.2246, -136.2822, -120.0219,  -99.3285,  -73.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5991, device='cuda:0', dtype=torch.float64)
tensor([ -44.1621, -136.3832, -120.2796,  -99.4684,  -73.4025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5536, device='cuda:0', dtype=torch.float64)
tensor([ -44.0435, -136.5628, -120.5702,  -99.6387,  -73.7085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6016, device='cuda:0', dtype=torch.float64)
tensor([ -43.9529, -136.7995, -120.7491,  -99.8035,  -73.9054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6675, device='cuda:0', dtype=torch.float64)
tensor([ -43.8516, -137.3702, -120.9295, -100.1760,  -74.0535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5324, device='cuda:0', dtype=torch.float64)
tensor([ -43.7641, -138.0951, -121.2070, -100.6916,  -74.2185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5423, device='cuda:0', dtype=torch.float64)
tensor([ -43.7617, -138.8416, -121.5818, -101.2350,  -74.4033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5096, device='cuda:0', dtype=torch.float64)
tensor([ -43.7779, -139.5664, -122.1147, -101.8869,  -74.6312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5782, device='cuda:0', dtype=torch.float64)
tensor([ -43.8114, -140.0421, -122.4310, -102.4715,  -74.8243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5655, device='cuda:0', dtype=torch.float64)
tensor([ -43.8754, -140.4312, -122.7377, -103.0867,  -75.0032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5133, device='cuda:0', dtype=torch.float64)
tensor([ -43.9537, -140.8392, -122.9795, -103.5711,  -75.1036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5210, device='cuda:0', dtype=torch.float64)
tensor([ -44.0247, -141.0988, -123.1583, -103.9508,  -75.2412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5815, device='cuda:0', dtype=torch.float64)
tensor([ -44.1506, -141.4913, -123.3725, -104.4469,  -75.4625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5754, device='cuda:0', dtype=torch.float64)
tensor([ -44.2508, -142.0037, -123.8475, -105.1432,  -75.7451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6394, device='cuda:0', dtype=torch.float64)
tensor([ -44.3939, -142.4448, -124.3911, -106.0202,  -76.0345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6885, device='cuda:0', dtype=torch.float64)
tensor([ -44.5084, -142.9957, -124.8916, -106.8758,  -76.3667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5338, device='cuda:0', dtype=torch.float64)
tensor([ -44.6344, -143.4998, -125.4022, -107.5811,  -76.7123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7042, device='cuda:0', dtype=torch.float64)
tensor([ -44.7464, -143.8498, -125.8497, -108.1783,  -77.0236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5596, device='cuda:0', dtype=torch.float64)
tensor([ -44.8329, -144.1135, -126.3050, -108.7256,  -77.3029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5218, device='cuda:0', dtype=torch.float64)
tensor([ -44.8806, -144.3513, -126.7504, -109.2568,  -77.6333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5307, device='cuda:0', dtype=torch.float64)
tensor([ -44.8795, -144.6449, -127.1352, -109.7360,  -77.9751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7222, device='cuda:0', dtype=torch.float64)
tensor([ -44.9430, -145.0873, -127.6032, -110.3073,  -78.2509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5227, device='cuda:0', dtype=torch.float64)
tensor([ -44.9597, -145.2572, -127.8779, -110.6477,  -78.4854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5689, device='cuda:0', dtype=torch.float64)
tensor([ -45.0370, -145.5099, -128.1407, -111.0465,  -78.6645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6423, device='cuda:0', dtype=torch.float64)
tensor([ -45.1180, -145.8362, -128.3419, -111.3520,  -78.7749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5899, device='cuda:0', dtype=torch.float64)
tensor([ -45.1856, -146.3167, -128.7549, -111.8678,  -78.8739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5340, device='cuda:0', dtype=torch.float64)
tensor([ -45.2757, -146.8704, -129.0369, -112.4344,  -78.9199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5177, device='cuda:0', dtype=torch.float64)
tensor([ -45.3740, -147.2611, -129.2752, -112.9437,  -78.9597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5223, device='cuda:0', dtype=torch.float64)
tensor([ -45.4545, -147.6013, -129.5114, -113.3226,  -79.0043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4703, device='cuda:0', dtype=torch.float64)
tensor([ -45.5630, -148.0455, -129.7188, -113.7154,  -78.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6072, device='cuda:0', dtype=torch.float64)
tensor([ -45.6344, -148.2308, -129.8731, -113.9418,  -78.9563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5959, device='cuda:0', dtype=torch.float64)
tensor([ -45.7373, -148.3544, -130.0090, -114.1011,  -78.9478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6481, device='cuda:0', dtype=torch.float64)
tensor([ -45.9034, -148.5743, -130.2484, -114.3658,  -79.0384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5612, device='cuda:0', dtype=torch.float64)
tensor([ -46.0520, -148.7078, -130.2825, -114.3982,  -79.1629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5461, device='cuda:0', dtype=torch.float64)
tensor([ -46.2513, -148.8255, -130.4917, -114.6096,  -79.3067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5855, device='cuda:0', dtype=torch.float64)
tensor([ -46.4940, -149.2557, -130.7906, -115.1635,  -79.4881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6163, device='cuda:0', dtype=torch.float64)
tensor([ -46.7969, -149.7852, -131.3067, -115.9917,  -79.7164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4927, device='cuda:0', dtype=torch.float64)
tensor([ -47.1438, -150.4523, -131.8472, -116.8869,  -79.8710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5421, device='cuda:0', dtype=torch.float64)
tensor([ -47.4566, -151.0393, -132.2923, -117.6785,  -79.9987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5310, device='cuda:0', dtype=torch.float64)
tensor([ -47.7753, -151.4856, -132.7166, -118.4257,  -80.1570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6158, device='cuda:0', dtype=torch.float64)
tensor([ -48.0474, -151.9268, -133.0593, -119.0781,  -80.3003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5780, device='cuda:0', dtype=torch.float64)
tensor([ -48.2835, -152.2869, -133.2118, -119.5570,  -80.4031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5749, device='cuda:0', dtype=torch.float64)
tensor([ -48.6143, -152.7661, -133.3501, -119.9913,  -80.4696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5628, device='cuda:0', dtype=torch.float64)
tensor([ -48.9498, -153.1141, -133.4459, -120.3187,  -80.5278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5865, device='cuda:0', dtype=torch.float64)
tensor([ -49.2113, -153.2998, -133.4334, -120.4532,  -80.6324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6149, device='cuda:0', dtype=torch.float64)
tensor([ -49.4945, -153.7405, -133.5045, -120.8055,  -80.6939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5563, device='cuda:0', dtype=torch.float64)
tensor([ -49.7341, -154.4392, -133.6376, -121.3723,  -80.7920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5624, device='cuda:0', dtype=torch.float64)
tensor([ -49.9193, -155.2397, -133.9949, -122.0030,  -80.9238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5398, device='cuda:0', dtype=torch.float64)
tensor([ -50.0914, -155.7416, -134.3403, -122.3942,  -81.0202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4939, device='cuda:0', dtype=torch.float64)
tensor([ -50.2647, -156.2790, -134.7503, -122.7686,  -81.1855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6115, device='cuda:0', dtype=torch.float64)
tensor([ -50.3986, -156.8702, -135.3233, -123.2635,  -81.3171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6210, device='cuda:0', dtype=torch.float64)
tensor([ -50.5331, -157.3448, -135.8837, -123.6466,  -81.4271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5641, device='cuda:0', dtype=torch.float64)
tensor([ -50.6433, -157.8173, -136.3369, -124.0153,  -81.5133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6139, device='cuda:0', dtype=torch.float64)
tensor([ -50.7364, -158.3602, -136.7839, -124.3613,  -81.4743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5333, device='cuda:0', dtype=torch.float64)
tensor([ -50.8562, -158.9914, -137.3188, -124.9071,  -81.4752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6394, device='cuda:0', dtype=torch.float64)
tensor([ -51.0694, -159.8471, -137.8759, -125.7606,  -81.5991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6275, device='cuda:0', dtype=torch.float64)
tensor([ -51.3036, -160.8734, -138.4817, -126.8076,  -81.6991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6070, device='cuda:0', dtype=torch.float64)
tensor([ -51.5522, -161.9705, -139.0907, -127.8485,  -81.8707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5558, device='cuda:0', dtype=torch.float64)
tensor([ -51.7921, -163.1706, -139.7240, -128.9244,  -82.0609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5356, device='cuda:0', dtype=torch.float64)
tensor([ -52.0428, -164.3162, -140.3012, -129.9488,  -82.2414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5100, device='cuda:0', dtype=torch.float64)
tensor([ -52.2383, -165.4323, -140.7688, -130.7496,  -82.4247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5751, device='cuda:0', dtype=torch.float64)
tensor([ -52.4623, -166.7942, -141.3597, -131.6939,  -82.6198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5712, device='cuda:0', dtype=torch.float64)
tensor([ -52.6332, -168.1173, -141.7024, -132.5481,  -82.7501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5876, device='cuda:0', dtype=torch.float64)
tensor([ -52.7725, -169.2366, -141.8528, -133.2316,  -82.8433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6324, device='cuda:0', dtype=torch.float64)
tensor([ -52.9512, -170.2012, -142.0402, -133.8954,  -82.9637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5728, device='cuda:0', dtype=torch.float64)
tensor([ -53.1903, -171.0501, -142.3100, -134.6539,  -83.1494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5515, device='cuda:0', dtype=torch.float64)
tensor([ -53.4332, -171.5319, -142.4472, -135.2403,  -83.3825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5392, device='cuda:0', dtype=torch.float64)
tensor([ -53.7025, -171.7112, -142.5782, -135.8787,  -83.5462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6335, device='cuda:0', dtype=torch.float64)
tensor([ -54.0466, -172.1982, -142.9358, -136.6936,  -83.7576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5616, device='cuda:0', dtype=torch.float64)
tensor([ -54.3492, -172.7362, -143.1367, -137.4645,  -83.9589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5502, device='cuda:0', dtype=torch.float64)
tensor([ -54.6172, -173.3050, -143.5122, -138.3471,  -84.1896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5250, device='cuda:0', dtype=torch.float64)
tensor([ -54.8728, -173.8093, -143.8232, -139.1261,  -84.4390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6011, device='cuda:0', dtype=torch.float64)
tensor([ -55.1167, -174.4858, -144.2336, -140.0595,  -84.7375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4939, device='cuda:0', dtype=torch.float64)
tensor([ -55.3537, -175.1439, -144.5778, -140.8072,  -85.0026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5097, device='cuda:0', dtype=torch.float64)
tensor([ -55.5301, -175.5769, -144.7201, -141.4456,  -85.2431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5749, device='cuda:0', dtype=torch.float64)
tensor([ -55.7422, -175.8575, -144.9328, -141.9891,  -85.4480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5452, device='cuda:0', dtype=torch.float64)
tensor([ -55.9652, -176.2523, -145.2253, -142.5839,  -85.6187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5289, device='cuda:0', dtype=torch.float64)
tensor([ -56.2207, -176.7379, -145.4811, -143.2850,  -85.7799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5289, device='cuda:0', dtype=torch.float64)
tensor([ -56.4752, -177.1061, -145.6883, -143.9797,  -85.8482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5438, device='cuda:0', dtype=torch.float64)
tensor([ -56.6947, -177.3138, -145.7353, -144.5688,  -85.9094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5341, device='cuda:0', dtype=torch.float64)
tensor([ -56.8407, -177.5015, -145.7699, -144.8847,  -86.0436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5647, device='cuda:0', dtype=torch.float64)
tensor([ -56.9628, -177.5282, -145.7923, -145.1437,  -86.2798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5679, device='cuda:0', dtype=torch.float64)
tensor([ -57.1513, -177.6171, -145.8476, -145.5683,  -86.5284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5507, device='cuda:0', dtype=torch.float64)
tensor([ -57.4133, -177.6692, -146.1037, -146.0200,  -86.7989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5407, device='cuda:0', dtype=torch.float64)
tensor([ -57.6541, -177.5245, -146.0820, -146.1869,  -86.9718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6378, device='cuda:0', dtype=torch.float64)
tensor([ -57.8377, -177.2677, -145.8831, -146.1512,  -87.1062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5313, device='cuda:0', dtype=torch.float64)
tensor([ -58.0294, -177.2227, -145.7741, -146.2840,  -87.2666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5053, device='cuda:0', dtype=torch.float64)
tensor([ -58.2151, -177.1322, -145.6272, -146.3301,  -87.4142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5076, device='cuda:0', dtype=torch.float64)
tensor([ -58.3647, -177.0454, -145.4778, -146.3335,  -87.5387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4858, device='cuda:0', dtype=torch.float64)
tensor([ -58.4827, -176.9656, -145.3745, -146.3767,  -87.7878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6154, device='cuda:0', dtype=torch.float64)
tensor([ -58.5718, -176.7113, -145.2490, -146.2789,  -88.0457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5216, device='cuda:0', dtype=torch.float64)
tensor([ -58.6431, -176.3863, -145.0023, -146.0787,  -88.2689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5427, device='cuda:0', dtype=torch.float64)
tensor([ -58.7205, -176.1378, -144.8003, -145.9059,  -88.4665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5876, device='cuda:0', dtype=torch.float64)
tensor([ -58.7514, -175.7908, -144.5840, -145.6677,  -88.6863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3950, device='cuda:0', dtype=torch.float64)
tensor([ -58.7564, -175.4104, -144.2884, -145.3580,  -88.8893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4683, device='cuda:0', dtype=torch.float64)
tensor([ -58.7344, -175.0359, -143.9330, -145.0779,  -89.1111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5245, device='cuda:0', dtype=torch.float64)
tensor([ -58.7645, -174.6060, -143.7355, -144.7986,  -89.3388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4676, device='cuda:0', dtype=torch.float64)
tensor([ -58.8386, -174.3082, -143.5161, -144.6191,  -89.5120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5586, device='cuda:0', dtype=torch.float64)
tensor([ -58.8842, -174.0005, -143.2584, -144.4692,  -89.6286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5115, device='cuda:0', dtype=torch.float64)
tensor([ -58.9601, -173.9441, -143.1339, -144.4701,  -89.6934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4890, device='cuda:0', dtype=torch.float64)
tensor([ -58.9891, -173.8972, -143.0255, -144.4269,  -89.7940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4181, device='cuda:0', dtype=torch.float64)
tensor([ -59.0309, -173.9202, -142.9813, -144.4428,  -89.8845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4636, device='cuda:0', dtype=torch.float64)
tensor([ -59.0947, -174.0346, -143.0253, -144.6601,  -90.0235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4505, device='cuda:0', dtype=torch.float64)
tensor([ -59.2309, -174.2677, -143.1593, -144.9328,  -90.1833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5011, device='cuda:0', dtype=torch.float64)
tensor([ -59.3925, -174.6431, -143.2939, -145.3159,  -90.3803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4773, device='cuda:0', dtype=torch.float64)
tensor([ -59.4980, -175.2497, -143.5550, -145.8427,  -90.5882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5609, device='cuda:0', dtype=torch.float64)
tensor([ -59.6375, -176.1638, -144.0893, -146.6730,  -90.8678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5574, device='cuda:0', dtype=torch.float64)
tensor([ -59.8381, -177.5266, -144.8299, -147.9370,  -91.1382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5283, device='cuda:0', dtype=torch.float64)
tensor([ -59.9974, -178.9079, -145.5126, -149.2861,  -91.4256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5746, device='cuda:0', dtype=torch.float64)
tensor([ -60.1393, -180.5029, -146.2792, -150.7994,  -91.7649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4241, device='cuda:0', dtype=torch.float64)
tensor([ -60.3350, -182.0210, -147.0601, -152.2933,  -92.1278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4881, device='cuda:0', dtype=torch.float64)
tensor([ -60.5987, -183.7388, -147.9786, -153.9385,  -92.4857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4897, device='cuda:0', dtype=torch.float64)
tensor([ -60.7906, -185.3862, -148.8917, -155.5882,  -92.9194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5050, device='cuda:0', dtype=torch.float64)
tensor([ -60.9863, -186.9675, -149.8114, -157.0224,  -93.2820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5257, device='cuda:0', dtype=torch.float64)
tensor([ -61.1542, -188.3877, -150.6177, -158.2623,  -93.5484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5308, device='cuda:0', dtype=torch.float64)
tensor([ -61.3267, -189.6507, -151.3712, -159.4203,  -93.7862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4984, device='cuda:0', dtype=torch.float64)
tensor([ -61.4205, -190.7958, -151.8987, -160.3814,  -93.9777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4881, device='cuda:0', dtype=torch.float64)
tensor([ -61.4673, -191.4134, -152.2436, -161.0057,  -94.2197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4831, device='cuda:0', dtype=torch.float64)
tensor([ -61.5126, -191.9245, -152.5737, -161.4690,  -94.4663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5113, device='cuda:0', dtype=torch.float64)
tensor([ -61.5922, -192.4686, -152.9907, -161.8383,  -94.7314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4783, device='cuda:0', dtype=torch.float64)
tensor([ -61.6250, -192.9997, -153.3252, -162.3303,  -94.9768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4991, device='cuda:0', dtype=torch.float64)
tensor([ -61.6604, -193.1254, -153.5894, -162.6814,  -95.1668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5371, device='cuda:0', dtype=torch.float64)
tensor([ -61.7221, -193.3346, -153.9072, -163.2905,  -95.4935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4902, device='cuda:0', dtype=torch.float64)
tensor([ -61.8323, -193.7057, -154.3682, -164.1262,  -95.7755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4815, device='cuda:0', dtype=torch.float64)
tensor([ -61.9492, -194.2604, -154.9960, -165.2008,  -96.1238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4517, device='cuda:0', dtype=torch.float64)
tensor([ -62.0152, -194.5841, -155.4490, -166.1085,  -96.4415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4702, device='cuda:0', dtype=torch.float64)
tensor([ -62.1310, -194.9947, -155.9199, -166.9901,  -96.6847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5835, device='cuda:0', dtype=torch.float64)
tensor([ -62.2202, -195.1137, -156.2413, -167.5452,  -96.8927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5131, device='cuda:0', dtype=torch.float64)
tensor([ -62.3407, -195.4269, -156.6030, -168.1604,  -97.1124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4682, device='cuda:0', dtype=torch.float64)
tensor([ -62.4816, -195.8701, -156.9948, -168.8214,  -97.3659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5020, device='cuda:0', dtype=torch.float64)
tensor([ -62.6480, -196.3271, -157.3482, -169.4358,  -97.6258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4845, device='cuda:0', dtype=torch.float64)
tensor([ -62.8632, -196.9225, -157.8154, -170.0650,  -97.9130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5979, device='cuda:0', dtype=torch.float64)
tensor([ -63.0904, -197.3753, -158.3355, -170.7277,  -98.2070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5339, device='cuda:0', dtype=torch.float64)
tensor([ -63.3396, -197.9710, -158.8656, -171.4520,  -98.4923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5067, device='cuda:0', dtype=torch.float64)
tensor([ -63.5969, -198.5582, -159.4195, -172.2192,  -98.7777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5160, device='cuda:0', dtype=torch.float64)
tensor([ -63.8941, -198.9974, -159.8033, -172.7184,  -99.0528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4126, device='cuda:0', dtype=torch.float64)
tensor([ -64.1827, -199.3941, -160.1583, -173.1491,  -99.3607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5633, device='cuda:0', dtype=torch.float64)
tensor([ -64.4219, -199.5063, -160.3220, -173.3391,  -99.5412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5499, device='cuda:0', dtype=torch.float64)
tensor([ -64.7413, -199.9131, -160.6717, -173.8534,  -99.8077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4736, device='cuda:0', dtype=torch.float64)
tensor([ -65.0936, -200.4868, -161.1271, -174.6301, -100.1070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4632, device='cuda:0', dtype=torch.float64)
tensor([ -65.3083, -200.8036, -161.5542, -175.1807, -100.3596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5625, device='cuda:0', dtype=torch.float64)
tensor([ -65.4880, -200.9855, -161.9236, -175.5443, -100.6518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4408, device='cuda:0', dtype=torch.float64)
tensor([ -65.5993, -201.3018, -162.2743, -175.8766, -100.9072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5578, device='cuda:0', dtype=torch.float64)
tensor([ -65.6604, -201.3807, -162.4400, -176.0020, -101.1152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4658, device='cuda:0', dtype=torch.float64)
tensor([ -65.7125, -201.5416, -162.6901, -176.2472, -101.3819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5711, device='cuda:0', dtype=torch.float64)
tensor([ -65.7759, -201.9187, -162.9894, -176.6751, -101.6675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4348, device='cuda:0', dtype=torch.float64)
tensor([ -65.8490, -202.3510, -163.2826, -177.1478, -101.9595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5255, device='cuda:0', dtype=torch.float64)
tensor([ -65.8872, -202.7163, -163.5790, -177.5193, -102.2444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4527, device='cuda:0', dtype=torch.float64)
tensor([ -65.8880, -203.1725, -163.9020, -178.0100, -102.5604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4222, device='cuda:0', dtype=torch.float64)
tensor([ -65.8742, -203.4406, -164.1241, -178.4978, -102.8434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5910, device='cuda:0', dtype=torch.float64)
tensor([ -65.9233, -204.2422, -164.7867, -179.4574, -103.3304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5118, device='cuda:0', dtype=torch.float64)
tensor([ -66.0502, -205.2000, -165.4739, -180.4485, -103.7662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4321, device='cuda:0', dtype=torch.float64)
tensor([ -66.1582, -206.1257, -166.1759, -181.4219, -104.1919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5429, device='cuda:0', dtype=torch.float64)
tensor([ -66.3186, -207.0501, -166.7866, -182.2428, -104.5521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4317, device='cuda:0', dtype=torch.float64)
tensor([ -66.5131, -208.0522, -167.4144, -183.2034, -104.8165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4943, device='cuda:0', dtype=torch.float64)
tensor([ -66.6559, -208.9550, -168.0377, -183.9812, -105.0779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5260, device='cuda:0', dtype=torch.float64)
tensor([ -66.8209, -209.9422, -168.7560, -184.8511, -105.4279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4746, device='cuda:0', dtype=torch.float64)
tensor([ -67.0008, -210.8786, -169.4707, -185.8250, -105.7906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4973, device='cuda:0', dtype=torch.float64)
tensor([ -67.1323, -211.5441, -170.0072, -186.5377, -106.0211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4567, device='cuda:0', dtype=torch.float64)
tensor([ -67.2366, -212.0294, -170.4762, -187.1711, -106.2358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4705, device='cuda:0', dtype=torch.float64)
tensor([ -67.3954, -212.3799, -170.8216, -187.6951, -106.3687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4385, device='cuda:0', dtype=torch.float64)
tensor([ -67.5031, -212.3946, -171.0846, -188.1037, -106.4825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4296, device='cuda:0', dtype=torch.float64)
tensor([ -67.6609, -212.4152, -171.3054, -188.5089, -106.6130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4032, device='cuda:0', dtype=torch.float64)
tensor([ -67.8048, -212.3963, -171.4975, -188.7098, -106.7488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4172, device='cuda:0', dtype=torch.float64)
tensor([ -67.9874, -212.4489, -171.6998, -188.9992, -106.8980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6374, device='cuda:0', dtype=torch.float64)
tensor([ -68.2058, -212.5905, -171.7739, -189.3927, -106.9274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5175, device='cuda:0', dtype=torch.float64)
tensor([ -68.4513, -213.1127, -171.9274, -190.0627, -107.0234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4932, device='cuda:0', dtype=torch.float64)
tensor([ -68.6804, -213.5933, -172.1627, -190.6904, -107.1215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4498, device='cuda:0', dtype=torch.float64)
tensor([ -68.9391, -214.2785, -172.4641, -191.3184, -107.2338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4157, device='cuda:0', dtype=torch.float64)
tensor([ -69.0958, -214.5350, -172.5966, -191.6939, -107.3074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5127, device='cuda:0', dtype=torch.float64)
tensor([ -69.2958, -214.6308, -172.6960, -192.0375, -107.3708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4421, device='cuda:0', dtype=torch.float64)
tensor([ -69.5027, -214.9403, -172.7930, -192.3133, -107.4963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4214, device='cuda:0', dtype=torch.float64)
tensor([ -69.6840, -215.2544, -172.8862, -192.5224, -107.6121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4355, device='cuda:0', dtype=torch.float64)
tensor([ -69.8209, -215.4390, -172.9609, -192.6025, -107.6839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4493, device='cuda:0', dtype=torch.float64)
tensor([ -70.0052, -215.7711, -173.1219, -193.0496, -107.7587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4927, device='cuda:0', dtype=torch.float64)
tensor([ -70.2133, -215.9858, -173.2875, -193.5477, -107.8729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4184, device='cuda:0', dtype=torch.float64)
tensor([ -70.3703, -216.0375, -173.2128, -193.7317, -107.9487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5106, device='cuda:0', dtype=torch.float64)
tensor([ -70.5156, -216.0403, -173.1031, -193.8835, -108.0046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4584, device='cuda:0', dtype=torch.float64)
tensor([ -70.6809, -216.0607, -172.9044, -194.1262, -107.9524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4182, device='cuda:0', dtype=torch.float64)
tensor([ -70.8021, -216.0994, -172.6272, -194.4608, -107.9525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4828, device='cuda:0', dtype=torch.float64)
tensor([ -70.9879, -215.9597, -172.3940, -194.6613, -107.9242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4002, device='cuda:0', dtype=torch.float64)
tensor([ -71.1335, -215.9055, -172.1845, -194.8924, -107.9187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3848, device='cuda:0', dtype=torch.float64)
tensor([ -71.2350, -215.8680, -171.8809, -195.1028, -107.8834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4606, device='cuda:0', dtype=torch.float64)
tensor([ -71.2781, -215.9104, -171.7284, -195.3370, -107.9913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5457, device='cuda:0', dtype=torch.float64)
tensor([ -71.3838, -215.9514, -171.7620, -195.6832, -108.0653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4591, device='cuda:0', dtype=torch.float64)
tensor([ -71.5033, -216.0233, -171.9173, -196.2464, -108.1794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5030, device='cuda:0', dtype=torch.float64)
tensor([ -71.6996, -216.2238, -172.0901, -196.9232, -108.3024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4166, device='cuda:0', dtype=torch.float64)
tensor([ -71.8245, -216.3944, -172.3390, -197.5967, -108.4073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5219, device='cuda:0', dtype=torch.float64)
tensor([ -71.8927, -216.4956, -172.3175, -198.1905, -108.4130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4412, device='cuda:0', dtype=torch.float64)
tensor([ -71.9080, -216.4504, -172.2452, -198.6186, -108.4496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3883, device='cuda:0', dtype=torch.float64)
tensor([ -71.9736, -216.4152, -172.2614, -199.0258, -108.4941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3802, device='cuda:0', dtype=torch.float64)
tensor([ -72.0557, -216.6374, -172.3651, -199.6518, -108.5329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3841, device='cuda:0', dtype=torch.float64)
tensor([ -72.1708, -216.9740, -172.7493, -200.3212, -108.6840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3994, device='cuda:0', dtype=torch.float64)
tensor([ -72.2772, -217.2771, -173.2481, -200.8473, -108.8943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4573, device='cuda:0', dtype=torch.float64)
tensor([ -72.3420, -217.4903, -173.5679, -201.0583, -109.0440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4332, device='cuda:0', dtype=torch.float64)
tensor([ -72.4099, -217.9357, -173.8744, -201.5148, -109.1992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3958, device='cuda:0', dtype=torch.float64)
tensor([ -72.5299, -218.3809, -174.1833, -201.9087, -109.2697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4399, device='cuda:0', dtype=torch.float64)
tensor([ -72.6031, -218.6814, -174.4343, -202.1161, -109.3843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4357, device='cuda:0', dtype=torch.float64)
tensor([ -72.6304, -218.9179, -174.7221, -202.1842, -109.5195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4746, device='cuda:0', dtype=torch.float64)
tensor([ -72.6376, -219.4013, -175.0678, -202.4906, -109.7227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4009, device='cuda:0', dtype=torch.float64)
tensor([ -72.6311, -219.9538, -175.3943, -202.8860, -109.9004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4794, device='cuda:0', dtype=torch.float64)
tensor([ -72.5982, -220.4258, -175.6298, -203.1196, -110.1426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3715, device='cuda:0', dtype=torch.float64)
tensor([ -72.6366, -221.0361, -175.9836, -203.6004, -110.3965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5140, device='cuda:0', dtype=torch.float64)
tensor([ -72.7147, -221.7336, -176.3976, -204.2245, -110.6303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3650, device='cuda:0', dtype=torch.float64)
tensor([ -72.8146, -222.3637, -176.8468, -204.8880, -110.8679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3939, device='cuda:0', dtype=torch.float64)
tensor([ -72.9236, -222.9362, -177.3412, -205.5519, -111.1145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3878, device='cuda:0', dtype=torch.float64)
tensor([ -73.1128, -223.5923, -177.9429, -206.2407, -111.3896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4498, device='cuda:0', dtype=torch.float64)
tensor([ -73.2487, -224.0709, -178.4777, -206.7669, -111.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4702, device='cuda:0', dtype=torch.float64)
tensor([ -73.4774, -224.6781, -179.0393, -207.2568, -112.0000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4703, device='cuda:0', dtype=torch.float64)
tensor([ -73.7007, -225.2262, -179.7536, -207.9379, -112.3241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4140, device='cuda:0', dtype=torch.float64)
tensor([ -73.8440, -225.6049, -180.3694, -208.2888, -112.5825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4693, device='cuda:0', dtype=torch.float64)
tensor([ -74.0271, -226.0849, -180.9815, -208.8086, -112.8326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4774, device='cuda:0', dtype=torch.float64)
tensor([ -74.2306, -226.6338, -181.6658, -209.5538, -113.0585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5048, device='cuda:0', dtype=torch.float64)
tensor([ -74.4119, -226.9653, -182.2811, -210.1517, -113.2477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4966, device='cuda:0', dtype=torch.float64)
tensor([ -74.6331, -227.3333, -182.8681, -210.8116, -113.4248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4378, device='cuda:0', dtype=torch.float64)
tensor([ -74.8636, -227.3797, -183.3534, -211.3359, -113.5289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4057, device='cuda:0', dtype=torch.float64)
tensor([ -75.0379, -227.4476, -183.8856, -211.7366, -113.6695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3732, device='cuda:0', dtype=torch.float64)
tensor([ -75.1487, -227.4445, -184.4448, -212.2118, -113.7927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4084, device='cuda:0', dtype=torch.float64)
tensor([ -75.2026, -227.6075, -185.0886, -212.9563, -113.9814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4296, device='cuda:0', dtype=torch.float64)
tensor([ -75.2623, -228.0114, -185.7746, -214.0637, -114.1883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5305, device='cuda:0', dtype=torch.float64)
tensor([ -75.2584, -228.4648, -186.2905, -214.8866, -114.3504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4482, device='cuda:0', dtype=torch.float64)
tensor([ -75.2355, -228.8982, -186.6847, -215.6297, -114.4867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5513, device='cuda:0', dtype=torch.float64)
tensor([ -75.1587, -229.2507, -186.7877, -215.9124, -114.5337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4078, device='cuda:0', dtype=torch.float64)
tensor([ -75.1701, -229.7610, -187.2009, -216.5879, -114.6653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3734, device='cuda:0', dtype=torch.float64)
tensor([ -75.2046, -230.3544, -187.7760, -217.4953, -114.8211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5175, device='cuda:0', dtype=torch.float64)
tensor([ -75.2228, -231.0365, -188.5972, -218.7389, -115.0458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4342, device='cuda:0', dtype=torch.float64)
tensor([ -75.2622, -231.7288, -189.3992, -220.0054, -115.2635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4474, device='cuda:0', dtype=torch.float64)
tensor([ -75.3106, -232.5469, -190.2505, -221.3660, -115.4729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4685, device='cuda:0', dtype=torch.float64)
tensor([ -75.3892, -233.2580, -191.0575, -222.5502, -115.7258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4495, device='cuda:0', dtype=torch.float64)
tensor([ -75.5133, -234.1164, -191.9283, -223.9940, -116.0458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4821, device='cuda:0', dtype=torch.float64)
tensor([ -75.6462, -235.0373, -192.7500, -225.4546, -116.3813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4003, device='cuda:0', dtype=torch.float64)
tensor([ -75.7645, -235.9654, -193.4500, -226.8463, -116.7105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4188, device='cuda:0', dtype=torch.float64)
tensor([ -75.8874, -236.9607, -194.0721, -228.2476, -117.0458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4341, device='cuda:0', dtype=torch.float64)
tensor([ -76.0532, -237.8605, -194.7317, -229.5840, -117.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3728, device='cuda:0', dtype=torch.float64)
tensor([ -76.2517, -238.7758, -195.3355, -230.8833, -117.7878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3793, device='cuda:0', dtype=torch.float64)
tensor([ -76.4942, -239.7964, -196.0021, -232.2927, -118.2955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4631, device='cuda:0', dtype=torch.float64)
tensor([ -76.7908, -240.8000, -196.5603, -233.7024, -118.7958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4306, device='cuda:0', dtype=torch.float64)
tensor([ -77.0101, -241.7565, -196.9708, -234.7412, -119.2289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3706, device='cuda:0', dtype=torch.float64)
tensor([ -77.2431, -242.5136, -197.1832, -235.5627, -119.5793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3872, device='cuda:0', dtype=torch.float64)
tensor([ -77.4055, -243.1855, -197.2569, -236.1038, -119.8404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4886, device='cuda:0', dtype=torch.float64)
tensor([ -77.6294, -243.7490, -197.0779, -236.5020, -120.1032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3846, device='cuda:0', dtype=torch.float64)
tensor([ -77.7645, -244.0887, -196.6612, -236.5129, -120.2672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3920, device='cuda:0', dtype=torch.float64)
tensor([ -77.8514, -244.3299, -196.1259, -236.5414, -120.4298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3296, device='cuda:0', dtype=torch.float64)
tensor([ -78.0148, -244.6195, -195.7275, -236.7161, -120.5562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4077, device='cuda:0', dtype=torch.float64)
tensor([ -78.1660, -244.8851, -195.3931, -236.8035, -120.6893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4208, device='cuda:0', dtype=torch.float64)
tensor([ -78.3521, -245.3930, -195.2585, -237.0887, -120.7391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3723, device='cuda:0', dtype=torch.float64)
tensor([ -78.5771, -246.0279, -195.2677, -237.6497, -120.8036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3928, device='cuda:0', dtype=torch.float64)
tensor([ -78.7661, -246.6151, -195.2083, -238.1810, -120.8633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4203, device='cuda:0', dtype=torch.float64)
tensor([ -78.8913, -247.0847, -195.0655, -238.5242, -120.8875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4454, device='cuda:0', dtype=torch.float64)
tensor([ -79.0541, -247.5671, -194.9890, -239.1416, -121.0219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4394, device='cuda:0', dtype=torch.float64)
tensor([ -79.2760, -248.2831, -195.2030, -240.0271, -121.2026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3701, device='cuda:0', dtype=torch.float64)
tensor([ -79.4944, -249.0864, -195.5289, -240.8215, -121.3950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4287, device='cuda:0', dtype=torch.float64)
tensor([ -79.6954, -249.9499, -195.7268, -241.5033, -121.5150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5338, device='cuda:0', dtype=torch.float64)
tensor([ -79.8997, -250.6867, -196.1060, -242.1912, -121.7348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3847, device='cuda:0', dtype=torch.float64)
tensor([ -80.0653, -251.3150, -196.4760, -242.7314, -121.8520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3987, device='cuda:0', dtype=torch.float64)
tensor([ -80.2430, -251.9135, -196.9279, -243.0451, -121.9764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3857, device='cuda:0', dtype=torch.float64)
tensor([ -80.4392, -252.4234, -197.3680, -243.3676, -122.0927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3990, device='cuda:0', dtype=torch.float64)
tensor([ -80.6671, -252.9911, -197.8222, -243.6229, -122.2277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3596, device='cuda:0', dtype=torch.float64)
tensor([ -80.9322, -253.5807, -198.4124, -243.8474, -122.4338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4412, device='cuda:0', dtype=torch.float64)
tensor([ -81.2722, -254.0127, -199.0212, -243.9360, -122.6470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4206, device='cuda:0', dtype=torch.float64)
tensor([ -81.6323, -254.5634, -199.5077, -244.2655, -122.8183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3320, device='cuda:0', dtype=torch.float64)
tensor([ -81.9287, -255.0449, -200.0119, -244.6626, -123.0159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3631, device='cuda:0', dtype=torch.float64)
tensor([ -82.1665, -255.4472, -200.3482, -244.9429, -123.1665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4151, device='cuda:0', dtype=torch.float64)
tensor([ -82.3777, -255.9773, -200.9439, -245.4071, -123.3539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3490, device='cuda:0', dtype=torch.float64)
tensor([ -82.5737, -256.5974, -201.4781, -245.8776, -123.5712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4284, device='cuda:0', dtype=torch.float64)
tensor([ -82.7549, -257.2146, -201.9250, -246.5680, -123.7332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3837, device='cuda:0', dtype=torch.float64)
tensor([ -82.8915, -257.7515, -202.2581, -247.2289, -123.9102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4286, device='cuda:0', dtype=torch.float64)
tensor([ -82.9996, -258.3733, -202.4648, -247.8960, -124.0816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3620, device='cuda:0', dtype=torch.float64)
tensor([ -83.1244, -259.0648, -202.6027, -248.6442, -124.1860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3743, device='cuda:0', dtype=torch.float64)
tensor([ -83.2544, -259.6987, -202.8713, -249.5037, -124.3324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3915, device='cuda:0', dtype=torch.float64)
tensor([ -83.4000, -260.2328, -203.0728, -250.2409, -124.4921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4118, device='cuda:0', dtype=torch.float64)
tensor([ -83.6773, -260.8115, -203.2877, -251.0551, -124.6971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4143, device='cuda:0', dtype=torch.float64)
tensor([ -83.9990, -261.0781, -203.3362, -251.6723, -124.9086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3999, device='cuda:0', dtype=torch.float64)
tensor([ -84.3446, -261.5922, -203.4409, -252.5539, -125.1345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3484, device='cuda:0', dtype=torch.float64)
tensor([ -84.7727, -262.3599, -203.8109, -253.6876, -125.4161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3978, device='cuda:0', dtype=torch.float64)
tensor([ -85.2375, -263.0821, -204.1019, -254.7911, -125.6826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3655, device='cuda:0', dtype=torch.float64)
tensor([ -85.6578, -263.5378, -204.2919, -255.5946, -125.9159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3722, device='cuda:0', dtype=torch.float64)
tensor([ -86.0243, -263.7857, -204.3595, -256.0798, -126.0751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3242, device='cuda:0', dtype=torch.float64)
tensor([ -86.3406, -263.8859, -204.4640, -256.5101, -126.2282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3070, device='cuda:0', dtype=torch.float64)
tensor([ -86.6142, -263.8368, -204.5677, -256.8806, -126.3256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3275, device='cuda:0', dtype=torch.float64)
tensor([ -86.8165, -263.6551, -204.5903, -257.0670, -126.4129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4276, device='cuda:0', dtype=torch.float64)
tensor([ -87.0003, -263.4956, -204.7822, -257.1939, -126.5873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4614, device='cuda:0', dtype=torch.float64)
tensor([ -87.1776, -263.3553, -205.0004, -257.2362, -126.8035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3560, device='cuda:0', dtype=torch.float64)
tensor([ -87.4466, -263.4289, -205.1835, -257.3806, -126.9798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3461, device='cuda:0', dtype=torch.float64)
tensor([ -87.7231, -263.6878, -205.3846, -257.6728, -127.2164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3992, device='cuda:0', dtype=torch.float64)
tensor([ -88.0563, -264.0161, -205.6161, -258.0378, -127.4147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4036, device='cuda:0', dtype=torch.float64)
tensor([ -88.3220, -264.2773, -205.9060, -258.4433, -127.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4045, device='cuda:0', dtype=torch.float64)
tensor([ -88.5900, -264.7857, -206.3268, -259.1878, -127.7545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3522, device='cuda:0', dtype=torch.float64)
tensor([ -88.7902, -265.3818, -206.7043, -259.7233, -127.8425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3598, device='cuda:0', dtype=torch.float64)
tensor([ -89.0232, -265.9253, -207.0410, -260.2108, -127.8456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3051, device='cuda:0', dtype=torch.float64)
tensor([ -89.2717, -266.5828, -207.3658, -260.8540, -127.8848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3432, device='cuda:0', dtype=torch.float64)
tensor([ -89.5583, -267.4038, -207.8125, -261.7866, -127.9695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3591, device='cuda:0', dtype=torch.float64)
tensor([ -89.8373, -268.3248, -208.4177, -262.8403, -128.1070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4607, device='cuda:0', dtype=torch.float64)
tensor([ -90.1498, -269.3809, -209.1465, -263.8487, -128.2924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3227, device='cuda:0', dtype=torch.float64)
tensor([ -90.4433, -270.2390, -209.7262, -264.6011, -128.4219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3196, device='cuda:0', dtype=torch.float64)
tensor([ -90.7683, -271.1290, -210.3464, -265.4612, -128.5365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4171, device='cuda:0', dtype=torch.float64)
tensor([ -91.0869, -271.9277, -210.9383, -266.3772, -128.6613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3761, device='cuda:0', dtype=torch.float64)
tensor([ -91.3310, -272.5013, -211.5419, -266.8798, -128.7909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4258, device='cuda:0', dtype=torch.float64)
tensor([ -91.5316, -273.2908, -212.1793, -267.6363, -128.9414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3245, device='cuda:0', dtype=torch.float64)
tensor([ -91.7462, -274.0283, -212.6004, -268.4141, -129.0643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4554, device='cuda:0', dtype=torch.float64)
tensor([ -91.9030, -274.5878, -212.6646, -268.7878, -129.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3809, device='cuda:0', dtype=torch.float64)
tensor([ -91.8941, -275.0079, -212.4621, -268.8408, -128.9664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3083, device='cuda:0', dtype=torch.float64)
tensor([ -91.9906, -275.5035, -212.2475, -269.0934, -128.8701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3702, device='cuda:0', dtype=torch.float64)
tensor([ -92.0757, -276.2429, -212.1553, -269.5365, -128.8212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3472, device='cuda:0', dtype=torch.float64)
tensor([ -92.1973, -276.7002, -211.9268, -269.9458, -128.7297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3596, device='cuda:0', dtype=torch.float64)
tensor([ -92.2613, -277.0861, -211.5226, -270.2130, -128.6189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4946, device='cuda:0', dtype=torch.float64)
tensor([ -92.3253, -277.7524, -211.2689, -270.6972, -128.6113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3639, device='cuda:0', dtype=torch.float64)
tensor([ -92.4126, -278.3818, -211.1197, -271.2293, -128.5936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4125, device='cuda:0', dtype=torch.float64)
tensor([ -92.4481, -279.2436, -211.2954, -271.8705, -128.6346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3462, device='cuda:0', dtype=torch.float64)
tensor([ -92.4711, -279.9706, -211.3143, -272.2171, -128.7669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3840, device='cuda:0', dtype=torch.float64)
tensor([ -92.4508, -280.6232, -211.5825, -272.5548, -128.9752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3901, device='cuda:0', dtype=torch.float64)
tensor([ -92.4669, -281.3575, -211.9000, -273.1101, -129.2102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3345, device='cuda:0', dtype=torch.float64)
tensor([ -92.4680, -282.1397, -212.2685, -273.5699, -129.4759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4050, device='cuda:0', dtype=torch.float64)
tensor([ -92.5031, -283.0120, -212.7529, -274.0381, -129.7740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3190, device='cuda:0', dtype=torch.float64)
tensor([ -92.5486, -283.6839, -213.3104, -274.5171, -130.0620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3726, device='cuda:0', dtype=torch.float64)
tensor([ -92.5913, -284.2493, -213.5967, -274.6435, -130.2617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3413, device='cuda:0', dtype=torch.float64)
tensor([ -92.7462, -284.8683, -213.9177, -274.8032, -130.4510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2989, device='cuda:0', dtype=torch.float64)
tensor([ -92.9718, -285.4612, -214.1900, -275.0049, -130.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3438, device='cuda:0', dtype=torch.float64)
tensor([ -93.2322, -285.8769, -214.3840, -275.1527, -130.8348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3497, device='cuda:0', dtype=torch.float64)
tensor([ -93.5178, -286.2031, -214.4656, -275.1822, -131.0897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3849, device='cuda:0', dtype=torch.float64)
tensor([ -93.8233, -286.5161, -214.7554, -275.4382, -131.4042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3009, device='cuda:0', dtype=torch.float64)
tensor([ -94.0854, -286.7426, -214.9993, -275.5551, -131.7078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2863, device='cuda:0', dtype=torch.float64)
tensor([ -94.2812, -286.8035, -215.1434, -275.6241, -132.0514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3898, device='cuda:0', dtype=torch.float64)
tensor([ -94.4643, -286.8233, -215.4152, -275.6368, -132.4149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3269, device='cuda:0', dtype=torch.float64)
tensor([ -94.6340, -286.8565, -215.8109, -275.8065, -132.7847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3143, device='cuda:0', dtype=torch.float64)
tensor([ -94.8286, -287.0870, -216.2442, -276.1468, -133.1682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3595, device='cuda:0', dtype=torch.float64)
tensor([ -95.0706, -287.3699, -216.7166, -276.4838, -133.4366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3354, device='cuda:0', dtype=torch.float64)
tensor([ -95.3856, -287.8359, -217.2920, -276.9539, -133.7327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3129, device='cuda:0', dtype=torch.float64)
tensor([ -95.7376, -288.3848, -217.9129, -277.7251, -134.0207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3415, device='cuda:0', dtype=torch.float64)
tensor([ -96.1238, -288.7789, -218.2955, -278.3375, -134.3751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3585, device='cuda:0', dtype=torch.float64)
tensor([ -96.4765, -289.1608, -218.6344, -278.7658, -134.7451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3369, device='cuda:0', dtype=torch.float64)
tensor([ -96.8353, -289.5020, -219.0456, -279.3650, -135.1288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3588, device='cuda:0', dtype=torch.float64)
tensor([ -97.2083, -289.9476, -219.4506, -280.2304, -135.5913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3670, device='cuda:0', dtype=torch.float64)
tensor([ -97.4927, -290.3399, -219.8167, -281.1065, -136.0736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2784, device='cuda:0', dtype=torch.float64)
tensor([ -97.7567, -290.7350, -220.3053, -282.0643, -136.5235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3925, device='cuda:0', dtype=torch.float64)
tensor([ -98.0877, -291.2413, -220.9663, -283.0612, -137.0802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3796, device='cuda:0', dtype=torch.float64)
tensor([ -98.3422, -291.7133, -221.4703, -284.2160, -137.6150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3461, device='cuda:0', dtype=torch.float64)
tensor([ -98.5143, -292.0939, -221.8745, -285.2596, -138.0649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3336, device='cuda:0', dtype=torch.float64)
tensor([ -98.7656, -292.4743, -222.4434, -286.3635, -138.5273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2786, device='cuda:0', dtype=torch.float64)
tensor([ -99.0377, -292.7402, -222.9341, -287.4474, -138.9130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3199, device='cuda:0', dtype=torch.float64)
tensor([ -99.3747, -293.0051, -223.4197, -288.4818, -139.3036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4331, device='cuda:0', dtype=torch.float64)
tensor([ -99.5388, -293.2523, -223.5361, -289.0392, -139.5525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2996, device='cuda:0', dtype=torch.float64)
tensor([ -99.5981, -293.3315, -223.3515, -289.4253, -139.7025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3622, device='cuda:0', dtype=torch.float64)
tensor([ -99.7922, -293.5633, -223.2848, -290.0860, -139.8992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3781, device='cuda:0', dtype=torch.float64)
tensor([ -99.9187, -293.6562, -223.1389, -290.6899, -139.9788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3508, device='cuda:0', dtype=torch.float64)
tensor([-100.0931, -293.7052, -222.8985, -291.3415, -139.9238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3163, device='cuda:0', dtype=torch.float64)
tensor([-100.3211, -293.8686, -222.7978, -292.1725, -139.8806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3080, device='cuda:0', dtype=torch.float64)
tensor([-100.5192, -294.0966, -222.6884, -292.9942, -139.9005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2815, device='cuda:0', dtype=torch.float64)
tensor([-100.6766, -294.3080, -222.6474, -293.8044, -139.9204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3989, device='cuda:0', dtype=torch.float64)
tensor([-100.8102, -294.6093, -222.6895, -294.5017, -139.9745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3287, device='cuda:0', dtype=torch.float64)
tensor([-100.9331, -294.7279, -222.5555, -294.9308, -139.9100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3564, device='cuda:0', dtype=torch.float64)
tensor([-101.0394, -294.6814, -222.2602, -295.0566, -139.8088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3298, device='cuda:0', dtype=torch.float64)
tensor([-101.1323, -294.7635, -221.9774, -295.2017, -139.7093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4062, device='cuda:0', dtype=torch.float64)
tensor([-101.1277, -294.8177, -221.4541, -294.9688, -139.5149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3053, device='cuda:0', dtype=torch.float64)
tensor([-101.0829, -294.7171, -220.8548, -294.5641, -139.2913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2892, device='cuda:0', dtype=torch.float64)
tensor([-101.0441, -294.5998, -220.3861, -294.0910, -139.1227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3704, device='cuda:0', dtype=torch.float64)
tensor([-101.0452, -294.6138, -220.1872, -293.9788, -139.0291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3788, device='cuda:0', dtype=torch.float64)
tensor([-101.1303, -294.5637, -220.0664, -293.7042, -138.9660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3490, device='cuda:0', dtype=torch.float64)
tensor([-101.3075, -294.5519, -220.3068, -293.5950, -138.9628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3705, device='cuda:0', dtype=torch.float64)
tensor([-101.6887, -295.0569, -220.6685, -294.0475, -139.0220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3385, device='cuda:0', dtype=torch.float64)
tensor([-102.1967, -295.4469, -220.9549, -294.5793, -139.0266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3916, device='cuda:0', dtype=torch.float64)
tensor([-102.8632, -296.2038, -221.5720, -295.5738, -139.1203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3252, device='cuda:0', dtype=torch.float64)
tensor([-103.5480, -296.8412, -222.0957, -296.3495, -139.2041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3038, device='cuda:0', dtype=torch.float64)
tensor([-104.0588, -297.4712, -222.5619, -296.9280, -139.3104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3318, device='cuda:0', dtype=torch.float64)
tensor([-104.5667, -297.9780, -223.1125, -297.5893, -139.4170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3039, device='cuda:0', dtype=torch.float64)
tensor([-105.0353, -298.4924, -223.7898, -298.3238, -139.5923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2992, device='cuda:0', dtype=torch.float64)
tensor([-105.4581, -298.9088, -224.4334, -298.9277, -139.7186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3048, device='cuda:0', dtype=torch.float64)
tensor([-105.8242, -299.0298, -224.9101, -299.2615, -139.7492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3129, device='cuda:0', dtype=torch.float64)
tensor([-106.1443, -298.9544, -225.3389, -299.3866, -139.7675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3050, device='cuda:0', dtype=torch.float64)
tensor([-106.3793, -298.9286, -225.7690, -299.4788, -139.8474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3336, device='cuda:0', dtype=torch.float64)
tensor([-106.6783, -299.1044, -226.3828, -299.7815, -140.0219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3176, device='cuda:0', dtype=torch.float64)
tensor([-107.0886, -299.3881, -227.0763, -300.3084, -140.1784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3269, device='cuda:0', dtype=torch.float64)
tensor([-107.4684, -299.6242, -227.6919, -300.8175, -140.3330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3648, device='cuda:0', dtype=torch.float64)
tensor([-107.8513, -299.7484, -228.1982, -301.2295, -140.4467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3181, device='cuda:0', dtype=torch.float64)
tensor([-108.1227, -299.7157, -228.4070, -301.5566, -140.5118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3754, device='cuda:0', dtype=torch.float64)
tensor([-108.3793, -299.7653, -228.5849, -301.8658, -140.6792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3184, device='cuda:0', dtype=torch.float64)
tensor([-108.6626, -299.7471, -228.6366, -302.0914, -140.8229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3595, device='cuda:0', dtype=torch.float64)
tensor([-108.9190, -299.6773, -228.4711, -302.1282, -140.8610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2758, device='cuda:0', dtype=torch.float64)
tensor([-109.1299, -299.6935, -228.3679, -302.2882, -140.9905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3320, device='cuda:0', dtype=torch.float64)
tensor([-109.3436, -299.9430, -228.4872, -302.7887, -141.2482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3598, device='cuda:0', dtype=torch.float64)
tensor([-109.5169, -300.1269, -228.5717, -303.1906, -141.5085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4136, device='cuda:0', dtype=torch.float64)
tensor([-109.6133, -300.0899, -228.6305, -303.2777, -141.7440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3141, device='cuda:0', dtype=torch.float64)
tensor([-109.7310, -299.8840, -228.6982, -303.2671, -141.9666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2811, device='cuda:0', dtype=torch.float64)
tensor([-109.8726, -299.6818, -228.7058, -303.2715, -142.1506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3004, device='cuda:0', dtype=torch.float64)
tensor([-110.0254, -299.5349, -228.8602, -303.3733, -142.3937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2937, device='cuda:0', dtype=torch.float64)
tensor([-110.1979, -299.5573, -228.9497, -303.5788, -142.5950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3166, device='cuda:0', dtype=torch.float64)
tensor([-110.3661, -299.8390, -229.2013, -303.9009, -142.7855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3072, device='cuda:0', dtype=torch.float64)
tensor([-110.4945, -300.0767, -229.3012, -304.1627, -142.8946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2870, device='cuda:0', dtype=torch.float64)
tensor([-110.6298, -300.4416, -229.5707, -304.4900, -142.9952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3052, device='cuda:0', dtype=torch.float64)
tensor([-110.7961, -300.7974, -229.7434, -304.6638, -143.0473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3068, device='cuda:0', dtype=torch.float64)
tensor([-111.0337, -301.2289, -229.9854, -305.0127, -143.1416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3111, device='cuda:0', dtype=torch.float64)
tensor([-111.2494, -301.5811, -230.0793, -305.3116, -143.2277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2980, device='cuda:0', dtype=torch.float64)
tensor([-111.3777, -302.1890, -230.1427, -305.7463, -143.3095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2859, device='cuda:0', dtype=torch.float64)
tensor([-111.6399, -302.9813, -230.3643, -306.5251, -143.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3174, device='cuda:0', dtype=torch.float64)
tensor([-111.9783, -303.8150, -230.8086, -307.3704, -143.5895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3403, device='cuda:0', dtype=torch.float64)
tensor([-112.3854, -304.9426, -231.2971, -308.5044, -143.7805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2871, device='cuda:0', dtype=torch.float64)
tensor([-112.6769, -305.9589, -231.7355, -309.4554, -143.9508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3831, device='cuda:0', dtype=torch.float64)
tensor([-113.0304, -306.7180, -232.1550, -310.2897, -144.1353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3113, device='cuda:0', dtype=torch.float64)
tensor([-113.2496, -307.3150, -232.4483, -311.0368, -144.2711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2540, device='cuda:0', dtype=torch.float64)
tensor([-113.4048, -307.8236, -232.6404, -311.6465, -144.3216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3053, device='cuda:0', dtype=torch.float64)
tensor([-113.6430, -308.1973, -232.7597, -312.1287, -144.2961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2906, device='cuda:0', dtype=torch.float64)
tensor([-113.9288, -308.7425, -233.0196, -312.9000, -144.2863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3016, device='cuda:0', dtype=torch.float64)
tensor([-114.1665, -309.2433, -233.1841, -313.4237, -144.2552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2870, device='cuda:0', dtype=torch.float64)
tensor([-114.3362, -309.5468, -233.3377, -313.7920, -144.1974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3267, device='cuda:0', dtype=torch.float64)
tensor([-114.5217, -309.7458, -233.5102, -314.1057, -144.2048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2599, device='cuda:0', dtype=torch.float64)
tensor([-114.7340, -310.1105, -233.8340, -314.6917, -144.2860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2826, device='cuda:0', dtype=torch.float64)
tensor([-114.8988, -310.4656, -234.0489, -315.1691, -144.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3785, device='cuda:0', dtype=torch.float64)
tensor([-115.1401, -310.8735, -234.3189, -315.7424, -144.4096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3289, device='cuda:0', dtype=torch.float64)
tensor([-115.3228, -311.2895, -234.4968, -316.2066, -144.4505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3591, device='cuda:0', dtype=torch.float64)
tensor([-115.3764, -311.7494, -234.7468, -316.6986, -144.5373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2992, device='cuda:0', dtype=torch.float64)
tensor([-115.3394, -312.2081, -234.9160, -317.1183, -144.5923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3457, device='cuda:0', dtype=torch.float64)
tensor([-115.3534, -312.8437, -235.1688, -317.8527, -144.6926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2975, device='cuda:0', dtype=torch.float64)
tensor([-115.4011, -313.4470, -235.5575, -318.6019, -144.8988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2736, device='cuda:0', dtype=torch.float64)
tensor([-115.3494, -313.9307, -235.6874, -319.2179, -145.0136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2990, device='cuda:0', dtype=torch.float64)
tensor([-115.2224, -314.2867, -235.7873, -319.6065, -145.1381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3114, device='cuda:0', dtype=torch.float64)
tensor([-115.0711, -314.7779, -235.7584, -319.9603, -145.2139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2511, device='cuda:0', dtype=torch.float64)
tensor([-114.8992, -315.2138, -235.7584, -320.1318, -145.2939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2666, device='cuda:0', dtype=torch.float64)
tensor([-114.7421, -315.6164, -235.7408, -320.1650, -145.3215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5070, device='cuda:0', dtype=torch.float64)
tensor([-114.4005, -315.8848, -235.7928, -319.9405, -145.3957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3228, device='cuda:0', dtype=torch.float64)
tensor([-114.0196, -316.2447, -235.8396, -319.4671, -145.4773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3196, device='cuda:0', dtype=torch.float64)
tensor([-113.6636, -316.4203, -235.9343, -318.6573, -145.5733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3575, device='cuda:0', dtype=torch.float64)
tensor([-113.3874, -316.6127, -236.1833, -317.9192, -145.7315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3391, device='cuda:0', dtype=torch.float64)
tensor([-113.1341, -316.6922, -236.3536, -317.2003, -145.8258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2853, device='cuda:0', dtype=torch.float64)
tensor([-112.9952, -317.0850, -236.7817, -316.7283, -145.9879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3829, device='cuda:0', dtype=torch.float64)
tensor([-112.9404, -317.5612, -237.0438, -316.4087, -146.1620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2677, device='cuda:0', dtype=torch.float64)
tensor([-112.9621, -317.9894, -237.3196, -316.2227, -146.3215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2632, device='cuda:0', dtype=torch.float64)
tensor([-112.9912, -318.3144, -237.4747, -315.9408, -146.4433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3616, device='cuda:0', dtype=torch.float64)
tensor([-113.0875, -318.5246, -237.5780, -315.4829, -146.5269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3171, device='cuda:0', dtype=torch.float64)
tensor([-113.1302, -318.5705, -237.7453, -314.9372, -146.6061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2598, device='cuda:0', dtype=torch.float64)
tensor([-113.2316, -318.8010, -237.8472, -314.5613, -146.7463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2944, device='cuda:0', dtype=torch.float64)
tensor([-113.3140, -318.9888, -237.8727, -314.1572, -146.8300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3167, device='cuda:0', dtype=torch.float64)
tensor([-113.3806, -319.2674, -238.0772, -313.8273, -146.9240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2471, device='cuda:0', dtype=torch.float64)
tensor([-113.4929, -319.4306, -238.1569, -313.4957, -146.9757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2519, device='cuda:0', dtype=torch.float64)
tensor([-113.5878, -319.5827, -238.1123, -313.1125, -147.0195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2093, device='cuda:0', dtype=torch.float64)
tensor([-113.6690, -319.7763, -238.1163, -312.8379, -147.0599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3861, device='cuda:0', dtype=torch.float64)
tensor([-113.7675, -320.1101, -238.1277, -312.5429, -147.0883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2851, device='cuda:0', dtype=torch.float64)
tensor([-113.8936, -320.4940, -238.0699, -312.3625, -147.1380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3083, device='cuda:0', dtype=torch.float64)
tensor([-113.9561, -320.8523, -238.1062, -312.1911, -147.1482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2640, device='cuda:0', dtype=torch.float64)
tensor([-114.0646, -321.1720, -238.0547, -312.0960, -147.1186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2868, device='cuda:0', dtype=torch.float64)
tensor([-114.2640, -321.5986, -237.9645, -312.2736, -147.1531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2783, device='cuda:0', dtype=torch.float64)
tensor([-114.4357, -322.0700, -237.8202, -312.5038, -147.1095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2898, device='cuda:0', dtype=torch.float64)
tensor([-114.6189, -322.7144, -237.8126, -312.9765, -147.1512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2677, device='cuda:0', dtype=torch.float64)
tensor([-114.9123, -323.5058, -237.8841, -313.5989, -147.2597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2867, device='cuda:0', dtype=torch.float64)
tensor([-115.2725, -324.5839, -238.1598, -314.5397, -147.4517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2527, device='cuda:0', dtype=torch.float64)
tensor([-115.6579, -325.5638, -238.2263, -315.5020, -147.5739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2600, device='cuda:0', dtype=torch.float64)
tensor([-115.9638, -326.2972, -238.1836, -316.3497, -147.6858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2558, device='cuda:0', dtype=torch.float64)
tensor([-116.1622, -327.1205, -238.1145, -317.0986, -147.8016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2645, device='cuda:0', dtype=torch.float64)
tensor([-116.3696, -327.8914, -238.0602, -317.8061, -147.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2439, device='cuda:0', dtype=torch.float64)
tensor([-116.6063, -328.6769, -238.0997, -318.4615, -148.2208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2936, device='cuda:0', dtype=torch.float64)
tensor([-116.8794, -329.5230, -238.3108, -319.3020, -148.5469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2586, device='cuda:0', dtype=torch.float64)
tensor([-117.0742, -330.1190, -238.5376, -320.0640, -148.8623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3047, device='cuda:0', dtype=torch.float64)
tensor([-117.1653, -330.5809, -238.7519, -320.5619, -149.1333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2490, device='cuda:0', dtype=torch.float64)
tensor([-117.2828, -331.0501, -238.8706, -321.0496, -149.3193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2970, device='cuda:0', dtype=torch.float64)
tensor([-117.3434, -331.7779, -239.1584, -321.6924, -149.5103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2561, device='cuda:0', dtype=torch.float64)
tensor([-117.4278, -332.4571, -239.2788, -322.1354, -149.6255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2560, device='cuda:0', dtype=torch.float64)
tensor([-117.4031, -332.9583, -239.3996, -322.5090, -149.7436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2853, device='cuda:0', dtype=torch.float64)
tensor([-117.5281, -333.3174, -239.4540, -322.8559, -149.8352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3100, device='cuda:0', dtype=torch.float64)
tensor([-117.6157, -333.7088, -239.5352, -323.3399, -149.9000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2789, device='cuda:0', dtype=torch.float64)
tensor([-117.7187, -334.1959, -239.6913, -323.8490, -149.9739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2693, device='cuda:0', dtype=torch.float64)
tensor([-117.7987, -334.7104, -239.8748, -324.3380, -150.0955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2522, device='cuda:0', dtype=torch.float64)
tensor([-117.9499, -335.1850, -240.0906, -324.8056, -150.2441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2680, device='cuda:0', dtype=torch.float64)
tensor([-118.0737, -335.5382, -240.3306, -325.1838, -150.4200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2845, device='cuda:0', dtype=torch.float64)
tensor([-118.2201, -336.0768, -240.7023, -325.7350, -150.6654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3848, device='cuda:0', dtype=torch.float64)
tensor([-118.2555, -336.5363, -241.0440, -326.2259, -151.0094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3080, device='cuda:0', dtype=torch.float64)
tensor([-118.1355, -336.9613, -241.2890, -326.6845, -151.3579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3194, device='cuda:0', dtype=torch.float64)
tensor([-117.9737, -337.2496, -241.4724, -326.8682, -151.6359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3707, device='cuda:0', dtype=torch.float64)
tensor([-117.8915, -337.5342, -241.8176, -327.1605, -152.0021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3412, device='cuda:0', dtype=torch.float64)
tensor([-117.9279, -338.1565, -242.1803, -327.6028, -152.3846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2185, device='cuda:0', dtype=torch.float64)
tensor([-117.9144, -338.6405, -242.4573, -327.7837, -152.7351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2285, device='cuda:0', dtype=torch.float64)
tensor([-117.7896, -339.1098, -242.5114, -327.7197, -153.0164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3257, device='cuda:0', dtype=torch.float64)
tensor([-117.7219, -339.3022, -242.3748, -327.5304, -153.1594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2908, device='cuda:0', dtype=torch.float64)
tensor([-117.6650, -339.2581, -242.1204, -327.1847, -153.1930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2672, device='cuda:0', dtype=torch.float64)
tensor([-117.5702, -339.1681, -241.9130, -326.9141, -153.2253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2315, device='cuda:0', dtype=torch.float64)
tensor([-117.5008, -338.9364, -241.7008, -326.5448, -153.2575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2441, device='cuda:0', dtype=torch.float64)
tensor([-117.4555, -338.7106, -241.5392, -326.3079, -153.3376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2101, device='cuda:0', dtype=torch.float64)
tensor([-117.3707, -338.3892, -241.3334, -325.9731, -153.4291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2687, device='cuda:0', dtype=torch.float64)
tensor([-117.3501, -338.0665, -241.0696, -325.8171, -153.4742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2795, device='cuda:0', dtype=torch.float64)
tensor([-117.3324, -337.8722, -240.7276, -325.5352, -153.4183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2818, device='cuda:0', dtype=torch.float64)
tensor([-117.5413, -337.9676, -240.7141, -325.9134, -153.5377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2716, device='cuda:0', dtype=torch.float64)
tensor([-117.7400, -338.1109, -240.7218, -326.4493, -153.6665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3212, device='cuda:0', dtype=torch.float64)
tensor([-117.8987, -338.1206, -240.6431, -326.6893, -153.8089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2839, device='cuda:0', dtype=torch.float64)
tensor([-118.0465, -337.9952, -240.5847, -327.0383, -153.8988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2468, device='cuda:0', dtype=torch.float64)
tensor([-118.1276, -337.7730, -240.5060, -327.2517, -153.9399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2529, device='cuda:0', dtype=torch.float64)
tensor([-118.1635, -337.6055, -240.3563, -327.3444, -153.9273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3268, device='cuda:0', dtype=torch.float64)
tensor([-118.2080, -337.2700, -240.2792, -327.4024, -153.9289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2323, device='cuda:0', dtype=torch.float64)
tensor([-118.3775, -337.0532, -240.3525, -327.6809, -153.9493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2633, device='cuda:0', dtype=torch.float64)
tensor([-118.5356, -336.9795, -240.2899, -327.8612, -153.8847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2283, device='cuda:0', dtype=torch.float64)
tensor([-118.6790, -337.0705, -240.5010, -328.2578, -153.9651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2329, device='cuda:0', dtype=torch.float64)
tensor([-118.9543, -337.1606, -240.8696, -328.8157, -154.1011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2601, device='cuda:0', dtype=torch.float64)
tensor([-119.2981, -337.4485, -241.2793, -329.4944, -154.2876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3951, device='cuda:0', dtype=torch.float64)
tensor([-119.6711, -337.7527, -241.7656, -330.2525, -154.5212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2447, device='cuda:0', dtype=torch.float64)
tensor([-120.0712, -338.0357, -242.2588, -330.9905, -154.7139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2286, device='cuda:0', dtype=torch.float64)
tensor([-120.3717, -338.2235, -242.7515, -331.5984, -154.9302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2658, device='cuda:0', dtype=torch.float64)
tensor([-120.6884, -338.6975, -243.3796, -332.4475, -155.3239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2464, device='cuda:0', dtype=torch.float64)
tensor([-121.0994, -339.3112, -244.0838, -333.4032, -155.7332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2186, device='cuda:0', dtype=torch.float64)
tensor([-121.4950, -339.7712, -244.7134, -334.1770, -156.0580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2439, device='cuda:0', dtype=torch.float64)
tensor([-121.8730, -340.2432, -245.4310, -334.9070, -156.4381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2599, device='cuda:0', dtype=torch.float64)
tensor([-122.1985, -340.6443, -246.0746, -335.4051, -156.7492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2214, device='cuda:0', dtype=torch.float64)
tensor([-122.3933, -340.9722, -246.4894, -335.6218, -157.0118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2548, device='cuda:0', dtype=torch.float64)
tensor([-122.5320, -341.0696, -246.6475, -335.4727, -157.1642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2249, device='cuda:0', dtype=torch.float64)
tensor([-122.5486, -341.0262, -246.4602, -334.9412, -157.1872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2690, device='cuda:0', dtype=torch.float64)
tensor([-122.5965, -341.2011, -246.3767, -334.5945, -157.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2407, device='cuda:0', dtype=torch.float64)
tensor([-122.6604, -341.4645, -246.3088, -334.4248, -157.4772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2900, device='cuda:0', dtype=torch.float64)
tensor([-122.8021, -341.9532, -246.3508, -334.6140, -157.7361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2360, device='cuda:0', dtype=torch.float64)
tensor([-122.9793, -342.3470, -246.4877, -334.8097, -158.0177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2324, device='cuda:0', dtype=torch.float64)
tensor([-123.1294, -342.7624, -246.5757, -335.0542, -158.2008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2333, device='cuda:0', dtype=torch.float64)
tensor([-123.2622, -343.1513, -246.6868, -335.3500, -158.3531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3399, device='cuda:0', dtype=torch.float64)
tensor([-123.3339, -343.8786, -247.0561, -335.7331, -158.6583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2525, device='cuda:0', dtype=torch.float64)
tensor([-123.4713, -344.6880, -247.4801, -336.1672, -158.9771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2372, device='cuda:0', dtype=torch.float64)
tensor([-123.6118, -345.6665, -247.9454, -336.7350, -159.2542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2127, device='cuda:0', dtype=torch.float64)
tensor([-123.7775, -346.5644, -248.2641, -337.2712, -159.4637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2045, device='cuda:0', dtype=torch.float64)
tensor([-123.9970, -347.5085, -248.5462, -337.8709, -159.6760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2522, device='cuda:0', dtype=torch.float64)
tensor([-124.1545, -348.3703, -248.8499, -338.3052, -159.8620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2011, device='cuda:0', dtype=torch.float64)
tensor([-124.3533, -349.2447, -249.1332, -338.7630, -160.1008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2071, device='cuda:0', dtype=torch.float64)
tensor([-124.6240, -350.1878, -249.5144, -339.3917, -160.3878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2502, device='cuda:0', dtype=torch.float64)
tensor([-124.9184, -350.9356, -249.7397, -339.8455, -160.6391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2899, device='cuda:0', dtype=torch.float64)
tensor([-125.0824, -351.5797, -250.0371, -340.2178, -160.9595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2227, device='cuda:0', dtype=torch.float64)
tensor([-125.1983, -352.2316, -250.2970, -340.3802, -161.2127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2357, device='cuda:0', dtype=torch.float64)
tensor([-125.3742, -352.9188, -250.4954, -340.4362, -161.4360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2782, device='cuda:0', dtype=torch.float64)
tensor([-125.6852, -353.6016, -250.6907, -340.5704, -161.6682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2056, device='cuda:0', dtype=torch.float64)
tensor([-125.9312, -354.0324, -250.7951, -340.6148, -161.8193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1792, device='cuda:0', dtype=torch.float64)
tensor([-126.1774, -354.5116, -251.0038, -340.7290, -162.0013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2211, device='cuda:0', dtype=torch.float64)
tensor([-126.4922, -355.1309, -251.0548, -340.9398, -162.1574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2422, device='cuda:0', dtype=torch.float64)
tensor([-126.7420, -355.7162, -251.0671, -340.9745, -162.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2029, device='cuda:0', dtype=torch.float64)
tensor([-127.0863, -356.1321, -250.9919, -341.0749, -162.2699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3479, device='cuda:0', dtype=torch.float64)
tensor([-127.3747, -356.7509, -251.1030, -341.3680, -162.3098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2309, device='cuda:0', dtype=torch.float64)
tensor([-127.5839, -357.3005, -251.3769, -341.6978, -162.3913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3016, device='cuda:0', dtype=torch.float64)
tensor([-127.7341, -357.8570, -251.6046, -342.0684, -162.4359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2187, device='cuda:0', dtype=torch.float64)
tensor([-127.8731, -358.2162, -251.7030, -342.4491, -162.5169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2024, device='cuda:0', dtype=torch.float64)
tensor([-128.0314, -358.5960, -251.7981, -342.8657, -162.5317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2303, device='cuda:0', dtype=torch.float64)
tensor([-128.1301, -358.7382, -251.8566, -343.0401, -162.4541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3184, device='cuda:0', dtype=torch.float64)
tensor([-128.3310, -358.8610, -251.6014, -343.2687, -162.3774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2236, device='cuda:0', dtype=torch.float64)
tensor([-128.4697, -359.0636, -251.2234, -343.4093, -162.2505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2165, device='cuda:0', dtype=torch.float64)
tensor([-128.7474, -359.5447, -250.9831, -343.8146, -162.1885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2678, device='cuda:0', dtype=torch.float64)
tensor([-129.0691, -359.8328, -250.5802, -344.2308, -162.1938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2056, device='cuda:0', dtype=torch.float64)
tensor([-129.2930, -360.0577, -250.1525, -344.4522, -162.1757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2622, device='cuda:0', dtype=torch.float64)
tensor([-129.6668, -360.5338, -250.0138, -345.0259, -162.2257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2077, device='cuda:0', dtype=torch.float64)
tensor([-130.0406, -360.9921, -249.7607, -345.4808, -162.1669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2321, device='cuda:0', dtype=torch.float64)
tensor([-130.2774, -361.3440, -249.5096, -345.6306, -162.1544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2364, device='cuda:0', dtype=torch.float64)
tensor([-130.5557, -361.9337, -249.4454, -345.9128, -162.2583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2531, device='cuda:0', dtype=torch.float64)
tensor([-130.9299, -362.7810, -249.5227, -346.3131, -162.4190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2578, device='cuda:0', dtype=torch.float64)
tensor([-131.1281, -363.5769, -249.6901, -346.6104, -162.5387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2142, device='cuda:0', dtype=torch.float64)
tensor([-131.2831, -364.3173, -249.7140, -346.7675, -162.6633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2343, device='cuda:0', dtype=torch.float64)
tensor([-131.3418, -365.0300, -249.8207, -346.8219, -162.8262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2444, device='cuda:0', dtype=torch.float64)
tensor([-131.4196, -365.6196, -249.9674, -346.9323, -163.0115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2556, device='cuda:0', dtype=torch.float64)
tensor([-131.5655, -366.1765, -250.3036, -347.0437, -163.3173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3151, device='cuda:0', dtype=torch.float64)
tensor([-131.6811, -366.5390, -250.5752, -347.1856, -163.5622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2584, device='cuda:0', dtype=torch.float64)
tensor([-131.9126, -367.1650, -250.9495, -347.5807, -163.9609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2641, device='cuda:0', dtype=torch.float64)
tensor([-132.1489, -367.9887, -251.2099, -348.2603, -164.3974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2289, device='cuda:0', dtype=torch.float64)
tensor([-132.4310, -368.7782, -251.6246, -349.0617, -164.8426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2557, device='cuda:0', dtype=torch.float64)
tensor([-132.7171, -369.4772, -252.0604, -349.8541, -165.2157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3391, device='cuda:0', dtype=torch.float64)
tensor([-132.9696, -370.0118, -252.6490, -350.5671, -165.6513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3279, device='cuda:0', dtype=torch.float64)
tensor([-133.3268, -370.7467, -253.1449, -351.3966, -166.0921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2151, device='cuda:0', dtype=torch.float64)
tensor([-133.6562, -371.4748, -253.5805, -352.2206, -166.5339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2034, device='cuda:0', dtype=torch.float64)
tensor([-133.9452, -372.1403, -254.0012, -353.0155, -167.0034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2274, device='cuda:0', dtype=torch.float64)
tensor([-134.0384, -372.5652, -254.3433, -353.4836, -167.4147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2267, device='cuda:0', dtype=torch.float64)
tensor([-134.0983, -373.0484, -254.7132, -353.9389, -167.7860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2107, device='cuda:0', dtype=torch.float64)
tensor([-134.2047, -373.5454, -255.1058, -354.4598, -168.2076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2220, device='cuda:0', dtype=torch.float64)
tensor([-134.2952, -373.8688, -255.4444, -354.8964, -168.5847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2338, device='cuda:0', dtype=torch.float64)
tensor([-134.3435, -374.0866, -255.5890, -354.9499, -168.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2177, device='cuda:0', dtype=torch.float64)
tensor([-134.3341, -374.3467, -255.6902, -354.9695, -169.0439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1916, device='cuda:0', dtype=torch.float64)
tensor([-134.3634, -374.6438, -255.7422, -355.0584, -169.2610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2398, device='cuda:0', dtype=torch.float64)
tensor([-134.3198, -374.8686, -255.6740, -355.0506, -169.4058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2230, device='cuda:0', dtype=torch.float64)
tensor([-134.1727, -375.0799, -255.4019, -354.7885, -169.5005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2474, device='cuda:0', dtype=torch.float64)
tensor([-134.0652, -375.3670, -254.9599, -354.6828, -169.5807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2295, device='cuda:0', dtype=torch.float64)
tensor([-134.0138, -375.6804, -254.7471, -354.7661, -169.7136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1851, device='cuda:0', dtype=torch.float64)
tensor([-134.0753, -376.0773, -254.5665, -354.9751, -169.8973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2316, device='cuda:0', dtype=torch.float64)
tensor([-134.1010, -376.4424, -254.5822, -354.9789, -170.0674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2109, device='cuda:0', dtype=torch.float64)
tensor([-134.2593, -376.8822, -254.7345, -355.0536, -170.2994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1935, device='cuda:0', dtype=torch.float64)
tensor([-134.4377, -377.2326, -254.8121, -355.1799, -170.5053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2797, device='cuda:0', dtype=torch.float64)
tensor([-134.7869, -377.5838, -255.0114, -355.3532, -170.8198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2475, device='cuda:0', dtype=torch.float64)
tensor([-135.2106, -378.1159, -255.3216, -355.6934, -171.2038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2416, device='cuda:0', dtype=torch.float64)
tensor([-135.6875, -378.8595, -255.7691, -356.1688, -171.6065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1990, device='cuda:0', dtype=torch.float64)
tensor([-136.1457, -379.5275, -256.1956, -356.6355, -171.9665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1881, device='cuda:0', dtype=torch.float64)
tensor([-136.5173, -379.9726, -256.4014, -356.9566, -172.2904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2097, device='cuda:0', dtype=torch.float64)
tensor([-136.9278, -380.5856, -256.7041, -357.4195, -172.6605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2502, device='cuda:0', dtype=torch.float64)
tensor([-137.3200, -381.2133, -256.8360, -357.6746, -172.9141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2037, device='cuda:0', dtype=torch.float64)
tensor([-137.6075, -381.7906, -256.7514, -357.6390, -173.0589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2208, device='cuda:0', dtype=torch.float64)
tensor([-137.8397, -382.3157, -256.5449, -357.5458, -173.1486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2201, device='cuda:0', dtype=torch.float64)
tensor([-137.8982, -382.4357, -256.0550, -357.1808, -173.1059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1781, device='cuda:0', dtype=torch.float64)
tensor([-137.9745, -382.6263, -255.5390, -356.7618, -173.0722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2034, device='cuda:0', dtype=torch.float64)
tensor([-138.1185, -382.8024, -255.1298, -356.5743, -173.0090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1972, device='cuda:0', dtype=torch.float64)
tensor([-138.3304, -383.0631, -254.7193, -356.6030, -172.9627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2486, device='cuda:0', dtype=torch.float64)
tensor([-138.4194, -383.3065, -254.5526, -356.5314, -172.9016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2210, device='cuda:0', dtype=torch.float64)
tensor([-138.6712, -383.6482, -254.4348, -356.7965, -172.9292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2058, device='cuda:0', dtype=torch.float64)
tensor([-138.8447, -383.9322, -254.2069, -356.8826, -172.8478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2140, device='cuda:0', dtype=torch.float64)
tensor([-139.0597, -384.2287, -254.0273, -357.0318, -172.7095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2107, device='cuda:0', dtype=torch.float64)
tensor([-139.1918, -384.4000, -253.7244, -357.1294, -172.6504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2036, device='cuda:0', dtype=torch.float64)
tensor([-139.2537, -384.3815, -253.3637, -357.1350, -172.5479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1781, device='cuda:0', dtype=torch.float64)
tensor([-139.2914, -384.2670, -252.9601, -357.0168, -172.4122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2148, device='cuda:0', dtype=torch.float64)
tensor([-139.2629, -384.1510, -252.5609, -356.8888, -172.2765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1706, device='cuda:0', dtype=torch.float64)
tensor([-139.3029, -383.9992, -252.2019, -356.8610, -172.2141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1872, device='cuda:0', dtype=torch.float64)
tensor([-139.2039, -383.9259, -251.9803, -356.7760, -172.1747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1959, device='cuda:0', dtype=torch.float64)
tensor([-139.1153, -383.8963, -251.6185, -356.6717, -172.1251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1848, device='cuda:0', dtype=torch.float64)
tensor([-139.0383, -383.8367, -251.4462, -356.4355, -172.1570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2169, device='cuda:0', dtype=torch.float64)
tensor([-139.0870, -383.9253, -251.5462, -356.5687, -172.3305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2221, device='cuda:0', dtype=torch.float64)
tensor([-139.2665, -384.0575, -251.7703, -357.0407, -172.5914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1832, device='cuda:0', dtype=torch.float64)
tensor([-139.4323, -384.2106, -252.0400, -357.5445, -172.8084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1999, device='cuda:0', dtype=torch.float64)
tensor([-139.5666, -384.4079, -252.3670, -357.8801, -172.9878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2036, device='cuda:0', dtype=torch.float64)
tensor([-139.8251, -384.7627, -252.7957, -358.3317, -173.2479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1810, device='cuda:0', dtype=torch.float64)
tensor([-140.1753, -385.2135, -253.1196, -358.7860, -173.4919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1945, device='cuda:0', dtype=torch.float64)
tensor([-140.5475, -385.7220, -253.6176, -359.4291, -173.8886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1855, device='cuda:0', dtype=torch.float64)
tensor([-140.8284, -386.0858, -254.0003, -359.9261, -174.2656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1737, device='cuda:0', dtype=torch.float64)
tensor([-141.1202, -386.4738, -254.3362, -360.4855, -174.7072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2106, device='cuda:0', dtype=torch.float64)
tensor([-141.2648, -386.6948, -254.6267, -360.7945, -175.1302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2733, device='cuda:0', dtype=torch.float64)
tensor([-141.2314, -387.0054, -254.9739, -361.1680, -175.7095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3009, device='cuda:0', dtype=torch.float64)
tensor([-141.1540, -387.4670, -255.0831, -361.3654, -176.2056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2474, device='cuda:0', dtype=torch.float64)
tensor([-141.0948, -387.7706, -255.1636, -361.4771, -176.6945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1851, device='cuda:0', dtype=torch.float64)
tensor([-141.0171, -388.1581, -255.2527, -361.5866, -177.1306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2306, device='cuda:0', dtype=torch.float64)
tensor([-140.8200, -388.2367, -255.0825, -361.2277, -177.4149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1793, device='cuda:0', dtype=torch.float64)
tensor([-140.6179, -388.1878, -254.8527, -360.7779, -177.6626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1981, device='cuda:0', dtype=torch.float64)
tensor([-140.3954, -388.0039, -254.5482, -360.3408, -177.9728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1631, device='cuda:0', dtype=torch.float64)
tensor([-140.1899, -387.9936, -254.2900, -359.9802, -178.2975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2031, device='cuda:0', dtype=torch.float64)
tensor([-139.9909, -387.9573, -253.9322, -359.6153, -178.6387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2109, device='cuda:0', dtype=torch.float64)
tensor([-139.9679, -388.1046, -253.6101, -359.5609, -178.9802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1884, device='cuda:0', dtype=torch.float64)
tensor([-139.9144, -388.1512, -253.1190, -359.3933, -179.2252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1811, device='cuda:0', dtype=torch.float64)
tensor([-139.7646, -388.0678, -252.6694, -359.1049, -179.3946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1786, device='cuda:0', dtype=torch.float64)
tensor([-139.5129, -387.8918, -252.2495, -358.6402, -179.5167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1953, device='cuda:0', dtype=torch.float64)
tensor([-139.3633, -387.8940, -251.8808, -358.4058, -179.6190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1952, device='cuda:0', dtype=torch.float64)
tensor([-139.3406, -388.0064, -251.4930, -358.4104, -179.7793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1806, device='cuda:0', dtype=torch.float64)
tensor([-139.3252, -388.1976, -251.2851, -358.5859, -180.0151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2133, device='cuda:0', dtype=torch.float64)
tensor([-139.2922, -388.6151, -251.1817, -358.9252, -180.4038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2230, device='cuda:0', dtype=torch.float64)
tensor([-139.1982, -389.3274, -251.1801, -359.4396, -180.8712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2288, device='cuda:0', dtype=torch.float64)
tensor([-139.1565, -389.8516, -251.1174, -360.0079, -181.3033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2395, device='cuda:0', dtype=torch.float64)
tensor([-138.9777, -390.2210, -250.9935, -360.2487, -181.5668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1927, device='cuda:0', dtype=torch.float64)
tensor([-138.8733, -390.5912, -250.9542, -360.5833, -181.8443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2053, device='cuda:0', dtype=torch.float64)
tensor([-138.8291, -390.9210, -250.9032, -360.9109, -182.1042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3221, device='cuda:0', dtype=torch.float64)
tensor([-138.7038, -391.2209, -251.0908, -361.1819, -182.2658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1734, device='cuda:0', dtype=torch.float64)
tensor([-138.6698, -391.6771, -251.4497, -361.6948, -182.6189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1796, device='cuda:0', dtype=torch.float64)
tensor([-138.5934, -391.8732, -251.6973, -362.0454, -182.8002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1974, device='cuda:0', dtype=torch.float64)
tensor([-138.5331, -392.0745, -251.9645, -362.2756, -183.0214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1901, device='cuda:0', dtype=torch.float64)
tensor([-138.5500, -392.1833, -252.2016, -362.5886, -183.3613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1636, device='cuda:0', dtype=torch.float64)
tensor([-138.6366, -392.1500, -252.4725, -363.0429, -183.6986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2127, device='cuda:0', dtype=torch.float64)
tensor([-138.6917, -392.1488, -252.7483, -363.5295, -183.9433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1992, device='cuda:0', dtype=torch.float64)
tensor([-138.7916, -392.0539, -252.9311, -363.9713, -184.2588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1830, device='cuda:0', dtype=torch.float64)
tensor([-138.8654, -391.9259, -253.1297, -364.3003, -184.6176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1943, device='cuda:0', dtype=torch.float64)
tensor([-139.0031, -391.6996, -253.3144, -364.4542, -184.8611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1829, device='cuda:0', dtype=torch.float64)
tensor([-139.0789, -391.2987, -253.4054, -364.3675, -184.9903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2312, device='cuda:0', dtype=torch.float64)
tensor([-139.1482, -391.0191, -253.4459, -364.0033, -184.9661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1940, device='cuda:0', dtype=torch.float64)
tensor([-139.2732, -391.0509, -253.6042, -363.6905, -184.9809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1891, device='cuda:0', dtype=torch.float64)
tensor([-139.3509, -391.0035, -253.7224, -363.3971, -184.9764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2119, device='cuda:0', dtype=torch.float64)
tensor([-139.3998, -390.9820, -253.6615, -362.9088, -184.9580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2244, device='cuda:0', dtype=torch.float64)
tensor([-139.4698, -391.1992, -253.7951, -362.7796, -185.1732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1931, device='cuda:0', dtype=torch.float64)
tensor([-139.4929, -391.3621, -254.1073, -362.6424, -185.3969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1922, device='cuda:0', dtype=torch.float64)
tensor([-139.4055, -391.4922, -254.1935, -362.3072, -185.5552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1962, device='cuda:0', dtype=torch.float64)
tensor([-139.2366, -391.5732, -254.2521, -361.7207, -185.6678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1559, device='cuda:0', dtype=torch.float64)
tensor([-139.0543, -391.8348, -254.1280, -361.1439, -185.7979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2558, device='cuda:0', dtype=torch.float64)
tensor([-138.9923, -392.4720, -254.2985, -361.1041, -186.0956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1733, device='cuda:0', dtype=torch.float64)
tensor([-138.8899, -393.1974, -254.4854, -361.0322, -186.3669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2256, device='cuda:0', dtype=torch.float64)
tensor([-138.7222, -393.8630, -254.5711, -360.6593, -186.5585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1853, device='cuda:0', dtype=torch.float64)
tensor([-138.5653, -394.3498, -254.7210, -360.3252, -186.6655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1759, device='cuda:0', dtype=torch.float64)
tensor([-138.4106, -394.6904, -254.7564, -359.8732, -186.6811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2503, device='cuda:0', dtype=torch.float64)
tensor([-138.2548, -395.2643, -254.7707, -359.4417, -186.7089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1765, device='cuda:0', dtype=torch.float64)
tensor([-138.1696, -395.7714, -254.9350, -359.1975, -186.8348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1926, device='cuda:0', dtype=torch.float64)
tensor([-138.1680, -396.3699, -255.0587, -359.2332, -186.8631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2046, device='cuda:0', dtype=torch.float64)
tensor([-138.1006, -396.8323, -254.9457, -359.0354, -186.9772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1866, device='cuda:0', dtype=torch.float64)
tensor([-137.9614, -397.1898, -254.7139, -358.8109, -187.0263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2170, device='cuda:0', dtype=torch.float64)
tensor([-137.8790, -397.6235, -254.5589, -358.7914, -187.2303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1931, device='cuda:0', dtype=torch.float64)
tensor([-137.8374, -398.1568, -254.5936, -359.0240, -187.4587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1748, device='cuda:0', dtype=torch.float64)
tensor([-137.9010, -398.6150, -254.6431, -359.4282, -187.7526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1955, device='cuda:0', dtype=torch.float64)
tensor([-138.0624, -399.1117, -254.8017, -359.9903, -188.0806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1539, device='cuda:0', dtype=torch.float64)
tensor([-138.2506, -399.6966, -254.8839, -360.5496, -188.3520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1840, device='cuda:0', dtype=torch.float64)
tensor([-138.4556, -400.4400, -254.7835, -360.9583, -188.4466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1821, device='cuda:0', dtype=torch.float64)
tensor([-138.5137, -400.9085, -254.4169, -361.0514, -188.4635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2510, device='cuda:0', dtype=torch.float64)
tensor([-138.5682, -401.5474, -254.4158, -361.2744, -188.6467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1724, device='cuda:0', dtype=torch.float64)
tensor([-138.7512, -402.2821, -254.5031, -361.7640, -188.7555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1704, device='cuda:0', dtype=torch.float64)
tensor([-138.8884, -402.8398, -254.5478, -362.2570, -188.8263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2671, device='cuda:0', dtype=torch.float64)
tensor([-138.8478, -403.1465, -254.6314, -362.6695, -188.9165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2170, device='cuda:0', dtype=torch.float64)
tensor([-138.8893, -403.6179, -254.6399, -362.9425, -188.9853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1765, device='cuda:0', dtype=torch.float64)
tensor([-138.9694, -404.1047, -254.5430, -363.2111, -188.9426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1685, device='cuda:0', dtype=torch.float64)
tensor([-139.0032, -404.5868, -254.5870, -363.4642, -188.8508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1815, device='cuda:0', dtype=torch.float64)
tensor([-138.9145, -405.0021, -254.5509, -363.5499, -188.8601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1858, device='cuda:0', dtype=torch.float64)
tensor([-138.8530, -405.2641, -254.4455, -363.4054, -188.8367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1952, device='cuda:0', dtype=torch.float64)
tensor([-138.7056, -405.3654, -254.2700, -362.9832, -188.8514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1866, device='cuda:0', dtype=torch.float64)
tensor([-138.5528, -405.4956, -253.9197, -362.3105, -188.8299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1728, device='cuda:0', dtype=torch.float64)
tensor([-138.4292, -405.6657, -253.7052, -361.7199, -188.8290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1823, device='cuda:0', dtype=torch.float64)
tensor([-138.4981, -406.0676, -253.6715, -361.5649, -189.0579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1598, device='cuda:0', dtype=torch.float64)
tensor([-138.6187, -406.4181, -253.7632, -361.4304, -189.1865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1799, device='cuda:0', dtype=torch.float64)
tensor([-138.6990, -406.8159, -253.9374, -361.2108, -189.3609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1679, device='cuda:0', dtype=torch.float64)
tensor([-138.8239, -407.3366, -254.2502, -361.2110, -189.5741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1821, device='cuda:0', dtype=torch.float64)
tensor([-138.9472, -407.9098, -254.6570, -361.3493, -189.7642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2103, device='cuda:0', dtype=torch.float64)
tensor([-139.0415, -408.3623, -254.9105, -361.0643, -189.7761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1703, device='cuda:0', dtype=torch.float64)
tensor([-139.1423, -408.7257, -255.0230, -360.6960, -189.7975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2207, device='cuda:0', dtype=torch.float64)
tensor([-139.1661, -409.1187, -255.1760, -360.3108, -189.9079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2145, device='cuda:0', dtype=torch.float64)
tensor([-139.2641, -409.5731, -255.0389, -359.8713, -189.8569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2047, device='cuda:0', dtype=torch.float64)
tensor([-139.3955, -410.1315, -254.9024, -359.6559, -189.9067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1706, device='cuda:0', dtype=torch.float64)
tensor([-139.5203, -410.6897, -254.9225, -359.3547, -189.8954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2315, device='cuda:0', dtype=torch.float64)
tensor([-139.7728, -411.3534, -255.1616, -359.3290, -189.9233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2034, device='cuda:0', dtype=torch.float64)
tensor([-140.0170, -411.9958, -255.2111, -359.1934, -189.8740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1817, device='cuda:0', dtype=torch.float64)
tensor([-140.3690, -412.4442, -255.2800, -359.2112, -189.7767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1655, device='cuda:0', dtype=torch.float64)
tensor([-140.6946, -412.9291, -255.2833, -359.2184, -189.6276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1588, device='cuda:0', dtype=torch.float64)
tensor([-140.8577, -413.2268, -255.4161, -359.1134, -189.7013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1852, device='cuda:0', dtype=torch.float64)
tensor([-140.8773, -413.2275, -255.3241, -358.7219, -189.7414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1585, device='cuda:0', dtype=torch.float64)
tensor([-140.9585, -413.4760, -255.4286, -358.6603, -189.8803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2031, device='cuda:0', dtype=torch.float64)
tensor([-141.0669, -413.7671, -255.5389, -358.9669, -190.1829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2636, device='cuda:0', dtype=torch.float64)
tensor([-141.1073, -413.7762, -255.4081, -358.9694, -190.4780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1687, device='cuda:0', dtype=torch.float64)
tensor([-141.1087, -413.7166, -255.1835, -358.9370, -190.7954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1746, device='cuda:0', dtype=torch.float64)
tensor([-141.1026, -413.4688, -255.0112, -359.0265, -191.1581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1777, device='cuda:0', dtype=torch.float64)
tensor([-141.1744, -413.2197, -254.9634, -359.1462, -191.5940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2096, device='cuda:0', dtype=torch.float64)
tensor([-141.3825, -413.0556, -254.9997, -359.5330, -192.1291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2010, device='cuda:0', dtype=torch.float64)
tensor([-141.6125, -412.9229, -255.2669, -360.0630, -192.5881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1986, device='cuda:0', dtype=torch.float64)
tensor([-141.8628, -412.7843, -255.6322, -360.6816, -193.0294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1891, device='cuda:0', dtype=torch.float64)
tensor([-142.2413, -412.7828, -255.9161, -361.3030, -193.4222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1860, device='cuda:0', dtype=torch.float64)
tensor([-142.5262, -412.7666, -255.9911, -361.8021, -193.7745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1937, device='cuda:0', dtype=torch.float64)
tensor([-142.8057, -412.7837, -255.9280, -362.3157, -194.0539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1561, device='cuda:0', dtype=torch.float64)
tensor([-142.9742, -412.7433, -255.6986, -362.6291, -194.2621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1396, device='cuda:0', dtype=torch.float64)
tensor([-143.1655, -412.9224, -255.4882, -363.0287, -194.4802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1486, device='cuda:0', dtype=torch.float64)
tensor([-143.2431, -413.2562, -255.2684, -363.3462, -194.7370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1756, device='cuda:0', dtype=torch.float64)
tensor([-143.2835, -413.5777, -255.1333, -363.5432, -194.9289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1775, device='cuda:0', dtype=torch.float64)
tensor([-143.3367, -413.8798, -255.0504, -363.7222, -195.2527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2005, device='cuda:0', dtype=torch.float64)
tensor([-143.3436, -413.9821, -254.7712, -363.9459, -195.5048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1492, device='cuda:0', dtype=torch.float64)
tensor([-143.2290, -414.0877, -254.4743, -364.0543, -195.7748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1687, device='cuda:0', dtype=torch.float64)
tensor([-143.1930, -414.0687, -254.1094, -363.9337, -195.8584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1729, device='cuda:0', dtype=torch.float64)
tensor([-143.2386, -414.2238, -253.8131, -363.9894, -196.0013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1842, device='cuda:0', dtype=torch.float64)
tensor([-143.3567, -414.5389, -253.5714, -363.9750, -196.1705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3347, device='cuda:0', dtype=torch.float64)
tensor([-143.4301, -414.8877, -253.2729, -364.0089, -196.2286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1703, device='cuda:0', dtype=torch.float64)
tensor([-143.5320, -415.1109, -253.0112, -364.1955, -196.2296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1430, device='cuda:0', dtype=torch.float64)
tensor([-143.6345, -415.2660, -252.7978, -364.2338, -196.1588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1250, device='cuda:0', dtype=torch.float64)
tensor([-143.6756, -415.3186, -252.6114, -364.2032, -196.1051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1607, device='cuda:0', dtype=torch.float64)
tensor([-143.7435, -415.5410, -252.5076, -364.0741, -196.0243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1967, device='cuda:0', dtype=torch.float64)
tensor([-143.8515, -415.8053, -252.3607, -363.9978, -196.0419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1794, device='cuda:0', dtype=torch.float64)
tensor([-144.0201, -416.1738, -252.3152, -364.0639, -196.0679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1775, device='cuda:0', dtype=torch.float64)
tensor([-144.0449, -416.4588, -252.3322, -363.9734, -196.0443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1980, device='cuda:0', dtype=torch.float64)
tensor([-144.1236, -416.7248, -252.6304, -364.1476, -196.0560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1567, device='cuda:0', dtype=torch.float64)
tensor([-144.1655, -416.8960, -252.7920, -364.2626, -196.0150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1785, device='cuda:0', dtype=torch.float64)
tensor([-144.1622, -416.8882, -253.0161, -364.4907, -196.0469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1668, device='cuda:0', dtype=torch.float64)
tensor([-144.1158, -416.8633, -253.2741, -364.7244, -196.1303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1664, device='cuda:0', dtype=torch.float64)
tensor([-144.0872, -416.7681, -253.3980, -364.8544, -196.3265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1950, device='cuda:0', dtype=torch.float64)
tensor([-144.1437, -416.6617, -253.6038, -365.1644, -196.6077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1667, device='cuda:0', dtype=torch.float64)
tensor([-144.2899, -416.6460, -253.7866, -365.4608, -196.8489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1957, device='cuda:0', dtype=torch.float64)
tensor([-144.3346, -416.7248, -253.9574, -365.7354, -197.0546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1690, device='cuda:0', dtype=torch.float64)
tensor([-144.1768, -416.4887, -253.9721, -365.5397, -197.1713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1586, device='cuda:0', dtype=torch.float64)
tensor([-144.0065, -416.2487, -253.8825, -365.1800, -197.3790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1971, device='cuda:0', dtype=torch.float64)
tensor([-143.7286, -416.0818, -253.8186, -364.5430, -197.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1827, device='cuda:0', dtype=torch.float64)
tensor([-143.5254, -416.0583, -253.8291, -364.1496, -197.8048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1750, device='cuda:0', dtype=torch.float64)
tensor([-143.1942, -415.9198, -253.5947, -363.3586, -197.8732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1653, device='cuda:0', dtype=torch.float64)
tensor([-142.9466, -415.9165, -253.4018, -362.6524, -198.0207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1889, device='cuda:0', dtype=torch.float64)
tensor([-142.8343, -416.1131, -253.4222, -362.1961, -198.2670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1649, device='cuda:0', dtype=torch.float64)
tensor([-142.8236, -416.4832, -253.5330, -361.9439, -198.5902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1575, device='cuda:0', dtype=torch.float64)
tensor([-142.8432, -417.0686, -253.5234, -361.6077, -198.8464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1395, device='cuda:0', dtype=torch.float64)
tensor([-142.7905, -417.5119, -253.5042, -361.4513, -199.1457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1645, device='cuda:0', dtype=torch.float64)
tensor([-142.6385, -417.9041, -253.3717, -361.2716, -199.4646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1649, device='cuda:0', dtype=torch.float64)
tensor([-142.4779, -418.4398, -253.2962, -361.0945, -199.8099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1665, device='cuda:0', dtype=torch.float64)
tensor([-142.2146, -418.7980, -253.0157, -360.6884, -200.0806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1553, device='cuda:0', dtype=torch.float64)
tensor([-141.9221, -418.9623, -252.7791, -360.3776, -200.2763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2413, device='cuda:0', dtype=torch.float64)
tensor([-141.6230, -419.2237, -252.5636, -359.9133, -200.4025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2374, device='cuda:0', dtype=torch.float64)
tensor([-141.4282, -419.5483, -252.6110, -359.7673, -200.6569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1891, device='cuda:0', dtype=torch.float64)
tensor([-141.3569, -419.9318, -252.7937, -359.9161, -200.9022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2285, device='cuda:0', dtype=torch.float64)
tensor([-141.2440, -420.2695, -252.9491, -359.7636, -201.1563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1485, device='cuda:0', dtype=torch.float64)
tensor([-141.1848, -420.4596, -252.9497, -359.4424, -201.3137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1446, device='cuda:0', dtype=torch.float64)
tensor([-141.0979, -420.3937, -252.7368, -359.0240, -201.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1586, device='cuda:0', dtype=torch.float64)
tensor([-141.0399, -420.2917, -252.4966, -358.6484, -201.4580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1615, device='cuda:0', dtype=torch.float64)
tensor([-141.0530, -420.3823, -252.4043, -358.4111, -201.5686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1513, device='cuda:0', dtype=torch.float64)
tensor([-141.0867, -420.4270, -252.3941, -358.1018, -201.6675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1258, device='cuda:0', dtype=torch.float64)
tensor([-141.2165, -420.5847, -252.4808, -357.8975, -201.8340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1862, device='cuda:0', dtype=torch.float64)
tensor([-141.4172, -420.8388, -252.6789, -357.8983, -201.9111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1386, device='cuda:0', dtype=torch.float64)
tensor([-141.5620, -421.0481, -252.6896, -357.7104, -201.9351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1731, device='cuda:0', dtype=torch.float64)
tensor([-141.8525, -421.3184, -252.5837, -357.3982, -201.8783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1659, device='cuda:0', dtype=torch.float64)
tensor([-142.1427, -421.6756, -252.6449, -357.1500, -201.9057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1756, device='cuda:0', dtype=torch.float64)
tensor([-142.4030, -422.0154, -252.7021, -357.0570, -201.9895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1535, device='cuda:0', dtype=torch.float64)
tensor([-142.6561, -422.3804, -252.7567, -357.0102, -201.9222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1763, device='cuda:0', dtype=torch.float64)
tensor([-142.8976, -422.6683, -252.5925, -356.8732, -201.6732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1792, device='cuda:0', dtype=torch.float64)
tensor([-143.2619, -422.8371, -252.3185, -356.8800, -201.4041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1380, device='cuda:0', dtype=torch.float64)
tensor([-143.7081, -423.1030, -251.9560, -356.9545, -201.3099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1704, device='cuda:0', dtype=torch.float64)
tensor([-143.9922, -423.3811, -251.5634, -356.9555, -201.2734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1408, device='cuda:0', dtype=torch.float64)
tensor([-144.1800, -423.6499, -251.1508, -357.1222, -201.3312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1582, device='cuda:0', dtype=torch.float64)
tensor([-144.4555, -423.9188, -250.6169, -357.3617, -201.3821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1480, device='cuda:0', dtype=torch.float64)
tensor([-144.7451, -424.3243, -250.1414, -357.6999, -201.4716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1503, device='cuda:0', dtype=torch.float64)
tensor([-144.9818, -424.7623, -249.8969, -358.2648, -201.6843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1412, device='cuda:0', dtype=torch.float64)
tensor([-145.2408, -425.1827, -249.7431, -358.8100, -201.7559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1995, device='cuda:0', dtype=torch.float64)
tensor([-145.4677, -425.4938, -249.6866, -359.3216, -201.8902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1558, device='cuda:0', dtype=torch.float64)
tensor([-145.6608, -425.8123, -249.6744, -359.7831, -202.0095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1723, device='cuda:0', dtype=torch.float64)
tensor([-145.7558, -426.0140, -249.7604, -360.2036, -201.9844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1645, device='cuda:0', dtype=torch.float64)
tensor([-145.8585, -426.2829, -249.7992, -360.6909, -202.0208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1967, device='cuda:0', dtype=torch.float64)
tensor([-146.0355, -426.6694, -250.0742, -361.3903, -202.1202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1631, device='cuda:0', dtype=torch.float64)
tensor([-146.1602, -426.8844, -250.2660, -361.8794, -202.2189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1877, device='cuda:0', dtype=torch.float64)
tensor([-146.3055, -427.1291, -250.4041, -362.2495, -202.2134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1645, device='cuda:0', dtype=torch.float64)
tensor([-146.3561, -427.4195, -250.5533, -362.5494, -202.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1973, device='cuda:0', dtype=torch.float64)
tensor([-146.3530, -427.6860, -250.8350, -363.0842, -202.5586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1508, device='cuda:0', dtype=torch.float64)
tensor([-146.3025, -427.8071, -251.0365, -363.3642, -202.7400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1664, device='cuda:0', dtype=torch.float64)
tensor([-146.3026, -427.9266, -251.2590, -363.6629, -203.1135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1435, device='cuda:0', dtype=torch.float64)
tensor([-146.4442, -427.9146, -251.3446, -363.8680, -203.3463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1353, device='cuda:0', dtype=torch.float64)
tensor([-146.5588, -427.8568, -251.4276, -364.0028, -203.6101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1489, device='cuda:0', dtype=torch.float64)
tensor([-146.6674, -427.7985, -251.5983, -364.0253, -203.9615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1732, device='cuda:0', dtype=torch.float64)
tensor([-146.8874, -427.7895, -251.7076, -364.1160, -204.3690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1501, device='cuda:0', dtype=torch.float64)
tensor([-147.1109, -427.7339, -251.6807, -364.2201, -204.7318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2290, device='cuda:0', dtype=torch.float64)
tensor([-147.2496, -427.5548, -251.5665, -364.1949, -205.1068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1575, device='cuda:0', dtype=torch.float64)
tensor([-147.3963, -427.4499, -251.3767, -364.1170, -205.4419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1464, device='cuda:0', dtype=torch.float64)
tensor([-147.4015, -427.3957, -251.2175, -363.7717, -205.6628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1703, device='cuda:0', dtype=torch.float64)
tensor([-147.5087, -427.5435, -251.2113, -363.7859, -206.1080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1597, device='cuda:0', dtype=torch.float64)
tensor([-147.6423, -427.6646, -251.0738, -363.8852, -206.4491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1582, device='cuda:0', dtype=torch.float64)
tensor([-147.6902, -427.7590, -250.9770, -363.7927, -206.7016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1461, device='cuda:0', dtype=torch.float64)
tensor([-147.7645, -427.8659, -250.9104, -363.7985, -207.0300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1424, device='cuda:0', dtype=torch.float64)
tensor([-147.8401, -427.8686, -250.8769, -363.8350, -207.3543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1283, device='cuda:0', dtype=torch.float64)
tensor([-147.9114, -427.8791, -250.8356, -363.7279, -207.4772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1451, device='cuda:0', dtype=torch.float64)
tensor([-147.8805, -427.7921, -250.6228, -363.3229, -207.2791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1269, device='cuda:0', dtype=torch.float64)
tensor([-147.9858, -427.7536, -250.5690, -363.0049, -207.0877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1709, device='cuda:0', dtype=torch.float64)
tensor([-148.0898, -427.7125, -250.5443, -362.3690, -206.8292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1427, device='cuda:0', dtype=torch.float64)
tensor([-148.2874, -427.8680, -250.6573, -362.1684, -206.7166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2943, device='cuda:0', dtype=torch.float64)
tensor([-148.1918, -427.6270, -250.6103, -361.5388, -206.3576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1724, device='cuda:0', dtype=torch.float64)
tensor([-148.3077, -427.6371, -250.7950, -361.2484, -206.1502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1731, device='cuda:0', dtype=torch.float64)
tensor([-148.4064, -427.6173, -251.2530, -361.2643, -206.0364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1765, device='cuda:0', dtype=torch.float64)
tensor([-148.4427, -427.5895, -251.7304, -361.4509, -206.1147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1536, device='cuda:0', dtype=torch.float64)
tensor([-148.4433, -427.5270, -252.1121, -361.5293, -206.0910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2003, device='cuda:0', dtype=torch.float64)
tensor([-148.4302, -427.4946, -252.2398, -361.4752, -205.8833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1633, device='cuda:0', dtype=torch.float64)
tensor([-148.3441, -427.3094, -252.2399, -361.2291, -205.7229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1612, device='cuda:0', dtype=torch.float64)
tensor([-148.2752, -427.1903, -252.3361, -361.1227, -205.8156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1435, device='cuda:0', dtype=torch.float64)
tensor([-148.1484, -427.1884, -252.4600, -360.9397, -205.9009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1576, device='cuda:0', dtype=torch.float64)
tensor([-148.1362, -427.2952, -252.6407, -360.9267, -206.0044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1691, device='cuda:0', dtype=torch.float64)
tensor([-148.2095, -427.5442, -252.8007, -361.0253, -206.1032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1264, device='cuda:0', dtype=torch.float64)
tensor([-148.3655, -427.7804, -252.7768, -360.8669, -206.1133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1266, device='cuda:0', dtype=torch.float64)
tensor([-148.5751, -428.1896, -252.8273, -360.9249, -206.2058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1604, device='cuda:0', dtype=torch.float64)
tensor([-148.6916, -428.4493, -252.6756, -360.7028, -206.2650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1559, device='cuda:0', dtype=torch.float64)
tensor([-148.8235, -428.6258, -252.4509, -360.4465, -206.2999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1412, device='cuda:0', dtype=torch.float64)
tensor([-149.0051, -428.7141, -252.2354, -360.3559, -206.4171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1361, device='cuda:0', dtype=torch.float64)
tensor([-149.1142, -428.6878, -251.8024, -360.0572, -206.4837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1509, device='cuda:0', dtype=torch.float64)
tensor([-149.2730, -428.6610, -251.3480, -359.8601, -206.5057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1400, device='cuda:0', dtype=torch.float64)
tensor([-149.4585, -428.6584, -250.8969, -359.8076, -206.4763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1185, device='cuda:0', dtype=torch.float64)
tensor([-149.6639, -428.6283, -250.5289, -359.7571, -206.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1335, device='cuda:0', dtype=torch.float64)
tensor([-149.9030, -428.6689, -250.2818, -359.7277, -206.4536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1478, device='cuda:0', dtype=torch.float64)
tensor([-150.1616, -428.7033, -250.0213, -359.6669, -206.4914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1298, device='cuda:0', dtype=torch.float64)
tensor([-150.3200, -428.5579, -249.6417, -359.3582, -206.4661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1397, device='cuda:0', dtype=torch.float64)
tensor([-150.4158, -428.3339, -249.3266, -359.0618, -206.4288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1233, device='cuda:0', dtype=torch.float64)
tensor([-150.5105, -428.1026, -249.2060, -359.0323, -206.4346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1383, device='cuda:0', dtype=torch.float64)
tensor([-150.6030, -428.0645, -248.9927, -359.0462, -206.5838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1337, device='cuda:0', dtype=torch.float64)
tensor([-150.6993, -428.0075, -248.6213, -358.8559, -206.6505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1270, device='cuda:0', dtype=torch.float64)
tensor([-150.7459, -427.9155, -248.3922, -358.6926, -206.7793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1534, device='cuda:0', dtype=torch.float64)
tensor([-150.8104, -427.9027, -248.3058, -358.6941, -207.0289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1621, device='cuda:0', dtype=torch.float64)
tensor([-150.9860, -427.9576, -248.0580, -358.5778, -207.2451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1418, device='cuda:0', dtype=torch.float64)
tensor([-151.2011, -428.0662, -247.7559, -358.3209, -207.3809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1358, device='cuda:0', dtype=torch.float64)
tensor([-151.3337, -428.2211, -247.4555, -357.9055, -207.4199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1341, device='cuda:0', dtype=torch.float64)
tensor([-151.4867, -428.2926, -247.2518, -357.5634, -207.4840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1541, device='cuda:0', dtype=torch.float64)
tensor([-151.6706, -428.3951, -247.2899, -357.5230, -207.5637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1587, device='cuda:0', dtype=torch.float64)
tensor([-151.8700, -428.6100, -247.2360, -357.6109, -207.6325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1679, device='cuda:0', dtype=torch.float64)
tensor([-151.9861, -428.8444, -247.1552, -357.6250, -207.6339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1312, device='cuda:0', dtype=torch.float64)
tensor([-151.9296, -428.9648, -246.9520, -357.4615, -207.6297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1348, device='cuda:0', dtype=torch.float64)
tensor([-151.7177, -429.0120, -246.6576, -357.3456, -207.6775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1543, device='cuda:0', dtype=torch.float64)
tensor([-151.6507, -429.2820, -246.7760, -357.8157, -207.9544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1484, device='cuda:0', dtype=torch.float64)
tensor([-151.6650, -429.7756, -246.9566, -358.3048, -208.3240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1428, device='cuda:0', dtype=torch.float64)
tensor([-151.7872, -430.3637, -247.0378, -358.8387, -208.6015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1548, device='cuda:0', dtype=torch.float64)
tensor([-152.1351, -431.1266, -247.2820, -359.7745, -208.9610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1235, device='cuda:0', dtype=torch.float64)
tensor([-152.4537, -431.8245, -247.5284, -360.7288, -209.3199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1572, device='cuda:0', dtype=torch.float64)
tensor([-152.7843, -432.4125, -247.6515, -361.5231, -209.6513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1453, device='cuda:0', dtype=torch.float64)
tensor([-153.1251, -433.2638, -247.7478, -362.3824, -210.1049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1370, device='cuda:0', dtype=torch.float64)
tensor([-153.5564, -434.1147, -247.9928, -363.3655, -210.5334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1628, device='cuda:0', dtype=torch.float64)
tensor([-153.9712, -434.9477, -248.2742, -364.2763, -211.0258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1303, device='cuda:0', dtype=torch.float64)
tensor([-154.2411, -435.6903, -248.4965, -365.1134, -211.6176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1191, device='cuda:0', dtype=torch.float64)
tensor([-154.4144, -436.3362, -248.6010, -365.7003, -212.0986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1229, device='cuda:0', dtype=torch.float64)
tensor([-154.5629, -436.8361, -248.5263, -366.0591, -212.4507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1622, device='cuda:0', dtype=torch.float64)
tensor([-154.7940, -437.3253, -248.4728, -366.4480, -212.7499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1356, device='cuda:0', dtype=torch.float64)
tensor([-154.8599, -437.6367, -248.2867, -366.5012, -212.9180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1239, device='cuda:0', dtype=torch.float64)
tensor([-154.8903, -437.9133, -248.2419, -366.6546, -212.9974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1225, device='cuda:0', dtype=torch.float64)
tensor([-154.7621, -437.9992, -248.0808, -366.4975, -213.0235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1516, device='cuda:0', dtype=torch.float64)
tensor([-154.5485, -437.9739, -247.8540, -366.1737, -212.8434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1447, device='cuda:0', dtype=torch.float64)
tensor([-154.4064, -437.7138, -247.5882, -365.9878, -212.6537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1441, device='cuda:0', dtype=torch.float64)
tensor([-154.3067, -437.4551, -247.3692, -365.8962, -212.3905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1529, device='cuda:0', dtype=torch.float64)
tensor([-154.2387, -437.1540, -246.9533, -365.5079, -212.0524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1574, device='cuda:0', dtype=torch.float64)
tensor([-154.2271, -437.0003, -246.5542, -365.0584, -211.8438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1361, device='cuda:0', dtype=torch.float64)
tensor([-154.3989, -436.8604, -246.1827, -364.5387, -211.5185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1302, device='cuda:0', dtype=torch.float64)
tensor([-154.5316, -436.7924, -245.8043, -363.8807, -211.0436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1392, device='cuda:0', dtype=torch.float64)
tensor([-154.5547, -436.6023, -245.4504, -363.1652, -210.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1229, device='cuda:0', dtype=torch.float64)
tensor([-154.5860, -436.4313, -245.1548, -362.7070, -210.3659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1183, device='cuda:0', dtype=torch.float64)
tensor([-154.6056, -436.3567, -244.7494, -362.1381, -210.0325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1277, device='cuda:0', dtype=torch.float64)
tensor([-154.5213, -436.4095, -244.4179, -361.6984, -209.8188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1292, device='cuda:0', dtype=torch.float64)
tensor([-154.5062, -436.5052, -244.1184, -361.3046, -209.6336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1541, device='cuda:0', dtype=torch.float64)
tensor([-154.5609, -436.6177, -243.9006, -361.1030, -209.5589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1098, device='cuda:0', dtype=torch.float64)
tensor([-154.6320, -436.7779, -243.7535, -360.9882, -209.5574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1302, device='cuda:0', dtype=torch.float64)
tensor([-154.6974, -437.0632, -243.7235, -361.1515, -209.7227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1245, device='cuda:0', dtype=torch.float64)
tensor([-154.6565, -437.3285, -243.9730, -361.5708, -210.0763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1276, device='cuda:0', dtype=torch.float64)
tensor([-154.7047, -437.6509, -244.4411, -362.2889, -210.5597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1511, device='cuda:0', dtype=torch.float64)
tensor([-154.6372, -437.7553, -244.8207, -362.7512, -210.8750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1312, device='cuda:0', dtype=torch.float64)
tensor([-154.6797, -437.9329, -245.1974, -363.0963, -211.1856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1567, device='cuda:0', dtype=torch.float64)
tensor([-154.7098, -438.0424, -245.4302, -363.5534, -211.5832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1472, device='cuda:0', dtype=torch.float64)
tensor([-154.6458, -438.0919, -245.5139, -363.9278, -211.9645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1318, device='cuda:0', dtype=torch.float64)
tensor([-154.6931, -438.2591, -245.7244, -364.4335, -212.4219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1515, device='cuda:0', dtype=torch.float64)
tensor([-154.7377, -438.4070, -245.7706, -364.5152, -212.8404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1258, device='cuda:0', dtype=torch.float64)
tensor([-154.8565, -438.6761, -245.7990, -364.5465, -213.2088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1473, device='cuda:0', dtype=torch.float64)
tensor([-154.8784, -438.7258, -245.7592, -364.3720, -213.4062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1514, device='cuda:0', dtype=torch.float64)
tensor([-154.8573, -438.8809, -245.6349, -363.9728, -213.5343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1202, device='cuda:0', dtype=torch.float64)
tensor([-154.7711, -438.8947, -245.3808, -363.3801, -213.5461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1406, device='cuda:0', dtype=torch.float64)
tensor([-154.6207, -438.8964, -244.8948, -362.5260, -213.4933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1530, device='cuda:0', dtype=torch.float64)
tensor([-154.3890, -438.6775, -244.4984, -361.6013, -213.3869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1445, device='cuda:0', dtype=torch.float64)
tensor([-154.2362, -438.5124, -244.2411, -360.8147, -213.2189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1401, device='cuda:0', dtype=torch.float64)
tensor([-154.1235, -438.4793, -243.9145, -360.0823, -213.0310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1230, device='cuda:0', dtype=torch.float64)
tensor([-153.9504, -438.3580, -243.6648, -359.2945, -212.8718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1371, device='cuda:0', dtype=torch.float64)
tensor([-153.7697, -438.2594, -243.3218, -358.3830, -212.6775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1338, device='cuda:0', dtype=torch.float64)
tensor([-153.5736, -438.1286, -243.2092, -357.6178, -212.4427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1400, device='cuda:0', dtype=torch.float64)
tensor([-153.2886, -438.1348, -243.0936, -356.8698, -212.3912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1459, device='cuda:0', dtype=torch.float64)
tensor([-153.0794, -438.1138, -243.2783, -356.5307, -212.5384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1309, device='cuda:0', dtype=torch.float64)
tensor([-152.9816, -438.0429, -243.6972, -356.4450, -212.7558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1297, device='cuda:0', dtype=torch.float64)
tensor([-153.0390, -438.0879, -243.9198, -356.5626, -213.0662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1385, device='cuda:0', dtype=torch.float64)
tensor([-153.3065, -438.3546, -244.2421, -356.9553, -213.3950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1570, device='cuda:0', dtype=torch.float64)
tensor([-153.5210, -438.7242, -244.4386, -357.3742, -213.7152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1447, device='cuda:0', dtype=torch.float64)
tensor([-153.6927, -438.9420, -244.4842, -357.5767, -213.9704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1334, device='cuda:0', dtype=torch.float64)
tensor([-153.9083, -439.0648, -244.7518, -358.0012, -214.3319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1227, device='cuda:0', dtype=torch.float64)
tensor([-154.0710, -439.0532, -244.9806, -358.1886, -214.5664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1625, device='cuda:0', dtype=torch.float64)
tensor([-154.2081, -439.0713, -245.2773, -358.4239, -214.8093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1382, device='cuda:0', dtype=torch.float64)
tensor([-154.2627, -438.8751, -245.5967, -358.5529, -215.0019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1185, device='cuda:0', dtype=torch.float64)
tensor([-154.1804, -438.6785, -245.9571, -358.6594, -215.2285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1286, device='cuda:0', dtype=torch.float64)
tensor([-154.2120, -438.3768, -246.1029, -358.4780, -215.2109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1136, device='cuda:0', dtype=torch.float64)
tensor([-154.2211, -437.9726, -246.0814, -358.0136, -215.0141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1271, device='cuda:0', dtype=torch.float64)
tensor([-154.2612, -437.6532, -246.0899, -357.5852, -214.8697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1545, device='cuda:0', dtype=torch.float64)
tensor([-154.4183, -437.3946, -246.0748, -357.3554, -214.6944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1396, device='cuda:0', dtype=torch.float64)
tensor([-154.5208, -437.0252, -246.0184, -357.0709, -214.5427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1314, device='cuda:0', dtype=torch.float64)
tensor([-154.5845, -436.6721, -246.0759, -356.8176, -214.5022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1248, device='cuda:0', dtype=torch.float64)
tensor([-154.5444, -436.2509, -246.1756, -356.5074, -214.4761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1192, device='cuda:0', dtype=torch.float64)
tensor([-154.5712, -435.7789, -246.3143, -356.2629, -214.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1295, device='cuda:0', dtype=torch.float64)
tensor([-154.5029, -435.4571, -246.4395, -356.2233, -214.7337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1182, device='cuda:0', dtype=torch.float64)
tensor([-154.4199, -435.2354, -246.4890, -356.2301, -214.8329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1175, device='cuda:0', dtype=torch.float64)
tensor([-154.3942, -435.0839, -246.3754, -356.1640, -214.8683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1263, device='cuda:0', dtype=torch.float64)
tensor([-154.3008, -434.9613, -246.1543, -355.8983, -214.8059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1216, device='cuda:0', dtype=torch.float64)
tensor([-154.1973, -434.8827, -245.8224, -355.4328, -214.6580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1264, device='cuda:0', dtype=torch.float64)
tensor([-154.0223, -434.9879, -245.5818, -355.0289, -214.6028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1275, device='cuda:0', dtype=torch.float64)
tensor([-153.9680, -435.1966, -245.4198, -354.9639, -214.7061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1308, device='cuda:0', dtype=torch.float64)
tensor([-153.9947, -435.4914, -245.2618, -354.7742, -214.6709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1285, device='cuda:0', dtype=torch.float64)
tensor([-154.0847, -435.7780, -245.2062, -354.6991, -214.7400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1535, device='cuda:0', dtype=torch.float64)
tensor([-154.0952, -435.9758, -245.0674, -354.4278, -214.6866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1111, device='cuda:0', dtype=torch.float64)
tensor([-154.1386, -436.2717, -244.9734, -354.0335, -214.6741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1136, device='cuda:0', dtype=torch.float64)
tensor([-154.1157, -436.6173, -244.8397, -353.5677, -214.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1338, device='cuda:0', dtype=torch.float64)
tensor([-154.1426, -437.0259, -244.8304, -353.4554, -214.5456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1082, device='cuda:0', dtype=torch.float64)
tensor([-154.2122, -437.3739, -244.6947, -353.3628, -214.4675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1356, device='cuda:0', dtype=torch.float64)
tensor([-154.3253, -437.7956, -244.6371, -353.4944, -214.4138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1128, device='cuda:0', dtype=torch.float64)
tensor([-154.4545, -438.2123, -244.5443, -353.6553, -214.3489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1217, device='cuda:0', dtype=torch.float64)
tensor([-154.5280, -438.7006, -244.5242, -353.9590, -214.3231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-154.5505, -439.0274, -244.5357, -354.1082, -214.2110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1317, device='cuda:0', dtype=torch.float64)
tensor([-154.6410, -439.3806, -244.5624, -354.3997, -214.0905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1372, device='cuda:0', dtype=torch.float64)
tensor([-154.7432, -439.4738, -244.3897, -354.4205, -213.7237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1317, device='cuda:0', dtype=torch.float64)
tensor([-154.9420, -439.5416, -244.3234, -354.5337, -213.5496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1274, device='cuda:0', dtype=torch.float64)
tensor([-155.1962, -439.7060, -244.3356, -354.6535, -213.4571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1992, device='cuda:0', dtype=torch.float64)
tensor([-155.4275, -439.9825, -244.4548, -354.9322, -213.3249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1074, device='cuda:0', dtype=torch.float64)
tensor([-155.5904, -440.1803, -244.5262, -354.9256, -213.2387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1170, device='cuda:0', dtype=torch.float64)
tensor([-155.7669, -440.4473, -244.6738, -355.0289, -213.1693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1185, device='cuda:0', dtype=torch.float64)
tensor([-155.8191, -440.7673, -244.7608, -354.9778, -213.0158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1220, device='cuda:0', dtype=torch.float64)
tensor([-155.9690, -441.1294, -244.8742, -355.0460, -212.9107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1139, device='cuda:0', dtype=torch.float64)
tensor([-156.0153, -441.4019, -245.0370, -354.9315, -212.8289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1202, device='cuda:0', dtype=torch.float64)
tensor([-156.0462, -441.6510, -244.9656, -354.6944, -212.6881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1404, device='cuda:0', dtype=torch.float64)
tensor([-156.1908, -441.9208, -244.8350, -354.5518, -212.5874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1303, device='cuda:0', dtype=torch.float64)
tensor([-156.3203, -442.1791, -244.6219, -354.2903, -212.4924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1280, device='cuda:0', dtype=torch.float64)
tensor([-156.3746, -442.4044, -244.5767, -354.0281, -212.5131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1523, device='cuda:0', dtype=torch.float64)
tensor([-156.4630, -442.5759, -244.6506, -353.9271, -212.6037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1206, device='cuda:0', dtype=torch.float64)
tensor([-156.4718, -442.7916, -244.7638, -353.7300, -212.7636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1259, device='cuda:0', dtype=torch.float64)
tensor([-156.5388, -443.0607, -244.7573, -353.4740, -212.8857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1096, device='cuda:0', dtype=torch.float64)
tensor([-156.5554, -443.2199, -244.6298, -353.1709, -212.9840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1111, device='cuda:0', dtype=torch.float64)
tensor([-156.5898, -443.4255, -244.5776, -352.9311, -213.1192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1411, device='cuda:0', dtype=torch.float64)
tensor([-156.5022, -443.6157, -244.5242, -352.4151, -213.0977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1182, device='cuda:0', dtype=torch.float64)
tensor([-156.2827, -443.7177, -244.3918, -351.6023, -213.0097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1121, device='cuda:0', dtype=torch.float64)
tensor([-156.1207, -443.8486, -244.2486, -351.0634, -213.0276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1440, device='cuda:0', dtype=torch.float64)
tensor([-155.9997, -443.9994, -244.1261, -350.5930, -213.0922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1215, device='cuda:0', dtype=torch.float64)
tensor([-155.8239, -444.0614, -243.9090, -350.0562, -213.0262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1208, device='cuda:0', dtype=torch.float64)
tensor([-155.7145, -443.9865, -243.8264, -349.6987, -213.0064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1043, device='cuda:0', dtype=torch.float64)
tensor([-155.7425, -444.0267, -243.8934, -349.5682, -213.0266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1366, device='cuda:0', dtype=torch.float64)
tensor([-155.9179, -444.2092, -243.9502, -349.6412, -213.0518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1178, device='cuda:0', dtype=torch.float64)
tensor([-156.2013, -444.4783, -244.1256, -349.9918, -213.0179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1527, device='cuda:0', dtype=torch.float64)
tensor([-156.4707, -444.6782, -244.3847, -350.4900, -213.0557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1377, device='cuda:0', dtype=torch.float64)
tensor([-156.6155, -444.6506, -244.6263, -350.6164, -212.9694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1227, device='cuda:0', dtype=torch.float64)
tensor([-156.7389, -444.6850, -244.7033, -350.4804, -212.7945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1367, device='cuda:0', dtype=torch.float64)
tensor([-156.9638, -444.7594, -244.6371, -350.5024, -212.5850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1666, device='cuda:0', dtype=torch.float64)
tensor([-157.1488, -444.6911, -244.7428, -350.3432, -212.4104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1283, device='cuda:0', dtype=torch.float64)
tensor([-157.1781, -444.5835, -244.6927, -349.8299, -212.1626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1034, device='cuda:0', dtype=torch.float64)
tensor([-157.1614, -444.3366, -244.6162, -349.1404, -211.8218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1583, device='cuda:0', dtype=torch.float64)
tensor([-157.1278, -444.0766, -244.4841, -348.3155, -211.4856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1214, device='cuda:0', dtype=torch.float64)
tensor([-157.1841, -443.9108, -244.4097, -347.6155, -211.3619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1027, device='cuda:0', dtype=torch.float64)
tensor([-157.2225, -443.7379, -244.1879, -346.7770, -211.1645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1140, device='cuda:0', dtype=torch.float64)
tensor([-157.2496, -443.4688, -243.9667, -345.8824, -210.9292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1366, device='cuda:0', dtype=torch.float64)
tensor([-157.3820, -443.1271, -243.9866, -345.2620, -210.6697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1292, device='cuda:0', dtype=torch.float64)
tensor([-157.4264, -442.7459, -243.9167, -344.3823, -210.2883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1333, device='cuda:0', dtype=torch.float64)
tensor([-157.3660, -442.3376, -243.7825, -343.2941, -209.8719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1023, device='cuda:0', dtype=torch.float64)
tensor([-157.3471, -442.1019, -243.6817, -342.3973, -209.6657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1252, device='cuda:0', dtype=torch.float64)
tensor([-157.3129, -441.8762, -243.6600, -341.5732, -209.5428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1193, device='cuda:0', dtype=torch.float64)
tensor([-157.2234, -441.5319, -243.5951, -340.8599, -209.4752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1134, device='cuda:0', dtype=torch.float64)
tensor([-157.3126, -441.1740, -243.5512, -340.2985, -209.4525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1045, device='cuda:0', dtype=torch.float64)
tensor([-157.3452, -440.8535, -243.5472, -340.0674, -209.5733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1260, device='cuda:0', dtype=torch.float64)
tensor([-157.3666, -440.5036, -243.5899, -339.9671, -209.6818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2087, device='cuda:0', dtype=torch.float64)
tensor([-157.3272, -440.2312, -243.5943, -339.9989, -209.8340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1162, device='cuda:0', dtype=torch.float64)
tensor([-157.2781, -439.9354, -243.4931, -340.1937, -210.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1037, device='cuda:0', dtype=torch.float64)
tensor([-157.2142, -439.5724, -243.4732, -340.4677, -210.1609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1146, device='cuda:0', dtype=torch.float64)
tensor([-157.2490, -439.1514, -243.4020, -340.8389, -210.3092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1265, device='cuda:0', dtype=torch.float64)
tensor([-157.1925, -438.6775, -243.2330, -341.0384, -210.5172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1649, device='cuda:0', dtype=torch.float64)
tensor([-156.8908, -438.0910, -242.8805, -340.7655, -210.3955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1190, device='cuda:0', dtype=torch.float64)
tensor([-156.5535, -437.5514, -242.4299, -340.3719, -210.1462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1231, device='cuda:0', dtype=torch.float64)
tensor([-156.3288, -437.1125, -242.2412, -340.2694, -210.0238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1253, device='cuda:0', dtype=torch.float64)
tensor([-156.1362, -436.7263, -242.1970, -340.2099, -210.0022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1288, device='cuda:0', dtype=torch.float64)
tensor([-155.9571, -436.3169, -242.0595, -339.9667, -210.0508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1118, device='cuda:0', dtype=torch.float64)
tensor([-155.8119, -435.9930, -241.9309, -339.7623, -210.1136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1265, device='cuda:0', dtype=torch.float64)
tensor([-155.6563, -435.6821, -241.7495, -339.4586, -210.0856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1463, device='cuda:0', dtype=torch.float64)
tensor([-155.5896, -435.4849, -241.5656, -339.3482, -210.0099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1271, device='cuda:0', dtype=torch.float64)
tensor([-155.3634, -435.2267, -241.3004, -338.7499, -209.8276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1303, device='cuda:0', dtype=torch.float64)
tensor([-155.1631, -434.9730, -241.0244, -338.0645, -209.6121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1325, device='cuda:0', dtype=torch.float64)
tensor([-155.1479, -434.8788, -240.9272, -337.6852, -209.3938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1271, device='cuda:0', dtype=torch.float64)
tensor([-155.0451, -434.7517, -240.9149, -337.3096, -209.1557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1139, device='cuda:0', dtype=torch.float64)
tensor([-154.8089, -434.5721, -240.9364, -336.6488, -208.7483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1265, device='cuda:0', dtype=torch.float64)
tensor([-154.5722, -434.3626, -241.0097, -335.9918, -208.4743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1134, device='cuda:0', dtype=torch.float64)
tensor([-154.4393, -434.1848, -241.1520, -335.3985, -208.2772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1122, device='cuda:0', dtype=torch.float64)
tensor([-154.2594, -433.7907, -241.1572, -334.6662, -208.1150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1090, device='cuda:0', dtype=torch.float64)
tensor([-154.0704, -433.2880, -241.3330, -333.7723, -207.8772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1267, device='cuda:0', dtype=torch.float64)
tensor([-153.8605, -432.7169, -241.4226, -332.6828, -207.5284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1185, device='cuda:0', dtype=torch.float64)
tensor([-153.6912, -432.1760, -241.4715, -331.6628, -207.2146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1129, device='cuda:0', dtype=torch.float64)
tensor([-153.6093, -431.7318, -241.6662, -330.9640, -207.0828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1141, device='cuda:0', dtype=torch.float64)
tensor([-153.5091, -431.3390, -241.8255, -330.2080, -206.9313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1236, device='cuda:0', dtype=torch.float64)
tensor([-153.5144, -431.1282, -242.0970, -329.8129, -206.8718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1225, device='cuda:0', dtype=torch.float64)
tensor([-153.6139, -431.0281, -242.1781, -329.6709, -206.8608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1411, device='cuda:0', dtype=torch.float64)
tensor([-153.5924, -430.8854, -242.0991, -329.2193, -206.7544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1164, device='cuda:0', dtype=torch.float64)
tensor([-153.6373, -430.7126, -241.7761, -328.7829, -206.5948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1427, device='cuda:0', dtype=torch.float64)
tensor([-153.7036, -430.5488, -241.4420, -328.1749, -206.4324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1107, device='cuda:0', dtype=torch.float64)
tensor([-153.7953, -430.4448, -241.1074, -327.7927, -206.3188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1220, device='cuda:0', dtype=torch.float64)
tensor([-153.9141, -430.2362, -240.7272, -327.4360, -206.1483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1269, device='cuda:0', dtype=torch.float64)
tensor([-153.9090, -430.0730, -240.2182, -326.6660, -205.8557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1268, device='cuda:0', dtype=torch.float64)
tensor([-153.9400, -429.9519, -239.6788, -325.8501, -205.5387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1370, device='cuda:0', dtype=torch.float64)
tensor([-153.8980, -429.9654, -239.3447, -325.3489, -205.2657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1147, device='cuda:0', dtype=torch.float64)
tensor([-153.8632, -430.1180, -239.0078, -324.9847, -205.1717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1231, device='cuda:0', dtype=torch.float64)
tensor([-153.9538, -430.1776, -238.7376, -324.7904, -205.0779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1314, device='cuda:0', dtype=torch.float64)
tensor([-154.1572, -430.3264, -238.4761, -324.7044, -204.9425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1169, device='cuda:0', dtype=torch.float64)
tensor([-154.4716, -430.5430, -238.4236, -324.8305, -204.9589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1428, device='cuda:0', dtype=torch.float64)
tensor([-154.7885, -430.8392, -238.5209, -325.0325, -204.9048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1221, device='cuda:0', dtype=torch.float64)
tensor([-154.9893, -430.9740, -238.6240, -325.2824, -204.8469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1390, device='cuda:0', dtype=torch.float64)
tensor([-155.1793, -431.0109, -238.7268, -325.4378, -204.7074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1585, device='cuda:0', dtype=torch.float64)
tensor([-155.2485, -431.0285, -238.7505, -325.2826, -204.6536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1240, device='cuda:0', dtype=torch.float64)
tensor([-155.2251, -430.8626, -238.6051, -325.0177, -204.5221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1481, device='cuda:0', dtype=torch.float64)
tensor([-155.1158, -430.7094, -238.8319, -324.8807, -204.3784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0995, device='cuda:0', dtype=torch.float64)
tensor([-154.9181, -430.5439, -238.9243, -324.5922, -204.3068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1070, device='cuda:0', dtype=torch.float64)
tensor([-154.6819, -430.3209, -239.1489, -324.3519, -204.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1179, device='cuda:0', dtype=torch.float64)
tensor([-154.4879, -430.0808, -239.3453, -324.2591, -204.1150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1229, device='cuda:0', dtype=torch.float64)
tensor([-154.2793, -429.7279, -239.5530, -324.0527, -204.0676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1399, device='cuda:0', dtype=torch.float64)
tensor([-153.9736, -429.3190, -239.5327, -323.2788, -203.9166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1094, device='cuda:0', dtype=torch.float64)
tensor([-153.7164, -428.9134, -239.5228, -322.6467, -203.7409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0987, device='cuda:0', dtype=torch.float64)
tensor([-153.6374, -428.6629, -239.5780, -322.2349, -203.5512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1312, device='cuda:0', dtype=torch.float64)
tensor([-153.5401, -428.4431, -239.5175, -321.8957, -203.3126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1196, device='cuda:0', dtype=torch.float64)
tensor([-153.5464, -428.0818, -239.3990, -321.6024, -203.0532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1204, device='cuda:0', dtype=torch.float64)
tensor([-153.5271, -427.6751, -239.1987, -321.2371, -202.8217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1171, device='cuda:0', dtype=torch.float64)
tensor([-153.4484, -427.3689, -238.8949, -320.8314, -202.6961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1350, device='cuda:0', dtype=torch.float64)
tensor([-153.3489, -426.9203, -238.4664, -320.0692, -202.4660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1155, device='cuda:0', dtype=torch.float64)
tensor([-153.1876, -426.3378, -237.9015, -319.1537, -202.2086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1197, device='cuda:0', dtype=torch.float64)
tensor([-153.0490, -425.6877, -237.3544, -318.1873, -201.8527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1129, device='cuda:0', dtype=torch.float64)
tensor([-152.9483, -425.1456, -236.9619, -317.4375, -201.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1406, device='cuda:0', dtype=torch.float64)
tensor([-152.8387, -424.7429, -236.5886, -316.6023, -201.1660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1179, device='cuda:0', dtype=torch.float64)
tensor([-152.8323, -424.2436, -236.4284, -316.1121, -200.9258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1255, device='cuda:0', dtype=torch.float64)
tensor([-152.8429, -423.7516, -236.3599, -315.6870, -200.6880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1154, device='cuda:0', dtype=torch.float64)
tensor([-152.8995, -423.2860, -236.1704, -315.0205, -200.4092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1309, device='cuda:0', dtype=torch.float64)
tensor([-152.9965, -422.8682, -235.8526, -314.3370, -200.1598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1119, device='cuda:0', dtype=torch.float64)
tensor([-152.9665, -422.4992, -235.5996, -313.6880, -199.8863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1313, device='cuda:0', dtype=torch.float64)
tensor([-152.8601, -422.0381, -235.5369, -313.0804, -199.6563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1132, device='cuda:0', dtype=torch.float64)
tensor([-152.7218, -421.5557, -235.5435, -312.4784, -199.4156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1492, device='cuda:0', dtype=torch.float64)
tensor([-152.5917, -421.1700, -235.5810, -311.8521, -199.0745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1164, device='cuda:0', dtype=torch.float64)
tensor([-152.5519, -420.8547, -235.6556, -311.5073, -198.7744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1135, device='cuda:0', dtype=torch.float64)
tensor([-152.5434, -420.4584, -235.7167, -311.2227, -198.5802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1411, device='cuda:0', dtype=torch.float64)
tensor([-152.4955, -420.1234, -235.8522, -311.0827, -198.4511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1276, device='cuda:0', dtype=torch.float64)
tensor([-152.3312, -419.7806, -236.0853, -310.9511, -198.2216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1306, device='cuda:0', dtype=torch.float64)
tensor([-152.1739, -419.3578, -236.2368, -310.4804, -197.8194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1270, device='cuda:0', dtype=torch.float64)
tensor([-152.0567, -418.6729, -236.4109, -309.9068, -197.2910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1370, device='cuda:0', dtype=torch.float64)
tensor([-151.9394, -418.0995, -236.6825, -309.5750, -196.8944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1137, device='cuda:0', dtype=torch.float64)
tensor([-151.8147, -417.5673, -237.0315, -309.2179, -196.5395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1140, device='cuda:0', dtype=torch.float64)
tensor([-151.7522, -417.0608, -237.2900, -308.9375, -196.1883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1339, device='cuda:0', dtype=torch.float64)
tensor([-151.5659, -416.4376, -237.2830, -308.3854, -195.7877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1218, device='cuda:0', dtype=torch.float64)
tensor([-151.4555, -416.0301, -237.3839, -307.9041, -195.4123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1225, device='cuda:0', dtype=torch.float64)
tensor([-151.4002, -415.6012, -237.3595, -307.4550, -195.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1104, device='cuda:0', dtype=torch.float64)
tensor([-151.3431, -415.2104, -237.4289, -307.1619, -195.0119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1161, device='cuda:0', dtype=torch.float64)
tensor([-151.1409, -414.8499, -237.4078, -306.5556, -194.8520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1015, device='cuda:0', dtype=torch.float64)
tensor([-151.0106, -414.5756, -237.4272, -305.9998, -194.7445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1054, device='cuda:0', dtype=torch.float64)
tensor([-150.8713, -414.3165, -237.4058, -305.4218, -194.5969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1144, device='cuda:0', dtype=torch.float64)
tensor([-150.7663, -414.1411, -237.2710, -304.8386, -194.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1063, device='cuda:0', dtype=torch.float64)
tensor([-150.7205, -414.1055, -237.0897, -304.3384, -194.3186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1179, device='cuda:0', dtype=torch.float64)
tensor([-150.8345, -414.0787, -236.8667, -304.1856, -194.2327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1299, device='cuda:0', dtype=torch.float64)
tensor([-150.9830, -414.0088, -236.5667, -304.1165, -194.2458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1168, device='cuda:0', dtype=torch.float64)
tensor([-151.3385, -413.9648, -236.3595, -304.3894, -194.3098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1132, device='cuda:0', dtype=torch.float64)
tensor([-151.5296, -413.7893, -236.1024, -304.4317, -194.3529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1425, device='cuda:0', dtype=torch.float64)
tensor([-151.6439, -413.4654, -235.7622, -304.3874, -194.4058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1240, device='cuda:0', dtype=torch.float64)
tensor([-151.8104, -413.1563, -235.5148, -304.5981, -194.4079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0991, device='cuda:0', dtype=torch.float64)
tensor([-151.9359, -412.8700, -235.1663, -304.8386, -194.4490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1639, device='cuda:0', dtype=torch.float64)
tensor([-151.9915, -412.5639, -234.8353, -304.6002, -194.5052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1178, device='cuda:0', dtype=torch.float64)
tensor([-152.0792, -412.3236, -234.5966, -304.5020, -194.5478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0994, device='cuda:0', dtype=torch.float64)
tensor([-152.1203, -412.0050, -234.3889, -304.4377, -194.6166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1381, device='cuda:0', dtype=torch.float64)
tensor([-152.1392, -411.6573, -234.2188, -304.3890, -194.6772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1210, device='cuda:0', dtype=torch.float64)
tensor([-152.3687, -411.3951, -234.0923, -304.6838, -194.7331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1432, device='cuda:0', dtype=torch.float64)
tensor([-152.4006, -410.8742, -233.9043, -304.4219, -194.6382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1640, device='cuda:0', dtype=torch.float64)
tensor([-152.3038, -410.2311, -233.5291, -303.4914, -194.2876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1197, device='cuda:0', dtype=torch.float64)
tensor([-152.1007, -409.5960, -233.1319, -302.4550, -193.9118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1113, device='cuda:0', dtype=torch.float64)
tensor([-151.9606, -408.8488, -232.6817, -301.4195, -193.5735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1265, device='cuda:0', dtype=torch.float64)
tensor([-151.8445, -408.1809, -232.2926, -300.1612, -193.2197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1436, device='cuda:0', dtype=torch.float64)
tensor([-151.5487, -407.5148, -232.0397, -298.6724, -192.8224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1330, device='cuda:0', dtype=torch.float64)
tensor([-151.1341, -406.9490, -232.0619, -297.2496, -192.3655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1229, device='cuda:0', dtype=torch.float64)
tensor([-150.7337, -406.3525, -232.0494, -295.7500, -191.9349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1265, device='cuda:0', dtype=torch.float64)
tensor([-150.3272, -405.8420, -232.2810, -294.5254, -191.5089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1241, device='cuda:0', dtype=torch.float64)
tensor([-150.0384, -405.2985, -232.4660, -293.4779, -191.1528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1295, device='cuda:0', dtype=torch.float64)
tensor([-149.8610, -404.7553, -232.6687, -292.8162, -190.9687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1210, device='cuda:0', dtype=torch.float64)
tensor([-149.5329, -404.2497, -232.9203, -291.9958, -190.7601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1005, device='cuda:0', dtype=torch.float64)
tensor([-149.1897, -403.6959, -233.1684, -291.3064, -190.5956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1238, device='cuda:0', dtype=torch.float64)
tensor([-148.9248, -403.3922, -233.5064, -290.9724, -190.5843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1457, device='cuda:0', dtype=torch.float64)
tensor([-148.7223, -403.2102, -233.8601, -290.7037, -190.6043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1023, device='cuda:0', dtype=torch.float64)
tensor([-148.4865, -403.0119, -234.0607, -290.3970, -190.6658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1445, device='cuda:0', dtype=torch.float64)
tensor([-148.4176, -402.7583, -234.2635, -290.4269, -190.7326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0896, device='cuda:0', dtype=torch.float64)
tensor([-148.4106, -402.5578, -234.3687, -290.4845, -190.7524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1059, device='cuda:0', dtype=torch.float64)
tensor([-148.4712, -402.4512, -234.4930, -290.7973, -190.8078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1187, device='cuda:0', dtype=torch.float64)
tensor([-148.5758, -402.2919, -234.5021, -291.0128, -190.9071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1504, device='cuda:0', dtype=torch.float64)
tensor([-148.7347, -402.2741, -234.6184, -291.5473, -190.9705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1144, device='cuda:0', dtype=torch.float64)
tensor([-148.8845, -402.1844, -234.7966, -292.1575, -191.0214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1034, device='cuda:0', dtype=torch.float64)
tensor([-149.0059, -402.1433, -234.9749, -292.7467, -190.9901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1103, device='cuda:0', dtype=torch.float64)
tensor([-149.1003, -402.1317, -235.1325, -293.2046, -190.9114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1262, device='cuda:0', dtype=torch.float64)
tensor([-149.2288, -402.1671, -235.2911, -293.6357, -190.8699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1187, device='cuda:0', dtype=torch.float64)
tensor([-149.3772, -402.2415, -235.4006, -294.1347, -190.9159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1135, device='cuda:0', dtype=torch.float64)
tensor([-149.5331, -402.3561, -235.3852, -294.3665, -190.8256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2202, device='cuda:0', dtype=torch.float64)
tensor([-149.5068, -402.4360, -235.2222, -294.0626, -190.6722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1121, device='cuda:0', dtype=torch.float64)
tensor([-149.3599, -402.3521, -235.0042, -293.3870, -190.4874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1156, device='cuda:0', dtype=torch.float64)
tensor([-149.2357, -402.3000, -234.8109, -292.7985, -190.2685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1152, device='cuda:0', dtype=torch.float64)
tensor([-149.1431, -402.1871, -234.6467, -292.0087, -189.9906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1562, device='cuda:0', dtype=torch.float64)
tensor([-149.0670, -402.1515, -234.5254, -291.2507, -189.6688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1133, device='cuda:0', dtype=torch.float64)
tensor([-149.0126, -402.0375, -234.3924, -290.2831, -189.3724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1051, device='cuda:0', dtype=torch.float64)
tensor([-148.9759, -401.9485, -234.2636, -289.4704, -189.0556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1054, device='cuda:0', dtype=torch.float64)
tensor([-148.9562, -401.7796, -234.2704, -288.7967, -188.7374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1358, device='cuda:0', dtype=torch.float64)
tensor([-148.8741, -401.6508, -234.2705, -288.2975, -188.5562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1121, device='cuda:0', dtype=torch.float64)
tensor([-148.8365, -401.5319, -234.1783, -287.9401, -188.3504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1154, device='cuda:0', dtype=torch.float64)
tensor([-148.7814, -401.2662, -233.9418, -287.4237, -188.1417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1239, device='cuda:0', dtype=torch.float64)
tensor([-148.9186, -401.0338, -233.8447, -287.1860, -188.0203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1090, device='cuda:0', dtype=torch.float64)
tensor([-148.9793, -400.7269, -233.8175, -286.7579, -187.8670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1079, device='cuda:0', dtype=torch.float64)
tensor([-149.0068, -400.5082, -233.9495, -286.5574, -187.8242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1211, device='cuda:0', dtype=torch.float64)
tensor([-149.1480, -400.2578, -233.9421, -286.4889, -187.7969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1073, device='cuda:0', dtype=torch.float64)
tensor([-149.3329, -399.9620, -233.7784, -286.3958, -187.8104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0933, device='cuda:0', dtype=torch.float64)
tensor([-149.4911, -399.7778, -233.6404, -286.3733, -187.8682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1125, device='cuda:0', dtype=torch.float64)
tensor([-149.6869, -399.5698, -233.4318, -286.3157, -187.9441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1002, device='cuda:0', dtype=torch.float64)
tensor([-149.9595, -399.2831, -233.2366, -286.2629, -188.0506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1300, device='cuda:0', dtype=torch.float64)
tensor([-150.1379, -398.9195, -232.9178, -285.9866, -188.1028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1312, device='cuda:0', dtype=torch.float64)
tensor([-150.3058, -398.6251, -232.5453, -285.7423, -188.1180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1097, device='cuda:0', dtype=torch.float64)
tensor([-150.4266, -398.0850, -232.0728, -285.3558, -188.1743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1186, device='cuda:0', dtype=torch.float64)
tensor([-150.5282, -397.6730, -231.6905, -285.0108, -188.1719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1251, device='cuda:0', dtype=torch.float64)
tensor([-150.5641, -397.1154, -231.2603, -284.5340, -188.1701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1271, device='cuda:0', dtype=torch.float64)
tensor([-150.4535, -396.5577, -230.8437, -283.8605, -188.1829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1289, device='cuda:0', dtype=torch.float64)
tensor([-150.4520, -396.0657, -230.4626, -283.2257, -188.2002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1174, device='cuda:0', dtype=torch.float64)
tensor([-150.4650, -395.6071, -230.0380, -282.6683, -188.2120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1264, device='cuda:0', dtype=torch.float64)
tensor([-150.4898, -395.1689, -229.6125, -282.0833, -188.1604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0976, device='cuda:0', dtype=torch.float64)
tensor([-150.4730, -394.7098, -229.2323, -281.5448, -188.1112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1187, device='cuda:0', dtype=torch.float64)
tensor([-150.3046, -394.1140, -229.0125, -280.9302, -188.0764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1134, device='cuda:0', dtype=torch.float64)
tensor([-150.1325, -393.5305, -228.7798, -280.3821, -187.9614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1938, device='cuda:0', dtype=torch.float64)
tensor([-150.0278, -393.3863, -228.7917, -280.1806, -187.9082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1459, device='cuda:0', dtype=torch.float64)
tensor([-149.9377, -393.3237, -228.7921, -279.7023, -187.8184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1157, device='cuda:0', dtype=torch.float64)
tensor([-149.9035, -393.2888, -228.7510, -279.4275, -187.7940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1187, device='cuda:0', dtype=torch.float64)
tensor([-149.7814, -393.2630, -228.6609, -278.9319, -187.6832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1061, device='cuda:0', dtype=torch.float64)
tensor([-149.7075, -393.2572, -228.5946, -278.4501, -187.5200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1313, device='cuda:0', dtype=torch.float64)
tensor([-149.6375, -393.2756, -228.5462, -277.9459, -187.3330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1178, device='cuda:0', dtype=torch.float64)
tensor([-149.5471, -393.1118, -228.4426, -277.4333, -187.1528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1276, device='cuda:0', dtype=torch.float64)
tensor([-149.4046, -392.8103, -228.2874, -277.0016, -187.0070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1247, device='cuda:0', dtype=torch.float64)
tensor([-149.3969, -392.5981, -228.1674, -276.8163, -186.9897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-149.3084, -392.2518, -227.9928, -276.3678, -186.8848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1418, device='cuda:0', dtype=torch.float64)
tensor([-149.2629, -391.7022, -227.6895, -275.5590, -186.7252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1185, device='cuda:0', dtype=torch.float64)
tensor([-149.1294, -391.0846, -227.5443, -274.6834, -186.6098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1185, device='cuda:0', dtype=torch.float64)
tensor([-148.9547, -390.4651, -227.3960, -273.5877, -186.4126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1365, device='cuda:0', dtype=torch.float64)
tensor([-148.8055, -389.8847, -227.1896, -272.4947, -186.2798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1263, device='cuda:0', dtype=torch.float64)
tensor([-148.6738, -389.3153, -227.0147, -271.4207, -186.1006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1152, device='cuda:0', dtype=torch.float64)
tensor([-148.5603, -388.6385, -226.9182, -270.2988, -185.8691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1251, device='cuda:0', dtype=torch.float64)
tensor([-148.5369, -387.9356, -226.8265, -269.3163, -185.5972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1136, device='cuda:0', dtype=torch.float64)
tensor([-148.5196, -387.2112, -226.8805, -268.5758, -185.4136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1419, device='cuda:0', dtype=torch.float64)
tensor([-148.5204, -386.6171, -227.0697, -267.9475, -185.2731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1116, device='cuda:0', dtype=torch.float64)
tensor([-148.4924, -386.0136, -227.2293, -267.2406, -185.0971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1021, device='cuda:0', dtype=torch.float64)
tensor([-148.4246, -385.4222, -227.4586, -266.7184, -184.9695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1448, device='cuda:0', dtype=torch.float64)
tensor([-148.3024, -384.8673, -227.8036, -265.9558, -184.8103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1357, device='cuda:0', dtype=torch.float64)
tensor([-148.1018, -384.2512, -228.1097, -264.8418, -184.4366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1043, device='cuda:0', dtype=torch.float64)
tensor([-147.9712, -383.6484, -228.3574, -263.9012, -184.0166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1228, device='cuda:0', dtype=torch.float64)
tensor([-147.7900, -382.9638, -228.4208, -262.9620, -183.6085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1083, device='cuda:0', dtype=torch.float64)
tensor([-147.5929, -382.1874, -228.3894, -262.2397, -183.2507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1127, device='cuda:0', dtype=torch.float64)
tensor([-147.4565, -381.6226, -228.4130, -261.7247, -182.9661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1250, device='cuda:0', dtype=torch.float64)
tensor([-147.3915, -381.2054, -228.5221, -261.5873, -182.7238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1295, device='cuda:0', dtype=torch.float64)
tensor([-147.5016, -380.7843, -228.4718, -261.5462, -182.4772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1169, device='cuda:0', dtype=torch.float64)
tensor([-147.5985, -380.3920, -228.4762, -261.6407, -182.3453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1149, device='cuda:0', dtype=torch.float64)
tensor([-147.6715, -380.1496, -228.5890, -261.8710, -182.3642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1134, device='cuda:0', dtype=torch.float64)
tensor([-147.6735, -379.8743, -228.6456, -262.0184, -182.3620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1292, device='cuda:0', dtype=torch.float64)
tensor([-147.7214, -379.5173, -228.6613, -262.1296, -182.3863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1297, device='cuda:0', dtype=torch.float64)
tensor([-147.6610, -379.0285, -228.5421, -261.7736, -182.3324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1252, device='cuda:0', dtype=torch.float64)
tensor([-147.5849, -378.4533, -228.3719, -261.2589, -182.2629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1149, device='cuda:0', dtype=torch.float64)
tensor([-147.5882, -377.8301, -228.2655, -260.8299, -182.1441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1212, device='cuda:0', dtype=torch.float64)
tensor([-147.5497, -377.1202, -228.1345, -260.1889, -181.9918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1363, device='cuda:0', dtype=torch.float64)
tensor([-147.5778, -376.4671, -227.9657, -259.8114, -181.9505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1288, device='cuda:0', dtype=torch.float64)
tensor([-147.5404, -375.8616, -227.7628, -259.4565, -181.8954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1262, device='cuda:0', dtype=torch.float64)
tensor([-147.4881, -375.2933, -227.6245, -259.1567, -181.8119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1308, device='cuda:0', dtype=torch.float64)
tensor([-147.4465, -374.7461, -227.5269, -258.8082, -181.7840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1301, device='cuda:0', dtype=torch.float64)
tensor([-147.3377, -374.1881, -227.5166, -258.2416, -181.7091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1184, device='cuda:0', dtype=torch.float64)
tensor([-147.2958, -373.7589, -227.5358, -257.9461, -181.6992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1235, device='cuda:0', dtype=torch.float64)
tensor([-147.3506, -373.4049, -227.4557, -257.8180, -181.7079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1152, device='cuda:0', dtype=torch.float64)
tensor([-147.3905, -372.8647, -227.3389, -257.6921, -181.6928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1092, device='cuda:0', dtype=torch.float64)
tensor([-147.4448, -372.4032, -227.3700, -257.6212, -181.8257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0979, device='cuda:0', dtype=torch.float64)
tensor([-147.4586, -371.8774, -227.4031, -257.4703, -181.9471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1311, device='cuda:0', dtype=torch.float64)
tensor([-147.4784, -371.3646, -227.4065, -257.4403, -182.0490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1084, device='cuda:0', dtype=torch.float64)
tensor([-147.5801, -371.0862, -227.3383, -257.5093, -182.1842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1231, device='cuda:0', dtype=torch.float64)
tensor([-147.7683, -370.9339, -227.2970, -257.8454, -182.3536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1094, device='cuda:0', dtype=torch.float64)
tensor([-147.8344, -370.6312, -227.2916, -257.8745, -182.4551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1285, device='cuda:0', dtype=torch.float64)
tensor([-147.8176, -370.2674, -227.2582, -257.6996, -182.5023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0946, device='cuda:0', dtype=torch.float64)
tensor([-147.9325, -370.0445, -227.1744, -257.7972, -182.6029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1080, device='cuda:0', dtype=torch.float64)
tensor([-148.0603, -369.8776, -227.1380, -257.9087, -182.7338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1031, device='cuda:0', dtype=torch.float64)
tensor([-148.1669, -369.7460, -227.0743, -257.8571, -182.9222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1043, device='cuda:0', dtype=torch.float64)
tensor([-148.2294, -369.4759, -226.9040, -257.6549, -183.0080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0930, device='cuda:0', dtype=torch.float64)
tensor([-148.2433, -369.3039, -226.8295, -257.4889, -183.0603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1205, device='cuda:0', dtype=torch.float64)
tensor([-148.1269, -368.9676, -226.6556, -257.1825, -183.0259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1129, device='cuda:0', dtype=torch.float64)
tensor([-147.9048, -368.5067, -226.3579, -256.7743, -182.9247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1136, device='cuda:0', dtype=torch.float64)
tensor([-147.6171, -367.8632, -226.1462, -256.1565, -182.7639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1137, device='cuda:0', dtype=torch.float64)
tensor([-147.4236, -367.0843, -225.9087, -255.5309, -182.6009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1114, device='cuda:0', dtype=torch.float64)
tensor([-147.2019, -366.3105, -225.6777, -254.9870, -182.4136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1137, device='cuda:0', dtype=torch.float64)
tensor([-147.0452, -365.5941, -225.4266, -254.5205, -182.1793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1089, device='cuda:0', dtype=torch.float64)
tensor([-146.9459, -364.8771, -225.1893, -254.1844, -181.9956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0942, device='cuda:0', dtype=torch.float64)
tensor([-146.8599, -364.1746, -224.9652, -253.7392, -181.8213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1108, device='cuda:0', dtype=torch.float64)
tensor([-146.8654, -363.6164, -224.6346, -253.6018, -181.7524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1204, device='cuda:0', dtype=torch.float64)
tensor([-146.8454, -363.1766, -224.2378, -253.3214, -181.6725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1163, device='cuda:0', dtype=torch.float64)
tensor([-146.8400, -362.7610, -223.9764, -253.1943, -181.6184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1114, device='cuda:0', dtype=torch.float64)
tensor([-146.9247, -362.4495, -223.8746, -253.2396, -181.5702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1245, device='cuda:0', dtype=torch.float64)
tensor([-147.0855, -362.0292, -223.8996, -253.4012, -181.5273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1020, device='cuda:0', dtype=torch.float64)
tensor([-147.2498, -361.5377, -223.9425, -253.5333, -181.4895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1310, device='cuda:0', dtype=torch.float64)
tensor([-147.3324, -361.0715, -224.0153, -253.5042, -181.4357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1164, device='cuda:0', dtype=torch.float64)
tensor([-147.4543, -360.7254, -224.1055, -253.5465, -181.4710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1055, device='cuda:0', dtype=torch.float64)
tensor([-147.4861, -360.3155, -224.2340, -253.2963, -181.4377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1084, device='cuda:0', dtype=torch.float64)
tensor([-147.4856, -359.9288, -224.3493, -252.7457, -181.2823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0987, device='cuda:0', dtype=torch.float64)
tensor([-147.4467, -359.6052, -224.4833, -252.3009, -181.1610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1176, device='cuda:0', dtype=torch.float64)
tensor([-147.3446, -359.1457, -224.6024, -251.7678, -181.0210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1217, device='cuda:0', dtype=torch.float64)
tensor([-147.2340, -358.6294, -224.6663, -251.0863, -180.8281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1089, device='cuda:0', dtype=torch.float64)
tensor([-147.0973, -357.8266, -224.6510, -250.3058, -180.6294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1068, device='cuda:0', dtype=torch.float64)
tensor([-147.0658, -357.1434, -224.5889, -249.6569, -180.4245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1184, device='cuda:0', dtype=torch.float64)
tensor([-147.0180, -356.2315, -224.3000, -248.7372, -180.2278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1180, device='cuda:0', dtype=torch.float64)
tensor([-146.8459, -355.3597, -223.9113, -247.7115, -180.0481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1088, device='cuda:0', dtype=torch.float64)
tensor([-146.7350, -354.4837, -223.5046, -246.7381, -179.8559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1153, device='cuda:0', dtype=torch.float64)
tensor([-146.5381, -353.7046, -223.2888, -245.8979, -179.6078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1039, device='cuda:0', dtype=torch.float64)
tensor([-146.4033, -353.0419, -223.1805, -245.3226, -179.3295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1198, device='cuda:0', dtype=torch.float64)
tensor([-146.2415, -352.4050, -223.1020, -244.7345, -179.0338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1052, device='cuda:0', dtype=torch.float64)
tensor([-145.9576, -351.6671, -222.9344, -243.8870, -178.6905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1407, device='cuda:0', dtype=torch.float64)
tensor([-145.8496, -351.2955, -222.9206, -243.5812, -178.5625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1028, device='cuda:0', dtype=torch.float64)
tensor([-145.6950, -350.8939, -222.8611, -243.1205, -178.3624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1114, device='cuda:0', dtype=torch.float64)
tensor([-145.5035, -350.5614, -222.9373, -242.7280, -178.2284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1035, device='cuda:0', dtype=torch.float64)
tensor([-145.2789, -350.2469, -222.9491, -242.2478, -178.0468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1098, device='cuda:0', dtype=torch.float64)
tensor([-145.0769, -349.7187, -222.8323, -241.7450, -177.8368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1245, device='cuda:0', dtype=torch.float64)
tensor([-145.0126, -349.1173, -222.6267, -241.4667, -177.7346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1029, device='cuda:0', dtype=torch.float64)
tensor([-144.9523, -348.6246, -222.5141, -241.1885, -177.6139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1251, device='cuda:0', dtype=torch.float64)
tensor([-144.9175, -348.1026, -222.4046, -240.9957, -177.5081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1196, device='cuda:0', dtype=torch.float64)
tensor([-144.8572, -347.4861, -222.2030, -240.5521, -177.4159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1235, device='cuda:0', dtype=torch.float64)
tensor([-144.7766, -346.8421, -221.9351, -240.1651, -177.3885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1069, device='cuda:0', dtype=torch.float64)
tensor([-144.7307, -346.2451, -221.7333, -239.9053, -177.4058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1062, device='cuda:0', dtype=torch.float64)
tensor([-144.6338, -345.4990, -221.4371, -239.3699, -177.3672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1219, device='cuda:0', dtype=torch.float64)
tensor([-144.4509, -344.7830, -221.2022, -238.7189, -177.3106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1005, device='cuda:0', dtype=torch.float64)
tensor([-144.2479, -344.1525, -221.1182, -238.2114, -177.2761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1056, device='cuda:0', dtype=torch.float64)
tensor([-144.0887, -343.5553, -221.1288, -237.7413, -177.3503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1025, device='cuda:0', dtype=torch.float64)
tensor([-143.9313, -342.8547, -221.0629, -237.0991, -177.3986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1312, device='cuda:0', dtype=torch.float64)
tensor([-143.8712, -342.1504, -220.8805, -236.6337, -177.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1110, device='cuda:0', dtype=torch.float64)
tensor([-143.8103, -341.3307, -220.6767, -236.0035, -177.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1353, device='cuda:0', dtype=torch.float64)
tensor([-143.8172, -340.5477, -220.4277, -235.4350, -177.6329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1018, device='cuda:0', dtype=torch.float64)
tensor([-143.8592, -339.7347, -220.2584, -234.8837, -177.5847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1171, device='cuda:0', dtype=torch.float64)
tensor([-143.9171, -338.9127, -220.1729, -234.3858, -177.5167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1099, device='cuda:0', dtype=torch.float64)
tensor([-144.0832, -338.1060, -220.0531, -234.0890, -177.5595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1028, device='cuda:0', dtype=torch.float64)
tensor([-144.2319, -337.3200, -219.7816, -233.6646, -177.5348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1048, device='cuda:0', dtype=torch.float64)
tensor([-144.4224, -336.5346, -219.6054, -233.3712, -177.4887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1228, device='cuda:0', dtype=torch.float64)
tensor([-144.6898, -335.8843, -219.3424, -233.0994, -177.4129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1046, device='cuda:0', dtype=torch.float64)
tensor([-144.9612, -335.3349, -219.1032, -232.8827, -177.2809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1054, device='cuda:0', dtype=torch.float64)
tensor([-145.1778, -334.7801, -218.8542, -232.6254, -177.0934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1149, device='cuda:0', dtype=torch.float64)
tensor([-145.3702, -334.3369, -218.7222, -232.4739, -176.9736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1130, device='cuda:0', dtype=torch.float64)
tensor([-145.5846, -333.9325, -218.6143, -232.3606, -176.8563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1137, device='cuda:0', dtype=torch.float64)
tensor([-145.8560, -333.5083, -218.3988, -232.3456, -176.7336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1140, device='cuda:0', dtype=torch.float64)
tensor([-146.1899, -333.0449, -218.2455, -232.4816, -176.6977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1144, device='cuda:0', dtype=torch.float64)
tensor([-146.4662, -332.6105, -218.0972, -232.4771, -176.6383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1179, device='cuda:0', dtype=torch.float64)
tensor([-146.6807, -332.0657, -217.9506, -232.5272, -176.6030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1303, device='cuda:0', dtype=torch.float64)
tensor([-146.8152, -331.3893, -217.7617, -232.3540, -176.5005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1302, device='cuda:0', dtype=torch.float64)
tensor([-146.8965, -330.5915, -217.5059, -231.9189, -176.3668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0999, device='cuda:0', dtype=torch.float64)
tensor([-146.9611, -329.9108, -217.3394, -231.3607, -176.2415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1065, device='cuda:0', dtype=torch.float64)
tensor([-147.0654, -329.4536, -217.2507, -231.0225, -176.1592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1224, device='cuda:0', dtype=torch.float64)
tensor([-147.1704, -329.1171, -217.2632, -230.8250, -176.1254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1105, device='cuda:0', dtype=torch.float64)
tensor([-147.2524, -328.8088, -217.3572, -230.6931, -176.1560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1111, device='cuda:0', dtype=torch.float64)
tensor([-147.3597, -328.5127, -217.4348, -230.5009, -176.2043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1113, device='cuda:0', dtype=torch.float64)
tensor([-147.3513, -328.2754, -217.5378, -230.3192, -176.2980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1343, device='cuda:0', dtype=torch.float64)
tensor([-147.2104, -327.9904, -217.5507, -230.0048, -176.3451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0995, device='cuda:0', dtype=torch.float64)
tensor([-146.9806, -327.7108, -217.6830, -229.7633, -176.4667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1199, device='cuda:0', dtype=torch.float64)
tensor([-146.8326, -327.4453, -217.7673, -229.6577, -176.6027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1266, device='cuda:0', dtype=torch.float64)
tensor([-146.7254, -327.2263, -217.8070, -229.6813, -176.7354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1174, device='cuda:0', dtype=torch.float64)
tensor([-146.6411, -327.0905, -217.9427, -229.9415, -176.8752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1160, device='cuda:0', dtype=torch.float64)
tensor([-146.6216, -326.8579, -218.1598, -230.1966, -177.0501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1247, device='cuda:0', dtype=torch.float64)
tensor([-146.5893, -326.6044, -218.3263, -230.6493, -177.2693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1023, device='cuda:0', dtype=torch.float64)
tensor([-146.5717, -326.4021, -218.5570, -230.9769, -177.4767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0949, device='cuda:0', dtype=torch.float64)
tensor([-146.6182, -326.2819, -218.7520, -231.4169, -177.7378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0980, device='cuda:0', dtype=torch.float64)
tensor([-146.7470, -326.1509, -218.9132, -231.8231, -177.9832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1129, device='cuda:0', dtype=torch.float64)
tensor([-146.8780, -325.9508, -219.0336, -232.0313, -178.2092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1059, device='cuda:0', dtype=torch.float64)
tensor([-147.0534, -325.7127, -219.0713, -232.1770, -178.4478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0935, device='cuda:0', dtype=torch.float64)
tensor([-147.2191, -325.4933, -219.0242, -232.3162, -178.6389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1207, device='cuda:0', dtype=torch.float64)
tensor([-147.4521, -325.2777, -218.9561, -232.4931, -178.7546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0970, device='cuda:0', dtype=torch.float64)
tensor([-147.6076, -325.2273, -218.9914, -232.4264, -178.7926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1172, device='cuda:0', dtype=torch.float64)
tensor([-147.7817, -325.1351, -219.0052, -232.3991, -178.8093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0929, device='cuda:0', dtype=torch.float64)
tensor([-147.8886, -325.0955, -219.0496, -232.3567, -178.8340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1244, device='cuda:0', dtype=torch.float64)
tensor([-147.9520, -325.1021, -219.1550, -232.3068, -178.8343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1114, device='cuda:0', dtype=torch.float64)
tensor([-147.9897, -324.8705, -219.1872, -232.0771, -178.7851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1100, device='cuda:0', dtype=torch.float64)
tensor([-147.9913, -324.4694, -219.1115, -231.6136, -178.7000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1120, device='cuda:0', dtype=torch.float64)
tensor([-148.0147, -324.1151, -219.0507, -231.1938, -178.6786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1086, device='cuda:0', dtype=torch.float64)
tensor([-148.0401, -323.7509, -219.0335, -230.7595, -178.6828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0959, device='cuda:0', dtype=torch.float64)
tensor([-148.0923, -323.3328, -218.9688, -230.1900, -178.5949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1133, device='cuda:0', dtype=torch.float64)
tensor([-148.1201, -322.8624, -218.8329, -229.5239, -178.5351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1078, device='cuda:0', dtype=torch.float64)
tensor([-148.2199, -322.2830, -218.7166, -228.8969, -178.5576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1204, device='cuda:0', dtype=torch.float64)
tensor([-148.2037, -321.5051, -218.3541, -227.9244, -178.4569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1205, device='cuda:0', dtype=torch.float64)
tensor([-148.1337, -320.7719, -217.9903, -226.9969, -178.3179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1031, device='cuda:0', dtype=torch.float64)
tensor([-148.0762, -319.9918, -217.6071, -226.0980, -178.1782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-148.0475, -319.3742, -217.3355, -225.3185, -178.0439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0949, device='cuda:0', dtype=torch.float64)
tensor([-148.0494, -318.7936, -217.0891, -224.7052, -177.9922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1075, device='cuda:0', dtype=torch.float64)
tensor([-147.9755, -318.2450, -216.8650, -224.0829, -177.8953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1105, device='cuda:0', dtype=torch.float64)
tensor([-147.9175, -317.8288, -216.6854, -223.5406, -177.8072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1140, device='cuda:0', dtype=torch.float64)
tensor([-147.9106, -317.4738, -216.4988, -223.0801, -177.7327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0872, device='cuda:0', dtype=torch.float64)
tensor([-147.9250, -317.1174, -216.3345, -222.6350, -177.6197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0961, device='cuda:0', dtype=torch.float64)
tensor([-147.9522, -316.7691, -216.1893, -222.1648, -177.5389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1131, device='cuda:0', dtype=torch.float64)
tensor([-148.0552, -316.3120, -216.0626, -221.7326, -177.5392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0900, device='cuda:0', dtype=torch.float64)
tensor([-148.1383, -315.7763, -215.9708, -221.3757, -177.5992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0986, device='cuda:0', dtype=torch.float64)
tensor([-148.1856, -315.1428, -215.8448, -221.0074, -177.6046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1059, device='cuda:0', dtype=torch.float64)
tensor([-148.2308, -314.4805, -215.7675, -220.5368, -177.5460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1007, device='cuda:0', dtype=torch.float64)
tensor([-148.2169, -313.6697, -215.6453, -219.8566, -177.4268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1322, device='cuda:0', dtype=torch.float64)
tensor([-148.2787, -312.9738, -215.6490, -219.3966, -177.3340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1130, device='cuda:0', dtype=torch.float64)
tensor([-148.3390, -312.1455, -215.5323, -218.8560, -177.1708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1010, device='cuda:0', dtype=torch.float64)
tensor([-148.4185, -311.4241, -215.4444, -218.4724, -177.0668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1034, device='cuda:0', dtype=torch.float64)
tensor([-148.5431, -310.7648, -215.3988, -218.2947, -177.0348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1090, device='cuda:0', dtype=torch.float64)
tensor([-148.7381, -310.1007, -215.2561, -218.2438, -177.0623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1086, device='cuda:0', dtype=torch.float64)
tensor([-148.9967, -309.5759, -215.1973, -218.2902, -177.1491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0958, device='cuda:0', dtype=torch.float64)
tensor([-149.1926, -309.0855, -215.1655, -218.2948, -177.2218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0903, device='cuda:0', dtype=torch.float64)
tensor([-149.4343, -308.5974, -215.1686, -218.3381, -177.3189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1111, device='cuda:0', dtype=torch.float64)
tensor([-149.5527, -308.0565, -215.2071, -218.2680, -177.3380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0949, device='cuda:0', dtype=torch.float64)
tensor([-149.6770, -307.4802, -215.1903, -218.2414, -177.3467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1312, device='cuda:0', dtype=torch.float64)
tensor([-149.8414, -306.8621, -215.0821, -218.0085, -177.3430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1327, device='cuda:0', dtype=torch.float64)
tensor([-149.8911, -306.2724, -215.0818, -217.7356, -177.3398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1140, device='cuda:0', dtype=torch.float64)
tensor([-149.9486, -305.6761, -214.9654, -217.4877, -177.2654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1051, device='cuda:0', dtype=torch.float64)
tensor([-149.8391, -304.9810, -214.7912, -216.9382, -177.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1050, device='cuda:0', dtype=torch.float64)
tensor([-149.8251, -304.3687, -214.6825, -216.5999, -177.0506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0933, device='cuda:0', dtype=torch.float64)
tensor([-149.8586, -303.9316, -214.6007, -216.4562, -177.0371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1197, device='cuda:0', dtype=torch.float64)
tensor([-149.8174, -303.2624, -214.3633, -216.2614, -177.0149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1096, device='cuda:0', dtype=torch.float64)
tensor([-149.7439, -302.6872, -214.0872, -215.9742, -176.9676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1098, device='cuda:0', dtype=torch.float64)
tensor([-149.6205, -302.0526, -213.8346, -215.5009, -176.8884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0891, device='cuda:0', dtype=torch.float64)
tensor([-149.5561, -301.3798, -213.5678, -215.0201, -176.7947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1093, device='cuda:0', dtype=torch.float64)
tensor([-149.5071, -300.8440, -213.3940, -214.5925, -176.7739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1203, device='cuda:0', dtype=torch.float64)
tensor([-149.4836, -300.2544, -213.0719, -214.2047, -176.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1126, device='cuda:0', dtype=torch.float64)
tensor([-149.4431, -299.8144, -212.9330, -213.9458, -176.8773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1004, device='cuda:0', dtype=torch.float64)
tensor([-149.4251, -299.4433, -212.8953, -213.8187, -176.8854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0877, device='cuda:0', dtype=torch.float64)
tensor([-149.4279, -299.1653, -212.9105, -213.8118, -176.8847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0980, device='cuda:0', dtype=torch.float64)
tensor([-149.3849, -298.7560, -212.8476, -213.5916, -176.8111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1179, device='cuda:0', dtype=torch.float64)
tensor([-149.3427, -298.4097, -212.8661, -213.2565, -176.7186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0967, device='cuda:0', dtype=torch.float64)
tensor([-149.3954, -298.0914, -212.7734, -213.0820, -176.6195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1024, device='cuda:0', dtype=torch.float64)
tensor([-149.5128, -297.6657, -212.5940, -212.9012, -176.5026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0979, device='cuda:0', dtype=torch.float64)
tensor([-149.6743, -297.3396, -212.4626, -212.7257, -176.3945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1012, device='cuda:0', dtype=torch.float64)
tensor([-149.8839, -296.9751, -212.3672, -212.6556, -176.3432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-150.0846, -296.5319, -212.2240, -212.5520, -176.2903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1007, device='cuda:0', dtype=torch.float64)
tensor([-150.2324, -296.0457, -212.1060, -212.3104, -176.2643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1106, device='cuda:0', dtype=torch.float64)
tensor([-150.3996, -295.6922, -212.1012, -212.2193, -176.3414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0961, device='cuda:0', dtype=torch.float64)
tensor([-150.6458, -295.3356, -212.1480, -212.2221, -176.4746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1080, device='cuda:0', dtype=torch.float64)
tensor([-150.8482, -294.7614, -212.0624, -211.9854, -176.5207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1004, device='cuda:0', dtype=torch.float64)
tensor([-151.0142, -294.1724, -211.9553, -211.6139, -176.5111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1099, device='cuda:0', dtype=torch.float64)
tensor([-151.2140, -293.3447, -211.7165, -211.2733, -176.5514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1050, device='cuda:0', dtype=torch.float64)
tensor([-151.4021, -292.6234, -211.5869, -211.0567, -176.6893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1020, device='cuda:0', dtype=torch.float64)
tensor([-151.6525, -292.0636, -211.5452, -210.9685, -176.8502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0933, device='cuda:0', dtype=torch.float64)
tensor([-151.8863, -291.5741, -211.4391, -210.8248, -177.0018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0966, device='cuda:0', dtype=torch.float64)
tensor([-152.1185, -291.0364, -211.3200, -210.5690, -177.1066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0966, device='cuda:0', dtype=torch.float64)
tensor([-152.3029, -290.4879, -211.2784, -210.4047, -177.2736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0977, device='cuda:0', dtype=torch.float64)
tensor([-152.4967, -290.0800, -211.2981, -210.4001, -177.4443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0979, device='cuda:0', dtype=torch.float64)
tensor([-152.6570, -289.7500, -211.3612, -210.4132, -177.6237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0951, device='cuda:0', dtype=torch.float64)
tensor([-152.8495, -289.5031, -211.4776, -210.4064, -177.8017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1208, device='cuda:0', dtype=torch.float64)
tensor([-153.0272, -289.1763, -211.6194, -210.3837, -177.9963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1226, device='cuda:0', dtype=torch.float64)
tensor([-153.1354, -288.7915, -211.7876, -210.2850, -178.1568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1041, device='cuda:0', dtype=torch.float64)
tensor([-153.1978, -288.5626, -212.0004, -210.2610, -178.3249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1044, device='cuda:0', dtype=torch.float64)
tensor([-153.2884, -288.2015, -212.1922, -210.2398, -178.4953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1119, device='cuda:0', dtype=torch.float64)
tensor([-153.3795, -287.9273, -212.4130, -210.2423, -178.6437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1010, device='cuda:0', dtype=torch.float64)
tensor([-153.3639, -287.7606, -212.6192, -210.0774, -178.7462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0958, device='cuda:0', dtype=torch.float64)
tensor([-153.4227, -287.5469, -212.7480, -210.0577, -178.9294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0897, device='cuda:0', dtype=torch.float64)
tensor([-153.4761, -287.3903, -212.8328, -209.9977, -179.0903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1100, device='cuda:0', dtype=torch.float64)
tensor([-153.5729, -287.1884, -212.8640, -210.0366, -179.3232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1020, device='cuda:0', dtype=torch.float64)
tensor([-153.6380, -286.8236, -212.7191, -209.8959, -179.5017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1174, device='cuda:0', dtype=torch.float64)
tensor([-153.7267, -286.5719, -212.6640, -209.9336, -179.7587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0910, device='cuda:0', dtype=torch.float64)
tensor([-153.7086, -286.1436, -212.5262, -209.6915, -179.9625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0965, device='cuda:0', dtype=torch.float64)
tensor([-153.6780, -285.5932, -212.3719, -209.4196, -180.1061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-153.6146, -285.1121, -212.1777, -209.1673, -180.1944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0890, device='cuda:0', dtype=torch.float64)
tensor([-153.5432, -284.5857, -211.8775, -209.0650, -180.2776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1077, device='cuda:0', dtype=torch.float64)
tensor([-153.4856, -283.9600, -211.4830, -209.0035, -180.3820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0913, device='cuda:0', dtype=torch.float64)
tensor([-153.4683, -283.3910, -211.1232, -208.9551, -180.4791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1016, device='cuda:0', dtype=torch.float64)
tensor([-153.4674, -282.7087, -210.7852, -208.8109, -180.5679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0909, device='cuda:0', dtype=torch.float64)
tensor([-153.4938, -281.9782, -210.4941, -208.6294, -180.7117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1095, device='cuda:0', dtype=torch.float64)
tensor([-153.5848, -281.2956, -210.2324, -208.6878, -180.8928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1120, device='cuda:0', dtype=torch.float64)
tensor([-153.6684, -280.5938, -209.9287, -208.6273, -180.9583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0868, device='cuda:0', dtype=torch.float64)
tensor([-153.7840, -279.9039, -209.7102, -208.5658, -181.0820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1248, device='cuda:0', dtype=torch.float64)
tensor([-153.8850, -279.1771, -209.5265, -208.4488, -181.2352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1021, device='cuda:0', dtype=torch.float64)
tensor([-154.0220, -278.6181, -209.4713, -208.4162, -181.4181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1012, device='cuda:0', dtype=torch.float64)
tensor([-154.1912, -278.0755, -209.4512, -208.3810, -181.6042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0916, device='cuda:0', dtype=torch.float64)
tensor([-154.3661, -277.5456, -209.3669, -208.4242, -181.7712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0942, device='cuda:0', dtype=torch.float64)
tensor([-154.5051, -276.8323, -209.1306, -208.3541, -181.8746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0982, device='cuda:0', dtype=torch.float64)
tensor([-154.7310, -276.2382, -208.9260, -208.3438, -182.0264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1141, device='cuda:0', dtype=torch.float64)
tensor([-154.9554, -275.5491, -208.7029, -208.3454, -182.2130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1013, device='cuda:0', dtype=torch.float64)
tensor([-155.1271, -274.8563, -208.5405, -208.1905, -182.3473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1136, device='cuda:0', dtype=torch.float64)
tensor([-155.2879, -274.2813, -208.4063, -207.9762, -182.4443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1130, device='cuda:0', dtype=torch.float64)
tensor([-155.3759, -273.6162, -208.2511, -207.5176, -182.4595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1098, device='cuda:0', dtype=torch.float64)
tensor([-155.4135, -273.0592, -208.0796, -206.9170, -182.4188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1340, device='cuda:0', dtype=torch.float64)
tensor([-155.4832, -272.6948, -208.0083, -206.4368, -182.4449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1834, device='cuda:0', dtype=torch.float64)
tensor([-155.6127, -272.1705, -207.8264, -205.8499, -182.4092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0930, device='cuda:0', dtype=torch.float64)
tensor([-155.7230, -271.6780, -207.6284, -205.1907, -182.3351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1000, device='cuda:0', dtype=torch.float64)
tensor([-155.8427, -271.3127, -207.5161, -204.7900, -182.2943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1181, device='cuda:0', dtype=torch.float64)
tensor([-156.0266, -270.9432, -207.5978, -204.5385, -182.3548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1209, device='cuda:0', dtype=torch.float64)
tensor([-156.2962, -270.7039, -207.7075, -204.4028, -182.5722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0877, device='cuda:0', dtype=torch.float64)
tensor([-156.5551, -270.3802, -207.6449, -204.2193, -182.7891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1162, device='cuda:0', dtype=torch.float64)
tensor([-156.8589, -270.1512, -207.6403, -204.2085, -183.0612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1100, device='cuda:0', dtype=torch.float64)
tensor([-157.1310, -269.7633, -207.7509, -204.1828, -183.3402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0759, device='cuda:0', dtype=torch.float64)
tensor([-157.4023, -269.3385, -207.7207, -204.2521, -183.5852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1113, device='cuda:0', dtype=torch.float64)
tensor([-157.6515, -268.9744, -207.7805, -204.3265, -183.8245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1043, device='cuda:0', dtype=torch.float64)
tensor([-157.9218, -268.5935, -207.8203, -204.3946, -184.0400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0985, device='cuda:0', dtype=torch.float64)
tensor([-158.1446, -268.3050, -207.8698, -204.4690, -184.2181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0861, device='cuda:0', dtype=torch.float64)
tensor([-158.3869, -268.1375, -207.9870, -204.6951, -184.4607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1011, device='cuda:0', dtype=torch.float64)
tensor([-158.6377, -268.0224, -208.1491, -205.0548, -184.7356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0901, device='cuda:0', dtype=torch.float64)
tensor([-158.8827, -267.8116, -208.3210, -205.4151, -184.9909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1018, device='cuda:0', dtype=torch.float64)
tensor([-159.1273, -267.6482, -208.4478, -205.7269, -185.2459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1062, device='cuda:0', dtype=torch.float64)
tensor([-159.3737, -267.4512, -208.5458, -206.0164, -185.4693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0917, device='cuda:0', dtype=torch.float64)
tensor([-159.6629, -267.4045, -208.6684, -206.4735, -185.7609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0866, device='cuda:0', dtype=torch.float64)
tensor([-159.9449, -267.3952, -208.8044, -206.9028, -186.0347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1044, device='cuda:0', dtype=torch.float64)
tensor([-160.2390, -267.2485, -208.8838, -207.2950, -186.3470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1165, device='cuda:0', dtype=torch.float64)
tensor([-160.5197, -267.0183, -208.8526, -207.6106, -186.6206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0958, device='cuda:0', dtype=torch.float64)
tensor([-160.7655, -266.8870, -208.8892, -207.8666, -186.9005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0929, device='cuda:0', dtype=torch.float64)
tensor([-160.9628, -266.8402, -208.8995, -208.1251, -187.1857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0843, device='cuda:0', dtype=torch.float64)
tensor([-161.0970, -266.7004, -208.9101, -208.1638, -187.3445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0940, device='cuda:0', dtype=torch.float64)
tensor([-161.1735, -266.5382, -208.8416, -208.0905, -187.4561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1089, device='cuda:0', dtype=torch.float64)
tensor([-161.2986, -266.2839, -208.6782, -208.0093, -187.5709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1032, device='cuda:0', dtype=torch.float64)
tensor([-161.4165, -266.0959, -208.5074, -207.9552, -187.7165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0991, device='cuda:0', dtype=torch.float64)
tensor([-161.4916, -265.9064, -208.4183, -207.8324, -187.8272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0972, device='cuda:0', dtype=torch.float64)
tensor([-161.5202, -265.6461, -208.2655, -207.7142, -187.9015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0962, device='cuda:0', dtype=torch.float64)
tensor([-161.5607, -265.4657, -208.1044, -207.5870, -187.9919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1122, device='cuda:0', dtype=torch.float64)
tensor([-161.6182, -265.2702, -207.8930, -207.5263, -188.1203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0825, device='cuda:0', dtype=torch.float64)
tensor([-161.6791, -265.1827, -207.7700, -207.5505, -188.2728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1025, device='cuda:0', dtype=torch.float64)
tensor([-161.7666, -265.1718, -207.6277, -207.6343, -188.5112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0921, device='cuda:0', dtype=torch.float64)
tensor([-161.8232, -265.0818, -207.4205, -207.6542, -188.7142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0897, device='cuda:0', dtype=torch.float64)
tensor([-161.8812, -264.8372, -207.1316, -207.5231, -188.8618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0932, device='cuda:0', dtype=torch.float64)
tensor([-161.8529, -264.5119, -206.8399, -207.2124, -188.9693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0801, device='cuda:0', dtype=torch.float64)
tensor([-161.7904, -264.1937, -206.5303, -206.8333, -188.9994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0794, device='cuda:0', dtype=torch.float64)
tensor([-161.8360, -263.9239, -206.2359, -206.5009, -189.1187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0888, device='cuda:0', dtype=torch.float64)
tensor([-161.8956, -263.7149, -206.0173, -206.2208, -189.2291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0832, device='cuda:0', dtype=torch.float64)
tensor([-161.9086, -263.6566, -205.8683, -206.0231, -189.3113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0912, device='cuda:0', dtype=torch.float64)
tensor([-161.9644, -263.6399, -205.6647, -205.9720, -189.3641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1144, device='cuda:0', dtype=torch.float64)
tensor([-162.0685, -263.6157, -205.6117, -206.0721, -189.4385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0857, device='cuda:0', dtype=torch.float64)
tensor([-162.1602, -263.6411, -205.6604, -206.2123, -189.5473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0897, device='cuda:0', dtype=torch.float64)
tensor([-162.2661, -263.7822, -205.8300, -206.4748, -189.6803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0864, device='cuda:0', dtype=torch.float64)
tensor([-162.3647, -263.8322, -206.0286, -206.7477, -189.8168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0879, device='cuda:0', dtype=torch.float64)
tensor([-162.3665, -263.7486, -206.2151, -206.8338, -189.8837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0912, device='cuda:0', dtype=torch.float64)
tensor([-162.4239, -263.5138, -206.3020, -206.8231, -189.9929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1122, device='cuda:0', dtype=torch.float64)
tensor([-162.4750, -263.3517, -206.4169, -206.7217, -190.0988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-162.4946, -263.2109, -206.4650, -206.4899, -190.1464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0945, device='cuda:0', dtype=torch.float64)
tensor([-162.6300, -263.1349, -206.6308, -206.4334, -190.3173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0915, device='cuda:0', dtype=torch.float64)
tensor([-162.8518, -263.0176, -206.7847, -206.3732, -190.5466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1017, device='cuda:0', dtype=torch.float64)
tensor([-163.0624, -262.7285, -206.9609, -206.2364, -190.7601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0997, device='cuda:0', dtype=torch.float64)
tensor([-163.3137, -262.3586, -207.0803, -206.0669, -191.0387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0950, device='cuda:0', dtype=torch.float64)
tensor([-163.4851, -261.8966, -207.1402, -205.8612, -191.2564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0923, device='cuda:0', dtype=torch.float64)
tensor([-163.6291, -261.5073, -207.1872, -205.6853, -191.4483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0889, device='cuda:0', dtype=torch.float64)
tensor([-163.7697, -261.3042, -207.2440, -205.8286, -191.6550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0915, device='cuda:0', dtype=torch.float64)
tensor([-163.8361, -260.9623, -207.1881, -205.7369, -191.7775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0739, device='cuda:0', dtype=torch.float64)
tensor([-163.9063, -260.6388, -207.0751, -205.5622, -191.8473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-163.9605, -260.1782, -206.8746, -205.1375, -191.8830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0857, device='cuda:0', dtype=torch.float64)
tensor([-164.0120, -259.6052, -206.6771, -204.6720, -191.8880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0824, device='cuda:0', dtype=torch.float64)
tensor([-164.0523, -259.0129, -206.4310, -204.1582, -191.8750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0793, device='cuda:0', dtype=torch.float64)
tensor([-164.0234, -258.4842, -206.0839, -203.6349, -191.8414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1147, device='cuda:0', dtype=torch.float64)
tensor([-164.1350, -257.9992, -205.8565, -203.3847, -191.9772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0820, device='cuda:0', dtype=torch.float64)
tensor([-164.2763, -257.6375, -205.7218, -203.2152, -192.0812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1019, device='cuda:0', dtype=torch.float64)
tensor([-164.5020, -257.2315, -205.6264, -203.1602, -192.2465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0914, device='cuda:0', dtype=torch.float64)
tensor([-164.6248, -256.9052, -205.5352, -202.8927, -192.3187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0880, device='cuda:0', dtype=torch.float64)
tensor([-164.6437, -256.4898, -205.3994, -202.3970, -192.3073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0861, device='cuda:0', dtype=torch.float64)
tensor([-164.6585, -256.1087, -205.2862, -202.0070, -192.3122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1089, device='cuda:0', dtype=torch.float64)
tensor([-164.6996, -255.9091, -205.2419, -201.7875, -192.3839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0851, device='cuda:0', dtype=torch.float64)
tensor([-164.7068, -255.7482, -205.1916, -201.5649, -192.4517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0757, device='cuda:0', dtype=torch.float64)
tensor([-164.6249, -255.6046, -205.1816, -201.2653, -192.4661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0810, device='cuda:0', dtype=torch.float64)
tensor([-164.5278, -255.5258, -205.1238, -201.0114, -192.4681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0899, device='cuda:0', dtype=torch.float64)
tensor([-164.4696, -255.2951, -204.9341, -200.7027, -192.4600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1414, device='cuda:0', dtype=torch.float64)
tensor([-164.5172, -254.8256, -204.6987, -200.3138, -192.4786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-164.5520, -254.3431, -204.5418, -199.7786, -192.4370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0953, device='cuda:0', dtype=torch.float64)
tensor([-164.6245, -253.8053, -204.3362, -199.2751, -192.3940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0905, device='cuda:0', dtype=torch.float64)
tensor([-164.7869, -253.2907, -204.1809, -198.8778, -192.4493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0983, device='cuda:0', dtype=torch.float64)
tensor([-164.9929, -252.6248, -203.9521, -198.4398, -192.4731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0761, device='cuda:0', dtype=torch.float64)
tensor([-165.2455, -252.0241, -203.7282, -198.1241, -192.5406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0943, device='cuda:0', dtype=torch.float64)
tensor([-165.4274, -251.4368, -203.6030, -197.7601, -192.6155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-165.6153, -250.8636, -203.4708, -197.4692, -192.7190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0807, device='cuda:0', dtype=torch.float64)
tensor([-165.7768, -250.3501, -203.2791, -197.1261, -192.7554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0834, device='cuda:0', dtype=torch.float64)
tensor([-165.9638, -249.9387, -203.1192, -196.9692, -192.7991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0965, device='cuda:0', dtype=torch.float64)
tensor([-166.1846, -249.4344, -203.0328, -196.8331, -192.8824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0978, device='cuda:0', dtype=torch.float64)
tensor([-166.4158, -249.0925, -203.1306, -196.9749, -193.0815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0767, device='cuda:0', dtype=torch.float64)
tensor([-166.6638, -248.6342, -203.1521, -197.0906, -193.2627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0922, device='cuda:0', dtype=torch.float64)
tensor([-166.9266, -248.2774, -203.2772, -197.1897, -193.4379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0872, device='cuda:0', dtype=torch.float64)
tensor([-167.2164, -247.9656, -203.3665, -197.3782, -193.5944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1400, device='cuda:0', dtype=torch.float64)
tensor([-167.5781, -247.6089, -203.4746, -197.5690, -193.8685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1949, device='cuda:0', dtype=torch.float64)
tensor([-167.9457, -247.4458, -203.6350, -197.8044, -194.2242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0931, device='cuda:0', dtype=torch.float64)
tensor([-168.3431, -247.1791, -203.6601, -198.1302, -194.5830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0839, device='cuda:0', dtype=torch.float64)
tensor([-168.7655, -246.8800, -203.7208, -198.3945, -194.9295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0803, device='cuda:0', dtype=torch.float64)
tensor([-169.0752, -246.5459, -203.6386, -198.4538, -195.1351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1031, device='cuda:0', dtype=torch.float64)
tensor([-169.3317, -246.3048, -203.5307, -198.4102, -195.3251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-169.5853, -246.0866, -203.3547, -198.2745, -195.4827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0659, device='cuda:0', dtype=torch.float64)
tensor([-169.8353, -245.8442, -203.2085, -198.1798, -195.6372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0818, device='cuda:0', dtype=torch.float64)
tensor([-170.0978, -245.6401, -203.1093, -198.0986, -195.8076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0977, device='cuda:0', dtype=torch.float64)
tensor([-170.3294, -245.4626, -203.0098, -198.0599, -195.9715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0848, device='cuda:0', dtype=torch.float64)
tensor([-170.5891, -245.2825, -202.8801, -198.0402, -196.1598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0781, device='cuda:0', dtype=torch.float64)
tensor([-170.8313, -245.1591, -202.7545, -198.1403, -196.3104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0933, device='cuda:0', dtype=torch.float64)
tensor([-171.0388, -245.1912, -202.6802, -198.2333, -196.4489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-171.2159, -245.1823, -202.6309, -198.3186, -196.5642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0745, device='cuda:0', dtype=torch.float64)
tensor([-171.4020, -245.1416, -202.6248, -198.4094, -196.6827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0863, device='cuda:0', dtype=torch.float64)
tensor([-171.6887, -244.9857, -202.5063, -198.4924, -196.8091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0871, device='cuda:0', dtype=torch.float64)
tensor([-171.9972, -244.6705, -202.3171, -198.4204, -196.9312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0877, device='cuda:0', dtype=torch.float64)
tensor([-172.1933, -244.4577, -202.2487, -198.3867, -197.0317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0770, device='cuda:0', dtype=torch.float64)
tensor([-172.3712, -244.2127, -202.1467, -198.3835, -197.1314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0846, device='cuda:0', dtype=torch.float64)
tensor([-172.4955, -244.0287, -202.0683, -198.4365, -197.2267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0947, device='cuda:0', dtype=torch.float64)
tensor([-172.5092, -243.9289, -201.9664, -198.5228, -197.2725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1022, device='cuda:0', dtype=torch.float64)
tensor([-172.4768, -243.9247, -201.9150, -198.5542, -197.2963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0787, device='cuda:0', dtype=torch.float64)
tensor([-172.3815, -243.8143, -201.8061, -198.4669, -197.2658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0863, device='cuda:0', dtype=torch.float64)
tensor([-172.2643, -243.5877, -201.6947, -198.2811, -197.2195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-172.1572, -243.2587, -201.5362, -197.9628, -197.0970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0834, device='cuda:0', dtype=torch.float64)
tensor([-172.0525, -242.9121, -201.3919, -197.6594, -196.9710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0854, device='cuda:0', dtype=torch.float64)
tensor([-172.0208, -242.5509, -201.2574, -197.3873, -196.8760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0767, device='cuda:0', dtype=torch.float64)
tensor([-171.9744, -242.1835, -201.1263, -197.1005, -196.7722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0670, device='cuda:0', dtype=torch.float64)
tensor([-171.9628, -241.8046, -200.9846, -196.8382, -196.7348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0691, device='cuda:0', dtype=torch.float64)
tensor([-172.0016, -241.4406, -200.8470, -196.6188, -196.6999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0768, device='cuda:0', dtype=torch.float64)
tensor([-172.1038, -241.1091, -200.8107, -196.5059, -196.7315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0776, device='cuda:0', dtype=torch.float64)
tensor([-172.2254, -240.7571, -200.6312, -196.3828, -196.7453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0708, device='cuda:0', dtype=torch.float64)
tensor([-172.3608, -240.2874, -200.4908, -196.1677, -196.7599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-172.4483, -239.8380, -200.4395, -196.0478, -196.8012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0803, device='cuda:0', dtype=torch.float64)
tensor([-172.4883, -239.4564, -200.3404, -195.9761, -196.8034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0960, device='cuda:0', dtype=torch.float64)
tensor([-172.5240, -239.2501, -200.3640, -196.0003, -196.8767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0821, device='cuda:0', dtype=torch.float64)
tensor([-172.5145, -239.0588, -200.4100, -195.9634, -196.9359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0850, device='cuda:0', dtype=torch.float64)
tensor([-172.4886, -238.8422, -200.4382, -195.8715, -197.0295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0891, device='cuda:0', dtype=torch.float64)
tensor([-172.4301, -238.6659, -200.5267, -195.6476, -197.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0740, device='cuda:0', dtype=torch.float64)
tensor([-172.3235, -238.4380, -200.5680, -195.3748, -197.1214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-172.2785, -238.2280, -200.6314, -195.1808, -197.2329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0814, device='cuda:0', dtype=torch.float64)
tensor([-172.2251, -238.0708, -200.6599, -195.0436, -197.3525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0728, device='cuda:0', dtype=torch.float64)
tensor([-172.2473, -237.8696, -200.6576, -194.9647, -197.5056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0716, device='cuda:0', dtype=torch.float64)
tensor([-172.2679, -237.7537, -200.7100, -194.9392, -197.6557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0836, device='cuda:0', dtype=torch.float64)
tensor([-172.2315, -237.7535, -200.8141, -194.9166, -197.7561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0806, device='cuda:0', dtype=torch.float64)
tensor([-172.1785, -237.6277, -200.7942, -194.8693, -197.8336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0814, device='cuda:0', dtype=torch.float64)
tensor([-172.1200, -237.5418, -200.8319, -194.8483, -197.9044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0865, device='cuda:0', dtype=torch.float64)
tensor([-172.1464, -237.3391, -200.9194, -194.8695, -198.0544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0756, device='cuda:0', dtype=torch.float64)
tensor([-172.1570, -237.1129, -200.9960, -194.8650, -198.1775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0971, device='cuda:0', dtype=torch.float64)
tensor([-172.1869, -236.9092, -201.0720, -194.9766, -198.3192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0677, device='cuda:0', dtype=torch.float64)
tensor([-172.2333, -236.6626, -201.1140, -195.0272, -198.4033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0760, device='cuda:0', dtype=torch.float64)
tensor([-172.2551, -236.5502, -201.1816, -195.2216, -198.4812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0700, device='cuda:0', dtype=torch.float64)
tensor([-172.2887, -236.3916, -201.2104, -195.2759, -198.4998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0895, device='cuda:0', dtype=torch.float64)
tensor([-172.3722, -236.1986, -201.1097, -195.1759, -198.4480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0771, device='cuda:0', dtype=torch.float64)
tensor([-172.4398, -236.0415, -201.0085, -195.0597, -198.3686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0879, device='cuda:0', dtype=torch.float64)
tensor([-172.5069, -235.8700, -200.8874, -194.9587, -198.2637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0770, device='cuda:0', dtype=torch.float64)
tensor([-172.5820, -235.5881, -200.7072, -194.6943, -198.1506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0767, device='cuda:0', dtype=torch.float64)
tensor([-172.6386, -235.3501, -200.5873, -194.3991, -198.0483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1042, device='cuda:0', dtype=torch.float64)
tensor([-172.6063, -235.1936, -200.5321, -194.0740, -197.9054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0801, device='cuda:0', dtype=torch.float64)
tensor([-172.5770, -234.8896, -200.4697, -193.7284, -197.7485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-172.5551, -234.6484, -200.4073, -193.5152, -197.6068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0834, device='cuda:0', dtype=torch.float64)
tensor([-172.5501, -234.3712, -200.4164, -193.2557, -197.5012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0717, device='cuda:0', dtype=torch.float64)
tensor([-172.5958, -234.0731, -200.3870, -193.0457, -197.4376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0712, device='cuda:0', dtype=torch.float64)
tensor([-172.6858, -233.8146, -200.4201, -192.8436, -197.4085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0748, device='cuda:0', dtype=torch.float64)
tensor([-172.8189, -233.6698, -200.5463, -192.9102, -197.4532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0697, device='cuda:0', dtype=torch.float64)
tensor([-173.0977, -233.4675, -200.6869, -193.0292, -197.5941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0855, device='cuda:0', dtype=torch.float64)
tensor([-173.3441, -233.3026, -200.8027, -193.0989, -197.6802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0756, device='cuda:0', dtype=torch.float64)
tensor([-173.5866, -233.0117, -200.7583, -193.1701, -197.7492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0775, device='cuda:0', dtype=torch.float64)
tensor([-173.9202, -232.7431, -200.7517, -193.3564, -197.9151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0718, device='cuda:0', dtype=torch.float64)
tensor([-174.1698, -232.4518, -200.6926, -193.4523, -198.0426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0674, device='cuda:0', dtype=torch.float64)
tensor([-174.3915, -232.1754, -200.5967, -193.4733, -198.1110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0778, device='cuda:0', dtype=torch.float64)
tensor([-174.5153, -231.8696, -200.4660, -193.3763, -198.1113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0815, device='cuda:0', dtype=torch.float64)
tensor([-174.6351, -231.5799, -200.2335, -193.4363, -198.1918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0645, device='cuda:0', dtype=torch.float64)
tensor([-174.7423, -231.2992, -199.9844, -193.4363, -198.2591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-174.8149, -231.0816, -199.7503, -193.4734, -198.3607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0757, device='cuda:0', dtype=torch.float64)
tensor([-174.8889, -230.7913, -199.5675, -193.4675, -198.4693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0695, device='cuda:0', dtype=torch.float64)
tensor([-174.9405, -230.5327, -199.4000, -193.4817, -198.5273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0637, device='cuda:0', dtype=torch.float64)
tensor([-174.9568, -230.3122, -199.2500, -193.4699, -198.5822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0826, device='cuda:0', dtype=torch.float64)
tensor([-175.0221, -230.1167, -199.0794, -193.5283, -198.6352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0776, device='cuda:0', dtype=torch.float64)
tensor([-175.0703, -229.8681, -198.9612, -193.4205, -198.6147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0870, device='cuda:0', dtype=torch.float64)
tensor([-175.0839, -229.7035, -198.8681, -193.2792, -198.5216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0757, device='cuda:0', dtype=torch.float64)
tensor([-175.1167, -229.5550, -198.7371, -193.2273, -198.4996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-175.1762, -229.2986, -198.6202, -193.1049, -198.4368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0785, device='cuda:0', dtype=torch.float64)
tensor([-175.2729, -228.9687, -198.5319, -192.9477, -198.4146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-175.4327, -228.5810, -198.4453, -192.7650, -198.4558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0736, device='cuda:0', dtype=torch.float64)
tensor([-175.6261, -228.3261, -198.3835, -192.7961, -198.5846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0780, device='cuda:0', dtype=torch.float64)
tensor([-175.8032, -228.0917, -198.3029, -192.7916, -198.7052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0718, device='cuda:0', dtype=torch.float64)
tensor([-175.9585, -227.7908, -198.1756, -192.7339, -198.7908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0845, device='cuda:0', dtype=torch.float64)
tensor([-176.0405, -227.5797, -198.0590, -192.6508, -198.8557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0705, device='cuda:0', dtype=torch.float64)
tensor([-176.1761, -227.4642, -197.9805, -192.7198, -198.9981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0773, device='cuda:0', dtype=torch.float64)
tensor([-176.2008, -227.3386, -197.9107, -192.6065, -198.9976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0863, device='cuda:0', dtype=torch.float64)
tensor([-176.2704, -227.1244, -197.7900, -192.4845, -199.0064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0849, device='cuda:0', dtype=torch.float64)
tensor([-176.3376, -226.9454, -197.6640, -192.3440, -199.0003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0738, device='cuda:0', dtype=torch.float64)
tensor([-176.4437, -226.7109, -197.4980, -192.1372, -199.0256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0787, device='cuda:0', dtype=torch.float64)
tensor([-176.6292, -226.4012, -197.3074, -192.0233, -199.1119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-176.7450, -226.1559, -197.1508, -191.9195, -199.1973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0868, device='cuda:0', dtype=torch.float64)
tensor([-176.7798, -225.9959, -197.0541, -191.8241, -199.2720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0684, device='cuda:0', dtype=torch.float64)
tensor([-176.7807, -225.8666, -196.9597, -191.7080, -199.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-176.7704, -225.7201, -196.8615, -191.5893, -199.3647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0718, device='cuda:0', dtype=torch.float64)
tensor([-176.7769, -225.5235, -196.7783, -191.5001, -199.4082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0752, device='cuda:0', dtype=torch.float64)
tensor([-176.8579, -225.3283, -196.7330, -191.4577, -199.5030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0766, device='cuda:0', dtype=torch.float64)
tensor([-177.0354, -225.1551, -196.6817, -191.5767, -199.7248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0884, device='cuda:0', dtype=torch.float64)
tensor([-177.1013, -224.9786, -196.6534, -191.5839, -199.8980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-177.1149, -224.7753, -196.6059, -191.6052, -200.0691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-177.0982, -224.5304, -196.5314, -191.5197, -200.1488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-177.0579, -224.2251, -196.4497, -191.3571, -200.1466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0778, device='cuda:0', dtype=torch.float64)
tensor([-177.0620, -223.9456, -196.3106, -191.1727, -200.1817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0805, device='cuda:0', dtype=torch.float64)
tensor([-177.0213, -223.6413, -196.2132, -190.8594, -200.1716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0740, device='cuda:0', dtype=torch.float64)
tensor([-176.9936, -223.2922, -196.0805, -190.4767, -200.1235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0742, device='cuda:0', dtype=torch.float64)
tensor([-177.0427, -222.9112, -195.9265, -190.1741, -200.1325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-177.0900, -222.5262, -195.7626, -189.8747, -200.0726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-177.1788, -222.1951, -195.6347, -189.7199, -200.1182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0782, device='cuda:0', dtype=torch.float64)
tensor([-177.3272, -221.9049, -195.5684, -189.7121, -200.2658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0641, device='cuda:0', dtype=torch.float64)
tensor([-177.5370, -221.6816, -195.4607, -189.7959, -200.4454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0719, device='cuda:0', dtype=torch.float64)
tensor([-177.7254, -221.4463, -195.3980, -189.9670, -200.6515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0735, device='cuda:0', dtype=torch.float64)
tensor([-177.9030, -221.3877, -195.4598, -190.3351, -200.9511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0749, device='cuda:0', dtype=torch.float64)
tensor([-178.1297, -221.2191, -195.3983, -190.7524, -201.2377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0643, device='cuda:0', dtype=torch.float64)
tensor([-178.2948, -221.0556, -195.4011, -191.0766, -201.4438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-178.4132, -220.8751, -195.3960, -191.2717, -201.5707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-178.5180, -220.6935, -195.3827, -191.4482, -201.6855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0782, device='cuda:0', dtype=torch.float64)
tensor([-178.6373, -220.5216, -195.4060, -191.6236, -201.8205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0639, device='cuda:0', dtype=torch.float64)
tensor([-178.7682, -220.3328, -195.4239, -191.7945, -201.9759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0718, device='cuda:0', dtype=torch.float64)
tensor([-178.8852, -220.1479, -195.4194, -191.8689, -202.0668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0697, device='cuda:0', dtype=torch.float64)
tensor([-178.9280, -219.9441, -195.3150, -191.8481, -202.0790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0733, device='cuda:0', dtype=torch.float64)
tensor([-179.0122, -219.6883, -195.1996, -191.9350, -202.1674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0741, device='cuda:0', dtype=torch.float64)
tensor([-179.1286, -219.4147, -195.1319, -192.0071, -202.3001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0638, device='cuda:0', dtype=torch.float64)
tensor([-179.3053, -219.0952, -195.0486, -192.1013, -202.4794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-179.4318, -218.8109, -194.9939, -192.2086, -202.6845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-179.6128, -218.5662, -194.9239, -192.3681, -202.9452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0704, device='cuda:0', dtype=torch.float64)
tensor([-179.7117, -218.3384, -194.8713, -192.3951, -203.1316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-179.7652, -218.1282, -194.8920, -192.3739, -203.3000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-179.8594, -217.8919, -194.8740, -192.2855, -203.4853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0683, device='cuda:0', dtype=torch.float64)
tensor([-180.0599, -217.6547, -194.8100, -192.1856, -203.7151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0717, device='cuda:0', dtype=torch.float64)
tensor([-180.2812, -217.3308, -194.7085, -192.0193, -203.9272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0787, device='cuda:0', dtype=torch.float64)
tensor([-180.5120, -216.9773, -194.5989, -191.8080, -204.1117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0749, device='cuda:0', dtype=torch.float64)
tensor([-180.7346, -216.6328, -194.5701, -191.5973, -204.3009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-180.8771, -216.3516, -194.6069, -191.3810, -204.4388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-181.1081, -216.0349, -194.6009, -191.3049, -204.6386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0839, device='cuda:0', dtype=torch.float64)
tensor([-181.3372, -215.6915, -194.5415, -191.2590, -204.8053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-181.6330, -215.3457, -194.3567, -191.2340, -205.0134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-181.8514, -215.0895, -194.2076, -191.2862, -205.2453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0713, device='cuda:0', dtype=torch.float64)
tensor([-182.0697, -214.7992, -193.9611, -191.2648, -205.4192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-182.2511, -214.5109, -193.7516, -191.2183, -205.6123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0678, device='cuda:0', dtype=torch.float64)
tensor([-182.3565, -214.2393, -193.5412, -191.0846, -205.6813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0695, device='cuda:0', dtype=torch.float64)
tensor([-182.3269, -214.0368, -193.3646, -190.8884, -205.6831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0577, device='cuda:0', dtype=torch.float64)
tensor([-182.2441, -213.8385, -193.2424, -190.6308, -205.6246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0769, device='cuda:0', dtype=torch.float64)
tensor([-182.1674, -213.6767, -193.1241, -190.3766, -205.5661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0612, device='cuda:0', dtype=torch.float64)
tensor([-182.0530, -213.5154, -192.9873, -190.0649, -205.4785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0633, device='cuda:0', dtype=torch.float64)
tensor([-181.8781, -213.3912, -192.8328, -189.7879, -205.3550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-181.7365, -213.2038, -192.6421, -189.5457, -205.2082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-181.5743, -212.9798, -192.4683, -189.3564, -205.0615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0694, device='cuda:0', dtype=torch.float64)
tensor([-181.4390, -212.7876, -192.2860, -189.2010, -204.9337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0609, device='cuda:0', dtype=torch.float64)
tensor([-181.3300, -212.6141, -192.1268, -189.0579, -204.8325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-181.2850, -212.4366, -192.0197, -188.9831, -204.7790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-181.2213, -212.2268, -191.9196, -188.8348, -204.6919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0566, device='cuda:0', dtype=torch.float64)
tensor([-181.2192, -212.0290, -191.8162, -188.7135, -204.6630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-181.2794, -211.8529, -191.7813, -188.6616, -204.6956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0578, device='cuda:0', dtype=torch.float64)
tensor([-181.2617, -211.7182, -191.7932, -188.5919, -204.6873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-181.3214, -211.5779, -191.8376, -188.6363, -204.7725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0654, device='cuda:0', dtype=torch.float64)
tensor([-181.4071, -211.3393, -191.8642, -188.6267, -204.8567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-181.4642, -211.1349, -191.9543, -188.6403, -204.9595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0565, device='cuda:0', dtype=torch.float64)
tensor([-181.5056, -210.9630, -192.0221, -188.6671, -205.0220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-181.5285, -210.7319, -192.0841, -188.6113, -205.0683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-181.5424, -210.4515, -192.1108, -188.5273, -205.0864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-181.5845, -210.2129, -192.2489, -188.5032, -205.1992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0626, device='cuda:0', dtype=torch.float64)
tensor([-181.6231, -209.9992, -192.3210, -188.5229, -205.2727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0563, device='cuda:0', dtype=torch.float64)
tensor([-181.7306, -209.7691, -192.3651, -188.5417, -205.3775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-181.8393, -209.6006, -192.3829, -188.6042, -205.5047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0677, device='cuda:0', dtype=torch.float64)
tensor([-181.8873, -209.5312, -192.4611, -188.7921, -205.6900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-181.9334, -209.4891, -192.5363, -188.9439, -205.8992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0643, device='cuda:0', dtype=torch.float64)
tensor([-181.9052, -209.3796, -192.5458, -188.9376, -206.0022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-181.9788, -209.2314, -192.4893, -188.9072, -206.1184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-182.0570, -209.0787, -192.3680, -188.8692, -206.1870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0685, device='cuda:0', dtype=torch.float64)
tensor([-182.0715, -208.9548, -192.1993, -188.7364, -206.1459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0677, device='cuda:0', dtype=torch.float64)
tensor([-182.1395, -208.8286, -192.0424, -188.6412, -206.1470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0555, device='cuda:0', dtype=torch.float64)
tensor([-182.2506, -208.6536, -191.8731, -188.5508, -206.1231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-182.3634, -208.4399, -191.7118, -188.4893, -206.1265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-182.4285, -208.2258, -191.5719, -188.4454, -206.1231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-182.4734, -208.0057, -191.3853, -188.3552, -206.0672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0751, device='cuda:0', dtype=torch.float64)
tensor([-182.4407, -207.8084, -191.1342, -188.2455, -205.9449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0641, device='cuda:0', dtype=torch.float64)
tensor([-182.3958, -207.6016, -190.9077, -188.0991, -205.8008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0723, device='cuda:0', dtype=torch.float64)
tensor([-182.4894, -207.3490, -190.6907, -187.9797, -205.7275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-182.6047, -207.1292, -190.4815, -187.8603, -205.6506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0645, device='cuda:0', dtype=torch.float64)
tensor([-182.7481, -206.8950, -190.2671, -187.6452, -205.5397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0567, device='cuda:0', dtype=torch.float64)
tensor([-182.9106, -206.6859, -190.1497, -187.5404, -205.5191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-183.1172, -206.5187, -190.0355, -187.5200, -205.5243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-183.3308, -206.3699, -189.9321, -187.4858, -205.5329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0571, device='cuda:0', dtype=torch.float64)
tensor([-183.5243, -206.1605, -189.7974, -187.3712, -205.5103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0668, device='cuda:0', dtype=torch.float64)
tensor([-183.6592, -205.9940, -189.7374, -187.3767, -205.5354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-183.7826, -205.8098, -189.6595, -187.3946, -205.5760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-183.9007, -205.6357, -189.6118, -187.4545, -205.6369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-184.0558, -205.4856, -189.5732, -187.5083, -205.7327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0678, device='cuda:0', dtype=torch.float64)
tensor([-184.1407, -205.3220, -189.4750, -187.5403, -205.7518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0680, device='cuda:0', dtype=torch.float64)
tensor([-184.2101, -205.1094, -189.3528, -187.5139, -205.7776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0626, device='cuda:0', dtype=torch.float64)
tensor([-184.2008, -204.9741, -189.2768, -187.5085, -205.8331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0777, device='cuda:0', dtype=torch.float64)
tensor([-184.1135, -204.8268, -189.2099, -187.4804, -205.8326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1250, device='cuda:0', dtype=torch.float64)
tensor([-184.0385, -204.6314, -189.1562, -187.5097, -205.8768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0585, device='cuda:0', dtype=torch.float64)
tensor([-184.0107, -204.3886, -189.0999, -187.5160, -205.9134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-183.9158, -204.1336, -189.0887, -187.4600, -205.9343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0686, device='cuda:0', dtype=torch.float64)
tensor([-183.7462, -203.9032, -189.1058, -187.4313, -205.9646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0629, device='cuda:0', dtype=torch.float64)
tensor([-183.6567, -203.6720, -189.1294, -187.4509, -206.0640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0564, device='cuda:0', dtype=torch.float64)
tensor([-183.5903, -203.4941, -189.1564, -187.5008, -206.1716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-183.5635, -203.2814, -189.1760, -187.5698, -206.2908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-183.5877, -203.0864, -189.1647, -187.6017, -206.4029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0810, device='cuda:0', dtype=torch.float64)
tensor([-183.6625, -202.9055, -189.1399, -187.6596, -206.5146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-183.6941, -202.6980, -189.0818, -187.6748, -206.5956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0601, device='cuda:0', dtype=torch.float64)
tensor([-183.7602, -202.4727, -188.9657, -187.7278, -206.6895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-183.7389, -202.2382, -188.8324, -187.6862, -206.6760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0686, device='cuda:0', dtype=torch.float64)
tensor([-183.7179, -202.0426, -188.6714, -187.6554, -206.6285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0786, device='cuda:0', dtype=torch.float64)
tensor([-183.7167, -201.8186, -188.5464, -187.6641, -206.6325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-183.6996, -201.6161, -188.4364, -187.6854, -206.6476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0645, device='cuda:0', dtype=torch.float64)
tensor([-183.7423, -201.3446, -188.3145, -187.6461, -206.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0766, device='cuda:0', dtype=torch.float64)
tensor([-183.8510, -201.0114, -188.1962, -187.5903, -206.6508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-183.8987, -200.6574, -188.0418, -187.5062, -206.6437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-183.9480, -200.3450, -187.9368, -187.4464, -206.6834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-183.8650, -200.0194, -187.8582, -187.3857, -206.6892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-183.8178, -199.7250, -187.7980, -187.3081, -206.7020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-183.8137, -199.4233, -187.7550, -187.2233, -206.7453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0680, device='cuda:0', dtype=torch.float64)
tensor([-183.8121, -199.0739, -187.6695, -187.0684, -206.7801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0577, device='cuda:0', dtype=torch.float64)
tensor([-183.7853, -198.6883, -187.6013, -186.9105, -206.8261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0644, device='cuda:0', dtype=torch.float64)
tensor([-183.7304, -198.3738, -187.4945, -186.7242, -206.8337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-183.7189, -198.0632, -187.4098, -186.5602, -206.8530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0576, device='cuda:0', dtype=torch.float64)
tensor([-183.6870, -197.7472, -187.3006, -186.4099, -206.8834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-183.6242, -197.4534, -187.2245, -186.2804, -206.9160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-183.5307, -197.2080, -187.1443, -186.1337, -206.9364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-183.4961, -197.0033, -187.0512, -186.0273, -206.9702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0585, device='cuda:0', dtype=torch.float64)
tensor([-183.5188, -196.7912, -186.9624, -185.9636, -207.0164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-183.5437, -196.6017, -186.8248, -185.8936, -207.0640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-183.4848, -196.4174, -186.6899, -185.7912, -207.0689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-183.4335, -196.2268, -186.5592, -185.7218, -207.0540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0613, device='cuda:0', dtype=torch.float64)
tensor([-183.3727, -196.0184, -186.4407, -185.6629, -207.0640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0524, device='cuda:0', dtype=torch.float64)
tensor([-183.3722, -195.8563, -186.3564, -185.6254, -207.1271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-183.3787, -195.6927, -186.2819, -185.5794, -207.2048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-183.3858, -195.5551, -186.2221, -185.5335, -207.2834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-183.3926, -195.4292, -186.1606, -185.4877, -207.3461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-183.4317, -195.2714, -186.1444, -185.5353, -207.4630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-183.4369, -195.1512, -186.1831, -185.6251, -207.6164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-183.4065, -195.0742, -186.2166, -185.7541, -207.7627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-183.3234, -194.9929, -186.2120, -185.8344, -207.8370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0639, device='cuda:0', dtype=torch.float64)
tensor([-183.1880, -194.9041, -186.2168, -185.9073, -207.8852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0729, device='cuda:0', dtype=torch.float64)
tensor([-183.1388, -194.8280, -186.2479, -186.0086, -207.9362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-183.1027, -194.7387, -186.2431, -186.1028, -207.9705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0679, device='cuda:0', dtype=torch.float64)
tensor([-183.1276, -194.6684, -186.2815, -186.2043, -208.0514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-183.2038, -194.6039, -186.3184, -186.3268, -208.1603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-183.2855, -194.4824, -186.3290, -186.3818, -208.2597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0602, device='cuda:0', dtype=torch.float64)
tensor([-183.3705, -194.4068, -186.3021, -186.4324, -208.3167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-183.4399, -194.3007, -186.3085, -186.4773, -208.3850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-183.5505, -194.2091, -186.3325, -186.5360, -208.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0617, device='cuda:0', dtype=torch.float64)
tensor([-183.6809, -194.1330, -186.2994, -186.6006, -208.5339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-183.7892, -194.0560, -186.2389, -186.6695, -208.5604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0555, device='cuda:0', dtype=torch.float64)
tensor([-183.8781, -193.9845, -186.1225, -186.7786, -208.5589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-184.0031, -193.8933, -185.9873, -186.8950, -208.5656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-184.1230, -193.8003, -185.8500, -186.9797, -208.5753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-184.2727, -193.7000, -185.7465, -187.0875, -208.6210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0704, device='cuda:0', dtype=torch.float64)
tensor([-184.3581, -193.6235, -185.6916, -187.2567, -208.6968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-184.3979, -193.5499, -185.6673, -187.4193, -208.7804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-184.4711, -193.4619, -185.6015, -187.5965, -208.8386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-184.5592, -193.3900, -185.4588, -187.7422, -208.8342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0535, device='cuda:0', dtype=torch.float64)
tensor([-184.5731, -193.3479, -185.3375, -187.8375, -208.8307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0537, device='cuda:0', dtype=torch.float64)
tensor([-184.6156, -193.2644, -185.2661, -187.9415, -208.8550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-184.6127, -193.1749, -185.2107, -188.0304, -208.8803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-184.6084, -193.0836, -185.1444, -188.0999, -208.8957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-184.7052, -192.9776, -185.0440, -188.1567, -208.9160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-184.7753, -192.8773, -184.9220, -188.2023, -208.9244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-184.9217, -192.7526, -184.8191, -188.2429, -208.9613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-185.1046, -192.6624, -184.7578, -188.2747, -209.0435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-185.3221, -192.5685, -184.6424, -188.2800, -209.0855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-185.4849, -192.4788, -184.5300, -188.2875, -209.1424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-185.6085, -192.3734, -184.4288, -188.2591, -209.1833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0648, device='cuda:0', dtype=torch.float64)
tensor([-185.6901, -192.2799, -184.4310, -188.2541, -209.2826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-185.8509, -192.1503, -184.4141, -188.1967, -209.3939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0519, device='cuda:0', dtype=torch.float64)
tensor([-185.9472, -192.0433, -184.3655, -188.1534, -209.4762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-186.0344, -191.9551, -184.3042, -188.1221, -209.5336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-186.2028, -191.8727, -184.2476, -188.1024, -209.6162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-186.2999, -191.7845, -184.1480, -188.0312, -209.6318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-186.5051, -191.7082, -184.0686, -187.9781, -209.6925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-186.7130, -191.6292, -183.9865, -187.8929, -209.7448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0707, device='cuda:0', dtype=torch.float64)
tensor([-186.9537, -191.5499, -183.9449, -187.7973, -209.7939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0564, device='cuda:0', dtype=torch.float64)
tensor([-187.1349, -191.4407, -183.9429, -187.7011, -209.8157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-187.2653, -191.3367, -183.9270, -187.6278, -209.8204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-187.4090, -191.2587, -183.9184, -187.5857, -209.8282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-187.5174, -191.1679, -183.9561, -187.5640, -209.8553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-187.5892, -191.0925, -184.0214, -187.5776, -209.8809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-187.6401, -191.0278, -184.0978, -187.6267, -209.9053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0449, device='cuda:0', dtype=torch.float64)
tensor([-187.7350, -190.9873, -184.1616, -187.6901, -209.9462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-187.7293, -190.9639, -184.1879, -187.7271, -209.9163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-187.7252, -190.9192, -184.1968, -187.7482, -209.8828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-187.7267, -190.8728, -184.2110, -187.7859, -209.8473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-187.5666, -190.8194, -184.2171, -187.8135, -209.7593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-187.5123, -190.7513, -184.2148, -187.8252, -209.7159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-187.3768, -190.6846, -184.2609, -187.8786, -209.6893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0462, device='cuda:0', dtype=torch.float64)
tensor([-187.1917, -190.6103, -184.3271, -187.9420, -209.6592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-187.0581, -190.5289, -184.4027, -188.0160, -209.6502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-186.8997, -190.4461, -184.4467, -188.0714, -209.6263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-186.7352, -190.3980, -184.4632, -188.1533, -209.5935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-186.6507, -190.3296, -184.4800, -188.2302, -209.5737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-186.5290, -190.2427, -184.4673, -188.2592, -209.5145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-186.3418, -190.1720, -184.4334, -188.2781, -209.4177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-186.1916, -190.0973, -184.4204, -188.3120, -209.3674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-186.0062, -190.0319, -184.4197, -188.3459, -209.3293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-185.7691, -189.9743, -184.4237, -188.3347, -209.2768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-185.5494, -189.9241, -184.4266, -188.3257, -209.2476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-185.3698, -189.8595, -184.4467, -188.3648, -209.2345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-185.1573, -189.8186, -184.4430, -188.3870, -209.1781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-184.9686, -189.7599, -184.4555, -188.4051, -209.1211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-184.7898, -189.6849, -184.4723, -188.3965, -209.0769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-184.6827, -189.6210, -184.4606, -188.3733, -208.9992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-184.6065, -189.5737, -184.4477, -188.3502, -208.9133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-184.4844, -189.5115, -184.4241, -188.3031, -208.7987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-184.4191, -189.4397, -184.3802, -188.2870, -208.6706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-184.3507, -189.3228, -184.2904, -188.2081, -208.4887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-184.2755, -189.2060, -184.2279, -188.1302, -208.3292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-184.2484, -189.1103, -184.1876, -188.0673, -208.2077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-184.2680, -189.0497, -184.1799, -188.0258, -208.1281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-184.3117, -188.9913, -184.2085, -188.0269, -208.0778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-184.4079, -188.9279, -184.2364, -188.0377, -208.0407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-184.5376, -188.8807, -184.2756, -188.0728, -208.0265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-184.6236, -188.8484, -184.2651, -188.0852, -207.9711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-184.7282, -188.8309, -184.2190, -188.0772, -207.8764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-184.8097, -188.8102, -184.1652, -188.0764, -207.7755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-184.9593, -188.7915, -184.1114, -188.1105, -207.6711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-185.1101, -188.7773, -184.1097, -188.1943, -207.6176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-185.2004, -188.7461, -184.1347, -188.2693, -207.5591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-185.2761, -188.7172, -184.1855, -188.3390, -207.5090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-185.3330, -188.6643, -184.2102, -188.3799, -207.4453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-185.3769, -188.6034, -184.2332, -188.4079, -207.3660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-185.4016, -188.5541, -184.2643, -188.4470, -207.2983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-185.4124, -188.4987, -184.3088, -188.4823, -207.2394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-185.4502, -188.4441, -184.3821, -188.5376, -207.2074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-185.5179, -188.3909, -184.4668, -188.6268, -207.1832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-185.5542, -188.3407, -184.5358, -188.6834, -207.1316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-185.6768, -188.3006, -184.6152, -188.7736, -207.1035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-185.7981, -188.2631, -184.7191, -188.8765, -207.0811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-185.8578, -188.2306, -184.8293, -188.9381, -207.0584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-185.9697, -188.2275, -184.9329, -189.0124, -207.0432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-186.0552, -188.2134, -185.0337, -189.0769, -207.0167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-186.1510, -188.2048, -185.1337, -189.1306, -207.0058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-186.2462, -188.1851, -185.2549, -189.1795, -207.0178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-186.3515, -188.1692, -185.4121, -189.2403, -207.0549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-186.3959, -188.1813, -185.5432, -189.2731, -207.0787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-186.5935, -188.2340, -185.6986, -189.3732, -207.1481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-186.8102, -188.2603, -185.8240, -189.4555, -207.1897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-186.9764, -188.2888, -185.9425, -189.5202, -207.2034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-187.1587, -188.3253, -186.0799, -189.5879, -207.2299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-187.3620, -188.3411, -186.1979, -189.6272, -207.2337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-187.4944, -188.3468, -186.2942, -189.6490, -207.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-187.5854, -188.3450, -186.3837, -189.6510, -207.1944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-187.6900, -188.3358, -186.4623, -189.6450, -207.1601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-187.7869, -188.3080, -186.5506, -189.6344, -207.1181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-187.8758, -188.2720, -186.6101, -189.6318, -207.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-187.9512, -188.2037, -186.6761, -189.6138, -206.9731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-188.0484, -188.1471, -186.7284, -189.5884, -206.8734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-188.1646, -188.1116, -186.7900, -189.5968, -206.8014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-188.3302, -188.0745, -186.8712, -189.6235, -206.7592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-188.5282, -188.0189, -186.9183, -189.6333, -206.6702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-188.5941, -187.9845, -186.9526, -189.6293, -206.5685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-188.6502, -187.9560, -186.9780, -189.6273, -206.4767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-188.6712, -187.9301, -186.9909, -189.5913, -206.3741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-188.6974, -187.9120, -187.0189, -189.5766, -206.2873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-188.7621, -187.9149, -187.0713, -189.5755, -206.2332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-188.8148, -187.9363, -187.1486, -189.6103, -206.1952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-188.8990, -187.9648, -187.2032, -189.6535, -206.1496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-188.9733, -187.9798, -187.2625, -189.7115, -206.1194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-189.0063, -188.0007, -187.3250, -189.7581, -206.0855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-189.0241, -188.0053, -187.3697, -189.7742, -206.0290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-188.9658, -187.9913, -187.4064, -189.7642, -205.9374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-188.9325, -187.9778, -187.4048, -189.7374, -205.8098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-188.8638, -187.9493, -187.3831, -189.6809, -205.6547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-188.7920, -187.9356, -187.3591, -189.6188, -205.5015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-188.7657, -187.9343, -187.3496, -189.5698, -205.3869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-188.7555, -187.9562, -187.3586, -189.5219, -205.2922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-188.6770, -187.9561, -187.3626, -189.4445, -205.1880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-188.6077, -187.9694, -187.3900, -189.4135, -205.1172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-188.5340, -187.9914, -187.3926, -189.3725, -205.0441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-188.4858, -188.0423, -187.4010, -189.3731, -205.0022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-188.4629, -188.0691, -187.4271, -189.4106, -204.9676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-188.3971, -188.0984, -187.4511, -189.4520, -204.9363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-188.3811, -188.1328, -187.4750, -189.5022, -204.9168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-188.3680, -188.1692, -187.5235, -189.5616, -204.9316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-188.4193, -188.2184, -187.5612, -189.6278, -204.9363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-188.5412, -188.2763, -187.6171, -189.6968, -204.9480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-188.6416, -188.3228, -187.6637, -189.7576, -204.9350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-188.7002, -188.3583, -187.6924, -189.7878, -204.8858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-188.7111, -188.3898, -187.7139, -189.8272, -204.8482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-188.6956, -188.4169, -187.7191, -189.8454, -204.7799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-188.6099, -188.4067, -187.7123, -189.8586, -204.7169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-188.5289, -188.3917, -187.7027, -189.8912, -204.6570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-188.4692, -188.3854, -187.6937, -189.9594, -204.6077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-188.3844, -188.3810, -187.7001, -190.0246, -204.5787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-188.2850, -188.3883, -187.7190, -190.0931, -204.5578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-188.2128, -188.3578, -187.7263, -190.1506, -204.5164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-188.1754, -188.3345, -187.7536, -190.2320, -204.4955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-188.1815, -188.3056, -187.7510, -190.2558, -204.4094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-188.1054, -188.2644, -187.7462, -190.2694, -204.3220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-187.9968, -188.2125, -187.7606, -190.3038, -204.2343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-187.9304, -188.1578, -187.7835, -190.3255, -204.1551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-187.8988, -188.1143, -187.8320, -190.3923, -204.0828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-187.8568, -188.0680, -187.8715, -190.4485, -204.0046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-187.8353, -188.0357, -187.8915, -190.4757, -203.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-187.8647, -188.0201, -187.9222, -190.5297, -203.8608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-187.9769, -188.0231, -187.9781, -190.6368, -203.8591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-188.1046, -188.0486, -188.0333, -190.7582, -203.8696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-188.2759, -188.0853, -188.0927, -190.8660, -203.8923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-188.4561, -188.1121, -188.1771, -190.9756, -203.9265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-188.5770, -188.1232, -188.2553, -191.0602, -203.9445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-188.7168, -188.1681, -188.3369, -191.1457, -203.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-188.8110, -188.2024, -188.4311, -191.2228, -204.0103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-188.8904, -188.2279, -188.4959, -191.2736, -204.0194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-188.9592, -188.2594, -188.5625, -191.3285, -204.0302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-188.9830, -188.2692, -188.5997, -191.3359, -204.0158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-189.0392, -188.3119, -188.6900, -191.3865, -204.0632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-189.1063, -188.3315, -188.7692, -191.4530, -204.1147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-189.1026, -188.3225, -188.8342, -191.4737, -204.1487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-189.0938, -188.3086, -188.8671, -191.4582, -204.1380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-189.0611, -188.2820, -188.8984, -191.4385, -204.1110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-189.0134, -188.2712, -188.9248, -191.3922, -204.0635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-188.9489, -188.2604, -188.9661, -191.3802, -204.0275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-188.8950, -188.2630, -188.9999, -191.3841, -203.9868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-188.7938, -188.2706, -189.0318, -191.4001, -203.9452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-188.7310, -188.2932, -189.0620, -191.4188, -203.8869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-188.6349, -188.3175, -189.0903, -191.4363, -203.8374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-188.5401, -188.3371, -189.1077, -191.4139, -203.7736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-188.5471, -188.3660, -189.1231, -191.4128, -203.7115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-188.5434, -188.3805, -189.1421, -191.4040, -203.6497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-188.5237, -188.3817, -189.1725, -191.3940, -203.6143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-188.4984, -188.3868, -189.1935, -191.3595, -203.5724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-188.5003, -188.3977, -189.2143, -191.3466, -203.5447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-188.4996, -188.4082, -189.2335, -191.3047, -203.5055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-188.5215, -188.4292, -189.2418, -191.2604, -203.4556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-188.5124, -188.4342, -189.2492, -191.2234, -203.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-188.4808, -188.4395, -189.2778, -191.2101, -203.4064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-188.4291, -188.4552, -189.3217, -191.2044, -203.3975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-188.3925, -188.4824, -189.3736, -191.2074, -203.4041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-188.2883, -188.4930, -189.4431, -191.2120, -203.4435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-188.2011, -188.5070, -189.4779, -191.1863, -203.4416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-188.1556, -188.5127, -189.4968, -191.1504, -203.4051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-188.0952, -188.5185, -189.5178, -191.1317, -203.3774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-188.0569, -188.5293, -189.5262, -191.1268, -203.3452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-188.0233, -188.5596, -189.5672, -191.1489, -203.3545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-187.9729, -188.5699, -189.6038, -191.1763, -203.3717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-187.9310, -188.5451, -189.5999, -191.1454, -203.3339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-187.9008, -188.5154, -189.6037, -191.1158, -203.2976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-187.8640, -188.4671, -189.5772, -191.0554, -203.2179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-187.8889, -188.4315, -189.5803, -191.0571, -203.1816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-187.9461, -188.3881, -189.5684, -191.0625, -203.1398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-187.9789, -188.3318, -189.5346, -191.0181, -203.0735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-187.9789, -188.2702, -189.5132, -190.9341, -202.9987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-187.9552, -188.2140, -189.5072, -190.8531, -202.9211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-187.9600, -188.1448, -189.4913, -190.7459, -202.8195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-187.9842, -188.0934, -189.4889, -190.6514, -202.7478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-187.9781, -188.0503, -189.4865, -190.5636, -202.6853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-187.9787, -188.0412, -189.4944, -190.5214, -202.6516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-187.9755, -188.0392, -189.5088, -190.4927, -202.6376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-188.0112, -188.0372, -189.5260, -190.4537, -202.6299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-187.9844, -188.0142, -189.5369, -190.3905, -202.6003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-187.9159, -187.9917, -189.5285, -190.3260, -202.5572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-187.8576, -187.9726, -189.5351, -190.2709, -202.5350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-187.8314, -187.9909, -189.5421, -190.2278, -202.5078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-187.8575, -188.0235, -189.5628, -190.2324, -202.5185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-187.9093, -188.0391, -189.5848, -190.2292, -202.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-188.0219, -188.0564, -189.6059, -190.2256, -202.5052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-188.1283, -188.0722, -189.6545, -190.2418, -202.5193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-188.2159, -188.0909, -189.6942, -190.2423, -202.5416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-188.2162, -188.1004, -189.7186, -190.2082, -202.5585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-188.2232, -188.1157, -189.7401, -190.1573, -202.5561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-188.2986, -188.1469, -189.7673, -190.0997, -202.5494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-188.3597, -188.1848, -189.7841, -190.0242, -202.5225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-188.4166, -188.2265, -189.8016, -189.9890, -202.5071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-188.4336, -188.2662, -189.8087, -189.9218, -202.4577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-188.4687, -188.3017, -189.8305, -189.8880, -202.4242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-188.5681, -188.3412, -189.8630, -189.8557, -202.3995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-188.6498, -188.3804, -189.9042, -189.8469, -202.3792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-188.7034, -188.3977, -189.9306, -189.8073, -202.3435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-188.7494, -188.4175, -189.9732, -189.8072, -202.3459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-188.8099, -188.4373, -189.9803, -189.8024, -202.3231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-188.8970, -188.4474, -189.9600, -189.8012, -202.2621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-189.0020, -188.4376, -189.9211, -189.7457, -202.1696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-189.1454, -188.4139, -189.8687, -189.7026, -202.0690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-189.2757, -188.4005, -189.8218, -189.6662, -201.9829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-189.4107, -188.3986, -189.7728, -189.6323, -201.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-189.5114, -188.4058, -189.6877, -189.5557, -201.7906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-189.6331, -188.4385, -189.6416, -189.5561, -201.7396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-189.7498, -188.4640, -189.6019, -189.5613, -201.6866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-189.8939, -188.4761, -189.5743, -189.5802, -201.6328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-189.9837, -188.4730, -189.5334, -189.5672, -201.5649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-190.0878, -188.4661, -189.4808, -189.5400, -201.4775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-190.2109, -188.4439, -189.4294, -189.5145, -201.3823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-190.3170, -188.4266, -189.3883, -189.4941, -201.3004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-190.3597, -188.3796, -189.3342, -189.4613, -201.2055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-190.4166, -188.3508, -189.3060, -189.4886, -201.1468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-190.4138, -188.3087, -189.2766, -189.4903, -201.0823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-190.4139, -188.2894, -189.2578, -189.4927, -201.0308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-190.3498, -188.2568, -189.2514, -189.4725, -200.9822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-190.3033, -188.2188, -189.2572, -189.4698, -200.9359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-190.2708, -188.2071, -189.2846, -189.5035, -200.9206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-190.2807, -188.2205, -189.3256, -189.5691, -200.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-190.2668, -188.2438, -189.3556, -189.6139, -200.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-190.2300, -188.2472, -189.3867, -189.6119, -200.8641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-190.1830, -188.2312, -189.4190, -189.5899, -200.8116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-190.1291, -188.2043, -189.4602, -189.5314, -200.7748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-190.0899, -188.1917, -189.5027, -189.5051, -200.7652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-190.0821, -188.1877, -189.5392, -189.4956, -200.7761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-190.0558, -188.1962, -189.5918, -189.5020, -200.8104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-190.0896, -188.2143, -189.6593, -189.5561, -200.8649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-190.0944, -188.2194, -189.7360, -189.6232, -200.9206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-190.1662, -188.2411, -189.8190, -189.7509, -201.0115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-190.2263, -188.2460, -189.9348, -189.8936, -201.1141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-190.2347, -188.2346, -190.0511, -189.9816, -201.2066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-190.2224, -188.2158, -190.1769, -190.0708, -201.2905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-190.1606, -188.1560, -190.2742, -190.0968, -201.3500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-190.0661, -188.0985, -190.3665, -190.1282, -201.4065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-189.9918, -188.0150, -190.4252, -190.1201, -201.4028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-189.9989, -187.9770, -190.5137, -190.1648, -201.4439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-190.0001, -187.9240, -190.5961, -190.2294, -201.4727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-190.0045, -187.8606, -190.6821, -190.2679, -201.4941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-189.9940, -187.7852, -190.7255, -190.2750, -201.4710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-190.0301, -187.7430, -190.7667, -190.3058, -201.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-190.1412, -187.7352, -190.8042, -190.3317, -201.4748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-190.2482, -187.7341, -190.8470, -190.3483, -201.4920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-190.4038, -187.7600, -190.8777, -190.3750, -201.5012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-190.5511, -187.7976, -190.9120, -190.4246, -201.5249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-190.6719, -187.8274, -190.9347, -190.4605, -201.5546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-190.8181, -187.8674, -190.9510, -190.5340, -201.5853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-190.9472, -187.9097, -190.9451, -190.5614, -201.5852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-191.0693, -187.9644, -190.9454, -190.5997, -201.6133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-191.2038, -188.0195, -190.9420, -190.6529, -201.6368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-191.3155, -188.1043, -190.9469, -190.7176, -201.6704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-191.4217, -188.1780, -190.9464, -190.7592, -201.7035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-191.5436, -188.2783, -190.9693, -190.8423, -201.7682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-191.6203, -188.3653, -190.9739, -190.8824, -201.8010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-191.6657, -188.4238, -190.9779, -190.8914, -201.8155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-191.7320, -188.4786, -190.9963, -190.9178, -201.8476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-191.7578, -188.5114, -190.9830, -190.9048, -201.8295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-191.7881, -188.5404, -190.9829, -190.9209, -201.8156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-191.8063, -188.5850, -190.9683, -190.9139, -201.8062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-191.8575, -188.6291, -190.9625, -190.9429, -201.7953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-191.8841, -188.6545, -190.9575, -190.9598, -201.7826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-191.8720, -188.6568, -190.9494, -190.9557, -201.7496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-191.8241, -188.6507, -190.9397, -190.9368, -201.6940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-191.7910, -188.6278, -190.9159, -190.9235, -201.6274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-191.7401, -188.5896, -190.9029, -190.8799, -201.5707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-191.7052, -188.5535, -190.8870, -190.8656, -201.5187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-191.6892, -188.5228, -190.8745, -190.8340, -201.4755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-191.6352, -188.4718, -190.8493, -190.7822, -201.4103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-191.5661, -188.4041, -190.8227, -190.7252, -201.3449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-191.5035, -188.3450, -190.8039, -190.6719, -201.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-191.3949, -188.2734, -190.7656, -190.5965, -201.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-191.2681, -188.1967, -190.7195, -190.5025, -201.0948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-191.1623, -188.1293, -190.6912, -190.4261, -201.0107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-191.0789, -188.0880, -190.6710, -190.4085, -200.9687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-191.0480, -188.0754, -190.6518, -190.4437, -200.9332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-191.1138, -188.0895, -190.6250, -190.5167, -200.9044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-191.1710, -188.0854, -190.5946, -190.5854, -200.8568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-191.1950, -188.0782, -190.5511, -190.6084, -200.8059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-191.2303, -188.0805, -190.5020, -190.6193, -200.7502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-191.2491, -188.0761, -190.4748, -190.6442, -200.7105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-191.2521, -188.0609, -190.4461, -190.6477, -200.6631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-191.3265, -188.0479, -190.4233, -190.6882, -200.6508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-191.3967, -188.0425, -190.4027, -190.7183, -200.6553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-191.5264, -188.0476, -190.3663, -190.7589, -200.6491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-191.6396, -188.0595, -190.3511, -190.8128, -200.6556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-191.7579, -188.0718, -190.3329, -190.8685, -200.6565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-191.8846, -188.0813, -190.2992, -190.8940, -200.6333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-191.9664, -188.0706, -190.2573, -190.8716, -200.5761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-192.0709, -188.0489, -190.2142, -190.8563, -200.5266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-192.1787, -188.0315, -190.1746, -190.8475, -200.4754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-192.3580, -188.0277, -190.1395, -190.8741, -200.4507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-192.5470, -188.0394, -190.1116, -190.9272, -200.4479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-192.6997, -188.0454, -190.0720, -190.9475, -200.4161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-192.8798, -188.0580, -190.0358, -190.9938, -200.3939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-193.0391, -188.0757, -189.9722, -190.9778, -200.3374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-193.2113, -188.1019, -189.8963, -190.9481, -200.2795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-193.3525, -188.1399, -189.8546, -190.9450, -200.2592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-193.4868, -188.1810, -189.8191, -190.9499, -200.2533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-193.5971, -188.2182, -189.7904, -190.9295, -200.2284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-193.6152, -188.2550, -189.7699, -190.8918, -200.2010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-193.6069, -188.2858, -189.7462, -190.8486, -200.1436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-193.5991, -188.3012, -189.7378, -190.8006, -200.0962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-193.5530, -188.3044, -189.7583, -190.7855, -200.0603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-193.4732, -188.2849, -189.7608, -190.7094, -199.9974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-193.3560, -188.2492, -189.7471, -190.6086, -199.9194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-193.2407, -188.2147, -189.7480, -190.5296, -199.8664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-193.1214, -188.1845, -189.7669, -190.4713, -199.8410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-192.9987, -188.1655, -189.7962, -190.3987, -199.8327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-192.8740, -188.1480, -189.8165, -190.3062, -199.8210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-192.7385, -188.1234, -189.8393, -190.1966, -199.8172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-192.6696, -188.1077, -189.8793, -190.1070, -199.8437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-192.5752, -188.0864, -189.9113, -190.0199, -199.8469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-192.4800, -188.0737, -189.9293, -189.9193, -199.8467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-192.3494, -188.0290, -189.9172, -189.7791, -199.8007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-192.1914, -188.0049, -189.9024, -189.6471, -199.7533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-192.0806, -187.9932, -189.8899, -189.5315, -199.7278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-191.9963, -187.9694, -189.8765, -189.4228, -199.7154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-191.9353, -187.9489, -189.8723, -189.3290, -199.7121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-191.8847, -187.9245, -189.8474, -189.2057, -199.6889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-191.8418, -187.8679, -189.8039, -189.0838, -199.6273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-191.7904, -187.8167, -189.7835, -188.9844, -199.5926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-191.7187, -187.7583, -189.7649, -188.8734, -199.5399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-191.6965, -187.7423, -189.7342, -188.7660, -199.4965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-191.6660, -187.7434, -189.7291, -188.6895, -199.4928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-191.6211, -187.7475, -189.7161, -188.6276, -199.5040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-191.5455, -187.7385, -189.7150, -188.5819, -199.5376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-191.4500, -187.7298, -189.7243, -188.5602, -199.5828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-191.3491, -187.7205, -189.7264, -188.5157, -199.6152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-191.2474, -187.7044, -189.7555, -188.5084, -199.6693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-191.1362, -187.6922, -189.7705, -188.4882, -199.7074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-190.9815, -187.6845, -189.7932, -188.4648, -199.7596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-190.8993, -187.6948, -189.8312, -188.4687, -199.8287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-190.8034, -187.7056, -189.8590, -188.4581, -199.8872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-190.7246, -187.7168, -189.8967, -188.5018, -199.9550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-190.6492, -187.7350, -189.9232, -188.5452, -200.0067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-190.5748, -187.7263, -189.9306, -188.5673, -200.0203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-190.5141, -187.6999, -189.9264, -188.5710, -200.0158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-190.4708, -187.6742, -189.9216, -188.5765, -200.0273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-190.4605, -187.6483, -189.9292, -188.6235, -200.0704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-190.3302, -187.5989, -189.9636, -188.6333, -200.1044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-190.2304, -187.5545, -189.9792, -188.6281, -200.1029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-190.1417, -187.5193, -189.9948, -188.6330, -200.0908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-190.0849, -187.5111, -190.0363, -188.6960, -200.1135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-190.0215, -187.4957, -190.0829, -188.7707, -200.1214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-190.0253, -187.5025, -190.1096, -188.8461, -200.1340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-190.0659, -187.5125, -190.1340, -188.9210, -200.1699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-190.1397, -187.5310, -190.1337, -188.9877, -200.1873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-190.2344, -187.5621, -190.1332, -189.0684, -200.2238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-190.4017, -187.6025, -190.1028, -189.1136, -200.2662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-190.5476, -187.6489, -190.0553, -189.1356, -200.3014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-190.6377, -187.7125, -190.0036, -189.1402, -200.3325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-190.7162, -187.7717, -189.9718, -189.1647, -200.3749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-190.7516, -187.8108, -189.9415, -189.1682, -200.3870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-190.7289, -187.8452, -189.8997, -189.1425, -200.3735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-190.6844, -187.8674, -189.8494, -189.1216, -200.3548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-190.6191, -187.8793, -189.7909, -189.0589, -200.3062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-190.4999, -187.8494, -189.7377, -188.9671, -200.2422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-190.4501, -187.8300, -189.6717, -188.8824, -200.1765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-190.4010, -187.8430, -189.6293, -188.8398, -200.1352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-190.3912, -187.8629, -189.6058, -188.8643, -200.1159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-190.3667, -187.8584, -189.5890, -188.8911, -200.0956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-190.3576, -187.8727, -189.5572, -188.9312, -200.0535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-190.4168, -187.9052, -189.5250, -189.0015, -200.0252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-190.4326, -187.9160, -189.4805, -189.0348, -199.9787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-190.3566, -187.8909, -189.4454, -189.0192, -199.9053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-190.2553, -187.8829, -189.4187, -189.0113, -199.8494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-190.2042, -187.8572, -189.3885, -189.0421, -199.8058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-190.1978, -187.8460, -189.3702, -189.0681, -199.7849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-190.2058, -187.8324, -189.3492, -189.0774, -199.7683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-190.1936, -187.8239, -189.3228, -189.0703, -199.7526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-190.1920, -187.8335, -189.3196, -189.0929, -199.7581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-190.2140, -187.8533, -189.3145, -189.1221, -199.7589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-190.2522, -187.9025, -189.3072, -189.1480, -199.7607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-190.2397, -187.9467, -189.3132, -189.1714, -199.7548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-190.2036, -187.9720, -189.3234, -189.1920, -199.7508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-190.1599, -187.9800, -189.3474, -189.2154, -199.7499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-190.0482, -187.9691, -189.3725, -189.2098, -199.7253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-189.9083, -187.9417, -189.3760, -189.1572, -199.6442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-189.7380, -187.9122, -189.4026, -189.1169, -199.5884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-189.5222, -187.8474, -189.4072, -189.0393, -199.4885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-189.2812, -187.7555, -189.4005, -188.9189, -199.3859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-189.0619, -187.6767, -189.3892, -188.7964, -199.3075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-188.8349, -187.5857, -189.3853, -188.6752, -199.2282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-188.6269, -187.4872, -189.4020, -188.5829, -199.1698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-188.3893, -187.3627, -189.3980, -188.4645, -199.0915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-188.1793, -187.2356, -189.3990, -188.3666, -199.0196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-187.9639, -187.1024, -189.4080, -188.2756, -198.9581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-187.7999, -187.0024, -189.4049, -188.1960, -198.9094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-187.6904, -186.9168, -189.4124, -188.1530, -198.8848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-187.6308, -186.8547, -189.4098, -188.1218, -198.8777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-187.5529, -186.8193, -189.3984, -188.0534, -198.8700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-187.5212, -186.8129, -189.3980, -188.0213, -198.8812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-187.4923, -186.8215, -189.4208, -188.0373, -198.9102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-187.5064, -186.8528, -189.4547, -188.0818, -198.9643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-187.5546, -186.8933, -189.4925, -188.1637, -199.0346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-187.6190, -186.9269, -189.4953, -188.2167, -199.0646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-187.6916, -186.9654, -189.5014, -188.2676, -199.0975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-187.7505, -187.0107, -189.5084, -188.3249, -199.1141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-187.8545, -187.0728, -189.4898, -188.3760, -199.1231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-187.9726, -187.1336, -189.4692, -188.4064, -199.1176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-188.0980, -187.2028, -189.4493, -188.4497, -199.1224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-188.2620, -187.2700, -189.4428, -188.4983, -199.1449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-188.4610, -187.3460, -189.4353, -188.5787, -199.1896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-188.6518, -187.4155, -189.4167, -188.6571, -199.2198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-188.8798, -187.5115, -189.3875, -188.7323, -199.2515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-189.1347, -187.6141, -189.3732, -188.8528, -199.2857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-189.3067, -187.6869, -189.3715, -188.9430, -199.3191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-189.4397, -187.7474, -189.3690, -189.0295, -199.3325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-189.6020, -187.8198, -189.3712, -189.1240, -199.3608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-189.7339, -187.8825, -189.3675, -189.1971, -199.3924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-189.8601, -187.9267, -189.3666, -189.2655, -199.4200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-189.9834, -187.9716, -189.3518, -189.3353, -199.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-190.1411, -188.0373, -189.3553, -189.4447, -199.4692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-190.2957, -188.1045, -189.3675, -189.5357, -199.5218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-190.3700, -188.1589, -189.3897, -189.6049, -199.5672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-190.4120, -188.2158, -189.4078, -189.6776, -199.6093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-190.4853, -188.2677, -189.4058, -189.7650, -199.6251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-190.5818, -188.3119, -189.4347, -189.8853, -199.6696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-190.7091, -188.3560, -189.4686, -190.0247, -199.7225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-190.7627, -188.3830, -189.4776, -190.0684, -199.7403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-190.7691, -188.3998, -189.4851, -190.0699, -199.7271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-190.7111, -188.3950, -189.4867, -190.0397, -199.6889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-190.6339, -188.3799, -189.5005, -190.0066, -199.6643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-190.5302, -188.3638, -189.4982, -189.9280, -199.6102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-190.4314, -188.3393, -189.5143, -189.8827, -199.5886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-190.2842, -188.3062, -189.5024, -189.8079, -199.5206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-190.1323, -188.2610, -189.4924, -189.7189, -199.4563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-189.9586, -188.2155, -189.4633, -189.6059, -199.3808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-189.8147, -188.1769, -189.4220, -189.4904, -199.3010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-189.6532, -188.1175, -189.3971, -189.3621, -199.2277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-189.5782, -188.0757, -189.3882, -189.2886, -199.2013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-189.4663, -188.0324, -189.3722, -189.1835, -199.1541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-189.3662, -188.0020, -189.3594, -189.0916, -199.1248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-189.2804, -187.9959, -189.3318, -188.9648, -199.1032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-189.2029, -187.9705, -189.3084, -188.8649, -199.0771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-189.1078, -187.9252, -189.2797, -188.7682, -199.0307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-189.0551, -187.8835, -189.2533, -188.7033, -198.9916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-189.0084, -187.8278, -189.2410, -188.6479, -198.9699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-188.9629, -187.7744, -189.1994, -188.5608, -198.9336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-188.9650, -187.7287, -189.1600, -188.5234, -198.9112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-188.9697, -187.7058, -189.1570, -188.5102, -198.9196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-188.9708, -187.6970, -189.1476, -188.5097, -198.9275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-188.9769, -187.7158, -189.1150, -188.4967, -198.9187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-188.9740, -187.7608, -189.0693, -188.4769, -198.8940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-189.0083, -187.8246, -189.0232, -188.4675, -198.9053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-189.0662, -187.8870, -188.9693, -188.4639, -198.9018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-189.1410, -187.9732, -188.9461, -188.5109, -198.9334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-189.1621, -188.0307, -188.9204, -188.5607, -198.9471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-189.1547, -188.0622, -188.8932, -188.6091, -198.9429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-189.1263, -188.0717, -188.8784, -188.6719, -198.9286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-189.0632, -188.0677, -188.8650, -188.7435, -198.9087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-188.9837, -188.0554, -188.8528, -188.8069, -198.8949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-188.9002, -188.0485, -188.8407, -188.8743, -198.8910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-188.7594, -188.0496, -188.8315, -188.9210, -198.8750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-188.6393, -188.0665, -188.8384, -188.9938, -198.8915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-188.5176, -188.0633, -188.8688, -189.1042, -198.8950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-188.3559, -188.0265, -188.9099, -189.1776, -198.8702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-188.2459, -188.0178, -188.9570, -189.2717, -198.8784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-188.1826, -188.0340, -189.0241, -189.3939, -198.9252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-188.1318, -188.0557, -189.0694, -189.4960, -198.9637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-188.1190, -188.1042, -189.0775, -189.5611, -198.9779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-188.1459, -188.1573, -189.0956, -189.6457, -199.0012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-188.1745, -188.2008, -189.0851, -189.7068, -198.9927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-188.2639, -188.2797, -189.0806, -189.7786, -199.0138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-188.3898, -188.3568, -189.0633, -189.8554, -199.0320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-188.4850, -188.4119, -189.0475, -189.9091, -199.0303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-188.5402, -188.4587, -189.0410, -189.9349, -199.0410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-188.5426, -188.5244, -189.0674, -189.9846, -199.0846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-188.5505, -188.5829, -189.1173, -190.0579, -199.1360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-188.5663, -188.6397, -189.1588, -190.1425, -199.1906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-188.5906, -188.6858, -189.1810, -190.2087, -199.2342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-188.6472, -188.7282, -189.1951, -190.2917, -199.2855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-188.7203, -188.7728, -189.2000, -190.3821, -199.3304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-188.8166, -188.7996, -189.2081, -190.4950, -199.3816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-188.8636, -188.8017, -189.1999, -190.5675, -199.4039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-188.8947, -188.7953, -189.2029, -190.6364, -199.4439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-188.9447, -188.8029, -189.1885, -190.7111, -199.4671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-188.9753, -188.7896, -189.1538, -190.7578, -199.4527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-188.9951, -188.7764, -189.1053, -190.7637, -199.4248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-189.0712, -188.7967, -189.0611, -190.7875, -199.4048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-189.0972, -188.8077, -189.0203, -190.8112, -199.3797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-189.1183, -188.8083, -188.9831, -190.8136, -199.3488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-189.1315, -188.7946, -188.9493, -190.8049, -199.3056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-189.1850, -188.7819, -188.9224, -190.8305, -199.2669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-189.2253, -188.7870, -188.8781, -190.8493, -199.2219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-189.1780, -188.7686, -188.8200, -190.8173, -199.1557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-189.1083, -188.7407, -188.7787, -190.8069, -199.0960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-188.9764, -188.7111, -188.7452, -190.7653, -199.0376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-188.9092, -188.6857, -188.7071, -190.7399, -198.9983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-188.8620, -188.6659, -188.6426, -190.6719, -198.9577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-188.8454, -188.6563, -188.5871, -190.6202, -198.9402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-188.8201, -188.6515, -188.5290, -190.5605, -198.9166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-188.8151, -188.6684, -188.4796, -190.5254, -198.9090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-188.7823, -188.7092, -188.4191, -190.4634, -198.8775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-188.7852, -188.7731, -188.3717, -190.4431, -198.8742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-188.7769, -188.8393, -188.3399, -190.4286, -198.8766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-188.7759, -188.8981, -188.3230, -190.4176, -198.8877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-188.7062, -188.9397, -188.2888, -190.3957, -198.8742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-188.6802, -188.9525, -188.2560, -190.3592, -198.8572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-188.6312, -188.9834, -188.2284, -190.3233, -198.8562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-188.5873, -188.9855, -188.2060, -190.2962, -198.8522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-188.5886, -189.0041, -188.1690, -190.2490, -198.8599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-188.5606, -188.9978, -188.1521, -190.2119, -198.8679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-188.5994, -189.0335, -188.1432, -190.2275, -198.9098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-188.6147, -189.0706, -188.1145, -190.1884, -198.9202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-188.5828, -189.0833, -188.0453, -190.1024, -198.8896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-188.5350, -189.0887, -187.9785, -190.0570, -198.8463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-188.4738, -189.0875, -187.9009, -189.9946, -198.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-188.4435, -189.0853, -187.8360, -189.9476, -198.7714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-188.4753, -189.0995, -187.7848, -189.9211, -198.7776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-188.4717, -189.0841, -187.7253, -189.8737, -198.7716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-188.4551, -189.0695, -187.6487, -189.8200, -198.7649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-188.4486, -189.0478, -187.5990, -189.8028, -198.7798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-188.4686, -189.0335, -187.5616, -189.7903, -198.7959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-188.5277, -189.0295, -187.5309, -189.7730, -198.8356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-188.6656, -189.0515, -187.4906, -189.7755, -198.9119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-188.8152, -189.0849, -187.4630, -189.7872, -198.9906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-188.9758, -189.1225, -187.4594, -189.8169, -199.0781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-189.0595, -189.1521, -187.4535, -189.8099, -199.1347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-189.1457, -189.1692, -187.4484, -189.8008, -199.1981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-189.2234, -189.1841, -187.4480, -189.7878, -199.2641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-189.3020, -189.1958, -187.4215, -189.7744, -199.2950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-189.3730, -189.2034, -187.4260, -189.7997, -199.3316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-189.4129, -189.2023, -187.4353, -189.8098, -199.3645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-189.4994, -189.2256, -187.4282, -189.7857, -199.4299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-189.6260, -189.2763, -187.4384, -189.8004, -199.5227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-189.7337, -189.3035, -187.4451, -189.8401, -199.5866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-189.7808, -189.3127, -187.4450, -189.8713, -199.6107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-189.8109, -189.3257, -187.4713, -189.9123, -199.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-189.7862, -189.3312, -187.5131, -189.9438, -199.6465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-189.6835, -189.2871, -187.5592, -189.9689, -199.6245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-189.6136, -189.2619, -187.6057, -190.0141, -199.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-189.5400, -189.2390, -187.6265, -190.0501, -199.6471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-189.4837, -189.2269, -187.6429, -190.0843, -199.6747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-189.3841, -189.2017, -187.6327, -190.0907, -199.6677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-189.3265, -189.1806, -187.6097, -190.1239, -199.6560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-189.3176, -189.2010, -187.5704, -190.1315, -199.6644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-189.2242, -189.2087, -187.5545, -190.1259, -199.6303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-189.0829, -189.1972, -187.5442, -190.0656, -199.5671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-188.8063, -189.1389, -187.5155, -189.9359, -199.4257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-188.5872, -189.1054, -187.5007, -189.8232, -199.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-188.3939, -189.0916, -187.4909, -189.7124, -199.2651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-188.2116, -189.0459, -187.4831, -189.6286, -199.2068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-188.0710, -189.0302, -187.4788, -189.5418, -199.1699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-188.0262, -189.0337, -187.4539, -189.4636, -199.1573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-188.0367, -189.0408, -187.4536, -189.4063, -199.1637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-188.0923, -189.0497, -187.4383, -189.3879, -199.1818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-188.1233, -189.0495, -187.4333, -189.3512, -199.1994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-188.1748, -189.0727, -187.4207, -189.3371, -199.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-188.2546, -189.1086, -187.4392, -189.3848, -199.2552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-188.3351, -189.1487, -187.4434, -189.4122, -199.2863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-188.4935, -189.2280, -187.4277, -189.4090, -199.3307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-188.7209, -189.3240, -187.3890, -189.4391, -199.4165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-188.9539, -189.4290, -187.3455, -189.4314, -199.5000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-189.1916, -189.5231, -187.2798, -189.4050, -199.5661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-189.4833, -189.6343, -187.1670, -189.3491, -199.6271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-189.7713, -189.7427, -187.0737, -189.2927, -199.6993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-190.0747, -189.8711, -187.0153, -189.2901, -199.8032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-190.3699, -189.9980, -186.9705, -189.3128, -199.8928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-190.6342, -190.0938, -186.9582, -189.3696, -199.9797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-190.8243, -190.1575, -186.9695, -189.4399, -200.0487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-190.9823, -190.1951, -186.9786, -189.4974, -200.0746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-191.1410, -190.2445, -187.0025, -189.5235, -200.1257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-191.1923, -190.2146, -187.0422, -189.5540, -200.0999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-191.2294, -190.1915, -187.0515, -189.5456, -200.0600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-191.2506, -190.1909, -187.0666, -189.5295, -200.0327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-191.2671, -190.1604, -187.0714, -189.4685, -199.9827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-191.2750, -190.1205, -187.0956, -189.4442, -199.9472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-191.2468, -190.0694, -187.1092, -189.4249, -199.8791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-191.1392, -190.0017, -187.1268, -189.3957, -199.7794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-191.0321, -189.8963, -187.1368, -189.3618, -199.6535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-190.9025, -189.8100, -187.1645, -189.3475, -199.5430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-190.8127, -189.7607, -187.2064, -189.3630, -199.4801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-190.6902, -189.6965, -187.2614, -189.3900, -199.3978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-190.6054, -189.6236, -187.2845, -189.3989, -199.3043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-190.5167, -189.5541, -187.3079, -189.4221, -199.2278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-190.4484, -189.4853, -187.3300, -189.4471, -199.1892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-190.3518, -189.4366, -187.3427, -189.4534, -199.1786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-190.2337, -189.3791, -187.3384, -189.4440, -199.1352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-190.1265, -189.3353, -187.3467, -189.4278, -199.1133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-190.0807, -189.3047, -187.3604, -189.4316, -199.1149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-190.0697, -189.2763, -187.3748, -189.4474, -199.1397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-190.0403, -189.2407, -187.3923, -189.4902, -199.1431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-190.0707, -189.2227, -187.4126, -189.5594, -199.1662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-190.1337, -189.2149, -187.3999, -189.5895, -199.1924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-190.1646, -189.1955, -187.4203, -189.6415, -199.2296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-190.1607, -189.1649, -187.4383, -189.7063, -199.2559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-190.1184, -189.1400, -187.4504, -189.7235, -199.2731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-190.1233, -189.1321, -187.4771, -189.7539, -199.2982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-190.1463, -189.1426, -187.4919, -189.7749, -199.3245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-190.1948, -189.1916, -187.5066, -189.8097, -199.3665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-190.2288, -189.2445, -187.5274, -189.8213, -199.4035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-190.2275, -189.2780, -187.5691, -189.8629, -199.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-190.2390, -189.3126, -187.6209, -189.8908, -199.4747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-190.2981, -189.3415, -187.6342, -189.9216, -199.4963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-190.3853, -189.3801, -187.6400, -189.9551, -199.5469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-190.4903, -189.4103, -187.6667, -190.0226, -199.5999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-190.6035, -189.4417, -187.6720, -190.0453, -199.6402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-190.7471, -189.4872, -187.6614, -190.0707, -199.6842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-190.9219, -189.5614, -187.6397, -190.1225, -199.7503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-191.0825, -189.6153, -187.6235, -190.1804, -199.8032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-191.1889, -189.6509, -187.5944, -190.1774, -199.8207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-191.3288, -189.7215, -187.5638, -190.1594, -199.8578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-191.4606, -189.8014, -187.5135, -190.1438, -199.8948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-191.6896, -189.9237, -187.4911, -190.1864, -200.0104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-191.9013, -190.0358, -187.4619, -190.2423, -200.0958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-192.1152, -190.1413, -187.4483, -190.3558, -200.1894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-192.2454, -190.2333, -187.4413, -190.4351, -200.2301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-192.3223, -190.2992, -187.4259, -190.4480, -200.2378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-192.4066, -190.3560, -187.3597, -190.4573, -200.2101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-192.5108, -190.4256, -187.2951, -190.4664, -200.1909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-192.5629, -190.4436, -187.2816, -190.5129, -200.1514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-192.5798, -190.4649, -187.2812, -190.5754, -200.1255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-192.5656, -190.4772, -187.2888, -190.6265, -200.1210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-192.5558, -190.4942, -187.2992, -190.6469, -200.1159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-192.4946, -190.4821, -187.3119, -190.6609, -200.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-192.4183, -190.4644, -187.3355, -190.6712, -200.0449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-192.3753, -190.4622, -187.3103, -190.6392, -199.9845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-192.3118, -190.4202, -187.2853, -190.6190, -199.9118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-192.2381, -190.3643, -187.2766, -190.6256, -199.8415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-192.1621, -190.2972, -187.2569, -190.6282, -199.7789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-192.0853, -190.2100, -187.2399, -190.6271, -199.7001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-192.0546, -190.1151, -187.2062, -190.6317, -199.6212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-191.9954, -190.0297, -187.1642, -190.6296, -199.5660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-191.9146, -189.9263, -187.1194, -190.6333, -199.5042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-191.8310, -189.8469, -187.0849, -190.6445, -199.4525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-191.7829, -189.7832, -187.0610, -190.6856, -199.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-191.7832, -189.7396, -187.0343, -190.7412, -199.4257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-191.7558, -189.7163, -187.0042, -190.7715, -199.4242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-191.8007, -189.7176, -186.9662, -190.8170, -199.4358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-191.8716, -189.7475, -186.9290, -190.8686, -199.4560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-191.9219, -189.7837, -186.9139, -190.9366, -199.5060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-191.9764, -189.8308, -186.9024, -191.0343, -199.5485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-192.0265, -189.9151, -186.9015, -191.1364, -199.6022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-192.0624, -189.9606, -186.8978, -191.2228, -199.6187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-192.0757, -189.9827, -186.8716, -191.2472, -199.5930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-192.0973, -190.0105, -186.8444, -191.2531, -199.5845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-192.0439, -190.0444, -186.8295, -191.2446, -199.5598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-192.0119, -190.1026, -186.8022, -191.2389, -199.5621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-191.9915, -190.1585, -186.8024, -191.2600, -199.5936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-191.9384, -190.1839, -186.7888, -191.2333, -199.5996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-191.8485, -190.1774, -186.7633, -191.2007, -199.5810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-191.6845, -190.1411, -186.7246, -191.1517, -199.5275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-191.5799, -190.1034, -186.6523, -191.0929, -199.4673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-191.5592, -190.0843, -186.5626, -191.0248, -199.4289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-191.5832, -190.1012, -186.4449, -190.9656, -199.4182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-191.6028, -190.1297, -186.3458, -190.9179, -199.4322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-191.6469, -190.1665, -186.2358, -190.8884, -199.4629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-191.6817, -190.2185, -186.1326, -190.8403, -199.5014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-191.7145, -190.2474, -186.0636, -190.7982, -199.5346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-191.7784, -190.2669, -185.9978, -190.7586, -199.5735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-191.8450, -190.2978, -185.9178, -190.6931, -199.6108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-191.9620, -190.3651, -185.8827, -190.6549, -199.6957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-192.0699, -190.4204, -185.8476, -190.6031, -199.7654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-192.1405, -190.4803, -185.8183, -190.5770, -199.8485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-192.2147, -190.5591, -185.7659, -190.5202, -199.9424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-192.2802, -190.6699, -185.7316, -190.4618, -200.0298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-192.2839, -190.7764, -185.7274, -190.3941, -200.1223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-192.2771, -190.8702, -185.7373, -190.3671, -200.2156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-192.3213, -190.9668, -185.7325, -190.3598, -200.3077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-192.3700, -191.0728, -185.7221, -190.3417, -200.4134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-192.4421, -191.1756, -185.7401, -190.3752, -200.5265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-192.4960, -191.2805, -185.7518, -190.3647, -200.6373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-192.5516, -191.3824, -185.7560, -190.3574, -200.7458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-192.5248, -191.4329, -185.7536, -190.3184, -200.7949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-192.4433, -191.4643, -185.7853, -190.3152, -200.8077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-192.4442, -191.5005, -185.8289, -190.3319, -200.8459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-192.4495, -191.5778, -185.8908, -190.3305, -200.9073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-192.4172, -191.6366, -185.9497, -190.3281, -200.9435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-192.3933, -191.6948, -185.9959, -190.3181, -200.9516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-192.3374, -191.7145, -186.0489, -190.3211, -200.9185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-192.2929, -191.7441, -186.0612, -190.3016, -200.8775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-192.2261, -191.7729, -186.0553, -190.2655, -200.8304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-192.1760, -191.7694, -186.0767, -190.2637, -200.7801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-192.1026, -191.7525, -186.1071, -190.2988, -200.7120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-192.0266, -191.7443, -186.1201, -190.3367, -200.6561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-192.0064, -191.7334, -186.1304, -190.3857, -200.6235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-192.0165, -191.7551, -186.1559, -190.4301, -200.6184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-191.9917, -191.7505, -186.1811, -190.4595, -200.5772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-191.9899, -191.7627, -186.2170, -190.5027, -200.5611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-191.9530, -191.7521, -186.2489, -190.5223, -200.5245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-191.9609, -191.7349, -186.2820, -190.5343, -200.4864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-191.9401, -191.6850, -186.3073, -190.5177, -200.4327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-191.9481, -191.6450, -186.3153, -190.4975, -200.3908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-192.0349, -191.6471, -186.3246, -190.5025, -200.4065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-192.1433, -191.6581, -186.3625, -190.5470, -200.4436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-192.3226, -191.7079, -186.4049, -190.6108, -200.5235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-192.5710, -191.7683, -186.4395, -190.6832, -200.6251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-192.8274, -191.8359, -186.4412, -190.7470, -200.7350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-193.0198, -191.9030, -186.4033, -190.8041, -200.8343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-193.1582, -191.9489, -186.3472, -190.8402, -200.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-193.2805, -192.0000, -186.3296, -190.9041, -200.9724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-193.4110, -192.0651, -186.3026, -190.9542, -201.0535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-193.4468, -192.1008, -186.2693, -190.9859, -201.0903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-193.4521, -192.1625, -186.2449, -191.0187, -201.1388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-193.4638, -192.2377, -186.1936, -191.0146, -201.1913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-193.4746, -192.3223, -186.1112, -190.9852, -201.2291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-193.4107, -192.3737, -186.0345, -190.9589, -201.2268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-193.2819, -192.3945, -185.9682, -190.9598, -201.1807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-193.1395, -192.4252, -185.8844, -190.9140, -201.1299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-192.9758, -192.4451, -185.7782, -190.8559, -201.0846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-192.8889, -192.4761, -185.6613, -190.8118, -201.0833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-192.8401, -192.5253, -185.5557, -190.7908, -201.1099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-192.8972, -192.5963, -185.4758, -190.7745, -201.1880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-193.0205, -192.6907, -185.3881, -190.7783, -201.3030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-193.1684, -192.8045, -185.3354, -190.8290, -201.4519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-193.2388, -192.8788, -185.2796, -190.8647, -201.5451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-193.3012, -192.9345, -185.2185, -190.8807, -201.6358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-193.3741, -192.9700, -185.1591, -190.9233, -201.7168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-193.4289, -192.9801, -185.1350, -190.9758, -201.7858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-193.4423, -192.9683, -185.1119, -190.9991, -201.8120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-193.4086, -192.9319, -185.0964, -191.0266, -201.8069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-193.2967, -192.8702, -185.0765, -191.0074, -201.7647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-193.1745, -192.8051, -185.0599, -190.9924, -201.7016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-193.0596, -192.7486, -185.0484, -190.9675, -201.6553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-192.9503, -192.7161, -185.0377, -190.9637, -201.6304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-192.8167, -192.6714, -185.0446, -190.9855, -201.5932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-192.7262, -192.6432, -185.0478, -191.0193, -201.5761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-192.6236, -192.5787, -185.0383, -191.0401, -201.5403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-192.5011, -192.5108, -185.0369, -191.0449, -201.5000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-192.4300, -192.4793, -185.0018, -191.0678, -201.4955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-192.3282, -192.4277, -184.9689, -191.0773, -201.4814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-192.1931, -192.3863, -184.9735, -191.0971, -201.4668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-192.1063, -192.3585, -184.9841, -191.1169, -201.4830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-192.0044, -192.3214, -184.9643, -191.1193, -201.4760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-191.9849, -192.3256, -184.9009, -191.1057, -201.5192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-191.9992, -192.3343, -184.8384, -191.1116, -201.5544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-192.0407, -192.3625, -184.7921, -191.1214, -201.5893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-192.1598, -192.3927, -184.7426, -191.1699, -201.6552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-192.2819, -192.4090, -184.6660, -191.1858, -201.7119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-192.4294, -192.4134, -184.5781, -191.2231, -201.7707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-192.5788, -192.4474, -184.4842, -191.2364, -201.8496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-192.7433, -192.4885, -184.3986, -191.2739, -201.9240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-192.8683, -192.5221, -184.3529, -191.3277, -201.9851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-193.0247, -192.5905, -184.3471, -191.4127, -202.0623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-193.1088, -192.6508, -184.2916, -191.4259, -202.1017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-193.1460, -192.6826, -184.2348, -191.4256, -202.1322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-193.1298, -192.7061, -184.1788, -191.4002, -202.1665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-193.1682, -192.7689, -184.1578, -191.3863, -202.2651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-193.2068, -192.8218, -184.1493, -191.3542, -202.3746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-193.1912, -192.8712, -184.1563, -191.3147, -202.4557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-193.1507, -192.9019, -184.1598, -191.2453, -202.5033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-193.1748, -192.9606, -184.1547, -191.1643, -202.5680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-193.1877, -193.0037, -184.1445, -191.0758, -202.6178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-193.0837, -193.0244, -184.1454, -190.9999, -202.6464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-192.9449, -193.0266, -184.1449, -190.9306, -202.6485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-192.7642, -192.9602, -184.1525, -190.8831, -202.6165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-192.6021, -192.8983, -184.1720, -190.8398, -202.6043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-192.3888, -192.8281, -184.1696, -190.7798, -202.5717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-192.2001, -192.7696, -184.1572, -190.7185, -202.5368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-192.0123, -192.7214, -184.1430, -190.6634, -202.5132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-191.7899, -192.6642, -184.1111, -190.6005, -202.4612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-191.6694, -192.6277, -184.1071, -190.5687, -202.4462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-191.5451, -192.5799, -184.1010, -190.5166, -202.4266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-191.2982, -192.4882, -184.1215, -190.4870, -202.3392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-191.0964, -192.4144, -184.1586, -190.4724, -202.2797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-190.9131, -192.3333, -184.2115, -190.4555, -202.2030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-190.7518, -192.2561, -184.2558, -190.4498, -202.1278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-190.6597, -192.2210, -184.2916, -190.4282, -202.1114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-190.6249, -192.2236, -184.3401, -190.4235, -202.1124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-190.4885, -192.1529, -184.3484, -190.3900, -202.0324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-190.4153, -192.1179, -184.3637, -190.3880, -201.9866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-190.3209, -192.1113, -184.3715, -190.3796, -201.9434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-190.2287, -192.1136, -184.3678, -190.3717, -201.9150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-190.2290, -192.1430, -184.3790, -190.3817, -201.9497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-190.2635, -192.1789, -184.3618, -190.3706, -201.9916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-190.1684, -192.1614, -184.3451, -190.3519, -201.9727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-189.9698, -192.1005, -184.3277, -190.3211, -201.9119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-189.7288, -192.0243, -184.2867, -190.2431, -201.8214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-189.4679, -191.9421, -184.2051, -190.1638, -201.7154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-189.2905, -191.8867, -184.1212, -190.0998, -201.6598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-189.1300, -191.8033, -184.0458, -190.0593, -201.5971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-189.0669, -191.7472, -183.9615, -190.0612, -201.5628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-189.0256, -191.6919, -183.8902, -190.0714, -201.5306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-188.9917, -191.6516, -183.7860, -190.0670, -201.4907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-189.0023, -191.6192, -183.7029, -190.0896, -201.4698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-189.0143, -191.6062, -183.6337, -190.0981, -201.4652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-189.0652, -191.6135, -183.5437, -190.0868, -201.4718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-189.1529, -191.6497, -183.4741, -190.1274, -201.4919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-189.2278, -191.7025, -183.3595, -190.1328, -201.5090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-189.3337, -191.7630, -183.2303, -190.1332, -201.5384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-189.3883, -191.8201, -183.0988, -190.1262, -201.5785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-189.4747, -191.8926, -182.9825, -190.0997, -201.6297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-189.5746, -191.9856, -182.8680, -190.0632, -201.7090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-189.6565, -192.0447, -182.7897, -190.0592, -201.7707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-189.7860, -192.1356, -182.6977, -190.0576, -201.8691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-189.9043, -192.1927, -182.5883, -190.0634, -201.9293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-189.9817, -192.2332, -182.4991, -190.0596, -201.9622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-190.0046, -192.2356, -182.4213, -190.0454, -201.9506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-190.0266, -192.2480, -182.3300, -190.0381, -201.9506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-190.0364, -192.2225, -182.2687, -190.0480, -201.9236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-190.1475, -192.2285, -182.2514, -190.0860, -201.9401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-190.1591, -192.1893, -182.2590, -190.1164, -201.8951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-190.1956, -192.1807, -182.2469, -190.1662, -201.8753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-190.1498, -192.1814, -182.1949, -190.1881, -201.8502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-190.1071, -192.1983, -182.1798, -190.2425, -201.8475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-190.1271, -192.2423, -182.1958, -190.3466, -201.8740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-190.1336, -192.2371, -182.2301, -190.4900, -201.8839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-190.1110, -192.1955, -182.2057, -190.5769, -201.8604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-190.0450, -192.1060, -182.2058, -190.6568, -201.7946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-189.9649, -192.0137, -182.1888, -190.7072, -201.7126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-189.9186, -191.9285, -182.1830, -190.7427, -201.6490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-189.8583, -191.8669, -182.1748, -190.7801, -201.6032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-189.7569, -191.7837, -182.1783, -190.8126, -201.5494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-189.7183, -191.7406, -182.1912, -190.8411, -201.5216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-189.6548, -191.6933, -182.1719, -190.8198, -201.4723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-189.6071, -191.6389, -182.1369, -190.7917, -201.4331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-189.6058, -191.6049, -182.1199, -190.7686, -201.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-189.6364, -191.6130, -182.0774, -190.7370, -201.4254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-189.6564, -191.6286, -182.0097, -190.7022, -201.4633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-189.7008, -191.6690, -181.9263, -190.6593, -201.5096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-189.7135, -191.6991, -181.8002, -190.5913, -201.5541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-189.7767, -191.7517, -181.7029, -190.5467, -201.6402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-189.8920, -191.8278, -181.5793, -190.4961, -201.7550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-189.9752, -191.9128, -181.4483, -190.4280, -201.8777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-190.0881, -191.9910, -181.3716, -190.3911, -202.0139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-190.1750, -192.0773, -181.2285, -190.2942, -202.1402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-190.2311, -192.1377, -181.0770, -190.1689, -202.2287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-190.2575, -192.1809, -180.9425, -190.0497, -202.2960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-190.2276, -192.1843, -180.8239, -189.9807, -202.3231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-190.2452, -192.1821, -180.7622, -189.9633, -202.3584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-190.2435, -192.1854, -180.7083, -189.9501, -202.3909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-190.2913, -192.2180, -180.6451, -189.9606, -202.4591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-190.4305, -192.2865, -180.6293, -189.9793, -202.5963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-190.5378, -192.3455, -180.6327, -190.0304, -202.7140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-190.6129, -192.3865, -180.6453, -190.0798, -202.8137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-190.6108, -192.3951, -180.6437, -190.0979, -202.8807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-190.5501, -192.3944, -180.5984, -190.0459, -202.9133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-190.4794, -192.3923, -180.5043, -189.9476, -202.9242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-190.4276, -192.4097, -180.3944, -189.8475, -202.9589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-190.3654, -192.4078, -180.3209, -189.7638, -202.9780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-190.3503, -192.4071, -180.2364, -189.6918, -203.0098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-190.2915, -192.3758, -180.1776, -189.6079, -202.9975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-190.1154, -192.2980, -180.0733, -189.4441, -202.9145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-189.9517, -192.2043, -179.9883, -189.3007, -202.8508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-189.9312, -192.1728, -179.9246, -189.2138, -202.8751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-189.9507, -192.1533, -179.8691, -189.1604, -202.9177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-189.9753, -192.1409, -179.8273, -189.1383, -202.9850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-190.0446, -192.1329, -179.8040, -189.1368, -203.0597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-190.0569, -192.0981, -179.7836, -189.1138, -203.0857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-190.0759, -192.0685, -179.7622, -189.1069, -203.1376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-190.0265, -191.9999, -179.7693, -189.1002, -203.1391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-189.9587, -191.9119, -179.7546, -189.0785, -203.1288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-189.8233, -191.7776, -179.7472, -189.0724, -203.0552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-189.6864, -191.6774, -179.7108, -189.0271, -203.0070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-189.5727, -191.5830, -179.7167, -189.0082, -202.9730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-189.4228, -191.4538, -179.7951, -188.9934, -202.8922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-189.2105, -191.2844, -179.8379, -188.9562, -202.7585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-188.9580, -191.1248, -179.8206, -188.8922, -202.6294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-188.6933, -190.9607, -179.8502, -188.8571, -202.4922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-188.4453, -190.8021, -179.8641, -188.8508, -202.3577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-188.2567, -190.6634, -179.8679, -188.8484, -202.2513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-188.0908, -190.5400, -179.8734, -188.8601, -202.1718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-187.9481, -190.4436, -179.9001, -188.9005, -202.0960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-187.8273, -190.3682, -179.9021, -188.9298, -202.0235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-187.6711, -190.2946, -179.8745, -188.9175, -201.9366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-187.5535, -190.2523, -179.8409, -188.9322, -201.8852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-187.4760, -190.2431, -179.7980, -188.9538, -201.8579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-187.4262, -190.2626, -179.8067, -189.0157, -201.8732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-187.3714, -190.3336, -179.8120, -189.0731, -201.9163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-187.2875, -190.3815, -179.8128, -189.1293, -201.9508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-187.2311, -190.4672, -179.7586, -189.1139, -202.0144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-187.2089, -190.5681, -179.6858, -189.0759, -202.1058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-187.3118, -190.7273, -179.6457, -189.1025, -202.2839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-187.3379, -190.8274, -179.5920, -189.0956, -202.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-187.3719, -190.9407, -179.5351, -189.0795, -202.5570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-187.4282, -191.0647, -179.4852, -189.0816, -202.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-187.4731, -191.1648, -179.4455, -189.0821, -202.8481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-187.5430, -191.2517, -179.4367, -189.1246, -202.9824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-187.5656, -191.3120, -179.4322, -189.1587, -203.0962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-187.5815, -191.3471, -179.4377, -189.1821, -203.1833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-187.5756, -191.3560, -179.4386, -189.2006, -203.2496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-187.5653, -191.3291, -179.4148, -189.1891, -203.2860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-187.4517, -191.2496, -179.3643, -189.1370, -203.2422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-187.3294, -191.1886, -179.2929, -189.0577, -203.1965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-187.1974, -191.1252, -179.1958, -188.9443, -203.1388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-187.1561, -191.1139, -179.1234, -188.8797, -203.1383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-187.0775, -191.0803, -179.0892, -188.8243, -203.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-186.9249, -191.0338, -179.0889, -188.7894, -203.0772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-186.7718, -190.9886, -179.0982, -188.7650, -203.0409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-186.6687, -190.9448, -179.1416, -188.7756, -203.0256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-186.6086, -190.9410, -179.1715, -188.7629, -203.0487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-186.4882, -190.9266, -179.1836, -188.7283, -203.0421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-186.3858, -190.8967, -179.1822, -188.7086, -203.0250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-186.2918, -190.8669, -179.1694, -188.6343, -203.0077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-186.2826, -190.8290, -179.2075, -188.6601, -203.0233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-186.3302, -190.8065, -179.2565, -188.7084, -203.0561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-186.3666, -190.7764, -179.2975, -188.7737, -203.0677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-186.4570, -190.7626, -179.3637, -188.8548, -203.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-186.6012, -190.7962, -179.4482, -188.9574, -203.1636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-186.7757, -190.8378, -179.5364, -189.0864, -203.2628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-186.8505, -190.8382, -179.5783, -189.1495, -203.3073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-186.9307, -190.8562, -179.5988, -189.2221, -203.3537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-186.9736, -190.8699, -179.6041, -189.2768, -203.3825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-186.9992, -190.8539, -179.6072, -189.2875, -203.3967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-187.0263, -190.8454, -179.5644, -189.2845, -203.3903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-187.0311, -190.8331, -179.5072, -189.2430, -203.3551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-186.9940, -190.7861, -179.5126, -189.2566, -203.2998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-186.8915, -190.6927, -179.5126, -189.2385, -203.1918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-186.8752, -190.6381, -179.4904, -189.1963, -203.1489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-186.7674, -190.5382, -179.4511, -189.1027, -203.0574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-186.6370, -190.4414, -179.4391, -189.0165, -202.9729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-186.4804, -190.3572, -179.4279, -188.9421, -202.8819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-186.3331, -190.2733, -179.4169, -188.8508, -202.7921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-186.2057, -190.2068, -179.3903, -188.7478, -202.7281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-186.1173, -190.1621, -179.3817, -188.6822, -202.6920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-186.0079, -190.0943, -179.3638, -188.6146, -202.6238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-186.0004, -190.0732, -179.3549, -188.5865, -202.6145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-185.9735, -190.0460, -179.3546, -188.5637, -202.6049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-185.8865, -189.9696, -179.3755, -188.5386, -202.5467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-185.8238, -189.9413, -179.3814, -188.5403, -202.5276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-185.7338, -189.8962, -179.4121, -188.5591, -202.4895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-185.6892, -189.8639, -179.4118, -188.5489, -202.4887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-185.5888, -189.8259, -179.3578, -188.4945, -202.4599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-185.4873, -189.7668, -179.3088, -188.4491, -202.4234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-185.3872, -189.7248, -179.2714, -188.4274, -202.3993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-185.2453, -189.6635, -179.2566, -188.4172, -202.3442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-185.1292, -189.5993, -179.2389, -188.4111, -202.2897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-185.0803, -189.5664, -179.2131, -188.4314, -202.2814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-185.0018, -189.5342, -179.1736, -188.4317, -202.2614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-184.8455, -189.4533, -179.1283, -188.4070, -202.1713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-184.6844, -189.3501, -179.1208, -188.3740, -202.0765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-184.5775, -189.2644, -179.0808, -188.3011, -202.0173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-184.4724, -189.1955, -179.0692, -188.2481, -201.9721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-184.3377, -189.0911, -179.0210, -188.1563, -201.8703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-184.2105, -189.0168, -178.9853, -188.0886, -201.7971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-184.1173, -188.9731, -178.9395, -188.0142, -201.7559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-184.0391, -188.9190, -178.9132, -187.9555, -201.7227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-184.0167, -188.8952, -178.8315, -187.8538, -201.7215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-183.9858, -188.8787, -178.7465, -187.7282, -201.7142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-183.9897, -188.8691, -178.6855, -187.6123, -201.7239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-183.9548, -188.8343, -178.6147, -187.4888, -201.7001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-183.8650, -188.7934, -178.5334, -187.3306, -201.6724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-183.8209, -188.7360, -178.4497, -187.1801, -201.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-183.7897, -188.6692, -178.3706, -187.0468, -201.6307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-183.7538, -188.5991, -178.2715, -186.8966, -201.6074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-183.7945, -188.5689, -178.2135, -186.8149, -201.6354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-183.8001, -188.5342, -178.1278, -186.7285, -201.6479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-183.8740, -188.5518, -178.0824, -186.6950, -201.6971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-183.9028, -188.5001, -178.0145, -186.6425, -201.6867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-183.9365, -188.4672, -177.9472, -186.6050, -201.6827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-183.9530, -188.4525, -177.9039, -186.5783, -201.6817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-184.0302, -188.4725, -177.8864, -186.6009, -201.7339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-184.0915, -188.5140, -177.8193, -186.5627, -201.7987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-184.1544, -188.5369, -177.7957, -186.5631, -201.8396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-184.1637, -188.5298, -177.7512, -186.5461, -201.8255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-184.1122, -188.4872, -177.6862, -186.5232, -201.7784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-184.1107, -188.4812, -177.6124, -186.5180, -201.7542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-184.0930, -188.4628, -177.5348, -186.5043, -201.7259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-184.0666, -188.4561, -177.4254, -186.4313, -201.6939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-184.0514, -188.4681, -177.3684, -186.4232, -201.6872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-184.0186, -188.5158, -177.3241, -186.4328, -201.6845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-183.9703, -188.5367, -177.2990, -186.4635, -201.6707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-183.9467, -188.5433, -177.2855, -186.4918, -201.6596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-183.8613, -188.5209, -177.2425, -186.4171, -201.6215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-183.7463, -188.4749, -177.2308, -186.3671, -201.5734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-183.6312, -188.4187, -177.1834, -186.3210, -201.5068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-183.5245, -188.3667, -177.2018, -186.3043, -201.4549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-183.4388, -188.3269, -177.1806, -186.2865, -201.4047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-183.3191, -188.2240, -177.2083, -186.3041, -201.3123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-183.2478, -188.1424, -177.1996, -186.2919, -201.2492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-183.2343, -188.0658, -177.1935, -186.3122, -201.1902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-183.2203, -187.9923, -177.1608, -186.3183, -201.1354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-183.2077, -187.9453, -177.1637, -186.3482, -201.1280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-183.1468, -187.8953, -177.1557, -186.3245, -201.1067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-183.1005, -187.8614, -177.1328, -186.2877, -201.1009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-182.9740, -187.7913, -177.0901, -186.1831, -201.0478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-182.8032, -187.6863, -177.0208, -186.0218, -200.9408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-182.6692, -187.6285, -177.0078, -185.9178, -200.9077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-182.5325, -187.5408, -176.9823, -185.8184, -200.8340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-182.4530, -187.5132, -176.9474, -185.7412, -200.8305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-182.4135, -187.4899, -176.9204, -185.6694, -200.8373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-182.4081, -187.4663, -176.9043, -185.6279, -200.8398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-182.4214, -187.4584, -176.9045, -185.6120, -200.8563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-182.4914, -187.4838, -176.8938, -185.6007, -200.9055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-182.5965, -187.5122, -176.8929, -185.6164, -200.9583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-182.6512, -187.5057, -176.9324, -185.6300, -201.0019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-182.6946, -187.4870, -176.9587, -185.6200, -201.0301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-182.7753, -187.4965, -176.9410, -185.5718, -201.0868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-182.7665, -187.4881, -176.9283, -185.4924, -201.1011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-182.7173, -187.4648, -176.9037, -185.3946, -201.0895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-182.5851, -187.4067, -176.8903, -185.2981, -201.0360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-182.4673, -187.3414, -176.8820, -185.2471, -200.9676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-182.3917, -187.3256, -176.8416, -185.1814, -200.9647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-182.2766, -187.2814, -176.8420, -185.1536, -200.9533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-182.1802, -187.2375, -176.8317, -185.1350, -200.9406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-182.0850, -187.2066, -176.8012, -185.1114, -200.9299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-181.9573, -187.1771, -176.8024, -185.1199, -200.9334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-181.8643, -187.1734, -176.7987, -185.1454, -200.9587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-181.7489, -187.1856, -176.7866, -185.1470, -200.9885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-181.6397, -187.1994, -176.7652, -185.1513, -201.0121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-181.5586, -187.2271, -176.7808, -185.2233, -201.0328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-181.4957, -187.2719, -176.8314, -185.3017, -201.0679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-181.4763, -187.3179, -176.8520, -185.3568, -201.1272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-181.4907, -187.3783, -176.8734, -185.4153, -201.2161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-181.4855, -187.4397, -176.8519, -185.4139, -201.2988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-181.4727, -187.4579, -176.8100, -185.3961, -201.3318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-181.3891, -187.4380, -176.7532, -185.3207, -201.3294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-181.3559, -187.4515, -176.7255, -185.2892, -201.3615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-181.2949, -187.4467, -176.6763, -185.2506, -201.3586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-181.2345, -187.4497, -176.6520, -185.2475, -201.3463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-181.2424, -187.4663, -176.6334, -185.2525, -201.3657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-181.2357, -187.4708, -176.5616, -185.2057, -201.3752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-181.2161, -187.4648, -176.4841, -185.1832, -201.3651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-181.1482, -187.4245, -176.4137, -185.1576, -201.3264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-181.1731, -187.4182, -176.3132, -185.1720, -201.3311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-181.2182, -187.4117, -176.2670, -185.2106, -201.3464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-181.1842, -187.3685, -176.2100, -185.1999, -201.3147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-181.2064, -187.3669, -176.1600, -185.2177, -201.3207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-181.2075, -187.3826, -176.0962, -185.2275, -201.3299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-181.2092, -187.3873, -176.0304, -185.2209, -201.3355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-181.2139, -187.3911, -175.9800, -185.2035, -201.3580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-181.2376, -187.3883, -175.9600, -185.2207, -201.3976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-181.2391, -187.3875, -175.8756, -185.1542, -201.4218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-181.2187, -187.3532, -175.8195, -185.0938, -201.4251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-181.2024, -187.3450, -175.7443, -185.0084, -201.4589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-181.1461, -187.3031, -175.6570, -184.8863, -201.4438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-181.0726, -187.2525, -175.6211, -184.8224, -201.4216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-180.9110, -187.1744, -175.5772, -184.7179, -201.3239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-180.7812, -187.1085, -175.5468, -184.6406, -201.2565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-180.7049, -187.0607, -175.5042, -184.5552, -201.2177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-180.6637, -187.0554, -175.4728, -184.4987, -201.2105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-180.6727, -187.0864, -175.4145, -184.4848, -201.2307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-180.6200, -187.0852, -175.3075, -184.4414, -201.2062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-180.5781, -187.0750, -175.2064, -184.4085, -201.1837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-180.4862, -187.0415, -175.1025, -184.3572, -201.1401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-180.3963, -187.0098, -175.0138, -184.3062, -201.0946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-180.3145, -187.0047, -174.9526, -184.3207, -201.0575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-180.1771, -186.9667, -174.8953, -184.2845, -200.9895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-180.1614, -187.0183, -174.8502, -184.2983, -201.0239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-180.1314, -187.0588, -174.7796, -184.2317, -201.0430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-180.1035, -187.1224, -174.7280, -184.1757, -201.1031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-180.1123, -187.2130, -174.7205, -184.1258, -201.2214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-180.0561, -187.2463, -174.7016, -184.0354, -201.2617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-179.9404, -187.2370, -174.6507, -183.8972, -201.2471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-179.8365, -187.2422, -174.5799, -183.7621, -201.2276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-179.7202, -187.2530, -174.5057, -183.6468, -201.1922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-179.5729, -187.2136, -174.4474, -183.5442, -201.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-179.4654, -187.1810, -174.4158, -183.4644, -201.0815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-179.3690, -187.1352, -174.4325, -183.4373, -201.0392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-179.2057, -187.0326, -174.4696, -183.4023, -200.9258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-179.0449, -186.8831, -174.5032, -183.3275, -200.7915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-178.9280, -186.7479, -174.5712, -183.2944, -200.6823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-178.8516, -186.6339, -174.6308, -183.2772, -200.6013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-178.7710, -186.5415, -174.6461, -183.2416, -200.5299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-178.6723, -186.4496, -174.6798, -183.2052, -200.4508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-178.6102, -186.3964, -174.7218, -183.2263, -200.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-178.5447, -186.3722, -174.7437, -183.2348, -200.4028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-178.5116, -186.3720, -174.7790, -183.2557, -200.4156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-178.4578, -186.3586, -174.8055, -183.2409, -200.4024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-178.3788, -186.3379, -174.8720, -183.2489, -200.3787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-178.2582, -186.2702, -174.9125, -183.1984, -200.3054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-178.1304, -186.2005, -174.9382, -183.1085, -200.2272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-178.0355, -186.1613, -174.9478, -183.0365, -200.1832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-177.9549, -186.1516, -174.9233, -182.9177, -200.1639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-177.9456, -186.1780, -174.8679, -182.8107, -200.1930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-177.9867, -186.2202, -174.8174, -182.7456, -200.2539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-178.0258, -186.2597, -174.7530, -182.6772, -200.3202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-178.0800, -186.2917, -174.7042, -182.6445, -200.3852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-178.1204, -186.3465, -174.6198, -182.5689, -200.4497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-178.1500, -186.3535, -174.5807, -182.5195, -200.4947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-178.1165, -186.3348, -174.5244, -182.4302, -200.4967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-178.0785, -186.2988, -174.4913, -182.3775, -200.4795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-178.0416, -186.2699, -174.4370, -182.3144, -200.4571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-178.0117, -186.2360, -174.3209, -182.2030, -200.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-177.9664, -186.2021, -174.1611, -182.0419, -200.3685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-178.0523, -186.2360, -173.9938, -181.9167, -200.3924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-178.1191, -186.2442, -173.8591, -181.7977, -200.3904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-178.1627, -186.2478, -173.6930, -181.6103, -200.3917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-178.1637, -186.2046, -173.5578, -181.4091, -200.3435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-178.1206, -186.1525, -173.4381, -181.2029, -200.2730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-177.9650, -186.0492, -173.2922, -180.9345, -200.1251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-177.8387, -185.9446, -173.1784, -180.7031, -199.9787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-177.6854, -185.8300, -173.0291, -180.4358, -199.8158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-177.5928, -185.7052, -172.8921, -180.2155, -199.6569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-177.5426, -185.6070, -172.7873, -180.0554, -199.5300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-177.5004, -185.4854, -172.7043, -179.9103, -199.3986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-177.4245, -185.3592, -172.6418, -179.7892, -199.2646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-177.3141, -185.2016, -172.6178, -179.6550, -199.1059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-177.2458, -185.0519, -172.6135, -179.5722, -198.9708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-177.2068, -184.9778, -172.5801, -179.4843, -198.8912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-177.1640, -184.8954, -172.5623, -179.3833, -198.8168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-177.0772, -184.7678, -172.5810, -179.2824, -198.7096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-177.0566, -184.6925, -172.5984, -179.2424, -198.6665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-177.0132, -184.6086, -172.6420, -179.2523, -198.5996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-176.9433, -184.5338, -172.7273, -179.2691, -198.5515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-176.9629, -184.5189, -172.7770, -179.3027, -198.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-176.9834, -184.5096, -172.8279, -179.3221, -198.6209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-176.9575, -184.4711, -172.8490, -179.3162, -198.6128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-176.9392, -184.4486, -172.9222, -179.3581, -198.6232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-176.9603, -184.4698, -172.9937, -179.4227, -198.6617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-176.9602, -184.4775, -173.0641, -179.5002, -198.6641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-177.0398, -184.5787, -173.1091, -179.5575, -198.7736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-177.1050, -184.6609, -173.1512, -179.6352, -198.8663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-177.1422, -184.7033, -173.2152, -179.7182, -198.9405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-177.2145, -184.7588, -173.3278, -179.8505, -199.0401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-177.2342, -184.7653, -173.4510, -179.9403, -199.0884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-177.1936, -184.7489, -173.5859, -180.0223, -199.1130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-177.2431, -184.8071, -173.7170, -180.0853, -199.2176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-177.3157, -184.8872, -173.7974, -180.1254, -199.3350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-177.4176, -184.9846, -173.9135, -180.1957, -199.4760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-177.5324, -185.0672, -174.0122, -180.2676, -199.6286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-177.6514, -185.1627, -174.1005, -180.3607, -199.7877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-177.7553, -185.2385, -174.1648, -180.4252, -199.9052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-177.8318, -185.2710, -174.2540, -180.5082, -199.9898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-177.8436, -185.2714, -174.3514, -180.5790, -200.0247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-177.8224, -185.2689, -174.4346, -180.6486, -200.0589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-177.7651, -185.2521, -174.4932, -180.6933, -200.0638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-177.7573, -185.2602, -174.5461, -180.7522, -200.0965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-177.6882, -185.2363, -174.5631, -180.7230, -200.0610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-177.6218, -185.2285, -174.5498, -180.7232, -200.0378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-177.4426, -185.1265, -174.5421, -180.6690, -199.9084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-177.2950, -185.0560, -174.4618, -180.5780, -199.8022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-177.1945, -185.0185, -174.3832, -180.4946, -199.7329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-176.9915, -184.9202, -174.3498, -180.4142, -199.5781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-176.8318, -184.8314, -174.2987, -180.3529, -199.4407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-176.8010, -184.7946, -174.2351, -180.3244, -199.3844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-176.8348, -184.7925, -174.1661, -180.3470, -199.3589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-176.8702, -184.7949, -174.0723, -180.3472, -199.3369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-176.8713, -184.7666, -174.0010, -180.3401, -199.2945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-176.8889, -184.7535, -173.9342, -180.3269, -199.2861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-176.9806, -184.8179, -173.8568, -180.3244, -199.3587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-177.0219, -184.8533, -173.7914, -180.2911, -199.3859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-177.0540, -184.8544, -173.7490, -180.2449, -199.3963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-177.0924, -184.8537, -173.6643, -180.1359, -199.4153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-177.1060, -184.8296, -173.5973, -180.0577, -199.4313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-177.0340, -184.7819, -173.5440, -179.9325, -199.3933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-176.9550, -184.7263, -173.5127, -179.8118, -199.3330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-176.8822, -184.6609, -173.4216, -179.6284, -199.2542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-176.8245, -184.5896, -173.3629, -179.4993, -199.1765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-176.7195, -184.4396, -173.3766, -179.4275, -199.0219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-176.6205, -184.2805, -173.3697, -179.3668, -198.8794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-176.5369, -184.1649, -173.3863, -179.3218, -198.8003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-176.4838, -184.0716, -173.3924, -179.2927, -198.7359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-176.4376, -183.9909, -173.4098, -179.2886, -198.6926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-176.3381, -183.9234, -173.3892, -179.2487, -198.6341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-176.2185, -183.8247, -173.3314, -179.1829, -198.5389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-176.0793, -183.6945, -173.3221, -179.1296, -198.4171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-175.9299, -183.5534, -173.3155, -179.0872, -198.2714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-175.7436, -183.4117, -173.2679, -178.9937, -198.1085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-175.5461, -183.2742, -173.1759, -178.8208, -197.9469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-175.3758, -183.1691, -173.0765, -178.6496, -197.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-175.1780, -183.0530, -172.9318, -178.3986, -197.6934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-174.9969, -182.9715, -172.8436, -178.2109, -197.6248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-174.8403, -182.8853, -172.7697, -178.0657, -197.5505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-174.6942, -182.7909, -172.7088, -177.9173, -197.4777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-174.5209, -182.6665, -172.6721, -177.7943, -197.3840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-174.3453, -182.5164, -172.6437, -177.6712, -197.2712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-174.1413, -182.3362, -172.6266, -177.4969, -197.1213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-173.9946, -182.1936, -172.5752, -177.3174, -197.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-173.8870, -182.0803, -172.5056, -177.1413, -196.9473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-173.8139, -181.9970, -172.4800, -177.0331, -196.9235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-173.7261, -181.9437, -172.4546, -176.9093, -196.9192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-173.6389, -181.8847, -172.4701, -176.8304, -196.9000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-173.6245, -181.8610, -172.4107, -176.7490, -196.8929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-173.7045, -181.8770, -172.3521, -176.7308, -196.9288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-173.8125, -181.9213, -172.3107, -176.7388, -197.0014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-173.9322, -181.9934, -172.3095, -176.7852, -197.1009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-174.0345, -182.0606, -172.3400, -176.8904, -197.2051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-174.1904, -182.1302, -172.4538, -177.1156, -197.3412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-174.3298, -182.1915, -172.6034, -177.3566, -197.4853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-174.4718, -182.2674, -172.7598, -177.6080, -197.6371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-174.6682, -182.3732, -172.9336, -177.9306, -197.8378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-174.8607, -182.4765, -173.0717, -178.2163, -198.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-175.0167, -182.5222, -173.1495, -178.4131, -198.1591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-175.1367, -182.5257, -173.1675, -178.5360, -198.2381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-175.2843, -182.5844, -173.1928, -178.6851, -198.3774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-175.3625, -182.5795, -173.2227, -178.8037, -198.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-175.3549, -182.5240, -173.2645, -178.8785, -198.4177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-175.3310, -182.4472, -173.2943, -178.9333, -198.3557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-175.2911, -182.3881, -173.3133, -178.9648, -198.2937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-175.2184, -182.3214, -173.3035, -178.9665, -198.1912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-175.2212, -182.2896, -173.3029, -178.9962, -198.1470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-175.1811, -182.2528, -173.2876, -179.0115, -198.0864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-175.0606, -182.1614, -173.2646, -178.9875, -197.9502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-175.0053, -182.1335, -173.2123, -179.0179, -197.9116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-174.9544, -182.1148, -173.1311, -179.0268, -197.8586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-174.9307, -182.1220, -173.0747, -179.0302, -197.8578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-174.8357, -182.0985, -172.9460, -178.9156, -197.8080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-174.6341, -181.9901, -172.7698, -178.6806, -197.6636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-174.4672, -181.8989, -172.6099, -178.4731, -197.5326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-174.3411, -181.8296, -172.4451, -178.3012, -197.4227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-174.2667, -181.7981, -172.3403, -178.2290, -197.4061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-174.1611, -181.7568, -172.2360, -178.1273, -197.3648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-174.0880, -181.7234, -172.1286, -178.0292, -197.3331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-174.0354, -181.7135, -171.9870, -177.8671, -197.3301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-174.0248, -181.7080, -171.8610, -177.7505, -197.3642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-173.9627, -181.6674, -171.7618, -177.6150, -197.3535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-173.8195, -181.5912, -171.6262, -177.4151, -197.2877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-173.6917, -181.5349, -171.4856, -177.2439, -197.2333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-173.5737, -181.4829, -171.3447, -177.0722, -197.1794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-173.4467, -181.4224, -171.2104, -176.9190, -197.1185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-173.4016, -181.4448, -171.1482, -176.9239, -197.1663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-173.3320, -181.4338, -171.0226, -176.8176, -197.1539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-173.2893, -181.4320, -170.8555, -176.6414, -197.1519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-173.2964, -181.4587, -170.7562, -176.5622, -197.2292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-173.3114, -181.4692, -170.6487, -176.4640, -197.2830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-173.2942, -181.4592, -170.6133, -176.4556, -197.3242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-173.2557, -181.4449, -170.5813, -176.4570, -197.3569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-173.2223, -181.4248, -170.6326, -176.5324, -197.4000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-173.2359, -181.4445, -170.6971, -176.6466, -197.4886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-173.2047, -181.4514, -170.6761, -176.6234, -197.5524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-173.1594, -181.4721, -170.6561, -176.6395, -197.6161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-173.1335, -181.5029, -170.6594, -176.6993, -197.6901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-173.0809, -181.5138, -170.6706, -176.7413, -197.7382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-173.0447, -181.4618, -170.6809, -176.7700, -197.7441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-172.9988, -181.4259, -170.6982, -176.7848, -197.7799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-172.9572, -181.3926, -170.7759, -176.8478, -197.8296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-172.9103, -181.3662, -170.7815, -176.8769, -197.8577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-172.8553, -181.2994, -170.7555, -176.8617, -197.8526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-172.8235, -181.2628, -170.7333, -176.8560, -197.8656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-172.7982, -181.2163, -170.7123, -176.8041, -197.8637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-172.7850, -181.1779, -170.6849, -176.7582, -197.8545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-172.8180, -181.1814, -170.6353, -176.7185, -197.9076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-172.8454, -181.2075, -170.5500, -176.6226, -197.9826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-172.8986, -181.2378, -170.4937, -176.5499, -198.0664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-173.0083, -181.2966, -170.4288, -176.5251, -198.1726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-173.1468, -181.3569, -170.3970, -176.5307, -198.2996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-173.2252, -181.3634, -170.3315, -176.4580, -198.3708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-173.2401, -181.3175, -170.2524, -176.3205, -198.3670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-173.2002, -181.2421, -170.2300, -176.2136, -198.3313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-173.1460, -181.1481, -170.2116, -176.0981, -198.2666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-173.1183, -181.0502, -170.1885, -175.9958, -198.2142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-173.0603, -180.9434, -170.1372, -175.8786, -198.1435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-173.0192, -180.8689, -170.0743, -175.7641, -198.0880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-173.0053, -180.8052, -170.0460, -175.6918, -198.0550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-172.9828, -180.7336, -169.9896, -175.6035, -197.9851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-172.9115, -180.6319, -169.9479, -175.5217, -197.8628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-172.8762, -180.5581, -169.9280, -175.4586, -197.7661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-172.8054, -180.4617, -169.9003, -175.3783, -197.6400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-172.6458, -180.3013, -169.8926, -175.2790, -197.4441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-172.4663, -180.1410, -169.9055, -175.1845, -197.2687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-172.2981, -179.9742, -169.8878, -175.0330, -197.0708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-172.1141, -179.8226, -169.8783, -174.8948, -196.8804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-171.9119, -179.6197, -169.9173, -174.7668, -196.6308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-171.7251, -179.4046, -169.9207, -174.6001, -196.3689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-171.5252, -179.2097, -169.8780, -174.3956, -196.1132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-171.3490, -179.0382, -169.8124, -174.1819, -195.8941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-171.2171, -178.8992, -169.7593, -174.0445, -195.7319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-171.1639, -178.8424, -169.7548, -174.0286, -195.6657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-171.1285, -178.8229, -169.7419, -174.0487, -195.6390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-171.1511, -178.8388, -169.7242, -174.0808, -195.6504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-171.1735, -178.8622, -169.7058, -174.1013, -195.6576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-171.1837, -178.8582, -169.7258, -174.1532, -195.6685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-171.2256, -178.8918, -169.7367, -174.2336, -195.7339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-171.2540, -178.9066, -169.7618, -174.2645, -195.7922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-171.2534, -178.9033, -169.8277, -174.3133, -195.8547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-171.3163, -178.9166, -169.8955, -174.3725, -195.9615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-171.3691, -178.9687, -169.9206, -174.4047, -196.0820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-171.4481, -179.0289, -169.9190, -174.4060, -196.2081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-171.4966, -179.0534, -169.9704, -174.4376, -196.2981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-171.6077, -179.1557, -170.0235, -174.5184, -196.4776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-171.6977, -179.2369, -170.0791, -174.5936, -196.6170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-171.7379, -179.2633, -170.1342, -174.6219, -196.6962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-171.7651, -179.2976, -170.2156, -174.6628, -196.7865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-171.7612, -179.2955, -170.2567, -174.6608, -196.8347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-171.7611, -179.3000, -170.2503, -174.5721, -196.8837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-171.6988, -179.2563, -170.2039, -174.4169, -196.8721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-171.6503, -179.2123, -170.1416, -174.2717, -196.8376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-171.7099, -179.2431, -170.0522, -174.2009, -196.8989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-171.7352, -179.2437, -169.9876, -174.1140, -196.9332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-171.7688, -179.2516, -169.9497, -174.0066, -196.9881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-171.7695, -179.2075, -169.9283, -173.8573, -196.9801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-171.7969, -179.1721, -169.8700, -173.7268, -196.9996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-171.7489, -179.0766, -169.8324, -173.5442, -196.9605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-171.7020, -178.9950, -169.8483, -173.4322, -196.9372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-171.6885, -178.9469, -169.8764, -173.3910, -196.9562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-171.6967, -178.9066, -169.8837, -173.3550, -196.9923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-171.6721, -178.8406, -169.8889, -173.2746, -196.9999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-171.6279, -178.7734, -169.8555, -173.1731, -196.9698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-171.5428, -178.6898, -169.8501, -173.0924, -196.9336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-171.4922, -178.6441, -169.8400, -173.0496, -196.9309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-171.4641, -178.6265, -169.8468, -173.0064, -196.9670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-171.4317, -178.6085, -169.8595, -172.9912, -197.0169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-171.3675, -178.5964, -169.8765, -172.9738, -197.0660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-171.3019, -178.5494, -169.9097, -172.9856, -197.0767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-171.3459, -178.5412, -169.9825, -173.1163, -197.1546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-171.3789, -178.5175, -170.0053, -173.2037, -197.1883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-171.3827, -178.4651, -170.0137, -173.2412, -197.1900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-171.4114, -178.4340, -170.0067, -173.2698, -197.2222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-171.3616, -178.3575, -170.0159, -173.2753, -197.1863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-171.4122, -178.3807, -169.9975, -173.3424, -197.2511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-171.5122, -178.4598, -169.9501, -173.4546, -197.3614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-171.5982, -178.5087, -169.9530, -173.5720, -197.4335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-171.7161, -178.5684, -169.9342, -173.6862, -197.5391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-171.8039, -178.6093, -169.8700, -173.7291, -197.6261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-171.9312, -178.6520, -169.8253, -173.8204, -197.7420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-172.1144, -178.7311, -169.7179, -173.8684, -197.8825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-172.3314, -178.8438, -169.6127, -173.9301, -198.0575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-172.4949, -178.9422, -169.4507, -173.9062, -198.1952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-172.6360, -179.0080, -169.3467, -173.8965, -198.3044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-172.8269, -179.0950, -169.2430, -173.8842, -198.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-172.9682, -179.1126, -169.1729, -173.8488, -198.5600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-173.1030, -179.1498, -169.1084, -173.8399, -198.6751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-173.1974, -179.1571, -169.0676, -173.8191, -198.7364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-173.1952, -179.1172, -168.9946, -173.7362, -198.7296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-173.1983, -179.0749, -168.9281, -173.6718, -198.7134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-173.1188, -178.9689, -168.8811, -173.5650, -198.6396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-173.0211, -178.8418, -168.8758, -173.4871, -198.5524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-172.9136, -178.7332, -168.8844, -173.4157, -198.4862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-172.8464, -178.6860, -168.8762, -173.3748, -198.5004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-172.7401, -178.6025, -168.8113, -173.2604, -198.4457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-172.5892, -178.4765, -168.7651, -173.1088, -198.3485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-172.4515, -178.3552, -168.7463, -173.0024, -198.2683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-172.3271, -178.2499, -168.6977, -172.9008, -198.1895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-172.1955, -178.1258, -168.6680, -172.8214, -198.0960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-172.1188, -178.0384, -168.6476, -172.7952, -198.0703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-172.0738, -177.9596, -168.6700, -172.8267, -198.0854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-172.0148, -177.8552, -168.7085, -172.8621, -198.0551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-171.9461, -177.7342, -168.7426, -172.8690, -197.9848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-171.8491, -177.5703, -168.7526, -172.8490, -197.8486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-171.7293, -177.4146, -168.7526, -172.7903, -197.7090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-171.6579, -177.2927, -168.7708, -172.7676, -197.6053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-171.5922, -177.1782, -168.7847, -172.7434, -197.5013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-171.4737, -177.0298, -168.7725, -172.6178, -197.3651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-171.3477, -176.8976, -168.7607, -172.4547, -197.2324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-171.2409, -176.7811, -168.6905, -172.2747, -197.0899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-171.1176, -176.6424, -168.6619, -172.1121, -196.9449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-170.9671, -176.4694, -168.6831, -171.9866, -196.7731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-170.8214, -176.3201, -168.7075, -171.8811, -196.6327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-170.7006, -176.1839, -168.7206, -171.7818, -196.4825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-170.6333, -176.0729, -168.6953, -171.6840, -196.3639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-170.5281, -175.9331, -168.6835, -171.5752, -196.2167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-170.3976, -175.8101, -168.6693, -171.4688, -196.0896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-170.3775, -175.7701, -168.6124, -171.4326, -196.0569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-170.3550, -175.7287, -168.5186, -171.3770, -196.0129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-170.3656, -175.7096, -168.4151, -171.3075, -196.0222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-170.3842, -175.6631, -168.3364, -171.2054, -196.0064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-170.3892, -175.6300, -168.2857, -171.1358, -195.9949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-170.4376, -175.6371, -168.2456, -171.1135, -196.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-170.4624, -175.6504, -168.2045, -171.1142, -196.0658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-170.4213, -175.6152, -168.1366, -171.0087, -196.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-170.3375, -175.5537, -168.0570, -170.8641, -195.9581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-170.2513, -175.4721, -167.9613, -170.7019, -195.8887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-170.2372, -175.4558, -167.8453, -170.5869, -195.8936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-170.1892, -175.4119, -167.7624, -170.4476, -195.8905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-170.1605, -175.3929, -167.6791, -170.3432, -195.9072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-170.1235, -175.3663, -167.6251, -170.2311, -195.9251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-170.0922, -175.3566, -167.5876, -170.1397, -195.9449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-170.0303, -175.3074, -167.5820, -170.0396, -195.9160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-169.9684, -175.2682, -167.5998, -169.9700, -195.8839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-169.9022, -175.2650, -167.5943, -169.9171, -195.8550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-169.7745, -175.2187, -167.6374, -169.8244, -195.7554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-169.6500, -175.1889, -167.7026, -169.7708, -195.6949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-169.5282, -175.1442, -167.7583, -169.7289, -195.6243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-169.4214, -175.1359, -167.7696, -169.7271, -195.5829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-169.3270, -175.1497, -167.7687, -169.7899, -195.5569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-169.2111, -175.1460, -167.8039, -169.8355, -195.5149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-169.1145, -175.1570, -167.8065, -169.8454, -195.5110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-168.9621, -175.0961, -167.8546, -169.8191, -195.4468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-168.8252, -175.0385, -167.9143, -169.7881, -195.3835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-168.7544, -175.0342, -167.9133, -169.7870, -195.3655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-168.6555, -175.0053, -167.9249, -169.7741, -195.3163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-168.5287, -174.9708, -167.9218, -169.7550, -195.2515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-168.4846, -174.9710, -167.9057, -169.7876, -195.2457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-168.4615, -174.9573, -167.8535, -169.8054, -195.2303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-168.4663, -174.9757, -167.7886, -169.8650, -195.2569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-168.4711, -174.9965, -167.7386, -169.9395, -195.2953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-168.5380, -175.0531, -167.6569, -170.0534, -195.3891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-168.6618, -175.1427, -167.5533, -170.2279, -195.5324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-168.7816, -175.2495, -167.4583, -170.4320, -195.7026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-168.9328, -175.3646, -167.3653, -170.6423, -195.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-169.0382, -175.4596, -167.2902, -170.8140, -196.0854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-169.1286, -175.5319, -167.2141, -170.9421, -196.2297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-169.2384, -175.5755, -167.1417, -171.0684, -196.3654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-169.3037, -175.5819, -167.0539, -171.1329, -196.4700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-169.3276, -175.5690, -167.0077, -171.1784, -196.5576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-169.3589, -175.5443, -166.9439, -171.2290, -196.6277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-169.3808, -175.5141, -166.8997, -171.3023, -196.6877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-169.4082, -175.4862, -166.8192, -171.3324, -196.7518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-169.4515, -175.4734, -166.7168, -171.3518, -196.8379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-169.4550, -175.4407, -166.6102, -171.3237, -196.8926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-169.4764, -175.4153, -166.5581, -171.3461, -196.9659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-169.4808, -175.4040, -166.5000, -171.3350, -197.0311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-169.4403, -175.3461, -166.4821, -171.2733, -197.0475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-169.4056, -175.2903, -166.4405, -171.1858, -197.0615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-169.3785, -175.2596, -166.3515, -171.0580, -197.0750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-169.2994, -175.1899, -166.2922, -170.9034, -197.0436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-169.2663, -175.1593, -166.2361, -170.7980, -197.0678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-169.2192, -175.1333, -166.2092, -170.6939, -197.0760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-169.1411, -175.0581, -166.2261, -170.5572, -197.0186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-169.1265, -175.0138, -166.2045, -170.4359, -196.9888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-169.0761, -174.9181, -166.2054, -170.3047, -196.9277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-169.0498, -174.8553, -166.1864, -170.2199, -196.8845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-169.0106, -174.7695, -166.1328, -170.0867, -196.8033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-169.0236, -174.7177, -166.0386, -169.9744, -196.7959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-169.0249, -174.6651, -165.9741, -169.8339, -196.7791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-169.0128, -174.5994, -166.0023, -169.7686, -196.7611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-168.9824, -174.5289, -166.0062, -169.6778, -196.7172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-168.9273, -174.4578, -165.9684, -169.5410, -196.6489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-168.8652, -174.3701, -165.8954, -169.3688, -196.5636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-168.8305, -174.3217, -165.7695, -169.1939, -196.4932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-168.8607, -174.2980, -165.5732, -169.0493, -196.4579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-168.9378, -174.2908, -165.3332, -168.9158, -196.4431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-168.9783, -174.2608, -165.1224, -168.7890, -196.4406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-169.0464, -174.2695, -164.9087, -168.6821, -196.4772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-169.0280, -174.2368, -164.7274, -168.5309, -196.4480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-169.0444, -174.2240, -164.5828, -168.4373, -196.4355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-169.0267, -174.1896, -164.4292, -168.3367, -196.3956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-169.0454, -174.1793, -164.3083, -168.2795, -196.3967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-168.9605, -174.0953, -164.2126, -168.1409, -196.3204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-168.8976, -174.0444, -164.1100, -168.0841, -196.2816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-168.8599, -174.0170, -164.0100, -168.0452, -196.2911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-168.7945, -173.9649, -163.9763, -168.0176, -196.2870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-168.7725, -173.9753, -163.9255, -168.0473, -196.3498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-168.6815, -173.8963, -163.8851, -168.0050, -196.3171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-168.6118, -173.8356, -163.8943, -168.0156, -196.3066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-168.5347, -173.7610, -163.8922, -167.9844, -196.2613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-168.5149, -173.7385, -163.8982, -168.0051, -196.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-168.4917, -173.7062, -163.8608, -167.9978, -196.3088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-168.4527, -173.6758, -163.8014, -167.9638, -196.3348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-168.4131, -173.6559, -163.7352, -167.9466, -196.3433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-168.3510, -173.5951, -163.7003, -167.9251, -196.3279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-168.2929, -173.5390, -163.7173, -167.9732, -196.3411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-168.2547, -173.4841, -163.7115, -168.0454, -196.3545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-168.2390, -173.4245, -163.7225, -168.0910, -196.3610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-168.1368, -173.2876, -163.7527, -168.0334, -196.2581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-167.9690, -173.1008, -163.8358, -167.9417, -196.0876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-167.8395, -172.9655, -163.8867, -167.9131, -195.9739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-167.7104, -172.8070, -163.9423, -167.8706, -195.8422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-167.6567, -172.6968, -163.9743, -167.8713, -195.7733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-167.5539, -172.5593, -164.0488, -167.8460, -195.6571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-167.4246, -172.3762, -164.1090, -167.7188, -195.4757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-167.3742, -172.2801, -164.1541, -167.6909, -195.4042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-167.3500, -172.2213, -164.2319, -167.7022, -195.3653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-167.2799, -172.1297, -164.3583, -167.6946, -195.2721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-167.1918, -172.0169, -164.5081, -167.6686, -195.1591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-167.1374, -171.9255, -164.6189, -167.6158, -195.0725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-167.0365, -171.8146, -164.7239, -167.5295, -194.9505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-166.9607, -171.7043, -164.7935, -167.4176, -194.8537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-166.9048, -171.5919, -164.8550, -167.3227, -194.7727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-166.8550, -171.4714, -164.9071, -167.2121, -194.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-166.7567, -171.3322, -164.9706, -167.1112, -194.6018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-166.6630, -171.2006, -165.0144, -167.0043, -194.5079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-166.6910, -171.1520, -165.0491, -167.0303, -194.5221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-166.6864, -171.1082, -165.1114, -167.0866, -194.5471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-166.6990, -171.1076, -165.1198, -167.1598, -194.6104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-166.7336, -171.1136, -165.0973, -167.2327, -194.6782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-166.7364, -171.1103, -165.0808, -167.2627, -194.7297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-166.7459, -171.1337, -165.0346, -167.2992, -194.7756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-166.7679, -171.1624, -164.9586, -167.3322, -194.8289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-166.8367, -171.2078, -164.8276, -167.3792, -194.8967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-166.9051, -171.2755, -164.7287, -167.4229, -194.9717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-166.9839, -171.3616, -164.6051, -167.4578, -195.0571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-167.0238, -171.4322, -164.5751, -167.5342, -195.1458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-167.0122, -171.4636, -164.5368, -167.5470, -195.1919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-167.0107, -171.4913, -164.5092, -167.5658, -195.2466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-166.9456, -171.4673, -164.5079, -167.5396, -195.2262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-166.9347, -171.4596, -164.5666, -167.6163, -195.2571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-166.9560, -171.4471, -164.6229, -167.7122, -195.3095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-166.9146, -171.4042, -164.6811, -167.7828, -195.3161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-166.9043, -171.4044, -164.7099, -167.8615, -195.3631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-166.8314, -171.3623, -164.7537, -167.8843, -195.3649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-166.7721, -171.3244, -164.7361, -167.8886, -195.3402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-166.7819, -171.3244, -164.6812, -167.9482, -195.3878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-166.7345, -171.2954, -164.5975, -167.9080, -195.3611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-166.6863, -171.2442, -164.5798, -167.8855, -195.3336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-166.5568, -171.1294, -164.5329, -167.7499, -195.2098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-166.4853, -171.0479, -164.4522, -167.6541, -195.1243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-166.3928, -170.9657, -164.3860, -167.5709, -195.0346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-166.3232, -170.9013, -164.3433, -167.5007, -194.9607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-166.2541, -170.8479, -164.2982, -167.4203, -194.9017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-166.1955, -170.7931, -164.2738, -167.3617, -194.8639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-166.1146, -170.7450, -164.2202, -167.2790, -194.8394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-166.0500, -170.6932, -164.1281, -167.1882, -194.8132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-165.9435, -170.5955, -164.0733, -167.0749, -194.7413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-165.8803, -170.5287, -164.0199, -166.9902, -194.7061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-165.8683, -170.4769, -163.9476, -166.9200, -194.6913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-165.9052, -170.4743, -163.8901, -166.9336, -194.7319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-165.9090, -170.4771, -163.8043, -166.9045, -194.7676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-165.9348, -170.5153, -163.6627, -166.8810, -194.8187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-165.9545, -170.5683, -163.5387, -166.8582, -194.8814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-165.9900, -170.6276, -163.3612, -166.8457, -194.9520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-166.0186, -170.6773, -163.1440, -166.7817, -195.0165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-166.0532, -170.7290, -162.9196, -166.7303, -195.0770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-166.1038, -170.7985, -162.6301, -166.6741, -195.1290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-166.1086, -170.8219, -162.3689, -166.5901, -195.1214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-166.1253, -170.8360, -162.0922, -166.4874, -195.1338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-166.0666, -170.7851, -161.8316, -166.3294, -195.0833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-165.9979, -170.7516, -161.5696, -166.1908, -195.0395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-165.9355, -170.7212, -161.3371, -166.0822, -194.9882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-165.9234, -170.7244, -161.0629, -166.0058, -195.0017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-165.9404, -170.7239, -160.7984, -165.9774, -195.0645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-165.9361, -170.7462, -160.5710, -165.9443, -195.1433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-165.9650, -170.7911, -160.3579, -165.9596, -195.2765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-166.0025, -170.8528, -160.1830, -165.9708, -195.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-166.0046, -170.8776, -160.0257, -165.9408, -195.5642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-165.9000, -170.8126, -159.9475, -165.8445, -195.5448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-165.7950, -170.7441, -159.9358, -165.7721, -195.5034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-165.6940, -170.6504, -159.9728, -165.6907, -195.4350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-165.5432, -170.4917, -160.0615, -165.5518, -195.3069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-165.3334, -170.2554, -160.2251, -165.3721, -195.1074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-165.1339, -170.0587, -160.3417, -165.2064, -194.9359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-164.9813, -169.9196, -160.4084, -165.0584, -194.8084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-164.8309, -169.7897, -160.4930, -164.9279, -194.6712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-164.6442, -169.6309, -160.5950, -164.7676, -194.4903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-164.4861, -169.4760, -160.6933, -164.6305, -194.3319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-164.2797, -169.3177, -160.8297, -164.4903, -194.1581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-164.1194, -169.1841, -160.9615, -164.3963, -194.0299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-163.9404, -169.0489, -161.0569, -164.2925, -193.8986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-163.8069, -168.9445, -161.1042, -164.2395, -193.8087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-163.7101, -168.8590, -161.1529, -164.1831, -193.6943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-163.5601, -168.7335, -161.2206, -164.0974, -193.5226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-163.4485, -168.6555, -161.2770, -164.0607, -193.4190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-163.3643, -168.6057, -161.3118, -164.0418, -193.3876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-163.2452, -168.5084, -161.3655, -163.9835, -193.3283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-163.1124, -168.3988, -161.3769, -163.9113, -193.2426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-162.9377, -168.2835, -161.3542, -163.7732, -193.1338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-162.8469, -168.2222, -161.2772, -163.6708, -193.0828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-162.7785, -168.1723, -161.1681, -163.6040, -193.0510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-162.7426, -168.1478, -161.0861, -163.5934, -193.0900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-162.7408, -168.1337, -160.9853, -163.5978, -193.1499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-162.7251, -168.0989, -160.8598, -163.5490, -193.1860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-162.6744, -168.0604, -160.7514, -163.4696, -193.2246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-162.6642, -168.0399, -160.6109, -163.3938, -193.2854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-162.6521, -168.0434, -160.4423, -163.2985, -193.3486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-162.6383, -168.0521, -160.3198, -163.2297, -193.4133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-162.6827, -168.0805, -160.2001, -163.1717, -193.5145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-162.7029, -168.0964, -160.0470, -163.0650, -193.5892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-162.7107, -168.1344, -159.8903, -162.9785, -193.6810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-162.6787, -168.1391, -159.7660, -162.8812, -193.7514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-162.6860, -168.1430, -159.6269, -162.8137, -193.8351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-162.6983, -168.1445, -159.5170, -162.7605, -193.9250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-162.6328, -168.0772, -159.4673, -162.6195, -193.9190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-162.5601, -168.0355, -159.4120, -162.4948, -193.8779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-162.5092, -168.0092, -159.3178, -162.3469, -193.8538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-162.4524, -167.9468, -159.2905, -162.1880, -193.8055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-162.3622, -167.8576, -159.2720, -162.0172, -193.7486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-162.2264, -167.7271, -159.2978, -161.8114, -193.6319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-162.1399, -167.6501, -159.3089, -161.6772, -193.5498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-162.0361, -167.5584, -159.3283, -161.5410, -193.4729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-161.9371, -167.4560, -159.3500, -161.3937, -193.3846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-161.8547, -167.3603, -159.3714, -161.2772, -193.2779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-161.7290, -167.2573, -159.4639, -161.2131, -193.1655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-161.5527, -167.1330, -159.5784, -161.1072, -193.0276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-161.3812, -167.0175, -159.6709, -161.0194, -192.9059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-161.2414, -166.9294, -159.7458, -160.9777, -192.8017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-161.1568, -166.8604, -159.7743, -160.9318, -192.7770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-161.1209, -166.8207, -159.7736, -160.9150, -192.7861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-161.0933, -166.7760, -159.7636, -160.8875, -192.7857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-161.1016, -166.7469, -159.7387, -160.8761, -192.8070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-161.1255, -166.7166, -159.6893, -160.8773, -192.8154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-161.1370, -166.6991, -159.6870, -160.9570, -192.8144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-161.1051, -166.6731, -159.7091, -161.0096, -192.7662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-161.1013, -166.6927, -159.7085, -161.0996, -192.7833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-161.1734, -166.7731, -159.6783, -161.2703, -192.8925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-161.1643, -166.7943, -159.7207, -161.3724, -192.9571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-161.1463, -166.8103, -159.7525, -161.4649, -192.9928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-161.1521, -166.8217, -159.7879, -161.5582, -193.0422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-161.2209, -166.8876, -159.7689, -161.6995, -193.1470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-161.3133, -166.9752, -159.6829, -161.7814, -193.2830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-161.4276, -167.0661, -159.5893, -161.8893, -193.4448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-161.6121, -167.1892, -159.3881, -162.0123, -193.6211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-161.7614, -167.2982, -159.2149, -162.1209, -193.8111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-161.8752, -167.3752, -159.0589, -162.1984, -193.9499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-161.9462, -167.3815, -158.8876, -162.1922, -194.0041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-162.0234, -167.3986, -158.6804, -162.1787, -194.0537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-162.1226, -167.4163, -158.3724, -162.0959, -194.0954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-162.2471, -167.4336, -158.0441, -162.0287, -194.1477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-162.4040, -167.4742, -157.7222, -161.9880, -194.2209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-162.5326, -167.5152, -157.4213, -161.9474, -194.3111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-162.6182, -167.5191, -157.1433, -161.8498, -194.3318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-162.6948, -167.4989, -156.8493, -161.7226, -194.3248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-162.6920, -167.4530, -156.5781, -161.5348, -194.2603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-162.6478, -167.3872, -156.3662, -161.3449, -194.1644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-162.6493, -167.3689, -156.1397, -161.2061, -194.1505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-162.6229, -167.3395, -155.9029, -161.0624, -194.1278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-162.5650, -167.2946, -155.6679, -160.8975, -194.0592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-162.4539, -167.2153, -155.4432, -160.6481, -193.9401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-162.3380, -167.1387, -155.2579, -160.4078, -193.8096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-162.2198, -167.0598, -155.0782, -160.1639, -193.6580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-162.0850, -166.9801, -154.9150, -159.9188, -193.5210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-161.9409, -166.8931, -154.7798, -159.6828, -193.3647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-161.7718, -166.7651, -154.7246, -159.4487, -193.1494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-161.6405, -166.6680, -154.6887, -159.2845, -192.9956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-161.4594, -166.5249, -154.6721, -159.0796, -192.7783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-161.2642, -166.3810, -154.6811, -158.8814, -192.5503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-161.0634, -166.2228, -154.6968, -158.6991, -192.3421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-160.8403, -166.0303, -154.7273, -158.4527, -192.1039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-160.6070, -165.8496, -154.7440, -158.1957, -191.8923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-160.4263, -165.6873, -154.7862, -158.0053, -191.7152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-160.2537, -165.5057, -154.8281, -157.7935, -191.5418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-160.0971, -165.3423, -154.8774, -157.6199, -191.4018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-159.8881, -165.1472, -154.9498, -157.4326, -191.2263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-159.6702, -164.9472, -155.0449, -157.2851, -191.0622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-159.4857, -164.8034, -155.1131, -157.1993, -190.9641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-159.2832, -164.6710, -155.2010, -157.1063, -190.8618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-159.0965, -164.5366, -155.3094, -157.0612, -190.7609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-158.9548, -164.4299, -155.4302, -157.0413, -190.6962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-158.8093, -164.3226, -155.5279, -157.0023, -190.6304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-158.6833, -164.2625, -155.6036, -156.9839, -190.5858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-158.5114, -164.1682, -155.7002, -156.9564, -190.5027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-158.3400, -164.0845, -155.7809, -156.9520, -190.4187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-158.2250, -164.0352, -155.7801, -156.9786, -190.3796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-158.1387, -163.9971, -155.7314, -157.0010, -190.3885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-158.0595, -163.9799, -155.6677, -157.0402, -190.4169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-157.9869, -163.9793, -155.5977, -157.0852, -190.4490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-157.9066, -163.9693, -155.5398, -157.1048, -190.4608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-157.8556, -163.9644, -155.4330, -157.0731, -190.4635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-157.8200, -163.9556, -155.3111, -157.0276, -190.4613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-157.7488, -163.9272, -155.1866, -156.9385, -190.4300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-157.7218, -163.9201, -155.0534, -156.8535, -190.4479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-157.7004, -163.9018, -154.8966, -156.7192, -190.4523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-157.6440, -163.8681, -154.8294, -156.6298, -190.4397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-157.5322, -163.7770, -154.8057, -156.5170, -190.3532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-157.4908, -163.7352, -154.7304, -156.4338, -190.3391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-157.4355, -163.6812, -154.7095, -156.3698, -190.3295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-157.3544, -163.6135, -154.6806, -156.2889, -190.2888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-157.2576, -163.5552, -154.6668, -156.2256, -190.2542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-157.1658, -163.5112, -154.6114, -156.1309, -190.2173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-157.1388, -163.4886, -154.5701, -156.1058, -190.2000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-157.1153, -163.4628, -154.5647, -156.1238, -190.1906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-157.0685, -163.4286, -154.5159, -156.0714, -190.1800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-157.0303, -163.3679, -154.4802, -156.0269, -190.1541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-157.0145, -163.3081, -154.4135, -155.9557, -190.1193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-157.0120, -163.2697, -154.3477, -155.8918, -190.1057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-156.9615, -163.1717, -154.3216, -155.7794, -190.0193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-156.9969, -163.1673, -154.2095, -155.7008, -190.0339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-157.1081, -163.2287, -154.0729, -155.7006, -190.1322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-157.2153, -163.3072, -153.9298, -155.6837, -190.2484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-157.3311, -163.3887, -153.8010, -155.7088, -190.3822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-157.4588, -163.5022, -153.6311, -155.7508, -190.5409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-157.5756, -163.6029, -153.4596, -155.7765, -190.6748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-157.6499, -163.6591, -153.3296, -155.7595, -190.7522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-157.6877, -163.6804, -153.1766, -155.6828, -190.7747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-157.7267, -163.7322, -153.0264, -155.6623, -190.8237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-157.8312, -163.8815, -152.7969, -155.7331, -190.9782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-157.9129, -164.0446, -152.5837, -155.8125, -191.1280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-157.9204, -164.1669, -152.4179, -155.8875, -191.2131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-157.9179, -164.2722, -152.2921, -155.8974, -191.2605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-157.8731, -164.3183, -152.2158, -155.8475, -191.2571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-157.8038, -164.3618, -152.1406, -155.7705, -191.2296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-157.7400, -164.4022, -152.1036, -155.7260, -191.2212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-157.7069, -164.4810, -152.0234, -155.7298, -191.2561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-157.6164, -164.5006, -151.9716, -155.6742, -191.1949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-157.5239, -164.4799, -151.9468, -155.5645, -191.1110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-157.4084, -164.4451, -151.9066, -155.4380, -191.0076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-157.3645, -164.4376, -151.8486, -155.3824, -190.9653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-157.2704, -164.3719, -151.8299, -155.2684, -190.8526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-157.1530, -164.2791, -151.8189, -155.1624, -190.7237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-157.0742, -164.2071, -151.7999, -155.1385, -190.6619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-156.9344, -164.0903, -151.8184, -155.0874, -190.5440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-156.7650, -163.9260, -151.8633, -155.0164, -190.3937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-156.6491, -163.7743, -151.8722, -154.9480, -190.2725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-156.5181, -163.6277, -151.8552, -154.8144, -190.1518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-156.3607, -163.4697, -151.8653, -154.6657, -190.0106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-156.1734, -163.2769, -151.8863, -154.4692, -189.8417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-156.0093, -163.1091, -151.9021, -154.2901, -189.7029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-155.8653, -162.9789, -151.8716, -154.1026, -189.6197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-155.6895, -162.8470, -151.8276, -153.8693, -189.5235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-155.5142, -162.7034, -151.8090, -153.6984, -189.4116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-155.4007, -162.6412, -151.7709, -153.5809, -189.3819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-155.3423, -162.6474, -151.6707, -153.4997, -189.4204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-155.3060, -162.6426, -151.5734, -153.4525, -189.4686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-155.2554, -162.6439, -151.5258, -153.4502, -189.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-155.1655, -162.6046, -151.4825, -153.3905, -189.5164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-155.0608, -162.6012, -151.4025, -153.3150, -189.5461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-154.9702, -162.5753, -151.3498, -153.2618, -189.5807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-154.8373, -162.5197, -151.3719, -153.1703, -189.5546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-154.7571, -162.5438, -151.3673, -153.1622, -189.6312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-154.6677, -162.5450, -151.3499, -153.1535, -189.6604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-154.5791, -162.5690, -151.3078, -153.1599, -189.7017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-154.4793, -162.5658, -151.2978, -153.2062, -189.7098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-154.3611, -162.5335, -151.3266, -153.2360, -189.6960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-154.2231, -162.5205, -151.3168, -153.2696, -189.6737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-154.0911, -162.5158, -151.3073, -153.3250, -189.6618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-153.9780, -162.5161, -151.3064, -153.4131, -189.6795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-153.8632, -162.5037, -151.3224, -153.4892, -189.7026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-153.8097, -162.5166, -151.2706, -153.5897, -189.7273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-153.8002, -162.5866, -151.2104, -153.7251, -189.8119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-153.7630, -162.6509, -151.1521, -153.8598, -189.8953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-153.7225, -162.6797, -151.1473, -153.9760, -189.9587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-153.6208, -162.6236, -151.1820, -153.9933, -189.9539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-153.4974, -162.5714, -151.2183, -154.0109, -189.9178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-153.4304, -162.5698, -151.2428, -154.0922, -189.9323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-153.3572, -162.5644, -151.2518, -154.1735, -189.9614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-153.2554, -162.5145, -151.2966, -154.1694, -189.9169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-153.2089, -162.5098, -151.2836, -154.1724, -189.9105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-153.1480, -162.4931, -151.2809, -154.1829, -189.8941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-153.0862, -162.4789, -151.2545, -154.1736, -189.8492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-153.0429, -162.4956, -151.1502, -154.2011, -189.8564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-153.0301, -162.5163, -150.9991, -154.2136, -189.8759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-153.0258, -162.5106, -150.8630, -154.2391, -189.9147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-153.0035, -162.4849, -150.7208, -154.2363, -189.9229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-153.0043, -162.4788, -150.5276, -154.2123, -189.9400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-152.9502, -162.4099, -150.3655, -154.0995, -189.8775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-152.8770, -162.3073, -150.2337, -153.9941, -189.8085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-152.8334, -162.2473, -150.1031, -153.9378, -189.7737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-152.7836, -162.1888, -149.9971, -153.9098, -189.7823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-152.7687, -162.1308, -149.8797, -153.9258, -189.7941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-152.7517, -162.0573, -149.7666, -153.8846, -189.7761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-152.6854, -161.9524, -149.7169, -153.8420, -189.7140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-152.5674, -161.8188, -149.6983, -153.7123, -189.6180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-152.4387, -161.6424, -149.6953, -153.5139, -189.4923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-152.2938, -161.4423, -149.7048, -153.3027, -189.3474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-152.1779, -161.2753, -149.6774, -153.0986, -189.2453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-152.0685, -161.1085, -149.6649, -152.8956, -189.1461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-151.9234, -160.8854, -149.6976, -152.6538, -188.9876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-151.8841, -160.7822, -149.6610, -152.5276, -188.9608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-151.8955, -160.6995, -149.5677, -152.4194, -188.9625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-151.9248, -160.6452, -149.4500, -152.3208, -188.9843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-151.9906, -160.5751, -149.3409, -152.2449, -189.0177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-152.0684, -160.5118, -149.2243, -152.1942, -189.0861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-152.2075, -160.5187, -149.0690, -152.2226, -189.2139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-152.3060, -160.4809, -148.9751, -152.2188, -189.2645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-152.4087, -160.4693, -148.8572, -152.2140, -189.3227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-152.4926, -160.4493, -148.7878, -152.2017, -189.3833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-152.5523, -160.4318, -148.7197, -152.1548, -189.4254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-152.6170, -160.4472, -148.6233, -152.1631, -189.4791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-152.6488, -160.4343, -148.5389, -152.1606, -189.5085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-152.6900, -160.4284, -148.4459, -152.1244, -189.5831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-152.6946, -160.4274, -148.3721, -152.1354, -189.6111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-152.7169, -160.4447, -148.2645, -152.2058, -189.6397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-152.7213, -160.4419, -148.1641, -152.2626, -189.5967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-152.7149, -160.4078, -148.0848, -152.2725, -189.5294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-152.7338, -160.4035, -148.0300, -152.3492, -189.5022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-152.7248, -160.3756, -147.9854, -152.3818, -189.4507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-152.7388, -160.3767, -147.9019, -152.4455, -189.4374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-152.6954, -160.3209, -147.8346, -152.4507, -189.3158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-152.6171, -160.2644, -147.7542, -152.4294, -189.1924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-152.5444, -160.1815, -147.7140, -152.3773, -189.0742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-152.4850, -160.0936, -147.7053, -152.3707, -188.9764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-152.4127, -160.0203, -147.6872, -152.3957, -188.9042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-152.2914, -159.9306, -147.6632, -152.3626, -188.8079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-152.1732, -159.8495, -147.6416, -152.3059, -188.7294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-152.0872, -159.7901, -147.6499, -152.3056, -188.6881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-152.0641, -159.7606, -147.6472, -152.3373, -188.7288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-152.1199, -159.7722, -147.6203, -152.4137, -188.8565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-152.1030, -159.7389, -147.6286, -152.4353, -188.9164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-152.0433, -159.6917, -147.6432, -152.4243, -188.9369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-152.0077, -159.6340, -147.6539, -152.4371, -188.9764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-152.0293, -159.6122, -147.6243, -152.4902, -189.0534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-152.0827, -159.6354, -147.5761, -152.5933, -189.1808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-152.1317, -159.6613, -147.5247, -152.7194, -189.2774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-152.1291, -159.6518, -147.5053, -152.7969, -189.2956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-152.0895, -159.6103, -147.5356, -152.8432, -189.2805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-152.0083, -159.5415, -147.5608, -152.8217, -189.2239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-151.9952, -159.5269, -147.5350, -152.8333, -189.2264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-151.9358, -159.4781, -147.5214, -152.7654, -189.1539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-151.8782, -159.4222, -147.4745, -152.6830, -189.0839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-151.7981, -159.3359, -147.4406, -152.5882, -188.9639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-151.7450, -159.2796, -147.3921, -152.5114, -188.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-151.7274, -159.2563, -147.3218, -152.4816, -188.8768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-151.6935, -159.2331, -147.2420, -152.4961, -188.8752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-151.5929, -159.1401, -147.2004, -152.4501, -188.7857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-151.5035, -159.0519, -147.1284, -152.3763, -188.6868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-151.4994, -159.0545, -146.9993, -152.3845, -188.6900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-151.4635, -159.0369, -146.8965, -152.3859, -188.6575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-151.3911, -159.0039, -146.8114, -152.4049, -188.6085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-151.3401, -158.9928, -146.6828, -152.4524, -188.6075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-151.2460, -158.9298, -146.6142, -152.4274, -188.5640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-151.1469, -158.8724, -146.5425, -152.4397, -188.4941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-150.9661, -158.7427, -146.5192, -152.3768, -188.3324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-150.8180, -158.6229, -146.4747, -152.3107, -188.1733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-150.7149, -158.5122, -146.4324, -152.2571, -188.0812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-150.6084, -158.4140, -146.3713, -152.1933, -187.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-150.4545, -158.2820, -146.3487, -152.0921, -187.8827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-150.3328, -158.1771, -146.3090, -152.0430, -187.7816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-150.1669, -158.0250, -146.2452, -151.9066, -187.6051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-150.0300, -157.8884, -146.1697, -151.8129, -187.4624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-149.9532, -157.7940, -146.0437, -151.7514, -187.3839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-149.8621, -157.6838, -145.9336, -151.6746, -187.3168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-149.8194, -157.6262, -145.8151, -151.6442, -187.3121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-149.7722, -157.5554, -145.7045, -151.5743, -187.2659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-149.7305, -157.4973, -145.5877, -151.5287, -187.2239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-149.6847, -157.4638, -145.4775, -151.5003, -187.1933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-149.6462, -157.4461, -145.3339, -151.4349, -187.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-149.6085, -157.4529, -145.1925, -151.3687, -187.2097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-149.5083, -157.4238, -145.0479, -151.2708, -187.1767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-149.4294, -157.3892, -144.9467, -151.1873, -187.1472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-149.4243, -157.4277, -144.7992, -151.1937, -187.2025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-149.3662, -157.4117, -144.6580, -151.1071, -187.2020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-149.2550, -157.3772, -144.5782, -151.0063, -187.1811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-149.0967, -157.3460, -144.5326, -150.8785, -187.1268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-149.0310, -157.4083, -144.4180, -150.8250, -187.2017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-149.0634, -157.5198, -144.2919, -150.8036, -187.3590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-149.0931, -157.6002, -144.1831, -150.7472, -187.4651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-149.1526, -157.6830, -144.0849, -150.7286, -187.6279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-149.2084, -157.7760, -144.0100, -150.7875, -187.8229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-149.2470, -157.8297, -143.9312, -150.7773, -188.0162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-149.3023, -157.8839, -143.8754, -150.7780, -188.2254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-149.3613, -157.9304, -143.7977, -150.8148, -188.4320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-149.4058, -157.9601, -143.7188, -150.8333, -188.5845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-149.4787, -157.9896, -143.6627, -150.8171, -188.7658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-149.5719, -158.0356, -143.5799, -150.8077, -188.9415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-149.6543, -158.0353, -143.5056, -150.7717, -189.0642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-149.6936, -158.0162, -143.4369, -150.7403, -189.1425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-149.6614, -157.9371, -143.4014, -150.6521, -189.1216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-149.6534, -157.9081, -143.3777, -150.6397, -189.1658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-149.6160, -157.9100, -143.3303, -150.6727, -189.1639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-149.5822, -157.9146, -143.2921, -150.6822, -189.1487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-149.6027, -157.9783, -143.1874, -150.7480, -189.2038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-149.5449, -157.9497, -143.1211, -150.7377, -189.1753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-149.4567, -157.8981, -143.0948, -150.6718, -189.1113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-149.3127, -157.7883, -143.1255, -150.5613, -188.9875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-149.1810, -157.6774, -143.1700, -150.4599, -188.8640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-149.0413, -157.5418, -143.2426, -150.2999, -188.7181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-148.8695, -157.3751, -143.3229, -150.0889, -188.5055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-148.7036, -157.2140, -143.4241, -149.8630, -188.2573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-148.5514, -157.0652, -143.5484, -149.6940, -188.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-148.4231, -156.9251, -143.6840, -149.5207, -187.9310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-148.2765, -156.8000, -143.8318, -149.3534, -187.7796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-148.1601, -156.6623, -143.9387, -149.1487, -187.6179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-148.0432, -156.5351, -144.0199, -148.9722, -187.4639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-147.9471, -156.4315, -144.0892, -148.8581, -187.3484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-147.8250, -156.3245, -144.1459, -148.7715, -187.2356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-147.7137, -156.1977, -144.1885, -148.6383, -187.1193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-147.5944, -156.0779, -144.2299, -148.5048, -186.9859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-147.5024, -155.9709, -144.2643, -148.4174, -186.9157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-147.4047, -155.8700, -144.2992, -148.3143, -186.7962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-147.2934, -155.7416, -144.3673, -148.1634, -186.6654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-147.2472, -155.6449, -144.4078, -148.0903, -186.6337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-147.1691, -155.5109, -144.4540, -147.9358, -186.5377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-147.0941, -155.3923, -144.4716, -147.8219, -186.4415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-147.0945, -155.3536, -144.4572, -147.8006, -186.4679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-146.9902, -155.2260, -144.5546, -147.6561, -186.3600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-146.8548, -155.0794, -144.6545, -147.5112, -186.2236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-146.7303, -154.9351, -144.7572, -147.3875, -186.1112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-146.5842, -154.7997, -144.8139, -147.2574, -185.9726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-146.5234, -154.7067, -144.8385, -147.1926, -185.9061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-146.3863, -154.5607, -144.8950, -147.0446, -185.7628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-146.2529, -154.4445, -144.9103, -146.9413, -185.6168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-146.1454, -154.3504, -144.9084, -146.8842, -185.5206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-146.0695, -154.2983, -144.8954, -146.8754, -185.5088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-145.9542, -154.2284, -144.9242, -146.8180, -185.4623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-145.8549, -154.1665, -144.9001, -146.7335, -185.4385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-145.7366, -154.1021, -144.8675, -146.6551, -185.3863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-145.5797, -154.0397, -144.8077, -146.5683, -185.2820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-145.3498, -153.9459, -144.7528, -146.3692, -185.0638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-145.1351, -153.8571, -144.6943, -146.1476, -184.8473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-144.9092, -153.7432, -144.6574, -145.8859, -184.5925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-144.6861, -153.6183, -144.6399, -145.6601, -184.3187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-144.5244, -153.5212, -144.6206, -145.4760, -184.1003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-144.3605, -153.4146, -144.5979, -145.3002, -183.8995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-144.2386, -153.3428, -144.5377, -145.1708, -183.7595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-144.1224, -153.2676, -144.4927, -145.0246, -183.6100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-144.0509, -153.2324, -144.4132, -144.8921, -183.5208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-143.9399, -153.1767, -144.3791, -144.7054, -183.3769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-143.8694, -153.1376, -144.3203, -144.5805, -183.2937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-143.8286, -153.1352, -144.2478, -144.5511, -183.2598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-143.7706, -153.1059, -144.1765, -144.4514, -183.2139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-143.6584, -153.0282, -144.1224, -144.2669, -183.0403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-143.5384, -152.9734, -144.0522, -144.1328, -182.8552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-143.5040, -152.9911, -143.9202, -144.1134, -182.8127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-143.4586, -153.0168, -143.8110, -144.0703, -182.7587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-143.4310, -153.0389, -143.6928, -144.0364, -182.7212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-143.3998, -153.0458, -143.5444, -144.0056, -182.6673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-143.4334, -153.0769, -143.3777, -144.0737, -182.7128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-143.5087, -153.1281, -143.1999, -144.1963, -182.8343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-143.5837, -153.1369, -143.0211, -144.2767, -182.9097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-143.7198, -153.1563, -142.8410, -144.3858, -183.0490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-143.8658, -153.1736, -142.6910, -144.4960, -183.2044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-143.9191, -153.1520, -142.5609, -144.5338, -183.2214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-143.9330, -153.1118, -142.4566, -144.5019, -183.2082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-143.9667, -153.0651, -142.3627, -144.4819, -183.2137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-143.9919, -152.9962, -142.3011, -144.4244, -183.2164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-143.9821, -152.8799, -142.2846, -144.3237, -183.1624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-143.9049, -152.7663, -142.2696, -144.2171, -183.0480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-143.8557, -152.6582, -142.2703, -144.1131, -182.9622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-143.7822, -152.5119, -142.3047, -143.9278, -182.8237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-143.6921, -152.3436, -142.3378, -143.7046, -182.6250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-143.6114, -152.2030, -142.3387, -143.5048, -182.4312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-143.5673, -152.0649, -142.3384, -143.3126, -182.2651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-143.5147, -151.9379, -142.3514, -143.1304, -182.1043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-143.4409, -151.8315, -142.3152, -142.9903, -181.9598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-143.4521, -151.7564, -142.2408, -142.9147, -181.9111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-143.5107, -151.7127, -142.1478, -142.9033, -181.9085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-143.6081, -151.6683, -142.0321, -142.9108, -181.9253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-143.7091, -151.6574, -141.8813, -142.9901, -181.9898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-143.8120, -151.6766, -141.7241, -143.1041, -182.0699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-143.9065, -151.7145, -141.5151, -143.2727, -182.1344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-143.9706, -151.7333, -141.3484, -143.4118, -182.1618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-144.0482, -151.7351, -141.2191, -143.5158, -182.1932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-144.0575, -151.7197, -141.1100, -143.5895, -182.1683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-144.0467, -151.6688, -141.0159, -143.6537, -182.0944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-143.9394, -151.5854, -140.9601, -143.6673, -181.9471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-143.8935, -151.5292, -140.9033, -143.7067, -181.8561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-143.8274, -151.4821, -140.8442, -143.7250, -181.7373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-143.7380, -151.4200, -140.7990, -143.7422, -181.6067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-143.6901, -151.3910, -140.7585, -143.8797, -181.6014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-143.6072, -151.3580, -140.7518, -144.0129, -181.5706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-143.5556, -151.3464, -140.6913, -144.2032, -181.5900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-143.4843, -151.3202, -140.6665, -144.3764, -181.5771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-143.3702, -151.2641, -140.6462, -144.4307, -181.4567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-143.3193, -151.2302, -140.5971, -144.4849, -181.3770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-143.2735, -151.2296, -140.5629, -144.5708, -181.3487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-143.1932, -151.2076, -140.5293, -144.6087, -181.2519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-143.0782, -151.1407, -140.5340, -144.5700, -181.1036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-142.9415, -151.0727, -140.5668, -144.5153, -180.9231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-142.8056, -151.0106, -140.5843, -144.4337, -180.7421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-142.6431, -150.9262, -140.5956, -144.3178, -180.5237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-142.5205, -150.8155, -140.6172, -144.1872, -180.3441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-142.4007, -150.6869, -140.6667, -144.0152, -180.1408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-142.2617, -150.5241, -140.7608, -143.7726, -179.9184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-142.1596, -150.3913, -140.8207, -143.5640, -179.7552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-142.0921, -150.2592, -140.8831, -143.3282, -179.6223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-141.9430, -150.0998, -140.9426, -143.0314, -179.4147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-141.8021, -149.9574, -140.9745, -142.7687, -179.2377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-141.6980, -149.8448, -140.9922, -142.5499, -179.1132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-141.6701, -149.7639, -140.9741, -142.4004, -179.0892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-141.6520, -149.6912, -140.9602, -142.2279, -179.0696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-141.6672, -149.6340, -140.9227, -142.0738, -179.0837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-141.7361, -149.5878, -140.8666, -141.9379, -179.1642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-141.8341, -149.5344, -140.8204, -141.8210, -179.2683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-141.9819, -149.5001, -140.7451, -141.7592, -179.4256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-142.1331, -149.4851, -140.6791, -141.7455, -179.5910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-142.2851, -149.4697, -140.6411, -141.7371, -179.7718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-142.3807, -149.4377, -140.6057, -141.6686, -179.8599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-142.4801, -149.4262, -140.5364, -141.6349, -179.9467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-142.5877, -149.4350, -140.4489, -141.6313, -180.0705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-142.6806, -149.4660, -140.3276, -141.6427, -180.1785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-142.7244, -149.4739, -140.2283, -141.6159, -180.2546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-142.7264, -149.4447, -140.1522, -141.5761, -180.2776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-142.7280, -149.4331, -140.0668, -141.5508, -180.3083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-142.7790, -149.4295, -139.9980, -141.5493, -180.3853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-142.7869, -149.4179, -139.9240, -141.5134, -180.3882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-142.8132, -149.4167, -139.8486, -141.4836, -180.4180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-142.7580, -149.3744, -139.8218, -141.3623, -180.3427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-142.6953, -149.3214, -139.7949, -141.2122, -180.2404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-142.6940, -149.2858, -139.7494, -141.1118, -180.2160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-142.6463, -149.2508, -139.6922, -141.0331, -180.1678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-142.6561, -149.2584, -139.6021, -141.0122, -180.1816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-142.7207, -149.3038, -139.4615, -141.0458, -180.2413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-142.7709, -149.3551, -139.3422, -141.0621, -180.2871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-142.7633, -149.3745, -139.2558, -141.0241, -180.2567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-142.7286, -149.4010, -139.1575, -140.9831, -180.1748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-142.6375, -149.3744, -139.0733, -140.8801, -180.0025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-142.5368, -149.3548, -138.9852, -140.7650, -179.8225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-142.4668, -149.3433, -138.9135, -140.6846, -179.6979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-142.4340, -149.3676, -138.8133, -140.6587, -179.6406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-142.4629, -149.4160, -138.6643, -140.6399, -179.6082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-142.4976, -149.4752, -138.4975, -140.6808, -179.6055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-142.5529, -149.5315, -138.3450, -140.7296, -179.6185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-142.5630, -149.5607, -138.2222, -140.7181, -179.5740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-142.5681, -149.5914, -138.1064, -140.7048, -179.5564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-142.5517, -149.6111, -137.9659, -140.6667, -179.4667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-142.4619, -149.5812, -137.8313, -140.5552, -179.2585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-142.4197, -149.5486, -137.6834, -140.4823, -179.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-142.3964, -149.5346, -137.5372, -140.4169, -179.0279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-142.3364, -149.5415, -137.3901, -140.3744, -178.9090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-142.2166, -149.5374, -137.2571, -140.2870, -178.7539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-142.1960, -149.5507, -137.1009, -140.2832, -178.7323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-142.2404, -149.6218, -136.9398, -140.3546, -178.8068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-142.3822, -149.7159, -136.7755, -140.5248, -179.0227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-142.5095, -149.7877, -136.6282, -140.6500, -179.1892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-142.6015, -149.8637, -136.4842, -140.7862, -179.3377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-142.6986, -149.8834, -136.3576, -140.8585, -179.4224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-142.7579, -149.9393, -136.2419, -140.9723, -179.5038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-142.8095, -149.9738, -136.1303, -141.0774, -179.5863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-142.7866, -149.9843, -136.0546, -141.0744, -179.5682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-142.7000, -149.9932, -135.9957, -141.0352, -179.4903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-142.6440, -149.9824, -135.9555, -140.9931, -179.4232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-142.5704, -149.9808, -135.8994, -140.9573, -179.3202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-142.5034, -149.9820, -135.8509, -140.9636, -179.2510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-142.3538, -149.9295, -135.8510, -140.8858, -179.0827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-142.2097, -149.8823, -135.8419, -140.7990, -178.9378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-141.9998, -149.7919, -135.8226, -140.6087, -178.6414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-141.8156, -149.7237, -135.8259, -140.4426, -178.3960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-141.6617, -149.6666, -135.8170, -140.2843, -178.1706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-141.5544, -149.6141, -135.8044, -140.1551, -177.9981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-141.5270, -149.6021, -135.7662, -140.1266, -177.9381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-141.4429, -149.5377, -135.7384, -140.0335, -177.8068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-141.2759, -149.3934, -135.7460, -139.7928, -177.5330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-141.0995, -149.2553, -135.7716, -139.5283, -177.2387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-140.9612, -149.1622, -135.7548, -139.3704, -177.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-140.8459, -149.0373, -135.7494, -139.2038, -176.8587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-140.6534, -148.9012, -135.7623, -139.0021, -176.6029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-140.4239, -148.7552, -135.7761, -138.8279, -176.3186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-140.2256, -148.6523, -135.7800, -138.7364, -176.0907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-140.0356, -148.5847, -135.7877, -138.6493, -175.8863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-139.8361, -148.4756, -135.7881, -138.5318, -175.6250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-139.6602, -148.3466, -135.7888, -138.3756, -175.3655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-139.5013, -148.2226, -135.7900, -138.2474, -175.1344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-139.4308, -148.1095, -135.7945, -138.1760, -175.0111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-139.3607, -148.0398, -135.8060, -138.1227, -174.8916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-139.3880, -148.0279, -135.7599, -138.1570, -174.8860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-139.4260, -147.9756, -135.7564, -138.1056, -174.8764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-139.3979, -147.9007, -135.7616, -138.0111, -174.7955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-139.3780, -147.8084, -135.8041, -137.8915, -174.7418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-139.3653, -147.7222, -135.8334, -137.7974, -174.7169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-139.3623, -147.6102, -135.8831, -137.7045, -174.7031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-139.3986, -147.5329, -135.8783, -137.6748, -174.7369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-139.4089, -147.4678, -135.8837, -137.6609, -174.7795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-139.4714, -147.3841, -135.9332, -137.5835, -174.8653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-139.4690, -147.2743, -136.0025, -137.4212, -174.8472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-139.4511, -147.1603, -136.0269, -137.2634, -174.7903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-139.4213, -147.0050, -136.0906, -137.0432, -174.6895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-139.3940, -146.8683, -136.1471, -136.8527, -174.6099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-139.4065, -146.7294, -136.2006, -136.6860, -174.5822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-139.3617, -146.5508, -136.2780, -136.4760, -174.4909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-139.3396, -146.3649, -136.3568, -136.2970, -174.4231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-139.3498, -146.2253, -136.4050, -136.1893, -174.4074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-139.3087, -146.0930, -136.4314, -136.0390, -174.2896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-139.3033, -145.9787, -136.4295, -135.9566, -174.2361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-139.3070, -145.8796, -136.4148, -135.8655, -174.1717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-139.3010, -145.7901, -136.4165, -135.7744, -174.0966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-139.3833, -145.7266, -136.4214, -135.7682, -174.1502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-139.4237, -145.6667, -136.4148, -135.7555, -174.1694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-139.3611, -145.5930, -136.3999, -135.6714, -174.0539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-139.2554, -145.5117, -136.3818, -135.6187, -173.9193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-139.1385, -145.4471, -136.3341, -135.5820, -173.7584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-138.9874, -145.3702, -136.3122, -135.5537, -173.6147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-138.8318, -145.2714, -136.3116, -135.4662, -173.4428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-138.6959, -145.1860, -136.2987, -135.3663, -173.2790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-138.5412, -145.1041, -136.2687, -135.2886, -173.0838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-138.3335, -144.9938, -136.2066, -135.1473, -172.7944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-138.1496, -144.9066, -136.1681, -135.0916, -172.5907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-138.0244, -144.8439, -136.1301, -135.1037, -172.4574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-137.9890, -144.7950, -136.0702, -135.1730, -172.4167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-138.0144, -144.7607, -136.0018, -135.2863, -172.4611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-138.1180, -144.7174, -135.9307, -135.4234, -172.5814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-138.2720, -144.7104, -135.8569, -135.5872, -172.7713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-138.4524, -144.6861, -135.7715, -135.7339, -172.9823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-138.6539, -144.7014, -135.6908, -135.9591, -173.2622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-138.7725, -144.6807, -135.6087, -136.1156, -173.4292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-138.8829, -144.6741, -135.4957, -136.2647, -173.5892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-138.9667, -144.6394, -135.4313, -136.3844, -173.7725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-139.1005, -144.6316, -135.3735, -136.5381, -174.0216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-139.2888, -144.6320, -135.3474, -136.7290, -174.3312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-139.4195, -144.6361, -135.2727, -136.8907, -174.5377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-139.5150, -144.6131, -135.2216, -136.9450, -174.6664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-139.5791, -144.5914, -135.1940, -136.9712, -174.7653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-139.6086, -144.5640, -135.1507, -137.0122, -174.8423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-139.5590, -144.5067, -135.0923, -136.9713, -174.8022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-139.5674, -144.4704, -135.0125, -137.0145, -174.8385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-139.5373, -144.4248, -134.9349, -137.0278, -174.8116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-139.5321, -144.4181, -134.8257, -137.0894, -174.8239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-139.4132, -144.3835, -134.7005, -137.0551, -174.6826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-139.2803, -144.3585, -134.5944, -137.0184, -174.5412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-139.1483, -144.3188, -134.5396, -136.9428, -174.3995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-139.0249, -144.2677, -134.5092, -136.8317, -174.2514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-138.9572, -144.2353, -134.4883, -136.7514, -174.1824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-138.8620, -144.2125, -134.4587, -136.6345, -174.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-138.8236, -144.1838, -134.4435, -136.5259, -174.0021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-138.8387, -144.1824, -134.4388, -136.4821, -174.0187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-138.8577, -144.2100, -134.4183, -136.4887, -174.0479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-138.8468, -144.2004, -134.4191, -136.4343, -174.0310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-138.8898, -144.1469, -134.4623, -136.3503, -174.0604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-139.0006, -144.1429, -134.4797, -136.3900, -174.2025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-139.1195, -144.1126, -134.5487, -136.4110, -174.3440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-139.1883, -144.0745, -134.6326, -136.3937, -174.4504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-139.2201, -144.0110, -134.6979, -136.3323, -174.4754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-139.2750, -143.9834, -134.7583, -136.2578, -174.4914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-139.3370, -143.9734, -134.7968, -136.2111, -174.5209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-139.3933, -143.9266, -134.8182, -136.1521, -174.5411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-139.4775, -143.9009, -134.8080, -136.1420, -174.5977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-139.5896, -143.8952, -134.8009, -136.1313, -174.6740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-139.6166, -143.8492, -134.8164, -136.0127, -174.6234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-139.6919, -143.8273, -134.8466, -135.9638, -174.6569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-139.8503, -143.8704, -134.8427, -136.0818, -174.8664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-139.9985, -143.8879, -134.8117, -136.1462, -174.9958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-140.0928, -143.8634, -134.8111, -136.1194, -175.0317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-140.0888, -143.8199, -134.8226, -136.0155, -174.9800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-140.1720, -143.8098, -134.8251, -136.0173, -175.0260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-140.2149, -143.7870, -134.8384, -135.9855, -175.0320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-140.2155, -143.7522, -134.8375, -135.9458, -175.0218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-140.2167, -143.7218, -134.8418, -135.9035, -175.0178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-140.1996, -143.6919, -134.8471, -135.8557, -175.0182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-140.3282, -143.6954, -134.8846, -135.9351, -175.2231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-140.4041, -143.7120, -134.8977, -136.0037, -175.3678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-140.5051, -143.7452, -134.8982, -136.0762, -175.5160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-140.6868, -143.7844, -134.9059, -136.1836, -175.7421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-140.8452, -143.8103, -134.9296, -136.2802, -175.9599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-141.0274, -143.8416, -134.9770, -136.4112, -176.2181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-141.2626, -143.8922, -135.0715, -136.5287, -176.5137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-141.3728, -143.9142, -135.1636, -136.6029, -176.7132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-141.4532, -143.9264, -135.2179, -136.6933, -176.8815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-141.5864, -143.9485, -135.2757, -136.8195, -177.1075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-141.6720, -143.9681, -135.3336, -136.8767, -177.2710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-141.6836, -143.9593, -135.4721, -136.8365, -177.3776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-141.6723, -143.9454, -135.5880, -136.7951, -177.4487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-141.6931, -143.9616, -135.6431, -136.8224, -177.5622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-141.6411, -143.9339, -135.6747, -136.7869, -177.5677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-141.6004, -143.8767, -135.7164, -136.7652, -177.5888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-141.5815, -143.8212, -135.7827, -136.7773, -177.6448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-141.4785, -143.7402, -135.8411, -136.7216, -177.5981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-141.3448, -143.6482, -135.8950, -136.6248, -177.5010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-141.2317, -143.5576, -135.9329, -136.5442, -177.4125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-141.1498, -143.4916, -135.9735, -136.4846, -177.3519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-141.0175, -143.4166, -136.0281, -136.3515, -177.2170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-140.7927, -143.3053, -136.0846, -136.1256, -176.9526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-140.6430, -143.2161, -136.1207, -135.9565, -176.7578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-140.4762, -143.1306, -136.1464, -135.8052, -176.5705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-140.3138, -143.0185, -136.1606, -135.6388, -176.3692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-140.1285, -142.8887, -136.1517, -135.4127, -176.0984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-139.9103, -142.7445, -136.1489, -135.1410, -175.7755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-139.7356, -142.6366, -136.1623, -134.9167, -175.5229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-139.7125, -142.5645, -136.1866, -134.8113, -175.4587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-139.7204, -142.4946, -136.2525, -134.7323, -175.4631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-139.7026, -142.4083, -136.3188, -134.6280, -175.4347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-139.7749, -142.3456, -136.4284, -134.5932, -175.5321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-139.8596, -142.2859, -136.5318, -134.5718, -175.6413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-139.9907, -142.2555, -136.6412, -134.6053, -175.8102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-140.1304, -142.2626, -136.7236, -134.7346, -176.0653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-140.2519, -142.2677, -136.7482, -134.8818, -176.2970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-140.3913, -142.2738, -136.7923, -135.0416, -176.5511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-140.5453, -142.2442, -136.8720, -135.1433, -176.7779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-140.6744, -142.2373, -136.9059, -135.2758, -176.9877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-140.7372, -142.2353, -136.8889, -135.3516, -177.0987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-140.7688, -142.2172, -136.8268, -135.4080, -177.1659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-140.7735, -142.1822, -136.8047, -135.4332, -177.2122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-140.7398, -142.1404, -136.7375, -135.4294, -177.1755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-140.7399, -142.1257, -136.6278, -135.4626, -177.1562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-140.6875, -142.1033, -136.5242, -135.4442, -177.0925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-140.5564, -142.0576, -136.4668, -135.3177, -176.9315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-140.4271, -142.0325, -136.4422, -135.1944, -176.7767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-140.3431, -142.0175, -136.4205, -135.1369, -176.6986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-140.2468, -141.9829, -136.4093, -135.0498, -176.5838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-140.2052, -141.9609, -136.3336, -135.0385, -176.5187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-140.1590, -141.9334, -136.2883, -134.9863, -176.4384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-140.1008, -141.9011, -136.2621, -134.9126, -176.3510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-140.0748, -141.8969, -136.2406, -134.8945, -176.3148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-140.1210, -141.9471, -136.1651, -134.9920, -176.3717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-140.2370, -142.0292, -136.1245, -135.1540, -176.5327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-140.3090, -142.0767, -136.0829, -135.2580, -176.6453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-140.3383, -142.1151, -136.0503, -135.3221, -176.7229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-140.3984, -142.1641, -136.0269, -135.4099, -176.8351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-140.3626, -142.1744, -136.0068, -135.3694, -176.8118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-140.2703, -142.1913, -136.0053, -135.2598, -176.7241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-140.1810, -142.1792, -136.0229, -135.1267, -176.6287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-140.1235, -142.1790, -135.9921, -135.0563, -176.5719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-140.0606, -142.1766, -135.9190, -135.0123, -176.5149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-139.9439, -142.1548, -135.8701, -134.9178, -176.3958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-139.8299, -142.1196, -135.8469, -134.7976, -176.2581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-139.6770, -142.0798, -135.8207, -134.6720, -176.0812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-139.5184, -142.0529, -135.7624, -134.5959, -175.9262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-139.3981, -142.0228, -135.7386, -134.5172, -175.8052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-139.3172, -142.0003, -135.7255, -134.4948, -175.7367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-139.1542, -141.9746, -135.6953, -134.4426, -175.6043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-139.1106, -141.9725, -135.6940, -134.4942, -175.6151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-139.0734, -141.9572, -135.6918, -134.5247, -175.6173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-139.1230, -141.9636, -135.6930, -134.6476, -175.7342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-139.2186, -141.9668, -135.6827, -134.7986, -175.8866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-139.2458, -141.9468, -135.6912, -134.8245, -175.9099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-139.2904, -141.9493, -135.6988, -134.8965, -175.9751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-139.3079, -141.9206, -135.7143, -134.9178, -175.9807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-139.3209, -141.9017, -135.6937, -134.9886, -176.0191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-139.2808, -141.8593, -135.6683, -134.9807, -175.9667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-139.3079, -141.8486, -135.6516, -135.0757, -176.0254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-139.3371, -141.8215, -135.6800, -135.1217, -176.0790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-139.3187, -141.7808, -135.6681, -135.1085, -176.0476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-139.3220, -141.7395, -135.6771, -135.1233, -176.0551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-139.2600, -141.6821, -135.6839, -135.0911, -175.9977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-139.0803, -141.6208, -135.6759, -134.9834, -175.8367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-138.8940, -141.5712, -135.6542, -134.8729, -175.6641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-138.7214, -141.5300, -135.6714, -134.7997, -175.5453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-138.5819, -141.4987, -135.6498, -134.8254, -175.5003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-138.3939, -141.4408, -135.6672, -134.7768, -175.3866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-138.2556, -141.3975, -135.6586, -134.8065, -175.3452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-138.1222, -141.3365, -135.6441, -134.8671, -175.3326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-138.0566, -141.2803, -135.6443, -134.9849, -175.4063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-137.9909, -141.2033, -135.6631, -135.0556, -175.4549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-137.9098, -141.1481, -135.7099, -135.1312, -175.5130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-137.9123, -141.1283, -135.7750, -135.2557, -175.6411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-137.8723, -141.0925, -135.8274, -135.3150, -175.7020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-137.8014, -141.0695, -135.8045, -135.3932, -175.7399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-137.7613, -141.0827, -135.7768, -135.5276, -175.8302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-137.6198, -141.0778, -135.7570, -135.5296, -175.7747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-137.5128, -141.0487, -135.7797, -135.5385, -175.7648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-137.3837, -141.0197, -135.7913, -135.5206, -175.7217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-137.2061, -140.9714, -135.8147, -135.4302, -175.6108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-137.0171, -140.9256, -135.8860, -135.2896, -175.4692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-136.8927, -140.9098, -135.9578, -135.2387, -175.4274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-136.7731, -140.9332, -135.9549, -135.2211, -175.3746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-136.6489, -140.9585, -135.9381, -135.2386, -175.3505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-136.5863, -140.9796, -135.9064, -135.2452, -175.3172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-136.5024, -140.9604, -135.8799, -135.2284, -175.2632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-136.4730, -140.9584, -135.8399, -135.2908, -175.2985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-136.5019, -140.9609, -135.7976, -135.4073, -175.4073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-136.4578, -140.9387, -135.7727, -135.3979, -175.4140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-136.4635, -140.9414, -135.7278, -135.4696, -175.4837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-136.4072, -140.9068, -135.6826, -135.4539, -175.4532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-136.3255, -140.8701, -135.6164, -135.4237, -175.3967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-136.2795, -140.8520, -135.5107, -135.4723, -175.3945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-136.2007, -140.8096, -135.4674, -135.4291, -175.3332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-136.1181, -140.7462, -135.4551, -135.3618, -175.2748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-136.0783, -140.6874, -135.4348, -135.3431, -175.2713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-136.0630, -140.6627, -135.4078, -135.3943, -175.3412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-135.9637, -140.6100, -135.3998, -135.3606, -175.3015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-135.9363, -140.5730, -135.4214, -135.4182, -175.3699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-135.8737, -140.5278, -135.4285, -135.4521, -175.4093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-135.8084, -140.4835, -135.4247, -135.4527, -175.4130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-135.7728, -140.4738, -135.4388, -135.5119, -175.4753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-135.7095, -140.4634, -135.3839, -135.5541, -175.4971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-135.6372, -140.4372, -135.3507, -135.5519, -175.4970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-135.6089, -140.4078, -135.3489, -135.5420, -175.4890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-135.5621, -140.3581, -135.3916, -135.5590, -175.5088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-135.4952, -140.2988, -135.4462, -135.5539, -175.5049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-135.4244, -140.2208, -135.5013, -135.4896, -175.4362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-135.2565, -140.1211, -135.5686, -135.3074, -175.2400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-135.1356, -140.0308, -135.6651, -135.1220, -175.0770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-135.0615, -139.9368, -135.7872, -134.9725, -174.9784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-135.0110, -139.8509, -135.9379, -134.8586, -174.9265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-135.0621, -139.7974, -136.0981, -134.8166, -174.9732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-135.0659, -139.7359, -136.2437, -134.7745, -175.0006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-135.0590, -139.6615, -136.3997, -134.7174, -175.0229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-135.0236, -139.5847, -136.5935, -134.6076, -175.0227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-134.9215, -139.5054, -136.7648, -134.4461, -174.9574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-134.8070, -139.4115, -136.9101, -134.2411, -174.8422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-134.6974, -139.3363, -137.0761, -134.0103, -174.7243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-134.6113, -139.2447, -137.2599, -133.7899, -174.6245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-134.4188, -139.1137, -137.4776, -133.4498, -174.4044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-134.2898, -139.0237, -137.6484, -133.1637, -174.2348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-134.1710, -138.9534, -137.7939, -132.9631, -174.1206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-134.0542, -138.8787, -137.9105, -132.7621, -173.9891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-134.0330, -138.8529, -138.0149, -132.6247, -173.9300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-134.0379, -138.8315, -138.0897, -132.5157, -173.8799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-134.0439, -138.8194, -138.1400, -132.4118, -173.8255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-134.0548, -138.7991, -138.2476, -132.2345, -173.7521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-134.0803, -138.7977, -138.3792, -132.0486, -173.6888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-133.9700, -138.7739, -138.4540, -131.8032, -173.4953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-133.8817, -138.7518, -138.5229, -131.5672, -173.3042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-133.8776, -138.7327, -138.5826, -131.3819, -173.1476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-133.8680, -138.7392, -138.6621, -131.2240, -173.0330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-133.8289, -138.7318, -138.7129, -131.0471, -172.8883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-133.8082, -138.7800, -138.7499, -130.9245, -172.7767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-133.7910, -138.8201, -138.7830, -130.7990, -172.6725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-133.6956, -138.8645, -138.8043, -130.6344, -172.5181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-133.6617, -138.9061, -138.8238, -130.5170, -172.4211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-133.6729, -138.9707, -138.8596, -130.4872, -172.4249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-133.6076, -138.9970, -138.8027, -130.4499, -172.3387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-133.5383, -139.0415, -138.7287, -130.4614, -172.2734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-133.5058, -139.0865, -138.6516, -130.5103, -172.2610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-133.5359, -139.1367, -138.5989, -130.5805, -172.2740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-133.5315, -139.1599, -138.5038, -130.6228, -172.2304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-133.5086, -139.1874, -138.4221, -130.6642, -172.2063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-133.4727, -139.2223, -138.3594, -130.7000, -172.1878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-133.3875, -139.2428, -138.3167, -130.6593, -172.1090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-133.4069, -139.2687, -138.3543, -130.6722, -172.1499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-133.3889, -139.2541, -138.4522, -130.6261, -172.1577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-133.4643, -139.2432, -138.5949, -130.6725, -172.2638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-133.4894, -139.2344, -138.6962, -130.7306, -172.3482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-133.5602, -139.2338, -138.8178, -130.8540, -172.5092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-133.6224, -139.2309, -138.9527, -130.9394, -172.6349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-133.6072, -139.1969, -139.0903, -130.8804, -172.6384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-133.6086, -139.1525, -139.2313, -130.8060, -172.6295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-133.6336, -139.1355, -139.4207, -130.8182, -172.7399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-133.7433, -139.1426, -139.5379, -130.9308, -172.9276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-133.9634, -139.1629, -139.5945, -131.1432, -173.2022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-134.1753, -139.1974, -139.6852, -131.3307, -173.4665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-134.4177, -139.2369, -139.7106, -131.5760, -173.7459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-134.6567, -139.2738, -139.7750, -131.8308, -174.0511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-134.8489, -139.3093, -139.8461, -132.0542, -174.3299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-135.0645, -139.3686, -139.9493, -132.2821, -174.6269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-135.2450, -139.4118, -140.0442, -132.4929, -174.9033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-135.4208, -139.4634, -140.0980, -132.7238, -175.1655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-135.5925, -139.5326, -140.1712, -132.9930, -175.4569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-135.6278, -139.5902, -140.2381, -133.1736, -175.6438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-135.7661, -139.6722, -140.2892, -133.4304, -175.8959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-135.9238, -139.7483, -140.3199, -133.7306, -176.1922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-136.0738, -139.8025, -140.3962, -133.9265, -176.4289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-136.2914, -139.8753, -140.5073, -134.1342, -176.7005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-136.5543, -139.9377, -140.6469, -134.3556, -177.0100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-136.7963, -139.9697, -140.8656, -134.4446, -177.2365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-137.0807, -140.0185, -141.0344, -134.6389, -177.5250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-137.3508, -140.0974, -141.1177, -134.8847, -177.8091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-137.5573, -140.1792, -141.2366, -135.0713, -178.0339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-137.7532, -140.2383, -141.3445, -135.2199, -178.2102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-137.9819, -140.3141, -141.4731, -135.4532, -178.4896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-138.1439, -140.3837, -141.5996, -135.6365, -178.7212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-138.3342, -140.4710, -141.7237, -135.8793, -179.0169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-138.4712, -140.5197, -141.8703, -136.0198, -179.2245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-138.5753, -140.5709, -142.0328, -136.1235, -179.4109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-138.5780, -140.5985, -142.1800, -136.1067, -179.4628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-138.6006, -140.6170, -142.2581, -136.1060, -179.4976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-138.6789, -140.6473, -142.3455, -136.1539, -179.5808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-138.7075, -140.6634, -142.4807, -136.1383, -179.6185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-138.7689, -140.7041, -142.5982, -136.1503, -179.6754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-138.7549, -140.7359, -142.6984, -136.0917, -179.6607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-138.8448, -140.7926, -142.9196, -136.0411, -179.7220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-138.9175, -140.8523, -143.1279, -135.9647, -179.7455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-138.9823, -140.9154, -143.3684, -135.8832, -179.7924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-139.0508, -140.9800, -143.5777, -135.8689, -179.8691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-139.1217, -141.0435, -143.7306, -135.8452, -179.8999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-139.2732, -141.1068, -143.8983, -135.8619, -179.9954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-139.3987, -141.1476, -144.0261, -135.8831, -180.0756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-139.5372, -141.1668, -144.1892, -135.8266, -180.0887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-139.6680, -141.1595, -144.3508, -135.7831, -180.1202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-139.7247, -141.1641, -144.4686, -135.6653, -180.0486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-139.7116, -141.1547, -144.5518, -135.4788, -179.8846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-139.6341, -141.1410, -144.5534, -135.3197, -179.6898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-139.4965, -141.1276, -144.5425, -135.1245, -179.4539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-139.3582, -141.1215, -144.6133, -134.9535, -179.2811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-139.2381, -141.1544, -144.6706, -134.8004, -179.1158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-139.1554, -141.1981, -144.7408, -134.6763, -178.9827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-139.0259, -141.2234, -144.8862, -134.4875, -178.8085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-138.9358, -141.2325, -144.9340, -134.3496, -178.6352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-138.8083, -141.2182, -145.0193, -134.1343, -178.4052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-138.5904, -141.1779, -145.0529, -133.8408, -178.0789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-138.4242, -141.1593, -145.1117, -133.5874, -177.8168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-138.3135, -141.1359, -145.1560, -133.4156, -177.6366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-138.2163, -141.1754, -145.2513, -133.3376, -177.5459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-138.0704, -141.1959, -145.3419, -133.2152, -177.4102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-137.9413, -141.2524, -145.4125, -133.1924, -177.3591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-137.7690, -141.2869, -145.5274, -133.0864, -177.2474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-137.6306, -141.2964, -145.6342, -132.9311, -177.1108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-137.5088, -141.3132, -145.6890, -132.8495, -177.0189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-137.3868, -141.3255, -145.7590, -132.7617, -176.9301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-137.3317, -141.3262, -145.8436, -132.6977, -176.8709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-137.1540, -141.2945, -145.9930, -132.5049, -176.7185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-137.0475, -141.2396, -146.1523, -132.4124, -176.6453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-136.8920, -141.1511, -146.2157, -132.2849, -176.5056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-136.7487, -141.0886, -146.3902, -132.1504, -176.3878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-136.6168, -141.0334, -146.5409, -132.0502, -176.2895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-136.5036, -140.9696, -146.6620, -132.0057, -176.2234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-136.4085, -140.9288, -146.8000, -132.0029, -176.2085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-136.4658, -140.9451, -146.9827, -132.0824, -176.3183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-136.5759, -140.9693, -147.1870, -132.2276, -176.4962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-136.6484, -140.9932, -147.4252, -132.2816, -176.5943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-136.7124, -141.0404, -147.6336, -132.3709, -176.7007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-136.7597, -141.0784, -147.8238, -132.4590, -176.8217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-136.8480, -141.1346, -148.1008, -132.5521, -176.9887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-136.8679, -141.1763, -148.3554, -132.5912, -177.1004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-136.9098, -141.1919, -148.6737, -132.5679, -177.1870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-136.9059, -141.2010, -148.9534, -132.5132, -177.2032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-136.9364, -141.1925, -149.2235, -132.5108, -177.2585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-136.9624, -141.2133, -149.5080, -132.5151, -177.3081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-136.9092, -141.2272, -149.7691, -132.4417, -177.2609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-136.8213, -141.2215, -149.9823, -132.3649, -177.1605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-136.7754, -141.2161, -150.1894, -132.3234, -177.0846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-136.6853, -141.2039, -150.4512, -132.1609, -176.9197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-136.5836, -141.1908, -150.6911, -132.0170, -176.7727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-136.5481, -141.1878, -150.9996, -131.9011, -176.6963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-136.5312, -141.1878, -151.2692, -131.7686, -176.5999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-136.5313, -141.2028, -151.4852, -131.6899, -176.5258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-136.5344, -141.2235, -151.6628, -131.5670, -176.4087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-136.5099, -141.2564, -151.8572, -131.4226, -176.2669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-136.4215, -141.2639, -152.0802, -131.2288, -176.0834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-136.3396, -141.2585, -152.3382, -131.0183, -175.9084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-136.3174, -141.2602, -152.6230, -130.8669, -175.8004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-136.3890, -141.2730, -153.0097, -130.7741, -175.8024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-136.3745, -141.2780, -153.3776, -130.6158, -175.7076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-136.4197, -141.2762, -153.6893, -130.4892, -175.6350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-136.5629, -141.3243, -153.9407, -130.4652, -175.6480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-136.7498, -141.3385, -154.2418, -130.4047, -175.6544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-136.9265, -141.3432, -154.5554, -130.3335, -175.6637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-137.1445, -141.3139, -154.8123, -130.2612, -175.6821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-137.3465, -141.2765, -155.0730, -130.1790, -175.6981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-137.5199, -141.2625, -155.3878, -130.1516, -175.7638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-137.6279, -141.2325, -155.6188, -130.0829, -175.7478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-137.7145, -141.1926, -155.8214, -130.0128, -175.7125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-137.8729, -141.1641, -156.0464, -130.0088, -175.7616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-138.0413, -141.1521, -156.2254, -130.0993, -175.8697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-138.1117, -141.1022, -156.3499, -130.1577, -175.8978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-138.2285, -141.0674, -156.6058, -130.2127, -175.9703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-138.3363, -141.0042, -156.8320, -130.2706, -176.0321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-138.5290, -140.9529, -157.0781, -130.3161, -176.1238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-138.6781, -140.9057, -157.3179, -130.3816, -176.2147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-138.8969, -140.8670, -157.5833, -130.4244, -176.3058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-139.1006, -140.8367, -157.9018, -130.3615, -176.3332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-139.3698, -140.8013, -158.2149, -130.3597, -176.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-139.5942, -140.7603, -158.5242, -130.3505, -176.4577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-139.8195, -140.7127, -158.8766, -130.2957, -176.4890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-140.1808, -140.6938, -159.2359, -130.3529, -176.6405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-140.4584, -140.6974, -159.5963, -130.3625, -176.7048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-140.7549, -140.7327, -159.9774, -130.3858, -176.7817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-141.1043, -140.7860, -160.4246, -130.4047, -176.8972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-141.3935, -140.8060, -160.8502, -130.3658, -176.9504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-141.7403, -140.8365, -161.3307, -130.3659, -177.0609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-142.0033, -140.8539, -161.7727, -130.3678, -177.1407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-142.3071, -140.8926, -162.2539, -130.3775, -177.2623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-142.5454, -140.9246, -162.6349, -130.4511, -177.3837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-142.7916, -140.9254, -162.9091, -130.4903, -177.4703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-142.9398, -140.9335, -163.1913, -130.4095, -177.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-143.1546, -140.9577, -163.4665, -130.3899, -177.4668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-143.4631, -141.0082, -163.7731, -130.4056, -177.5731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-143.7741, -141.0567, -164.0990, -130.4127, -177.6925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-144.0100, -141.0920, -164.3940, -130.3622, -177.7490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-144.2030, -141.1066, -164.6911, -130.2508, -177.7605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-144.4278, -141.1128, -164.9992, -130.1607, -177.7867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-144.6305, -141.1162, -165.3016, -130.1416, -177.8567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-144.8063, -141.1353, -165.5902, -130.1487, -177.9365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-145.0984, -141.1485, -165.9862, -130.1893, -178.0998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-145.3632, -141.1412, -166.2776, -130.2207, -178.2351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-145.5282, -141.1459, -166.5608, -130.1467, -178.2371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-145.7012, -141.1258, -166.7422, -130.1155, -178.2538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-145.7906, -141.1247, -167.0128, -129.8697, -178.1057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-145.9442, -141.1674, -167.3456, -129.6245, -177.9809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-146.0713, -141.1763, -167.6515, -129.3881, -177.8795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-146.1428, -141.1803, -167.9327, -129.1358, -177.7524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-146.2170, -141.1878, -168.1474, -128.9334, -177.6290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-146.2013, -141.1592, -168.4055, -128.6189, -177.3957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-146.1882, -141.1439, -168.7070, -128.3420, -177.2143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-146.2284, -141.1179, -168.9651, -128.1406, -177.0949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-146.3014, -141.1076, -169.2432, -127.9371, -177.0054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-146.3925, -141.0854, -169.4888, -127.7480, -176.9220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-146.4902, -141.0927, -169.7929, -127.5515, -176.8612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-146.5790, -141.1187, -170.0837, -127.4190, -176.8242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-146.5978, -141.1281, -170.2850, -127.2379, -176.7104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-146.5343, -141.1058, -170.4047, -127.0078, -176.5001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-146.5075, -141.1108, -170.6149, -126.8021, -176.3539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-146.6066, -141.0966, -170.8039, -126.6467, -176.2648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-146.7601, -141.1029, -171.0276, -126.5012, -176.2230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-146.8973, -141.0967, -171.1189, -126.3899, -176.1628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-147.1016, -141.0763, -171.1912, -126.3738, -176.1459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-147.3255, -141.0337, -171.2416, -126.4703, -176.2097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-147.5142, -140.9395, -171.2723, -126.4945, -176.1914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-147.7165, -140.9076, -171.3807, -126.5305, -176.2137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-147.9196, -140.8942, -171.4332, -126.5343, -176.1991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-148.0232, -140.8724, -171.5386, -126.5056, -176.1571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-148.2230, -140.8717, -171.6886, -126.5440, -176.2254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-148.5086, -140.8904, -171.8267, -126.7054, -176.3863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-148.8429, -140.9245, -172.0296, -126.8563, -176.5813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-149.1335, -140.9398, -172.1832, -127.0083, -176.7595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-149.4172, -140.9824, -172.4042, -127.1822, -176.9760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-149.7111, -141.0110, -172.6179, -127.3956, -177.2209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-149.9714, -141.0472, -172.8815, -127.5500, -177.4307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-150.2394, -141.1354, -173.1839, -127.7776, -177.7217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-150.4849, -141.2022, -173.5145, -127.9778, -178.0181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-150.8064, -141.2831, -173.7961, -128.2359, -178.3807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-151.0093, -141.3541, -174.0211, -128.4155, -178.6519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-151.2409, -141.4470, -174.2640, -128.6067, -178.9636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-151.5402, -141.5418, -174.6229, -128.8001, -179.3297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-151.7478, -141.6595, -175.0217, -128.9365, -179.6435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-151.9332, -141.7634, -175.3685, -129.0903, -179.9669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-152.1020, -141.8392, -175.7150, -129.1725, -180.2083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-152.2053, -141.8987, -176.0587, -129.1990, -180.3962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-152.3419, -141.9401, -176.4095, -129.1804, -180.5785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-152.4038, -141.9492, -176.7350, -129.1247, -180.6876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-152.4843, -141.9660, -177.0998, -129.0680, -180.8125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-152.6018, -141.9877, -177.4585, -129.0298, -180.9342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-152.8942, -142.0329, -177.8676, -129.1349, -181.2114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-153.3098, -142.0623, -178.2751, -129.3615, -181.5837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-153.7108, -142.1162, -178.7939, -129.5098, -181.9044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-154.1188, -142.2029, -179.2724, -129.6626, -182.2249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-154.4648, -142.2833, -179.7934, -129.7694, -182.4888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-154.8165, -142.3577, -180.3962, -129.8482, -182.7566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-155.2596, -142.4330, -181.0437, -129.9657, -183.0845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-155.6526, -142.5280, -181.6563, -130.0922, -183.3948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-155.9557, -142.5535, -182.1042, -130.1156, -183.5455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-156.2103, -142.5539, -182.5545, -130.1146, -183.6608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-156.4619, -142.5458, -183.0638, -130.1210, -183.8052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-156.8232, -142.5546, -183.5832, -130.1706, -184.0374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-156.9676, -142.5596, -184.0546, -130.0504, -184.0833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-157.0367, -142.5744, -184.5166, -129.9079, -184.0815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-157.1232, -142.5979, -184.9394, -129.7250, -184.0327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-157.2049, -142.6196, -185.2846, -129.5554, -183.9746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-157.4167, -142.6756, -185.6234, -129.5107, -184.0573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-157.5134, -142.7190, -185.9378, -129.3936, -184.0658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-157.5486, -142.7550, -186.1774, -129.3149, -184.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-157.6143, -142.8025, -186.4412, -129.2725, -184.0857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-157.6648, -142.8671, -186.7946, -129.2269, -184.1184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-157.7193, -142.9183, -187.1707, -129.1833, -184.1660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-157.8297, -142.9734, -187.5220, -129.2556, -184.3045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-157.8325, -143.0341, -187.8836, -129.2373, -184.3600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-157.8955, -143.0954, -188.2505, -129.2633, -184.4623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-157.9685, -143.1481, -188.6270, -129.3089, -184.5868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-158.0639, -143.2310, -189.0518, -129.3439, -184.7162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-158.2131, -143.3195, -189.4794, -129.4365, -184.9300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-158.2868, -143.3965, -189.8341, -129.4715, -185.0571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-158.2922, -143.4611, -190.2227, -129.4539, -185.1306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-158.3534, -143.5714, -190.7691, -129.4623, -185.2795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-158.2800, -143.7020, -191.2514, -129.3753, -185.3079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-158.2709, -143.8172, -191.7002, -129.2667, -185.3123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-158.2884, -143.9465, -192.1766, -129.2398, -185.4125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-158.3535, -144.1042, -192.7245, -129.2471, -185.5701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-158.4556, -144.2666, -193.3212, -129.2799, -185.7427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-158.5794, -144.4624, -193.9550, -129.3229, -185.9482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-158.8651, -144.6488, -194.4996, -129.5617, -186.3111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-159.1603, -144.8415, -195.0431, -129.7728, -186.6562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-159.4955, -145.0148, -195.5447, -130.0312, -187.0128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-159.9007, -145.2090, -196.0318, -130.3574, -187.4228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-160.3983, -145.3892, -196.5320, -130.7582, -187.9086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-160.8241, -145.5914, -197.0294, -131.1176, -188.3783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-161.2494, -145.7735, -197.5723, -131.4453, -188.8258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-161.6554, -145.9136, -198.0516, -131.7389, -189.2048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-162.1931, -146.0099, -198.5166, -132.1296, -189.6804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-162.8020, -146.0960, -199.0581, -132.5154, -190.2308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-163.5103, -146.1994, -199.6615, -132.9995, -190.9143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-164.1887, -146.2765, -200.1774, -133.5355, -191.5933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-164.8062, -146.3534, -200.7334, -134.0456, -192.2578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-165.3590, -146.4102, -201.2364, -134.5317, -192.9042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-165.9890, -146.4678, -201.7168, -135.0799, -193.5993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-166.5999, -146.5396, -202.2402, -135.6367, -194.3450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-167.1218, -146.6321, -202.7274, -136.0656, -194.9570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-167.5459, -146.6882, -203.3794, -136.3224, -195.4354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-167.9300, -146.7570, -204.0047, -136.5650, -195.8902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-168.2279, -146.8430, -204.7390, -136.7123, -196.2930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-168.5434, -146.9574, -205.4051, -136.9424, -196.7451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-168.9746, -147.1057, -206.1827, -137.2551, -197.3081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-169.3919, -147.2622, -207.0434, -137.5734, -197.8884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-169.7162, -147.4127, -207.8433, -137.8203, -198.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-169.9472, -147.5801, -208.7117, -138.0318, -198.7448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-170.0984, -147.7587, -209.5176, -138.1782, -199.0896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-170.2387, -147.9559, -210.3890, -138.3136, -199.4333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-170.3877, -148.1950, -211.2311, -138.4317, -199.7535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-170.5742, -148.4010, -211.9970, -138.5671, -200.0819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-170.9937, -148.6192, -212.7981, -138.9028, -200.6415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-171.2373, -148.8062, -213.6683, -139.1393, -201.0816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-171.5157, -148.9907, -214.4744, -139.4474, -201.5714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-171.7176, -149.1546, -215.2886, -139.7207, -201.9904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-171.9178, -149.2865, -215.9845, -140.0127, -202.3908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-172.1724, -149.4332, -216.6720, -140.3548, -202.8519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-172.4406, -149.5418, -217.3168, -140.7384, -203.3358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-172.7606, -149.6253, -217.8507, -141.1614, -203.8245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-172.9286, -149.7344, -218.3012, -141.5383, -204.1921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-173.2738, -149.8783, -218.8569, -142.0288, -204.7196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-173.6152, -150.0377, -219.4291, -142.4496, -205.1925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-173.9610, -150.1965, -219.9348, -142.8455, -205.6311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-174.3743, -150.3545, -220.4923, -143.2195, -206.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-174.9087, -150.5841, -221.1426, -143.6639, -206.6461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-175.5764, -150.8364, -221.8516, -144.2044, -207.3400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-176.2069, -151.0721, -222.4911, -144.7748, -208.0340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-176.8426, -151.2862, -223.1156, -145.3397, -208.7088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-177.5245, -151.4775, -223.7790, -145.9175, -209.4169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-178.1713, -151.6782, -224.3622, -146.5307, -210.1242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-178.7344, -151.8776, -224.9154, -147.0727, -210.7313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-179.2040, -152.0773, -225.5445, -147.5502, -211.2852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-179.6591, -152.2584, -226.0561, -148.0406, -211.8144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-180.2484, -152.4544, -226.6681, -148.6451, -212.4837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-180.7846, -152.6789, -227.3023, -149.2117, -213.1181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-181.4457, -152.9288, -227.9640, -149.7970, -213.7840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-182.0875, -153.1676, -228.6266, -150.3838, -214.4127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-182.8739, -153.3990, -229.3066, -151.0163, -215.1138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-183.5165, -153.6061, -229.9728, -151.5655, -215.7217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-183.9458, -153.7849, -230.6379, -151.9191, -216.1145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-184.3614, -153.9561, -231.2595, -152.2819, -216.5347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-184.9555, -154.1313, -232.0330, -152.7736, -217.1392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-185.4354, -154.2867, -232.8881, -153.2265, -217.7035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-185.7730, -154.4762, -233.7176, -153.4856, -218.0775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-186.0803, -154.6888, -234.6504, -153.6949, -218.4658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-186.4402, -154.8980, -235.7373, -153.9347, -218.9285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-186.8395, -155.1243, -236.8229, -154.2177, -219.4685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-187.1548, -155.3480, -237.8727, -154.5340, -220.0050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-187.4820, -155.5480, -238.8782, -154.9148, -220.5867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-187.9374, -155.7708, -239.8346, -155.4260, -221.3088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-188.2968, -155.9673, -240.7382, -155.8768, -221.9450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-188.6139, -156.1586, -241.6759, -156.2690, -222.5436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-188.9856, -156.3425, -242.6627, -156.7375, -223.2342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-189.3430, -156.4795, -243.5458, -157.2293, -223.9063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-189.6517, -156.5881, -244.3490, -157.6479, -224.4815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-190.0818, -156.7152, -245.1099, -158.2168, -225.2069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-190.4439, -156.8606, -245.9159, -158.7187, -225.8995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-190.7265, -157.0040, -246.6640, -159.2112, -226.5409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-190.9937, -157.1089, -247.4150, -159.6854, -227.1476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-191.2550, -157.2575, -248.2518, -160.1598, -227.7829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-191.5880, -157.4216, -249.1199, -160.6619, -228.4605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-192.0128, -157.5849, -250.0382, -161.2854, -229.2695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-192.5172, -157.7432, -250.9085, -161.9004, -230.0513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-192.9778, -157.8974, -251.6789, -162.4962, -230.7651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-193.4345, -158.0406, -252.4226, -163.1008, -231.4786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-193.8370, -158.1960, -253.0817, -163.6641, -232.1222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-194.1929, -158.3654, -253.6809, -164.1493, -232.7011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-194.5105, -158.5450, -254.3607, -164.5663, -233.1880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-194.8965, -158.7582, -255.0595, -165.0253, -233.7394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-195.1904, -158.9577, -255.7372, -165.3887, -234.1816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-195.6673, -159.1835, -256.4877, -165.7753, -234.7049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-196.1471, -159.3928, -257.4357, -166.1764, -235.2971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-196.6919, -159.5878, -258.4033, -166.6490, -235.9771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.2408, -159.7638, -259.3215, -167.1452, -236.6708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-197.7465, -159.9323, -260.2508, -167.6427, -237.3522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-198.1703, -160.1316, -261.1348, -168.1316, -238.0198],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_101343.csv
