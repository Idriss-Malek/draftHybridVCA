ng10303
==== Thu 25 Sep 2025 02:42:31 AM EDT | job 50148029 | node ng10303 ====
model= instance= sa_anneal=
SLURM_JOB_GPUS=0
CUDA_VISIBLE_DEVICES=0
0, GPU-0b2bfd75-f732-f5db-a1bb-569449c925c7, NVIDIA A100-SXM4-40GB
/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/tsp.py:49: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model_opt.load_state_dict(torch.load("/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/vca.pth", map_location=device), strict=True)
/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/tsp.py:62: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  heuristic_samples_idx = torch.load(heuristic_samples_file, map_location=device)
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(92.2238, device='cuda:0', dtype=torch.float64)
tensor([ -2.1389, -14.7753,  -7.2311, -14.5151,  -5.6866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(51.0726, device='cuda:0', dtype=torch.float64)
tensor([ -2.7892, -12.4428,  -7.6302, -11.9124, -16.9652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(88.3716, device='cuda:0', dtype=torch.float64)
tensor([ -3.6460,  -8.3052,  -6.7897, -14.4494, -21.3842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(100.0937, device='cuda:0', dtype=torch.float64)
tensor([ -2.7403,  -6.3201,  -5.2834, -14.0898, -15.8510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(78.4074, device='cuda:0', dtype=torch.float64)
tensor([ -2.6008,  -5.1422,  -3.8937, -10.7899, -11.0098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(33.7699, device='cuda:0', dtype=torch.float64)
tensor([ -2.6682,  -5.3868,  -3.2500,  -9.2477, -10.9433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(26.1896, device='cuda:0', dtype=torch.float64)
tensor([-2.7296, -5.8187, -3.1180, -7.6080, -9.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.5781, device='cuda:0', dtype=torch.float64)
tensor([-2.9413, -5.9838, -3.1081, -6.9738, -6.4748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.1157, device='cuda:0', dtype=torch.float64)
tensor([-2.9151, -5.3615, -3.0623, -7.2571, -5.7304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.9877, device='cuda:0', dtype=torch.float64)
tensor([-2.8189, -4.8746, -3.0044, -6.6856, -5.2207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.6253, device='cuda:0', dtype=torch.float64)
tensor([-2.9195, -5.6148, -3.0170, -6.8125, -4.9268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.4848, device='cuda:0', dtype=torch.float64)
tensor([-3.0354, -6.9222, -3.1248, -9.0224, -4.7818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.7666, device='cuda:0', dtype=torch.float64)
tensor([ -3.0889,  -7.6164,  -3.3922, -13.2102,  -4.7407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9914, device='cuda:0', dtype=torch.float64)
tensor([ -3.0347,  -7.2320,  -3.7459, -16.6180,  -4.7811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.7248, device='cuda:0', dtype=torch.float64)
tensor([ -2.8993,  -6.1208,  -4.0458, -18.0199,  -4.9899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7040, device='cuda:0', dtype=torch.float64)
tensor([ -2.8684,  -5.7733,  -4.4681, -19.7472,  -5.8223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7335, device='cuda:0', dtype=torch.float64)
tensor([ -2.9030,  -5.8697,  -5.0689, -21.8826,  -7.2525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6724, device='cuda:0', dtype=torch.float64)
tensor([ -2.9744,  -6.3851,  -5.9268, -24.3186,  -8.8876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7887, device='cuda:0', dtype=torch.float64)
tensor([ -3.0640,  -7.4271,  -7.1574, -27.0564, -10.5756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8001, device='cuda:0', dtype=torch.float64)
tensor([ -3.1868,  -8.9617,  -8.7139, -29.9571, -12.2593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5525, device='cuda:0', dtype=torch.float64)
tensor([ -3.3495, -10.8603, -10.4150, -32.8854, -13.9016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8128, device='cuda:0', dtype=torch.float64)
tensor([ -3.5449, -12.9624, -12.1300, -35.6971, -15.4705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8718, device='cuda:0', dtype=torch.float64)
tensor([ -3.7946, -15.1623, -13.9307, -38.2502, -16.9688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4337, device='cuda:0', dtype=torch.float64)
tensor([ -4.0864, -17.4227, -15.7500, -40.7093, -18.4408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6258, device='cuda:0', dtype=torch.float64)
tensor([ -4.4247, -19.5472, -17.6170, -42.8792, -19.8017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3775, device='cuda:0', dtype=torch.float64)
tensor([ -4.8194, -21.5956, -19.5226, -44.8493, -21.0953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4261, device='cuda:0', dtype=torch.float64)
tensor([ -5.2487, -23.5699, -21.5318, -46.6722, -22.3510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4082, device='cuda:0', dtype=torch.float64)
tensor([ -5.6993, -25.5210, -23.6427, -48.4044, -23.5571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2239, device='cuda:0', dtype=torch.float64)
tensor([ -6.1958, -27.3752, -25.7923, -49.9882, -24.6930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1959, device='cuda:0', dtype=torch.float64)
tensor([ -6.7228, -29.0918, -27.9193, -51.3967, -25.7600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2681, device='cuda:0', dtype=torch.float64)
tensor([ -7.2691, -30.6929, -29.8946, -52.6273, -26.7604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3506, device='cuda:0', dtype=torch.float64)
tensor([ -7.7875, -32.2420, -31.7365, -53.7501, -27.7042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4323, device='cuda:0', dtype=torch.float64)
tensor([ -8.2644, -33.7532, -33.3709, -54.8033, -28.5860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2900, device='cuda:0', dtype=torch.float64)
tensor([ -8.7132, -35.0965, -34.8303, -55.6974, -29.3690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9829, device='cuda:0', dtype=torch.float64)
tensor([ -9.1420, -36.3389, -36.1627, -56.5041, -30.0905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1774, device='cuda:0', dtype=torch.float64)
tensor([ -9.5535, -37.4656, -37.3497, -57.3166, -30.7525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1537, device='cuda:0', dtype=torch.float64)
tensor([ -9.9402, -38.6088, -38.4442, -58.2003, -31.3815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2057, device='cuda:0', dtype=torch.float64)
tensor([-10.2932, -39.6551, -39.4543, -58.9858, -31.9509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1991, device='cuda:0', dtype=torch.float64)
tensor([-10.6113, -40.6517, -40.3399, -59.8015, -32.4960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2010, device='cuda:0', dtype=torch.float64)
tensor([-10.9177, -41.5922, -41.1222, -60.6020, -33.0090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1091, device='cuda:0', dtype=torch.float64)
tensor([-11.2104, -42.4739, -41.8355, -61.3832, -33.4660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9128, device='cuda:0', dtype=torch.float64)
tensor([-11.4772, -43.1684, -42.4389, -62.0020, -33.8427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0277, device='cuda:0', dtype=torch.float64)
tensor([-11.7234, -43.8321, -43.0524, -62.5869, -34.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9584, device='cuda:0', dtype=torch.float64)
tensor([-11.9253, -44.4254, -43.5998, -63.1404, -34.4876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9881, device='cuda:0', dtype=torch.float64)
tensor([-12.0887, -44.9871, -44.0759, -63.7123, -34.7808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7692, device='cuda:0', dtype=torch.float64)
tensor([-12.2383, -45.4690, -44.4881, -64.1548, -35.0498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8475, device='cuda:0', dtype=torch.float64)
tensor([-12.3802, -45.8967, -44.8427, -64.5581, -35.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8254, device='cuda:0', dtype=torch.float64)
tensor([-12.5110, -46.1969, -45.0722, -64.7749, -35.3759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7682, device='cuda:0', dtype=torch.float64)
tensor([-12.6377, -46.4722, -45.2517, -65.0310, -35.4968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8479, device='cuda:0', dtype=torch.float64)
tensor([-12.7330, -46.6883, -45.3740, -65.2263, -35.5905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7151, device='cuda:0', dtype=torch.float64)
tensor([-12.8213, -46.8764, -45.4564, -65.4161, -35.6666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7910, device='cuda:0', dtype=torch.float64)
tensor([-12.8614, -46.9361, -45.4785, -65.4988, -35.6930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6850, device='cuda:0', dtype=torch.float64)
tensor([-12.8882, -46.9132, -45.4910, -65.4710, -35.6647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6643, device='cuda:0', dtype=torch.float64)
tensor([-12.9008, -46.8737, -45.4640, -65.4912, -35.6606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7627, device='cuda:0', dtype=torch.float64)
tensor([-12.9131, -46.7948, -45.4090, -65.4167, -35.6251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6072, device='cuda:0', dtype=torch.float64)
tensor([-12.9250, -46.7057, -45.4051, -65.2955, -35.5794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5046, device='cuda:0', dtype=torch.float64)
tensor([-12.9363, -46.6245, -45.4180, -65.1869, -35.5498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5251, device='cuda:0', dtype=torch.float64)
tensor([-12.9288, -46.5126, -45.3562, -65.0516, -35.5106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5181, device='cuda:0', dtype=torch.float64)
tensor([-12.9035, -46.4079, -45.2784, -65.0224, -35.5074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7318, device='cuda:0', dtype=torch.float64)
tensor([-12.8786, -46.3124, -45.2427, -65.0344, -35.4932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4128, device='cuda:0', dtype=torch.float64)
tensor([-12.8254, -46.2307, -45.2340, -65.0788, -35.5068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4277, device='cuda:0', dtype=torch.float64)
tensor([-12.7674, -46.0991, -45.1931, -65.1282, -35.5201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4398, device='cuda:0', dtype=torch.float64)
tensor([-12.7042, -45.9648, -45.1038, -65.1758, -35.5179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4454, device='cuda:0', dtype=torch.float64)
tensor([-12.6556, -45.7976, -44.9755, -65.1427, -35.4757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4225, device='cuda:0', dtype=torch.float64)
tensor([-12.6172, -45.6414, -44.8431, -65.1195, -35.4366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3928, device='cuda:0', dtype=torch.float64)
tensor([-12.5733, -45.5210, -44.7024, -65.1444, -35.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3361, device='cuda:0', dtype=torch.float64)
tensor([-12.5285, -45.4001, -44.5223, -65.1471, -35.4182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4029, device='cuda:0', dtype=torch.float64)
tensor([-12.4833, -45.2841, -44.2967, -65.1671, -35.4101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4048, device='cuda:0', dtype=torch.float64)
tensor([-12.4320, -45.1666, -44.0974, -65.2007, -35.4114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2971, device='cuda:0', dtype=torch.float64)
tensor([-12.3809, -45.0358, -43.9033, -65.1979, -35.4014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3360, device='cuda:0', dtype=torch.float64)
tensor([-12.3231, -44.9068, -43.7127, -65.1800, -35.3861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3478, device='cuda:0', dtype=torch.float64)
tensor([-12.2622, -44.7587, -43.4935, -65.1540, -35.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3764, device='cuda:0', dtype=torch.float64)
tensor([-12.2066, -44.6069, -43.2615, -65.1049, -35.3252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3320, device='cuda:0', dtype=torch.float64)
tensor([-12.1544, -44.4757, -43.0435, -65.0905, -35.2902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3683, device='cuda:0', dtype=torch.float64)
tensor([-12.0978, -44.3381, -42.8326, -65.0821, -35.2665], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_024328.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(107.6576, device='cuda:0', dtype=torch.float64)
tensor([ -2.0871, -13.2232,  -6.7416, -12.3715,  -5.4944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(58.1220, device='cuda:0', dtype=torch.float64)
tensor([ -2.8342, -10.8571,  -7.2389, -11.5325, -16.6661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(102.4212, device='cuda:0', dtype=torch.float64)
tensor([ -3.6549,  -7.2894,  -6.3027, -15.6320, -19.2904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(113.9723, device='cuda:0', dtype=torch.float64)
tensor([ -2.6449,  -5.6439,  -4.8371, -13.6314, -14.4179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(83.3734, device='cuda:0', dtype=torch.float64)
tensor([ -2.6097,  -4.8966,  -3.5395, -10.2884, -10.6648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(43.8962, device='cuda:0', dtype=torch.float64)
tensor([-2.5622, -5.1327, -3.0849, -7.5351, -8.5704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.7180, device='cuda:0', dtype=torch.float64)
tensor([-2.5992, -5.3609, -3.0032, -6.2358, -5.4855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.6574, device='cuda:0', dtype=torch.float64)
tensor([-2.6448, -5.0996, -2.9620, -6.8549, -5.0803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(41.6112, device='cuda:0', dtype=torch.float64)
tensor([-2.6418, -4.8962, -2.9316, -6.5560, -4.7786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.4386, device='cuda:0', dtype=torch.float64)
tensor([-2.6638, -5.6155, -2.9915, -7.7569, -4.5095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(30.9542, device='cuda:0', dtype=torch.float64)
tensor([ -2.6413,  -5.6940,  -3.2361, -11.9637,  -4.3849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.9872, device='cuda:0', dtype=torch.float64)
tensor([ -2.5477,  -4.8893,  -3.5805, -14.2370,  -4.4180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.6534, device='cuda:0', dtype=torch.float64)
tensor([ -2.3912,  -4.2122,  -3.8177, -13.1593,  -4.9235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.5312, device='cuda:0', dtype=torch.float64)
tensor([ -2.2104,  -3.7599,  -4.1488, -10.0385,  -5.2697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.8949, device='cuda:0', dtype=torch.float64)
tensor([-2.0790, -3.4277, -4.5788, -6.8078, -4.8032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.9682, device='cuda:0', dtype=torch.float64)
tensor([-2.0250, -3.2637, -4.5800, -4.6035, -4.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.2866, device='cuda:0', dtype=torch.float64)
tensor([-2.0318, -3.2375, -4.1971, -3.9640, -3.9017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.1888, device='cuda:0', dtype=torch.float64)
tensor([-2.0868, -3.2852, -3.7730, -3.7251, -3.8524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.3323, device='cuda:0', dtype=torch.float64)
tensor([-2.1677, -3.4174, -3.4961, -3.5768, -3.8352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.5273, device='cuda:0', dtype=torch.float64)
tensor([-2.2416, -3.6495, -3.3486, -3.4931, -3.8149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.3970, device='cuda:0', dtype=torch.float64)
tensor([-2.2893, -3.8296, -3.2759, -3.4779, -3.7990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.4333, device='cuda:0', dtype=torch.float64)
tensor([-2.2885, -3.7733, -3.2306, -3.4912, -3.7770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.9563, device='cuda:0', dtype=torch.float64)
tensor([-2.2439, -3.4865, -3.1956, -3.4924, -3.7388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.4965, device='cuda:0', dtype=torch.float64)
tensor([-2.1761, -3.1642, -3.1615, -3.5014, -3.6824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3233, device='cuda:0', dtype=torch.float64)
tensor([-2.1098, -2.9805, -3.1195, -3.5378, -3.6209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0435, device='cuda:0', dtype=torch.float64)
tensor([-2.0629, -2.9310, -3.0749, -3.5865, -3.5761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3684, device='cuda:0', dtype=torch.float64)
tensor([-2.0341, -2.9326, -3.0354, -3.6292, -3.5450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2011, device='cuda:0', dtype=torch.float64)
tensor([-2.0198, -2.9513, -2.9998, -3.6573, -3.5255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9758, device='cuda:0', dtype=torch.float64)
tensor([-2.0152, -2.9740, -2.9683, -3.6719, -3.5121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8582, device='cuda:0', dtype=torch.float64)
tensor([-2.0188, -2.9976, -2.9408, -3.6800, -3.5074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0312, device='cuda:0', dtype=torch.float64)
tensor([-2.0298, -3.0293, -2.9189, -3.7008, -3.5158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2975, device='cuda:0', dtype=torch.float64)
tensor([-2.0445, -3.0662, -2.9019, -3.7381, -3.5320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3031, device='cuda:0', dtype=torch.float64)
tensor([-2.0632, -3.1076, -2.8868, -3.7896, -3.5543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3329, device='cuda:0', dtype=torch.float64)
tensor([-2.0831, -3.1515, -2.8766, -3.8408, -3.5673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5490, device='cuda:0', dtype=torch.float64)
tensor([-2.1033, -3.1916, -2.8666, -3.8852, -3.5748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8775, device='cuda:0', dtype=torch.float64)
tensor([-2.1303, -3.2401, -2.8576, -3.9523, -3.5905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9680, device='cuda:0', dtype=torch.float64)
tensor([-2.1643, -3.2951, -2.8514, -4.0257, -3.6040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2845, device='cuda:0', dtype=torch.float64)
tensor([-2.2018, -3.3602, -2.8475, -4.1261, -3.6271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6361, device='cuda:0', dtype=torch.float64)
tensor([-2.2453, -3.4326, -2.8454, -4.2329, -3.6459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9366, device='cuda:0', dtype=torch.float64)
tensor([-2.2923, -3.5159, -2.8443, -4.3610, -3.6746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8650, device='cuda:0', dtype=torch.float64)
tensor([-2.3456, -3.6090, -2.8448, -4.4973, -3.6990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0264, device='cuda:0', dtype=torch.float64)
tensor([-2.4016, -3.7137, -2.8464, -4.6355, -3.7302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5590, device='cuda:0', dtype=torch.float64)
tensor([-2.4581, -3.8200, -2.8486, -4.7552, -3.7547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7788, device='cuda:0', dtype=torch.float64)
tensor([-2.5168, -3.9521, -2.8521, -4.9089, -3.7841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6138, device='cuda:0', dtype=torch.float64)
tensor([-2.5762, -4.1163, -2.8589, -5.0926, -3.8137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9787, device='cuda:0', dtype=torch.float64)
tensor([-2.6360, -4.3270, -2.8678, -5.3096, -3.8532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5399, device='cuda:0', dtype=torch.float64)
tensor([-2.6896, -4.5797, -2.8779, -5.5581, -3.9032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7853, device='cuda:0', dtype=torch.float64)
tensor([-2.7489, -4.8914, -2.8887, -5.8319, -3.9556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5656, device='cuda:0', dtype=torch.float64)
tensor([-2.8171, -5.2579, -2.8999, -6.1324, -4.0129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8187, device='cuda:0', dtype=torch.float64)
tensor([-2.8919, -5.6130, -2.9131, -6.4314, -4.0675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7787, device='cuda:0', dtype=torch.float64)
tensor([-2.9774, -5.9567, -2.9263, -6.6828, -4.1071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9969, device='cuda:0', dtype=torch.float64)
tensor([-3.0544, -6.3516, -2.9403, -6.9442, -4.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4247, device='cuda:0', dtype=torch.float64)
tensor([-3.1622, -6.7469, -2.9539, -7.1693, -4.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7393, device='cuda:0', dtype=torch.float64)
tensor([-3.2781, -7.0815, -2.9635, -7.3312, -4.1964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2321, device='cuda:0', dtype=torch.float64)
tensor([-3.3805, -7.3518, -2.9726, -7.4895, -4.2108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2768, device='cuda:0', dtype=torch.float64)
tensor([-3.4802, -7.6043, -2.9833, -7.6442, -4.2309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3857, device='cuda:0', dtype=torch.float64)
tensor([-3.5912, -7.8571, -2.9945, -7.8095, -4.2537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3771, device='cuda:0', dtype=torch.float64)
tensor([-3.7195, -8.0689, -3.0046, -7.9067, -4.2576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2854, device='cuda:0', dtype=torch.float64)
tensor([-3.8652, -8.2870, -3.0173, -7.9813, -4.2618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9313, device='cuda:0', dtype=torch.float64)
tensor([-4.0085, -8.4968, -3.0330, -8.0533, -4.2680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2661, device='cuda:0', dtype=torch.float64)
tensor([-4.1620, -8.7334, -3.0491, -8.1428, -4.2796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2912, device='cuda:0', dtype=torch.float64)
tensor([-4.3336, -9.0471, -3.0650, -8.2550, -4.3012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2623, device='cuda:0', dtype=torch.float64)
tensor([-4.5389, -9.3563, -3.0833, -8.3526, -4.3186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3309, device='cuda:0', dtype=torch.float64)
tensor([-4.7439, -9.6022, -3.1004, -8.4191, -4.3359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1409, device='cuda:0', dtype=torch.float64)
tensor([-4.9432, -9.8669, -3.1211, -8.5222, -4.3549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4983, device='cuda:0', dtype=torch.float64)
tensor([ -5.1381, -10.1117,  -3.1458,  -8.6093,  -4.3801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3921, device='cuda:0', dtype=torch.float64)
tensor([ -5.3573, -10.3748,  -3.1731,  -8.7229,  -4.4019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2669, device='cuda:0', dtype=torch.float64)
tensor([ -5.6004, -10.6283,  -3.2021,  -8.8247,  -4.4197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2558, device='cuda:0', dtype=torch.float64)
tensor([ -5.8964, -10.9153,  -3.2313,  -8.9482,  -4.4499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2166, device='cuda:0', dtype=torch.float64)
tensor([ -6.2152, -11.1699,  -3.2608,  -9.0344,  -4.4756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5249, device='cuda:0', dtype=torch.float64)
tensor([ -6.5309, -11.4577,  -3.2900,  -9.1746,  -4.5198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3613, device='cuda:0', dtype=torch.float64)
tensor([ -6.8348, -11.6996,  -3.3199,  -9.2897,  -4.5691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9180, device='cuda:0', dtype=torch.float64)
tensor([ -7.1614, -11.9459,  -3.3476,  -9.3987,  -4.6208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2628, device='cuda:0', dtype=torch.float64)
tensor([ -7.4675, -12.2480,  -3.3773,  -9.5730,  -4.6801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1348, device='cuda:0', dtype=torch.float64)
tensor([ -7.7518, -12.5088,  -3.4091,  -9.7565,  -4.7457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2567, device='cuda:0', dtype=torch.float64)
tensor([ -8.0581, -12.7220,  -3.4429,  -9.9228,  -4.8114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3298, device='cuda:0', dtype=torch.float64)
tensor([ -8.3874, -12.9034,  -3.4772, -10.0650,  -4.8744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0189, device='cuda:0', dtype=torch.float64)
tensor([ -8.7239, -13.0795,  -3.5164, -10.1923,  -4.9256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1086, device='cuda:0', dtype=torch.float64)
tensor([ -9.0860, -13.1753,  -3.5597, -10.2834,  -4.9942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8810, device='cuda:0', dtype=torch.float64)
tensor([ -9.4132, -13.2816,  -3.6021, -10.3641,  -5.0637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2133, device='cuda:0', dtype=torch.float64)
tensor([ -9.7122, -13.3663,  -3.6468, -10.4476,  -5.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0977, device='cuda:0', dtype=torch.float64)
tensor([ -9.9049, -13.4749,  -3.6898, -10.5856,  -5.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0840, device='cuda:0', dtype=torch.float64)
tensor([-10.0331, -13.5686,  -3.7301, -10.7310,  -5.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9690, device='cuda:0', dtype=torch.float64)
tensor([-10.1664, -13.6703,  -3.7710, -10.8820,  -5.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2047, device='cuda:0', dtype=torch.float64)
tensor([-10.3323, -13.7934,  -3.8144, -11.0075,  -5.2593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1287, device='cuda:0', dtype=torch.float64)
tensor([-10.4487, -13.8775,  -3.8675, -11.1187,  -5.2864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0391, device='cuda:0', dtype=torch.float64)
tensor([-10.4879, -13.9965,  -3.9134, -11.2261,  -5.3097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1388, device='cuda:0', dtype=torch.float64)
tensor([-10.4934, -14.1002,  -3.9535, -11.3537,  -5.3403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0774, device='cuda:0', dtype=torch.float64)
tensor([-10.4906, -14.1947,  -4.0058, -11.5135,  -5.3842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8591, device='cuda:0', dtype=torch.float64)
tensor([-10.4720, -14.2572,  -4.0552, -11.6327,  -5.4191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8495, device='cuda:0', dtype=torch.float64)
tensor([-10.4214, -14.2847,  -4.0992, -11.7437,  -5.4452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7829, device='cuda:0', dtype=torch.float64)
tensor([-10.4429, -14.3309,  -4.1516, -11.8305,  -5.4661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7787, device='cuda:0', dtype=torch.float64)
tensor([-10.4627, -14.3545,  -4.1981, -11.9054,  -5.4709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9089, device='cuda:0', dtype=torch.float64)
tensor([-10.4112, -14.3362,  -4.2467, -11.9935,  -5.4824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9074, device='cuda:0', dtype=torch.float64)
tensor([-10.3816, -14.2903,  -4.2866, -12.0804,  -5.4938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8547, device='cuda:0', dtype=torch.float64)
tensor([-10.3253, -14.2413,  -4.3194, -12.1705,  -5.5018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8382, device='cuda:0', dtype=torch.float64)
tensor([-10.3479, -14.2212,  -4.3493, -12.2604,  -5.5195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0909, device='cuda:0', dtype=torch.float64)
tensor([-10.4031, -14.2186,  -4.3883, -12.3847,  -5.5468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7351, device='cuda:0', dtype=torch.float64)
tensor([-10.3959, -14.2798,  -4.4145, -12.5425,  -5.5777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8908, device='cuda:0', dtype=torch.float64)
tensor([-10.3917, -14.3352,  -4.4337, -12.6828,  -5.5942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7335, device='cuda:0', dtype=torch.float64)
tensor([-10.3483, -14.3534,  -4.4588, -12.8179,  -5.6167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6313, device='cuda:0', dtype=torch.float64)
tensor([-10.3035, -14.3801,  -4.4811, -12.9637,  -5.6361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6183, device='cuda:0', dtype=torch.float64)
tensor([-10.2335, -14.3996,  -4.5044, -13.1042,  -5.6568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7495, device='cuda:0', dtype=torch.float64)
tensor([-10.1214, -14.4100,  -4.5253, -13.2558,  -5.6895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7632, device='cuda:0', dtype=torch.float64)
tensor([-10.0305, -14.4223,  -4.5552, -13.4052,  -5.7277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8007, device='cuda:0', dtype=torch.float64)
tensor([ -9.9035, -14.3917,  -4.5864, -13.5664,  -5.7824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7315, device='cuda:0', dtype=torch.float64)
tensor([ -9.7812, -14.4220,  -4.6168, -13.7683,  -5.8585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7104, device='cuda:0', dtype=torch.float64)
tensor([ -9.7160, -14.4225,  -4.6602, -13.9635,  -5.9316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7840, device='cuda:0', dtype=torch.float64)
tensor([ -9.6580, -14.4192,  -4.7031, -14.1314,  -5.9925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6018, device='cuda:0', dtype=torch.float64)
tensor([ -9.5912, -14.4167,  -4.7426, -14.2541,  -6.0504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5791, device='cuda:0', dtype=torch.float64)
tensor([ -9.5228, -14.4192,  -4.7841, -14.3469,  -6.1062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5483, device='cuda:0', dtype=torch.float64)
tensor([ -9.4705, -14.4447,  -4.8251, -14.4341,  -6.1577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6525, device='cuda:0', dtype=torch.float64)
tensor([ -9.4370, -14.4488,  -4.8674, -14.5067,  -6.2075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6866, device='cuda:0', dtype=torch.float64)
tensor([ -9.3966, -14.4670,  -4.9110, -14.6022,  -6.2701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6727, device='cuda:0', dtype=torch.float64)
tensor([ -9.3369, -14.4518,  -4.9553, -14.6914,  -6.3208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5945, device='cuda:0', dtype=torch.float64)
tensor([ -9.3217, -14.4786,  -4.9981, -14.7942,  -6.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4838, device='cuda:0', dtype=torch.float64)
tensor([ -9.3481, -14.5078,  -5.0409, -14.8426,  -6.3887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4811, device='cuda:0', dtype=torch.float64)
tensor([ -9.3968, -14.4942,  -5.0885, -14.8610,  -6.4082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5715, device='cuda:0', dtype=torch.float64)
tensor([ -9.4233, -14.4627,  -5.1298, -14.8624,  -6.4234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6385, device='cuda:0', dtype=torch.float64)
tensor([ -9.4501, -14.4156,  -5.1598, -14.7967,  -6.4229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5411, device='cuda:0', dtype=torch.float64)
tensor([ -9.4597, -14.3968,  -5.1797, -14.7525,  -6.4206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5088, device='cuda:0', dtype=torch.float64)
tensor([ -9.4798, -14.3635,  -5.2035, -14.6830,  -6.4163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4582, device='cuda:0', dtype=torch.float64)
tensor([ -9.4784, -14.3250,  -5.2161, -14.6217,  -6.4096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4171, device='cuda:0', dtype=torch.float64)
tensor([ -9.4831, -14.2561,  -5.2308, -14.5385,  -6.3885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5354, device='cuda:0', dtype=torch.float64)
tensor([ -9.5094, -14.2159,  -5.2440, -14.4501,  -6.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4682, device='cuda:0', dtype=torch.float64)
tensor([ -9.5332, -14.1316,  -5.2504, -14.3089,  -6.3252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4541, device='cuda:0', dtype=torch.float64)
tensor([ -9.5478, -14.0191,  -5.2564, -14.1508,  -6.2828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4884, device='cuda:0', dtype=torch.float64)
tensor([ -9.5428, -13.8849,  -5.2628, -13.9680,  -6.2440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5394, device='cuda:0', dtype=torch.float64)
tensor([ -9.5647, -13.7338,  -5.2769, -13.7701,  -6.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4571, device='cuda:0', dtype=torch.float64)
tensor([ -9.5766, -13.6222,  -5.2888, -13.6165,  -6.1846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4728, device='cuda:0', dtype=torch.float64)
tensor([ -9.5721, -13.5239,  -5.2887, -13.4899,  -6.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4146, device='cuda:0', dtype=torch.float64)
tensor([ -9.5640, -13.4443,  -5.2874, -13.3761,  -6.1488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4798, device='cuda:0', dtype=torch.float64)
tensor([ -9.5687, -13.3755,  -5.2841, -13.2646,  -6.1333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4145, device='cuda:0', dtype=torch.float64)
tensor([ -9.5884, -13.3260,  -5.2763, -13.1320,  -6.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4428, device='cuda:0', dtype=torch.float64)
tensor([ -9.5977, -13.2567,  -5.2657, -12.9665,  -6.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3632, device='cuda:0', dtype=torch.float64)
tensor([ -9.6186, -13.1710,  -5.2648, -12.7937,  -6.0540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3952, device='cuda:0', dtype=torch.float64)
tensor([ -9.6146, -13.0720,  -5.2585, -12.6446,  -6.0328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3734, device='cuda:0', dtype=torch.float64)
tensor([ -9.6094, -12.9798,  -5.2510, -12.5019,  -6.0083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3548, device='cuda:0', dtype=torch.float64)
tensor([ -9.5974, -12.8804,  -5.2440, -12.3478,  -5.9809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3779, device='cuda:0', dtype=torch.float64)
tensor([ -9.5978, -12.7926,  -5.2405, -12.2049,  -5.9600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4048, device='cuda:0', dtype=torch.float64)
tensor([ -9.5955, -12.7141,  -5.2339, -12.0689,  -5.9384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3421, device='cuda:0', dtype=torch.float64)
tensor([ -9.5985, -12.6404,  -5.2239, -11.9264,  -5.9122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3096, device='cuda:0', dtype=torch.float64)
tensor([ -9.5990, -12.5614,  -5.2136, -11.7790,  -5.8833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3190, device='cuda:0', dtype=torch.float64)
tensor([ -9.5931, -12.4917,  -5.2042, -11.6336,  -5.8517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3444, device='cuda:0', dtype=torch.float64)
tensor([ -9.5621, -12.3941,  -5.1925, -11.4848,  -5.8225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3028, device='cuda:0', dtype=torch.float64)
tensor([ -9.5338, -12.3022,  -5.1808, -11.3463,  -5.8000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3618, device='cuda:0', dtype=torch.float64)
tensor([ -9.5190, -12.2166,  -5.1672, -11.2056,  -5.7762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2806, device='cuda:0', dtype=torch.float64)
tensor([ -9.4883, -12.1317,  -5.1533, -11.0724,  -5.7525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3042, device='cuda:0', dtype=torch.float64)
tensor([ -9.4582, -12.0488,  -5.1414, -10.9474,  -5.7365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3718, device='cuda:0', dtype=torch.float64)
tensor([ -9.4262, -11.9530,  -5.1274, -10.8115,  -5.7224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3186, device='cuda:0', dtype=torch.float64)
tensor([ -9.4042, -11.8489,  -5.1221, -10.6861,  -5.7075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3237, device='cuda:0', dtype=torch.float64)
tensor([ -9.3826, -11.7460,  -5.1127, -10.5524,  -5.6969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3096, device='cuda:0', dtype=torch.float64)
tensor([ -9.3408, -11.6343,  -5.0957, -10.4144,  -5.6804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3690, device='cuda:0', dtype=torch.float64)
tensor([ -9.3148, -11.5313,  -5.0771, -10.2849,  -5.6641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3631, device='cuda:0', dtype=torch.float64)
tensor([ -9.2840, -11.4042,  -5.0566, -10.1395,  -5.6436], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_024328.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(115.3766, device='cuda:0', dtype=torch.float64)
tensor([ -2.0671, -12.5693,  -6.5528, -11.4337,  -5.4629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(61.6991, device='cuda:0', dtype=torch.float64)
tensor([ -2.8677, -10.2376,  -7.0935, -11.6572, -16.5451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(109.9167, device='cuda:0', dtype=torch.float64)
tensor([ -3.6426,  -6.9216,  -6.1183, -16.1166, -18.5029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(120.5744, device='cuda:0', dtype=torch.float64)
tensor([ -2.6354,  -5.3781,  -4.6545, -13.3911, -13.8612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(85.3089, device='cuda:0', dtype=torch.float64)
tensor([ -2.6030,  -4.8289,  -3.4186, -10.0346, -10.6217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(48.3056, device='cuda:0', dtype=torch.float64)
tensor([-2.5241, -5.0008, -3.0370, -6.8565, -7.2984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.5491, device='cuda:0', dtype=torch.float64)
tensor([-2.5539, -5.1900, -2.9655, -6.3063, -5.0074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(44.4913, device='cuda:0', dtype=torch.float64)
tensor([-2.5742, -4.8889, -2.9193, -6.6960, -4.8104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(47.1312, device='cuda:0', dtype=torch.float64)
tensor([-2.5979, -5.1605, -2.9252, -6.8970, -4.5524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.5752, device='cuda:0', dtype=torch.float64)
tensor([ -2.6051,  -5.6709,  -3.0857, -10.3260,  -4.3698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.8334, device='cuda:0', dtype=torch.float64)
tensor([ -2.5265,  -4.9146,  -3.4133, -13.4504,  -4.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(33.4273, device='cuda:0', dtype=torch.float64)
tensor([ -2.3742,  -4.1403,  -3.6760, -12.7237,  -4.6040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(26.3955, device='cuda:0', dtype=torch.float64)
tensor([-2.1910, -3.6578, -4.0081, -9.6670, -5.0576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.7131, device='cuda:0', dtype=torch.float64)
tensor([-2.0547, -3.3263, -4.4980, -6.3079, -4.6691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.0715, device='cuda:0', dtype=torch.float64)
tensor([-2.0047, -3.1713, -4.3724, -4.2537, -4.0205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.1241, device='cuda:0', dtype=torch.float64)
tensor([-2.0327, -3.1720, -3.8911, -3.7944, -3.8374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3431, device='cuda:0', dtype=torch.float64)
tensor([-2.1118, -3.2483, -3.5139, -3.5876, -3.8058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.5327, device='cuda:0', dtype=torch.float64)
tensor([-2.1963, -3.4943, -3.3190, -3.4765, -3.7835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.1830, device='cuda:0', dtype=torch.float64)
tensor([-2.2290, -3.7281, -3.2258, -3.4646, -3.7590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.3282, device='cuda:0', dtype=torch.float64)
tensor([-2.1808, -3.5593, -3.1724, -3.4759, -3.7152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.5713, device='cuda:0', dtype=torch.float64)
tensor([-2.0898, -3.1706, -3.1299, -3.4830, -3.6464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.2179, device='cuda:0', dtype=torch.float64)
tensor([-2.0051, -2.9386, -3.0837, -3.5317, -3.5675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.9875, device='cuda:0', dtype=torch.float64)
tensor([-1.9505, -2.8887, -3.0292, -3.5899, -3.5042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.4550, device='cuda:0', dtype=torch.float64)
tensor([-1.9254, -2.9010, -2.9722, -3.6231, -3.4708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.5451, device='cuda:0', dtype=torch.float64)
tensor([-1.9192, -2.9319, -2.9245, -3.6549, -3.4676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9163, device='cuda:0', dtype=torch.float64)
tensor([-1.9227, -2.9792, -2.8887, -3.7201, -3.4831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3961, device='cuda:0', dtype=torch.float64)
tensor([-1.9308, -3.0336, -2.8653, -3.8072, -3.4869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.7084, device='cuda:0', dtype=torch.float64)
tensor([-1.9444, -3.0852, -2.8483, -3.8600, -3.4678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.9544, device='cuda:0', dtype=torch.float64)
tensor([-1.9562, -3.1175, -2.8343, -3.8494, -3.4404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.6882, device='cuda:0', dtype=torch.float64)
tensor([-1.9511, -3.1165, -2.8235, -3.7909, -3.4225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5965, device='cuda:0', dtype=torch.float64)
tensor([-1.9270, -3.0882, -2.8160, -3.7241, -3.4181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1439, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -3.0468, -2.8131, -3.6673, -3.4222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6655, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -3.0038, -2.8132, -3.6282, -3.4357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0978, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.9659, -2.8166, -3.6058, -3.4559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7560, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.9364, -2.8219, -3.5962, -3.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2350, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.9155, -2.8295, -3.5931, -3.5078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0613, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.8996, -2.8375, -3.5963, -3.5322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0990, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.8796, -2.8455, -3.6010, -3.5503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2232, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.8537, -2.8516, -3.6042, -3.5586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1814, device='cuda:0', dtype=torch.float64)
tensor([-1.8643, -2.8288, -2.8535, -3.6050, -3.5548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9571, device='cuda:0', dtype=torch.float64)
tensor([-1.8771, -2.8132, -2.8511, -3.6046, -3.5403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1358, device='cuda:0', dtype=torch.float64)
tensor([-1.8900, -2.8048, -2.8452, -3.6005, -3.5171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8943, device='cuda:0', dtype=torch.float64)
tensor([-1.9028, -2.8026, -2.8362, -3.5963, -3.4879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7465, device='cuda:0', dtype=torch.float64)
tensor([-1.9162, -2.8057, -2.8252, -3.5912, -3.4571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8721, device='cuda:0', dtype=torch.float64)
tensor([-1.9295, -2.8139, -2.8124, -3.5814, -3.4272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3830, device='cuda:0', dtype=torch.float64)
tensor([-1.9410, -2.8233, -2.8005, -3.5719, -3.4000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1841, device='cuda:0', dtype=torch.float64)
tensor([-1.9514, -2.8348, -2.7878, -3.5639, -3.3737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0489, device='cuda:0', dtype=torch.float64)
tensor([-1.9618, -2.8471, -2.7749, -3.5527, -3.3493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9693, device='cuda:0', dtype=torch.float64)
tensor([-1.9720, -2.8600, -2.7611, -3.5398, -3.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1837, device='cuda:0', dtype=torch.float64)
tensor([-1.9802, -2.8716, -2.7490, -3.5255, -3.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2946, device='cuda:0', dtype=torch.float64)
tensor([-1.9875, -2.8796, -2.7410, -3.5141, -3.2955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1876, device='cuda:0', dtype=torch.float64)
tensor([-1.9949, -2.8874, -2.7342, -3.5063, -3.2862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8712, device='cuda:0', dtype=torch.float64)
tensor([-2.0039, -2.8968, -2.7286, -3.4994, -3.2819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9013, device='cuda:0', dtype=torch.float64)
tensor([-2.0134, -2.9080, -2.7242, -3.4913, -3.2799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0013, device='cuda:0', dtype=torch.float64)
tensor([-2.0223, -2.9183, -2.7211, -3.4816, -3.2801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9449, device='cuda:0', dtype=torch.float64)
tensor([-2.0313, -2.9314, -2.7176, -3.4680, -3.2842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8552, device='cuda:0', dtype=torch.float64)
tensor([-2.0406, -2.9449, -2.7161, -3.4526, -3.2916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7598, device='cuda:0', dtype=torch.float64)
tensor([-2.0502, -2.9594, -2.7154, -3.4395, -3.3000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6380, device='cuda:0', dtype=torch.float64)
tensor([-2.0585, -2.9723, -2.7173, -3.4283, -3.3089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9333, device='cuda:0', dtype=torch.float64)
tensor([-2.0668, -2.9844, -2.7213, -3.4195, -3.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0287, device='cuda:0', dtype=torch.float64)
tensor([-2.0751, -2.9963, -2.7258, -3.4118, -3.3275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5061, device='cuda:0', dtype=torch.float64)
tensor([-2.0872, -3.0142, -2.7294, -3.4014, -3.3388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1959, device='cuda:0', dtype=torch.float64)
tensor([-2.0996, -3.0316, -2.7335, -3.3925, -3.3496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9880, device='cuda:0', dtype=torch.float64)
tensor([-2.1131, -3.0487, -2.7375, -3.3859, -3.3609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9755, device='cuda:0', dtype=torch.float64)
tensor([-2.1248, -3.0632, -2.7430, -3.3802, -3.3723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8428, device='cuda:0', dtype=torch.float64)
tensor([-2.1368, -3.0749, -2.7485, -3.3759, -3.3834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9636, device='cuda:0', dtype=torch.float64)
tensor([-2.1486, -3.0872, -2.7548, -3.3720, -3.3956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0534, device='cuda:0', dtype=torch.float64)
tensor([-2.1628, -3.0987, -2.7589, -3.3670, -3.4082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9844, device='cuda:0', dtype=torch.float64)
tensor([-2.1782, -3.1075, -2.7633, -3.3635, -3.4222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7888, device='cuda:0', dtype=torch.float64)
tensor([-2.1932, -3.1152, -2.7683, -3.3611, -3.4359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0853, device='cuda:0', dtype=torch.float64)
tensor([-2.2137, -3.1247, -2.7735, -3.3592, -3.4533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0925, device='cuda:0', dtype=torch.float64)
tensor([-2.2370, -3.1399, -2.7780, -3.3607, -3.4747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7450, device='cuda:0', dtype=torch.float64)
tensor([-2.2593, -3.1565, -2.7834, -3.3641, -3.4945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9337, device='cuda:0', dtype=torch.float64)
tensor([-2.2810, -3.1763, -2.7885, -3.3682, -3.5150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8826, device='cuda:0', dtype=torch.float64)
tensor([-2.3034, -3.1984, -2.7916, -3.3715, -3.5365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8328, device='cuda:0', dtype=torch.float64)
tensor([-2.3267, -3.2186, -2.7955, -3.3791, -3.5576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8395, device='cuda:0', dtype=torch.float64)
tensor([-2.3525, -3.2435, -2.7990, -3.3888, -3.5782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9530, device='cuda:0', dtype=torch.float64)
tensor([-2.3814, -3.2721, -2.8023, -3.3990, -3.5989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6538, device='cuda:0', dtype=torch.float64)
tensor([-2.4151, -3.3008, -2.8057, -3.4074, -3.6247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2195, device='cuda:0', dtype=torch.float64)
tensor([-2.4523, -3.3319, -2.8095, -3.4246, -3.6520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0547, device='cuda:0', dtype=torch.float64)
tensor([-2.4913, -3.3692, -2.8144, -3.4449, -3.6836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6381, device='cuda:0', dtype=torch.float64)
tensor([-2.5327, -3.4090, -2.8205, -3.4726, -3.7166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0561, device='cuda:0', dtype=torch.float64)
tensor([-2.5746, -3.4497, -2.8300, -3.5035, -3.7516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9703, device='cuda:0', dtype=torch.float64)
tensor([-2.6189, -3.4920, -2.8410, -3.5376, -3.7892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8754, device='cuda:0', dtype=torch.float64)
tensor([-2.6665, -3.5423, -2.8528, -3.5747, -3.8272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9126, device='cuda:0', dtype=torch.float64)
tensor([-2.7155, -3.5918, -2.8658, -3.6094, -3.8697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7549, device='cuda:0', dtype=torch.float64)
tensor([-2.7641, -3.6435, -2.8776, -3.6500, -3.9126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4010, device='cuda:0', dtype=torch.float64)
tensor([-2.8151, -3.6954, -2.8939, -3.7037, -3.9610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9680, device='cuda:0', dtype=torch.float64)
tensor([-2.8657, -3.7488, -2.9117, -3.7637, -4.0156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8272, device='cuda:0', dtype=torch.float64)
tensor([-2.9207, -3.8105, -2.9277, -3.8244, -4.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6696, device='cuda:0', dtype=torch.float64)
tensor([-2.9789, -3.8824, -2.9445, -3.8867, -4.1276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4908, device='cuda:0', dtype=torch.float64)
tensor([-3.0366, -3.9533, -2.9644, -3.9573, -4.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7785, device='cuda:0', dtype=torch.float64)
tensor([-3.0965, -4.0357, -2.9895, -4.0496, -4.2429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5981, device='cuda:0', dtype=torch.float64)
tensor([-3.1585, -4.1224, -3.0217, -4.1661, -4.3223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9019, device='cuda:0', dtype=torch.float64)
tensor([-3.2171, -4.2089, -3.0508, -4.2742, -4.3895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8770, device='cuda:0', dtype=torch.float64)
tensor([-3.2729, -4.3005, -3.0847, -4.3908, -4.4772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5700, device='cuda:0', dtype=torch.float64)
tensor([-3.3322, -4.3960, -3.1248, -4.5468, -4.5866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5339, device='cuda:0', dtype=torch.float64)
tensor([-3.3875, -4.4903, -3.1636, -4.6911, -4.6951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8796, device='cuda:0', dtype=torch.float64)
tensor([-3.4453, -4.6080, -3.2034, -4.8481, -4.7975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6554, device='cuda:0', dtype=torch.float64)
tensor([-3.5039, -4.7331, -3.2342, -4.9867, -4.9163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8103, device='cuda:0', dtype=torch.float64)
tensor([-3.5618, -4.8660, -3.2674, -5.1247, -5.0422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6667, device='cuda:0', dtype=torch.float64)
tensor([-3.6204, -5.0093, -3.3119, -5.3036, -5.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2285, device='cuda:0', dtype=torch.float64)
tensor([-3.6757, -5.1630, -3.3617, -5.4883, -5.3456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8115, device='cuda:0', dtype=torch.float64)
tensor([-3.7317, -5.3253, -3.4188, -5.7022, -5.5138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3834, device='cuda:0', dtype=torch.float64)
tensor([-3.7861, -5.4888, -3.4783, -5.9370, -5.6997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3180, device='cuda:0', dtype=torch.float64)
tensor([-3.8387, -5.6635, -3.5400, -6.1789, -5.9063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3804, device='cuda:0', dtype=torch.float64)
tensor([-3.8861, -5.8398, -3.6054, -6.4185, -6.1217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4895, device='cuda:0', dtype=torch.float64)
tensor([-3.9304, -6.0101, -3.6693, -6.6403, -6.3726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3295, device='cuda:0', dtype=torch.float64)
tensor([-3.9736, -6.2098, -3.7360, -6.8845, -6.6506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3929, device='cuda:0', dtype=torch.float64)
tensor([-4.0143, -6.4083, -3.8077, -7.1328, -6.9617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3724, device='cuda:0', dtype=torch.float64)
tensor([-4.0570, -6.6215, -3.8892, -7.3985, -7.3089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5582, device='cuda:0', dtype=torch.float64)
tensor([-4.0984, -6.8351, -3.9954, -7.7076, -7.7018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5817, device='cuda:0', dtype=torch.float64)
tensor([-4.1375, -7.0140, -4.1165, -8.0330, -8.0391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4545, device='cuda:0', dtype=torch.float64)
tensor([-4.1736, -7.1790, -4.2373, -8.3152, -8.3407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3251, device='cuda:0', dtype=torch.float64)
tensor([-4.2073, -7.3621, -4.3501, -8.5650, -8.5467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6327, device='cuda:0', dtype=torch.float64)
tensor([-4.2395, -7.5476, -4.4865, -8.7942, -8.7450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4808, device='cuda:0', dtype=torch.float64)
tensor([-4.2722, -7.7338, -4.6145, -9.0088, -9.0360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3482, device='cuda:0', dtype=torch.float64)
tensor([-4.3050, -7.8866, -4.7382, -9.1954, -9.2943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5524, device='cuda:0', dtype=torch.float64)
tensor([-4.3386, -8.0018, -4.8743, -9.4315, -9.5230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4146, device='cuda:0', dtype=torch.float64)
tensor([-4.3741, -8.0955, -4.9935, -9.6688, -9.7914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1893, device='cuda:0', dtype=torch.float64)
tensor([ -4.4056,  -8.1657,  -5.1158,  -9.8940, -10.0587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8767, device='cuda:0', dtype=torch.float64)
tensor([ -4.4357,  -8.2438,  -5.2242, -10.1359, -10.3734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1821, device='cuda:0', dtype=torch.float64)
tensor([ -4.4661,  -8.3030,  -5.3266, -10.4242, -10.7403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4559, device='cuda:0', dtype=torch.float64)
tensor([ -4.4972,  -8.3542,  -5.4151, -10.7196, -11.0966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3409, device='cuda:0', dtype=torch.float64)
tensor([ -4.5296,  -8.3963,  -5.4989, -11.0294, -11.4483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1507, device='cuda:0', dtype=torch.float64)
tensor([ -4.5614,  -8.4202,  -5.5852, -11.3095, -11.7335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5490, device='cuda:0', dtype=torch.float64)
tensor([ -4.5898,  -8.4259,  -5.6525, -11.5215, -11.9608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2370, device='cuda:0', dtype=torch.float64)
tensor([ -4.6190,  -8.4501,  -5.7157, -11.7207, -12.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5048, device='cuda:0', dtype=torch.float64)
tensor([ -4.6473,  -8.4945,  -5.8100, -12.0573, -12.4406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4520, device='cuda:0', dtype=torch.float64)
tensor([ -4.6710,  -8.5509,  -5.8769, -12.2898, -12.6542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2659, device='cuda:0', dtype=torch.float64)
tensor([ -4.6935,  -8.5804,  -5.9430, -12.4636, -12.7347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4942, device='cuda:0', dtype=torch.float64)
tensor([ -4.7141,  -8.5627,  -6.0408, -12.6992, -12.6954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6099, device='cuda:0', dtype=torch.float64)
tensor([ -4.7344,  -8.5302,  -6.1254, -12.8971, -12.6526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1987, device='cuda:0', dtype=torch.float64)
tensor([ -4.7548,  -8.5123,  -6.2112, -13.0407, -12.6167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2551, device='cuda:0', dtype=torch.float64)
tensor([ -4.7782,  -8.4733,  -6.2884, -13.2410, -12.6007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4047, device='cuda:0', dtype=torch.float64)
tensor([ -4.7959,  -8.4520,  -6.3368, -13.3530, -12.5604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1429, device='cuda:0', dtype=torch.float64)
tensor([ -4.8113,  -8.4303,  -6.3741, -13.4137, -12.4526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4008, device='cuda:0', dtype=torch.float64)
tensor([ -4.8263,  -8.4230,  -6.3704, -13.4606, -12.4920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1258, device='cuda:0', dtype=torch.float64)
tensor([ -4.8425,  -8.3990,  -6.3758, -13.5827, -12.6335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2747, device='cuda:0', dtype=torch.float64)
tensor([ -4.8560,  -8.3699,  -6.3492, -13.6079, -12.7562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0148, device='cuda:0', dtype=torch.float64)
tensor([ -4.8718,  -8.3515,  -6.3248, -13.6640, -12.8842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3317, device='cuda:0', dtype=torch.float64)
tensor([ -4.8799,  -8.3226,  -6.2832, -13.6455, -13.0009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3550, device='cuda:0', dtype=torch.float64)
tensor([ -4.8834,  -8.2895,  -6.2330, -13.5853, -13.0436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4386, device='cuda:0', dtype=torch.float64)
tensor([ -4.8858,  -8.2681,  -6.1583, -13.4282, -12.9917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1025, device='cuda:0', dtype=torch.float64)
tensor([ -4.8869,  -8.2297,  -6.0714, -13.2670, -12.9775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1941, device='cuda:0', dtype=torch.float64)
tensor([ -4.8868,  -8.1914,  -5.9747, -13.0319, -12.9225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1019, device='cuda:0', dtype=torch.float64)
tensor([ -4.8893,  -8.1664,  -5.8858, -12.8215, -12.9175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0987, device='cuda:0', dtype=torch.float64)
tensor([ -4.8959,  -8.1462,  -5.8277, -12.6647, -12.9118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3646, device='cuda:0', dtype=torch.float64)
tensor([ -4.8986,  -8.0993,  -5.7437, -12.4430, -12.8360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0151, device='cuda:0', dtype=torch.float64)
tensor([ -4.9033,  -8.0480,  -5.6543, -12.2428, -12.7420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3311, device='cuda:0', dtype=torch.float64)
tensor([ -4.9117,  -7.9978,  -5.5834, -12.1341, -12.7294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1353, device='cuda:0', dtype=torch.float64)
tensor([ -4.9193,  -7.9552,  -5.5266, -12.0209, -12.6683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2468, device='cuda:0', dtype=torch.float64)
tensor([ -4.9242,  -7.9207,  -5.5038, -11.9893, -12.6926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0741, device='cuda:0', dtype=torch.float64)
tensor([ -4.9305,  -7.8823,  -5.4869, -11.9763, -12.7527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([ -4.9322,  -7.8600,  -5.4698, -11.9344, -12.7205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1637, device='cuda:0', dtype=torch.float64)
tensor([ -4.9281,  -7.8175,  -5.4300, -11.8220, -12.7031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1342, device='cuda:0', dtype=torch.float64)
tensor([ -4.9266,  -7.7831,  -5.3701, -11.6698, -12.7076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9958, device='cuda:0', dtype=torch.float64)
tensor([ -4.9248,  -7.7521,  -5.3061, -11.5611, -12.7862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1708, device='cuda:0', dtype=torch.float64)
tensor([ -4.9280,  -7.7332,  -5.2725, -11.4997, -12.8734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0912, device='cuda:0', dtype=torch.float64)
tensor([ -4.9355,  -7.7612,  -5.2721, -11.5131, -12.9745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0409, device='cuda:0', dtype=torch.float64)
tensor([ -4.9446,  -7.7815,  -5.2921, -11.5778, -13.0547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9930, device='cuda:0', dtype=torch.float64)
tensor([ -4.9523,  -7.8042,  -5.2993, -11.5771, -13.0656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1068, device='cuda:0', dtype=torch.float64)
tensor([ -4.9582,  -7.8014,  -5.3031, -11.5614, -13.0097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3934, device='cuda:0', dtype=torch.float64)
tensor([ -4.9599,  -7.7641,  -5.3141, -11.5527, -12.8851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9612, device='cuda:0', dtype=torch.float64)
tensor([ -4.9638,  -7.7406,  -5.3434, -11.5762, -12.7410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8672, device='cuda:0', dtype=torch.float64)
tensor([ -4.9688,  -7.7300,  -5.3716, -11.6309, -12.6392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1892, device='cuda:0', dtype=torch.float64)
tensor([ -4.9726,  -7.6989,  -5.3891, -11.6808, -12.5113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0708, device='cuda:0', dtype=torch.float64)
tensor([ -4.9769,  -7.6843,  -5.4068, -11.7153, -12.4806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9873, device='cuda:0', dtype=torch.float64)
tensor([ -4.9838,  -7.6679,  -5.3976, -11.6662, -12.4149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1685, device='cuda:0', dtype=torch.float64)
tensor([ -4.9919,  -7.6429,  -5.4084, -11.6491, -12.3070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9241, device='cuda:0', dtype=torch.float64)
tensor([ -4.9988,  -7.6331,  -5.3955, -11.5719, -12.1841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0098, device='cuda:0', dtype=torch.float64)
tensor([ -5.0094,  -7.6173,  -5.3656, -11.4929, -12.1183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1549, device='cuda:0', dtype=torch.float64)
tensor([ -5.0164,  -7.6031,  -5.3321, -11.3571, -11.9641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9120, device='cuda:0', dtype=torch.float64)
tensor([ -5.0241,  -7.5670,  -5.3048, -11.2701, -11.7968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9095, device='cuda:0', dtype=torch.float64)
tensor([ -5.0319,  -7.5417,  -5.2953, -11.1890, -11.6195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0105, device='cuda:0', dtype=torch.float64)
tensor([ -5.0386,  -7.5119,  -5.3084, -11.1477, -11.4646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9799, device='cuda:0', dtype=torch.float64)
tensor([ -5.0488,  -7.5047,  -5.3091, -11.0659, -11.3881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8894, device='cuda:0', dtype=torch.float64)
tensor([ -5.0586,  -7.4774,  -5.3044, -10.9995, -11.3564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9741, device='cuda:0', dtype=torch.float64)
tensor([ -5.0684,  -7.4467,  -5.3026, -10.8602, -11.2549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8805, device='cuda:0', dtype=torch.float64)
tensor([ -5.0788,  -7.4327,  -5.2898, -10.7744, -11.2862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0661, device='cuda:0', dtype=torch.float64)
tensor([ -5.0897,  -7.4048,  -5.2602, -10.6746, -11.2711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7156, device='cuda:0', dtype=torch.float64)
tensor([ -5.0994,  -7.3852,  -5.2426, -10.5920, -11.2207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0139, device='cuda:0', dtype=torch.float64)
tensor([ -5.1103,  -7.3572,  -5.2231, -10.4819, -11.1344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8384, device='cuda:0', dtype=torch.float64)
tensor([ -5.1212,  -7.3422,  -5.2179, -10.4041, -11.0892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8924, device='cuda:0', dtype=torch.float64)
tensor([ -5.1328,  -7.3314,  -5.2203, -10.3394, -11.0680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8263, device='cuda:0', dtype=torch.float64)
tensor([ -5.1432,  -7.3305,  -5.2150, -10.2535, -11.0824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9445, device='cuda:0', dtype=torch.float64)
tensor([ -5.1521,  -7.3462,  -5.2139, -10.1409, -11.0375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8329, device='cuda:0', dtype=torch.float64)
tensor([ -5.1597,  -7.3430,  -5.2191, -10.1085, -11.0588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8606, device='cuda:0', dtype=torch.float64)
tensor([ -5.1696,  -7.3154,  -5.2059, -10.0861, -11.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9683, device='cuda:0', dtype=torch.float64)
tensor([ -5.1780,  -7.2972,  -5.2008, -10.0866, -11.1694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8562, device='cuda:0', dtype=torch.float64)
tensor([ -5.1803,  -7.2755,  -5.1974, -10.0842, -11.2290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8841, device='cuda:0', dtype=torch.float64)
tensor([ -5.1818,  -7.2623,  -5.1662, -10.0179, -11.2887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9596, device='cuda:0', dtype=torch.float64)
tensor([ -5.1824,  -7.2696,  -5.1745,  -9.9885, -11.3143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9258, device='cuda:0', dtype=torch.float64)
tensor([ -5.1827,  -7.2719,  -5.2087, -10.0312, -11.3627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7835, device='cuda:0', dtype=torch.float64)
tensor([ -5.1825,  -7.2558,  -5.2437, -10.0671, -11.3600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8793, device='cuda:0', dtype=torch.float64)
tensor([ -5.1854,  -7.2618,  -5.2876, -10.1396, -11.4273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7596, device='cuda:0', dtype=torch.float64)
tensor([ -5.1879,  -7.2750,  -5.3121, -10.1928, -11.4773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8805, device='cuda:0', dtype=torch.float64)
tensor([ -5.1926,  -7.2929,  -5.3292, -10.2506, -11.5586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9137, device='cuda:0', dtype=torch.float64)
tensor([ -5.2018,  -7.3160,  -5.3736, -10.3497, -11.6462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8233, device='cuda:0', dtype=torch.float64)
tensor([ -5.2148,  -7.3471,  -5.4150, -10.4808, -11.7632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8513, device='cuda:0', dtype=torch.float64)
tensor([ -5.2278,  -7.3766,  -5.4503, -10.6172, -11.9079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8676, device='cuda:0', dtype=torch.float64)
tensor([ -5.2419,  -7.4255,  -5.4765, -10.7370, -12.0542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8968, device='cuda:0', dtype=torch.float64)
tensor([ -5.2554,  -7.4584,  -5.4736, -10.7859, -12.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6218, device='cuda:0', dtype=torch.float64)
tensor([ -5.2680,  -7.4895,  -5.4824, -10.8150, -12.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7469, device='cuda:0', dtype=torch.float64)
tensor([ -5.2768,  -7.5303,  -5.4933, -10.8642, -12.3030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9372, device='cuda:0', dtype=torch.float64)
tensor([ -5.2816,  -7.5627,  -5.4750, -10.7849, -12.3440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7952, device='cuda:0', dtype=torch.float64)
tensor([ -5.2855,  -7.5755,  -5.4542, -10.6602, -12.3014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7042, device='cuda:0', dtype=torch.float64)
tensor([ -5.2946,  -7.5963,  -5.4571, -10.6067, -12.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7105, device='cuda:0', dtype=torch.float64)
tensor([ -5.3022,  -7.6043,  -5.4340, -10.5154, -12.2622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6625, device='cuda:0', dtype=torch.float64)
tensor([ -5.3087,  -7.6079,  -5.4045, -10.4177, -12.2123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6644, device='cuda:0', dtype=torch.float64)
tensor([ -5.3136,  -7.6101,  -5.3706, -10.3532, -12.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8127, device='cuda:0', dtype=torch.float64)
tensor([ -5.3171,  -7.6330,  -5.3064, -10.2293, -12.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6487, device='cuda:0', dtype=torch.float64)
tensor([ -5.3212,  -7.6669,  -5.2381, -10.1132, -12.1112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8745, device='cuda:0', dtype=torch.float64)
tensor([ -5.3281,  -7.6798,  -5.1814, -10.0541, -12.1108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7701, device='cuda:0', dtype=torch.float64)
tensor([ -5.3362,  -7.6750,  -5.1316,  -9.9649, -12.0151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6665, device='cuda:0', dtype=torch.float64)
tensor([ -5.3426,  -7.6607,  -5.0842,  -9.8598, -11.8962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6709, device='cuda:0', dtype=torch.float64)
tensor([ -5.3501,  -7.6312,  -5.0503,  -9.7586, -11.7435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6714, device='cuda:0', dtype=torch.float64)
tensor([ -5.3587,  -7.6011,  -5.0117,  -9.6769, -11.6383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6505, device='cuda:0', dtype=torch.float64)
tensor([ -5.3659,  -7.5757,  -4.9741,  -9.6390, -11.5978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6324, device='cuda:0', dtype=torch.float64)
tensor([ -5.3717,  -7.5794,  -4.9361,  -9.6189, -11.5852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5549, device='cuda:0', dtype=torch.float64)
tensor([ -5.3767,  -7.5788,  -4.9148,  -9.6446, -11.6008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8335, device='cuda:0', dtype=torch.float64)
tensor([ -5.3803,  -7.5845,  -4.8911,  -9.5968, -11.5460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6977, device='cuda:0', dtype=torch.float64)
tensor([ -5.3817,  -7.5719,  -4.8749,  -9.5385, -11.4656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6864, device='cuda:0', dtype=torch.float64)
tensor([ -5.3844,  -7.5810,  -4.8540,  -9.4929, -11.4087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7618, device='cuda:0', dtype=torch.float64)
tensor([ -5.3851,  -7.6071,  -4.8265,  -9.4306, -11.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5302, device='cuda:0', dtype=torch.float64)
tensor([ -5.3864,  -7.6334,  -4.8036,  -9.3784, -11.3223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6644, device='cuda:0', dtype=torch.float64)
tensor([ -5.3865,  -7.6589,  -4.7873,  -9.3646, -11.3278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6303, device='cuda:0', dtype=torch.float64)
tensor([ -5.3872,  -7.6914,  -4.7713,  -9.3313, -11.3196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6731, device='cuda:0', dtype=torch.float64)
tensor([ -5.3859,  -7.7073,  -4.7617,  -9.3218, -11.3231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5763, device='cuda:0', dtype=torch.float64)
tensor([ -5.3821,  -7.7145,  -4.7578,  -9.3180, -11.3205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6317, device='cuda:0', dtype=torch.float64)
tensor([ -5.3781,  -7.7171,  -4.7454,  -9.2609, -11.2693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5980, device='cuda:0', dtype=torch.float64)
tensor([ -5.3754,  -7.7327,  -4.7422,  -9.2612, -11.2635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6011, device='cuda:0', dtype=torch.float64)
tensor([ -5.3735,  -7.7308,  -4.7500,  -9.2672, -11.2419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6256, device='cuda:0', dtype=torch.float64)
tensor([ -5.3723,  -7.7328,  -4.7520,  -9.2906, -11.2690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6865, device='cuda:0', dtype=torch.float64)
tensor([ -5.3698,  -7.7502,  -4.7444,  -9.3147, -11.3158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5600, device='cuda:0', dtype=torch.float64)
tensor([ -5.3707,  -7.7751,  -4.7340,  -9.3466, -11.3909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4797, device='cuda:0', dtype=torch.float64)
tensor([ -5.3720,  -7.7897,  -4.7336,  -9.4116, -11.4960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5206, device='cuda:0', dtype=torch.float64)
tensor([ -5.3735,  -7.7837,  -4.7342,  -9.4449, -11.5345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6787, device='cuda:0', dtype=torch.float64)
tensor([ -5.3736,  -7.8004,  -4.7244,  -9.4503, -11.5824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5551, device='cuda:0', dtype=torch.float64)
tensor([ -5.3730,  -7.8068,  -4.7184,  -9.4524, -11.6070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4806, device='cuda:0', dtype=torch.float64)
tensor([ -5.3720,  -7.8137,  -4.7103,  -9.4468, -11.6297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5668, device='cuda:0', dtype=torch.float64)
tensor([ -5.3702,  -7.8210,  -4.7034,  -9.4358, -11.6360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5670, device='cuda:0', dtype=torch.float64)
tensor([ -5.3694,  -7.8312,  -4.6947,  -9.4116, -11.6280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4670, device='cuda:0', dtype=torch.float64)
tensor([ -5.3692,  -7.8392,  -4.6845,  -9.3954, -11.6329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4917, device='cuda:0', dtype=torch.float64)
tensor([ -5.3691,  -7.8456,  -4.6778,  -9.3769, -11.6212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5706, device='cuda:0', dtype=torch.float64)
tensor([ -5.3708,  -7.8631,  -4.6732,  -9.3686, -11.6171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4739, device='cuda:0', dtype=torch.float64)
tensor([ -5.3728,  -7.8834,  -4.6660,  -9.3729, -11.6409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4568, device='cuda:0', dtype=torch.float64)
tensor([ -5.3752,  -7.9146,  -4.6520,  -9.3553, -11.6519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4967, device='cuda:0', dtype=torch.float64)
tensor([ -5.3765,  -7.9432,  -4.6446,  -9.3495, -11.6512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5114, device='cuda:0', dtype=torch.float64)
tensor([ -5.3770,  -7.9231,  -4.6462,  -9.3537, -11.6337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4544, device='cuda:0', dtype=torch.float64)
tensor([ -5.3755,  -7.8785,  -4.6483,  -9.3417, -11.5825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4284, device='cuda:0', dtype=torch.float64)
tensor([ -5.3751,  -7.8209,  -4.6499,  -9.3294, -11.5354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4609, device='cuda:0', dtype=torch.float64)
tensor([ -5.3759,  -7.7823,  -4.6507,  -9.3330, -11.5121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4344, device='cuda:0', dtype=torch.float64)
tensor([ -5.3757,  -7.7607,  -4.6483,  -9.3057, -11.4622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5713, device='cuda:0', dtype=torch.float64)
tensor([ -5.3752,  -7.7332,  -4.6427,  -9.2690, -11.4312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3911, device='cuda:0', dtype=torch.float64)
tensor([ -5.3746,  -7.6895,  -4.6391,  -9.2468, -11.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4186, device='cuda:0', dtype=torch.float64)
tensor([ -5.3718,  -7.6549,  -4.6376,  -9.2064, -11.3403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4182, device='cuda:0', dtype=torch.float64)
tensor([ -5.3692,  -7.6095,  -4.6381,  -9.1716, -11.2722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3555, device='cuda:0', dtype=torch.float64)
tensor([ -5.3681,  -7.5642,  -4.6419,  -9.1482, -11.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3754, device='cuda:0', dtype=torch.float64)
tensor([ -5.3679,  -7.5231,  -4.6497,  -9.1382, -11.1627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3643, device='cuda:0', dtype=torch.float64)
tensor([ -5.3675,  -7.4691,  -4.6570,  -9.1137, -11.0982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4478, device='cuda:0', dtype=torch.float64)
tensor([ -5.3656,  -7.4086,  -4.6612,  -9.0564, -10.9811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3700, device='cuda:0', dtype=torch.float64)
tensor([ -5.3649,  -7.3399,  -4.6674,  -9.0093, -10.8769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4353, device='cuda:0', dtype=torch.float64)
tensor([ -5.3651,  -7.2795,  -4.6686,  -8.9490, -10.7739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3576, device='cuda:0', dtype=torch.float64)
tensor([ -5.3628,  -7.2214,  -4.6686,  -8.8709, -10.6458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3431, device='cuda:0', dtype=torch.float64)
tensor([ -5.3603,  -7.1659,  -4.6696,  -8.8081, -10.5407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3423, device='cuda:0', dtype=torch.float64)
tensor([ -5.3575,  -7.1207,  -4.6693,  -8.7457, -10.4480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3802, device='cuda:0', dtype=torch.float64)
tensor([ -5.3556,  -7.0861,  -4.6681,  -8.6941, -10.3621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4359, device='cuda:0', dtype=torch.float64)
tensor([ -5.3537,  -7.0589,  -4.6638,  -8.6326, -10.2775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4122, device='cuda:0', dtype=torch.float64)
tensor([ -5.3523,  -7.0367,  -4.6624,  -8.5820, -10.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3188, device='cuda:0', dtype=torch.float64)
tensor([ -5.3504,  -7.0081,  -4.6618,  -8.5255, -10.0884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3623, device='cuda:0', dtype=torch.float64)
tensor([ -5.3496,  -6.9952,  -4.6595,  -8.4793, -10.0009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3443, device='cuda:0', dtype=torch.float64)
tensor([-5.3476, -6.9878, -4.6552, -8.4242, -9.9074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3457, device='cuda:0', dtype=torch.float64)
tensor([-5.3461, -6.9744, -4.6516, -8.3702, -9.8164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3689, device='cuda:0', dtype=torch.float64)
tensor([-5.3422, -6.9685, -4.6402, -8.3094, -9.7313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3690, device='cuda:0', dtype=torch.float64)
tensor([-5.3367, -6.9539, -4.6324, -8.2550, -9.6242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3446, device='cuda:0', dtype=torch.float64)
tensor([-5.3340, -6.9255, -4.6305, -8.2305, -9.5301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3174, device='cuda:0', dtype=torch.float64)
tensor([-5.3312, -6.8964, -4.6291, -8.1978, -9.4460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3256, device='cuda:0', dtype=torch.float64)
tensor([-5.3302, -6.8632, -4.6318, -8.1698, -9.3652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3167, device='cuda:0', dtype=torch.float64)
tensor([-5.3287, -6.8361, -4.6332, -8.1355, -9.2769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3276, device='cuda:0', dtype=torch.float64)
tensor([-5.3280, -6.8146, -4.6331, -8.1050, -9.1866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3437, device='cuda:0', dtype=torch.float64)
tensor([-5.3265, -6.7945, -4.6322, -8.0779, -9.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3479, device='cuda:0', dtype=torch.float64)
tensor([-5.3254, -6.7784, -4.6332, -8.0396, -9.0198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2990, device='cuda:0', dtype=torch.float64)
tensor([-5.3241, -6.7625, -4.6356, -8.0014, -8.9390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3408, device='cuda:0', dtype=torch.float64)
tensor([-5.3253, -6.7458, -4.6381, -7.9660, -8.8859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3040, device='cuda:0', dtype=torch.float64)
tensor([-5.3268, -6.7298, -4.6392, -7.9330, -8.8444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2818, device='cuda:0', dtype=torch.float64)
tensor([-5.3297, -6.7092, -4.6420, -7.9058, -8.8070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3194, device='cuda:0', dtype=torch.float64)
tensor([-5.3316, -6.6856, -4.6413, -7.8677, -8.7352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3145, device='cuda:0', dtype=torch.float64)
tensor([-5.3329, -6.6691, -4.6359, -7.8340, -8.6796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3032, device='cuda:0', dtype=torch.float64)
tensor([-5.3341, -6.6486, -4.6301, -7.8035, -8.6346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2736, device='cuda:0', dtype=torch.float64)
tensor([-5.3357, -6.6244, -4.6250, -7.7783, -8.5972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2660, device='cuda:0', dtype=torch.float64)
tensor([-5.3364, -6.6059, -4.6187, -7.7599, -8.5697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2341, device='cuda:0', dtype=torch.float64)
tensor([-5.3362, -6.5888, -4.6112, -7.7369, -8.5427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3062, device='cuda:0', dtype=torch.float64)
tensor([-5.3378, -6.5710, -4.6046, -7.7126, -8.5203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2870, device='cuda:0', dtype=torch.float64)
tensor([-5.3391, -6.5577, -4.5989, -7.6884, -8.5088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2680, device='cuda:0', dtype=torch.float64)
tensor([-5.3401, -6.5470, -4.5917, -7.6533, -8.4799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3038, device='cuda:0', dtype=torch.float64)
tensor([-5.3390, -6.5451, -4.5821, -7.6150, -8.4419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2532, device='cuda:0', dtype=torch.float64)
tensor([-5.3376, -6.5371, -4.5751, -7.5856, -8.4093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3245, device='cuda:0', dtype=torch.float64)
tensor([-5.3338, -6.5289, -4.5640, -7.5483, -8.3852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2540, device='cuda:0', dtype=torch.float64)
tensor([-5.3278, -6.5236, -4.5501, -7.5082, -8.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2560, device='cuda:0', dtype=torch.float64)
tensor([-5.3199, -6.5198, -4.5337, -7.4665, -8.3493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2610, device='cuda:0', dtype=torch.float64)
tensor([-5.3113, -6.5153, -4.5192, -7.4282, -8.3171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2950, device='cuda:0', dtype=torch.float64)
tensor([-5.3021, -6.5132, -4.5018, -7.3913, -8.3038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2948, device='cuda:0', dtype=torch.float64)
tensor([-5.2943, -6.5087, -4.4874, -7.3571, -8.2685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2597, device='cuda:0', dtype=torch.float64)
tensor([-5.2857, -6.5090, -4.4708, -7.3199, -8.2291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2915, device='cuda:0', dtype=torch.float64)
tensor([-5.2766, -6.5116, -4.4538, -7.2808, -8.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2657, device='cuda:0', dtype=torch.float64)
tensor([-5.2674, -6.5133, -4.4397, -7.2491, -8.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2374, device='cuda:0', dtype=torch.float64)
tensor([-5.2589, -6.5165, -4.4282, -7.2226, -8.1512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3304, device='cuda:0', dtype=torch.float64)
tensor([-5.2508, -6.5117, -4.4192, -7.1954, -8.1091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2677, device='cuda:0', dtype=torch.float64)
tensor([-5.2424, -6.5056, -4.4098, -7.1712, -8.0747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3384, device='cuda:0', dtype=torch.float64)
tensor([-5.2333, -6.4929, -4.3995, -7.1431, -8.0435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3257, device='cuda:0', dtype=torch.float64)
tensor([-5.2254, -6.4822, -4.3911, -7.1179, -8.0070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2969, device='cuda:0', dtype=torch.float64)
tensor([-5.2172, -6.4621, -4.3850, -7.0914, -7.9696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2822, device='cuda:0', dtype=torch.float64)
tensor([-5.2068, -6.4431, -4.3795, -7.0671, -7.9333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3442, device='cuda:0', dtype=torch.float64)
tensor([-5.1968, -6.4170, -4.3776, -7.0398, -7.8822], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_024328.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(119.2366, device='cuda:0', dtype=torch.float64)
tensor([ -2.0583, -12.2694,  -6.4698, -10.9979,  -5.4572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(63.5096, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870,  -9.9633,  -7.0288, -11.7684, -16.4903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(113.7782, device='cuda:0', dtype=torch.float64)
tensor([ -3.6307,  -6.7629,  -6.0345, -16.3209, -18.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(123.8194, device='cuda:0', dtype=torch.float64)
tensor([ -2.6359,  -5.2588,  -4.5674, -13.2625, -13.6015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(86.0736, device='cuda:0', dtype=torch.float64)
tensor([ -2.5954,  -4.8003,  -3.3673,  -9.8785, -10.5628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(50.4316, device='cuda:0', dtype=torch.float64)
tensor([-2.5072, -4.9399, -3.0183, -6.5570, -6.7125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(40.4576, device='cuda:0', dtype=torch.float64)
tensor([-2.5337, -5.1028, -2.9490, -6.3682, -4.8826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(47.7752, device='cuda:0', dtype=torch.float64)
tensor([-2.5505, -4.8409, -2.9045, -6.6242, -4.7100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(49.7094, device='cuda:0', dtype=torch.float64)
tensor([-2.5823, -5.3524, -2.9336, -7.4427, -4.4737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(49.3297, device='cuda:0', dtype=torch.float64)
tensor([ -2.5771,  -5.5329,  -3.1540, -11.6700,  -4.3248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(43.5800, device='cuda:0', dtype=torch.float64)
tensor([ -2.4692,  -4.5923,  -3.4892, -13.6571,  -4.2997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.7430, device='cuda:0', dtype=torch.float64)
tensor([ -2.2935,  -3.9049,  -3.7222, -11.6409,  -4.7189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(26.2860, device='cuda:0', dtype=torch.float64)
tensor([-2.1155, -3.4766, -4.2007, -8.3066, -4.9232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.9890, device='cuda:0', dtype=torch.float64)
tensor([-2.0128, -3.2112, -4.5204, -5.0487, -4.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.5336, device='cuda:0', dtype=torch.float64)
tensor([-2.0023, -3.1456, -4.1471, -3.9583, -3.8899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.9402, device='cuda:0', dtype=torch.float64)
tensor([-2.0648, -3.1845, -3.6556, -3.6640, -3.8181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.0793, device='cuda:0', dtype=torch.float64)
tensor([-2.1554, -3.3283, -3.3704, -3.5027, -3.7892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.7284, device='cuda:0', dtype=torch.float64)
tensor([-2.2100, -3.6224, -3.2401, -3.4479, -3.7612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.1442, device='cuda:0', dtype=torch.float64)
tensor([-2.1792, -3.6170, -3.1744, -3.4631, -3.7238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.7986, device='cuda:0', dtype=torch.float64)
tensor([-2.0822, -3.2360, -3.1271, -3.4692, -3.6543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.1231, device='cuda:0', dtype=torch.float64)
tensor([-1.9867, -2.9513, -3.0779, -3.5162, -3.5670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0497, device='cuda:0', dtype=torch.float64)
tensor([-1.9266, -2.8874, -3.0205, -3.5813, -3.4947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.8445, device='cuda:0', dtype=torch.float64)
tensor([-1.9017, -2.9017, -2.9620, -3.6216, -3.4585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.9440, device='cuda:0', dtype=torch.float64)
tensor([-1.8976, -2.9407, -2.9129, -3.6667, -3.4609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1462, device='cuda:0', dtype=torch.float64)
tensor([-1.9009, -2.9959, -2.8782, -3.7570, -3.4781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5285, device='cuda:0', dtype=torch.float64)
tensor([-1.9092, -3.0570, -2.8537, -3.8557, -3.4767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.1495, device='cuda:0', dtype=torch.float64)
tensor([-1.9210, -3.1042, -2.8356, -3.8866, -3.4472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.0959, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -3.1125, -2.8230, -3.8333, -3.4189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.3033, device='cuda:0', dtype=torch.float64)
tensor([-1.8962, -3.0761, -2.8152, -3.7441, -3.4080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2221, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -3.0176, -2.8123, -3.6698, -3.4101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8137, -2.9604, -2.8140, -3.6264, -3.4253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4031, device='cuda:0', dtype=torch.float64)
tensor([-1.7913, -2.9147, -2.8192, -3.6052, -3.4510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9067, device='cuda:0', dtype=torch.float64)
tensor([-1.7825, -2.8859, -2.8256, -3.5962, -3.4819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4812, device='cuda:0', dtype=torch.float64)
tensor([-1.7823, -2.8685, -2.8339, -3.5950, -3.5110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5732, device='cuda:0', dtype=torch.float64)
tensor([-1.7875, -2.8499, -2.8417, -3.5962, -3.5314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6513, device='cuda:0', dtype=torch.float64)
tensor([-1.7964, -2.8237, -2.8469, -3.5947, -3.5374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7951, device='cuda:0', dtype=torch.float64)
tensor([-1.8071, -2.7949, -2.8474, -3.5928, -3.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7717, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.7729, -2.8420, -3.5918, -3.4986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5467, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.7625, -2.8313, -3.5936, -3.4619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3971, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.7624, -2.8171, -3.5954, -3.4232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8475, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.7706, -2.8012, -3.5951, -3.3881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3553, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.7833, -2.7843, -3.5922, -3.3561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1247, device='cuda:0', dtype=torch.float64)
tensor([-1.8672, -2.7990, -2.7652, -3.5834, -3.3254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0390, device='cuda:0', dtype=torch.float64)
tensor([-1.8741, -2.8171, -2.7437, -3.5664, -3.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9395, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.8350, -2.7232, -3.5452, -3.2711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8189, device='cuda:0', dtype=torch.float64)
tensor([-1.8852, -2.8522, -2.7072, -3.5247, -3.2552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7040, device='cuda:0', dtype=torch.float64)
tensor([-1.8899, -2.8684, -2.6963, -3.5044, -3.2481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6384, device='cuda:0', dtype=torch.float64)
tensor([-1.8936, -2.8812, -2.6917, -3.4847, -3.2466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6377, device='cuda:0', dtype=torch.float64)
tensor([-1.8972, -2.8911, -2.6915, -3.4640, -3.2503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5992, device='cuda:0', dtype=torch.float64)
tensor([-1.8991, -2.8977, -2.6955, -3.4438, -3.2572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2898, device='cuda:0', dtype=torch.float64)
tensor([-1.8994, -2.9011, -2.7042, -3.4264, -3.2656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2443, device='cuda:0', dtype=torch.float64)
tensor([-1.8992, -2.9023, -2.7153, -3.4107, -3.2762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1068, device='cuda:0', dtype=torch.float64)
tensor([-1.8989, -2.9011, -2.7279, -3.3976, -3.2878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9378, device='cuda:0', dtype=torch.float64)
tensor([-1.8984, -2.8978, -2.7408, -3.3874, -3.2989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0426, device='cuda:0', dtype=torch.float64)
tensor([-1.8982, -2.8930, -2.7537, -3.3812, -3.3102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8553, device='cuda:0', dtype=torch.float64)
tensor([-1.8985, -2.8877, -2.7654, -3.3782, -3.3227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9177, device='cuda:0', dtype=torch.float64)
tensor([-1.8992, -2.8829, -2.7756, -3.3759, -3.3356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9417, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.8776, -2.7851, -3.3769, -3.3474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9082, device='cuda:0', dtype=torch.float64)
tensor([-1.9004, -2.8718, -2.7942, -3.3812, -3.3575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7486, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -2.8676, -2.8015, -3.3863, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9900, device='cuda:0', dtype=torch.float64)
tensor([-1.9005, -2.8653, -2.8065, -3.3894, -3.3736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9365, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.8643, -2.8090, -3.3919, -3.3793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7001, device='cuda:0', dtype=torch.float64)
tensor([-1.9035, -2.8634, -2.8095, -3.3938, -3.3833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8844, device='cuda:0', dtype=torch.float64)
tensor([-1.9052, -2.8626, -2.8068, -3.3928, -3.3855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6350, device='cuda:0', dtype=torch.float64)
tensor([-1.9060, -2.8622, -2.8034, -3.3920, -3.3865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5640, device='cuda:0', dtype=torch.float64)
tensor([-1.9070, -2.8620, -2.7989, -3.3907, -3.3865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7944, device='cuda:0', dtype=torch.float64)
tensor([-1.9060, -2.8597, -2.7970, -3.3895, -3.3863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6914, device='cuda:0', dtype=torch.float64)
tensor([-1.9036, -2.8543, -2.7964, -3.3891, -3.3854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6607, device='cuda:0', dtype=torch.float64)
tensor([-1.9010, -2.8467, -2.7983, -3.3876, -3.3835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6856, device='cuda:0', dtype=torch.float64)
tensor([-1.8989, -2.8402, -2.8010, -3.3863, -3.3825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5114, device='cuda:0', dtype=torch.float64)
tensor([-1.8987, -2.8353, -2.8040, -3.3852, -3.3827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4545, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.8328, -2.8058, -3.3821, -3.3840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4390, device='cuda:0', dtype=torch.float64)
tensor([-1.8999, -2.8314, -2.8078, -3.3783, -3.3852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3271, device='cuda:0', dtype=torch.float64)
tensor([-1.8997, -2.8309, -2.8099, -3.3746, -3.3868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5081, device='cuda:0', dtype=torch.float64)
tensor([-1.8992, -2.8314, -2.8125, -3.3725, -3.3887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4114, device='cuda:0', dtype=torch.float64)
tensor([-1.8986, -2.8334, -2.8153, -3.3710, -3.3906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3166, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.8350, -2.8185, -3.3704, -3.3920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3778, device='cuda:0', dtype=torch.float64)
tensor([-1.8977, -2.8360, -2.8226, -3.3714, -3.3929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6863, device='cuda:0', dtype=torch.float64)
tensor([-1.8967, -2.8343, -2.8288, -3.3750, -3.3947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6819, device='cuda:0', dtype=torch.float64)
tensor([-1.8973, -2.8343, -2.8344, -3.3809, -3.3962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6016, device='cuda:0', dtype=torch.float64)
tensor([-1.8984, -2.8346, -2.8400, -3.3875, -3.3989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5714, device='cuda:0', dtype=torch.float64)
tensor([-1.9017, -2.8359, -2.8451, -3.3918, -3.4030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7328, device='cuda:0', dtype=torch.float64)
tensor([-1.9057, -2.8376, -2.8482, -3.3898, -3.4100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6338, device='cuda:0', dtype=torch.float64)
tensor([-1.9116, -2.8403, -2.8502, -3.3815, -3.4188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1396, device='cuda:0', dtype=torch.float64)
tensor([-1.9183, -2.8429, -2.8521, -3.3734, -3.4276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3279, device='cuda:0', dtype=torch.float64)
tensor([-1.9261, -2.8450, -2.8542, -3.3682, -3.4359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6391, device='cuda:0', dtype=torch.float64)
tensor([-1.9317, -2.8478, -2.8563, -3.3646, -3.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4005, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.8514, -2.8568, -3.3605, -3.4479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8120, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.8523, -2.8589, -3.3601, -3.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6560, device='cuda:0', dtype=torch.float64)
tensor([-1.9460, -2.8523, -2.8617, -3.3597, -3.4583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7643, device='cuda:0', dtype=torch.float64)
tensor([-1.9501, -2.8523, -2.8628, -3.3571, -3.4627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4879, device='cuda:0', dtype=torch.float64)
tensor([-1.9531, -2.8528, -2.8650, -3.3558, -3.4642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5606, device='cuda:0', dtype=torch.float64)
tensor([-1.9534, -2.8522, -2.8671, -3.3575, -3.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7402, device='cuda:0', dtype=torch.float64)
tensor([-1.9555, -2.8541, -2.8668, -3.3591, -3.4609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8009, device='cuda:0', dtype=torch.float64)
tensor([-1.9566, -2.8567, -2.8658, -3.3600, -3.4577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8695, device='cuda:0', dtype=torch.float64)
tensor([-1.9594, -2.8619, -2.8625, -3.3593, -3.4554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5725, device='cuda:0', dtype=torch.float64)
tensor([-1.9635, -2.8661, -2.8607, -3.3591, -3.4537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2493, device='cuda:0', dtype=torch.float64)
tensor([-1.9673, -2.8709, -2.8603, -3.3603, -3.4513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6728, device='cuda:0', dtype=torch.float64)
tensor([-1.9696, -2.8744, -2.8602, -3.3618, -3.4486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4352, device='cuda:0', dtype=torch.float64)
tensor([-1.9716, -2.8791, -2.8600, -3.3635, -3.4450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4181, device='cuda:0', dtype=torch.float64)
tensor([-1.9736, -2.8835, -2.8609, -3.3653, -3.4406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6490, device='cuda:0', dtype=torch.float64)
tensor([-1.9763, -2.8876, -2.8628, -3.3684, -3.4362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8148, device='cuda:0', dtype=torch.float64)
tensor([-1.9790, -2.8941, -2.8640, -3.3698, -3.4329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6522, device='cuda:0', dtype=torch.float64)
tensor([-1.9822, -2.8974, -2.8667, -3.3711, -3.4305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9999, device='cuda:0', dtype=torch.float64)
tensor([-1.9873, -2.9014, -2.8682, -3.3688, -3.4295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6631, device='cuda:0', dtype=torch.float64)
tensor([-1.9917, -2.9043, -2.8714, -3.3682, -3.4280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7619, device='cuda:0', dtype=torch.float64)
tensor([-1.9954, -2.9069, -2.8746, -3.3684, -3.4261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6338, device='cuda:0', dtype=torch.float64)
tensor([-2.0006, -2.9088, -2.8769, -3.3668, -3.4251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4479, device='cuda:0', dtype=torch.float64)
tensor([-2.0066, -2.9092, -2.8791, -3.3648, -3.4241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5258, device='cuda:0', dtype=torch.float64)
tensor([-2.0104, -2.9101, -2.8817, -3.3647, -3.4221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1217, device='cuda:0', dtype=torch.float64)
tensor([-2.0145, -2.9116, -2.8849, -3.3652, -3.4224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5804, device='cuda:0', dtype=torch.float64)
tensor([-2.0179, -2.9140, -2.8881, -3.3638, -3.4241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6244, device='cuda:0', dtype=torch.float64)
tensor([-2.0212, -2.9146, -2.8935, -3.3634, -3.4276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5847, device='cuda:0', dtype=torch.float64)
tensor([-2.0245, -2.9140, -2.8983, -3.3625, -3.4315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6141, device='cuda:0', dtype=torch.float64)
tensor([-2.0275, -2.9153, -2.9033, -3.3632, -3.4357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6434, device='cuda:0', dtype=torch.float64)
tensor([-2.0306, -2.9172, -2.9077, -3.3624, -3.4408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4995, device='cuda:0', dtype=torch.float64)
tensor([-2.0348, -2.9203, -2.9113, -3.3633, -3.4470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0916, device='cuda:0', dtype=torch.float64)
tensor([-2.0421, -2.9265, -2.9138, -3.3637, -3.4550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7096, device='cuda:0', dtype=torch.float64)
tensor([-2.0518, -2.9361, -2.9149, -3.3634, -3.4630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8620, device='cuda:0', dtype=torch.float64)
tensor([-2.0639, -2.9445, -2.9184, -3.3623, -3.4743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8759, device='cuda:0', dtype=torch.float64)
tensor([-2.0770, -2.9527, -2.9207, -3.3584, -3.4847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8131, device='cuda:0', dtype=torch.float64)
tensor([-2.0918, -2.9636, -2.9202, -3.3499, -3.4963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9169, device='cuda:0', dtype=torch.float64)
tensor([-2.1063, -2.9736, -2.9190, -3.3449, -3.5093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9760, device='cuda:0', dtype=torch.float64)
tensor([-2.1196, -2.9854, -2.9172, -3.3418, -3.5213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.1324, -2.9946, -2.9169, -3.3378, -3.5306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8552, device='cuda:0', dtype=torch.float64)
tensor([-2.1445, -3.0018, -2.9163, -3.3390, -3.5366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1000, device='cuda:0', dtype=torch.float64)
tensor([-2.1541, -3.0086, -2.9187, -3.3467, -3.5402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9667, device='cuda:0', dtype=torch.float64)
tensor([-2.1602, -3.0162, -2.9213, -3.3576, -3.5404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0986, device='cuda:0', dtype=torch.float64)
tensor([-2.1662, -3.0268, -2.9230, -3.3687, -3.5409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4280, device='cuda:0', dtype=torch.float64)
tensor([-2.1720, -3.0342, -2.9268, -3.3789, -3.5443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9882, device='cuda:0', dtype=torch.float64)
tensor([-2.1778, -3.0429, -2.9288, -3.3844, -3.5478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9634, device='cuda:0', dtype=torch.float64)
tensor([-2.1850, -3.0497, -2.9302, -3.3856, -3.5489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8218, device='cuda:0', dtype=torch.float64)
tensor([-2.1944, -3.0577, -2.9291, -3.3869, -3.5507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1646, device='cuda:0', dtype=torch.float64)
tensor([-2.2024, -3.0660, -2.9297, -3.3917, -3.5554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9381, device='cuda:0', dtype=torch.float64)
tensor([-2.2108, -3.0725, -2.9311, -3.4005, -3.5611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8431, device='cuda:0', dtype=torch.float64)
tensor([-2.2213, -3.0825, -2.9323, -3.4074, -3.5676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1282, device='cuda:0', dtype=torch.float64)
tensor([-2.2336, -3.0931, -2.9336, -3.4154, -3.5737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0829, device='cuda:0', dtype=torch.float64)
tensor([-2.2456, -3.1048, -2.9380, -3.4197, -3.5816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8870, device='cuda:0', dtype=torch.float64)
tensor([-2.2585, -3.1150, -2.9413, -3.4228, -3.5903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3175, device='cuda:0', dtype=torch.float64)
tensor([-2.2726, -3.1295, -2.9413, -3.4313, -3.5997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0708, device='cuda:0', dtype=torch.float64)
tensor([-2.2896, -3.1465, -2.9391, -3.4378, -3.6122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8260, device='cuda:0', dtype=torch.float64)
tensor([-2.3073, -3.1636, -2.9390, -3.4413, -3.6256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0121, device='cuda:0', dtype=torch.float64)
tensor([-2.3266, -3.1787, -2.9411, -3.4442, -3.6394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2274, device='cuda:0', dtype=torch.float64)
tensor([-2.3470, -3.1934, -2.9430, -3.4420, -3.6525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7545, device='cuda:0', dtype=torch.float64)
tensor([-2.3658, -3.2079, -2.9460, -3.4382, -3.6638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0505, device='cuda:0', dtype=torch.float64)
tensor([-2.3839, -3.2190, -2.9496, -3.4372, -3.6697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3518, device='cuda:0', dtype=torch.float64)
tensor([-2.4096, -3.2402, -2.9515, -3.4439, -3.6788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1837, device='cuda:0', dtype=torch.float64)
tensor([-2.4348, -3.2592, -2.9540, -3.4448, -3.6880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9109, device='cuda:0', dtype=torch.float64)
tensor([-2.4627, -3.2790, -2.9567, -3.4484, -3.7009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1180, device='cuda:0', dtype=torch.float64)
tensor([-2.4886, -3.2971, -2.9600, -3.4569, -3.7138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9391, device='cuda:0', dtype=torch.float64)
tensor([-2.5187, -3.3176, -2.9630, -3.4681, -3.7325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9760, device='cuda:0', dtype=torch.float64)
tensor([-2.5536, -3.3455, -2.9679, -3.4853, -3.7578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9493, device='cuda:0', dtype=torch.float64)
tensor([-2.5889, -3.3747, -2.9706, -3.5094, -3.7838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1595, device='cuda:0', dtype=torch.float64)
tensor([-2.6265, -3.4103, -2.9730, -3.5700, -3.8134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7880, device='cuda:0', dtype=torch.float64)
tensor([-2.6633, -3.4486, -2.9767, -3.6916, -3.8411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2217, device='cuda:0', dtype=torch.float64)
tensor([-2.7011, -3.4908, -2.9800, -3.8736, -3.8729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0372, device='cuda:0', dtype=torch.float64)
tensor([-2.7403, -3.5349, -2.9830, -4.0497, -3.9056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2621, device='cuda:0', dtype=torch.float64)
tensor([-2.7853, -3.5922, -2.9870, -4.2745, -3.9477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8620, device='cuda:0', dtype=torch.float64)
tensor([-2.8363, -3.6615, -2.9930, -4.7004, -4.0024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8286, device='cuda:0', dtype=torch.float64)
tensor([-2.8897, -3.7409, -3.0027, -5.4856, -4.0619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1360, device='cuda:0', dtype=torch.float64)
tensor([-2.9433, -3.8062, -3.0144, -6.0817, -4.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8744, device='cuda:0', dtype=torch.float64)
tensor([-2.9982, -3.8652, -3.0257, -6.6023, -4.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9357, device='cuda:0', dtype=torch.float64)
tensor([-3.0606, -3.9342, -3.0415, -7.0022, -4.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9585, device='cuda:0', dtype=torch.float64)
tensor([-3.1250, -4.0239, -3.0610, -7.5824, -4.3320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3917, device='cuda:0', dtype=torch.float64)
tensor([-3.1888, -4.0986, -3.0819, -7.7950, -4.3998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7707, device='cuda:0', dtype=torch.float64)
tensor([-3.2542, -4.1804, -3.1031, -8.1203, -4.4757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0894, device='cuda:0', dtype=torch.float64)
tensor([-3.3222, -4.2835, -3.1255, -8.9451, -4.5819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1812, device='cuda:0', dtype=torch.float64)
tensor([ -3.3952,  -4.4304,  -3.1527, -10.4917,  -4.7421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7954, device='cuda:0', dtype=torch.float64)
tensor([ -3.4710,  -4.6475,  -3.1888, -12.7023,  -4.9639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5755, device='cuda:0', dtype=torch.float64)
tensor([ -3.5447,  -4.8956,  -3.2307, -14.9003,  -5.2182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5468, device='cuda:0', dtype=torch.float64)
tensor([ -3.6180,  -5.1436,  -3.2728, -16.8185,  -5.5061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6269, device='cuda:0', dtype=torch.float64)
tensor([ -3.6971,  -5.6638,  -3.3314, -19.7401,  -5.9712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5823, device='cuda:0', dtype=torch.float64)
tensor([ -3.7740,  -6.3655,  -3.3965, -22.5687,  -6.5578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3272, device='cuda:0', dtype=torch.float64)
tensor([ -3.8509,  -7.1358,  -3.4753, -25.1747,  -7.2478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7590, device='cuda:0', dtype=torch.float64)
tensor([ -3.9315,  -8.0316,  -3.5746, -28.0889,  -8.1027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3683, device='cuda:0', dtype=torch.float64)
tensor([ -4.0061,  -8.7427,  -3.6848, -30.3732,  -8.9505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4211, device='cuda:0', dtype=torch.float64)
tensor([ -4.0766,  -9.1818,  -3.7811, -31.7053,  -9.6622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1604, device='cuda:0', dtype=torch.float64)
tensor([ -4.1434,  -9.6240,  -3.8636, -32.6591, -10.2758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5358, device='cuda:0', dtype=torch.float64)
tensor([ -4.2071,  -9.9896,  -3.9352, -33.4755, -10.8125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7254, device='cuda:0', dtype=torch.float64)
tensor([ -4.2664, -10.2291,  -3.9990, -34.1607, -11.2564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4647, device='cuda:0', dtype=torch.float64)
tensor([ -4.3178, -10.2975,  -4.0572, -34.2200, -11.5771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7065, device='cuda:0', dtype=torch.float64)
tensor([ -4.3687, -10.4308,  -4.1219, -34.6595, -11.9451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6079, device='cuda:0', dtype=torch.float64)
tensor([ -4.4159, -10.7428,  -4.1996, -35.1506, -12.4041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5474, device='cuda:0', dtype=torch.float64)
tensor([ -4.4532, -10.7145,  -4.2422, -34.7756, -12.5991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7109, device='cuda:0', dtype=torch.float64)
tensor([ -4.4941, -10.8392,  -4.2831, -34.8526, -12.7862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5440, device='cuda:0', dtype=torch.float64)
tensor([ -4.5265, -10.7746,  -4.2946, -34.4913, -12.7834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3854, device='cuda:0', dtype=torch.float64)
tensor([ -4.5582, -10.7153,  -4.3062, -33.9394, -12.7864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4565, device='cuda:0', dtype=torch.float64)
tensor([ -4.5959, -10.8500,  -4.3331, -33.8951, -12.9444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6792, device='cuda:0', dtype=torch.float64)
tensor([ -4.6238, -10.6773,  -4.3223, -32.8494, -12.8104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4699, device='cuda:0', dtype=torch.float64)
tensor([ -4.6498, -10.3852,  -4.3114, -31.8450, -12.7247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6350, device='cuda:0', dtype=torch.float64)
tensor([ -4.6731, -10.1345,  -4.3005, -30.7792, -12.6233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6625, device='cuda:0', dtype=torch.float64)
tensor([ -4.6916, -10.0123,  -4.2919, -30.1349, -12.5811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6694, device='cuda:0', dtype=torch.float64)
tensor([ -4.7076, -10.0629,  -4.2929, -29.9354, -12.5860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4818, device='cuda:0', dtype=torch.float64)
tensor([ -4.7210, -10.1240,  -4.2909, -29.6476, -12.4988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8684, device='cuda:0', dtype=torch.float64)
tensor([ -4.7369, -10.2970,  -4.3005, -29.7721, -12.4686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6083, device='cuda:0', dtype=torch.float64)
tensor([ -4.7542, -10.3437,  -4.3181, -29.6642, -12.4787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8239, device='cuda:0', dtype=torch.float64)
tensor([ -4.7750, -10.6415,  -4.3620, -29.8132, -12.6996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6349, device='cuda:0', dtype=torch.float64)
tensor([ -4.8044, -11.0013,  -4.4233, -30.2029, -13.0396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7025, device='cuda:0', dtype=torch.float64)
tensor([ -4.8240, -11.1359,  -4.4585, -29.7995, -13.2061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3632, device='cuda:0', dtype=torch.float64)
tensor([ -4.8405, -11.1514,  -4.4715, -28.8025, -13.2213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4325, device='cuda:0', dtype=torch.float64)
tensor([ -4.8625, -11.3224,  -4.4925, -28.2898, -13.3325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6585, device='cuda:0', dtype=torch.float64)
tensor([ -4.8858, -11.4998,  -4.5257, -27.9163, -13.5518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3216, device='cuda:0', dtype=torch.float64)
tensor([ -4.9132, -11.8964,  -4.5867, -27.9318, -13.9000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0780, device='cuda:0', dtype=torch.float64)
tensor([ -4.9568, -12.5208,  -4.6918, -28.5897, -14.4871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4603, device='cuda:0', dtype=torch.float64)
tensor([ -5.0051, -13.2720,  -4.8225, -29.7504, -15.2114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5565, device='cuda:0', dtype=torch.float64)
tensor([ -5.0432, -13.6741,  -4.9289, -30.3378, -15.7580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4296, device='cuda:0', dtype=torch.float64)
tensor([ -5.0792, -14.2135,  -5.0411, -31.2893, -16.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4466, device='cuda:0', dtype=torch.float64)
tensor([ -5.1157, -14.6562,  -5.1670, -31.9815, -16.7806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5219, device='cuda:0', dtype=torch.float64)
tensor([ -5.1375, -14.8747,  -5.2499, -32.1271, -16.9961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4423, device='cuda:0', dtype=torch.float64)
tensor([ -5.1665, -15.3832,  -5.3546, -33.0175, -17.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7458, device='cuda:0', dtype=torch.float64)
tensor([ -5.1836, -15.7095,  -5.4162, -33.0226, -17.4306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5166, device='cuda:0', dtype=torch.float64)
tensor([ -5.1936, -15.8502,  -5.4528, -32.7448, -17.3778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2102, device='cuda:0', dtype=torch.float64)
tensor([ -5.2048, -15.8983,  -5.5026, -32.3030, -17.3948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3358, device='cuda:0', dtype=torch.float64)
tensor([ -5.2188, -16.0288,  -5.5663, -32.0629, -17.5229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6624, device='cuda:0', dtype=torch.float64)
tensor([ -5.2433, -16.5619,  -5.6376, -32.2958, -17.7418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4388, device='cuda:0', dtype=torch.float64)
tensor([ -5.2723, -17.1803,  -5.7015, -32.7053, -17.9752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4505, device='cuda:0', dtype=torch.float64)
tensor([ -5.2861, -17.4512,  -5.7224, -32.4576, -17.9570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3139, device='cuda:0', dtype=torch.float64)
tensor([ -5.3012, -17.6319,  -5.7403, -32.0302, -17.9300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3971, device='cuda:0', dtype=torch.float64)
tensor([ -5.3267, -17.9076,  -5.7523, -31.8946, -17.9421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5674, device='cuda:0', dtype=torch.float64)
tensor([ -5.3741, -18.3867,  -5.8115, -32.4698, -18.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5906, device='cuda:0', dtype=torch.float64)
tensor([ -5.4178, -18.6503,  -5.8614, -32.7627, -18.2971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7963, device='cuda:0', dtype=torch.float64)
tensor([ -5.4516, -18.9477,  -5.8931, -32.9906, -18.4020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9303, device='cuda:0', dtype=torch.float64)
tensor([ -5.4835, -19.1114,  -5.8989, -32.6932, -18.4242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3129, device='cuda:0', dtype=torch.float64)
tensor([ -5.5158, -19.4442,  -5.9375, -32.6132, -18.5815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2014, device='cuda:0', dtype=torch.float64)
tensor([ -5.5595, -19.8556,  -5.9828, -32.9012, -18.8302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3341, device='cuda:0', dtype=torch.float64)
tensor([ -5.5920, -20.1362,  -6.0251, -33.0034, -19.0057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2105, device='cuda:0', dtype=torch.float64)
tensor([ -5.6248, -20.5622,  -6.0832, -33.3869, -19.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4898, device='cuda:0', dtype=torch.float64)
tensor([ -5.6337, -20.6735,  -6.0664, -33.0412, -19.0673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3450, device='cuda:0', dtype=torch.float64)
tensor([ -5.6296, -20.4860,  -6.0092, -32.1981, -18.7629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4139, device='cuda:0', dtype=torch.float64)
tensor([ -5.6430, -20.5997,  -5.9706, -31.8313, -18.5469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5632, device='cuda:0', dtype=torch.float64)
tensor([ -5.6474, -20.5458,  -5.9171, -31.1081, -18.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4413, device='cuda:0', dtype=torch.float64)
tensor([ -5.6574, -20.3695,  -5.8688, -30.3513, -17.9278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4722, device='cuda:0', dtype=torch.float64)
tensor([ -5.6805, -20.4383,  -5.8591, -30.1482, -17.8435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3959, device='cuda:0', dtype=torch.float64)
tensor([ -5.6938, -20.3835,  -5.8396, -29.8038, -17.7015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6060, device='cuda:0', dtype=torch.float64)
tensor([ -5.6924, -20.3788,  -5.8298, -29.5325, -17.5748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5319, device='cuda:0', dtype=torch.float64)
tensor([ -5.6889, -20.3302,  -5.8278, -29.2416, -17.6136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4760, device='cuda:0', dtype=torch.float64)
tensor([ -5.6960, -20.3685,  -5.8722, -29.4252, -17.8029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4688, device='cuda:0', dtype=torch.float64)
tensor([ -5.7281, -20.8958,  -5.9526, -30.3216, -18.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3998, device='cuda:0', dtype=torch.float64)
tensor([ -5.7585, -21.6001,  -6.0252, -31.5353, -18.5808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0752, device='cuda:0', dtype=torch.float64)
tensor([ -5.7892, -22.1221,  -6.1182, -32.4676, -18.9767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4511, device='cuda:0', dtype=torch.float64)
tensor([ -5.8315, -22.7854,  -6.2322, -33.7585, -19.4728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3538, device='cuda:0', dtype=torch.float64)
tensor([ -5.8651, -23.1388,  -6.3299, -34.5831, -19.8005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2906, device='cuda:0', dtype=torch.float64)
tensor([ -5.8908, -23.4029,  -6.3996, -35.1279, -20.0117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2701, device='cuda:0', dtype=torch.float64)
tensor([ -5.9283, -23.6135,  -6.4827, -35.6752, -20.2930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3069, device='cuda:0', dtype=torch.float64)
tensor([ -5.9690, -23.7219,  -6.5613, -36.2097, -20.4813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5334, device='cuda:0', dtype=torch.float64)
tensor([ -5.9803, -23.3708,  -6.5683, -35.8961, -20.3800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3715, device='cuda:0', dtype=torch.float64)
tensor([ -5.9996, -23.1102,  -6.5845, -35.8061, -20.3097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3084, device='cuda:0', dtype=torch.float64)
tensor([ -6.0211, -22.9147,  -6.5829, -35.5185, -20.2902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3713, device='cuda:0', dtype=torch.float64)
tensor([ -6.0360, -22.8072,  -6.5996, -35.2834, -20.4167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3299, device='cuda:0', dtype=torch.float64)
tensor([ -6.0432, -22.6635,  -6.6128, -35.0019, -20.4335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1796, device='cuda:0', dtype=torch.float64)
tensor([ -6.0632, -22.6245,  -6.6387, -34.9023, -20.4868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2891, device='cuda:0', dtype=torch.float64)
tensor([ -6.0662, -22.3640,  -6.6333, -34.0953, -20.5230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2065, device='cuda:0', dtype=torch.float64)
tensor([ -6.0796, -22.2884,  -6.6482, -33.7350, -20.5920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3907, device='cuda:0', dtype=torch.float64)
tensor([ -6.1064, -22.2451,  -6.6863, -33.4330, -20.6801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5295, device='cuda:0', dtype=torch.float64)
tensor([ -6.1298, -22.1801,  -6.7183, -32.9811, -20.6962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3251, device='cuda:0', dtype=torch.float64)
tensor([ -6.1683, -22.2787,  -6.7730, -32.7877, -20.8725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2279, device='cuda:0', dtype=torch.float64)
tensor([ -6.2091, -22.4456,  -6.7958, -32.6469, -20.9071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3914, device='cuda:0', dtype=torch.float64)
tensor([ -6.2456, -22.6317,  -6.8260, -32.8380, -21.0094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2281, device='cuda:0', dtype=torch.float64)
tensor([ -6.3055, -23.0346,  -6.9077, -33.5699, -21.2000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4144, device='cuda:0', dtype=torch.float64)
tensor([ -6.3662, -23.3848,  -6.9918, -34.4640, -21.3371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2997, device='cuda:0', dtype=torch.float64)
tensor([ -6.4309, -23.7125,  -7.0971, -35.4730, -21.3895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2760, device='cuda:0', dtype=torch.float64)
tensor([ -6.4768, -23.9260,  -7.1781, -35.8531, -21.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2697, device='cuda:0', dtype=torch.float64)
tensor([ -6.4998, -23.9614,  -7.2048, -35.5395, -21.1073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0831, device='cuda:0', dtype=torch.float64)
tensor([ -6.5564, -24.0668,  -7.2766, -35.7907, -20.9240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2347, device='cuda:0', dtype=torch.float64)
tensor([ -6.6232, -24.2024,  -7.3632, -36.0739, -20.7830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4538, device='cuda:0', dtype=torch.float64)
tensor([ -6.6713, -24.1409,  -7.4097, -36.0830, -20.6378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1925, device='cuda:0', dtype=torch.float64)
tensor([ -6.7073, -24.0789,  -7.4958, -36.2119, -20.6439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1646, device='cuda:0', dtype=torch.float64)
tensor([ -6.7259, -24.0868,  -7.5769, -36.2851, -20.6142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3533, device='cuda:0', dtype=torch.float64)
tensor([ -6.7516, -24.0755,  -7.7028, -36.5015, -20.5969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1526, device='cuda:0', dtype=torch.float64)
tensor([ -6.7902, -24.1616,  -7.8461, -36.9353, -20.6337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2968, device='cuda:0', dtype=torch.float64)
tensor([ -6.8093, -24.1758,  -8.0000, -37.2056, -20.7390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4153, device='cuda:0', dtype=torch.float64)
tensor([ -6.8344, -24.1244,  -8.0452, -36.9134, -20.6103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5979, device='cuda:0', dtype=torch.float64)
tensor([ -6.8512, -23.9697,  -8.0421, -36.1057, -20.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2853, device='cuda:0', dtype=torch.float64)
tensor([ -6.8904, -23.9584,  -8.1276, -35.9596, -19.9077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0784, device='cuda:0', dtype=torch.float64)
tensor([ -6.9345, -24.0902,  -8.2324, -36.0813, -19.7716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4390, device='cuda:0', dtype=torch.float64)
tensor([ -6.9652, -24.1684,  -8.2622, -35.9438, -19.6255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1221, device='cuda:0', dtype=torch.float64)
tensor([ -7.0047, -24.3056,  -8.3252, -36.2214, -19.5762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1646, device='cuda:0', dtype=torch.float64)
tensor([ -7.0623, -24.5335,  -8.3983, -37.0313, -19.6111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4502, device='cuda:0', dtype=torch.float64)
tensor([ -7.1218, -24.6411,  -8.4681, -37.5986, -19.7478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3146, device='cuda:0', dtype=torch.float64)
tensor([ -7.1557, -24.3679,  -8.4531, -37.2767, -19.7084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5429, device='cuda:0', dtype=torch.float64)
tensor([ -7.2096, -24.1615,  -8.4490, -37.1320, -19.7171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2968, device='cuda:0', dtype=torch.float64)
tensor([ -7.2513, -23.9694,  -8.4150, -36.8431, -19.5664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0663, device='cuda:0', dtype=torch.float64)
tensor([ -7.2904, -23.8610,  -8.3634, -36.8545, -19.5753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1341, device='cuda:0', dtype=torch.float64)
tensor([ -7.3175, -23.7620,  -8.2998, -36.6356, -19.5727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2407, device='cuda:0', dtype=torch.float64)
tensor([ -7.3427, -23.7264,  -8.2751, -36.6391, -19.6816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2780, device='cuda:0', dtype=torch.float64)
tensor([ -7.3623, -23.6248,  -8.2098, -36.4129, -19.8368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2783, device='cuda:0', dtype=torch.float64)
tensor([ -7.4100, -23.6724,  -8.2221, -36.7146, -20.1106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3826, device='cuda:0', dtype=torch.float64)
tensor([ -7.4860, -23.8490,  -8.2681, -37.3154, -20.4738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0485, device='cuda:0', dtype=torch.float64)
tensor([ -7.5765, -23.9506,  -8.2979, -37.8310, -20.8322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1606, device='cuda:0', dtype=torch.float64)
tensor([ -7.6554, -23.8927,  -8.3301, -38.1058, -21.0740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3155, device='cuda:0', dtype=torch.float64)
tensor([ -7.7520, -23.9418,  -8.3831, -38.5354, -21.4529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0782, device='cuda:0', dtype=torch.float64)
tensor([ -7.8416, -23.8762,  -8.4244, -38.5619, -21.7907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0557, device='cuda:0', dtype=torch.float64)
tensor([ -7.9073, -23.7527,  -8.4612, -38.5190, -21.9876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2883, device='cuda:0', dtype=torch.float64)
tensor([ -7.9636, -23.6380,  -8.5313, -38.2319, -22.2711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2048, device='cuda:0', dtype=torch.float64)
tensor([ -8.0202, -23.6438,  -8.5940, -38.1069, -22.5419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0894, device='cuda:0', dtype=torch.float64)
tensor([ -8.0691, -23.6718,  -8.6408, -37.9623, -22.8060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9524, device='cuda:0', dtype=torch.float64)
tensor([ -8.1122, -23.6589,  -8.6778, -37.7674, -22.9825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9694, device='cuda:0', dtype=torch.float64)
tensor([ -8.1342, -23.6689,  -8.7116, -37.6473, -23.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2067, device='cuda:0', dtype=torch.float64)
tensor([ -8.2051, -23.7788,  -8.8416, -37.9196, -23.4086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3522, device='cuda:0', dtype=torch.float64)
tensor([ -8.2797, -23.8361,  -8.9448, -38.1732, -23.6042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0099, device='cuda:0', dtype=torch.float64)
tensor([ -8.3497, -23.8785,  -9.0233, -38.2120, -23.7249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1770, device='cuda:0', dtype=torch.float64)
tensor([ -8.4353, -23.9258,  -9.1447, -38.3779, -23.9844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1943, device='cuda:0', dtype=torch.float64)
tensor([ -8.5164, -23.9381,  -9.2210, -38.5070, -24.1925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9055, device='cuda:0', dtype=torch.float64)
tensor([ -8.6593, -24.1321,  -9.3373, -39.1243, -24.6061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1403, device='cuda:0', dtype=torch.float64)
tensor([ -8.8013, -24.3180,  -9.4524, -39.8096, -24.9317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1918, device='cuda:0', dtype=torch.float64)
tensor([ -8.9508, -24.3981,  -9.5654, -40.2125, -25.2446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2961, device='cuda:0', dtype=torch.float64)
tensor([ -9.0966, -24.4932,  -9.7259, -40.6884, -25.7295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0772, device='cuda:0', dtype=torch.float64)
tensor([ -9.2574, -24.4489,  -9.8822, -40.9128, -26.1019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1416, device='cuda:0', dtype=torch.float64)
tensor([ -9.3813, -24.2537,  -9.9700, -40.7439, -26.2564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1712, device='cuda:0', dtype=torch.float64)
tensor([ -9.4474, -23.9865, -10.0920, -40.4156, -26.2113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1706, device='cuda:0', dtype=torch.float64)
tensor([ -9.5804, -23.8410, -10.2768, -40.4984, -26.3129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2418, device='cuda:0', dtype=torch.float64)
tensor([ -9.6914, -23.8949, -10.4899, -40.7590, -26.4196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9583, device='cuda:0', dtype=torch.float64)
tensor([ -9.7480, -23.7838, -10.6639, -40.6187, -26.4361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2090, device='cuda:0', dtype=torch.float64)
tensor([ -9.7401, -23.4793, -10.7799, -40.1506, -26.4212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1732, device='cuda:0', dtype=torch.float64)
tensor([ -9.7403, -23.3245, -11.0093, -40.0558, -26.5102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2154, device='cuda:0', dtype=torch.float64)
tensor([ -9.7380, -23.1754, -11.3332, -40.1767, -26.6043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1828, device='cuda:0', dtype=torch.float64)
tensor([ -9.7610, -23.2189, -11.6131, -40.7090, -26.9157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9804, device='cuda:0', dtype=torch.float64)
tensor([ -9.8073, -23.2036, -11.9010, -41.2390, -27.2487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2315, device='cuda:0', dtype=torch.float64)
tensor([ -9.7694, -23.0200, -12.1157, -41.0992, -27.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1758, device='cuda:0', dtype=torch.float64)
tensor([ -9.7247, -22.9050, -12.2619, -40.8564, -27.1370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1408, device='cuda:0', dtype=torch.float64)
tensor([ -9.6709, -22.8846, -12.3818, -40.7531, -27.0085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2576, device='cuda:0', dtype=torch.float64)
tensor([ -9.6280, -22.7323, -12.5308, -40.5541, -26.7962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1801, device='cuda:0', dtype=torch.float64)
tensor([ -9.5688, -22.5270, -12.6416, -40.0868, -26.5819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0292, device='cuda:0', dtype=torch.float64)
tensor([ -9.5028, -22.3713, -12.6456, -39.6210, -26.2443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1030, device='cuda:0', dtype=torch.float64)
tensor([ -9.3516, -22.0463, -12.5151, -38.7198, -25.6438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([ -9.2002, -21.6353, -12.3360, -37.6560, -25.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0994, device='cuda:0', dtype=torch.float64)
tensor([ -9.0710, -21.2718, -12.2981, -36.5657, -24.6397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0606, device='cuda:0', dtype=torch.float64)
tensor([ -8.9770, -21.1117, -12.2839, -35.8140, -24.1927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2631, device='cuda:0', dtype=torch.float64)
tensor([ -8.9520, -21.1171, -12.4819, -35.4965, -24.0037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3609, device='cuda:0', dtype=torch.float64)
tensor([ -8.8946, -20.9767, -12.6656, -35.1229, -23.6718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1027, device='cuda:0', dtype=torch.float64)
tensor([ -8.8306, -20.7803, -12.7567, -34.7037, -23.3816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0530, device='cuda:0', dtype=torch.float64)
tensor([ -8.7480, -20.5169, -12.8018, -34.2026, -23.0477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0880, device='cuda:0', dtype=torch.float64)
tensor([ -8.6828, -20.3568, -12.8800, -33.7935, -22.8443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1349, device='cuda:0', dtype=torch.float64)
tensor([ -8.5784, -20.1629, -12.8499, -33.2049, -22.2710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1520, device='cuda:0', dtype=torch.float64)
tensor([ -8.4568, -20.0466, -12.8205, -32.7506, -21.7782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4788, device='cuda:0', dtype=torch.float64)
tensor([ -8.2989, -19.6940, -12.8092, -31.7576, -21.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0229, device='cuda:0', dtype=torch.float64)
tensor([ -8.1287, -19.2876, -12.8312, -30.7478, -20.6326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9859, device='cuda:0', dtype=torch.float64)
tensor([ -7.9788, -18.8437, -12.8543, -29.7210, -20.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1044, device='cuda:0', dtype=torch.float64)
tensor([ -7.8148, -18.3593, -12.8042, -28.6321, -19.7767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9793, device='cuda:0', dtype=torch.float64)
tensor([ -7.7100, -17.9931, -12.7384, -27.7881, -19.3848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2184, device='cuda:0', dtype=torch.float64)
tensor([ -7.6059, -17.4555, -12.6834, -26.7699, -18.8801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0652, device='cuda:0', dtype=torch.float64)
tensor([ -7.5112, -17.0018, -12.5519, -25.8376, -18.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1072, device='cuda:0', dtype=torch.float64)
tensor([ -7.3847, -16.5812, -12.5447, -24.9842, -18.0269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8763, device='cuda:0', dtype=torch.float64)
tensor([ -7.2763, -16.1261, -12.5394, -24.1195, -17.5862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0828, device='cuda:0', dtype=torch.float64)
tensor([ -7.1811, -15.6648, -12.5124, -23.3368, -17.2741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2854, device='cuda:0', dtype=torch.float64)
tensor([ -7.1006, -15.4106, -12.6871, -22.9621, -17.1236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0843, device='cuda:0', dtype=torch.float64)
tensor([ -7.0566, -15.2888, -12.9461, -22.8036, -17.0850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1312, device='cuda:0', dtype=torch.float64)
tensor([ -7.0045, -15.2184, -13.2031, -22.6939, -17.1072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8676, device='cuda:0', dtype=torch.float64)
tensor([ -6.9653, -15.1012, -13.4158, -22.5806, -17.1058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9261, device='cuda:0', dtype=torch.float64)
tensor([ -6.9299, -14.9829, -13.6102, -22.4189, -17.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8272, device='cuda:0', dtype=torch.float64)
tensor([ -6.9168, -14.9722, -13.8708, -22.3903, -17.2881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0460, device='cuda:0', dtype=torch.float64)
tensor([ -6.9269, -14.9982, -14.0854, -22.5156, -17.4375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9927, device='cuda:0', dtype=torch.float64)
tensor([ -6.9602, -15.2000, -14.3400, -22.8666, -17.5934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1116, device='cuda:0', dtype=torch.float64)
tensor([ -7.0027, -15.5059, -14.5102, -23.3751, -17.6659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1521, device='cuda:0', dtype=torch.float64)
tensor([ -7.0651, -15.9215, -14.8114, -24.0151, -17.6626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([ -7.1258, -16.3835, -15.1189, -24.7416, -17.7224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0809, device='cuda:0', dtype=torch.float64)
tensor([ -7.1454, -16.7952, -15.3824, -25.2342, -17.8052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1913, device='cuda:0', dtype=torch.float64)
tensor([ -7.1699, -17.0355, -15.6055, -25.5741, -17.7906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9494, device='cuda:0', dtype=torch.float64)
tensor([ -7.2016, -17.4275, -15.9388, -26.2318, -17.8488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9341, device='cuda:0', dtype=torch.float64)
tensor([ -7.2435, -17.7090, -16.1352, -26.7893, -17.8512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0267, device='cuda:0', dtype=torch.float64)
tensor([ -7.2942, -17.9858, -16.2791, -27.3458, -17.8182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9784, device='cuda:0', dtype=torch.float64)
tensor([ -7.3723, -18.4266, -16.5142, -28.2804, -17.8574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0550, device='cuda:0', dtype=torch.float64)
tensor([ -7.4380, -18.9081, -16.7326, -29.3005, -17.8888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0006, device='cuda:0', dtype=torch.float64)
tensor([ -7.5011, -19.3680, -16.8641, -30.3175, -17.9387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0519, device='cuda:0', dtype=torch.float64)
tensor([ -7.5641, -19.8414, -17.0825, -31.4194, -18.0535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9422, device='cuda:0', dtype=torch.float64)
tensor([ -7.6206, -20.2636, -17.2469, -32.5352, -18.1157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8067, device='cuda:0', dtype=torch.float64)
tensor([ -7.6561, -20.4492, -17.3772, -33.2042, -18.1154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1368, device='cuda:0', dtype=torch.float64)
tensor([ -7.6781, -20.4449, -17.5417, -33.4515, -18.0647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8564, device='cuda:0', dtype=torch.float64)
tensor([ -7.7176, -20.5383, -17.7928, -33.9016, -18.1516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0242, device='cuda:0', dtype=torch.float64)
tensor([ -7.7218, -20.4350, -17.9786, -33.7784, -18.1301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9651, device='cuda:0', dtype=torch.float64)
tensor([ -7.7231, -20.3328, -17.9999, -33.5443, -18.1162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8037, device='cuda:0', dtype=torch.float64)
tensor([ -7.7046, -20.1321, -18.0093, -33.0654, -18.0108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0507, device='cuda:0', dtype=torch.float64)
tensor([ -7.6851, -20.0414, -17.9924, -32.8030, -17.9886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8849, device='cuda:0', dtype=torch.float64)
tensor([ -7.6792, -19.9262, -17.8718, -32.6893, -17.9012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0817, device='cuda:0', dtype=torch.float64)
tensor([ -7.6820, -19.7024, -17.6334, -32.5591, -17.7401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9342, device='cuda:0', dtype=torch.float64)
tensor([ -7.7075, -19.5973, -17.5275, -32.6087, -17.6325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8418, device='cuda:0', dtype=torch.float64)
tensor([ -7.7449, -19.4636, -17.3653, -32.5050, -17.5058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0482, device='cuda:0', dtype=torch.float64)
tensor([ -7.7772, -19.2404, -17.2122, -32.4032, -17.3754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9831, device='cuda:0', dtype=torch.float64)
tensor([ -7.8211, -19.1491, -17.0625, -32.3766, -17.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9148, device='cuda:0', dtype=torch.float64)
tensor([ -7.8579, -18.9451, -16.9828, -32.2323, -17.1075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9953, device='cuda:0', dtype=torch.float64)
tensor([ -7.8785, -18.7146, -16.8091, -32.1032, -16.8714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7853, device='cuda:0', dtype=torch.float64)
tensor([ -7.9043, -18.4514, -16.7150, -31.9388, -16.6532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0178, device='cuda:0', dtype=torch.float64)
tensor([ -7.9460, -18.3487, -16.6620, -31.9418, -16.4009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9234, device='cuda:0', dtype=torch.float64)
tensor([ -7.9953, -18.2859, -16.5896, -32.1745, -16.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8218, device='cuda:0', dtype=torch.float64)
tensor([ -8.0298, -18.1399, -16.4988, -32.2752, -15.8841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9944, device='cuda:0', dtype=torch.float64)
tensor([ -8.0461, -17.9370, -16.4315, -32.1715, -15.6150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9514, device='cuda:0', dtype=torch.float64)
tensor([ -8.0843, -17.9423, -16.4459, -32.6641, -15.4841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8321, device='cuda:0', dtype=torch.float64)
tensor([ -8.1261, -17.9134, -16.4843, -33.0062, -15.2840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9970, device='cuda:0', dtype=torch.float64)
tensor([ -8.1652, -17.9172, -16.4683, -33.3246, -15.2084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9035, device='cuda:0', dtype=torch.float64)
tensor([ -8.1703, -17.8412, -16.4379, -33.3070, -15.1177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9941, device='cuda:0', dtype=torch.float64)
tensor([ -8.1799, -17.8078, -16.4095, -33.4755, -15.1105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8140, device='cuda:0', dtype=torch.float64)
tensor([ -8.1930, -17.7562, -16.4838, -33.6870, -15.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7350, device='cuda:0', dtype=torch.float64)
tensor([ -8.2070, -17.7056, -16.5086, -33.7438, -15.1004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9025, device='cuda:0', dtype=torch.float64)
tensor([ -8.2019, -17.6349, -16.5365, -33.7432, -15.0986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8604, device='cuda:0', dtype=torch.float64)
tensor([ -8.1968, -17.4961, -16.5016, -33.5939, -15.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8125, device='cuda:0', dtype=torch.float64)
tensor([ -8.1580, -17.3324, -16.4190, -33.1976, -15.0207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7980, device='cuda:0', dtype=torch.float64)
tensor([ -8.1291, -17.2766, -16.3433, -33.1895, -15.0662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8736, device='cuda:0', dtype=torch.float64)
tensor([ -8.0944, -17.0953, -16.2182, -32.7983, -14.9946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9000, device='cuda:0', dtype=torch.float64)
tensor([ -8.0421, -16.8782, -15.9992, -32.2761, -14.8536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8285, device='cuda:0', dtype=torch.float64)
tensor([ -8.0033, -16.7213, -15.7423, -31.9801, -14.7229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8236, device='cuda:0', dtype=torch.float64)
tensor([ -7.9773, -16.6149, -15.4706, -31.7626, -14.5810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7538, device='cuda:0', dtype=torch.float64)
tensor([ -7.9676, -16.4484, -15.2806, -31.5120, -14.3739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7807, device='cuda:0', dtype=torch.float64)
tensor([ -7.9551, -16.2671, -15.1324, -31.1055, -14.1100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8571, device='cuda:0', dtype=torch.float64)
tensor([ -7.9546, -16.1590, -14.9826, -30.8046, -13.8453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8989, device='cuda:0', dtype=torch.float64)
tensor([ -7.9907, -16.0620, -14.8385, -30.5800, -13.5910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7501, device='cuda:0', dtype=torch.float64)
tensor([ -8.0239, -15.9831, -14.6928, -30.3943, -13.3512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7909, device='cuda:0', dtype=torch.float64)
tensor([ -8.0314, -15.8586, -14.4552, -30.0240, -13.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9770, device='cuda:0', dtype=torch.float64)
tensor([ -8.0183, -15.6427, -14.3130, -29.5341, -12.9135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7807, device='cuda:0', dtype=torch.float64)
tensor([ -8.0247, -15.4973, -14.1706, -29.2654, -12.7261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7356, device='cuda:0', dtype=torch.float64)
tensor([ -8.0145, -15.3931, -14.1144, -29.1192, -12.6312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8212, device='cuda:0', dtype=torch.float64)
tensor([ -8.0067, -15.3237, -14.0111, -28.9355, -12.4751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7002, device='cuda:0', dtype=torch.float64)
tensor([ -7.9947, -15.3405, -13.8830, -28.7368, -12.3330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8415, device='cuda:0', dtype=torch.float64)
tensor([ -7.9813, -15.4575, -13.8122, -28.7346, -12.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7061, device='cuda:0', dtype=torch.float64)
tensor([ -7.9819, -15.5929, -13.7913, -28.7421, -12.1769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7971, device='cuda:0', dtype=torch.float64)
tensor([ -8.0033, -15.8957, -13.8307, -28.9751, -12.2325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9142, device='cuda:0', dtype=torch.float64)
tensor([ -8.0391, -16.1782, -13.7109, -29.1683, -12.2817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7696, device='cuda:0', dtype=torch.float64)
tensor([ -8.0638, -16.5267, -13.6835, -29.5194, -12.4175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8853, device='cuda:0', dtype=torch.float64)
tensor([ -8.0900, -16.9819, -13.4923, -29.9602, -12.6251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8068, device='cuda:0', dtype=torch.float64)
tensor([ -8.1304, -17.4807, -13.3550, -30.7140, -12.8428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7815, device='cuda:0', dtype=torch.float64)
tensor([ -8.1957, -18.0454, -13.2916, -31.6657, -13.1504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6601, device='cuda:0', dtype=torch.float64)
tensor([ -8.2344, -18.5642, -13.1943, -32.5759, -13.4355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7232, device='cuda:0', dtype=torch.float64)
tensor([ -8.2677, -19.0090, -13.1361, -33.4533, -13.6872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7161, device='cuda:0', dtype=torch.float64)
tensor([ -8.3077, -19.4600, -13.0265, -34.3621, -13.9607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7039, device='cuda:0', dtype=torch.float64)
tensor([ -8.3287, -19.7678, -12.8682, -35.0166, -14.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7493, device='cuda:0', dtype=torch.float64)
tensor([ -8.3407, -19.8918, -12.6551, -35.3703, -14.4325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8122, device='cuda:0', dtype=torch.float64)
tensor([ -8.3406, -19.8737, -12.3968, -35.5639, -14.6447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7232, device='cuda:0', dtype=torch.float64)
tensor([ -8.3537, -19.8373, -12.1007, -35.6872, -14.7548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7368, device='cuda:0', dtype=torch.float64)
tensor([ -8.3415, -19.7155, -11.8776, -35.5883, -14.8840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6598, device='cuda:0', dtype=torch.float64)
tensor([ -8.3223, -19.6142, -11.7890, -35.5214, -15.0206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6629, device='cuda:0', dtype=torch.float64)
tensor([ -8.3146, -19.5432, -11.7532, -35.4115, -15.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8015, device='cuda:0', dtype=torch.float64)
tensor([ -8.3076, -19.5502, -11.7398, -35.5640, -15.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7781, device='cuda:0', dtype=torch.float64)
tensor([ -8.3067, -19.5260, -11.8100, -35.6917, -15.5013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7646, device='cuda:0', dtype=torch.float64)
tensor([ -8.2780, -19.4382, -11.8267, -35.6264, -15.6887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7046, device='cuda:0', dtype=torch.float64)
tensor([ -8.2652, -19.4272, -11.8771, -35.7662, -15.9103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7350, device='cuda:0', dtype=torch.float64)
tensor([ -8.2346, -19.3954, -11.8691, -35.7717, -16.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6695, device='cuda:0', dtype=torch.float64)
tensor([ -8.1787, -19.3478, -11.9466, -35.7011, -16.5068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6956, device='cuda:0', dtype=torch.float64)
tensor([ -8.1098, -19.2455, -11.9700, -35.4650, -16.7728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6450, device='cuda:0', dtype=torch.float64)
tensor([ -8.0506, -19.1928, -12.0413, -35.2467, -16.9815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6616, device='cuda:0', dtype=torch.float64)
tensor([ -7.9985, -19.1945, -12.1143, -35.0597, -17.1550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5998, device='cuda:0', dtype=torch.float64)
tensor([ -7.9264, -19.1042, -12.1491, -34.7426, -17.3923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7484, device='cuda:0', dtype=torch.float64)
tensor([ -7.8681, -18.9104, -12.1505, -34.3602, -17.5080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6767, device='cuda:0', dtype=torch.float64)
tensor([ -7.8441, -18.7192, -12.1102, -34.0273, -17.6159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7243, device='cuda:0', dtype=torch.float64)
tensor([ -7.8401, -18.5955, -12.0557, -33.9821, -17.7730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6863, device='cuda:0', dtype=torch.float64)
tensor([ -7.8222, -18.5067, -12.0048, -33.9253, -17.9268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9566, device='cuda:0', dtype=torch.float64)
tensor([ -7.8251, -18.4537, -11.9825, -33.8428, -18.0184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7242, device='cuda:0', dtype=torch.float64)
tensor([ -7.8426, -18.3112, -11.9979, -33.6163, -18.0587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7527, device='cuda:0', dtype=torch.float64)
tensor([ -7.8667, -18.2114, -11.9770, -33.3221, -18.0572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5947, device='cuda:0', dtype=torch.float64)
tensor([ -7.8713, -18.0231, -11.9063, -32.8998, -18.0838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6789, device='cuda:0', dtype=torch.float64)
tensor([ -7.8732, -17.8277, -11.7883, -32.4327, -18.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7688, device='cuda:0', dtype=torch.float64)
tensor([ -7.8911, -17.5704, -11.5921, -31.8677, -18.1208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7194, device='cuda:0', dtype=torch.float64)
tensor([ -7.9210, -17.2752, -11.3536, -31.3050, -18.0837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7120, device='cuda:0', dtype=torch.float64)
tensor([ -7.9598, -17.0630, -11.2066, -30.9505, -18.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6752, device='cuda:0', dtype=torch.float64)
tensor([ -7.9904, -16.7885, -11.1108, -30.5257, -18.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6886, device='cuda:0', dtype=torch.float64)
tensor([ -8.0130, -16.5479, -11.0325, -30.1496, -18.3401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6290, device='cuda:0', dtype=torch.float64)
tensor([ -8.0336, -16.2939, -11.0131, -29.8025, -18.4067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7227, device='cuda:0', dtype=torch.float64)
tensor([ -8.0325, -16.0388, -11.0090, -29.3789, -18.4135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5435, device='cuda:0', dtype=torch.float64)
tensor([ -8.0418, -15.8064, -10.9853, -28.9812, -18.4077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6409, device='cuda:0', dtype=torch.float64)
tensor([ -8.0381, -15.5857, -10.9356, -28.5092, -18.4066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7256, device='cuda:0', dtype=torch.float64)
tensor([ -8.0415, -15.3975, -10.9259, -28.0598, -18.3728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7821, device='cuda:0', dtype=torch.float64)
tensor([ -8.0319, -15.2002, -10.9388, -27.7203, -18.3551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6333, device='cuda:0', dtype=torch.float64)
tensor([ -8.0221, -14.9686, -10.9455, -27.3499, -18.3171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6385, device='cuda:0', dtype=torch.float64)
tensor([ -8.0076, -14.7556, -10.9446, -26.9229, -18.3216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5769, device='cuda:0', dtype=torch.float64)
tensor([ -7.9869, -14.5523, -10.9734, -26.4438, -18.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7278, device='cuda:0', dtype=torch.float64)
tensor([ -7.9768, -14.5066, -11.0613, -26.3083, -18.3653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6265, device='cuda:0', dtype=torch.float64)
tensor([ -7.9463, -14.4312, -11.0524, -26.1958, -18.4476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5553, device='cuda:0', dtype=torch.float64)
tensor([ -7.8979, -14.3473, -11.0514, -26.0613, -18.5580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6078, device='cuda:0', dtype=torch.float64)
tensor([ -7.8654, -14.2958, -11.0431, -25.9682, -18.6413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6570, device='cuda:0', dtype=torch.float64)
tensor([ -7.8323, -14.2850, -11.0381, -25.9410, -18.7503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5295, device='cuda:0', dtype=torch.float64)
tensor([ -7.8019, -14.3173, -11.0878, -25.9588, -18.8789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7575, device='cuda:0', dtype=torch.float64)
tensor([ -7.7828, -14.3535, -11.1845, -26.0542, -19.0596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6377, device='cuda:0', dtype=torch.float64)
tensor([ -7.7567, -14.3578, -11.2513, -26.0182, -19.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6191, device='cuda:0', dtype=torch.float64)
tensor([ -7.7313, -14.3701, -11.3308, -26.0333, -19.4167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5114, device='cuda:0', dtype=torch.float64)
tensor([ -7.7152, -14.3723, -11.3649, -25.9400, -19.5199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5878, device='cuda:0', dtype=torch.float64)
tensor([ -7.6990, -14.4062, -11.4451, -25.8190, -19.6136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6654, device='cuda:0', dtype=torch.float64)
tensor([ -7.6817, -14.4909, -11.5566, -25.7754, -19.7130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5396, device='cuda:0', dtype=torch.float64)
tensor([ -7.6645, -14.5697, -11.6544, -25.7286, -19.7567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5551, device='cuda:0', dtype=torch.float64)
tensor([ -7.6629, -14.6775, -11.8099, -25.7132, -19.7971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5791, device='cuda:0', dtype=torch.float64)
tensor([ -7.6691, -14.8199, -12.0165, -25.7977, -19.8342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6596, device='cuda:0', dtype=torch.float64)
tensor([ -7.6882, -15.0176, -12.3025, -26.0086, -19.9378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5725, device='cuda:0', dtype=torch.float64)
tensor([ -7.7009, -15.1905, -12.6095, -26.1554, -20.0161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5198, device='cuda:0', dtype=torch.float64)
tensor([ -7.7214, -15.3760, -12.9076, -26.4053, -20.0980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5339, device='cuda:0', dtype=torch.float64)
tensor([ -7.7385, -15.5331, -13.1320, -26.5185, -20.0906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5488, device='cuda:0', dtype=torch.float64)
tensor([ -7.7391, -15.5815, -13.3505, -26.4613, -20.0483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5712, device='cuda:0', dtype=torch.float64)
tensor([ -7.7481, -15.6233, -13.5640, -26.4505, -20.0244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5406, device='cuda:0', dtype=torch.float64)
tensor([ -7.7624, -15.6250, -13.6979, -26.3756, -19.9788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5611, device='cuda:0', dtype=torch.float64)
tensor([ -7.7606, -15.5873, -13.7726, -26.1426, -19.8972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5458, device='cuda:0', dtype=torch.float64)
tensor([ -7.7475, -15.5322, -13.8651, -25.8526, -19.8432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5417, device='cuda:0', dtype=torch.float64)
tensor([ -7.7342, -15.4165, -13.9448, -25.5477, -19.7523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5558, device='cuda:0', dtype=torch.float64)
tensor([ -7.7186, -15.2766, -13.9635, -25.1875, -19.6429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5396, device='cuda:0', dtype=torch.float64)
tensor([ -7.7099, -15.0920, -13.9425, -24.7930, -19.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4693, device='cuda:0', dtype=torch.float64)
tensor([ -7.7122, -14.9689, -13.9548, -24.5663, -19.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5493, device='cuda:0', dtype=torch.float64)
tensor([ -7.7304, -14.8937, -13.9637, -24.4420, -19.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5082, device='cuda:0', dtype=torch.float64)
tensor([ -7.7417, -14.8078, -13.9495, -24.2771, -19.0627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4686, device='cuda:0', dtype=torch.float64)
tensor([ -7.7510, -14.7553, -13.8859, -24.1797, -18.9343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5563, device='cuda:0', dtype=torch.float64)
tensor([ -7.7546, -14.7441, -13.7805, -24.1152, -18.8502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4855, device='cuda:0', dtype=torch.float64)
tensor([ -7.7441, -14.6689, -13.6527, -23.9037, -18.7904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4624, device='cuda:0', dtype=torch.float64)
tensor([ -7.7321, -14.6376, -13.5836, -23.8358, -18.7867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4696, device='cuda:0', dtype=torch.float64)
tensor([ -7.7298, -14.5974, -13.5178, -23.7365, -18.7420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4618, device='cuda:0', dtype=torch.float64)
tensor([ -7.7323, -14.4883, -13.4630, -23.5477, -18.7129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5360, device='cuda:0', dtype=torch.float64)
tensor([ -7.7351, -14.3498, -13.3776, -23.2694, -18.6426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5375, device='cuda:0', dtype=torch.float64)
tensor([ -7.7300, -14.1984, -13.2837, -23.0183, -18.5342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4928, device='cuda:0', dtype=torch.float64)
tensor([ -7.7203, -14.0623, -13.1418, -22.7302, -18.3901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5108, device='cuda:0', dtype=torch.float64)
tensor([ -7.6986, -13.9380, -12.9816, -22.5262, -18.2873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4478, device='cuda:0', dtype=torch.float64)
tensor([ -7.6784, -13.8590, -12.8124, -22.3700, -18.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4981, device='cuda:0', dtype=torch.float64)
tensor([ -7.6633, -13.7880, -12.6964, -22.2222, -18.1252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5207, device='cuda:0', dtype=torch.float64)
tensor([ -7.6711, -13.7557, -12.5449, -22.2215, -18.0108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4896, device='cuda:0', dtype=torch.float64)
tensor([ -7.6813, -13.7095, -12.3730, -22.1629, -17.8455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4534, device='cuda:0', dtype=torch.float64)
tensor([ -7.6919, -13.6758, -12.2219, -22.1338, -17.6473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5468, device='cuda:0', dtype=torch.float64)
tensor([ -7.6969, -13.6431, -12.0813, -22.0687, -17.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4087, device='cuda:0', dtype=torch.float64)
tensor([ -7.6937, -13.6118, -11.9617, -22.0548, -17.3591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5270, device='cuda:0', dtype=torch.float64)
tensor([ -7.6965, -13.5794, -11.8583, -22.0184, -17.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4194, device='cuda:0', dtype=torch.float64)
tensor([ -7.7046, -13.5559, -11.7826, -22.0633, -17.0219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4463, device='cuda:0', dtype=torch.float64)
tensor([ -7.7094, -13.4940, -11.7185, -22.0137, -16.8840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4798, device='cuda:0', dtype=torch.float64)
tensor([ -7.7099, -13.4389, -11.6682, -21.9648, -16.7807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4712, device='cuda:0', dtype=torch.float64)
tensor([ -7.7324, -13.3976, -11.6335, -22.0235, -16.7318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4624, device='cuda:0', dtype=torch.float64)
tensor([ -7.7399, -13.3801, -11.6361, -22.0633, -16.6353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3982, device='cuda:0', dtype=torch.float64)
tensor([ -7.7516, -13.3520, -11.6467, -22.0349, -16.5298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4626, device='cuda:0', dtype=torch.float64)
tensor([ -7.7665, -13.3192, -11.6764, -22.0667, -16.5015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4375, device='cuda:0', dtype=torch.float64)
tensor([ -7.7710, -13.3147, -11.7328, -22.1073, -16.4868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4385, device='cuda:0', dtype=torch.float64)
tensor([ -7.7719, -13.3242, -11.7724, -22.1055, -16.4959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4642, device='cuda:0', dtype=torch.float64)
tensor([ -7.7773, -13.3379, -11.7761, -22.0916, -16.4877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3472, device='cuda:0', dtype=torch.float64)
tensor([ -7.7703, -13.3373, -11.7872, -22.0895, -16.4492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4418, device='cuda:0', dtype=torch.float64)
tensor([ -7.7519, -13.3223, -11.8010, -22.0678, -16.4297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4428, device='cuda:0', dtype=torch.float64)
tensor([ -7.7214, -13.3124, -11.8198, -22.0953, -16.4222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4198, device='cuda:0', dtype=torch.float64)
tensor([ -7.6916, -13.2756, -11.8337, -22.0851, -16.4013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4609, device='cuda:0', dtype=torch.float64)
tensor([ -7.6568, -13.1975, -11.8029, -21.8555, -16.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3770, device='cuda:0', dtype=torch.float64)
tensor([ -7.6332, -13.1395, -11.7812, -21.6709, -16.2870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3832, device='cuda:0', dtype=torch.float64)
tensor([ -7.6117, -13.0701, -11.7642, -21.4825, -16.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4295, device='cuda:0', dtype=torch.float64)
tensor([ -7.5979, -13.0056, -11.7509, -21.3450, -16.2025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3533, device='cuda:0', dtype=torch.float64)
tensor([ -7.5799, -12.9390, -11.7412, -21.2053, -16.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3774, device='cuda:0', dtype=torch.float64)
tensor([ -7.5577, -12.9079, -11.7577, -21.1540, -16.1084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4128, device='cuda:0', dtype=torch.float64)
tensor([ -7.5534, -12.8633, -11.7368, -21.0458, -16.0522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3834, device='cuda:0', dtype=torch.float64)
tensor([ -7.5491, -12.8078, -11.7306, -20.9774, -16.0243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5001, device='cuda:0', dtype=torch.float64)
tensor([ -7.5404, -12.7447, -11.7515, -20.9732, -16.0218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3722, device='cuda:0', dtype=torch.float64)
tensor([ -7.5388, -12.6916, -11.7689, -20.9655, -15.9979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3983, device='cuda:0', dtype=torch.float64)
tensor([ -7.5365, -12.6340, -11.7790, -20.9304, -15.9994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3690, device='cuda:0', dtype=torch.float64)
tensor([ -7.5269, -12.5762, -11.8025, -20.9181, -15.9680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3964, device='cuda:0', dtype=torch.float64)
tensor([ -7.5381, -12.5369, -11.8377, -21.0189, -15.9247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3790, device='cuda:0', dtype=torch.float64)
tensor([ -7.5430, -12.4966, -11.8702, -21.0946, -15.8600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4295, device='cuda:0', dtype=torch.float64)
tensor([ -7.5509, -12.4901, -11.9362, -21.2855, -15.8511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3764, device='cuda:0', dtype=torch.float64)
tensor([ -7.5677, -12.4685, -11.9989, -21.4859, -15.8370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4081, device='cuda:0', dtype=torch.float64)
tensor([ -7.5892, -12.4343, -12.0338, -21.5228, -15.8539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3540, device='cuda:0', dtype=torch.float64)
tensor([ -7.6085, -12.3866, -12.0691, -21.5604, -15.8969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3619, device='cuda:0', dtype=torch.float64)
tensor([ -7.6170, -12.3462, -12.0856, -21.5633, -15.8996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4290, device='cuda:0', dtype=torch.float64)
tensor([ -7.6220, -12.3137, -12.1121, -21.5788, -15.8927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3493, device='cuda:0', dtype=torch.float64)
tensor([ -7.6166, -12.3011, -12.1545, -21.6474, -15.9037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3443, device='cuda:0', dtype=torch.float64)
tensor([ -7.6116, -12.2727, -12.2115, -21.6803, -15.9238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3756, device='cuda:0', dtype=torch.float64)
tensor([ -7.5923, -12.2448, -12.2703, -21.6719, -15.9630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3457, device='cuda:0', dtype=torch.float64)
tensor([ -7.5800, -12.2220, -12.3319, -21.7111, -16.0067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3702, device='cuda:0', dtype=torch.float64)
tensor([ -7.5667, -12.2237, -12.4089, -21.8308, -16.0522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3274, device='cuda:0', dtype=torch.float64)
tensor([ -7.5574, -12.2030, -12.4680, -21.8880, -16.0778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3538, device='cuda:0', dtype=torch.float64)
tensor([ -7.5569, -12.1896, -12.5102, -21.9296, -16.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3671, device='cuda:0', dtype=torch.float64)
tensor([ -7.5585, -12.1469, -12.5376, -21.9141, -16.1626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4330, device='cuda:0', dtype=torch.float64)
tensor([ -7.5514, -12.1273, -12.5680, -21.9645, -16.2347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3395, device='cuda:0', dtype=torch.float64)
tensor([ -7.5412, -12.1360, -12.5978, -22.0859, -16.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3457, device='cuda:0', dtype=torch.float64)
tensor([ -7.5306, -12.1409, -12.6164, -22.1411, -16.3541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3398, device='cuda:0', dtype=torch.float64)
tensor([ -7.5229, -12.1501, -12.6306, -22.1560, -16.3925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3113, device='cuda:0', dtype=torch.float64)
tensor([ -7.5184, -12.1707, -12.6433, -22.2111, -16.4401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2945, device='cuda:0', dtype=torch.float64)
tensor([ -7.5196, -12.1835, -12.6328, -22.1964, -16.4311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3543, device='cuda:0', dtype=torch.float64)
tensor([ -7.5171, -12.2052, -12.6081, -22.1937, -16.4362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2994, device='cuda:0', dtype=torch.float64)
tensor([ -7.5113, -12.1973, -12.5878, -22.1532, -16.4157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3150, device='cuda:0', dtype=torch.float64)
tensor([ -7.5040, -12.1929, -12.5498, -22.0618, -16.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3639, device='cuda:0', dtype=torch.float64)
tensor([ -7.4866, -12.1374, -12.5091, -21.8426, -16.3212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3143, device='cuda:0', dtype=torch.float64)
tensor([ -7.4643, -12.1187, -12.4858, -21.6909, -16.2620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4049, device='cuda:0', dtype=torch.float64)
tensor([ -7.4384, -12.0368, -12.4369, -21.3762, -16.1514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([ -7.4097, -11.9570, -12.3828, -21.0682, -16.0224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2823, device='cuda:0', dtype=torch.float64)
tensor([ -7.3787, -11.8725, -12.3331, -20.7954, -15.8895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3457, device='cuda:0', dtype=torch.float64)
tensor([ -7.3527, -11.7817, -12.2525, -20.4508, -15.7298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3424, device='cuda:0', dtype=torch.float64)
tensor([ -7.3341, -11.6721, -12.1655, -20.1150, -15.5331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3244, device='cuda:0', dtype=torch.float64)
tensor([ -7.3123, -11.5519, -12.1008, -19.7774, -15.3678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2705, device='cuda:0', dtype=torch.float64)
tensor([ -7.2913, -11.4274, -12.0232, -19.4216, -15.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3472, device='cuda:0', dtype=torch.float64)
tensor([ -7.2745, -11.2921, -11.9331, -18.9817, -14.9790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2984, device='cuda:0', dtype=torch.float64)
tensor([ -7.2607, -11.1735, -11.8574, -18.6152, -14.7788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3096, device='cuda:0', dtype=torch.float64)
tensor([ -7.2446, -11.0503, -11.7937, -18.2690, -14.6141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2877, device='cuda:0', dtype=torch.float64)
tensor([ -7.2266, -10.9223, -11.7395, -17.9128, -14.4950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2862, device='cuda:0', dtype=torch.float64)
tensor([ -7.2190, -10.8415, -11.7079, -17.6999, -14.3741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3153, device='cuda:0', dtype=torch.float64)
tensor([ -7.2106, -10.7824, -11.6922, -17.5487, -14.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2774, device='cuda:0', dtype=torch.float64)
tensor([ -7.1970, -10.7176, -11.6727, -17.3468, -14.1288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3084, device='cuda:0', dtype=torch.float64)
tensor([ -7.1705, -10.6568, -11.6557, -17.0762, -14.0137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2954, device='cuda:0', dtype=torch.float64)
tensor([ -7.1422, -10.5956, -11.6344, -16.8000, -13.8977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2853, device='cuda:0', dtype=torch.float64)
tensor([ -7.1250, -10.5429, -11.6111, -16.5554, -13.7720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2838, device='cuda:0', dtype=torch.float64)
tensor([ -7.1045, -10.4764, -11.5777, -16.3000, -13.6443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2814, device='cuda:0', dtype=torch.float64)
tensor([ -7.0855, -10.4375, -11.5517, -16.1478, -13.5285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2710, device='cuda:0', dtype=torch.float64)
tensor([ -7.0690, -10.3919, -11.5281, -15.9865, -13.4290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2660, device='cuda:0', dtype=torch.float64)
tensor([ -7.0513, -10.3521, -11.5087, -15.8525, -13.3299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2715, device='cuda:0', dtype=torch.float64)
tensor([ -7.0428, -10.3344, -11.4943, -15.7490, -13.2353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3042, device='cuda:0', dtype=torch.float64)
tensor([ -7.0360, -10.3171, -11.4621, -15.6405, -13.1448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3053, device='cuda:0', dtype=torch.float64)
tensor([ -7.0309, -10.2966, -11.4353, -15.5480, -13.0715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2926, device='cuda:0', dtype=torch.float64)
tensor([ -7.0187, -10.2721, -11.4088, -15.4735, -13.0081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2830, device='cuda:0', dtype=torch.float64)
tensor([ -7.0023, -10.2482, -11.3742, -15.3755, -12.9561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2800, device='cuda:0', dtype=torch.float64)
tensor([ -6.9887, -10.2263, -11.3283, -15.2479, -12.9046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3077, device='cuda:0', dtype=torch.float64)
tensor([ -6.9790, -10.1978, -11.2857, -15.1052, -12.8648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2848, device='cuda:0', dtype=torch.float64)
tensor([ -6.9698, -10.1709, -11.2399, -14.9372, -12.8066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3115, device='cuda:0', dtype=torch.float64)
tensor([ -6.9608, -10.1561, -11.2090, -14.8428, -12.7524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2744, device='cuda:0', dtype=torch.float64)
tensor([ -6.9543, -10.1501, -11.1541, -14.7143, -12.6813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2731, device='cuda:0', dtype=torch.float64)
tensor([ -6.9471, -10.1440, -11.1177, -14.6160, -12.6274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3039, device='cuda:0', dtype=torch.float64)
tensor([ -6.9438, -10.1242, -11.0797, -14.5152, -12.5761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2267, device='cuda:0', dtype=torch.float64)
tensor([ -6.9399, -10.1044, -11.0511, -14.4127, -12.5244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2989, device='cuda:0', dtype=torch.float64)
tensor([ -6.9361, -10.0739, -11.0286, -14.3211, -12.4996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2357, device='cuda:0', dtype=torch.float64)
tensor([ -6.9279, -10.0349, -10.9919, -14.2138, -12.4646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2602, device='cuda:0', dtype=torch.float64)
tensor([ -6.9173, -10.0049, -10.9715, -14.1267, -12.4539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2910, device='cuda:0', dtype=torch.float64)
tensor([ -6.9016,  -9.9790, -10.9648, -14.0519, -12.4360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2305, device='cuda:0', dtype=torch.float64)
tensor([ -6.8885,  -9.9539, -10.9515, -13.9832, -12.4125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2630, device='cuda:0', dtype=torch.float64)
tensor([ -6.8730,  -9.9308, -10.9352, -13.9163, -12.3733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3121, device='cuda:0', dtype=torch.float64)
tensor([ -6.8574,  -9.9127, -10.9350, -13.8627, -12.3769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2664, device='cuda:0', dtype=torch.float64)
tensor([ -6.8442,  -9.8918, -10.9308, -13.8119, -12.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3078, device='cuda:0', dtype=torch.float64)
tensor([ -6.8428,  -9.8766, -10.9066, -13.7747, -12.3626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2939, device='cuda:0', dtype=torch.float64)
tensor([ -6.8336,  -9.8651, -10.8726, -13.7477, -12.3568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2531, device='cuda:0', dtype=torch.float64)
tensor([ -6.8238,  -9.8610, -10.8357, -13.7135, -12.3486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2327, device='cuda:0', dtype=torch.float64)
tensor([ -6.8106,  -9.8584, -10.8095, -13.6880, -12.3279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2859, device='cuda:0', dtype=torch.float64)
tensor([ -6.8040,  -9.8653, -10.7667, -13.6637, -12.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2198, device='cuda:0', dtype=torch.float64)
tensor([ -6.7959,  -9.8742, -10.7147, -13.6384, -12.3036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2512, device='cuda:0', dtype=torch.float64)
tensor([ -6.7887,  -9.8894, -10.6755, -13.6342, -12.3246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2190, device='cuda:0', dtype=torch.float64)
tensor([ -6.7820,  -9.9030, -10.6298, -13.6280, -12.3131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2692, device='cuda:0', dtype=torch.float64)
tensor([ -6.7774,  -9.9288, -10.5837, -13.6220, -12.2916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2445, device='cuda:0', dtype=torch.float64)
tensor([ -6.7755,  -9.9457, -10.5527, -13.6173, -12.2716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3186, device='cuda:0', dtype=torch.float64)
tensor([ -6.7712,  -9.9633, -10.5283, -13.6106, -12.2631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2703, device='cuda:0', dtype=torch.float64)
tensor([ -6.7723,  -9.9869, -10.4811, -13.6003, -12.2498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2277, device='cuda:0', dtype=torch.float64)
tensor([ -6.7705,  -9.9953, -10.4485, -13.5872, -12.2542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2669, device='cuda:0', dtype=torch.float64)
tensor([ -6.7691,  -9.9926, -10.4248, -13.5584, -12.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2467, device='cuda:0', dtype=torch.float64)
tensor([ -6.7638,  -9.9876, -10.4168, -13.5279, -12.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3083, device='cuda:0', dtype=torch.float64)
tensor([ -6.7591,  -9.9855, -10.3987, -13.5059, -12.2162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2662, device='cuda:0', dtype=torch.float64)
tensor([ -6.7440,  -9.9806, -10.3882, -13.4721, -12.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2669, device='cuda:0', dtype=torch.float64)
tensor([ -6.7309,  -9.9753, -10.3767, -13.4584, -12.1759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2494, device='cuda:0', dtype=torch.float64)
tensor([ -6.7262,  -9.9811, -10.3538, -13.4543, -12.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2899, device='cuda:0', dtype=torch.float64)
tensor([ -6.7230,  -9.9742, -10.3332, -13.4317, -12.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2633, device='cuda:0', dtype=torch.float64)
tensor([ -6.7337,  -9.9811, -10.2896, -13.4280, -12.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2872, device='cuda:0', dtype=torch.float64)
tensor([ -6.7314,  -9.9750, -10.2809, -13.4149, -12.1366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2765, device='cuda:0', dtype=torch.float64)
tensor([ -6.7328,  -9.9790, -10.2637, -13.4051, -12.1269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2424, device='cuda:0', dtype=torch.float64)
tensor([ -6.7297,  -9.9777, -10.2494, -13.3926, -12.1118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2317, device='cuda:0', dtype=torch.float64)
tensor([ -6.7299,  -9.9767, -10.2409, -13.3835, -12.0939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2727, device='cuda:0', dtype=torch.float64)
tensor([ -6.7317,  -9.9833, -10.2320, -13.3815, -12.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3116, device='cuda:0', dtype=torch.float64)
tensor([ -6.7247,  -9.9763, -10.2484, -13.3632, -12.0793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2974, device='cuda:0', dtype=torch.float64)
tensor([ -6.7260,  -9.9929, -10.2647, -13.3432, -12.0599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2863, device='cuda:0', dtype=torch.float64)
tensor([ -6.7258, -10.0097, -10.2934, -13.3236, -12.0521], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_024328.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(121.1667, device='cuda:0', dtype=torch.float64)
tensor([ -2.0542, -12.1258,  -6.4309, -10.7881,  -5.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(64.4294, device='cuda:0', dtype=torch.float64)
tensor([ -2.8973,  -9.8341,  -6.9983, -11.8393, -16.4621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(115.7217, device='cuda:0', dtype=torch.float64)
tensor([ -3.6232,  -6.6891,  -5.9951, -16.4192, -18.0363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(125.4274, device='cuda:0', dtype=torch.float64)
tensor([ -2.6374,  -5.2043,  -4.5258, -13.2000, -13.4817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(86.4048, device='cuda:0', dtype=torch.float64)
tensor([ -2.5914,  -4.7901,  -3.3444,  -9.8021, -10.5282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(51.5264, device='cuda:0', dtype=torch.float64)
tensor([-2.4996, -4.9150, -3.0103, -6.4267, -6.4474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(41.4663, device='cuda:0', dtype=torch.float64)
tensor([-2.5244, -5.0633, -2.9416, -6.3946, -4.8344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(49.4116, device='cuda:0', dtype=torch.float64)
tensor([-2.5406, -4.8285, -2.8985, -6.5945, -4.6661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(51.0535, device='cuda:0', dtype=torch.float64)
tensor([-2.5751, -5.4407, -2.9404, -7.7967, -4.4394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(51.0687, device='cuda:0', dtype=torch.float64)
tensor([ -2.5623,  -5.4413,  -3.1894, -12.2401,  -4.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.1621, device='cuda:0', dtype=torch.float64)
tensor([ -2.4410,  -4.4632,  -3.5219, -13.6174,  -4.3076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.3022, device='cuda:0', dtype=torch.float64)
tensor([ -2.2555,  -3.8109,  -3.7585, -11.0653,  -4.7665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.9950, device='cuda:0', dtype=torch.float64)
tensor([-2.0841, -3.4039, -4.2988, -7.6215, -4.8250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.3278, device='cuda:0', dtype=torch.float64)
tensor([-1.9988, -3.1743, -4.4854, -4.6311, -4.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.4013, device='cuda:0', dtype=torch.float64)
tensor([-2.0065, -3.1430, -4.0277, -3.8699, -3.8587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.3380, device='cuda:0', dtype=torch.float64)
tensor([-2.0817, -3.1913, -3.5640, -3.6155, -3.8088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.5531, device='cuda:0', dtype=torch.float64)
tensor([-2.1694, -3.3820, -3.3214, -3.4766, -3.7774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.2484, device='cuda:0', dtype=torch.float64)
tensor([-2.2007, -3.6519, -3.2131, -3.4503, -3.7464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.2294, device='cuda:0', dtype=torch.float64)
tensor([-2.1410, -3.5150, -3.1552, -3.4673, -3.7003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.0499, device='cuda:0', dtype=torch.float64)
tensor([-2.0350, -3.1096, -3.1077, -3.4810, -3.6201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.0649, device='cuda:0', dtype=torch.float64)
tensor([-1.9492, -2.9102, -3.0536, -3.5414, -3.5324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8511, device='cuda:0', dtype=torch.float64)
tensor([-1.9037, -2.8885, -2.9931, -3.5981, -3.4715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.0147, device='cuda:0', dtype=torch.float64)
tensor([-1.8893, -2.9159, -2.9369, -3.6366, -3.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.7283, device='cuda:0', dtype=torch.float64)
tensor([-1.8894, -2.9658, -2.8935, -3.7077, -3.4688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.3116, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -3.0284, -2.8646, -3.8198, -3.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9955, device='cuda:0', dtype=torch.float64)
tensor([-1.9041, -3.0860, -2.8435, -3.8890, -3.4594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.3143, device='cuda:0', dtype=torch.float64)
tensor([-1.9113, -3.1115, -2.8282, -3.8610, -3.4248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.6805, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -3.0860, -2.8186, -3.7717, -3.4068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.4589, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -3.0272, -2.8140, -3.6864, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2971, device='cuda:0', dtype=torch.float64)
tensor([-1.8052, -2.9646, -2.8141, -3.6335, -3.4190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2970, device='cuda:0', dtype=torch.float64)
tensor([-1.7772, -2.9136, -2.8180, -3.6081, -3.4447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5521, device='cuda:0', dtype=torch.float64)
tensor([-1.7650, -2.8796, -2.8246, -3.5995, -3.4767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1100, device='cuda:0', dtype=torch.float64)
tensor([-1.7634, -2.8597, -2.8326, -3.5998, -3.5075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1535, device='cuda:0', dtype=torch.float64)
tensor([-1.7684, -2.8394, -2.8403, -3.6023, -3.5284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4891, device='cuda:0', dtype=torch.float64)
tensor([-1.7774, -2.8104, -2.8451, -3.5996, -3.5323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6035, device='cuda:0', dtype=torch.float64)
tensor([-1.7888, -2.7798, -2.8444, -3.5953, -3.5166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5523, device='cuda:0', dtype=torch.float64)
tensor([-1.8008, -2.7586, -2.8373, -3.5948, -3.4845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3527, device='cuda:0', dtype=torch.float64)
tensor([-1.8125, -2.7512, -2.8245, -3.5954, -3.4437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9219, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.7544, -2.8086, -3.5958, -3.4027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4223, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7650, -2.7912, -3.5950, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8994, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.7805, -2.7718, -3.5906, -3.3309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5220, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7988, -2.7492, -3.5772, -3.2973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3890, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.8177, -2.7258, -3.5558, -3.2682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2717, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.8364, -2.7061, -3.5314, -3.2487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2923, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.8531, -2.6931, -3.5075, -3.2395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1864, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.8673, -2.6873, -3.4850, -3.2384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1318, device='cuda:0', dtype=torch.float64)
tensor([-1.8713, -2.8789, -2.6871, -3.4621, -3.2429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9983, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.8871, -2.6923, -3.4397, -3.2505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7728, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.8914, -2.7015, -3.4194, -3.2603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5910, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.8912, -2.7137, -3.4030, -3.2715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4304, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.8867, -2.7287, -3.3926, -3.2826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3739, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.8784, -2.7446, -3.3874, -3.2946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2256, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.8688, -2.7600, -3.3862, -3.3066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2410, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.8596, -2.7736, -3.3878, -3.3186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2130, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.8521, -2.7845, -3.3905, -3.3306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1716, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.8464, -2.7924, -3.3934, -3.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1426, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.8423, -2.7974, -3.3955, -3.3523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0771, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.8386, -2.8002, -3.3976, -3.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0605, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.8345, -2.8015, -3.3993, -3.3639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9566, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.8303, -2.8011, -3.3996, -3.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0094, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.8263, -2.7988, -3.3975, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8862, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.8224, -2.7953, -3.3940, -3.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8564, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.8181, -2.7922, -3.3893, -3.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8153, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.8132, -2.7890, -3.3832, -3.3624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5421, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.8081, -2.7880, -3.3784, -3.3618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6287, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.8020, -2.7894, -3.3755, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6072, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.7948, -2.7938, -3.3742, -3.3618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4397, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.7869, -2.7996, -3.3742, -3.3624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4414, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7795, -2.8067, -3.3757, -3.3628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3825, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.7740, -2.8136, -3.3763, -3.3640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3933, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7710, -2.8194, -3.3760, -3.3659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3271, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7712, -2.8235, -3.3738, -3.3684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3804, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7738, -2.8264, -3.3704, -3.3714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2777, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.7778, -2.8290, -3.3668, -3.3751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3059, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7825, -2.8315, -3.3641, -3.3793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2286, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.7873, -2.8341, -3.3620, -3.3834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1501, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.7924, -2.8366, -3.3599, -3.3872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1532, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.7974, -2.8386, -3.3571, -3.3906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2382, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.8013, -2.8407, -3.3535, -3.3940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1257, device='cuda:0', dtype=torch.float64)
tensor([-1.8621, -2.8052, -2.8425, -3.3503, -3.3961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2523, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.8086, -2.8441, -3.3475, -3.3972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2055, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.8109, -2.8458, -3.3446, -3.3977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1799, device='cuda:0', dtype=torch.float64)
tensor([-1.8703, -2.8127, -2.8472, -3.3418, -3.3982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0597, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.8133, -2.8490, -3.3397, -3.3987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0801, device='cuda:0', dtype=torch.float64)
tensor([-1.8733, -2.8123, -2.8514, -3.3388, -3.3983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0580, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.8108, -2.8539, -3.3390, -3.3972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1673, device='cuda:0', dtype=torch.float64)
tensor([-1.8749, -2.8095, -2.8557, -3.3396, -3.3951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0968, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.8087, -2.8560, -3.3393, -3.3921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1008, device='cuda:0', dtype=torch.float64)
tensor([-1.8758, -2.8070, -2.8563, -3.3395, -3.3891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0712, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.8061, -2.8565, -3.3386, -3.3869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0944, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.8060, -2.8555, -3.3365, -3.3853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1668, device='cuda:0', dtype=torch.float64)
tensor([-1.8773, -2.8058, -2.8557, -3.3350, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0802, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.8049, -2.8561, -3.3353, -3.3810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0501, device='cuda:0', dtype=torch.float64)
tensor([-1.8750, -2.8035, -2.8572, -3.3367, -3.3797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1276, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.8027, -2.8588, -3.3380, -3.3791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1630, device='cuda:0', dtype=torch.float64)
tensor([-1.8720, -2.8033, -2.8592, -3.3375, -3.3795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1318, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.8036, -2.8596, -3.3361, -3.3801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0684, device='cuda:0', dtype=torch.float64)
tensor([-1.8738, -2.8048, -2.8599, -3.3348, -3.3820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1406, device='cuda:0', dtype=torch.float64)
tensor([-1.8749, -2.8055, -2.8603, -3.3338, -3.3836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9472, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.8059, -2.8612, -3.3332, -3.3846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9703, device='cuda:0', dtype=torch.float64)
tensor([-1.8758, -2.8052, -2.8637, -3.3335, -3.3850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0450, device='cuda:0', dtype=torch.float64)
tensor([-1.8760, -2.8040, -2.8664, -3.3350, -3.3854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1195, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.8039, -2.8687, -3.3358, -3.3853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1458, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.8028, -2.8716, -3.3369, -3.3844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2545, device='cuda:0', dtype=torch.float64)
tensor([-1.8782, -2.8019, -2.8738, -3.3363, -3.3845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0737, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.8025, -2.8756, -3.3362, -3.3836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2118, device='cuda:0', dtype=torch.float64)
tensor([-1.8810, -2.8051, -2.8753, -3.3345, -3.3814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0818, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.8079, -2.8736, -3.3317, -3.3795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9265, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.8100, -2.8716, -3.3297, -3.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0754, device='cuda:0', dtype=torch.float64)
tensor([-1.8873, -2.8114, -2.8707, -3.3304, -3.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3021, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.8120, -2.8709, -3.3322, -3.3762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0941, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.8119, -2.8712, -3.3331, -3.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0509, device='cuda:0', dtype=torch.float64)
tensor([-1.8877, -2.8115, -2.8718, -3.3340, -3.3774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5117, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.8101, -2.8728, -3.3346, -3.3802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1258, device='cuda:0', dtype=torch.float64)
tensor([-1.8865, -2.8093, -2.8743, -3.3378, -3.3832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1435, device='cuda:0', dtype=torch.float64)
tensor([-1.8845, -2.8068, -2.8759, -3.3422, -3.3858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0466, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.8053, -2.8771, -3.3457, -3.3899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1559, device='cuda:0', dtype=torch.float64)
tensor([-1.8836, -2.8043, -2.8782, -3.3480, -3.3946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9807, device='cuda:0', dtype=torch.float64)
tensor([-1.8846, -2.8042, -2.8788, -3.3504, -3.3987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2220, device='cuda:0', dtype=torch.float64)
tensor([-1.8870, -2.8043, -2.8801, -3.3522, -3.4035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1719, device='cuda:0', dtype=torch.float64)
tensor([-1.8908, -2.8056, -2.8797, -3.3506, -3.4073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2561, device='cuda:0', dtype=torch.float64)
tensor([-1.8969, -2.8079, -2.8773, -3.3432, -3.4103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2264, device='cuda:0', dtype=torch.float64)
tensor([-1.9030, -2.8105, -2.8753, -3.3365, -3.4123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2831, device='cuda:0', dtype=torch.float64)
tensor([-1.9071, -2.8116, -2.8751, -3.3321, -3.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0763, device='cuda:0', dtype=torch.float64)
tensor([-1.9105, -2.8132, -2.8752, -3.3290, -3.4127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1817, device='cuda:0', dtype=torch.float64)
tensor([-1.9126, -2.8128, -2.8763, -3.3291, -3.4122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1582, device='cuda:0', dtype=torch.float64)
tensor([-1.9126, -2.8110, -2.8796, -3.3321, -3.4108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1027, device='cuda:0', dtype=torch.float64)
tensor([-1.9109, -2.8112, -2.8814, -3.3352, -3.4080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1205, device='cuda:0', dtype=torch.float64)
tensor([-1.9095, -2.8136, -2.8837, -3.3351, -3.4054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2912, device='cuda:0', dtype=torch.float64)
tensor([-1.9085, -2.8144, -2.8853, -3.3353, -3.4040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3175, device='cuda:0', dtype=torch.float64)
tensor([-1.9075, -2.8145, -2.8857, -3.3347, -3.4036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2200, device='cuda:0', dtype=torch.float64)
tensor([-1.9074, -2.8143, -2.8854, -3.3320, -3.4042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0564, device='cuda:0', dtype=torch.float64)
tensor([-1.9078, -2.8153, -2.8849, -3.3294, -3.4060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3657, device='cuda:0', dtype=torch.float64)
tensor([-1.9086, -2.8167, -2.8848, -3.3277, -3.4082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4043, device='cuda:0', dtype=torch.float64)
tensor([-1.9088, -2.8165, -2.8856, -3.3287, -3.4107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3102, device='cuda:0', dtype=torch.float64)
tensor([-1.9087, -2.8139, -2.8880, -3.3302, -3.4123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3307, device='cuda:0', dtype=torch.float64)
tensor([-1.9088, -2.8108, -2.8903, -3.3329, -3.4121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2183, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.8079, -2.8939, -3.3367, -3.4125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1253, device='cuda:0', dtype=torch.float64)
tensor([-1.9074, -2.8061, -2.8965, -3.3410, -3.4116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3812, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.8048, -2.8978, -3.3456, -3.4107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5731, device='cuda:0', dtype=torch.float64)
tensor([-1.9096, -2.8061, -2.8954, -3.3478, -3.4090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1519, device='cuda:0', dtype=torch.float64)
tensor([-1.9124, -2.8070, -2.8916, -3.3477, -3.4074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3859, device='cuda:0', dtype=torch.float64)
tensor([-1.9157, -2.8086, -2.8882, -3.3485, -3.4048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6620, device='cuda:0', dtype=torch.float64)
tensor([-1.9154, -2.8091, -2.8861, -3.3496, -3.4027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9855, device='cuda:0', dtype=torch.float64)
tensor([-1.9161, -2.8110, -2.8841, -3.3481, -3.4014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3521, device='cuda:0', dtype=torch.float64)
tensor([-1.9182, -2.8115, -2.8832, -3.3473, -3.3998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1864, device='cuda:0', dtype=torch.float64)
tensor([-1.9235, -2.8146, -2.8814, -3.3452, -3.3982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3816, device='cuda:0', dtype=torch.float64)
tensor([-1.9300, -2.8195, -2.8791, -3.3418, -3.3991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3531, device='cuda:0', dtype=torch.float64)
tensor([-1.9370, -2.8258, -2.8770, -3.3372, -3.3998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4247, device='cuda:0', dtype=torch.float64)
tensor([-1.9430, -2.8325, -2.8762, -3.3355, -3.4020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2113, device='cuda:0', dtype=torch.float64)
tensor([-1.9476, -2.8375, -2.8775, -3.3373, -3.4056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4816, device='cuda:0', dtype=torch.float64)
tensor([-1.9505, -2.8420, -2.8798, -3.3404, -3.4097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4304, device='cuda:0', dtype=torch.float64)
tensor([-1.9497, -2.8444, -2.8833, -3.3454, -3.4127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2845, device='cuda:0', dtype=torch.float64)
tensor([-1.9460, -2.8451, -2.8868, -3.3505, -3.4138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1878, device='cuda:0', dtype=torch.float64)
tensor([-1.9436, -2.8453, -2.8887, -3.3560, -3.4156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4939, device='cuda:0', dtype=torch.float64)
tensor([-1.9409, -2.8458, -2.8893, -3.3615, -3.4171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3380, device='cuda:0', dtype=torch.float64)
tensor([-1.9396, -2.8464, -2.8892, -3.3666, -3.4180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3136, device='cuda:0', dtype=torch.float64)
tensor([-1.9399, -2.8487, -2.8882, -3.3684, -3.4178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2598, device='cuda:0', dtype=torch.float64)
tensor([-1.9389, -2.8508, -2.8872, -3.3696, -3.4164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3492, device='cuda:0', dtype=torch.float64)
tensor([-1.9374, -2.8501, -2.8874, -3.3715, -3.4138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3366, device='cuda:0', dtype=torch.float64)
tensor([-1.9348, -2.8468, -2.8898, -3.3759, -3.4127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6221, device='cuda:0', dtype=torch.float64)
tensor([-1.9345, -2.8424, -2.8937, -3.3771, -3.4108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5376, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.8371, -2.8984, -3.3754, -3.4095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4183, device='cuda:0', dtype=torch.float64)
tensor([-1.9405, -2.8332, -2.9015, -3.3724, -3.4072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7182, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.8319, -2.9052, -3.3693, -3.4048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4238, device='cuda:0', dtype=torch.float64)
tensor([-1.9397, -2.8268, -2.9105, -3.3677, -3.4014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3963, device='cuda:0', dtype=torch.float64)
tensor([-1.9371, -2.8215, -2.9147, -3.3668, -3.3986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6012, device='cuda:0', dtype=torch.float64)
tensor([-1.9321, -2.8166, -2.9180, -3.3708, -3.3956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6777, device='cuda:0', dtype=torch.float64)
tensor([-1.9291, -2.8150, -2.9195, -3.3746, -3.3938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7420, device='cuda:0', dtype=torch.float64)
tensor([-1.9283, -2.8171, -2.9222, -3.3801, -3.3938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4945, device='cuda:0', dtype=torch.float64)
tensor([-1.9313, -2.8237, -2.9213, -3.3770, -3.3934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6677, device='cuda:0', dtype=torch.float64)
tensor([-1.9375, -2.8341, -2.9171, -3.3664, -3.3965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5584, device='cuda:0', dtype=torch.float64)
tensor([-1.9441, -2.8460, -2.9128, -3.3566, -3.4020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6293, device='cuda:0', dtype=torch.float64)
tensor([-1.9523, -2.8614, -2.9085, -3.3502, -3.4105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7629, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.8712, -2.9059, -3.3474, -3.4158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3842, device='cuda:0', dtype=torch.float64)
tensor([-1.9604, -2.8741, -2.9052, -3.3468, -3.4180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7073, device='cuda:0', dtype=torch.float64)
tensor([-1.9614, -2.8736, -2.9063, -3.3548, -3.4185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3567, device='cuda:0', dtype=torch.float64)
tensor([-1.9626, -2.8741, -2.9084, -3.3698, -3.4205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4036, device='cuda:0', dtype=torch.float64)
tensor([-1.9648, -2.8772, -2.9105, -3.3834, -3.4207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7423, device='cuda:0', dtype=torch.float64)
tensor([-1.9670, -2.8790, -2.9078, -3.3849, -3.4160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7285, device='cuda:0', dtype=torch.float64)
tensor([-1.9701, -2.8812, -2.9022, -3.3792, -3.4139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4604, device='cuda:0', dtype=torch.float64)
tensor([-1.9704, -2.8820, -2.9002, -3.3789, -3.4161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5488, device='cuda:0', dtype=torch.float64)
tensor([-1.9690, -2.8811, -2.9015, -3.3830, -3.4194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3269, device='cuda:0', dtype=torch.float64)
tensor([-1.9669, -2.8762, -2.9028, -3.3845, -3.4216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7297, device='cuda:0', dtype=torch.float64)
tensor([-1.9620, -2.8672, -2.9070, -3.3841, -3.4228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6739, device='cuda:0', dtype=torch.float64)
tensor([-1.9587, -2.8589, -2.9115, -3.3831, -3.4245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4975, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.8544, -2.9150, -3.3828, -3.4291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7271, device='cuda:0', dtype=torch.float64)
tensor([-1.9620, -2.8544, -2.9144, -3.3753, -3.4347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4756, device='cuda:0', dtype=torch.float64)
tensor([-1.9705, -2.8578, -2.9133, -3.3635, -3.4398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6129, device='cuda:0', dtype=torch.float64)
tensor([-1.9820, -2.8648, -2.9096, -3.3475, -3.4455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3148, device='cuda:0', dtype=torch.float64)
tensor([-1.9926, -2.8734, -2.9077, -3.3405, -3.4523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9166, device='cuda:0', dtype=torch.float64)
tensor([-1.9990, -2.8748, -2.9080, -3.3426, -3.4551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8110, device='cuda:0', dtype=torch.float64)
tensor([-1.9991, -2.8713, -2.9110, -3.3487, -3.4544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6548, device='cuda:0', dtype=torch.float64)
tensor([-1.9978, -2.8657, -2.9155, -3.3614, -3.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8237, device='cuda:0', dtype=torch.float64)
tensor([-1.9981, -2.8619, -2.9178, -3.3723, -3.4526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5186, device='cuda:0', dtype=torch.float64)
tensor([-2.0024, -2.8616, -2.9166, -3.3721, -3.4505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6092, device='cuda:0', dtype=torch.float64)
tensor([-2.0069, -2.8623, -2.9154, -3.3717, -3.4494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4030, device='cuda:0', dtype=torch.float64)
tensor([-2.0094, -2.8621, -2.9153, -3.3761, -3.4486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8295, device='cuda:0', dtype=torch.float64)
tensor([-2.0136, -2.8627, -2.9153, -3.3790, -3.4491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3379, device='cuda:0', dtype=torch.float64)
tensor([-2.0169, -2.8637, -2.9137, -3.3795, -3.4500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8114, device='cuda:0', dtype=torch.float64)
tensor([-2.0182, -2.8662, -2.9132, -3.3833, -3.4484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7237, device='cuda:0', dtype=torch.float64)
tensor([-2.0166, -2.8686, -2.9147, -3.3866, -3.4459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7597, device='cuda:0', dtype=torch.float64)
tensor([-2.0182, -2.8748, -2.9124, -3.3836, -3.4405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7116, device='cuda:0', dtype=torch.float64)
tensor([-2.0232, -2.8836, -2.9089, -3.3800, -3.4372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7121, device='cuda:0', dtype=torch.float64)
tensor([-2.0277, -2.8931, -2.9075, -3.3750, -3.4373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5556, device='cuda:0', dtype=torch.float64)
tensor([-2.0344, -2.9022, -2.9038, -3.3679, -3.4377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4274, device='cuda:0', dtype=torch.float64)
tensor([-2.0404, -2.9116, -2.9004, -3.3613, -3.4386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5991, device='cuda:0', dtype=torch.float64)
tensor([-2.0454, -2.9201, -2.8978, -3.3581, -3.4423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7748, device='cuda:0', dtype=torch.float64)
tensor([-2.0472, -2.9251, -2.8976, -3.3617, -3.4452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6176, device='cuda:0', dtype=torch.float64)
tensor([-2.0480, -2.9310, -2.8964, -3.3665, -3.4485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5292, device='cuda:0', dtype=torch.float64)
tensor([-2.0482, -2.9336, -2.8962, -3.3717, -3.4517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6452, device='cuda:0', dtype=torch.float64)
tensor([-2.0481, -2.9336, -2.8971, -3.3771, -3.4531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5794, device='cuda:0', dtype=torch.float64)
tensor([-2.0458, -2.9310, -2.9002, -3.3790, -3.4557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9702, device='cuda:0', dtype=torch.float64)
tensor([-2.0429, -2.9271, -2.9052, -3.3830, -3.4585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4689, device='cuda:0', dtype=torch.float64)
tensor([-2.0415, -2.9224, -2.9110, -3.3849, -3.4625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7837, device='cuda:0', dtype=torch.float64)
tensor([-2.0443, -2.9205, -2.9146, -3.3760, -3.4662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8298, device='cuda:0', dtype=torch.float64)
tensor([-2.0465, -2.9213, -2.9195, -3.3665, -3.4680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6541, device='cuda:0', dtype=torch.float64)
tensor([-2.0504, -2.9203, -2.9250, -3.3572, -3.4689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4731, device='cuda:0', dtype=torch.float64)
tensor([-2.0550, -2.9179, -2.9290, -3.3496, -3.4730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8036, device='cuda:0', dtype=torch.float64)
tensor([-2.0607, -2.9168, -2.9339, -3.3419, -3.4772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6706, device='cuda:0', dtype=torch.float64)
tensor([-2.0649, -2.9140, -2.9387, -3.3357, -3.4823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5315, device='cuda:0', dtype=torch.float64)
tensor([-2.0662, -2.9088, -2.9465, -3.3327, -3.4861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8134, device='cuda:0', dtype=torch.float64)
tensor([-2.0691, -2.9034, -2.9511, -3.3349, -3.4866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6550, device='cuda:0', dtype=torch.float64)
tensor([-2.0740, -2.8985, -2.9543, -3.3421, -3.4881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9300, device='cuda:0', dtype=torch.float64)
tensor([-2.0747, -2.8908, -2.9575, -3.3503, -3.4885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7970, device='cuda:0', dtype=torch.float64)
tensor([-2.0753, -2.8827, -2.9603, -3.3599, -3.4886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9786, device='cuda:0', dtype=torch.float64)
tensor([-2.0740, -2.8729, -2.9637, -3.3729, -3.4879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7464, device='cuda:0', dtype=torch.float64)
tensor([-2.0722, -2.8661, -2.9671, -3.3863, -3.4874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7447, device='cuda:0', dtype=torch.float64)
tensor([-2.0716, -2.8616, -2.9676, -3.3980, -3.4885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8874, device='cuda:0', dtype=torch.float64)
tensor([-2.0731, -2.8546, -2.9680, -3.4045, -3.4903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9326, device='cuda:0', dtype=torch.float64)
tensor([-2.0737, -2.8504, -2.9691, -3.4123, -3.4910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5058, device='cuda:0', dtype=torch.float64)
tensor([-2.0725, -2.8512, -2.9703, -3.4255, -3.4935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7846, device='cuda:0', dtype=torch.float64)
tensor([-2.0749, -2.8571, -2.9688, -3.4359, -3.5016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8293, device='cuda:0', dtype=torch.float64)
tensor([-2.0815, -2.8648, -2.9644, -3.4439, -3.5079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9105, device='cuda:0', dtype=torch.float64)
tensor([-2.0915, -2.8755, -2.9602, -3.4548, -3.5088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9128, device='cuda:0', dtype=torch.float64)
tensor([-2.0996, -2.8885, -2.9582, -3.4671, -3.5098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9547, device='cuda:0', dtype=torch.float64)
tensor([-2.1033, -2.9040, -2.9550, -3.4707, -3.5117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0407, device='cuda:0', dtype=torch.float64)
tensor([-2.1060, -2.9172, -2.9546, -3.4679, -3.5125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9200, device='cuda:0', dtype=torch.float64)
tensor([-2.1112, -2.9299, -2.9566, -3.4656, -3.5185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4610, device='cuda:0', dtype=torch.float64)
tensor([-2.1172, -2.9423, -2.9579, -3.4632, -3.5260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8767, device='cuda:0', dtype=torch.float64)
tensor([-2.1272, -2.9630, -2.9518, -3.4544, -3.5348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5206, device='cuda:0', dtype=torch.float64)
tensor([-2.1361, -2.9819, -2.9478, -3.4487, -3.5409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8519, device='cuda:0', dtype=torch.float64)
tensor([-2.1445, -2.9988, -2.9438, -3.4416, -3.5411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8216, device='cuda:0', dtype=torch.float64)
tensor([-2.1535, -3.0144, -2.9405, -3.4320, -3.5442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5411, device='cuda:0', dtype=torch.float64)
tensor([-2.1586, -3.0257, -2.9403, -3.4233, -3.5460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8671, device='cuda:0', dtype=torch.float64)
tensor([-2.1593, -3.0328, -2.9401, -3.4176, -3.5443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9310, device='cuda:0', dtype=torch.float64)
tensor([-2.1581, -3.0368, -2.9432, -3.4177, -3.5443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8084, device='cuda:0', dtype=torch.float64)
tensor([-2.1615, -3.0455, -2.9441, -3.4205, -3.5469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7094, device='cuda:0', dtype=torch.float64)
tensor([-2.1626, -3.0516, -2.9483, -3.4309, -3.5514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0221, device='cuda:0', dtype=torch.float64)
tensor([-2.1594, -3.0447, -2.9544, -3.4432, -3.5503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6812, device='cuda:0', dtype=torch.float64)
tensor([-2.1592, -3.0394, -2.9582, -3.4589, -3.5493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2116, device='cuda:0', dtype=torch.float64)
tensor([-2.1619, -3.0330, -2.9657, -3.4732, -3.5507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7991, device='cuda:0', dtype=torch.float64)
tensor([-2.1656, -3.0263, -2.9738, -3.4899, -3.5534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5555, device='cuda:0', dtype=torch.float64)
tensor([-2.1704, -3.0247, -2.9805, -3.5040, -3.5565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7867, device='cuda:0', dtype=torch.float64)
tensor([-2.1781, -3.0258, -2.9872, -3.5138, -3.5615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7485, device='cuda:0', dtype=torch.float64)
tensor([-2.1865, -3.0259, -2.9936, -3.5148, -3.5656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8822, device='cuda:0', dtype=torch.float64)
tensor([-2.1938, -3.0242, -3.0002, -3.5104, -3.5686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8848, device='cuda:0', dtype=torch.float64)
tensor([-2.2011, -3.0200, -3.0099, -3.5037, -3.5710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6710, device='cuda:0', dtype=torch.float64)
tensor([-2.2082, -3.0150, -3.0195, -3.4972, -3.5732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9248, device='cuda:0', dtype=torch.float64)
tensor([-2.2175, -3.0113, -3.0231, -3.4819, -3.5756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8596, device='cuda:0', dtype=torch.float64)
tensor([-2.2278, -3.0119, -3.0258, -3.4662, -3.5817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7857, device='cuda:0', dtype=torch.float64)
tensor([-2.2369, -3.0129, -3.0281, -3.4548, -3.5863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8153, device='cuda:0', dtype=torch.float64)
tensor([-2.2433, -3.0153, -3.0340, -3.4472, -3.5922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6674, device='cuda:0', dtype=torch.float64)
tensor([-2.2487, -3.0132, -3.0410, -3.4456, -3.5998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9187, device='cuda:0', dtype=torch.float64)
tensor([-2.2528, -3.0124, -3.0482, -3.4496, -3.6089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5444, device='cuda:0', dtype=torch.float64)
tensor([-2.2585, -3.0168, -3.0521, -3.4545, -3.6175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7989, device='cuda:0', dtype=torch.float64)
tensor([-2.2641, -3.0266, -3.0510, -3.4586, -3.6279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8324, device='cuda:0', dtype=torch.float64)
tensor([-2.2692, -3.0370, -3.0475, -3.4614, -3.6331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0327, device='cuda:0', dtype=torch.float64)
tensor([-2.2770, -3.0492, -3.0423, -3.4564, -3.6381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2106, device='cuda:0', dtype=torch.float64)
tensor([-2.2862, -3.0629, -3.0363, -3.4498, -3.6410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7486, device='cuda:0', dtype=torch.float64)
tensor([-2.2976, -3.0785, -3.0318, -3.4468, -3.6452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8813, device='cuda:0', dtype=torch.float64)
tensor([-2.3063, -3.0880, -3.0290, -3.4515, -3.6503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6958, device='cuda:0', dtype=torch.float64)
tensor([-2.3127, -3.0931, -3.0319, -3.4592, -3.6538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0511, device='cuda:0', dtype=torch.float64)
tensor([-2.3199, -3.1001, -3.0353, -3.4593, -3.6582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0391, device='cuda:0', dtype=torch.float64)
tensor([-2.3256, -3.1091, -3.0395, -3.4627, -3.6652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8241, device='cuda:0', dtype=torch.float64)
tensor([-2.3304, -3.1187, -3.0451, -3.4673, -3.6723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6132, device='cuda:0', dtype=torch.float64)
tensor([-2.3342, -3.1296, -3.0520, -3.4732, -3.6759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7540, device='cuda:0', dtype=torch.float64)
tensor([-2.3367, -3.1382, -3.0655, -3.4834, -3.6811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7095, device='cuda:0', dtype=torch.float64)
tensor([-2.3440, -3.1516, -3.0828, -3.4910, -3.6857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9245, device='cuda:0', dtype=torch.float64)
tensor([-2.3477, -3.1634, -3.1023, -3.5049, -3.6859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6991, device='cuda:0', dtype=torch.float64)
tensor([-2.3521, -3.1764, -3.1208, -3.5218, -3.6891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6890, device='cuda:0', dtype=torch.float64)
tensor([-2.3625, -3.1907, -3.1398, -3.5416, -3.6935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2129, device='cuda:0', dtype=torch.float64)
tensor([-2.3699, -3.2010, -3.1592, -3.5573, -3.7000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0466, device='cuda:0', dtype=torch.float64)
tensor([-2.3760, -3.2062, -3.1781, -3.5782, -3.7069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9625, device='cuda:0', dtype=torch.float64)
tensor([-2.3805, -3.2167, -3.1970, -3.5927, -3.7115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9677, device='cuda:0', dtype=torch.float64)
tensor([-2.3832, -3.2268, -3.2132, -3.6062, -3.7179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8248, device='cuda:0', dtype=torch.float64)
tensor([-2.3910, -3.2362, -3.2239, -3.6099, -3.7284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8484, device='cuda:0', dtype=torch.float64)
tensor([-2.3986, -3.2488, -3.2336, -3.6028, -3.7371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0578, device='cuda:0', dtype=torch.float64)
tensor([-2.4083, -3.2628, -3.2419, -3.5926, -3.7439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7374, device='cuda:0', dtype=torch.float64)
tensor([-2.4231, -3.2797, -3.2454, -3.5798, -3.7460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8457, device='cuda:0', dtype=torch.float64)
tensor([-2.4415, -3.3025, -3.2452, -3.5675, -3.7463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1655, device='cuda:0', dtype=torch.float64)
tensor([-2.4586, -3.3256, -3.2440, -3.5541, -3.7510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9408, device='cuda:0', dtype=torch.float64)
tensor([-2.4807, -3.3456, -3.2424, -3.5462, -3.7567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3313, device='cuda:0', dtype=torch.float64)
tensor([-2.5013, -3.3680, -3.2388, -3.5420, -3.7662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0018, device='cuda:0', dtype=torch.float64)
tensor([-2.5244, -3.3894, -3.2350, -3.5399, -3.7747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7542, device='cuda:0', dtype=torch.float64)
tensor([-2.5463, -3.4107, -3.2282, -3.5380, -3.7810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8606, device='cuda:0', dtype=torch.float64)
tensor([-2.5693, -3.4294, -3.2260, -3.5382, -3.7853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9696, device='cuda:0', dtype=torch.float64)
tensor([-2.5919, -3.4461, -3.2257, -3.5401, -3.7880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9240, device='cuda:0', dtype=torch.float64)
tensor([-2.6142, -3.4586, -3.2264, -3.5399, -3.7923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8940, device='cuda:0', dtype=torch.float64)
tensor([-2.6399, -3.4753, -3.2299, -3.5470, -3.7952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0891, device='cuda:0', dtype=torch.float64)
tensor([-2.6708, -3.4927, -3.2321, -3.5548, -3.7994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8445, device='cuda:0', dtype=torch.float64)
tensor([-2.7022, -3.5090, -3.2350, -3.5629, -3.8079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1102, device='cuda:0', dtype=torch.float64)
tensor([-2.7365, -3.5265, -3.2391, -3.5687, -3.8186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4571, device='cuda:0', dtype=torch.float64)
tensor([-2.7763, -3.5425, -3.2438, -3.5669, -3.8295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9318, device='cuda:0', dtype=torch.float64)
tensor([-2.8171, -3.5605, -3.2551, -3.5684, -3.8382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9542, device='cuda:0', dtype=torch.float64)
tensor([-2.8578, -3.5781, -3.2700, -3.5762, -3.8553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0185, device='cuda:0', dtype=torch.float64)
tensor([-2.8967, -3.5960, -3.2822, -3.5856, -3.8748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8524, device='cuda:0', dtype=torch.float64)
tensor([-2.9407, -3.6203, -3.2962, -3.6021, -3.8965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4535, device='cuda:0', dtype=torch.float64)
tensor([-2.9851, -3.6495, -3.3136, -3.6272, -3.9183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9530, device='cuda:0', dtype=torch.float64)
tensor([-3.0295, -3.6814, -3.3306, -3.6506, -3.9414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2524, device='cuda:0', dtype=torch.float64)
tensor([-3.0759, -3.7104, -3.3447, -3.6721, -3.9718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0150, device='cuda:0', dtype=torch.float64)
tensor([-3.1252, -3.7434, -3.3624, -3.6953, -4.0061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9439, device='cuda:0', dtype=torch.float64)
tensor([-3.1758, -3.7785, -3.3761, -3.7137, -4.0376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9009, device='cuda:0', dtype=torch.float64)
tensor([-3.2258, -3.8171, -3.3842, -3.7276, -4.0713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0006, device='cuda:0', dtype=torch.float64)
tensor([-3.2747, -3.8534, -3.4018, -3.7420, -4.1065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9974, device='cuda:0', dtype=torch.float64)
tensor([-3.3310, -3.8937, -3.4228, -3.7597, -4.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2126, device='cuda:0', dtype=torch.float64)
tensor([-3.3844, -3.9359, -3.4378, -3.7896, -4.1844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6950, device='cuda:0', dtype=torch.float64)
tensor([-3.4381, -3.9837, -3.4495, -3.8184, -4.2251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7675, device='cuda:0', dtype=torch.float64)
tensor([-3.4951, -4.0382, -3.4683, -3.8554, -4.2729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8905, device='cuda:0', dtype=torch.float64)
tensor([-3.5491, -4.0893, -3.4952, -3.8991, -4.3165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1302, device='cuda:0', dtype=torch.float64)
tensor([-3.5992, -4.1383, -3.5296, -3.9449, -4.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0986, device='cuda:0', dtype=torch.float64)
tensor([-3.6581, -4.1922, -3.5609, -3.9968, -4.4170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2982, device='cuda:0', dtype=torch.float64)
tensor([-3.7134, -4.2509, -3.6034, -4.0425, -4.4933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4732, device='cuda:0', dtype=torch.float64)
tensor([-3.7687, -4.3140, -3.6414, -4.1004, -4.5779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6454, device='cuda:0', dtype=torch.float64)
tensor([-3.8163, -4.3841, -3.6726, -4.1773, -4.6577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7698, device='cuda:0', dtype=torch.float64)
tensor([-3.8594, -4.4529, -3.7149, -4.2634, -4.7419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6294, device='cuda:0', dtype=torch.float64)
tensor([-3.9074, -4.5268, -3.7690, -4.3912, -4.8160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7765, device='cuda:0', dtype=torch.float64)
tensor([-3.9613, -4.6213, -3.8091, -4.5732, -4.8840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6878, device='cuda:0', dtype=torch.float64)
tensor([-4.0240, -4.7187, -3.8478, -4.7539, -4.9652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5718, device='cuda:0', dtype=torch.float64)
tensor([-4.0902, -4.8378, -3.9020, -4.9774, -5.0654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6927, device='cuda:0', dtype=torch.float64)
tensor([-4.1612, -4.9745, -3.9756, -5.1908, -5.1866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5918, device='cuda:0', dtype=torch.float64)
tensor([-4.2361, -5.1330, -4.0550, -5.4450, -5.3196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7355, device='cuda:0', dtype=torch.float64)
tensor([-4.3187, -5.3089, -4.1283, -5.7017, -5.4781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7541, device='cuda:0', dtype=torch.float64)
tensor([-4.4006, -5.5288, -4.2160, -6.0472, -5.6247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0552, device='cuda:0', dtype=torch.float64)
tensor([-4.4807, -5.7560, -4.3171, -6.3699, -5.7814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4297, device='cuda:0', dtype=torch.float64)
tensor([-4.5536, -6.0007, -4.4301, -6.6893, -5.9427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6260, device='cuda:0', dtype=torch.float64)
tensor([-4.6226, -6.2680, -4.5382, -7.0701, -6.1149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8115, device='cuda:0', dtype=torch.float64)
tensor([-4.6845, -6.4722, -4.6392, -7.3405, -6.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3715, device='cuda:0', dtype=torch.float64)
tensor([-4.7433, -6.6690, -4.7308, -7.6403, -6.6125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5186, device='cuda:0', dtype=torch.float64)
tensor([-4.7920, -6.9356, -4.8106, -7.9351, -6.8662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5256, device='cuda:0', dtype=torch.float64)
tensor([-4.8387, -7.1645, -4.9098, -8.2354, -7.1969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3901, device='cuda:0', dtype=torch.float64)
tensor([-4.8841, -7.4161, -5.0605, -8.5207, -7.5321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8016, device='cuda:0', dtype=torch.float64)
tensor([-4.9232, -7.6563, -5.2308, -8.8073, -8.0141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5166, device='cuda:0', dtype=torch.float64)
tensor([-4.9626, -7.8137, -5.4301, -8.9398, -8.3721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8040, device='cuda:0', dtype=torch.float64)
tensor([-5.0016, -7.9249, -5.6818, -8.8749, -8.6924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5056, device='cuda:0', dtype=torch.float64)
tensor([-5.0449, -8.0453, -5.9375, -8.9192, -8.9551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7940, device='cuda:0', dtype=torch.float64)
tensor([-5.0910, -8.1632, -6.1768, -9.0577, -9.3506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3084, device='cuda:0', dtype=torch.float64)
tensor([-5.1390, -8.3128, -6.4824, -9.0882, -9.8631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8063, device='cuda:0', dtype=torch.float64)
tensor([ -5.1796,  -8.5249,  -6.7135,  -9.4009, -10.5213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8526, device='cuda:0', dtype=torch.float64)
tensor([ -5.2236,  -8.7668,  -6.9255,  -9.9167, -11.3905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4801, device='cuda:0', dtype=torch.float64)
tensor([ -5.2751,  -9.0299,  -7.1246, -10.5400, -12.3235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3671, device='cuda:0', dtype=torch.float64)
tensor([ -5.3251,  -9.2508,  -7.3183, -11.1360, -13.2082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4713, device='cuda:0', dtype=torch.float64)
tensor([ -5.3814,  -9.4601,  -7.4539, -11.7071, -13.9429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9360, device='cuda:0', dtype=torch.float64)
tensor([ -5.4503,  -9.5733,  -7.5251, -12.2668, -14.6233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4721, device='cuda:0', dtype=torch.float64)
tensor([ -5.5123,  -9.6650,  -7.6553, -12.7448, -15.2879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5436, device='cuda:0', dtype=torch.float64)
tensor([ -5.5683,  -9.7422,  -7.7694, -13.2585, -15.8082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3796, device='cuda:0', dtype=torch.float64)
tensor([ -5.6315,  -9.7985,  -7.8978, -13.8381, -16.3494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9744, device='cuda:0', dtype=torch.float64)
tensor([ -5.6984,  -9.8611,  -8.0520, -14.4125, -16.8970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9277, device='cuda:0', dtype=torch.float64)
tensor([ -5.7587,  -9.8587,  -8.1636, -14.8027, -17.1967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6954, device='cuda:0', dtype=torch.float64)
tensor([ -5.8229,  -9.9082,  -8.2811, -15.2236, -17.5786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4795, device='cuda:0', dtype=torch.float64)
tensor([ -5.8857,  -9.9779,  -8.3505, -15.5663, -17.9297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7383, device='cuda:0', dtype=torch.float64)
tensor([ -5.9675, -10.0470,  -8.4209, -15.7808, -18.1786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5512, device='cuda:0', dtype=torch.float64)
tensor([ -6.0587, -10.0766,  -8.4798, -15.8842, -18.3741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3512, device='cuda:0', dtype=torch.float64)
tensor([ -6.1446, -10.0602,  -8.5484, -15.8899, -18.5960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6601, device='cuda:0', dtype=torch.float64)
tensor([ -6.2420, -10.0786,  -8.5355, -15.8956, -18.7031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4296, device='cuda:0', dtype=torch.float64)
tensor([ -6.3394,  -9.9778,  -8.4488, -15.6787, -18.7042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4013, device='cuda:0', dtype=torch.float64)
tensor([ -6.4473,  -9.8655,  -8.3809, -15.5144, -18.7332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6284, device='cuda:0', dtype=torch.float64)
tensor([ -6.5408,  -9.7792,  -8.3020, -15.3166, -18.7411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3999, device='cuda:0', dtype=torch.float64)
tensor([ -6.6366,  -9.7166,  -8.3273, -15.0483, -18.6814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8060, device='cuda:0', dtype=torch.float64)
tensor([ -6.7473,  -9.7338,  -8.3686, -14.9282, -18.5241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7363, device='cuda:0', dtype=torch.float64)
tensor([ -6.8651,  -9.8414,  -8.4549, -14.7661, -18.4640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6473, device='cuda:0', dtype=torch.float64)
tensor([ -7.0012, -10.0078,  -8.6240, -14.7492, -18.4549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7163, device='cuda:0', dtype=torch.float64)
tensor([ -7.1183, -10.2187,  -8.9324, -14.8472, -18.6730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4417, device='cuda:0', dtype=torch.float64)
tensor([ -7.2176, -10.4519,  -9.3630, -14.9177, -18.9088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4244, device='cuda:0', dtype=torch.float64)
tensor([ -7.2873, -10.5942,  -9.7262, -14.9894, -19.1506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7818, device='cuda:0', dtype=torch.float64)
tensor([ -7.4068, -10.6522, -10.1169, -15.2982, -19.3888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6334, device='cuda:0', dtype=torch.float64)
tensor([ -7.5252, -10.6193, -10.5789, -15.4605, -19.5322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4908, device='cuda:0', dtype=torch.float64)
tensor([ -7.6597, -10.5870, -11.0262, -15.7597, -19.8769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6587, device='cuda:0', dtype=torch.float64)
tensor([ -7.8899, -10.6381, -11.5010, -16.2703, -20.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6626, device='cuda:0', dtype=torch.float64)
tensor([ -8.1267, -10.7642, -12.0091, -16.9234, -20.5089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2676, device='cuda:0', dtype=torch.float64)
tensor([ -8.3651, -10.9081, -12.5884, -17.5412, -20.8198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8412, device='cuda:0', dtype=torch.float64)
tensor([ -8.5825, -11.0524, -13.0606, -18.0658, -21.1577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3519, device='cuda:0', dtype=torch.float64)
tensor([ -8.6697, -11.0406, -13.5087, -18.1603, -21.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3072, device='cuda:0', dtype=torch.float64)
tensor([ -8.8266, -11.1121, -13.9816, -18.4990, -21.4013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5772, device='cuda:0', dtype=torch.float64)
tensor([ -8.9681, -11.1871, -14.4474, -18.7020, -21.4426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3183, device='cuda:0', dtype=torch.float64)
tensor([ -9.0617, -11.2102, -14.8915, -18.9067, -21.3461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5667, device='cuda:0', dtype=torch.float64)
tensor([ -9.0524, -11.1196, -15.2300, -18.7968, -21.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5025, device='cuda:0', dtype=torch.float64)
tensor([ -8.8663, -10.9712, -15.4698, -18.4883, -20.8893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4907, device='cuda:0', dtype=torch.float64)
tensor([ -8.6798, -10.8264, -15.6760, -18.2030, -20.6060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5238, device='cuda:0', dtype=torch.float64)
tensor([ -8.4930, -10.7289, -15.7431, -17.8676, -20.2313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5175, device='cuda:0', dtype=torch.float64)
tensor([ -8.3148, -10.6206, -15.6977, -17.5010, -19.7948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3921, device='cuda:0', dtype=torch.float64)
tensor([ -8.2001, -10.5801, -15.8082, -17.1976, -19.5355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3102, device='cuda:0', dtype=torch.float64)
tensor([ -8.1164, -10.5963, -15.9292, -17.1280, -19.4039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6388, device='cuda:0', dtype=torch.float64)
tensor([ -8.0383, -10.6752, -16.0377, -17.2643, -19.3368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3988, device='cuda:0', dtype=torch.float64)
tensor([ -7.9946, -10.7707, -16.1716, -17.4833, -19.4201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5864, device='cuda:0', dtype=torch.float64)
tensor([ -7.9979, -10.8654, -16.1914, -17.7016, -19.5404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5220, device='cuda:0', dtype=torch.float64)
tensor([ -7.9816, -10.9056, -16.1997, -17.9069, -19.5856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5602, device='cuda:0', dtype=torch.float64)
tensor([ -7.9794, -10.9132, -16.1509, -18.0228, -19.5243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4587, device='cuda:0', dtype=torch.float64)
tensor([ -7.9640, -10.9137, -16.1638, -18.1221, -19.4719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3268, device='cuda:0', dtype=torch.float64)
tensor([ -7.9581, -10.8464, -16.1272, -18.0874, -19.2994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3864, device='cuda:0', dtype=torch.float64)
tensor([ -7.9145, -10.6454, -16.1898, -17.8509, -19.0635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5488, device='cuda:0', dtype=torch.float64)
tensor([ -7.8695, -10.4207, -16.2376, -17.5664, -18.8855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4337, device='cuda:0', dtype=torch.float64)
tensor([ -7.8047, -10.1754, -16.2948, -17.1345, -18.7929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6001, device='cuda:0', dtype=torch.float64)
tensor([ -7.7668, -10.0255, -16.3804, -16.7799, -18.6453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3679, device='cuda:0', dtype=torch.float64)
tensor([ -7.7085,  -9.9426, -16.4704, -16.4769, -18.4826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4974, device='cuda:0', dtype=torch.float64)
tensor([ -7.7051,  -9.8211, -16.5548, -16.3486, -18.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6882, device='cuda:0', dtype=torch.float64)
tensor([ -7.6754,  -9.7383, -16.6525, -16.1404, -17.9144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5049, device='cuda:0', dtype=torch.float64)
tensor([ -7.6490,  -9.7540, -16.7450, -16.0740, -17.7945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3683, device='cuda:0', dtype=torch.float64)
tensor([ -7.6593,  -9.6981, -16.8678, -16.0610, -17.7715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3552, device='cuda:0', dtype=torch.float64)
tensor([ -7.6638,  -9.7403, -17.2363, -16.2252, -17.8670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7085, device='cuda:0', dtype=torch.float64)
tensor([ -7.6595,  -9.8000, -17.6874, -16.3769, -18.0481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2728, device='cuda:0', dtype=torch.float64)
tensor([ -7.6664,  -9.8432, -18.0957, -16.6408, -18.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7238, device='cuda:0', dtype=torch.float64)
tensor([ -7.7173,  -9.8258, -18.4549, -16.9398, -18.2492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6918, device='cuda:0', dtype=torch.float64)
tensor([ -7.8015,  -9.7559, -18.6360, -17.0207, -18.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4370, device='cuda:0', dtype=torch.float64)
tensor([ -7.8790,  -9.5738, -18.6380, -16.8421, -18.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3593, device='cuda:0', dtype=torch.float64)
tensor([ -7.9739,  -9.4809, -18.6442, -16.7797, -17.9906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0927, device='cuda:0', dtype=torch.float64)
tensor([ -8.0869,  -9.3636, -18.5753, -16.7545, -17.7605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7243, device='cuda:0', dtype=torch.float64)
tensor([ -8.2070,  -9.1149, -18.4275, -16.5125, -17.3503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6891, device='cuda:0', dtype=torch.float64)
tensor([ -8.3889,  -8.8460, -18.1870, -16.3885, -16.9402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4013, device='cuda:0', dtype=torch.float64)
tensor([ -8.5627,  -8.6983, -18.0392, -16.6151, -16.7765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3912, device='cuda:0', dtype=torch.float64)
tensor([ -8.7430,  -8.6698, -17.9365, -16.8121, -16.6337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7024, device='cuda:0', dtype=torch.float64)
tensor([ -8.9137,  -8.6634, -17.9063, -16.7500, -16.3329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4996, device='cuda:0', dtype=torch.float64)
tensor([ -9.1021,  -8.6554, -17.6734, -16.6831, -16.0064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2238, device='cuda:0', dtype=torch.float64)
tensor([ -9.2625,  -8.6779, -17.4243, -16.5030, -15.5108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5750, device='cuda:0', dtype=torch.float64)
tensor([ -9.4507,  -8.6920, -17.4505, -16.3957, -15.0395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4870, device='cuda:0', dtype=torch.float64)
tensor([ -9.6296,  -8.7264, -17.5476, -16.4191, -14.6570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6024, device='cuda:0', dtype=torch.float64)
tensor([ -9.7582,  -8.8014, -17.8393, -16.8410, -14.5114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6191, device='cuda:0', dtype=torch.float64)
tensor([ -9.9040,  -8.9405, -18.3195, -17.6218, -14.5186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4334, device='cuda:0', dtype=torch.float64)
tensor([ -9.9916,  -9.0703, -18.9846, -18.2723, -14.7513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0278, device='cuda:0', dtype=torch.float64)
tensor([-10.1254,  -9.2512, -19.5531, -18.9325, -14.9515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5057, device='cuda:0', dtype=torch.float64)
tensor([-10.2164,  -9.4371, -20.1905, -19.6174, -15.2427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9252, device='cuda:0', dtype=torch.float64)
tensor([-10.2758,  -9.5747, -20.9074, -19.8004, -15.7273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5456, device='cuda:0', dtype=torch.float64)
tensor([-10.3852,  -9.7147, -21.6045, -20.0215, -16.3186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2732, device='cuda:0', dtype=torch.float64)
tensor([-10.4665,  -9.8329, -22.3140, -20.0930, -17.1183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7788, device='cuda:0', dtype=torch.float64)
tensor([-10.5785,  -9.8846, -22.9055, -19.8261, -17.6992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4985, device='cuda:0', dtype=torch.float64)
tensor([-10.6514, -10.0060, -23.3907, -19.8721, -18.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3428, device='cuda:0', dtype=torch.float64)
tensor([-10.7550, -10.1262, -23.8254, -20.1037, -18.7292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2420, device='cuda:0', dtype=torch.float64)
tensor([-10.8787, -10.1904, -24.2954, -20.2843, -19.1391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5385, device='cuda:0', dtype=torch.float64)
tensor([-10.9583, -10.2505, -24.7990, -20.7127, -19.4431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7281, device='cuda:0', dtype=torch.float64)
tensor([-10.9657, -10.3587, -25.2247, -21.4038, -19.8014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6181, device='cuda:0', dtype=torch.float64)
tensor([-10.9855, -10.4791, -25.6902, -22.4388, -20.1393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5823, device='cuda:0', dtype=torch.float64)
tensor([-11.0074, -10.5749, -26.1299, -23.3427, -20.5353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3080, device='cuda:0', dtype=torch.float64)
tensor([-11.0189, -10.6543, -26.4752, -24.1225, -21.0232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3523, device='cuda:0', dtype=torch.float64)
tensor([-11.0476, -10.7903, -26.8666, -25.1074, -21.7191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4785, device='cuda:0', dtype=torch.float64)
tensor([-11.1014, -10.8828, -27.4330, -26.0688, -22.4798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6312, device='cuda:0', dtype=torch.float64)
tensor([-11.0602, -10.8765, -27.7077, -26.1257, -22.8778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7309, device='cuda:0', dtype=torch.float64)
tensor([-10.9951, -10.8326, -27.9473, -25.6372, -23.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4490, device='cuda:0', dtype=torch.float64)
tensor([-10.9639, -10.8130, -28.2786, -25.3668, -23.6628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6857, device='cuda:0', dtype=torch.float64)
tensor([-10.8613, -10.7249, -28.5297, -24.2370, -23.7454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4435, device='cuda:0', dtype=torch.float64)
tensor([-10.7379, -10.6697, -28.7944, -23.0284, -23.9786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5584, device='cuda:0', dtype=torch.float64)
tensor([-10.6320, -10.6043, -28.9229, -21.8500, -24.0612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4221, device='cuda:0', dtype=torch.float64)
tensor([-10.5428, -10.5135, -29.0461, -20.7421, -24.2904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9123, device='cuda:0', dtype=torch.float64)
tensor([-10.5219, -10.3078, -29.1429, -19.7184, -24.4377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3091, device='cuda:0', dtype=torch.float64)
tensor([-10.4539, -10.1017, -29.3644, -18.5801, -24.7495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7372, device='cuda:0', dtype=torch.float64)
tensor([-10.4001, -10.0303, -29.6394, -18.0281, -24.9982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3973, device='cuda:0', dtype=torch.float64)
tensor([-10.3361,  -9.9133, -30.0130, -17.6198, -25.2760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5813, device='cuda:0', dtype=torch.float64)
tensor([-10.3383,  -9.8573, -30.4374, -17.6640, -25.6770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5234, device='cuda:0', dtype=torch.float64)
tensor([-10.3990,  -9.8661, -30.7406, -17.8106, -26.0249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2243, device='cuda:0', dtype=torch.float64)
tensor([-10.4203,  -9.8801, -30.8152, -17.9454, -26.2298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4103, device='cuda:0', dtype=torch.float64)
tensor([-10.4798,  -9.9025, -30.6803, -18.0495, -26.3778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5031, device='cuda:0', dtype=torch.float64)
tensor([-10.5797,  -9.9069, -30.4240, -18.1852, -26.5388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5565, device='cuda:0', dtype=torch.float64)
tensor([-10.6909,  -9.9081, -30.1273, -18.2789, -26.5311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3530, device='cuda:0', dtype=torch.float64)
tensor([-10.8024,  -9.8457, -29.7534, -18.2678, -26.3125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6972, device='cuda:0', dtype=torch.float64)
tensor([-10.8872,  -9.8099, -29.2097, -18.1077, -25.7855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3621, device='cuda:0', dtype=torch.float64)
tensor([-10.9581,  -9.8560, -28.6291, -17.9635, -25.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6160, device='cuda:0', dtype=torch.float64)
tensor([-11.0893,  -9.9014, -27.9245, -17.8925, -24.6424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3574, device='cuda:0', dtype=torch.float64)
tensor([-11.2180,  -9.9096, -27.2298, -17.9292, -24.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6266, device='cuda:0', dtype=torch.float64)
tensor([-11.4178, -10.0385, -26.4277, -18.1362, -23.6910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6675, device='cuda:0', dtype=torch.float64)
tensor([-11.5866, -10.2542, -25.5164, -18.3402, -23.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5661, device='cuda:0', dtype=torch.float64)
tensor([-11.7128, -10.3949, -24.6124, -18.6206, -22.6044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5602, device='cuda:0', dtype=torch.float64)
tensor([-11.8028, -10.4301, -23.8758, -18.8531, -22.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2873, device='cuda:0', dtype=torch.float64)
tensor([-11.9039, -10.4864, -23.0999, -19.1077, -21.7672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2120, device='cuda:0', dtype=torch.float64)
tensor([-11.9679, -10.4653, -22.4212, -19.2044, -21.3872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3846, device='cuda:0', dtype=torch.float64)
tensor([-12.0274, -10.4290, -21.8725, -19.2374, -21.0791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5959, device='cuda:0', dtype=torch.float64)
tensor([-12.1108, -10.3736, -21.2985, -19.1814, -20.8200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3100, device='cuda:0', dtype=torch.float64)
tensor([-12.2536, -10.3286, -20.9764, -19.2198, -20.7396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5003, device='cuda:0', dtype=torch.float64)
tensor([-12.4183, -10.3117, -20.8272, -19.3503, -20.8037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4311, device='cuda:0', dtype=torch.float64)
tensor([-12.5901, -10.4842, -20.8211, -19.6364, -21.0223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5303, device='cuda:0', dtype=torch.float64)
tensor([-12.7229, -10.7275, -20.7806, -19.9370, -21.2747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2794, device='cuda:0', dtype=torch.float64)
tensor([-12.8339, -10.9885, -20.8276, -20.0583, -21.3170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3031, device='cuda:0', dtype=torch.float64)
tensor([-13.0044, -11.3368, -20.8376, -20.2564, -21.3926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5574, device='cuda:0', dtype=torch.float64)
tensor([-13.1429, -11.6130, -20.8387, -20.2719, -21.2269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3937, device='cuda:0', dtype=torch.float64)
tensor([-13.2422, -11.9234, -20.9542, -20.4793, -21.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3642, device='cuda:0', dtype=torch.float64)
tensor([-13.3995, -12.2367, -20.9769, -20.8018, -21.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4334, device='cuda:0', dtype=torch.float64)
tensor([-13.6171, -12.4832, -20.9019, -21.0687, -21.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2214, device='cuda:0', dtype=torch.float64)
tensor([-13.8263, -12.6803, -20.8896, -21.2674, -21.1627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3210, device='cuda:0', dtype=torch.float64)
tensor([-13.9970, -12.8122, -20.8861, -21.3167, -21.0248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2835, device='cuda:0', dtype=torch.float64)
tensor([-14.0567, -12.9928, -20.9439, -21.3910, -20.9763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3163, device='cuda:0', dtype=torch.float64)
tensor([-14.0246, -13.2143, -21.2115, -21.4862, -20.9554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4380, device='cuda:0', dtype=torch.float64)
tensor([-14.0474, -13.5178, -21.4615, -21.7969, -20.8543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5412, device='cuda:0', dtype=torch.float64)
tensor([-14.0987, -13.8517, -21.7036, -22.2858, -20.7869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5102, device='cuda:0', dtype=torch.float64)
tensor([-14.1388, -14.2093, -22.0298, -22.7916, -20.6626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4976, device='cuda:0', dtype=torch.float64)
tensor([-14.2484, -14.6207, -22.3315, -23.2485, -20.4187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3038, device='cuda:0', dtype=torch.float64)
tensor([-14.4541, -15.1355, -22.5763, -23.7852, -20.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4527, device='cuda:0', dtype=torch.float64)
tensor([-14.6138, -15.7723, -22.8707, -24.4121, -19.7697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9896, device='cuda:0', dtype=torch.float64)
tensor([-14.7892, -16.3367, -23.2554, -24.9891, -19.4028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3507, device='cuda:0', dtype=torch.float64)
tensor([-14.9562, -16.7806, -23.5842, -25.5051, -19.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3636, device='cuda:0', dtype=torch.float64)
tensor([-15.1907, -17.1869, -23.8878, -26.0253, -19.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5876, device='cuda:0', dtype=torch.float64)
tensor([-15.3943, -17.4995, -24.1755, -26.3752, -19.2896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3542, device='cuda:0', dtype=torch.float64)
tensor([-15.6712, -17.7282, -24.5056, -26.6386, -19.3052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3500, device='cuda:0', dtype=torch.float64)
tensor([-15.9638, -18.0207, -24.8059, -26.9024, -19.1943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5308, device='cuda:0', dtype=torch.float64)
tensor([-16.2665, -18.2845, -25.0771, -27.1311, -19.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3648, device='cuda:0', dtype=torch.float64)
tensor([-16.5501, -18.5858, -25.1783, -27.3838, -19.0488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1568, device='cuda:0', dtype=torch.float64)
tensor([-16.8352, -18.8358, -25.2297, -27.7445, -19.0129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3240, device='cuda:0', dtype=torch.float64)
tensor([-17.0709, -19.0502, -25.2442, -28.0829, -18.9727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2060, device='cuda:0', dtype=torch.float64)
tensor([-17.4845, -19.4017, -25.1716, -28.4745, -18.9055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1858, device='cuda:0', dtype=torch.float64)
tensor([-17.9997, -19.6400, -25.1438, -28.7521, -18.8623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4198, device='cuda:0', dtype=torch.float64)
tensor([-18.5609, -19.9066, -25.0460, -28.9152, -18.8532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3224, device='cuda:0', dtype=torch.float64)
tensor([-19.0649, -19.9688, -24.9405, -28.9480, -18.8839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4514, device='cuda:0', dtype=torch.float64)
tensor([-19.9107, -20.1315, -24.6947, -29.2842, -18.9556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3146, device='cuda:0', dtype=torch.float64)
tensor([-20.5187, -20.2212, -24.4424, -29.5151, -19.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3667, device='cuda:0', dtype=torch.float64)
tensor([-21.0967, -20.3517, -24.1991, -29.7570, -19.5133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3811, device='cuda:0', dtype=torch.float64)
tensor([-21.5306, -20.3257, -23.9976, -29.9380, -19.8241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5593, device='cuda:0', dtype=torch.float64)
tensor([-21.7518, -20.2965, -23.7196, -29.8693, -19.8534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3368, device='cuda:0', dtype=torch.float64)
tensor([-21.8671, -20.3040, -23.5902, -29.5357, -19.7903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3931, device='cuda:0', dtype=torch.float64)
tensor([-21.8056, -20.3074, -23.4059, -29.3803, -19.8115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4693, device='cuda:0', dtype=torch.float64)
tensor([-21.4544, -20.2256, -23.1548, -28.8927, -19.7802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1735, device='cuda:0', dtype=torch.float64)
tensor([-21.2582, -20.2508, -22.8463, -28.6956, -19.9822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3913, device='cuda:0', dtype=torch.float64)
tensor([-21.3109, -20.3701, -22.5325, -28.6758, -20.2301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2768, device='cuda:0', dtype=torch.float64)
tensor([-21.1046, -20.3661, -22.3719, -28.5599, -20.4705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4418, device='cuda:0', dtype=torch.float64)
tensor([-20.9424, -20.4412, -22.1523, -28.5676, -20.7808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3060, device='cuda:0', dtype=torch.float64)
tensor([-20.6450, -20.5650, -22.0417, -28.4819, -21.0019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1946, device='cuda:0', dtype=torch.float64)
tensor([-20.3900, -20.6832, -22.0600, -28.5200, -21.2331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5688, device='cuda:0', dtype=torch.float64)
tensor([-20.3271, -21.0645, -22.0378, -28.6192, -21.4456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4495, device='cuda:0', dtype=torch.float64)
tensor([-20.0335, -21.3248, -22.2027, -28.6386, -21.7492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1962, device='cuda:0', dtype=torch.float64)
tensor([-19.6820, -21.6769, -22.2901, -28.6120, -21.9862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1140, device='cuda:0', dtype=torch.float64)
tensor([-19.2257, -21.9508, -22.3932, -28.4009, -22.2305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3209, device='cuda:0', dtype=torch.float64)
tensor([-18.8215, -22.2196, -22.5274, -28.2360, -22.5268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0981, device='cuda:0', dtype=torch.float64)
tensor([-18.4691, -22.5383, -22.6343, -27.9908, -22.7804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1832, device='cuda:0', dtype=torch.float64)
tensor([-18.3289, -22.8656, -22.5948, -27.7829, -22.9106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7250, device='cuda:0', dtype=torch.float64)
tensor([-18.0021, -23.2386, -22.5716, -27.5733, -23.2745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3004, device='cuda:0', dtype=torch.float64)
tensor([-17.9153, -23.6238, -22.4495, -27.7046, -23.6911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3375, device='cuda:0', dtype=torch.float64)
tensor([-17.8906, -24.1249, -22.3347, -27.9897, -24.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1717, device='cuda:0', dtype=torch.float64)
tensor([-17.8769, -24.6126, -22.2341, -28.3163, -24.8127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2272, device='cuda:0', dtype=torch.float64)
tensor([-17.9466, -25.0562, -22.2160, -28.8119, -25.5189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5179, device='cuda:0', dtype=torch.float64)
tensor([-17.9158, -25.5716, -22.2492, -29.5186, -26.4892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1417, device='cuda:0', dtype=torch.float64)
tensor([-17.9535, -25.9229, -22.2071, -30.1643, -27.3262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4498, device='cuda:0', dtype=torch.float64)
tensor([-17.9823, -26.3395, -22.2247, -30.8550, -28.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1435, device='cuda:0', dtype=torch.float64)
tensor([-17.8429, -26.6667, -22.3280, -31.2193, -29.0406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2029, device='cuda:0', dtype=torch.float64)
tensor([-17.8460, -26.9489, -22.2812, -31.5895, -29.6718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3084, device='cuda:0', dtype=torch.float64)
tensor([-17.9403, -27.0909, -22.1621, -31.8432, -30.0069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3701, device='cuda:0', dtype=torch.float64)
tensor([-17.9941, -27.1659, -22.1037, -31.9069, -30.2869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6130, device='cuda:0', dtype=torch.float64)
tensor([-17.8924, -27.3149, -22.1784, -31.9568, -30.7124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3163, device='cuda:0', dtype=torch.float64)
tensor([-17.8097, -27.4154, -22.2753, -32.0640, -31.2925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5109, device='cuda:0', dtype=torch.float64)
tensor([-17.7094, -27.5939, -22.5239, -32.3890, -32.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5164, device='cuda:0', dtype=torch.float64)
tensor([-17.6090, -27.5562, -22.9487, -32.9088, -32.9656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3266, device='cuda:0', dtype=torch.float64)
tensor([-17.4057, -27.5050, -23.6502, -33.3779, -33.8287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2560, device='cuda:0', dtype=torch.float64)
tensor([-17.3807, -27.5301, -24.3697, -34.0850, -34.6426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2038, device='cuda:0', dtype=torch.float64)
tensor([-17.5059, -27.5702, -24.7277, -35.0695, -35.2402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2064, device='cuda:0', dtype=torch.float64)
tensor([-17.6461, -27.4999, -25.0408, -35.9514, -35.7513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3191, device='cuda:0', dtype=torch.float64)
tensor([-17.8644, -27.5140, -25.3553, -37.2929, -36.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2383, device='cuda:0', dtype=torch.float64)
tensor([-18.0994, -27.5295, -25.6322, -38.2842, -36.3292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3257, device='cuda:0', dtype=torch.float64)
tensor([-18.2083, -27.3095, -25.9637, -38.9411, -36.3474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2133, device='cuda:0', dtype=torch.float64)
tensor([-18.2813, -26.9598, -26.0470, -39.0340, -36.0781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2350, device='cuda:0', dtype=torch.float64)
tensor([-18.4322, -26.6155, -26.2876, -39.1309, -35.9091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2523, device='cuda:0', dtype=torch.float64)
tensor([-18.5553, -26.1866, -26.5773, -39.3811, -35.7634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3153, device='cuda:0', dtype=torch.float64)
tensor([-18.5327, -25.7671, -26.8000, -39.1977, -35.5831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1268, device='cuda:0', dtype=torch.float64)
tensor([-18.4849, -25.3828, -26.9455, -38.9877, -35.4725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1702, device='cuda:0', dtype=torch.float64)
tensor([-18.4672, -25.2599, -27.2381, -39.1499, -35.5669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3707, device='cuda:0', dtype=torch.float64)
tensor([-18.5938, -25.1770, -27.3981, -39.2754, -35.4680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1002, device='cuda:0', dtype=torch.float64)
tensor([-18.7230, -25.1304, -27.2733, -39.2244, -35.2223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1571, device='cuda:0', dtype=torch.float64)
tensor([-18.8980, -25.0876, -27.0859, -39.2519, -35.0052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3481, device='cuda:0', dtype=torch.float64)
tensor([-19.0858, -25.1209, -26.9026, -39.0356, -34.4889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2355, device='cuda:0', dtype=torch.float64)
tensor([-19.2784, -25.1184, -26.7544, -38.8915, -34.0900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1842, device='cuda:0', dtype=torch.float64)
tensor([-19.5351, -25.0432, -26.5391, -38.5724, -33.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4501, device='cuda:0', dtype=torch.float64)
tensor([-19.7031, -24.8299, -26.2909, -38.0513, -32.4989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1637, device='cuda:0', dtype=torch.float64)
tensor([-19.8191, -24.5595, -25.9595, -37.1190, -31.5370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4276, device='cuda:0', dtype=torch.float64)
tensor([-19.9072, -24.4208, -25.6430, -36.4036, -30.5783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2823, device='cuda:0', dtype=torch.float64)
tensor([-19.9909, -24.3756, -25.3278, -35.8621, -29.6726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2801, device='cuda:0', dtype=torch.float64)
tensor([-20.1441, -24.3060, -25.2230, -35.6756, -28.9213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3422, device='cuda:0', dtype=torch.float64)
tensor([-20.3233, -24.2390, -25.1084, -35.7348, -28.5061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1873, device='cuda:0', dtype=torch.float64)
tensor([-20.3614, -24.2394, -25.0547, -35.9037, -28.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2477, device='cuda:0', dtype=torch.float64)
tensor([-20.6460, -24.2020, -25.0768, -36.3766, -27.8584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2511, device='cuda:0', dtype=torch.float64)
tensor([-20.7985, -24.1819, -25.0838, -36.8346, -27.5142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2484, device='cuda:0', dtype=torch.float64)
tensor([-21.0135, -24.1343, -25.0733, -37.5022, -27.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1911, device='cuda:0', dtype=torch.float64)
tensor([-21.1909, -23.9608, -25.1260, -37.8969, -27.1844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3029, device='cuda:0', dtype=torch.float64)
tensor([-21.3632, -23.7118, -25.0161, -37.9845, -27.0674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9756, device='cuda:0', dtype=torch.float64)
tensor([-21.5883, -23.5299, -24.8914, -38.3975, -27.1860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0364, device='cuda:0', dtype=torch.float64)
tensor([-21.7331, -23.3958, -24.7821, -38.5380, -27.3021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9777, device='cuda:0', dtype=torch.float64)
tensor([-21.8856, -23.2585, -24.8092, -38.6952, -27.6992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1265, device='cuda:0', dtype=torch.float64)
tensor([-21.9109, -23.0241, -24.8122, -38.7237, -28.0253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1720, device='cuda:0', dtype=torch.float64)
tensor([-21.8900, -22.7948, -24.8322, -38.8497, -28.5032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2175, device='cuda:0', dtype=torch.float64)
tensor([-21.9081, -22.5302, -24.7447, -39.0458, -29.0294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4597, device='cuda:0', dtype=torch.float64)
tensor([-21.7675, -22.4922, -24.6246, -39.1554, -29.3788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1574, device='cuda:0', dtype=torch.float64)
tensor([-21.7030, -22.5401, -24.4381, -39.3633, -29.7394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0786, device='cuda:0', dtype=torch.float64)
tensor([-21.6054, -22.4989, -24.1206, -39.6198, -29.9395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1641, device='cuda:0', dtype=torch.float64)
tensor([-21.5888, -22.3743, -23.6448, -39.9804, -30.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3812, device='cuda:0', dtype=torch.float64)
tensor([-21.8607, -22.3722, -23.2016, -40.8647, -30.3083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3581, device='cuda:0', dtype=torch.float64)
tensor([-22.1164, -22.5101, -22.8597, -41.7465, -30.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3313, device='cuda:0', dtype=torch.float64)
tensor([-22.3899, -22.8044, -22.4497, -42.6250, -30.1903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2867, device='cuda:0', dtype=torch.float64)
tensor([-22.6074, -23.3599, -22.1613, -43.6865, -30.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2557, device='cuda:0', dtype=torch.float64)
tensor([-22.8623, -23.8648, -21.8284, -44.9259, -30.3925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2316, device='cuda:0', dtype=torch.float64)
tensor([-23.2371, -24.3318, -21.4233, -46.1916, -30.4805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2386, device='cuda:0', dtype=torch.float64)
tensor([-23.6076, -24.6963, -21.0629, -47.1579, -30.3504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2752, device='cuda:0', dtype=torch.float64)
tensor([-24.0218, -25.1943, -20.7592, -48.2029, -29.8814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4756, device='cuda:0', dtype=torch.float64)
tensor([-24.4425, -25.6843, -20.4268, -49.2649, -29.4325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2656, device='cuda:0', dtype=torch.float64)
tensor([-24.8743, -26.1621, -20.1733, -50.2723, -29.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3796, device='cuda:0', dtype=torch.float64)
tensor([-25.1937, -26.6759, -19.9650, -51.0760, -28.7959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1712, device='cuda:0', dtype=torch.float64)
tensor([-25.3742, -27.1082, -19.8068, -51.7262, -28.5139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1900, device='cuda:0', dtype=torch.float64)
tensor([-25.5539, -27.4025, -19.6845, -52.2426, -28.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1466, device='cuda:0', dtype=torch.float64)
tensor([-25.7087, -27.5435, -19.5730, -52.7346, -27.7442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3952, device='cuda:0', dtype=torch.float64)
tensor([-25.6435, -27.6261, -19.5773, -52.8202, -27.2798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0526, device='cuda:0', dtype=torch.float64)
tensor([-25.4763, -27.6065, -19.6280, -52.8511, -27.0014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2338, device='cuda:0', dtype=torch.float64)
tensor([-25.3596, -27.7504, -19.6349, -53.2281, -26.8636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1550, device='cuda:0', dtype=torch.float64)
tensor([-25.1608, -27.8487, -19.6050, -53.1372, -26.5901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0736, device='cuda:0', dtype=torch.float64)
tensor([-25.1223, -28.0178, -19.5824, -53.2222, -26.4941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1231, device='cuda:0', dtype=torch.float64)
tensor([-25.0495, -28.3145, -19.5988, -53.5845, -26.7285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1391, device='cuda:0', dtype=torch.float64)
tensor([-25.1403, -28.5115, -19.4513, -53.7497, -26.7262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0994, device='cuda:0', dtype=torch.float64)
tensor([-25.1584, -28.5903, -19.3465, -53.5446, -26.5566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0303, device='cuda:0', dtype=torch.float64)
tensor([-25.1391, -28.7343, -19.3093, -53.7158, -26.7291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0973, device='cuda:0', dtype=torch.float64)
tensor([-25.0850, -28.7296, -19.3630, -53.7269, -27.0180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9037, device='cuda:0', dtype=torch.float64)
tensor([-25.1529, -28.8263, -19.3506, -53.9110, -27.3142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0303, device='cuda:0', dtype=torch.float64)
tensor([-25.2007, -28.9316, -19.3439, -54.1230, -27.7409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1529, device='cuda:0', dtype=torch.float64)
tensor([-25.3085, -29.2524, -19.1582, -54.3771, -27.9980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3617, device='cuda:0', dtype=torch.float64)
tensor([-25.4432, -29.4304, -18.8616, -54.2122, -28.0089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2541, device='cuda:0', dtype=torch.float64)
tensor([-25.5285, -29.5009, -18.6448, -54.0356, -27.8483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2942, device='cuda:0', dtype=torch.float64)
tensor([-25.5143, -29.4608, -18.4373, -53.5846, -27.5377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1310, device='cuda:0', dtype=torch.float64)
tensor([-25.6769, -29.4890, -18.2513, -53.3498, -27.2137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1582, device='cuda:0', dtype=torch.float64)
tensor([-25.9322, -29.5800, -18.0004, -52.8464, -26.7577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9508, device='cuda:0', dtype=torch.float64)
tensor([-26.2844, -29.6647, -17.7188, -52.4145, -26.4050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1507, device='cuda:0', dtype=torch.float64)
tensor([-26.5124, -29.7003, -17.5402, -52.1952, -26.3098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3764, device='cuda:0', dtype=torch.float64)
tensor([-26.8489, -29.7705, -17.3036, -52.0148, -26.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3516, device='cuda:0', dtype=torch.float64)
tensor([-27.2273, -29.7307, -17.1564, -51.3024, -25.9221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1055, device='cuda:0', dtype=torch.float64)
tensor([-27.6836, -29.7317, -17.1214, -51.0043, -25.6423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9865, device='cuda:0', dtype=torch.float64)
tensor([-28.1398, -29.8775, -17.0990, -50.8609, -25.5830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3073, device='cuda:0', dtype=torch.float64)
tensor([-28.4044, -30.0178, -17.1336, -51.0633, -25.7104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9651, device='cuda:0', dtype=torch.float64)
tensor([-28.7623, -30.1189, -17.1487, -51.1377, -25.7043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0011, device='cuda:0', dtype=torch.float64)
tensor([-29.1320, -30.3026, -17.2141, -51.4596, -25.7832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3570, device='cuda:0', dtype=torch.float64)
tensor([-29.3005, -30.3643, -17.3551, -51.7198, -25.7141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2231, device='cuda:0', dtype=torch.float64)
tensor([-29.6017, -30.4558, -17.4397, -51.5257, -25.4914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0851, device='cuda:0', dtype=torch.float64)
tensor([-29.9190, -30.3117, -17.5116, -51.0245, -25.4583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1365, device='cuda:0', dtype=torch.float64)
tensor([-30.1696, -30.2140, -17.5731, -50.0956, -25.4349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2307, device='cuda:0', dtype=torch.float64)
tensor([-30.4459, -30.2510, -17.6345, -49.6527, -25.4708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2977, device='cuda:0', dtype=torch.float64)
tensor([-30.7444, -30.3075, -17.6897, -48.9109, -25.7804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2846, device='cuda:0', dtype=torch.float64)
tensor([-31.3639, -30.3629, -17.7744, -48.2050, -26.3496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4757, device='cuda:0', dtype=torch.float64)
tensor([-31.9538, -30.6661, -17.8178, -47.6374, -27.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0478, device='cuda:0', dtype=torch.float64)
tensor([-32.6506, -30.9888, -17.8135, -47.1899, -27.9035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2704, device='cuda:0', dtype=torch.float64)
tensor([-33.0187, -31.0055, -17.7978, -46.9261, -28.2778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1870, device='cuda:0', dtype=torch.float64)
tensor([-33.3056, -30.9767, -17.7834, -46.5429, -28.5773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0908, device='cuda:0', dtype=torch.float64)
tensor([-33.4257, -30.8643, -17.8531, -46.1277, -28.8176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9774, device='cuda:0', dtype=torch.float64)
tensor([-33.5987, -30.6235, -18.0267, -45.7711, -28.8948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0936, device='cuda:0', dtype=torch.float64)
tensor([-33.7538, -30.3580, -18.1177, -45.5594, -28.6099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1687, device='cuda:0', dtype=torch.float64)
tensor([-33.7811, -30.1560, -18.1673, -45.4063, -27.9873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1670, device='cuda:0', dtype=torch.float64)
tensor([-33.6882, -29.7841, -18.3446, -45.1107, -27.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9829, device='cuda:0', dtype=torch.float64)
tensor([-33.7187, -29.5984, -18.5140, -45.4931, -26.7275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9843, device='cuda:0', dtype=torch.float64)
tensor([-33.6890, -29.3171, -18.6683, -45.9620, -26.0329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1149, device='cuda:0', dtype=torch.float64)
tensor([-33.6028, -29.1717, -18.8868, -46.5116, -25.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9893, device='cuda:0', dtype=torch.float64)
tensor([-33.5916, -29.1008, -19.0846, -47.2872, -24.4100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2714, device='cuda:0', dtype=torch.float64)
tensor([-33.7400, -29.1301, -19.4479, -48.0355, -23.6442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1059, device='cuda:0', dtype=torch.float64)
tensor([-33.8154, -29.0087, -19.8169, -48.7829, -23.1386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3646, device='cuda:0', dtype=torch.float64)
tensor([-33.6973, -28.8726, -20.2014, -49.5403, -22.8424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3019, device='cuda:0', dtype=torch.float64)
tensor([-33.5688, -28.8017, -20.6593, -50.2576, -22.7091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0747, device='cuda:0', dtype=torch.float64)
tensor([-33.3634, -28.9231, -20.9544, -50.9302, -22.6109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9586, device='cuda:0', dtype=torch.float64)
tensor([-33.1558, -29.2289, -21.1707, -51.7399, -22.5233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0729, device='cuda:0', dtype=torch.float64)
tensor([-32.9262, -29.3968, -21.1137, -52.2235, -22.5305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9014, device='cuda:0', dtype=torch.float64)
tensor([-32.6953, -29.5634, -21.0479, -52.7173, -22.5754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9295, device='cuda:0', dtype=torch.float64)
tensor([-32.4220, -29.8414, -21.0514, -53.4395, -22.6983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1790, device='cuda:0', dtype=torch.float64)
tensor([-32.0081, -29.9335, -21.0070, -53.2182, -22.5644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1261, device='cuda:0', dtype=torch.float64)
tensor([-31.6314, -30.0148, -20.8421, -52.6048, -22.3020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0192, device='cuda:0', dtype=torch.float64)
tensor([-31.2385, -30.2314, -20.7011, -52.3010, -22.1235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1944, device='cuda:0', dtype=torch.float64)
tensor([-30.8651, -30.4291, -20.5387, -51.7164, -21.9352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0992, device='cuda:0', dtype=torch.float64)
tensor([-30.5104, -30.5670, -20.4340, -50.8631, -21.8651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1941, device='cuda:0', dtype=torch.float64)
tensor([-30.0684, -30.7633, -20.5252, -50.5625, -21.8697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0577, device='cuda:0', dtype=torch.float64)
tensor([-29.7743, -31.0396, -20.5488, -50.7898, -21.8541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0877, device='cuda:0', dtype=torch.float64)
tensor([-29.4763, -31.4153, -20.6869, -51.3808, -21.9882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2557, device='cuda:0', dtype=torch.float64)
tensor([-29.3808, -31.7101, -20.5683, -51.3882, -22.0348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1296, device='cuda:0', dtype=torch.float64)
tensor([-29.1889, -31.8906, -20.2722, -51.3097, -22.0472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1797, device='cuda:0', dtype=torch.float64)
tensor([-29.0368, -31.9780, -20.0099, -51.0507, -21.7870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2551, device='cuda:0', dtype=torch.float64)
tensor([-28.9771, -32.0241, -19.7678, -50.5086, -21.5902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1783, device='cuda:0', dtype=torch.float64)
tensor([-29.0150, -32.0892, -19.5927, -49.8918, -21.5070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2084, device='cuda:0', dtype=torch.float64)
tensor([-29.1599, -32.4686, -19.4793, -49.7038, -21.5561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1708, device='cuda:0', dtype=torch.float64)
tensor([-29.2366, -32.9093, -19.3130, -49.3149, -21.6119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2343, device='cuda:0', dtype=torch.float64)
tensor([-29.4187, -33.5745, -19.2338, -48.6436, -21.7152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1455, device='cuda:0', dtype=torch.float64)
tensor([-29.4871, -33.9137, -19.0936, -47.8324, -21.7826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1225, device='cuda:0', dtype=torch.float64)
tensor([-29.6937, -34.3343, -19.0349, -47.4185, -21.9572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9473, device='cuda:0', dtype=torch.float64)
tensor([-29.7352, -34.6297, -18.8694, -46.7872, -22.3100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1363, device='cuda:0', dtype=torch.float64)
tensor([-29.7923, -34.9752, -18.7687, -46.2539, -22.6799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1310, device='cuda:0', dtype=torch.float64)
tensor([-29.8074, -35.2448, -18.6970, -45.8674, -23.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0968, device='cuda:0', dtype=torch.float64)
tensor([-29.8490, -35.5596, -18.7502, -45.6400, -23.7419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0416, device='cuda:0', dtype=torch.float64)
tensor([-29.8578, -35.9581, -18.9441, -45.7100, -24.3291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1092, device='cuda:0', dtype=torch.float64)
tensor([-29.8273, -36.4729, -19.0733, -45.9294, -24.7634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9999, device='cuda:0', dtype=torch.float64)
tensor([-29.9568, -37.2079, -19.0388, -46.0604, -25.2586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0814, device='cuda:0', dtype=torch.float64)
tensor([-30.0412, -37.7620, -19.0348, -46.1615, -25.5005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2746, device='cuda:0', dtype=torch.float64)
tensor([-30.0870, -38.1930, -18.9028, -46.2197, -25.8666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0336, device='cuda:0', dtype=torch.float64)
tensor([-30.0464, -38.6994, -18.7039, -46.8242, -26.2384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1407, device='cuda:0', dtype=torch.float64)
tensor([-30.0904, -39.1980, -18.5245, -47.7611, -26.6187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1019, device='cuda:0', dtype=torch.float64)
tensor([-30.4030, -39.7806, -18.3698, -49.4262, -26.9780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1499, device='cuda:0', dtype=torch.float64)
tensor([-30.7637, -40.3799, -18.1424, -51.1561, -27.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9882, device='cuda:0', dtype=torch.float64)
tensor([-31.2464, -41.1581, -18.0942, -53.0508, -27.9599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8824, device='cuda:0', dtype=torch.float64)
tensor([-31.5569, -41.6803, -18.0567, -54.7872, -28.4086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2971, device='cuda:0', dtype=torch.float64)
tensor([-32.0745, -42.2812, -18.0739, -56.7477, -28.8135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9692, device='cuda:0', dtype=torch.float64)
tensor([-32.6487, -42.8083, -18.0485, -58.3354, -29.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9099, device='cuda:0', dtype=torch.float64)
tensor([-33.2232, -43.4254, -18.0692, -59.8745, -29.7665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0404, device='cuda:0', dtype=torch.float64)
tensor([-33.7971, -43.9997, -18.0632, -61.2228, -30.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1466, device='cuda:0', dtype=torch.float64)
tensor([-34.2289, -44.3256, -17.9679, -61.6298, -30.8686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1059, device='cuda:0', dtype=torch.float64)
tensor([-34.6645, -44.5332, -17.8593, -62.2205, -31.3541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0304, device='cuda:0', dtype=torch.float64)
tensor([-35.0932, -44.7752, -17.8989, -62.9070, -31.6940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1989, device='cuda:0', dtype=torch.float64)
tensor([-35.5493, -44.9881, -17.9901, -64.2874, -32.0676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0782, device='cuda:0', dtype=torch.float64)
tensor([-35.7572, -45.0727, -18.0318, -65.2083, -32.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0562, device='cuda:0', dtype=torch.float64)
tensor([-36.0522, -45.5367, -18.2746, -66.8478, -32.4723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9364, device='cuda:0', dtype=torch.float64)
tensor([-36.3235, -45.9376, -18.5023, -68.4082, -32.7603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0859, device='cuda:0', dtype=torch.float64)
tensor([-36.5572, -46.0513, -18.6277, -69.4196, -32.8907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1224, device='cuda:0', dtype=torch.float64)
tensor([-36.5846, -46.1929, -18.6311, -70.0329, -32.9471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9483, device='cuda:0', dtype=torch.float64)
tensor([-36.5444, -46.1845, -18.6734, -70.1865, -32.7227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1419, device='cuda:0', dtype=torch.float64)
tensor([-36.4063, -45.8554, -18.5360, -69.3183, -32.4242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9134, device='cuda:0', dtype=torch.float64)
tensor([-36.2493, -45.3684, -18.3323, -68.6241, -32.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0874, device='cuda:0', dtype=torch.float64)
tensor([-36.1900, -44.8925, -18.2681, -67.9709, -31.6897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([-36.3329, -44.7015, -18.2700, -67.8130, -31.4461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0999, device='cuda:0', dtype=torch.float64)
tensor([-36.4190, -44.6197, -18.2522, -67.6709, -31.3925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8910, device='cuda:0', dtype=torch.float64)
tensor([-36.6572, -44.6657, -18.2795, -67.7144, -31.4574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0893, device='cuda:0', dtype=torch.float64)
tensor([-36.8993, -44.6570, -18.2967, -67.3237, -31.5055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0415, device='cuda:0', dtype=torch.float64)
tensor([-37.0325, -44.3842, -18.1310, -66.2836, -31.3604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9946, device='cuda:0', dtype=torch.float64)
tensor([-37.1532, -43.9071, -17.9457, -65.1319, -31.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0004, device='cuda:0', dtype=torch.float64)
tensor([-37.3643, -43.5907, -17.7696, -64.1769, -30.9981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9794, device='cuda:0', dtype=torch.float64)
tensor([-37.7371, -43.3586, -17.6375, -63.6497, -30.8173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0689, device='cuda:0', dtype=torch.float64)
tensor([-38.1169, -43.2589, -17.3954, -63.0660, -30.7632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2385, device='cuda:0', dtype=torch.float64)
tensor([-38.0855, -42.6506, -16.9820, -61.9235, -30.5895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9900, device='cuda:0', dtype=torch.float64)
tensor([-37.9308, -41.8833, -16.6685, -60.5726, -30.2873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9883, device='cuda:0', dtype=torch.float64)
tensor([-37.8778, -41.2868, -16.3954, -59.5591, -30.0131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1384, device='cuda:0', dtype=torch.float64)
tensor([-37.6816, -40.6536, -16.3235, -58.2716, -29.5343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8985, device='cuda:0', dtype=torch.float64)
tensor([-37.3706, -39.9962, -16.2370, -57.0337, -29.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8912, device='cuda:0', dtype=torch.float64)
tensor([-37.1413, -39.3595, -16.1535, -55.8696, -28.8994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9797, device='cuda:0', dtype=torch.float64)
tensor([-36.7995, -38.8327, -16.1615, -54.9649, -28.5666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1168, device='cuda:0', dtype=torch.float64)
tensor([-36.5957, -38.3863, -16.1663, -54.3270, -28.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0302, device='cuda:0', dtype=torch.float64)
tensor([-36.3434, -37.9181, -16.2261, -53.8683, -27.8047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9264, device='cuda:0', dtype=torch.float64)
tensor([-36.1348, -37.6273, -16.3390, -53.6538, -27.4063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1623, device='cuda:0', dtype=torch.float64)
tensor([-35.8168, -37.3301, -16.6302, -53.6864, -26.9279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0708, device='cuda:0', dtype=torch.float64)
tensor([-35.3490, -36.9910, -16.8178, -53.3313, -26.5123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1643, device='cuda:0', dtype=torch.float64)
tensor([-34.9067, -36.3719, -16.9109, -52.7598, -26.0016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0426, device='cuda:0', dtype=torch.float64)
tensor([-34.5671, -36.0825, -17.0498, -52.3178, -25.5491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9381, device='cuda:0', dtype=torch.float64)
tensor([-34.0693, -35.7394, -17.2152, -52.0138, -25.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9267, device='cuda:0', dtype=torch.float64)
tensor([-33.5164, -35.4754, -17.3818, -51.8487, -24.8695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9206, device='cuda:0', dtype=torch.float64)
tensor([-32.9946, -35.2455, -17.4616, -51.4745, -24.7872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8477, device='cuda:0', dtype=torch.float64)
tensor([-32.6132, -35.1442, -17.5350, -51.1347, -24.6989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9974, device='cuda:0', dtype=torch.float64)
tensor([-32.2641, -35.0212, -17.6140, -50.8517, -24.7313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0730, device='cuda:0', dtype=torch.float64)
tensor([-31.8076, -35.0281, -17.7018, -50.7235, -24.8872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9356, device='cuda:0', dtype=torch.float64)
tensor([-31.5290, -35.0511, -17.6192, -50.4527, -25.0067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9784, device='cuda:0', dtype=torch.float64)
tensor([-31.1806, -35.0356, -17.5677, -50.0621, -25.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1352, device='cuda:0', dtype=torch.float64)
tensor([-30.6800, -34.7659, -17.4260, -49.2068, -25.0909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8753, device='cuda:0', dtype=torch.float64)
tensor([-30.4152, -34.6698, -17.3323, -48.5682, -25.1126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7867, device='cuda:0', dtype=torch.float64)
tensor([-30.1840, -34.3645, -17.1523, -47.6165, -24.9739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0852, device='cuda:0', dtype=torch.float64)
tensor([-30.0466, -34.1345, -16.9596, -46.2753, -24.8172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9657, device='cuda:0', dtype=torch.float64)
tensor([-29.9406, -34.0139, -16.8767, -45.3463, -24.8406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9630, device='cuda:0', dtype=torch.float64)
tensor([-30.0419, -33.9755, -16.8088, -44.4572, -24.9262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8908, device='cuda:0', dtype=torch.float64)
tensor([-30.2214, -33.9844, -16.7523, -43.6708, -25.0684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0435, device='cuda:0', dtype=torch.float64)
tensor([-30.3723, -33.9751, -16.5853, -42.9114, -25.3134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8805, device='cuda:0', dtype=torch.float64)
tensor([-30.3170, -33.7501, -16.4010, -42.0999, -25.5644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8907, device='cuda:0', dtype=torch.float64)
tensor([-30.3471, -33.5423, -16.3683, -41.5684, -25.7801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0874, device='cuda:0', dtype=torch.float64)
tensor([-30.2771, -33.2885, -16.2944, -40.8412, -25.9708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9897, device='cuda:0', dtype=torch.float64)
tensor([-30.0454, -33.0111, -16.2589, -40.2442, -26.0333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7942, device='cuda:0', dtype=torch.float64)
tensor([-29.6212, -32.5737, -16.2075, -39.5179, -26.0854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9859, device='cuda:0', dtype=torch.float64)
tensor([-29.1766, -32.1723, -16.1562, -38.8905, -26.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9708, device='cuda:0', dtype=torch.float64)
tensor([-28.8417, -31.8002, -16.1315, -38.4281, -26.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9731, device='cuda:0', dtype=torch.float64)
tensor([-28.6796, -31.3865, -16.1148, -37.9133, -26.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8984, device='cuda:0', dtype=torch.float64)
tensor([-28.5573, -31.0105, -16.0982, -37.3492, -26.0240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9547, device='cuda:0', dtype=torch.float64)
tensor([-28.3374, -30.6466, -16.1481, -36.9937, -25.9253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1299, device='cuda:0', dtype=torch.float64)
tensor([-28.2068, -30.2487, -16.2009, -36.5107, -25.7861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2195, device='cuda:0', dtype=torch.float64)
tensor([-27.9012, -29.9366, -16.2828, -35.8596, -25.5970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9847, device='cuda:0', dtype=torch.float64)
tensor([-27.7033, -29.6055, -16.3558, -35.2355, -25.4108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8337, device='cuda:0', dtype=torch.float64)
tensor([-27.6543, -29.3017, -16.3911, -34.7584, -25.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8531, device='cuda:0', dtype=torch.float64)
tensor([-27.4792, -28.9729, -16.4137, -34.4003, -25.0091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7691, device='cuda:0', dtype=torch.float64)
tensor([-27.3990, -28.6149, -16.4294, -34.0370, -24.8755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9894, device='cuda:0', dtype=torch.float64)
tensor([-27.2787, -28.1779, -16.4414, -33.5293, -24.6958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9829, device='cuda:0', dtype=torch.float64)
tensor([-27.1183, -27.8972, -16.3952, -33.1702, -24.4465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0074, device='cuda:0', dtype=torch.float64)
tensor([-26.6446, -27.5928, -16.3317, -32.6571, -23.9522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8297, device='cuda:0', dtype=torch.float64)
tensor([-26.3070, -27.4804, -16.2852, -32.2181, -23.5710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2801, device='cuda:0', dtype=torch.float64)
tensor([-26.3129, -27.3372, -16.2602, -32.0158, -23.4735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7778, device='cuda:0', dtype=torch.float64)
tensor([-26.2767, -27.3069, -16.2149, -31.9633, -23.4387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1306, device='cuda:0', dtype=torch.float64)
tensor([-26.2406, -27.2367, -16.1399, -31.9554, -23.5569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8617, device='cuda:0', dtype=torch.float64)
tensor([-26.3106, -27.2547, -16.0684, -32.0419, -23.8380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9078, device='cuda:0', dtype=torch.float64)
tensor([-26.1273, -27.1416, -16.0433, -31.9980, -23.8774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8649, device='cuda:0', dtype=torch.float64)
tensor([-26.1393, -27.1585, -15.9377, -32.1390, -24.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8540, device='cuda:0', dtype=torch.float64)
tensor([-26.2484, -27.2073, -15.8544, -32.1989, -24.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8869, device='cuda:0', dtype=torch.float64)
tensor([-26.1881, -27.2200, -15.7634, -32.1025, -24.3087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8969, device='cuda:0', dtype=torch.float64)
tensor([-25.9589, -27.1851, -15.6721, -31.9038, -24.3378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9922, device='cuda:0', dtype=torch.float64)
tensor([-25.9874, -27.3375, -15.5521, -31.8627, -24.4401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9486, device='cuda:0', dtype=torch.float64)
tensor([-25.8920, -27.3236, -15.4686, -31.7052, -24.4208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9563, device='cuda:0', dtype=torch.float64)
tensor([-25.7580, -27.2694, -15.3986, -31.4538, -24.2631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0047, device='cuda:0', dtype=torch.float64)
tensor([-25.6194, -27.2831, -15.3909, -31.2736, -24.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9414, device='cuda:0', dtype=torch.float64)
tensor([-25.5175, -27.3782, -15.3387, -31.0486, -24.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9524, device='cuda:0', dtype=torch.float64)
tensor([-25.5714, -27.5734, -15.3336, -31.0720, -23.9681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8424, device='cuda:0', dtype=torch.float64)
tensor([-25.6126, -27.8084, -15.2909, -31.1474, -23.8834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9042, device='cuda:0', dtype=torch.float64)
tensor([-25.5333, -28.0414, -15.1883, -31.1857, -23.7165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9744, device='cuda:0', dtype=torch.float64)
tensor([-25.3575, -28.1863, -15.1470, -31.0990, -23.4158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9141, device='cuda:0', dtype=torch.float64)
tensor([-25.3552, -28.4557, -15.0726, -31.0196, -23.2573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7633, device='cuda:0', dtype=torch.float64)
tensor([-25.6164, -28.7356, -15.0057, -31.1584, -23.3262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9308, device='cuda:0', dtype=torch.float64)
tensor([-25.7812, -29.0228, -14.9120, -31.2897, -23.5311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7963, device='cuda:0', dtype=torch.float64)
tensor([-26.0922, -29.4634, -14.8422, -31.4977, -23.6820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8572, device='cuda:0', dtype=torch.float64)
tensor([-26.3992, -29.8051, -14.7538, -31.6122, -23.7208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9529, device='cuda:0', dtype=torch.float64)
tensor([-26.8794, -30.3123, -14.6568, -32.0091, -23.9870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7433, device='cuda:0', dtype=torch.float64)
tensor([-27.4308, -30.7757, -14.5509, -32.5487, -24.3530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7849, device='cuda:0', dtype=torch.float64)
tensor([-27.7981, -31.1658, -14.4808, -32.9321, -24.5112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7792, device='cuda:0', dtype=torch.float64)
tensor([-28.3364, -31.5329, -14.4467, -33.5057, -24.8916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0334, device='cuda:0', dtype=torch.float64)
tensor([-28.7228, -31.8972, -14.4283, -33.8851, -25.2850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8553, device='cuda:0', dtype=torch.float64)
tensor([-28.9248, -32.1111, -14.4433, -34.1663, -25.5966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0521, device='cuda:0', dtype=torch.float64)
tensor([-28.7561, -32.2086, -14.3807, -34.0275, -25.4316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8143, device='cuda:0', dtype=torch.float64)
tensor([-28.6325, -32.4509, -14.3140, -34.0495, -25.2572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8115, device='cuda:0', dtype=torch.float64)
tensor([-28.3592, -32.7018, -14.2583, -34.0913, -25.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9149, device='cuda:0', dtype=torch.float64)
tensor([-28.2404, -32.8768, -14.3228, -34.2048, -24.9321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8714, device='cuda:0', dtype=torch.float64)
tensor([-28.1709, -33.1673, -14.3961, -34.3770, -24.7916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8819, device='cuda:0', dtype=torch.float64)
tensor([-28.0915, -33.5530, -14.4691, -34.6345, -24.6322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7830, device='cuda:0', dtype=torch.float64)
tensor([-27.9124, -33.7936, -14.5390, -34.9422, -24.4673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7608, device='cuda:0', dtype=torch.float64)
tensor([-27.7748, -34.0904, -14.5762, -35.4745, -24.4920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8838, device='cuda:0', dtype=torch.float64)
tensor([-27.4552, -34.2203, -14.6839, -35.9315, -24.4094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9237, device='cuda:0', dtype=torch.float64)
tensor([-27.1135, -34.3303, -14.7847, -36.3806, -24.1400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7149, device='cuda:0', dtype=torch.float64)
tensor([-27.0007, -34.4743, -14.8311, -36.8691, -23.9952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7991, device='cuda:0', dtype=torch.float64)
tensor([-27.0032, -34.5559, -14.8345, -37.1464, -23.9021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0047, device='cuda:0', dtype=torch.float64)
tensor([-27.0866, -34.8600, -14.8471, -37.3383, -23.7902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7493, device='cuda:0', dtype=torch.float64)
tensor([-27.1563, -35.2289, -14.8657, -37.4304, -23.7105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0053, device='cuda:0', dtype=torch.float64)
tensor([-27.4389, -35.5666, -14.9322, -37.7101, -23.7899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8925, device='cuda:0', dtype=torch.float64)
tensor([-27.6604, -35.8536, -15.0165, -37.8411, -23.7326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7745, device='cuda:0', dtype=torch.float64)
tensor([-27.9337, -36.0788, -15.1048, -37.8438, -23.5546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8562, device='cuda:0', dtype=torch.float64)
tensor([-28.1385, -36.3434, -15.2369, -37.7426, -23.3488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9088, device='cuda:0', dtype=torch.float64)
tensor([-28.5591, -36.7796, -15.3639, -37.8473, -23.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8513, device='cuda:0', dtype=torch.float64)
tensor([-29.1219, -37.1350, -15.4269, -37.7718, -23.4887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8470, device='cuda:0', dtype=torch.float64)
tensor([-29.6235, -37.4325, -15.4963, -37.6841, -23.6485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8774, device='cuda:0', dtype=torch.float64)
tensor([-30.2906, -37.7455, -15.5925, -37.5708, -23.8818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8937, device='cuda:0', dtype=torch.float64)
tensor([-30.8163, -37.9848, -15.6496, -37.5369, -24.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9682, device='cuda:0', dtype=torch.float64)
tensor([-31.0296, -38.2283, -15.7376, -37.2275, -24.5509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8394, device='cuda:0', dtype=torch.float64)
tensor([-30.9517, -38.4570, -15.8409, -36.9159, -24.6126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9131, device='cuda:0', dtype=torch.float64)
tensor([-31.0291, -38.4966, -15.9600, -36.5749, -24.8690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-31.1337, -38.5475, -16.1101, -36.0085, -25.2874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8219, device='cuda:0', dtype=torch.float64)
tensor([-31.4827, -38.6953, -16.3006, -35.5569, -25.9995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8870, device='cuda:0', dtype=torch.float64)
tensor([-31.6851, -38.7297, -16.5202, -35.1290, -26.5991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8121, device='cuda:0', dtype=torch.float64)
tensor([-31.8234, -38.7955, -16.7642, -34.8438, -27.0702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8722, device='cuda:0', dtype=torch.float64)
tensor([-31.5513, -38.7684, -16.9086, -34.3845, -27.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7509, device='cuda:0', dtype=torch.float64)
tensor([-31.3153, -38.7298, -17.0081, -34.1290, -27.2667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7398, device='cuda:0', dtype=torch.float64)
tensor([-30.9788, -38.4940, -17.1021, -33.8013, -27.0638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8239, device='cuda:0', dtype=torch.float64)
tensor([-30.9333, -38.4711, -17.1698, -33.6493, -26.9255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8096, device='cuda:0', dtype=torch.float64)
tensor([-30.8180, -38.5014, -17.2001, -33.5192, -26.7684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7524, device='cuda:0', dtype=torch.float64)
tensor([-30.7357, -38.5431, -17.2064, -33.4381, -26.6392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7819, device='cuda:0', dtype=torch.float64)
tensor([-30.5002, -38.6876, -17.1773, -33.2244, -26.4503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8273, device='cuda:0', dtype=torch.float64)
tensor([-30.2121, -38.6305, -17.1289, -33.0629, -26.1939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8692, device='cuda:0', dtype=torch.float64)
tensor([-29.7809, -38.6804, -17.0560, -32.9621, -25.7549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7894, device='cuda:0', dtype=torch.float64)
tensor([-29.5159, -38.7208, -17.0254, -33.1951, -25.5019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8244, device='cuda:0', dtype=torch.float64)
tensor([-29.0729, -38.7211, -17.0095, -33.2649, -25.3779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7746, device='cuda:0', dtype=torch.float64)
tensor([-28.6785, -38.8493, -17.0185, -33.5194, -25.2845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7844, device='cuda:0', dtype=torch.float64)
tensor([-28.4225, -38.9082, -17.0329, -33.9392, -25.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7945, device='cuda:0', dtype=torch.float64)
tensor([-28.1134, -38.9268, -17.0846, -34.1529, -25.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7474, device='cuda:0', dtype=torch.float64)
tensor([-27.7625, -38.8191, -17.1255, -34.4371, -25.3602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6445, device='cuda:0', dtype=torch.float64)
tensor([-27.3596, -38.7812, -17.2084, -34.8518, -25.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7322, device='cuda:0', dtype=torch.float64)
tensor([-27.0697, -38.7915, -17.2482, -35.3062, -25.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7550, device='cuda:0', dtype=torch.float64)
tensor([-26.8339, -38.8117, -17.2725, -35.7274, -25.4444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8877, device='cuda:0', dtype=torch.float64)
tensor([-26.6481, -38.9326, -17.3094, -35.9336, -25.5092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9994, device='cuda:0', dtype=torch.float64)
tensor([-26.3738, -39.2571, -17.3535, -36.1487, -25.4594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8570, device='cuda:0', dtype=torch.float64)
tensor([-26.2654, -39.4687, -17.4288, -36.2570, -25.6405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7937, device='cuda:0', dtype=torch.float64)
tensor([-26.2023, -39.6752, -17.5239, -36.5518, -25.8065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9216, device='cuda:0', dtype=torch.float64)
tensor([-26.1799, -39.7176, -17.6465, -36.9259, -25.9704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6830, device='cuda:0', dtype=torch.float64)
tensor([-26.1476, -39.7939, -17.7437, -37.3259, -26.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7543, device='cuda:0', dtype=torch.float64)
tensor([-26.1858, -39.8107, -17.8591, -37.6245, -26.2083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7917, device='cuda:0', dtype=torch.float64)
tensor([-26.1495, -39.9897, -17.9433, -38.0948, -26.3465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7637, device='cuda:0', dtype=torch.float64)
tensor([-26.1781, -40.2619, -18.0621, -38.4270, -26.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6900, device='cuda:0', dtype=torch.float64)
tensor([-26.1733, -40.5738, -18.2388, -38.8287, -26.1834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7526, device='cuda:0', dtype=torch.float64)
tensor([-26.0303, -40.5606, -18.3900, -38.7919, -25.9154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7090, device='cuda:0', dtype=torch.float64)
tensor([-26.0092, -40.5485, -18.4998, -38.8676, -25.7162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7534, device='cuda:0', dtype=torch.float64)
tensor([-26.0440, -40.6590, -18.6565, -39.0503, -25.4533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7284, device='cuda:0', dtype=torch.float64)
tensor([-26.0600, -40.8105, -18.7647, -39.1954, -25.2540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6676, device='cuda:0', dtype=torch.float64)
tensor([-26.0724, -40.9668, -18.9028, -39.2712, -25.0640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7730, device='cuda:0', dtype=torch.float64)
tensor([-26.1229, -41.1291, -19.1153, -39.3425, -24.7129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6868, device='cuda:0', dtype=torch.float64)
tensor([-26.1963, -41.2432, -19.3676, -39.2971, -24.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8616, device='cuda:0', dtype=torch.float64)
tensor([-26.2251, -41.3769, -19.5549, -39.3938, -24.0328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7364, device='cuda:0', dtype=torch.float64)
tensor([-26.2206, -41.5755, -19.7291, -39.6345, -23.8321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6730, device='cuda:0', dtype=torch.float64)
tensor([-26.0707, -41.8502, -19.8893, -39.8351, -23.6506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7448, device='cuda:0', dtype=torch.float64)
tensor([-25.9644, -42.0146, -20.0160, -39.9043, -23.5324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7322, device='cuda:0', dtype=torch.float64)
tensor([-25.9086, -42.1869, -20.0713, -40.0485, -23.4673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7519, device='cuda:0', dtype=torch.float64)
tensor([-25.8127, -42.2421, -20.0931, -39.9317, -23.4497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8527, device='cuda:0', dtype=torch.float64)
tensor([-25.6384, -42.4932, -20.1589, -40.0029, -23.4180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6803, device='cuda:0', dtype=torch.float64)
tensor([-25.6034, -42.7832, -20.2364, -40.1976, -23.4123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7421, device='cuda:0', dtype=torch.float64)
tensor([-25.6121, -43.2765, -20.4107, -40.7183, -23.4718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7271, device='cuda:0', dtype=torch.float64)
tensor([-25.7309, -43.6351, -20.5450, -41.1697, -23.5268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8202, device='cuda:0', dtype=torch.float64)
tensor([-25.9126, -44.0006, -20.6513, -41.5800, -23.5103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7337, device='cuda:0', dtype=torch.float64)
tensor([-26.0523, -44.4241, -20.8518, -42.0002, -23.4715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7314, device='cuda:0', dtype=torch.float64)
tensor([-26.1387, -44.8471, -21.0322, -42.3385, -23.4609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7153, device='cuda:0', dtype=torch.float64)
tensor([-26.3375, -45.2841, -21.3162, -42.6405, -23.4842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7955, device='cuda:0', dtype=torch.float64)
tensor([-26.5489, -45.8321, -21.6943, -43.0062, -23.5335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5937, device='cuda:0', dtype=torch.float64)
tensor([-26.8030, -46.4127, -22.0220, -43.3612, -23.5759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7853, device='cuda:0', dtype=torch.float64)
tensor([-26.9629, -46.7721, -22.1610, -43.4297, -23.5836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6742, device='cuda:0', dtype=torch.float64)
tensor([-27.1212, -47.0147, -22.2827, -43.1931, -23.5663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6496, device='cuda:0', dtype=torch.float64)
tensor([-27.3544, -47.3178, -22.5374, -43.1711, -23.6187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8653, device='cuda:0', dtype=torch.float64)
tensor([-27.6222, -47.6038, -22.6796, -43.4672, -23.8211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8203, device='cuda:0', dtype=torch.float64)
tensor([-28.0197, -47.8577, -22.9493, -43.9415, -24.0416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7955, device='cuda:0', dtype=torch.float64)
tensor([-28.3091, -47.9690, -23.2346, -44.1549, -24.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8196, device='cuda:0', dtype=torch.float64)
tensor([-28.6020, -48.1361, -23.6686, -44.5184, -24.4092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6849, device='cuda:0', dtype=torch.float64)
tensor([-28.8026, -48.4079, -24.0040, -45.1476, -24.6414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7706, device='cuda:0', dtype=torch.float64)
tensor([-28.9955, -48.7699, -24.3173, -45.8245, -24.9648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7307, device='cuda:0', dtype=torch.float64)
tensor([-29.0664, -49.2378, -24.6289, -46.4990, -25.1763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6134, device='cuda:0', dtype=torch.float64)
tensor([-29.1053, -49.6642, -24.8802, -47.1407, -25.4223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6918, device='cuda:0', dtype=torch.float64)
tensor([-28.9570, -50.0198, -24.8943, -47.6246, -25.7086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7222, device='cuda:0', dtype=torch.float64)
tensor([-28.6516, -50.2586, -24.8364, -47.8109, -25.9984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7358, device='cuda:0', dtype=torch.float64)
tensor([-28.3847, -50.5201, -24.8606, -48.0848, -26.1805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7350, device='cuda:0', dtype=torch.float64)
tensor([-28.1450, -50.7444, -24.8150, -48.1300, -26.3877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7723, device='cuda:0', dtype=torch.float64)
tensor([-27.9330, -51.1182, -24.9038, -48.2866, -26.5467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6430, device='cuda:0', dtype=torch.float64)
tensor([-27.6826, -51.3722, -25.0004, -48.2481, -26.5973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7150, device='cuda:0', dtype=torch.float64)
tensor([-27.2935, -51.6722, -25.0299, -47.9750, -26.5861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7301, device='cuda:0', dtype=torch.float64)
tensor([-27.0286, -51.8542, -25.0485, -47.5006, -26.5236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7113, device='cuda:0', dtype=torch.float64)
tensor([-26.7614, -51.9736, -24.8953, -47.0712, -26.5030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6505, device='cuda:0', dtype=torch.float64)
tensor([-26.4758, -52.0940, -24.6805, -46.5495, -26.5133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6601, device='cuda:0', dtype=torch.float64)
tensor([-26.1721, -52.2740, -24.2883, -46.1929, -26.5735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6632, device='cuda:0', dtype=torch.float64)
tensor([-25.9321, -52.3923, -24.0557, -45.7212, -26.5117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6979, device='cuda:0', dtype=torch.float64)
tensor([-25.7789, -52.1956, -23.6879, -44.9923, -26.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6011, device='cuda:0', dtype=torch.float64)
tensor([-25.6300, -52.0512, -23.3585, -44.2459, -26.3376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7580, device='cuda:0', dtype=torch.float64)
tensor([-25.5166, -51.7712, -23.0685, -43.3813, -26.2879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5717, device='cuda:0', dtype=torch.float64)
tensor([-25.3720, -51.5012, -22.8395, -42.5419, -26.2475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7300, device='cuda:0', dtype=torch.float64)
tensor([-25.2297, -51.1647, -22.6587, -41.6368, -26.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6826, device='cuda:0', dtype=torch.float64)
tensor([-25.1412, -50.9724, -22.5910, -40.9871, -26.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6282, device='cuda:0', dtype=torch.float64)
tensor([-25.1572, -50.8183, -22.5757, -40.3555, -26.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7013, device='cuda:0', dtype=torch.float64)
tensor([-25.2707, -50.6578, -22.5532, -39.8044, -26.0666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6929, device='cuda:0', dtype=torch.float64)
tensor([-25.2924, -50.5191, -22.6077, -39.1312, -25.9972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5959, device='cuda:0', dtype=torch.float64)
tensor([-25.3148, -50.2938, -22.6716, -38.5118, -25.9041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7286, device='cuda:0', dtype=torch.float64)
tensor([-25.2840, -50.0423, -22.7236, -37.8863, -25.8249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6001, device='cuda:0', dtype=torch.float64)
tensor([-25.2235, -49.8708, -22.6592, -37.4502, -25.8082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6622, device='cuda:0', dtype=torch.float64)
tensor([-25.2548, -49.7991, -22.7980, -37.0445, -25.7820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7636, device='cuda:0', dtype=torch.float64)
tensor([-25.3691, -49.8145, -22.9300, -36.7473, -25.7974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6391, device='cuda:0', dtype=torch.float64)
tensor([-25.5077, -49.8464, -22.9463, -36.5218, -25.9163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8387, device='cuda:0', dtype=torch.float64)
tensor([-25.6675, -50.0375, -23.0236, -36.5090, -25.8975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5557, device='cuda:0', dtype=torch.float64)
tensor([-25.8585, -50.2763, -23.0375, -36.5937, -25.9660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6836, device='cuda:0', dtype=torch.float64)
tensor([-26.0975, -50.3975, -23.0029, -36.6691, -26.1475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6533, device='cuda:0', dtype=torch.float64)
tensor([-26.3120, -50.6378, -23.0554, -36.7693, -26.2592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6743, device='cuda:0', dtype=torch.float64)
tensor([-26.3926, -50.8135, -23.1805, -36.7508, -26.2581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7635, device='cuda:0', dtype=torch.float64)
tensor([-26.4895, -51.0415, -23.2317, -36.8016, -26.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5960, device='cuda:0', dtype=torch.float64)
tensor([-26.5666, -51.1128, -23.1850, -36.7786, -26.1312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6509, device='cuda:0', dtype=torch.float64)
tensor([-26.5248, -51.1218, -23.1034, -36.8535, -26.0173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5644, device='cuda:0', dtype=torch.float64)
tensor([-26.4736, -51.1931, -22.9876, -36.9282, -25.9951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6164, device='cuda:0', dtype=torch.float64)
tensor([-26.4239, -51.3117, -22.9012, -36.9558, -25.9795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6044, device='cuda:0', dtype=torch.float64)
tensor([-26.2138, -51.1256, -22.8063, -36.6907, -25.8662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5953, device='cuda:0', dtype=torch.float64)
tensor([-25.9978, -50.9759, -22.7866, -36.4414, -25.7031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6408, device='cuda:0', dtype=torch.float64)
tensor([-25.7438, -50.8681, -22.8069, -36.1104, -25.6168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6540, device='cuda:0', dtype=torch.float64)
tensor([-25.6324, -51.0084, -22.9535, -36.0148, -25.6484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5682, device='cuda:0', dtype=torch.float64)
tensor([-25.4768, -51.0895, -23.1597, -35.8574, -25.5644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6372, device='cuda:0', dtype=torch.float64)
tensor([-25.3314, -51.1781, -23.4063, -35.8642, -25.5652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7197, device='cuda:0', dtype=torch.float64)
tensor([-25.3122, -51.2505, -23.6320, -35.9171, -25.6590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6843, device='cuda:0', dtype=torch.float64)
tensor([-25.2644, -51.2950, -23.8901, -35.9102, -25.7183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6373, device='cuda:0', dtype=torch.float64)
tensor([-25.0965, -51.3334, -24.0490, -35.9810, -25.7127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6872, device='cuda:0', dtype=torch.float64)
tensor([-24.8177, -51.2428, -24.0741, -35.9698, -25.7425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7383, device='cuda:0', dtype=torch.float64)
tensor([-24.4870, -51.2578, -24.3010, -35.9702, -25.7142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6254, device='cuda:0', dtype=torch.float64)
tensor([-24.1496, -51.3249, -24.5776, -36.0739, -25.5833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5604, device='cuda:0', dtype=torch.float64)
tensor([-23.7751, -51.3264, -24.8699, -36.0364, -25.4680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7657, device='cuda:0', dtype=torch.float64)
tensor([-23.4863, -51.2962, -25.2147, -35.9334, -25.3171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5605, device='cuda:0', dtype=torch.float64)
tensor([-23.2082, -51.2262, -25.4858, -35.9146, -25.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7382, device='cuda:0', dtype=torch.float64)
tensor([-23.0098, -51.1678, -25.8596, -35.9422, -25.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5671, device='cuda:0', dtype=torch.float64)
tensor([-22.8500, -51.1079, -26.2793, -35.8255, -25.2018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6441, device='cuda:0', dtype=torch.float64)
tensor([-22.7675, -50.8881, -26.5771, -35.6843, -25.2092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6413, device='cuda:0', dtype=torch.float64)
tensor([-22.7404, -50.8354, -27.0275, -35.7479, -25.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6768, device='cuda:0', dtype=torch.float64)
tensor([-22.8349, -50.9384, -27.5224, -36.0507, -25.2393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5919, device='cuda:0', dtype=torch.float64)
tensor([-22.9893, -50.8837, -27.9839, -36.0972, -25.3742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6468, device='cuda:0', dtype=torch.float64)
tensor([-23.2007, -50.5345, -28.3562, -35.8335, -25.4497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6138, device='cuda:0', dtype=torch.float64)
tensor([-23.5054, -50.2740, -28.6710, -35.5690, -25.5030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5550, device='cuda:0', dtype=torch.float64)
tensor([-23.8294, -50.0215, -29.0482, -35.3042, -25.6009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5588, device='cuda:0', dtype=torch.float64)
tensor([-24.1755, -49.8123, -29.2997, -35.1896, -25.7050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5666, device='cuda:0', dtype=torch.float64)
tensor([-24.5823, -49.5427, -29.4142, -35.1941, -25.7791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7177, device='cuda:0', dtype=torch.float64)
tensor([-24.8077, -49.3481, -29.4654, -35.2270, -25.7651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6173, device='cuda:0', dtype=torch.float64)
tensor([-24.9598, -49.2965, -29.6433, -35.3254, -25.6991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4985, device='cuda:0', dtype=torch.float64)
tensor([-25.0691, -49.2489, -29.7250, -35.3777, -25.6930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6247, device='cuda:0', dtype=torch.float64)
tensor([-25.1248, -49.3348, -29.6979, -35.4765, -25.7163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6232, device='cuda:0', dtype=torch.float64)
tensor([-25.1553, -49.4392, -29.5837, -35.5226, -25.7099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6456, device='cuda:0', dtype=torch.float64)
tensor([-25.1814, -49.3545, -29.4214, -35.5468, -25.6603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5080, device='cuda:0', dtype=torch.float64)
tensor([-25.2789, -49.3099, -29.3011, -35.6192, -25.6386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6121, device='cuda:0', dtype=torch.float64)
tensor([-25.5330, -49.4797, -29.2678, -35.8412, -25.6371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5167, device='cuda:0', dtype=torch.float64)
tensor([-25.7934, -49.5463, -29.1810, -35.9914, -25.6445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5872, device='cuda:0', dtype=torch.float64)
tensor([-25.9877, -49.5905, -29.0907, -36.0308, -25.6546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5874, device='cuda:0', dtype=torch.float64)
tensor([-26.1541, -49.7055, -29.0481, -36.1316, -25.6360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5915, device='cuda:0', dtype=torch.float64)
tensor([-26.2314, -49.6760, -28.8318, -36.1691, -25.6396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6694, device='cuda:0', dtype=torch.float64)
tensor([-26.2367, -49.7747, -28.6973, -36.2040, -25.6541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6127, device='cuda:0', dtype=torch.float64)
tensor([-26.1659, -49.8121, -28.5420, -36.2036, -25.6975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5996, device='cuda:0', dtype=torch.float64)
tensor([-26.2038, -49.8011, -28.3169, -36.1822, -25.7527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5436, device='cuda:0', dtype=torch.float64)
tensor([-26.2568, -49.8248, -28.0878, -36.2246, -25.8434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6101, device='cuda:0', dtype=torch.float64)
tensor([-26.2100, -49.7263, -27.7412, -36.1384, -25.9030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5904, device='cuda:0', dtype=torch.float64)
tensor([-26.1037, -49.6223, -27.3284, -36.0838, -26.0289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5355, device='cuda:0', dtype=torch.float64)
tensor([-25.9084, -49.5395, -26.9013, -36.0846, -26.1200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6239, device='cuda:0', dtype=torch.float64)
tensor([-25.7922, -49.5667, -26.5827, -36.2709, -26.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6204, device='cuda:0', dtype=torch.float64)
tensor([-25.7103, -49.4864, -26.1692, -36.4300, -26.3755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5475, device='cuda:0', dtype=torch.float64)
tensor([-25.6519, -49.3961, -25.7564, -36.3781, -26.5289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6482, device='cuda:0', dtype=torch.float64)
tensor([-25.5729, -49.2881, -25.3093, -36.2273, -26.6961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5157, device='cuda:0', dtype=torch.float64)
tensor([-25.4462, -49.0297, -24.7815, -36.0958, -26.8361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5174, device='cuda:0', dtype=torch.float64)
tensor([-25.3580, -48.7888, -24.3426, -36.0002, -26.9476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5615, device='cuda:0', dtype=torch.float64)
tensor([-25.2675, -48.4802, -23.7244, -35.8963, -27.0286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6431, device='cuda:0', dtype=torch.float64)
tensor([-25.1779, -48.2628, -23.2007, -35.8298, -27.0648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5789, device='cuda:0', dtype=torch.float64)
tensor([-25.2221, -48.2476, -22.7834, -35.7711, -27.0835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5448, device='cuda:0', dtype=torch.float64)
tensor([-25.2943, -48.1903, -22.4588, -35.7001, -27.1218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5601, device='cuda:0', dtype=torch.float64)
tensor([-25.2585, -48.1890, -22.1521, -35.4983, -27.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5370, device='cuda:0', dtype=torch.float64)
tensor([-25.2656, -48.3640, -21.9345, -35.4286, -27.1737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5382, device='cuda:0', dtype=torch.float64)
tensor([-25.2165, -48.5262, -21.6710, -35.3154, -27.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5754, device='cuda:0', dtype=torch.float64)
tensor([-25.1498, -48.7143, -21.3568, -35.1937, -27.2395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6084, device='cuda:0', dtype=torch.float64)
tensor([-25.1041, -48.8552, -21.1298, -35.0725, -27.2658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5591, device='cuda:0', dtype=torch.float64)
tensor([-25.0698, -48.9985, -20.9506, -35.0486, -27.3739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5086, device='cuda:0', dtype=torch.float64)
tensor([-25.0855, -49.1110, -20.8213, -34.8979, -27.4880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5000, device='cuda:0', dtype=torch.float64)
tensor([-25.1052, -49.1588, -20.6542, -34.8137, -27.6385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5066, device='cuda:0', dtype=torch.float64)
tensor([-25.0793, -49.0535, -20.4202, -34.6173, -27.7752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5452, device='cuda:0', dtype=torch.float64)
tensor([-25.0769, -48.9157, -20.2134, -34.3576, -27.8168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4916, device='cuda:0', dtype=torch.float64)
tensor([-25.0372, -48.6173, -19.9774, -34.0811, -27.8731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4600, device='cuda:0', dtype=torch.float64)
tensor([-24.9973, -48.3784, -19.8885, -33.9126, -27.8955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6069, device='cuda:0', dtype=torch.float64)
tensor([-25.0826, -48.2361, -19.7977, -33.9200, -27.9504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4691, device='cuda:0', dtype=torch.float64)
tensor([-25.2403, -48.1514, -19.8034, -33.9804, -27.9173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4973, device='cuda:0', dtype=torch.float64)
tensor([-25.4874, -47.9985, -19.8531, -34.0385, -27.8483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5733, device='cuda:0', dtype=torch.float64)
tensor([-25.7012, -47.9547, -19.9339, -34.1781, -27.8553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5568, device='cuda:0', dtype=torch.float64)
tensor([-25.8730, -47.7187, -19.9608, -34.2492, -27.8253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4737, device='cuda:0', dtype=torch.float64)
tensor([-25.9665, -47.4007, -19.9430, -34.2912, -27.8925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4766, device='cuda:0', dtype=torch.float64)
tensor([-26.0942, -47.0577, -19.8966, -34.3211, -28.0052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5069, device='cuda:0', dtype=torch.float64)
tensor([-26.1744, -46.5792, -19.7430, -34.2427, -28.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4879, device='cuda:0', dtype=torch.float64)
tensor([-26.1759, -46.2295, -19.6249, -34.1299, -28.1949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4799, device='cuda:0', dtype=torch.float64)
tensor([-26.2469, -45.9093, -19.5508, -34.0567, -28.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5300, device='cuda:0', dtype=torch.float64)
tensor([-26.3322, -45.6838, -19.5899, -34.0374, -28.2602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6229, device='cuda:0', dtype=torch.float64)
tensor([-26.4420, -45.3934, -19.5721, -33.9934, -28.2030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5953, device='cuda:0', dtype=torch.float64)
tensor([-26.3852, -45.0722, -19.4781, -33.8353, -28.0325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5780, device='cuda:0', dtype=torch.float64)
tensor([-26.4341, -44.7709, -19.3494, -33.7440, -27.9694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4922, device='cuda:0', dtype=torch.float64)
tensor([-26.4526, -44.5275, -19.2663, -33.7287, -27.9232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5034, device='cuda:0', dtype=torch.float64)
tensor([-26.4014, -44.4060, -19.2446, -33.7914, -27.9155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4607, device='cuda:0', dtype=torch.float64)
tensor([-26.3459, -44.2971, -19.2848, -33.8303, -27.8916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4343, device='cuda:0', dtype=torch.float64)
tensor([-26.3056, -44.3427, -19.3551, -34.0100, -27.8982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4904, device='cuda:0', dtype=torch.float64)
tensor([-26.2147, -44.3693, -19.3575, -34.0293, -28.0015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5235, device='cuda:0', dtype=torch.float64)
tensor([-26.1019, -44.1949, -19.3045, -33.9617, -28.2411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4605, device='cuda:0', dtype=torch.float64)
tensor([-26.0222, -43.9780, -19.2045, -33.7898, -28.4579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4909, device='cuda:0', dtype=torch.float64)
tensor([-25.9536, -43.7574, -19.0902, -33.6027, -28.5898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4688, device='cuda:0', dtype=torch.float64)
tensor([-25.9581, -43.6213, -19.0442, -33.4422, -28.7348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5144, device='cuda:0', dtype=torch.float64)
tensor([-25.9492, -43.4776, -18.8991, -33.3936, -28.9933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5202, device='cuda:0', dtype=torch.float64)
tensor([-25.8724, -43.3015, -18.8200, -33.4164, -29.1995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4183, device='cuda:0', dtype=torch.float64)
tensor([-25.8450, -43.0755, -18.7515, -33.3617, -29.2580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4861, device='cuda:0', dtype=torch.float64)
tensor([-25.8792, -43.0269, -18.7541, -33.4876, -29.2581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4298, device='cuda:0', dtype=torch.float64)
tensor([-25.8840, -42.8957, -18.6809, -33.5233, -29.3031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3917, device='cuda:0', dtype=torch.float64)
tensor([-25.8665, -42.7820, -18.6242, -33.5288, -29.3252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3656, device='cuda:0', dtype=torch.float64)
tensor([-25.8343, -42.6539, -18.5218, -33.5585, -29.3546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4432, device='cuda:0', dtype=torch.float64)
tensor([-25.8297, -42.5890, -18.3696, -33.7113, -29.4172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4832, device='cuda:0', dtype=torch.float64)
tensor([-25.8389, -42.6256, -18.3010, -33.8956, -29.4642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4504, device='cuda:0', dtype=torch.float64)
tensor([-25.8449, -42.6368, -18.1627, -34.0201, -29.5632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4423, device='cuda:0', dtype=torch.float64)
tensor([-25.7919, -42.6856, -18.1053, -34.0964, -29.5625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4937, device='cuda:0', dtype=torch.float64)
tensor([-25.7148, -42.8852, -18.0727, -34.2267, -29.5436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4465, device='cuda:0', dtype=torch.float64)
tensor([-25.6535, -43.0893, -18.0334, -34.3459, -29.5495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4328, device='cuda:0', dtype=torch.float64)
tensor([-25.5852, -43.2824, -17.9499, -34.4573, -29.5093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4094, device='cuda:0', dtype=torch.float64)
tensor([-25.5175, -43.3527, -17.8265, -34.5564, -29.5072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4042, device='cuda:0', dtype=torch.float64)
tensor([-25.3974, -43.3427, -17.6322, -34.5885, -29.4957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4238, device='cuda:0', dtype=torch.float64)
tensor([-25.3123, -43.4329, -17.5042, -34.5955, -29.4215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4161, device='cuda:0', dtype=torch.float64)
tensor([-25.2548, -43.4676, -17.3694, -34.5106, -29.2945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4154, device='cuda:0', dtype=torch.float64)
tensor([-25.1806, -43.5187, -17.3149, -34.4308, -29.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3859, device='cuda:0', dtype=torch.float64)
tensor([-25.1434, -43.5234, -17.2716, -34.3578, -29.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4412, device='cuda:0', dtype=torch.float64)
tensor([-25.0545, -43.5729, -17.2175, -34.2337, -29.2575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4788, device='cuda:0', dtype=torch.float64)
tensor([-24.9841, -43.5148, -17.1542, -34.0750, -29.2581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4600, device='cuda:0', dtype=torch.float64)
tensor([-24.9062, -43.4106, -17.1035, -33.8830, -29.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4916, device='cuda:0', dtype=torch.float64)
tensor([-24.7793, -43.2207, -17.0174, -33.5657, -29.1283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3500, device='cuda:0', dtype=torch.float64)
tensor([-24.6795, -43.1358, -16.9132, -33.3374, -29.0314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4525, device='cuda:0', dtype=torch.float64)
tensor([-24.5378, -43.1076, -16.8320, -33.0854, -28.8907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3928, device='cuda:0', dtype=torch.float64)
tensor([-24.4169, -42.9693, -16.7433, -32.7821, -28.7733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4602, device='cuda:0', dtype=torch.float64)
tensor([-24.3448, -42.9152, -16.6777, -32.5733, -28.6348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4123, device='cuda:0', dtype=torch.float64)
tensor([-24.2370, -42.8794, -16.6441, -32.4449, -28.5354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4582, device='cuda:0', dtype=torch.float64)
tensor([-24.0987, -42.7334, -16.5752, -32.2924, -28.4608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4142, device='cuda:0', dtype=torch.float64)
tensor([-23.9199, -42.5923, -16.5240, -32.1527, -28.4273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4122, device='cuda:0', dtype=torch.float64)
tensor([-23.7848, -42.4541, -16.4802, -32.0706, -28.3872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3953, device='cuda:0', dtype=torch.float64)
tensor([-23.6491, -42.2316, -16.4009, -31.8110, -28.3681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4573, device='cuda:0', dtype=torch.float64)
tensor([-23.5976, -42.1968, -16.3779, -31.7884, -28.4067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3544, device='cuda:0', dtype=torch.float64)
tensor([-23.5329, -42.0619, -16.3355, -31.6351, -28.4087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4181, device='cuda:0', dtype=torch.float64)
tensor([-23.5093, -41.8886, -16.2978, -31.4940, -28.3903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3710, device='cuda:0', dtype=torch.float64)
tensor([-23.3964, -41.6716, -16.2231, -31.3220, -28.4005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4719, device='cuda:0', dtype=torch.float64)
tensor([-23.2867, -41.5560, -16.1917, -31.2980, -28.4691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4396, device='cuda:0', dtype=torch.float64)
tensor([-23.1526, -41.4119, -16.1279, -31.2038, -28.4129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3298, device='cuda:0', dtype=torch.float64)
tensor([-23.0183, -41.2687, -16.0812, -31.0325, -28.3344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4331, device='cuda:0', dtype=torch.float64)
tensor([-22.8803, -41.1832, -16.0635, -31.0117, -28.3100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3575, device='cuda:0', dtype=torch.float64)
tensor([-22.7181, -41.1398, -16.0431, -30.9434, -28.3169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4190, device='cuda:0', dtype=torch.float64)
tensor([-22.6052, -41.1222, -16.0198, -30.9213, -28.2475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4197, device='cuda:0', dtype=torch.float64)
tensor([-22.4898, -41.1240, -16.0034, -31.0199, -28.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4432, device='cuda:0', dtype=torch.float64)
tensor([-22.3878, -41.0504, -15.9357, -30.9886, -28.3210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3998, device='cuda:0', dtype=torch.float64)
tensor([-22.2605, -40.9345, -15.8431, -30.8803, -28.4032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3980, device='cuda:0', dtype=torch.float64)
tensor([-22.1537, -40.8504, -15.7656, -30.8413, -28.4610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4103, device='cuda:0', dtype=torch.float64)
tensor([-22.0189, -40.6906, -15.6915, -30.6828, -28.4396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3672, device='cuda:0', dtype=torch.float64)
tensor([-21.8494, -40.4588, -15.5947, -30.3558, -28.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3899, device='cuda:0', dtype=torch.float64)
tensor([-21.7009, -40.2840, -15.5230, -30.1529, -28.2526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3453, device='cuda:0', dtype=torch.float64)
tensor([-21.5383, -40.1052, -15.4568, -29.9321, -28.1387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3330, device='cuda:0', dtype=torch.float64)
tensor([-21.4391, -39.9490, -15.4036, -29.7105, -28.0382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3690, device='cuda:0', dtype=torch.float64)
tensor([-21.3308, -39.7792, -15.3435, -29.5324, -27.8929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4124, device='cuda:0', dtype=torch.float64)
tensor([-21.2506, -39.6485, -15.2827, -29.4310, -27.8060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4242, device='cuda:0', dtype=torch.float64)
tensor([-21.1061, -39.4770, -15.2265, -29.2825, -27.7700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3312, device='cuda:0', dtype=torch.float64)
tensor([-20.9085, -39.3383, -15.2061, -29.0663, -27.6480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3416, device='cuda:0', dtype=torch.float64)
tensor([-20.7356, -39.2689, -15.1621, -28.9139, -27.4462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3761, device='cuda:0', dtype=torch.float64)
tensor([-20.6004, -39.2303, -15.1167, -28.8137, -27.2046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4224, device='cuda:0', dtype=torch.float64)
tensor([-20.4089, -39.2670, -15.0991, -28.7312, -26.9768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3519, device='cuda:0', dtype=torch.float64)
tensor([-20.1958, -39.3559, -15.0997, -28.7082, -26.7805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3592, device='cuda:0', dtype=torch.float64)
tensor([-19.9958, -39.3714, -15.1055, -28.6820, -26.6199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3248, device='cuda:0', dtype=torch.float64)
tensor([-19.8381, -39.4215, -15.1154, -28.6931, -26.4955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3880, device='cuda:0', dtype=torch.float64)
tensor([-19.7471, -39.4149, -15.0849, -28.6692, -26.3679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3340, device='cuda:0', dtype=torch.float64)
tensor([-19.6941, -39.4616, -15.0344, -28.6767, -26.2758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3931, device='cuda:0', dtype=torch.float64)
tensor([-19.6466, -39.5592, -15.0023, -28.7167, -26.2130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3571, device='cuda:0', dtype=torch.float64)
tensor([-19.6353, -39.7175, -14.9626, -28.7471, -26.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3706, device='cuda:0', dtype=torch.float64)
tensor([-19.5948, -39.8343, -14.9309, -28.7724, -26.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3119, device='cuda:0', dtype=torch.float64)
tensor([-19.4948, -39.8721, -14.9074, -28.7917, -26.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3055, device='cuda:0', dtype=torch.float64)
tensor([-19.3851, -39.9493, -14.9109, -28.8477, -26.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4540, device='cuda:0', dtype=torch.float64)
tensor([-19.2692, -39.9547, -14.9143, -28.8314, -26.2748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3477, device='cuda:0', dtype=torch.float64)
tensor([-19.1284, -39.9833, -14.9292, -28.8020, -26.3588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3373, device='cuda:0', dtype=torch.float64)
tensor([-18.9802, -40.0191, -14.9539, -28.7599, -26.4471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2901, device='cuda:0', dtype=torch.float64)
tensor([-18.8416, -40.0571, -14.9879, -28.6820, -26.5480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3092, device='cuda:0', dtype=torch.float64)
tensor([-18.6927, -40.0637, -15.0115, -28.5912, -26.6440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3913, device='cuda:0', dtype=torch.float64)
tensor([-18.5377, -40.0237, -15.0050, -28.4955, -26.7101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3650, device='cuda:0', dtype=torch.float64)
tensor([-18.3662, -39.9789, -15.0211, -28.4265, -26.8140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3463, device='cuda:0', dtype=torch.float64)
tensor([-18.2646, -39.9200, -15.0074, -28.3653, -26.8911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2989, device='cuda:0', dtype=torch.float64)
tensor([-18.1589, -39.8614, -15.0099, -28.3282, -27.0172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3093, device='cuda:0', dtype=torch.float64)
tensor([-18.0853, -39.8143, -14.9967, -28.2874, -27.1275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3128, device='cuda:0', dtype=torch.float64)
tensor([-18.0401, -39.7700, -14.9907, -28.2426, -27.2780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3201, device='cuda:0', dtype=torch.float64)
tensor([-18.0286, -39.8159, -14.9596, -28.1919, -27.4099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2975, device='cuda:0', dtype=torch.float64)
tensor([-18.0353, -39.8855, -14.9430, -28.1976, -27.6023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3616, device='cuda:0', dtype=torch.float64)
tensor([-18.0079, -40.0482, -14.9233, -28.2382, -27.7374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3239, device='cuda:0', dtype=torch.float64)
tensor([-18.0111, -40.1631, -14.8652, -28.2024, -27.8144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3496, device='cuda:0', dtype=torch.float64)
tensor([-18.0600, -40.2680, -14.7940, -28.1792, -27.8419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3219, device='cuda:0', dtype=torch.float64)
tensor([-18.0660, -40.3074, -14.7173, -28.0644, -27.8411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2964, device='cuda:0', dtype=torch.float64)
tensor([-18.0653, -40.3488, -14.6195, -27.9040, -27.8341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2872, device='cuda:0', dtype=torch.float64)
tensor([-18.0824, -40.3161, -14.5404, -27.7665, -27.8997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3587, device='cuda:0', dtype=torch.float64)
tensor([-18.1383, -40.2689, -14.4690, -27.6969, -27.9519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2974, device='cuda:0', dtype=torch.float64)
tensor([-18.1709, -40.2247, -14.4081, -27.5977, -28.0027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2759, device='cuda:0', dtype=torch.float64)
tensor([-18.2030, -40.1917, -14.3337, -27.4971, -28.0156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3447, device='cuda:0', dtype=torch.float64)
tensor([-18.2490, -40.2045, -14.2597, -27.4243, -28.0051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2809, device='cuda:0', dtype=torch.float64)
tensor([-18.2934, -40.1942, -14.1877, -27.3728, -28.0317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3831, device='cuda:0', dtype=torch.float64)
tensor([-18.3194, -40.1626, -14.1247, -27.3424, -28.0622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3527, device='cuda:0', dtype=torch.float64)
tensor([-18.3609, -40.1591, -14.0601, -27.3306, -27.9962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3363, device='cuda:0', dtype=torch.float64)
tensor([-18.3926, -40.1474, -14.0058, -27.2910, -27.8604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3202, device='cuda:0', dtype=torch.float64)
tensor([-18.4016, -40.0775, -13.9641, -27.2154, -27.7296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2659, device='cuda:0', dtype=torch.float64)
tensor([-18.3850, -40.0115, -13.9413, -27.1376, -27.5994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3547, device='cuda:0', dtype=torch.float64)
tensor([-18.4254, -40.0044, -13.9161, -27.1287, -27.4613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3339, device='cuda:0', dtype=torch.float64)
tensor([-18.4168, -39.9674, -13.8862, -27.0730, -27.2510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2884, device='cuda:0', dtype=torch.float64)
tensor([-18.4265, -39.9628, -13.8556, -27.0558, -27.0561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3721, device='cuda:0', dtype=torch.float64)
tensor([-18.3721, -39.8919, -13.8549, -27.0044, -26.9576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3497, device='cuda:0', dtype=torch.float64)
tensor([-18.3168, -39.7876, -13.8659, -26.8956, -26.8339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3480, device='cuda:0', dtype=torch.float64)
tensor([-18.3127, -39.6516, -13.8567, -26.8380, -26.7000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3080, device='cuda:0', dtype=torch.float64)
tensor([-18.3128, -39.5030, -13.8602, -26.7880, -26.5871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3470, device='cuda:0', dtype=torch.float64)
tensor([-18.3661, -39.3794, -13.8628, -26.8151, -26.5160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3076, device='cuda:0', dtype=torch.float64)
tensor([-18.4463, -39.2069, -13.8764, -26.8455, -26.5550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2785, device='cuda:0', dtype=torch.float64)
tensor([-18.5477, -39.1161, -13.8825, -26.9452, -26.5930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2876, device='cuda:0', dtype=torch.float64)
tensor([-18.6369, -39.0233, -13.9040, -27.0318, -26.6153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3086, device='cuda:0', dtype=torch.float64)
tensor([-18.7106, -38.9146, -13.9252, -27.1649, -26.6112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2793, device='cuda:0', dtype=torch.float64)
tensor([-18.7394, -38.8488, -13.9513, -27.2625, -26.6148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2730, device='cuda:0', dtype=torch.float64)
tensor([-18.7789, -38.8160, -13.9728, -27.3667, -26.6465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2654, device='cuda:0', dtype=torch.float64)
tensor([-18.7850, -38.8071, -13.9966, -27.4643, -26.7064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2724, device='cuda:0', dtype=torch.float64)
tensor([-18.7956, -38.8137, -14.0182, -27.5277, -26.7611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3009, device='cuda:0', dtype=torch.float64)
tensor([-18.7625, -38.8089, -14.0611, -27.5905, -26.8405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2876, device='cuda:0', dtype=torch.float64)
tensor([-18.7121, -38.8326, -14.1142, -27.6488, -26.9453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2723, device='cuda:0', dtype=torch.float64)
tensor([-18.6754, -38.8478, -14.1822, -27.7002, -27.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2873, device='cuda:0', dtype=torch.float64)
tensor([-18.5938, -38.8382, -14.2490, -27.7000, -27.2140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2970, device='cuda:0', dtype=torch.float64)
tensor([-18.4942, -38.7492, -14.3376, -27.6453, -27.3131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2781, device='cuda:0', dtype=torch.float64)
tensor([-18.4382, -38.6874, -14.4044, -27.6667, -27.3901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2907, device='cuda:0', dtype=torch.float64)
tensor([-18.3814, -38.6156, -14.4563, -27.6262, -27.4247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3258, device='cuda:0', dtype=torch.float64)
tensor([-18.3407, -38.5611, -14.5125, -27.5785, -27.4060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2843, device='cuda:0', dtype=torch.float64)
tensor([-18.3080, -38.5000, -14.5605, -27.5301, -27.3681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3072, device='cuda:0', dtype=torch.float64)
tensor([-18.2587, -38.4392, -14.6184, -27.5440, -27.4096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3001, device='cuda:0', dtype=torch.float64)
tensor([-18.2093, -38.3956, -14.6762, -27.5914, -27.4707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2835, device='cuda:0', dtype=torch.float64)
tensor([-18.1321, -38.3918, -14.7452, -27.6545, -27.5509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2568, device='cuda:0', dtype=torch.float64)
tensor([-18.0460, -38.3890, -14.8143, -27.7330, -27.6143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2449, device='cuda:0', dtype=torch.float64)
tensor([-17.9259, -38.3539, -14.8842, -27.7634, -27.6160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2864, device='cuda:0', dtype=torch.float64)
tensor([-17.8498, -38.3262, -14.9216, -27.8094, -27.6167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2594, device='cuda:0', dtype=torch.float64)
tensor([-17.7707, -38.2515, -14.9360, -27.8161, -27.5725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2745, device='cuda:0', dtype=torch.float64)
tensor([-17.7021, -38.2200, -14.9451, -27.8732, -27.5342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2585, device='cuda:0', dtype=torch.float64)
tensor([-17.6435, -38.1840, -14.9364, -27.8842, -27.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2769, device='cuda:0', dtype=torch.float64)
tensor([-17.5876, -38.2225, -14.9318, -27.9598, -27.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2547, device='cuda:0', dtype=torch.float64)
tensor([-17.5219, -38.1917, -14.9213, -27.9879, -27.2652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3357, device='cuda:0', dtype=torch.float64)
tensor([-17.4152, -38.1051, -14.9133, -27.9287, -27.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3134, device='cuda:0', dtype=torch.float64)
tensor([-17.2931, -37.9831, -14.9063, -27.8641, -27.0508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2847, device='cuda:0', dtype=torch.float64)
tensor([-17.2195, -37.8516, -14.8586, -27.7946, -26.8992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2177, device='cuda:0', dtype=torch.float64)
tensor([-17.1258, -37.7733, -14.8319, -27.7725, -26.7892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2373, device='cuda:0', dtype=torch.float64)
tensor([-17.0391, -37.6734, -14.8000, -27.7072, -26.6746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2607, device='cuda:0', dtype=torch.float64)
tensor([-16.9447, -37.5852, -14.7556, -27.6450, -26.5842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2615, device='cuda:0', dtype=torch.float64)
tensor([-16.8601, -37.5034, -14.7238, -27.5553, -26.4471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2451, device='cuda:0', dtype=torch.float64)
tensor([-16.7938, -37.4485, -14.6950, -27.4460, -26.2354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2782, device='cuda:0', dtype=torch.float64)
tensor([-16.7482, -37.4085, -14.6619, -27.3469, -26.0185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2607, device='cuda:0', dtype=torch.float64)
tensor([-16.7255, -37.3262, -14.6200, -27.2270, -25.8279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2522, device='cuda:0', dtype=torch.float64)
tensor([-16.6766, -37.2216, -14.5749, -27.0557, -25.5830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2877, device='cuda:0', dtype=torch.float64)
tensor([-16.6900, -37.1694, -14.5146, -26.9806, -25.3929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2348, device='cuda:0', dtype=torch.float64)
tensor([-16.6868, -37.1239, -14.4515, -26.8919, -25.2478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2827, device='cuda:0', dtype=torch.float64)
tensor([-16.6498, -37.0934, -14.3704, -26.8390, -25.0589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3077, device='cuda:0', dtype=torch.float64)
tensor([-16.6222, -37.1250, -14.3018, -26.7943, -24.8847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2411, device='cuda:0', dtype=torch.float64)
tensor([-16.5896, -37.1672, -14.2364, -26.7990, -24.7803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2588, device='cuda:0', dtype=torch.float64)
tensor([-16.5380, -37.1697, -14.1856, -26.7518, -24.7037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3065, device='cuda:0', dtype=torch.float64)
tensor([-16.4800, -37.1600, -14.1225, -26.6699, -24.6165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2584, device='cuda:0', dtype=torch.float64)
tensor([-16.4102, -37.1432, -14.0761, -26.5879, -24.5483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2528, device='cuda:0', dtype=torch.float64)
tensor([-16.3436, -37.1391, -14.0450, -26.4984, -24.4577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2389, device='cuda:0', dtype=torch.float64)
tensor([-16.2688, -37.1032, -14.0246, -26.4228, -24.3998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2153, device='cuda:0', dtype=torch.float64)
tensor([-16.2166, -37.0237, -14.0093, -26.3886, -24.3412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2303, device='cuda:0', dtype=torch.float64)
tensor([-16.1585, -36.9597, -13.9765, -26.3968, -24.3155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2399, device='cuda:0', dtype=torch.float64)
tensor([-16.1074, -36.9348, -13.9466, -26.3834, -24.2590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2264, device='cuda:0', dtype=torch.float64)
tensor([-16.0553, -36.9189, -13.9150, -26.3785, -24.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2305, device='cuda:0', dtype=torch.float64)
tensor([-15.9874, -36.9267, -13.8834, -26.3681, -24.1158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2193, device='cuda:0', dtype=torch.float64)
tensor([-15.9084, -36.9068, -13.8643, -26.3473, -24.0423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2214, device='cuda:0', dtype=torch.float64)
tensor([-15.8029, -36.8132, -13.8557, -26.2786, -23.9681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2264, device='cuda:0', dtype=torch.float64)
tensor([-15.6726, -36.6838, -13.8674, -26.1742, -23.8813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2793, device='cuda:0', dtype=torch.float64)
tensor([-15.5688, -36.5786, -13.8803, -26.1676, -23.8525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1983, device='cuda:0', dtype=torch.float64)
tensor([-15.4905, -36.4387, -13.9063, -26.1953, -23.8544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2407, device='cuda:0', dtype=torch.float64)
tensor([-15.3905, -36.2979, -13.9322, -26.2489, -23.8906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2376, device='cuda:0', dtype=torch.float64)
tensor([-15.3102, -36.1453, -13.9482, -26.2873, -23.8808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2052, device='cuda:0', dtype=torch.float64)
tensor([-15.2354, -36.0214, -13.9676, -26.2825, -23.8543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2142, device='cuda:0', dtype=torch.float64)
tensor([-15.1684, -35.9257, -13.9901, -26.3014, -23.8609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2113, device='cuda:0', dtype=torch.float64)
tensor([-15.1015, -35.8102, -14.0153, -26.2833, -23.8319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2062, device='cuda:0', dtype=torch.float64)
tensor([-15.0272, -35.7027, -14.0434, -26.2736, -23.8295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2156, device='cuda:0', dtype=torch.float64)
tensor([-14.9580, -35.6198, -14.0744, -26.2788, -23.7839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2439, device='cuda:0', dtype=torch.float64)
tensor([-14.8633, -35.5682, -14.1175, -26.2034, -23.7033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2356, device='cuda:0', dtype=torch.float64)
tensor([-14.7521, -35.5718, -14.1588, -26.1369, -23.6427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2449, device='cuda:0', dtype=torch.float64)
tensor([-14.6627, -35.5524, -14.2035, -26.0806, -23.5970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2234, device='cuda:0', dtype=torch.float64)
tensor([-14.5743, -35.5409, -14.2464, -26.0221, -23.5587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2136, device='cuda:0', dtype=torch.float64)
tensor([-14.4820, -35.5194, -14.2828, -25.9584, -23.5258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1925, device='cuda:0', dtype=torch.float64)
tensor([-14.4073, -35.5076, -14.3241, -25.8957, -23.4626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2518, device='cuda:0', dtype=torch.float64)
tensor([-14.3251, -35.5257, -14.3661, -25.8260, -23.4124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2506, device='cuda:0', dtype=torch.float64)
tensor([-14.2696, -35.5159, -14.3909, -25.7775, -23.3583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3043, device='cuda:0', dtype=torch.float64)
tensor([-14.2367, -35.4717, -14.3985, -25.7597, -23.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2532, device='cuda:0', dtype=torch.float64)
tensor([-14.2115, -35.3983, -14.4084, -25.7389, -23.2076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2522, device='cuda:0', dtype=torch.float64)
tensor([-14.1995, -35.3032, -14.4324, -25.7343, -23.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2470, device='cuda:0', dtype=torch.float64)
tensor([-14.1803, -35.2139, -14.4579, -25.7031, -23.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2103, device='cuda:0', dtype=torch.float64)
tensor([-14.1784, -35.1438, -14.4796, -25.6958, -23.0455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2492, device='cuda:0', dtype=torch.float64)
tensor([-14.1988, -35.0389, -14.4960, -25.7022, -23.0160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2615, device='cuda:0', dtype=torch.float64)
tensor([-14.2263, -34.9804, -14.5313, -25.7535, -23.0444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2084, device='cuda:0', dtype=torch.float64)
tensor([-14.2366, -34.9286, -14.5666, -25.8388, -23.0605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1853, device='cuda:0', dtype=torch.float64)
tensor([-14.2463, -34.8806, -14.5983, -25.8852, -23.0527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2304, device='cuda:0', dtype=torch.float64)
tensor([-14.2343, -34.8304, -14.6254, -25.8893, -23.0690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2275, device='cuda:0', dtype=torch.float64)
tensor([-14.2028, -34.8002, -14.6385, -25.8672, -23.0590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2081, device='cuda:0', dtype=torch.float64)
tensor([-14.1665, -34.7572, -14.6482, -25.8352, -23.0821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2018, device='cuda:0', dtype=torch.float64)
tensor([-14.1360, -34.7011, -14.6519, -25.7803, -23.0752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2979, device='cuda:0', dtype=torch.float64)
tensor([-14.1219, -34.6492, -14.6718, -25.7507, -23.0482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2072, device='cuda:0', dtype=torch.float64)
tensor([-14.1004, -34.6342, -14.6831, -25.7308, -23.0534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1880, device='cuda:0', dtype=torch.float64)
tensor([-14.0872, -34.6059, -14.6883, -25.7040, -23.0765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2427, device='cuda:0', dtype=torch.float64)
tensor([-14.0676, -34.6358, -14.7071, -25.7131, -23.1149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2277, device='cuda:0', dtype=torch.float64)
tensor([-14.0611, -34.7093, -14.7303, -25.7499, -23.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2232, device='cuda:0', dtype=torch.float64)
tensor([-14.0612, -34.7771, -14.7608, -25.7717, -23.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2315, device='cuda:0', dtype=torch.float64)
tensor([-14.0798, -34.8048, -14.7606, -25.7937, -23.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2171, device='cuda:0', dtype=torch.float64)
tensor([-14.0927, -34.8072, -14.7613, -25.8560, -23.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2478, device='cuda:0', dtype=torch.float64)
tensor([-14.1104, -34.8353, -14.7447, -25.9714, -23.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1941, device='cuda:0', dtype=torch.float64)
tensor([-14.1355, -34.8709, -14.7319, -26.0826, -23.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2163, device='cuda:0', dtype=torch.float64)
tensor([-14.1458, -34.9170, -14.7019, -26.1675, -23.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2739, device='cuda:0', dtype=torch.float64)
tensor([-14.1492, -34.9576, -14.6633, -26.2345, -23.0731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2126, device='cuda:0', dtype=torch.float64)
tensor([-14.1396, -34.9605, -14.6343, -26.3047, -22.9836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1824, device='cuda:0', dtype=torch.float64)
tensor([-14.1381, -34.9449, -14.6082, -26.3898, -22.8829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1860, device='cuda:0', dtype=torch.float64)
tensor([-14.1487, -34.9402, -14.5946, -26.4794, -22.7949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1823, device='cuda:0', dtype=torch.float64)
tensor([-14.1484, -34.9103, -14.5928, -26.5353, -22.7208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2156, device='cuda:0', dtype=torch.float64)
tensor([-14.1517, -34.9318, -14.5811, -26.6200, -22.6398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2186, device='cuda:0', dtype=torch.float64)
tensor([-14.1567, -34.9020, -14.5769, -26.6457, -22.6032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2245, device='cuda:0', dtype=torch.float64)
tensor([-14.1663, -34.8866, -14.5547, -26.6718, -22.5581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2259, device='cuda:0', dtype=torch.float64)
tensor([-14.1777, -34.8739, -14.5332, -26.6886, -22.5344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2146, device='cuda:0', dtype=torch.float64)
tensor([-14.1684, -34.8341, -14.5142, -26.6665, -22.5131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1606, device='cuda:0', dtype=torch.float64)
tensor([-14.1796, -34.8034, -14.5166, -26.6699, -22.4958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1867, device='cuda:0', dtype=torch.float64)
tensor([-14.2020, -34.7760, -14.5150, -26.6649, -22.4709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1878, device='cuda:0', dtype=torch.float64)
tensor([-14.2212, -34.7302, -14.5092, -26.6130, -22.4250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2018, device='cuda:0', dtype=torch.float64)
tensor([-14.2315, -34.7119, -14.4863, -26.5637, -22.3766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1930, device='cuda:0', dtype=torch.float64)
tensor([-14.2491, -34.6817, -14.4610, -26.5015, -22.3125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1763, device='cuda:0', dtype=torch.float64)
tensor([-14.2915, -34.6445, -14.4326, -26.3895, -22.2530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2008, device='cuda:0', dtype=torch.float64)
tensor([-14.3009, -34.5948, -14.4307, -26.2881, -22.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1885, device='cuda:0', dtype=torch.float64)
tensor([-14.3067, -34.5508, -14.4207, -26.1958, -22.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1983, device='cuda:0', dtype=torch.float64)
tensor([-14.3142, -34.4882, -14.4150, -26.0759, -22.1554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2093, device='cuda:0', dtype=torch.float64)
tensor([-14.3385, -34.4231, -14.4130, -25.9487, -22.1446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1707, device='cuda:0', dtype=torch.float64)
tensor([-14.3641, -34.3675, -14.4233, -25.8475, -22.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2008, device='cuda:0', dtype=torch.float64)
tensor([-14.3967, -34.2891, -14.4384, -25.7231, -22.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2439, device='cuda:0', dtype=torch.float64)
tensor([-14.4256, -34.2493, -14.4574, -25.5914, -22.1192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2165, device='cuda:0', dtype=torch.float64)
tensor([-14.4549, -34.2428, -14.4828, -25.5003, -22.0542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2307, device='cuda:0', dtype=torch.float64)
tensor([-14.5062, -34.2867, -14.4937, -25.4308, -21.9507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2019, device='cuda:0', dtype=torch.float64)
tensor([-14.5520, -34.3448, -14.5040, -25.3643, -21.8319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2619, device='cuda:0', dtype=torch.float64)
tensor([-14.5775, -34.3980, -14.5137, -25.2514, -21.6770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1938, device='cuda:0', dtype=torch.float64)
tensor([-14.6143, -34.4399, -14.5334, -25.1865, -21.5447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1991, device='cuda:0', dtype=torch.float64)
tensor([-14.6527, -34.4652, -14.5422, -25.1413, -21.4138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1855, device='cuda:0', dtype=torch.float64)
tensor([-14.7135, -34.5077, -14.5471, -25.1361, -21.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1973, device='cuda:0', dtype=torch.float64)
tensor([-14.7660, -34.5650, -14.5528, -25.1227, -21.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2318, device='cuda:0', dtype=torch.float64)
tensor([-14.8377, -34.5837, -14.5461, -25.1553, -21.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2406, device='cuda:0', dtype=torch.float64)
tensor([-14.8916, -34.6184, -14.5257, -25.1738, -20.9896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1906, device='cuda:0', dtype=torch.float64)
tensor([-14.9156, -34.6987, -14.5184, -25.1832, -20.8961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1928, device='cuda:0', dtype=torch.float64)
tensor([-14.9420, -34.7974, -14.5053, -25.1879, -20.7524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1930, device='cuda:0', dtype=torch.float64)
tensor([-14.9783, -34.9089, -14.4955, -25.2419, -20.6656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2220, device='cuda:0', dtype=torch.float64)
tensor([-15.0053, -34.9787, -14.4977, -25.2984, -20.5878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1836, device='cuda:0', dtype=torch.float64)
tensor([-15.0304, -35.0301, -14.5096, -25.2995, -20.5009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1866, device='cuda:0', dtype=torch.float64)
tensor([-15.0808, -35.1055, -14.5096, -25.3440, -20.4384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1918, device='cuda:0', dtype=torch.float64)
tensor([-15.1246, -35.1157, -14.5309, -25.3173, -20.3816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2496, device='cuda:0', dtype=torch.float64)
tensor([-15.1670, -35.1777, -14.5392, -25.3148, -20.3280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1672, device='cuda:0', dtype=torch.float64)
tensor([-15.2038, -35.2214, -14.5382, -25.3399, -20.2700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2095, device='cuda:0', dtype=torch.float64)
tensor([-15.2294, -35.2003, -14.5463, -25.3461, -20.2328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2339, device='cuda:0', dtype=torch.float64)
tensor([-15.2789, -35.2532, -14.5501, -25.3936, -20.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1916, device='cuda:0', dtype=torch.float64)
tensor([-15.3112, -35.3143, -14.5476, -25.4459, -20.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2023, device='cuda:0', dtype=torch.float64)
tensor([-15.3600, -35.4166, -14.5480, -25.5047, -20.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2159, device='cuda:0', dtype=torch.float64)
tensor([-15.4157, -35.5266, -14.5322, -25.6055, -20.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2118, device='cuda:0', dtype=torch.float64)
tensor([-15.5032, -35.6117, -14.5010, -25.6928, -20.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1941, device='cuda:0', dtype=torch.float64)
tensor([-15.5713, -35.6708, -14.4759, -25.7183, -20.0759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1803, device='cuda:0', dtype=torch.float64)
tensor([-15.6568, -35.7673, -14.4526, -25.7551, -19.9983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2087, device='cuda:0', dtype=torch.float64)
tensor([-15.7523, -35.8733, -14.4125, -25.8046, -19.9223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2171, device='cuda:0', dtype=torch.float64)
tensor([-15.8397, -35.9654, -14.3930, -25.8512, -19.8475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2235, device='cuda:0', dtype=torch.float64)
tensor([-15.9356, -36.0331, -14.3830, -25.8530, -19.7834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1982, device='cuda:0', dtype=torch.float64)
tensor([-16.0197, -36.0333, -14.3738, -25.8003, -19.7019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1617, device='cuda:0', dtype=torch.float64)
tensor([-16.1185, -36.0681, -14.3621, -25.7362, -19.6260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1918, device='cuda:0', dtype=torch.float64)
tensor([-16.2000, -36.0770, -14.3542, -25.6658, -19.5668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2091, device='cuda:0', dtype=torch.float64)
tensor([-16.2843, -36.0620, -14.3628, -25.6015, -19.5491], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_024328.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(122.1318, device='cuda:0', dtype=torch.float64)
tensor([ -2.0522, -12.0556,  -6.4120, -10.6852,  -5.4565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(64.8904, device='cuda:0', dtype=torch.float64)
tensor([ -2.9026,  -9.7712,  -6.9833, -11.8774, -16.4483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(116.7066, device='cuda:0', dtype=torch.float64)
tensor([ -3.6190,  -6.6530,  -5.9758, -16.4674, -17.9690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(126.2339, device='cuda:0', dtype=torch.float64)
tensor([ -2.6383,  -5.1778,  -4.5054, -13.1676, -13.4241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(86.5518, device='cuda:0', dtype=torch.float64)
tensor([ -2.5892,  -4.7855,  -3.3335,  -9.7628, -10.5088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.0701, device='cuda:0', dtype=torch.float64)
tensor([-2.4960, -4.9044, -3.0065, -6.3642, -6.3205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(41.9795, device='cuda:0', dtype=torch.float64)
tensor([-2.5199, -5.0459, -2.9380, -6.4049, -4.8120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(50.2243, device='cuda:0', dtype=torch.float64)
tensor([-2.5363, -4.8264, -2.8961, -6.5812, -4.6448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(51.7263, device='cuda:0', dtype=torch.float64)
tensor([-2.5719, -5.4856, -2.9449, -7.9904, -4.4237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(51.8779, device='cuda:0', dtype=torch.float64)
tensor([ -2.5547,  -5.3976,  -3.2070, -12.4946,  -4.2948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.9087, device='cuda:0', dtype=torch.float64)
tensor([ -2.4269,  -4.4054,  -3.5357, -13.5593,  -4.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.5426, device='cuda:0', dtype=torch.float64)
tensor([ -2.2374,  -3.7684,  -3.7804, -10.7725,  -4.7865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.8047, device='cuda:0', dtype=torch.float64)
tensor([-2.0700, -3.3714, -4.3425, -7.2749, -4.7721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.5658, device='cuda:0', dtype=torch.float64)
tensor([-1.9931, -3.1604, -4.4598, -4.4754, -4.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.8775, device='cuda:0', dtype=torch.float64)
tensor([-2.0093, -3.1437, -3.9712, -3.8336, -3.8482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.0464, device='cuda:0', dtype=torch.float64)
tensor([-2.0897, -3.1956, -3.5248, -3.5946, -3.8042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.3036, device='cuda:0', dtype=torch.float64)
tensor([-2.1742, -3.4098, -3.3014, -3.4672, -3.7713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.9915, device='cuda:0', dtype=torch.float64)
tensor([-2.1929, -3.6535, -3.2021, -3.4533, -3.7388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.7082, device='cuda:0', dtype=torch.float64)
tensor([-2.1209, -3.4550, -3.1472, -3.4686, -3.6878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.0784, device='cuda:0', dtype=torch.float64)
tensor([-2.0136, -3.0581, -3.0992, -3.4889, -3.6028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9712, device='cuda:0', dtype=torch.float64)
tensor([-1.9339, -2.8990, -3.0430, -3.5538, -3.5165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8055, device='cuda:0', dtype=torch.float64)
tensor([-1.8951, -2.8916, -2.9818, -3.6057, -3.4623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.2197, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.9245, -2.9268, -3.6474, -3.4529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.1878, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.9796, -2.8863, -3.7342, -3.4726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9803, device='cuda:0', dtype=torch.float64)
tensor([-1.8918, -3.0442, -2.8593, -3.8490, -3.4781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7160, device='cuda:0', dtype=torch.float64)
tensor([-1.9022, -3.0966, -2.8395, -3.8940, -3.4474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7819, device='cuda:0', dtype=torch.float64)
tensor([-1.9042, -3.1072, -2.8255, -3.8386, -3.4152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.8499, device='cuda:0', dtype=torch.float64)
tensor([-1.8760, -3.0667, -2.8172, -3.7413, -3.4033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5003, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -3.0022, -2.8139, -3.6639, -3.4072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3323, device='cuda:0', dtype=torch.float64)
tensor([-1.7867, -2.9410, -2.8152, -3.6215, -3.4264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3770, device='cuda:0', dtype=torch.float64)
tensor([-1.7643, -2.8948, -2.8202, -3.6035, -3.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6493, device='cuda:0', dtype=torch.float64)
tensor([-1.7562, -2.8664, -2.8275, -3.5998, -3.4896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3676, device='cuda:0', dtype=torch.float64)
tensor([-1.7573, -2.8471, -2.8354, -3.6038, -3.5174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6444, device='cuda:0', dtype=torch.float64)
tensor([-1.7642, -2.8226, -2.8417, -3.6054, -3.5309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9724, device='cuda:0', dtype=torch.float64)
tensor([-1.7747, -2.7907, -2.8436, -3.6005, -3.5246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0267, device='cuda:0', dtype=torch.float64)
tensor([-1.7868, -2.7631, -2.8390, -3.5967, -3.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.8835, device='cuda:0', dtype=torch.float64)
tensor([-1.7989, -2.7489, -2.8280, -3.5971, -3.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5401, device='cuda:0', dtype=torch.float64)
tensor([-1.8103, -2.7480, -2.8126, -3.5978, -3.4155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9799, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.7562, -2.7955, -3.5978, -3.3754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3908, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.7706, -2.7767, -3.5949, -3.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9350, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.7887, -2.7545, -3.5846, -3.3042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6968, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.8083, -2.7298, -3.5642, -3.2719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5926, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.8273, -2.7079, -3.5388, -3.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5126, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.8449, -2.6929, -3.5140, -3.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4960, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.8598, -2.6858, -3.4905, -3.2338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4266, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.8716, -2.6853, -3.4669, -3.2380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3009, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.8805, -2.6900, -3.4432, -3.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0904, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.8858, -2.6989, -3.4211, -3.2574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8515, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.8868, -2.7108, -3.4026, -3.2695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6783, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.8830, -2.7248, -3.3896, -3.2822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5873, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.8748, -2.7403, -3.3829, -3.2944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4769, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.8644, -2.7558, -3.3814, -3.3067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3871, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.8539, -2.7701, -3.3839, -3.3186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4050, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.8448, -2.7823, -3.3887, -3.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4050, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.8374, -2.7914, -3.3938, -3.3410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3498, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.8319, -2.7972, -3.3981, -3.3506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2884, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.8276, -2.7998, -3.4006, -3.3579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1863, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.8238, -2.7995, -3.4010, -3.3621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1271, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.8195, -2.7971, -3.3993, -3.3635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0553, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.8148, -2.7934, -3.3957, -3.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9797, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.8096, -2.7892, -3.3910, -3.3619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8566, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.8038, -2.7859, -3.3863, -3.3608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7636, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7973, -2.7844, -3.3821, -3.3600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6994, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.7903, -2.7845, -3.3781, -3.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6024, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.7835, -2.7870, -3.3751, -3.3600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5830, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.7766, -2.7917, -3.3736, -3.3603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5095, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.7699, -2.7984, -3.3730, -3.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4575, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.7638, -2.8059, -3.3730, -3.3613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4953, device='cuda:0', dtype=torch.float64)
tensor([-1.8148, -2.7594, -2.8137, -3.3731, -3.3619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4408, device='cuda:0', dtype=torch.float64)
tensor([-1.8143, -2.7574, -2.8205, -3.3719, -3.3632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4120, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.7580, -2.8258, -3.3692, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3204, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.7614, -2.8291, -3.3642, -3.3685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2936, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.7663, -2.8314, -3.3580, -3.3722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2304, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.7721, -2.8330, -3.3514, -3.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2050, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7780, -2.8339, -3.3456, -3.3800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1715, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.7836, -2.8346, -3.3410, -3.3832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1630, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7883, -2.8353, -3.3373, -3.3854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1887, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.7918, -2.8360, -3.3349, -3.3866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1742, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.7937, -2.8370, -3.3332, -3.3870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0766, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.7952, -2.8377, -3.3322, -3.3865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0823, device='cuda:0', dtype=torch.float64)
tensor([-1.8552, -2.7962, -2.8381, -3.3314, -3.3851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0661, device='cuda:0', dtype=torch.float64)
tensor([-1.8574, -2.7967, -2.8384, -3.3305, -3.3833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0524, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.7967, -2.8385, -3.3297, -3.3814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0402, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.7960, -2.8391, -3.3290, -3.3795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0397, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.7942, -2.8404, -3.3287, -3.3775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0077, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7918, -2.8420, -3.3290, -3.3756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0532, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7893, -2.8438, -3.3291, -3.3736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0118, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.7876, -2.8451, -3.3286, -3.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9587, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.7857, -2.8467, -3.3282, -3.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9672, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.7843, -2.8483, -3.3266, -3.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9332, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.7836, -2.8494, -3.3240, -3.3709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9350, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7831, -2.8507, -3.3220, -3.3714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9172, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7825, -2.8523, -3.3214, -3.3719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8702, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.7818, -2.8538, -3.3217, -3.3725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9417, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.7814, -2.8556, -3.3222, -3.3734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9138, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7823, -2.8562, -3.3224, -3.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9222, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7837, -2.8561, -3.3216, -3.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8646, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7850, -2.8561, -3.3211, -3.3772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8938, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.7853, -2.8564, -3.3216, -3.3775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8105, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7847, -2.8569, -3.3226, -3.3767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8255, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.7834, -2.8577, -3.3241, -3.3752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8075, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.7823, -2.8582, -3.3255, -3.3737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9017, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.7821, -2.8575, -3.3252, -3.3721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8564, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.7816, -2.8572, -3.3245, -3.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8842, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7816, -2.8565, -3.3226, -3.3693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7840, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.7823, -2.8562, -3.3212, -3.3681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8315, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.7833, -2.8556, -3.3197, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8096, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.7842, -2.8547, -3.3186, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7782, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.7845, -2.8541, -3.3181, -3.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7629, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7845, -2.8541, -3.3183, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8858, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.7844, -2.8544, -3.3185, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8598, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7845, -2.8541, -3.3174, -3.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7558, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.7844, -2.8537, -3.3169, -3.3698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9789, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.7832, -2.8538, -3.3171, -3.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8312, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.7817, -2.8551, -3.3195, -3.3731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7854, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.7797, -2.8563, -3.3225, -3.3736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7659, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.7788, -2.8568, -3.3244, -3.3745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8076, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.7786, -2.8567, -3.3253, -3.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7355, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.7790, -2.8565, -3.3258, -3.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8349, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.7793, -2.8564, -3.3259, -3.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8124, device='cuda:0', dtype=torch.float64)
tensor([-1.8575, -2.7797, -2.8561, -3.3251, -3.3782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7890, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.7807, -2.8554, -3.3225, -3.3793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7599, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.7815, -2.8547, -3.3205, -3.3803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8036, device='cuda:0', dtype=torch.float64)
tensor([-1.8645, -2.7820, -2.8547, -3.3199, -3.3809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8126, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.7824, -2.8548, -3.3196, -3.3819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7664, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.7822, -2.8547, -3.3201, -3.3825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7446, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.7815, -2.8549, -3.3210, -3.3829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7870, device='cuda:0', dtype=torch.float64)
tensor([-1.8640, -2.7819, -2.8540, -3.3214, -3.3826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7871, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.7833, -2.8538, -3.3216, -3.3819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8883, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.7845, -2.8535, -3.3212, -3.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8302, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.7850, -2.8527, -3.3192, -3.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7829, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.7857, -2.8515, -3.3169, -3.3819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7230, device='cuda:0', dtype=torch.float64)
tensor([-1.8606, -2.7867, -2.8506, -3.3162, -3.3818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7354, device='cuda:0', dtype=torch.float64)
tensor([-1.8599, -2.7867, -2.8504, -3.3166, -3.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8550, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7856, -2.8514, -3.3192, -3.3824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7936, device='cuda:0', dtype=torch.float64)
tensor([-1.8574, -2.7836, -2.8535, -3.3229, -3.3827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7491, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7819, -2.8550, -3.3262, -3.3814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8854, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.7807, -2.8565, -3.3275, -3.3803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7810, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.7800, -2.8572, -3.3276, -3.3791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9962, device='cuda:0', dtype=torch.float64)
tensor([-1.8574, -2.7794, -2.8576, -3.3289, -3.3781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9097, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.7791, -2.8572, -3.3298, -3.3767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8835, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.7781, -2.8569, -3.3302, -3.3750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8567, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.7775, -2.8567, -3.3305, -3.3731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8565, device='cuda:0', dtype=torch.float64)
tensor([-1.8625, -2.7787, -2.8555, -3.3290, -3.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7909, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.7812, -2.8534, -3.3245, -3.3723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0484, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.7845, -2.8508, -3.3189, -3.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7877, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.7891, -2.8478, -3.3140, -3.3731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8738, device='cuda:0', dtype=torch.float64)
tensor([-1.8777, -2.7922, -2.8459, -3.3123, -3.3736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7524, device='cuda:0', dtype=torch.float64)
tensor([-1.8790, -2.7933, -2.8457, -3.3134, -3.3737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0393, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.7916, -2.8481, -3.3182, -3.3729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7314, device='cuda:0', dtype=torch.float64)
tensor([-1.8762, -2.7891, -2.8516, -3.3250, -3.3732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8108, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.7879, -2.8552, -3.3309, -3.3745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0142, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7873, -2.8578, -3.3333, -3.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8735, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.7874, -2.8583, -3.3326, -3.3772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9206, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.7882, -2.8577, -3.3302, -3.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9555, device='cuda:0', dtype=torch.float64)
tensor([-1.8661, -2.7879, -2.8570, -3.3296, -3.3784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8152, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.7873, -2.8576, -3.3306, -3.3778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8238, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.7869, -2.8586, -3.3321, -3.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8720, device='cuda:0', dtype=torch.float64)
tensor([-1.8633, -2.7867, -2.8591, -3.3331, -3.3739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8187, device='cuda:0', dtype=torch.float64)
tensor([-1.8634, -2.7862, -2.8597, -3.3343, -3.3709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8468, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.7852, -2.8606, -3.3346, -3.3686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9739, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.7843, -2.8615, -3.3322, -3.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8410, device='cuda:0', dtype=torch.float64)
tensor([-1.8694, -2.7819, -2.8632, -3.3308, -3.3652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9435, device='cuda:0', dtype=torch.float64)
tensor([-1.8701, -2.7782, -2.8649, -3.3308, -3.3636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9479, device='cuda:0', dtype=torch.float64)
tensor([-1.8687, -2.7746, -2.8673, -3.3329, -3.3621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8558, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.7708, -2.8694, -3.3345, -3.3613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8496, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.7689, -2.8696, -3.3334, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9687, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.7693, -2.8681, -3.3337, -3.3624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1060, device='cuda:0', dtype=torch.float64)
tensor([-1.8657, -2.7732, -2.8639, -3.3310, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9202, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.7800, -2.8598, -3.3290, -3.3654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9953, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.7866, -2.8564, -3.3267, -3.3670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9010, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.7924, -2.8542, -3.3240, -3.3695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9174, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.7969, -2.8543, -3.3233, -3.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9884, device='cuda:0', dtype=torch.float64)
tensor([-1.8804, -2.8024, -2.8541, -3.3202, -3.3743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9505, device='cuda:0', dtype=torch.float64)
tensor([-1.8820, -2.8058, -2.8557, -3.3192, -3.3754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8515, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.8061, -2.8581, -3.3183, -3.3759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8962, device='cuda:0', dtype=torch.float64)
tensor([-1.8788, -2.8027, -2.8615, -3.3191, -3.3747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8903, device='cuda:0', dtype=torch.float64)
tensor([-1.8742, -2.7973, -2.8661, -3.3236, -3.3733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8710, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7936, -2.8696, -3.3281, -3.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9068, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.7903, -2.8711, -3.3293, -3.3710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8827, device='cuda:0', dtype=torch.float64)
tensor([-1.8689, -2.7894, -2.8700, -3.3273, -3.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9091, device='cuda:0', dtype=torch.float64)
tensor([-1.8694, -2.7888, -2.8683, -3.3236, -3.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9420, device='cuda:0', dtype=torch.float64)
tensor([-1.8704, -2.7886, -2.8666, -3.3194, -3.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8679, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.7873, -2.8651, -3.3167, -3.3702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9096, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.7864, -2.8653, -3.3170, -3.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8696, device='cuda:0', dtype=torch.float64)
tensor([-1.8723, -2.7850, -2.8655, -3.3187, -3.3707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9780, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.7848, -2.8653, -3.3203, -3.3709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9646, device='cuda:0', dtype=torch.float64)
tensor([-1.8755, -2.7858, -2.8631, -3.3186, -3.3722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8476, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.7867, -2.8623, -3.3190, -3.3728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9650, device='cuda:0', dtype=torch.float64)
tensor([-1.8785, -2.7876, -2.8603, -3.3207, -3.3745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9888, device='cuda:0', dtype=torch.float64)
tensor([-1.8775, -2.7857, -2.8616, -3.3258, -3.3750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1212, device='cuda:0', dtype=torch.float64)
tensor([-1.8759, -2.7836, -2.8628, -3.3319, -3.3758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8921, device='cuda:0', dtype=torch.float64)
tensor([-1.8749, -2.7828, -2.8639, -3.3351, -3.3765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0325, device='cuda:0', dtype=torch.float64)
tensor([-1.8749, -2.7820, -2.8636, -3.3346, -3.3770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1799, device='cuda:0', dtype=torch.float64)
tensor([-1.8778, -2.7834, -2.8600, -3.3305, -3.3760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8621, device='cuda:0', dtype=torch.float64)
tensor([-1.8831, -2.7877, -2.8551, -3.3269, -3.3755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0386, device='cuda:0', dtype=torch.float64)
tensor([-1.8869, -2.7903, -2.8525, -3.3276, -3.3750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1633, device='cuda:0', dtype=torch.float64)
tensor([-1.8884, -2.7912, -2.8518, -3.3316, -3.3730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1793, device='cuda:0', dtype=torch.float64)
tensor([-1.8900, -2.7923, -2.8539, -3.3359, -3.3729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0342, device='cuda:0', dtype=torch.float64)
tensor([-1.8923, -2.7948, -2.8551, -3.3371, -3.3726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1322, device='cuda:0', dtype=torch.float64)
tensor([-1.8952, -2.7974, -2.8545, -3.3318, -3.3727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9816, device='cuda:0', dtype=torch.float64)
tensor([-1.8974, -2.8009, -2.8537, -3.3251, -3.3736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1277, device='cuda:0', dtype=torch.float64)
tensor([-1.8982, -2.8044, -2.8527, -3.3208, -3.3742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3013, device='cuda:0', dtype=torch.float64)
tensor([-1.8957, -2.8027, -2.8534, -3.3195, -3.3727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0684, device='cuda:0', dtype=torch.float64)
tensor([-1.8897, -2.7971, -2.8558, -3.3232, -3.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0187, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.7937, -2.8578, -3.3269, -3.3696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9957, device='cuda:0', dtype=torch.float64)
tensor([-1.8852, -2.7929, -2.8577, -3.3267, -3.3700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1171, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.7941, -2.8563, -3.3239, -3.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0057, device='cuda:0', dtype=torch.float64)
tensor([-1.8880, -2.7941, -2.8561, -3.3257, -3.3719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0376, device='cuda:0', dtype=torch.float64)
tensor([-1.8870, -2.7918, -2.8573, -3.3288, -3.3720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1988, device='cuda:0', dtype=torch.float64)
tensor([-1.8871, -2.7870, -2.8594, -3.3309, -3.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0180, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.7835, -2.8609, -3.3343, -3.3692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0297, device='cuda:0', dtype=torch.float64)
tensor([-1.8898, -2.7828, -2.8603, -3.3325, -3.3680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1988, device='cuda:0', dtype=torch.float64)
tensor([-1.8925, -2.7849, -2.8589, -3.3274, -3.3687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0436, device='cuda:0', dtype=torch.float64)
tensor([-1.8961, -2.7890, -2.8570, -3.3218, -3.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0158, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.7919, -2.8560, -3.3174, -3.3693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3202, device='cuda:0', dtype=torch.float64)
tensor([-1.9013, -2.7912, -2.8584, -3.3155, -3.3677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0634, device='cuda:0', dtype=torch.float64)
tensor([-1.9007, -2.7887, -2.8639, -3.3187, -3.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0394, device='cuda:0', dtype=torch.float64)
tensor([-1.9006, -2.7871, -2.8683, -3.3222, -3.3659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2458, device='cuda:0', dtype=torch.float64)
tensor([-1.9000, -2.7880, -2.8732, -3.3241, -3.3641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2809, device='cuda:0', dtype=torch.float64)
tensor([-1.8997, -2.7896, -2.8765, -3.3230, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9665, device='cuda:0', dtype=torch.float64)
tensor([-1.8990, -2.7914, -2.8819, -3.3251, -3.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2421, device='cuda:0', dtype=torch.float64)
tensor([-1.8947, -2.7884, -2.8875, -3.3283, -3.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1505, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.7831, -2.8940, -3.3330, -3.3645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0948, device='cuda:0', dtype=torch.float64)
tensor([-1.8836, -2.7790, -2.8999, -3.3383, -3.3661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4582, device='cuda:0', dtype=torch.float64)
tensor([-1.8819, -2.7781, -2.8992, -3.3339, -3.3685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2319, device='cuda:0', dtype=torch.float64)
tensor([-1.8826, -2.7784, -2.8960, -3.3251, -3.3719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0016, device='cuda:0', dtype=torch.float64)
tensor([-1.8838, -2.7815, -2.8926, -3.3217, -3.3759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3375, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.7792, -2.8906, -3.3242, -3.3772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3826, device='cuda:0', dtype=torch.float64)
tensor([-1.8802, -2.7713, -2.8897, -3.3280, -3.3744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1942, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.7679, -2.8914, -3.3381, -3.3730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2280, device='cuda:0', dtype=torch.float64)
tensor([-1.8833, -2.7680, -2.8889, -3.3405, -3.3717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4605, device='cuda:0', dtype=torch.float64)
tensor([-1.8919, -2.7723, -2.8806, -3.3304, -3.3709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0947, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.7806, -2.8718, -3.3226, -3.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0640, device='cuda:0', dtype=torch.float64)
tensor([-1.9111, -2.7873, -2.8668, -3.3200, -3.3721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3815, device='cuda:0', dtype=torch.float64)
tensor([-1.9157, -2.7894, -2.8658, -3.3160, -3.3708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2371, device='cuda:0', dtype=torch.float64)
tensor([-1.9157, -2.7942, -2.8665, -3.3193, -3.3693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2283, device='cuda:0', dtype=torch.float64)
tensor([-1.9167, -2.8023, -2.8668, -3.3212, -3.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3551, device='cuda:0', dtype=torch.float64)
tensor([-1.9203, -2.8107, -2.8644, -3.3144, -3.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2621, device='cuda:0', dtype=torch.float64)
tensor([-1.9239, -2.8188, -2.8593, -3.3018, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2063, device='cuda:0', dtype=torch.float64)
tensor([-1.9278, -2.8294, -2.8547, -3.2978, -3.3933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4897, device='cuda:0', dtype=torch.float64)
tensor([-1.9245, -2.8311, -2.8558, -3.2988, -3.3979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2484, device='cuda:0', dtype=torch.float64)
tensor([-1.9156, -2.8267, -2.8611, -3.3080, -3.3981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2314, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.8207, -2.8685, -3.3230, -3.4009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1636, device='cuda:0', dtype=torch.float64)
tensor([-1.8970, -2.8145, -2.8744, -3.3315, -3.4029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1421, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.8095, -2.8771, -3.3294, -3.4018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3478, device='cuda:0', dtype=torch.float64)
tensor([-1.8863, -2.8058, -2.8779, -3.3292, -3.3991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2660, device='cuda:0', dtype=torch.float64)
tensor([-1.8831, -2.8049, -2.8782, -3.3323, -3.3958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4956, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.7998, -2.8791, -3.3345, -3.3890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2301, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.7938, -2.8804, -3.3396, -3.3816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1103, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.7889, -2.8803, -3.3470, -3.3744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4022, device='cuda:0', dtype=torch.float64)
tensor([-1.8749, -2.7847, -2.8784, -3.3439, -3.3700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2265, device='cuda:0', dtype=torch.float64)
tensor([-1.8789, -2.7798, -2.8765, -3.3404, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3237, device='cuda:0', dtype=torch.float64)
tensor([-1.8808, -2.7746, -2.8787, -3.3416, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3614, device='cuda:0', dtype=torch.float64)
tensor([-1.8825, -2.7687, -2.8831, -3.3450, -3.3669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2901, device='cuda:0', dtype=torch.float64)
tensor([-1.8833, -2.7621, -2.8900, -3.3477, -3.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1366, device='cuda:0', dtype=torch.float64)
tensor([-1.8850, -2.7572, -2.8970, -3.3499, -3.3757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3190, device='cuda:0', dtype=torch.float64)
tensor([-1.8912, -2.7580, -2.9010, -3.3482, -3.3812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1262, device='cuda:0', dtype=torch.float64)
tensor([-1.9007, -2.7619, -2.9025, -3.3426, -3.3870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1556, device='cuda:0', dtype=torch.float64)
tensor([-1.9106, -2.7685, -2.9003, -3.3336, -3.3931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0613, device='cuda:0', dtype=torch.float64)
tensor([-1.9196, -2.7785, -2.8972, -3.3238, -3.3981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2370, device='cuda:0', dtype=torch.float64)
tensor([-1.9256, -2.7879, -2.8933, -3.3178, -3.3997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2800, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.7933, -2.8910, -3.3160, -3.3969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2044, device='cuda:0', dtype=torch.float64)
tensor([-1.9222, -2.7963, -2.8903, -3.3191, -3.3936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2552, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.8026, -2.8875, -3.3202, -3.3906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1093, device='cuda:0', dtype=torch.float64)
tensor([-1.9217, -2.8110, -2.8809, -3.3143, -3.3864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1497, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.8205, -2.8734, -3.3045, -3.3845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0461, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.8296, -2.8669, -3.2984, -3.3849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0300, device='cuda:0', dtype=torch.float64)
tensor([-1.9196, -2.8350, -2.8634, -3.3003, -3.3825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3366, device='cuda:0', dtype=torch.float64)
tensor([-1.9143, -2.8330, -2.8635, -3.3068, -3.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2309, device='cuda:0', dtype=torch.float64)
tensor([-1.9072, -2.8263, -2.8692, -3.3186, -3.3714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5197, device='cuda:0', dtype=torch.float64)
tensor([-1.9013, -2.8164, -2.8765, -3.3293, -3.3673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4422, device='cuda:0', dtype=torch.float64)
tensor([-1.8994, -2.8071, -2.8792, -3.3294, -3.3650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5230, device='cuda:0', dtype=torch.float64)
tensor([-1.9028, -2.8029, -2.8797, -3.3250, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1918, device='cuda:0', dtype=torch.float64)
tensor([-1.9045, -2.7988, -2.8836, -3.3279, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5992, device='cuda:0', dtype=torch.float64)
tensor([-1.9015, -2.7898, -2.8918, -3.3322, -3.3640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1049, device='cuda:0', dtype=torch.float64)
tensor([-1.8987, -2.7838, -2.9010, -3.3389, -3.3623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3267, device='cuda:0', dtype=torch.float64)
tensor([-1.8984, -2.7826, -2.9035, -3.3387, -3.3633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4152, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.7887, -2.8998, -3.3291, -3.3665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0596, device='cuda:0', dtype=torch.float64)
tensor([-1.9080, -2.8011, -2.8931, -3.3164, -3.3707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2982, device='cuda:0', dtype=torch.float64)
tensor([-1.9119, -2.8148, -2.8902, -3.3132, -3.3738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5174, device='cuda:0', dtype=torch.float64)
tensor([-1.9148, -2.8258, -2.8885, -3.3147, -3.3739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5909, device='cuda:0', dtype=torch.float64)
tensor([-1.9123, -2.8332, -2.8893, -3.3250, -3.3750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4554, device='cuda:0', dtype=torch.float64)
tensor([-1.9060, -2.8344, -2.8954, -3.3473, -3.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3824, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.8362, -2.9010, -3.3646, -3.3790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4640, device='cuda:0', dtype=torch.float64)
tensor([-1.8965, -2.8375, -2.9033, -3.3622, -3.3828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3573, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.8402, -2.8997, -3.3557, -3.3879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2549, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.8397, -2.8955, -3.3533, -3.3936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6799, device='cuda:0', dtype=torch.float64)
tensor([-1.9045, -2.8356, -2.8922, -3.3524, -3.3937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4552, device='cuda:0', dtype=torch.float64)
tensor([-1.9049, -2.8284, -2.8935, -3.3536, -3.3921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2463, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -2.8244, -2.8956, -3.3624, -3.3925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7743, device='cuda:0', dtype=torch.float64)
tensor([-1.9160, -2.8209, -2.8952, -3.3652, -3.3933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6440, device='cuda:0', dtype=torch.float64)
tensor([-1.9250, -2.8174, -2.8914, -3.3517, -3.3916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3638, device='cuda:0', dtype=torch.float64)
tensor([-1.9357, -2.8180, -2.8898, -3.3459, -3.3938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3443, device='cuda:0', dtype=torch.float64)
tensor([-1.9428, -2.8169, -2.8919, -3.3499, -3.3926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5089, device='cuda:0', dtype=torch.float64)
tensor([-1.9423, -2.8091, -2.8966, -3.3506, -3.3842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4293, device='cuda:0', dtype=torch.float64)
tensor([-1.9375, -2.7998, -2.9009, -3.3532, -3.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3203, device='cuda:0', dtype=torch.float64)
tensor([-1.9349, -2.7963, -2.9024, -3.3535, -3.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3445, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.7946, -2.9027, -3.3484, -3.3638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3473, device='cuda:0', dtype=torch.float64)
tensor([-1.9365, -2.7983, -2.8974, -3.3378, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4466, device='cuda:0', dtype=torch.float64)
tensor([-1.9406, -2.8034, -2.8923, -3.3261, -3.3689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3757, device='cuda:0', dtype=torch.float64)
tensor([-1.9395, -2.8059, -2.8899, -3.3215, -3.3715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5454, device='cuda:0', dtype=torch.float64)
tensor([-1.9352, -2.8053, -2.8901, -3.3248, -3.3734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2585, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.8058, -2.8894, -3.3293, -3.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2826, device='cuda:0', dtype=torch.float64)
tensor([-1.9327, -2.8099, -2.8857, -3.3328, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2439, device='cuda:0', dtype=torch.float64)
tensor([-1.9328, -2.8109, -2.8837, -3.3352, -3.3870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3588, device='cuda:0', dtype=torch.float64)
tensor([-1.9321, -2.8125, -2.8802, -3.3416, -3.3886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3753, device='cuda:0', dtype=torch.float64)
tensor([-1.9366, -2.8154, -2.8747, -3.3424, -3.3887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4549, device='cuda:0', dtype=torch.float64)
tensor([-1.9397, -2.8168, -2.8697, -3.3403, -3.3880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2150, device='cuda:0', dtype=torch.float64)
tensor([-1.9434, -2.8179, -2.8666, -3.3354, -3.3860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1203, device='cuda:0', dtype=torch.float64)
tensor([-1.9447, -2.8171, -2.8655, -3.3306, -3.3857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1435, device='cuda:0', dtype=torch.float64)
tensor([-1.9426, -2.8151, -2.8662, -3.3281, -3.3864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2568, device='cuda:0', dtype=torch.float64)
tensor([-1.9381, -2.8101, -2.8681, -3.3283, -3.3872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3140, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.8045, -2.8722, -3.3354, -3.3872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5770, device='cuda:0', dtype=torch.float64)
tensor([-1.9199, -2.7979, -2.8779, -3.3440, -3.3832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1266, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.7960, -2.8827, -3.3496, -3.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4158, device='cuda:0', dtype=torch.float64)
tensor([-1.9114, -2.7949, -2.8875, -3.3523, -3.3817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4164, device='cuda:0', dtype=torch.float64)
tensor([-1.9112, -2.7962, -2.8932, -3.3517, -3.3844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4789, device='cuda:0', dtype=torch.float64)
tensor([-1.9130, -2.7980, -2.9005, -3.3496, -3.3910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3912, device='cuda:0', dtype=torch.float64)
tensor([-1.9146, -2.8020, -2.9060, -3.3489, -3.3935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5751, device='cuda:0', dtype=torch.float64)
tensor([-1.9164, -2.8052, -2.9097, -3.3516, -3.3983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3057, device='cuda:0', dtype=torch.float64)
tensor([-1.9191, -2.8103, -2.9129, -3.3561, -3.4035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4448, device='cuda:0', dtype=torch.float64)
tensor([-1.9255, -2.8174, -2.9121, -3.3531, -3.4084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3696, device='cuda:0', dtype=torch.float64)
tensor([-1.9331, -2.8240, -2.9101, -3.3481, -3.4150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4221, device='cuda:0', dtype=torch.float64)
tensor([-1.9421, -2.8304, -2.9067, -3.3436, -3.4179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3695, device='cuda:0', dtype=torch.float64)
tensor([-1.9499, -2.8384, -2.9022, -3.3460, -3.4175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5164, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.8410, -2.8973, -3.3533, -3.4113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3889, device='cuda:0', dtype=torch.float64)
tensor([-1.9628, -2.8389, -2.8952, -3.3617, -3.4040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5943, device='cuda:0', dtype=torch.float64)
tensor([-1.9693, -2.8355, -2.8910, -3.3661, -3.3993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4113, device='cuda:0', dtype=torch.float64)
tensor([-1.9765, -2.8319, -2.8874, -3.3648, -3.3973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5632, device='cuda:0', dtype=torch.float64)
tensor([-1.9811, -2.8299, -2.8824, -3.3562, -3.4018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4675, device='cuda:0', dtype=torch.float64)
tensor([-1.9843, -2.8286, -2.8822, -3.3469, -3.4098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4501, device='cuda:0', dtype=torch.float64)
tensor([-1.9863, -2.8292, -2.8828, -3.3411, -3.4134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5478, device='cuda:0', dtype=torch.float64)
tensor([-1.9819, -2.8242, -2.8862, -3.3372, -3.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7773, device='cuda:0', dtype=torch.float64)
tensor([-1.9716, -2.8159, -2.8929, -3.3430, -3.4109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6191, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.8045, -2.9010, -3.3458, -3.4038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6057, device='cuda:0', dtype=torch.float64)
tensor([-1.9462, -2.7967, -2.9039, -3.3480, -3.3976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3064, device='cuda:0', dtype=torch.float64)
tensor([-1.9365, -2.7941, -2.9082, -3.3573, -3.3891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5497, device='cuda:0', dtype=torch.float64)
tensor([-1.9280, -2.7943, -2.9129, -3.3662, -3.3816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3406, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.7987, -2.9165, -3.3730, -3.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8394, device='cuda:0', dtype=torch.float64)
tensor([-1.9212, -2.8035, -2.9189, -3.3708, -3.3729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5511, device='cuda:0', dtype=torch.float64)
tensor([-1.9248, -2.8103, -2.9215, -3.3644, -3.3722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7426, device='cuda:0', dtype=torch.float64)
tensor([-1.9321, -2.8178, -2.9207, -3.3542, -3.3707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5670, device='cuda:0', dtype=torch.float64)
tensor([-1.9403, -2.8270, -2.9179, -3.3441, -3.3741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6066, device='cuda:0', dtype=torch.float64)
tensor([-1.9422, -2.8347, -2.9146, -3.3368, -3.3781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4693, device='cuda:0', dtype=torch.float64)
tensor([-1.9424, -2.8429, -2.9121, -3.3355, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5785, device='cuda:0', dtype=torch.float64)
tensor([-1.9388, -2.8477, -2.9104, -3.3429, -3.3888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5296, device='cuda:0', dtype=torch.float64)
tensor([-1.9348, -2.8475, -2.9083, -3.3550, -3.3943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4523, device='cuda:0', dtype=torch.float64)
tensor([-1.9356, -2.8516, -2.9038, -3.3643, -3.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4271, device='cuda:0', dtype=torch.float64)
tensor([-1.9405, -2.8570, -2.8979, -3.3749, -3.4114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6238, device='cuda:0', dtype=torch.float64)
tensor([-1.9502, -2.8661, -2.8892, -3.3840, -3.4180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5444, device='cuda:0', dtype=torch.float64)
tensor([-1.9617, -2.8719, -2.8823, -3.3817, -3.4237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4094, device='cuda:0', dtype=torch.float64)
tensor([-1.9723, -2.8742, -2.8782, -3.3798, -3.4275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4719, device='cuda:0', dtype=torch.float64)
tensor([-1.9783, -2.8711, -2.8770, -3.3712, -3.4283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5658, device='cuda:0', dtype=torch.float64)
tensor([-1.9807, -2.8655, -2.8775, -3.3639, -3.4265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5133, device='cuda:0', dtype=torch.float64)
tensor([-1.9838, -2.8581, -2.8791, -3.3556, -3.4270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3486, device='cuda:0', dtype=torch.float64)
tensor([-1.9816, -2.8493, -2.8843, -3.3503, -3.4240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4328, device='cuda:0', dtype=torch.float64)
tensor([-1.9758, -2.8400, -2.8901, -3.3488, -3.4171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8401, device='cuda:0', dtype=torch.float64)
tensor([-1.9644, -2.8265, -2.8968, -3.3551, -3.4073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2502, device='cuda:0', dtype=torch.float64)
tensor([-1.9525, -2.8149, -2.9011, -3.3572, -3.4018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7526, device='cuda:0', dtype=torch.float64)
tensor([-1.9453, -2.8085, -2.9021, -3.3544, -3.3956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5794, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.8076, -2.9019, -3.3487, -3.3916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3229, device='cuda:0', dtype=torch.float64)
tensor([-1.9441, -2.8121, -2.8983, -3.3438, -3.3916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9692, device='cuda:0', dtype=torch.float64)
tensor([-1.9467, -2.8180, -2.8971, -3.3405, -3.3904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5166, device='cuda:0', dtype=torch.float64)
tensor([-1.9507, -2.8239, -2.8976, -3.3373, -3.3893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4014, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.8339, -2.8959, -3.3453, -3.3883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6297, device='cuda:0', dtype=torch.float64)
tensor([-1.9629, -2.8472, -2.8957, -3.3570, -3.3859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0105, device='cuda:0', dtype=torch.float64)
tensor([-1.9712, -2.8596, -2.8931, -3.3568, -3.3831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9394, device='cuda:0', dtype=torch.float64)
tensor([-1.9826, -2.8720, -2.8925, -3.3610, -3.3891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9477, device='cuda:0', dtype=torch.float64)
tensor([-1.9899, -2.8780, -2.8991, -3.3618, -3.3934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2048, device='cuda:0', dtype=torch.float64)
tensor([-1.9868, -2.8730, -2.9104, -3.3639, -3.3927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5716, device='cuda:0', dtype=torch.float64)
tensor([-1.9839, -2.8687, -2.9235, -3.3732, -3.3971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3328, device='cuda:0', dtype=torch.float64)
tensor([-1.9807, -2.8626, -2.9345, -3.3825, -3.4009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8197, device='cuda:0', dtype=torch.float64)
tensor([-1.9811, -2.8559, -2.9431, -3.3762, -3.4049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5015, device='cuda:0', dtype=torch.float64)
tensor([-1.9857, -2.8524, -2.9446, -3.3632, -3.4117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7057, device='cuda:0', dtype=torch.float64)
tensor([-1.9939, -2.8552, -2.9453, -3.3654, -3.4221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8890, device='cuda:0', dtype=torch.float64)
tensor([-1.9962, -2.8495, -2.9458, -3.3620, -3.4229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6974, device='cuda:0', dtype=torch.float64)
tensor([-1.9960, -2.8439, -2.9439, -3.3550, -3.4195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9048, device='cuda:0', dtype=torch.float64)
tensor([-1.9950, -2.8399, -2.9433, -3.3585, -3.4145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6434, device='cuda:0', dtype=torch.float64)
tensor([-1.9985, -2.8391, -2.9395, -3.3589, -3.4100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4813, device='cuda:0', dtype=torch.float64)
tensor([-2.0035, -2.8410, -2.9325, -3.3490, -3.4063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6207, device='cuda:0', dtype=torch.float64)
tensor([-2.0070, -2.8442, -2.9234, -3.3428, -3.4024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5210, device='cuda:0', dtype=torch.float64)
tensor([-2.0048, -2.8489, -2.9190, -3.3444, -3.4021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6107, device='cuda:0', dtype=torch.float64)
tensor([-1.9993, -2.8567, -2.9127, -3.3537, -3.4023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4729, device='cuda:0', dtype=torch.float64)
tensor([-1.9873, -2.8614, -2.9119, -3.3625, -3.3973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5573, device='cuda:0', dtype=torch.float64)
tensor([-1.9712, -2.8638, -2.9132, -3.3777, -3.3905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6358, device='cuda:0', dtype=torch.float64)
tensor([-1.9618, -2.8667, -2.9141, -3.3908, -3.3873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5269, device='cuda:0', dtype=torch.float64)
tensor([-1.9558, -2.8662, -2.9144, -3.3957, -3.3877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7020, device='cuda:0', dtype=torch.float64)
tensor([-1.9503, -2.8682, -2.9154, -3.3938, -3.3893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8391, device='cuda:0', dtype=torch.float64)
tensor([-1.9522, -2.8709, -2.9134, -3.3840, -3.3949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0743, device='cuda:0', dtype=torch.float64)
tensor([-1.9613, -2.8814, -2.9075, -3.3645, -3.4060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6244, device='cuda:0', dtype=torch.float64)
tensor([-1.9695, -2.8915, -2.9083, -3.3524, -3.4182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8665, device='cuda:0', dtype=torch.float64)
tensor([-1.9749, -2.8958, -2.9108, -3.3518, -3.4263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9960, device='cuda:0', dtype=torch.float64)
tensor([-1.9762, -2.8869, -2.9191, -3.3562, -3.4238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8321, device='cuda:0', dtype=torch.float64)
tensor([-1.9723, -2.8724, -2.9326, -3.3825, -3.4160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5751, device='cuda:0', dtype=torch.float64)
tensor([-1.9690, -2.8639, -2.9440, -3.4124, -3.4142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0263, device='cuda:0', dtype=torch.float64)
tensor([-1.9712, -2.8586, -2.9481, -3.4156, -3.4169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6232, device='cuda:0', dtype=torch.float64)
tensor([-1.9768, -2.8597, -2.9484, -3.4086, -3.4221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5110, device='cuda:0', dtype=torch.float64)
tensor([-1.9816, -2.8628, -2.9480, -3.4014, -3.4294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5214, device='cuda:0', dtype=torch.float64)
tensor([-1.9885, -2.8664, -2.9468, -3.3931, -3.4368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5534, device='cuda:0', dtype=torch.float64)
tensor([-1.9902, -2.8630, -2.9435, -3.3763, -3.4383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6294, device='cuda:0', dtype=torch.float64)
tensor([-1.9923, -2.8621, -2.9398, -3.3686, -3.4370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4868, device='cuda:0', dtype=torch.float64)
tensor([-1.9930, -2.8628, -2.9409, -3.3709, -3.4382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5791, device='cuda:0', dtype=torch.float64)
tensor([-1.9956, -2.8675, -2.9434, -3.3850, -3.4436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9420, device='cuda:0', dtype=torch.float64)
tensor([-2.0023, -2.8703, -2.9406, -3.3775, -3.4430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7046, device='cuda:0', dtype=torch.float64)
tensor([-2.0137, -2.8737, -2.9350, -3.3541, -3.4415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5487, device='cuda:0', dtype=torch.float64)
tensor([-2.0255, -2.8827, -2.9282, -3.3356, -3.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4222, device='cuda:0', dtype=torch.float64)
tensor([-2.0311, -2.8921, -2.9274, -3.3366, -3.4486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1495, device='cuda:0', dtype=torch.float64)
tensor([-2.0284, -2.8928, -2.9327, -3.3417, -3.4497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7015, device='cuda:0', dtype=torch.float64)
tensor([-2.0225, -2.8904, -2.9414, -3.3468, -3.4495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7064, device='cuda:0', dtype=torch.float64)
tensor([-2.0163, -2.8895, -2.9528, -3.3561, -3.4503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6230, device='cuda:0', dtype=torch.float64)
tensor([-2.0127, -2.8904, -2.9617, -3.3615, -3.4541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7394, device='cuda:0', dtype=torch.float64)
tensor([-2.0148, -2.8894, -2.9673, -3.3555, -3.4570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7142, device='cuda:0', dtype=torch.float64)
tensor([-2.0233, -2.8969, -2.9652, -3.3360, -3.4600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6267, device='cuda:0', dtype=torch.float64)
tensor([-2.0298, -2.9089, -2.9653, -3.3167, -3.4657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4980, device='cuda:0', dtype=torch.float64)
tensor([-2.0350, -2.9194, -2.9644, -3.2976, -3.4724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9825, device='cuda:0', dtype=torch.float64)
tensor([-2.0421, -2.9280, -2.9613, -3.2872, -3.4781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8686, device='cuda:0', dtype=torch.float64)
tensor([-2.0415, -2.9264, -2.9593, -3.2976, -3.4814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8483, device='cuda:0', dtype=torch.float64)
tensor([-2.0368, -2.9202, -2.9600, -3.3190, -3.4804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5820, device='cuda:0', dtype=torch.float64)
tensor([-2.0300, -2.9137, -2.9588, -3.3455, -3.4773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5967, device='cuda:0', dtype=torch.float64)
tensor([-2.0234, -2.9060, -2.9553, -3.3601, -3.4639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5366, device='cuda:0', dtype=torch.float64)
tensor([-2.0190, -2.9018, -2.9496, -3.3700, -3.4479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6930, device='cuda:0', dtype=torch.float64)
tensor([-2.0163, -2.9051, -2.9468, -3.3867, -3.4383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7268, device='cuda:0', dtype=torch.float64)
tensor([-2.0092, -2.9012, -2.9516, -3.4018, -3.4306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7239, device='cuda:0', dtype=torch.float64)
tensor([-1.9964, -2.8941, -2.9537, -3.4156, -3.4239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7195, device='cuda:0', dtype=torch.float64)
tensor([-1.9820, -2.8785, -2.9648, -3.4216, -3.4173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4748, device='cuda:0', dtype=torch.float64)
tensor([-1.9737, -2.8686, -2.9776, -3.4283, -3.4163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8839, device='cuda:0', dtype=torch.float64)
tensor([-1.9738, -2.8621, -2.9826, -3.4217, -3.4139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1883, device='cuda:0', dtype=torch.float64)
tensor([-1.9840, -2.8625, -2.9762, -3.4078, -3.4034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6574, device='cuda:0', dtype=torch.float64)
tensor([-1.9935, -2.8619, -2.9710, -3.3967, -3.3937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8067, device='cuda:0', dtype=torch.float64)
tensor([-2.0062, -2.8632, -2.9683, -3.3920, -3.3842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6665, device='cuda:0', dtype=torch.float64)
tensor([-2.0171, -2.8676, -2.9655, -3.3820, -3.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2791, device='cuda:0', dtype=torch.float64)
tensor([-2.0261, -2.8725, -2.9639, -3.3682, -3.3715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6293, device='cuda:0', dtype=torch.float64)
tensor([-2.0364, -2.8811, -2.9604, -3.3631, -3.3687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5035, device='cuda:0', dtype=torch.float64)
tensor([-2.0490, -2.8972, -2.9524, -3.3547, -3.3708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5518, device='cuda:0', dtype=torch.float64)
tensor([-2.0620, -2.9126, -2.9428, -3.3440, -3.3744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5951, device='cuda:0', dtype=torch.float64)
tensor([-2.0794, -2.9301, -2.9359, -3.3315, -3.3802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6603, device='cuda:0', dtype=torch.float64)
tensor([-2.0916, -2.9454, -2.9300, -3.3212, -3.3859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6763, device='cuda:0', dtype=torch.float64)
tensor([-2.1007, -2.9590, -2.9240, -3.3146, -3.3976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8671, device='cuda:0', dtype=torch.float64)
tensor([-2.1012, -2.9643, -2.9213, -3.3165, -3.4059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5695, device='cuda:0', dtype=torch.float64)
tensor([-2.0940, -2.9591, -2.9207, -3.3278, -3.4146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5432, device='cuda:0', dtype=torch.float64)
tensor([-2.0848, -2.9500, -2.9224, -3.3409, -3.4175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6106, device='cuda:0', dtype=torch.float64)
tensor([-2.0716, -2.9392, -2.9272, -3.3614, -3.4140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5780, device='cuda:0', dtype=torch.float64)
tensor([-2.0510, -2.9246, -2.9380, -3.3877, -3.4098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4419, device='cuda:0', dtype=torch.float64)
tensor([-2.0322, -2.9102, -2.9526, -3.4173, -3.4093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0037, device='cuda:0', dtype=torch.float64)
tensor([-2.0161, -2.8994, -2.9661, -3.4462, -3.4099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7814, device='cuda:0', dtype=torch.float64)
tensor([-2.0046, -2.8948, -2.9764, -3.4608, -3.4146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0225, device='cuda:0', dtype=torch.float64)
tensor([-2.0033, -2.8904, -2.9793, -3.4538, -3.4252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8022, device='cuda:0', dtype=torch.float64)
tensor([-2.0087, -2.8925, -2.9791, -3.4385, -3.4366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6688, device='cuda:0', dtype=torch.float64)
tensor([-2.0116, -2.8907, -2.9793, -3.4322, -3.4426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8449, device='cuda:0', dtype=torch.float64)
tensor([-2.0130, -2.8866, -2.9831, -3.4414, -3.4470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8203, device='cuda:0', dtype=torch.float64)
tensor([-2.0208, -2.8857, -2.9848, -3.4445, -3.4554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7061, device='cuda:0', dtype=torch.float64)
tensor([-2.0317, -2.8877, -2.9828, -3.4345, -3.4627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6385, device='cuda:0', dtype=torch.float64)
tensor([-2.0465, -2.8951, -2.9776, -3.4206, -3.4697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6947, device='cuda:0', dtype=torch.float64)
tensor([-2.0631, -2.9067, -2.9715, -3.4092, -3.4760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5897, device='cuda:0', dtype=torch.float64)
tensor([-2.0805, -2.9239, -2.9655, -3.3996, -3.4828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7195, device='cuda:0', dtype=torch.float64)
tensor([-2.0974, -2.9363, -2.9600, -3.3879, -3.4880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8317, device='cuda:0', dtype=torch.float64)
tensor([-2.1130, -2.9446, -2.9563, -3.3713, -3.4917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9036, device='cuda:0', dtype=torch.float64)
tensor([-2.1297, -2.9532, -2.9521, -3.3575, -3.4980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5225, device='cuda:0', dtype=torch.float64)
tensor([-2.1422, -2.9594, -2.9461, -3.3472, -3.5008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6811, device='cuda:0', dtype=torch.float64)
tensor([-2.1542, -2.9645, -2.9399, -3.3403, -3.5013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8129, device='cuda:0', dtype=torch.float64)
tensor([-2.1591, -2.9662, -2.9365, -3.3355, -3.5031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0824, device='cuda:0', dtype=torch.float64)
tensor([-2.1624, -2.9660, -2.9284, -3.3334, -3.5036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9176, device='cuda:0', dtype=torch.float64)
tensor([-2.1527, -2.9599, -2.9264, -3.3468, -3.4966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8470, device='cuda:0', dtype=torch.float64)
tensor([-2.1400, -2.9484, -2.9277, -3.3693, -3.4862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6370, device='cuda:0', dtype=torch.float64)
tensor([-2.1260, -2.9348, -2.9333, -3.3892, -3.4763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6037, device='cuda:0', dtype=torch.float64)
tensor([-2.1067, -2.9204, -2.9458, -3.4114, -3.4700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0375, device='cuda:0', dtype=torch.float64)
tensor([-2.0913, -2.9088, -2.9570, -3.4259, -3.4696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0469, device='cuda:0', dtype=torch.float64)
tensor([-2.0766, -2.9002, -2.9689, -3.4238, -3.4733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7186, device='cuda:0', dtype=torch.float64)
tensor([-2.0663, -2.8951, -2.9795, -3.4173, -3.4757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0116, device='cuda:0', dtype=torch.float64)
tensor([-2.0557, -2.8926, -2.9910, -3.4063, -3.4789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7516, device='cuda:0', dtype=torch.float64)
tensor([-2.0513, -2.8957, -3.0014, -3.3952, -3.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2983, device='cuda:0', dtype=torch.float64)
tensor([-2.0581, -2.9021, -3.0037, -3.3753, -3.4817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2509, device='cuda:0', dtype=torch.float64)
tensor([-2.0650, -2.9107, -3.0045, -3.3606, -3.4837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8550, device='cuda:0', dtype=torch.float64)
tensor([-2.0704, -2.9151, -3.0049, -3.3520, -3.4776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9955, device='cuda:0', dtype=torch.float64)
tensor([-2.0764, -2.9163, -3.0081, -3.3523, -3.4735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1742, device='cuda:0', dtype=torch.float64)
tensor([-2.0831, -2.9163, -3.0140, -3.3593, -3.4654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2640, device='cuda:0', dtype=torch.float64)
tensor([-2.0818, -2.9078, -3.0245, -3.3808, -3.4571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2017, device='cuda:0', dtype=torch.float64)
tensor([-2.0868, -2.9056, -3.0353, -3.4121, -3.4537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9430, device='cuda:0', dtype=torch.float64)
tensor([-2.0927, -2.9034, -3.0441, -3.4395, -3.4570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6990, device='cuda:0', dtype=torch.float64)
tensor([-2.1016, -2.9096, -3.0526, -3.4630, -3.4622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8329, device='cuda:0', dtype=torch.float64)
tensor([-2.1090, -2.9178, -3.0565, -3.4743, -3.4705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9349, device='cuda:0', dtype=torch.float64)
tensor([-2.1222, -2.9305, -3.0548, -3.4708, -3.4841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8182, device='cuda:0', dtype=torch.float64)
tensor([-2.1304, -2.9305, -3.0511, -3.4721, -3.4910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8661, device='cuda:0', dtype=torch.float64)
tensor([-2.1385, -2.9357, -3.0465, -3.4711, -3.4996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1132, device='cuda:0', dtype=torch.float64)
tensor([-2.1435, -2.9360, -3.0418, -3.4752, -3.5039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9122, device='cuda:0', dtype=torch.float64)
tensor([-2.1493, -2.9382, -3.0395, -3.4796, -3.5052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0923, device='cuda:0', dtype=torch.float64)
tensor([-2.1577, -2.9456, -3.0387, -3.4728, -3.5143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7148, device='cuda:0', dtype=torch.float64)
tensor([-2.1681, -2.9577, -3.0397, -3.4628, -3.5234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0069, device='cuda:0', dtype=torch.float64)
tensor([-2.1821, -2.9778, -3.0343, -3.4464, -3.5337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5535, device='cuda:0', dtype=torch.float64)
tensor([-2.1947, -2.9914, -3.0306, -3.4316, -3.5450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4642, device='cuda:0', dtype=torch.float64)
tensor([-2.2018, -3.0029, -3.0290, -3.4196, -3.5528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0898, device='cuda:0', dtype=torch.float64)
tensor([-2.2089, -3.0170, -3.0252, -3.4029, -3.5561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6734, device='cuda:0', dtype=torch.float64)
tensor([-2.2116, -3.0231, -3.0251, -3.3981, -3.5570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5788, device='cuda:0', dtype=torch.float64)
tensor([-2.2106, -3.0275, -3.0260, -3.4063, -3.5562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4235, device='cuda:0', dtype=torch.float64)
tensor([-2.2035, -3.0252, -3.0300, -3.4115, -3.5489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9330, device='cuda:0', dtype=torch.float64)
tensor([-2.1928, -3.0212, -3.0372, -3.4231, -3.5405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8580, device='cuda:0', dtype=torch.float64)
tensor([-2.1854, -3.0235, -3.0491, -3.4538, -3.5398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3452, device='cuda:0', dtype=torch.float64)
tensor([-2.1766, -3.0182, -3.0554, -3.4592, -3.5398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1921, device='cuda:0', dtype=torch.float64)
tensor([-2.1731, -3.0120, -3.0582, -3.4465, -3.5394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8251, device='cuda:0', dtype=torch.float64)
tensor([-2.1710, -3.0121, -3.0631, -3.4475, -3.5507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0060, device='cuda:0', dtype=torch.float64)
tensor([-2.1656, -3.0165, -3.0708, -3.4823, -3.5626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9049, device='cuda:0', dtype=torch.float64)
tensor([-2.1536, -3.0066, -3.0775, -3.4658, -3.5700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9269, device='cuda:0', dtype=torch.float64)
tensor([-2.1376, -2.9942, -3.0886, -3.4545, -3.5686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1646, device='cuda:0', dtype=torch.float64)
tensor([-2.1236, -2.9810, -3.1051, -3.4648, -3.5707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9320, device='cuda:0', dtype=torch.float64)
tensor([-2.1177, -2.9805, -3.1175, -3.4775, -3.5738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2457, device='cuda:0', dtype=torch.float64)
tensor([-2.1167, -2.9881, -3.1272, -3.4922, -3.5753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8745, device='cuda:0', dtype=torch.float64)
tensor([-2.1186, -2.9929, -3.1329, -3.4975, -3.5688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7821, device='cuda:0', dtype=torch.float64)
tensor([-2.1241, -2.9900, -3.1346, -3.4929, -3.5625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9292, device='cuda:0', dtype=torch.float64)
tensor([-2.1326, -2.9960, -3.1291, -3.4822, -3.5579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2541, device='cuda:0', dtype=torch.float64)
tensor([-2.1461, -3.0122, -3.1230, -3.4943, -3.5558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4263, device='cuda:0', dtype=torch.float64)
tensor([-2.1549, -3.0179, -3.1248, -3.5048, -3.5578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9512, device='cuda:0', dtype=torch.float64)
tensor([-2.1660, -3.0267, -3.1293, -3.5015, -3.5664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8136, device='cuda:0', dtype=torch.float64)
tensor([-2.1783, -3.0321, -3.1315, -3.4940, -3.5788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5661, device='cuda:0', dtype=torch.float64)
tensor([-2.1933, -3.0389, -3.1301, -3.4996, -3.5970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0117, device='cuda:0', dtype=torch.float64)
tensor([-2.2082, -3.0450, -3.1252, -3.5075, -3.6122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0058, device='cuda:0', dtype=torch.float64)
tensor([-2.2263, -3.0594, -3.1124, -3.5218, -3.6269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0710, device='cuda:0', dtype=torch.float64)
tensor([-2.2483, -3.0738, -3.0901, -3.5165, -3.6346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7604, device='cuda:0', dtype=torch.float64)
tensor([-2.2632, -3.0842, -3.0712, -3.5008, -3.6378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9155, device='cuda:0', dtype=torch.float64)
tensor([-2.2776, -3.1007, -3.0586, -3.5133, -3.6416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7891, device='cuda:0', dtype=torch.float64)
tensor([-2.2875, -3.1211, -3.0482, -3.5813, -3.6523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0832, device='cuda:0', dtype=torch.float64)
tensor([-2.2889, -3.1323, -3.0376, -3.6048, -3.6536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2576, device='cuda:0', dtype=torch.float64)
tensor([-2.2828, -3.1226, -3.0337, -3.5325, -3.6443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9426, device='cuda:0', dtype=torch.float64)
tensor([-2.2783, -3.1051, -3.0334, -3.5134, -3.6374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5194, device='cuda:0', dtype=torch.float64)
tensor([-2.2751, -3.1022, -3.0394, -3.5543, -3.6418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9800, device='cuda:0', dtype=torch.float64)
tensor([-2.2768, -3.1152, -3.0487, -3.5993, -3.6549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1261, device='cuda:0', dtype=torch.float64)
tensor([-2.2787, -3.1121, -3.0389, -3.5521, -3.6352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9808, device='cuda:0', dtype=torch.float64)
tensor([-2.2868, -3.1050, -3.0270, -3.4880, -3.6163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1626, device='cuda:0', dtype=torch.float64)
tensor([-2.2976, -3.1133, -3.0257, -3.4612, -3.6164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7119, device='cuda:0', dtype=torch.float64)
tensor([-2.2985, -3.1131, -3.0327, -3.4669, -3.6208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0295, device='cuda:0', dtype=torch.float64)
tensor([-2.2960, -3.1077, -3.0401, -3.4930, -3.6207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0497, device='cuda:0', dtype=torch.float64)
tensor([-2.2880, -3.0929, -3.0531, -3.5299, -3.6120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2354, device='cuda:0', dtype=torch.float64)
tensor([-2.2718, -3.0713, -3.0677, -3.5723, -3.5806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8008, device='cuda:0', dtype=torch.float64)
tensor([-2.2572, -3.0566, -3.0814, -3.6180, -3.5565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8051, device='cuda:0', dtype=torch.float64)
tensor([-2.2447, -3.0454, -3.0887, -3.6572, -3.5435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0135, device='cuda:0', dtype=torch.float64)
tensor([-2.2363, -3.0430, -3.0947, -3.6987, -3.5409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8664, device='cuda:0', dtype=torch.float64)
tensor([-2.2311, -3.0517, -3.1035, -3.7470, -3.5539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7287, device='cuda:0', dtype=torch.float64)
tensor([-2.2335, -3.0528, -3.1039, -3.7606, -3.5556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5743, device='cuda:0', dtype=torch.float64)
tensor([-2.2404, -3.0417, -3.0963, -3.7390, -3.5458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2220, device='cuda:0', dtype=torch.float64)
tensor([-2.2623, -3.0402, -3.0780, -3.6967, -3.5439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8169, device='cuda:0', dtype=torch.float64)
tensor([-2.2912, -3.0541, -3.0671, -3.6631, -3.5515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7704, device='cuda:0', dtype=torch.float64)
tensor([-2.3169, -3.0740, -3.0656, -3.6348, -3.5637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1197, device='cuda:0', dtype=torch.float64)
tensor([-2.3360, -3.0940, -3.0694, -3.6137, -3.5783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1944, device='cuda:0', dtype=torch.float64)
tensor([-2.3446, -3.0978, -3.0771, -3.5971, -3.5860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1649, device='cuda:0', dtype=torch.float64)
tensor([-2.3537, -3.0966, -3.0883, -3.5959, -3.5910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8986, device='cuda:0', dtype=torch.float64)
tensor([-2.3649, -3.1002, -3.0961, -3.6024, -3.5998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7288, device='cuda:0', dtype=torch.float64)
tensor([-2.3697, -3.1105, -3.1021, -3.6077, -3.6136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8277, device='cuda:0', dtype=torch.float64)
tensor([-2.3729, -3.1241, -3.1007, -3.5870, -3.6201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0906, device='cuda:0', dtype=torch.float64)
tensor([-2.3726, -3.1308, -3.1053, -3.5628, -3.6297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8659, device='cuda:0', dtype=torch.float64)
tensor([-2.3696, -3.1424, -3.1089, -3.5496, -3.6335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2532, device='cuda:0', dtype=torch.float64)
tensor([-2.3638, -3.1566, -3.1195, -3.5607, -3.6375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8346, device='cuda:0', dtype=torch.float64)
tensor([-2.3499, -3.1682, -3.1274, -3.5627, -3.6405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9438, device='cuda:0', dtype=torch.float64)
tensor([-2.3466, -3.1953, -3.1307, -3.5617, -3.6437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7623, device='cuda:0', dtype=torch.float64)
tensor([-2.3564, -3.2264, -3.1306, -3.5651, -3.6546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2595, device='cuda:0', dtype=torch.float64)
tensor([-2.3627, -3.2577, -3.1359, -3.6017, -3.6701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1088, device='cuda:0', dtype=torch.float64)
tensor([-2.3661, -3.2710, -3.1428, -3.6280, -3.6783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8207, device='cuda:0', dtype=torch.float64)
tensor([-2.3637, -3.2815, -3.1502, -3.6378, -3.6860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2300, device='cuda:0', dtype=torch.float64)
tensor([-2.3681, -3.3057, -3.1606, -3.6698, -3.6974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1654, device='cuda:0', dtype=torch.float64)
tensor([-2.3713, -3.3334, -3.1739, -3.7346, -3.7154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8751, device='cuda:0', dtype=torch.float64)
tensor([-2.3719, -3.3557, -3.1879, -3.7561, -3.7297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8334, device='cuda:0', dtype=torch.float64)
tensor([-2.3791, -3.3669, -3.1947, -3.7397, -3.7400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8100, device='cuda:0', dtype=torch.float64)
tensor([-2.3854, -3.3728, -3.1967, -3.7101, -3.7416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1432, device='cuda:0', dtype=torch.float64)
tensor([-2.3981, -3.3768, -3.1956, -3.6915, -3.7437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8535, device='cuda:0', dtype=torch.float64)
tensor([-2.4086, -3.3791, -3.1920, -3.6750, -3.7467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7238, device='cuda:0', dtype=torch.float64)
tensor([-2.4189, -3.3761, -3.1920, -3.6675, -3.7561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5194, device='cuda:0', dtype=torch.float64)
tensor([-2.4265, -3.3729, -3.1952, -3.6694, -3.7583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7762, device='cuda:0', dtype=torch.float64)
tensor([-2.4346, -3.3709, -3.1984, -3.6650, -3.7586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0864, device='cuda:0', dtype=torch.float64)
tensor([-2.4372, -3.3631, -3.2062, -3.6719, -3.7590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9677, device='cuda:0', dtype=torch.float64)
tensor([-2.4417, -3.3548, -3.2182, -3.6642, -3.7549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9224, device='cuda:0', dtype=torch.float64)
tensor([-2.4455, -3.3469, -3.2213, -3.6679, -3.7501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0042, device='cuda:0', dtype=torch.float64)
tensor([-2.4507, -3.3406, -3.2257, -3.6794, -3.7455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6310, device='cuda:0', dtype=torch.float64)
tensor([-2.4577, -3.3370, -3.2333, -3.7015, -3.7496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7361, device='cuda:0', dtype=torch.float64)
tensor([-2.4583, -3.3242, -3.2410, -3.7202, -3.7431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3709, device='cuda:0', dtype=torch.float64)
tensor([-2.4505, -3.3084, -3.2524, -3.7408, -3.7339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8075, device='cuda:0', dtype=torch.float64)
tensor([-2.4458, -3.2956, -3.2660, -3.7394, -3.7217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8952, device='cuda:0', dtype=torch.float64)
tensor([-2.4501, -3.2902, -3.2782, -3.7378, -3.7165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0404, device='cuda:0', dtype=torch.float64)
tensor([-2.4597, -3.2899, -3.2869, -3.7536, -3.7128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8275, device='cuda:0', dtype=torch.float64)
tensor([-2.4743, -3.3005, -3.3003, -3.7833, -3.7202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1268, device='cuda:0', dtype=torch.float64)
tensor([-2.4944, -3.3165, -3.3091, -3.7979, -3.7283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6721, device='cuda:0', dtype=torch.float64)
tensor([-2.5126, -3.3325, -3.3134, -3.8319, -3.7403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0537, device='cuda:0', dtype=torch.float64)
tensor([-2.5323, -3.3458, -3.3131, -3.8742, -3.7532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1624, device='cuda:0', dtype=torch.float64)
tensor([-2.5516, -3.3635, -3.3092, -3.8937, -3.7673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7142, device='cuda:0', dtype=torch.float64)
tensor([-2.5712, -3.3795, -3.3053, -3.9136, -3.7850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5214, device='cuda:0', dtype=torch.float64)
tensor([-2.5883, -3.3921, -3.3038, -3.8886, -3.8013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9153, device='cuda:0', dtype=torch.float64)
tensor([-2.6048, -3.4074, -3.3024, -3.8314, -3.8138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8136, device='cuda:0', dtype=torch.float64)
tensor([-2.6213, -3.4226, -3.3008, -3.7832, -3.8244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3663, device='cuda:0', dtype=torch.float64)
tensor([-2.6369, -3.4382, -3.3048, -3.7535, -3.8474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1400, device='cuda:0', dtype=torch.float64)
tensor([-2.6508, -3.4591, -3.3136, -3.7220, -3.8578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0429, device='cuda:0', dtype=torch.float64)
tensor([-2.6720, -3.4849, -3.3284, -3.7252, -3.8764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0644, device='cuda:0', dtype=torch.float64)
tensor([-2.6831, -3.4941, -3.3427, -3.7414, -3.8972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8031, device='cuda:0', dtype=torch.float64)
tensor([-2.6946, -3.4994, -3.3585, -3.7639, -3.9160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0403, device='cuda:0', dtype=torch.float64)
tensor([-2.6984, -3.4960, -3.3754, -3.7727, -3.9373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6616, device='cuda:0', dtype=torch.float64)
tensor([-2.6966, -3.4999, -3.3977, -3.7864, -3.9649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3461, device='cuda:0', dtype=torch.float64)
tensor([-2.6969, -3.5101, -3.4219, -3.8009, -3.9895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8747, device='cuda:0', dtype=torch.float64)
tensor([-2.6912, -3.5143, -3.4425, -3.8167, -4.0070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1768, device='cuda:0', dtype=torch.float64)
tensor([-2.6892, -3.4982, -3.4433, -3.7871, -4.0012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0206, device='cuda:0', dtype=torch.float64)
tensor([-2.6966, -3.4965, -3.4378, -3.7585, -3.9853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9084, device='cuda:0', dtype=torch.float64)
tensor([-2.7168, -3.5139, -3.4298, -3.7524, -3.9827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7682, device='cuda:0', dtype=torch.float64)
tensor([-2.7410, -3.5350, -3.4260, -3.7628, -3.9940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9646, device='cuda:0', dtype=torch.float64)
tensor([-2.7610, -3.5520, -3.4267, -3.7972, -4.0067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2893, device='cuda:0', dtype=torch.float64)
tensor([-2.7797, -3.5588, -3.4259, -3.8599, -4.0214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9953, device='cuda:0', dtype=torch.float64)
tensor([-2.7978, -3.5569, -3.4401, -3.9233, -4.0301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7908, device='cuda:0', dtype=torch.float64)
tensor([-2.8220, -3.5563, -3.4596, -4.0203, -4.0394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0170, device='cuda:0', dtype=torch.float64)
tensor([-2.8479, -3.5618, -3.4777, -4.1747, -4.0473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0242, device='cuda:0', dtype=torch.float64)
tensor([-2.8693, -3.5664, -3.5043, -4.4578, -4.0637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0270, device='cuda:0', dtype=torch.float64)
tensor([-2.8990, -3.5986, -3.5254, -4.7406, -4.0876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8683, device='cuda:0', dtype=torch.float64)
tensor([-2.9269, -3.6388, -3.5393, -4.9243, -4.1140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9999, device='cuda:0', dtype=torch.float64)
tensor([-2.9576, -3.6786, -3.5371, -4.9590, -4.1343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0716, device='cuda:0', dtype=torch.float64)
tensor([-2.9950, -3.7038, -3.5209, -4.6531, -4.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8004, device='cuda:0', dtype=torch.float64)
tensor([-3.0490, -3.7444, -3.5017, -4.4614, -4.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7709, device='cuda:0', dtype=torch.float64)
tensor([-3.1060, -3.7957, -3.4907, -4.5573, -4.2037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6854, device='cuda:0', dtype=torch.float64)
tensor([-3.1638, -3.8443, -3.4907, -5.1282, -4.2503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6584, device='cuda:0', dtype=torch.float64)
tensor([-3.2081, -3.8711, -3.4992, -5.2847, -4.2931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0943, device='cuda:0', dtype=torch.float64)
tensor([-3.2355, -3.8660, -3.5087, -4.5961, -4.3182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8439, device='cuda:0', dtype=torch.float64)
tensor([-3.2629, -3.8742, -3.5201, -4.2982, -4.3504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2167, device='cuda:0', dtype=torch.float64)
tensor([-3.2798, -3.8783, -3.5486, -4.1958, -4.3818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3220, device='cuda:0', dtype=torch.float64)
tensor([-3.3013, -3.8997, -3.5730, -4.1971, -4.4219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7211, device='cuda:0', dtype=torch.float64)
tensor([-3.3247, -3.9267, -3.5909, -4.2063, -4.4656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6830, device='cuda:0', dtype=torch.float64)
tensor([-3.3521, -3.9527, -3.6042, -4.1997, -4.5099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6542, device='cuda:0', dtype=torch.float64)
tensor([-3.3828, -3.9864, -3.6206, -4.2052, -4.5861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8002, device='cuda:0', dtype=torch.float64)
tensor([-3.4155, -4.0243, -3.6329, -4.2210, -4.6593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6560, device='cuda:0', dtype=torch.float64)
tensor([-3.4554, -4.0669, -3.6464, -4.2508, -4.7649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4501, device='cuda:0', dtype=torch.float64)
tensor([-3.4970, -4.1153, -3.6683, -4.2923, -4.8908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0300, device='cuda:0', dtype=torch.float64)
tensor([-3.5540, -4.1814, -3.6807, -4.3380, -5.0070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1228, device='cuda:0', dtype=torch.float64)
tensor([-3.6088, -4.2682, -3.6972, -4.4312, -5.1204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0577, device='cuda:0', dtype=torch.float64)
tensor([-3.6716, -4.3537, -3.7084, -4.5365, -5.2861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9700, device='cuda:0', dtype=torch.float64)
tensor([-3.7405, -4.4121, -3.7226, -4.6376, -5.5615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8367, device='cuda:0', dtype=torch.float64)
tensor([-3.7980, -4.4445, -3.7511, -4.7529, -5.7473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8601, device='cuda:0', dtype=torch.float64)
tensor([-3.8478, -4.4828, -3.7791, -4.8914, -6.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8736, device='cuda:0', dtype=torch.float64)
tensor([-3.8908, -4.5088, -3.8120, -4.9333, -6.1938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9132, device='cuda:0', dtype=torch.float64)
tensor([-3.9233, -4.5513, -3.8455, -4.9750, -6.4034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7900, device='cuda:0', dtype=torch.float64)
tensor([-3.9558, -4.5991, -3.8788, -4.9923, -6.3623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8663, device='cuda:0', dtype=torch.float64)
tensor([-3.9854, -4.6699, -3.9130, -5.0298, -6.3450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6396, device='cuda:0', dtype=torch.float64)
tensor([-4.0181, -4.7397, -3.9399, -5.0904, -6.3955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1983, device='cuda:0', dtype=torch.float64)
tensor([-4.0417, -4.8059, -3.9722, -5.1962, -6.5566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7711, device='cuda:0', dtype=torch.float64)
tensor([-4.0743, -4.8825, -4.0056, -5.3497, -6.7975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1288, device='cuda:0', dtype=torch.float64)
tensor([-4.1277, -4.9891, -4.0427, -5.4940, -6.9843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7772, device='cuda:0', dtype=torch.float64)
tensor([-4.1863, -5.1003, -4.0798, -5.6340, -6.9928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6292, device='cuda:0', dtype=torch.float64)
tensor([-4.2511, -5.1833, -4.1232, -5.7804, -7.0454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6931, device='cuda:0', dtype=torch.float64)
tensor([-4.3202, -5.3208, -4.1791, -5.9411, -6.9383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7144, device='cuda:0', dtype=torch.float64)
tensor([-4.3929, -5.4921, -4.2382, -6.1628, -6.8154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8802, device='cuda:0', dtype=torch.float64)
tensor([-4.4850, -5.7215, -4.3151, -6.4811, -6.6086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5666, device='cuda:0', dtype=torch.float64)
tensor([-4.5928, -5.9953, -4.4212, -6.9927, -6.4090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8067, device='cuda:0', dtype=torch.float64)
tensor([-4.6900, -6.3014, -4.5702, -7.5877, -6.1309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8660, device='cuda:0', dtype=torch.float64)
tensor([-4.7994, -6.5227, -4.7572, -8.4485, -5.9652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7036, device='cuda:0', dtype=torch.float64)
tensor([-4.9171, -6.6360, -5.0778, -9.4552, -5.9409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8179, device='cuda:0', dtype=torch.float64)
tensor([ -5.0557,  -6.7651,  -5.4715, -10.4501,  -6.1089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7158, device='cuda:0', dtype=torch.float64)
tensor([ -5.2064,  -6.9679,  -5.9142, -11.4713,  -6.3437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6511, device='cuda:0', dtype=torch.float64)
tensor([ -5.3293,  -7.3709,  -6.4836, -12.7669,  -6.7020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6053, device='cuda:0', dtype=torch.float64)
tensor([ -5.4766,  -7.9013,  -7.0320, -14.0936,  -7.0785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5980, device='cuda:0', dtype=torch.float64)
tensor([ -5.6372,  -8.4605,  -7.5358, -15.4904,  -7.3550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0580, device='cuda:0', dtype=torch.float64)
tensor([ -5.7712,  -8.9051,  -8.0141, -16.6846,  -7.5666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6700, device='cuda:0', dtype=torch.float64)
tensor([ -5.9172,  -9.3886,  -8.3671, -18.1104,  -7.6689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5677, device='cuda:0', dtype=torch.float64)
tensor([ -6.1014,  -9.9739,  -8.9393, -19.4136,  -7.8225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6962, device='cuda:0', dtype=torch.float64)
tensor([ -6.2651, -10.8369,  -9.7555, -21.0597,  -8.1955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3443, device='cuda:0', dtype=torch.float64)
tensor([ -6.4510, -11.4960, -10.5932, -22.3027,  -8.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8308, device='cuda:0', dtype=torch.float64)
tensor([ -6.6682, -12.3676, -11.4665, -23.7935,  -8.9596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8572, device='cuda:0', dtype=torch.float64)
tensor([ -6.7926, -13.2767, -12.2754, -25.5015,  -9.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6869, device='cuda:0', dtype=torch.float64)
tensor([ -6.8939, -13.9455, -12.9089, -27.1388,  -9.7240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0353, device='cuda:0', dtype=torch.float64)
tensor([ -6.9726, -15.7030, -13.8929, -30.3751, -10.7806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9379, device='cuda:0', dtype=torch.float64)
tensor([ -7.1014, -17.0775, -14.7739, -33.1706, -11.5368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5845, device='cuda:0', dtype=torch.float64)
tensor([ -7.1950, -18.2882, -15.5174, -35.6550, -12.2284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9023, device='cuda:0', dtype=torch.float64)
tensor([ -7.2906, -19.6608, -16.2114, -38.3148, -13.3094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7754, device='cuda:0', dtype=torch.float64)
tensor([ -7.3983, -21.1424, -17.2728, -41.1959, -14.2982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5689, device='cuda:0', dtype=torch.float64)
tensor([ -7.4982, -22.7050, -18.0215, -43.8477, -14.9939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4075, device='cuda:0', dtype=torch.float64)
tensor([ -7.6263, -24.3676, -18.8590, -47.1823, -15.6323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3153, device='cuda:0', dtype=torch.float64)
tensor([ -7.8122, -25.2990, -19.5054, -49.4107, -15.8668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6158, device='cuda:0', dtype=torch.float64)
tensor([ -7.9322, -25.7857, -20.0023, -51.0085, -16.2646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7450, device='cuda:0', dtype=torch.float64)
tensor([ -8.0622, -26.0000, -20.2012, -52.2439, -16.4756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6386, device='cuda:0', dtype=torch.float64)
tensor([ -8.1548, -26.0942, -20.4756, -53.3752, -16.9724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3575, device='cuda:0', dtype=torch.float64)
tensor([ -8.3691, -26.0767, -20.5610, -54.3097, -17.2298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5643, device='cuda:0', dtype=torch.float64)
tensor([ -8.6650, -25.5523, -20.1818, -54.0726, -16.8148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8906, device='cuda:0', dtype=torch.float64)
tensor([ -8.9371, -25.4136, -19.9416, -54.7123, -17.0755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5822, device='cuda:0', dtype=torch.float64)
tensor([ -9.3859, -25.5688, -19.6370, -55.1354, -17.4936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8580, device='cuda:0', dtype=torch.float64)
tensor([-10.0668, -25.3067, -19.8347, -54.8838, -17.8918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8238, device='cuda:0', dtype=torch.float64)
tensor([-10.9079, -23.9086, -19.6334, -51.7087, -17.7784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6150, device='cuda:0', dtype=torch.float64)
tensor([-11.7530, -22.7849, -19.5344, -49.0972, -17.5980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9405, device='cuda:0', dtype=torch.float64)
tensor([-12.5072, -21.5357, -19.0538, -45.2264, -16.3427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6696, device='cuda:0', dtype=torch.float64)
tensor([-13.2098, -20.6227, -18.5316, -42.2088, -14.9337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7083, device='cuda:0', dtype=torch.float64)
tensor([-13.9115, -19.9150, -18.2542, -39.7190, -13.9840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4676, device='cuda:0', dtype=torch.float64)
tensor([-14.5348, -19.5502, -18.0939, -38.4373, -13.6530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4486, device='cuda:0', dtype=torch.float64)
tensor([-15.1273, -19.3344, -17.9856, -37.5919, -13.4614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5623, device='cuda:0', dtype=torch.float64)
tensor([-15.8079, -19.1507, -18.0610, -37.2224, -13.5094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7936, device='cuda:0', dtype=torch.float64)
tensor([-16.6347, -18.9107, -18.2485, -37.1894, -13.8065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5343, device='cuda:0', dtype=torch.float64)
tensor([-17.2866, -18.4904, -18.3122, -37.1189, -14.0441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3307, device='cuda:0', dtype=torch.float64)
tensor([-18.0377, -18.2510, -18.4338, -37.4664, -14.2237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8016, device='cuda:0', dtype=torch.float64)
tensor([-18.8728, -18.2695, -18.8337, -38.0574, -14.8139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7483, device='cuda:0', dtype=torch.float64)
tensor([-19.5460, -18.3228, -19.1013, -38.7255, -14.9233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7837, device='cuda:0', dtype=torch.float64)
tensor([-20.1220, -18.3596, -19.5031, -39.5699, -14.9561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6375, device='cuda:0', dtype=torch.float64)
tensor([-20.8877, -18.2186, -19.7554, -39.9715, -14.9406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9028, device='cuda:0', dtype=torch.float64)
tensor([-21.6156, -18.0771, -19.9586, -40.3561, -14.9631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4899, device='cuda:0', dtype=torch.float64)
tensor([-22.1985, -18.0884, -19.8900, -40.2236, -14.7599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8481, device='cuda:0', dtype=torch.float64)
tensor([-22.6350, -18.0669, -19.7160, -40.2135, -14.6938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4890, device='cuda:0', dtype=torch.float64)
tensor([-22.8160, -18.4284, -19.6416, -40.7425, -14.4930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8348, device='cuda:0', dtype=torch.float64)
tensor([-22.7999, -19.0458, -19.7389, -41.7636, -14.2585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5167, device='cuda:0', dtype=torch.float64)
tensor([-23.0545, -19.8776, -19.8677, -43.1657, -14.0861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5554, device='cuda:0', dtype=torch.float64)
tensor([-23.2060, -20.7437, -20.0498, -44.7324, -14.2607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3443, device='cuda:0', dtype=torch.float64)
tensor([-23.1450, -21.3470, -20.1822, -45.9996, -14.4678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9252, device='cuda:0', dtype=torch.float64)
tensor([-23.1020, -21.5273, -20.1089, -46.5344, -14.3080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9790, device='cuda:0', dtype=torch.float64)
tensor([-22.9360, -21.6396, -20.2344, -47.3600, -14.1394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6690, device='cuda:0', dtype=torch.float64)
tensor([-22.8467, -21.7946, -20.6456, -48.7054, -14.0284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7701, device='cuda:0', dtype=torch.float64)
tensor([-22.6608, -22.0524, -21.3797, -50.4749, -14.0488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8938, device='cuda:0', dtype=torch.float64)
tensor([-22.5600, -22.6405, -22.7959, -53.3945, -14.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5439, device='cuda:0', dtype=torch.float64)
tensor([-22.4453, -22.5768, -23.9865, -55.6105, -14.6554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4605, device='cuda:0', dtype=torch.float64)
tensor([-22.5279, -22.5466, -25.3632, -57.6650, -14.9441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8306, device='cuda:0', dtype=torch.float64)
tensor([-22.6835, -22.4691, -27.2220, -59.6436, -15.6329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7140, device='cuda:0', dtype=torch.float64)
tensor([-22.6932, -22.4323, -28.3910, -61.0889, -16.4367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6494, device='cuda:0', dtype=torch.float64)
tensor([-22.5935, -22.4278, -29.9864, -62.5977, -17.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6388, device='cuda:0', dtype=torch.float64)
tensor([-22.6113, -23.1434, -32.5098, -65.7842, -18.0224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3827, device='cuda:0', dtype=torch.float64)
tensor([-22.2961, -24.2343, -34.6786, -69.0927, -18.9455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9299, device='cuda:0', dtype=torch.float64)
tensor([-21.9594, -24.7186, -35.7240, -70.4239, -19.4287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7371, device='cuda:0', dtype=torch.float64)
tensor([-21.7851, -26.1482, -38.0668, -74.4295, -20.8818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8439, device='cuda:0', dtype=torch.float64)
tensor([-21.6724, -27.5731, -40.4034, -78.4624, -21.8869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8496, device='cuda:0', dtype=torch.float64)
tensor([-21.4228, -28.0337, -42.0534, -80.9225, -22.3936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7327, device='cuda:0', dtype=torch.float64)
tensor([-21.2532, -27.8999, -43.1712, -81.6678, -22.3160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7787, device='cuda:0', dtype=torch.float64)
tensor([-21.1267, -27.8797, -44.4105, -82.9374, -22.3833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5349, device='cuda:0', dtype=torch.float64)
tensor([-20.8125, -27.6277, -45.2963, -83.2616, -22.1409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7486, device='cuda:0', dtype=torch.float64)
tensor([-20.4415, -26.4974, -45.3078, -81.1288, -21.0641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8361, device='cuda:0', dtype=torch.float64)
tensor([-20.1915, -24.3788, -44.6683, -77.5289, -19.3586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9928, device='cuda:0', dtype=torch.float64)
tensor([-19.8697, -23.3185, -44.9146, -76.4632, -19.1252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8138, device='cuda:0', dtype=torch.float64)
tensor([-19.5994, -22.5767, -45.8483, -76.4790, -19.0165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4346, device='cuda:0', dtype=torch.float64)
tensor([-19.5383, -22.0585, -47.0289, -76.8964, -19.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0543, device='cuda:0', dtype=torch.float64)
tensor([-19.5056, -21.6768, -47.9485, -76.7506, -19.3959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6344, device='cuda:0', dtype=torch.float64)
tensor([-19.5583, -21.2032, -48.3213, -76.9081, -19.4759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8353, device='cuda:0', dtype=torch.float64)
tensor([-19.6717, -20.6056, -48.2518, -77.8165, -19.9264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7459, device='cuda:0', dtype=torch.float64)
tensor([-19.6776, -20.7366, -49.1204, -80.4123, -20.9962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6951, device='cuda:0', dtype=torch.float64)
tensor([-19.7018, -21.0322, -49.5596, -82.9691, -21.6866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0733, device='cuda:0', dtype=torch.float64)
tensor([-19.8965, -21.0810, -49.9488, -85.6081, -22.4388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8795, device='cuda:0', dtype=torch.float64)
tensor([-19.9610, -21.3282, -50.6010, -89.5299, -23.5475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6838, device='cuda:0', dtype=torch.float64)
tensor([-19.8865, -20.8373, -49.8115, -89.1508, -23.1079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8454, device='cuda:0', dtype=torch.float64)
tensor([-19.7262, -19.9800, -48.6926, -87.0159, -22.0711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5841, device='cuda:0', dtype=torch.float64)
tensor([-19.4604, -19.2296, -47.5859, -85.1974, -21.0029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4126, device='cuda:0', dtype=torch.float64)
tensor([-19.3822, -18.9675, -47.3197, -85.3305, -20.7034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7268, device='cuda:0', dtype=torch.float64)
tensor([-19.3965, -19.2095, -47.5479, -86.5343, -20.8287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8561, device='cuda:0', dtype=torch.float64)
tensor([-19.2273, -19.4284, -46.7523, -85.2278, -20.1444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8810, device='cuda:0', dtype=torch.float64)
tensor([-19.0818, -19.9692, -46.6135, -86.3431, -20.0498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5449, device='cuda:0', dtype=torch.float64)
tensor([-18.8598, -20.4546, -46.6051, -87.3050, -20.0604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7647, device='cuda:0', dtype=torch.float64)
tensor([-18.4366, -21.0279, -47.0664, -88.4798, -20.4457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5347, device='cuda:0', dtype=torch.float64)
tensor([-18.0135, -21.6139, -47.4847, -89.4702, -20.9955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7012, device='cuda:0', dtype=torch.float64)
tensor([-17.5405, -21.5738, -47.0916, -88.3702, -21.2188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4912, device='cuda:0', dtype=torch.float64)
tensor([-17.1047, -21.1344, -46.5730, -85.2778, -20.9105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5285, device='cuda:0', dtype=torch.float64)
tensor([-16.6664, -20.4893, -45.9657, -81.6888, -20.6684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7087, device='cuda:0', dtype=torch.float64)
tensor([-16.1441, -20.2295, -46.3012, -80.3947, -21.0334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4904, device='cuda:0', dtype=torch.float64)
tensor([-15.6580, -19.9280, -47.0932, -79.4320, -21.3621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5475, device='cuda:0', dtype=torch.float64)
tensor([-15.1509, -19.2370, -47.2947, -76.0240, -21.0975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8748, device='cuda:0', dtype=torch.float64)
tensor([-14.9203, -18.6700, -47.8504, -74.1706, -21.2502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8042, device='cuda:0', dtype=torch.float64)
tensor([-14.6170, -17.8724, -47.1728, -70.3066, -20.8096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4565, device='cuda:0', dtype=torch.float64)
tensor([-14.3031, -17.1975, -46.3260, -66.8147, -20.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6516, device='cuda:0', dtype=torch.float64)
tensor([-14.1992, -17.1403, -46.2239, -66.2959, -20.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7090, device='cuda:0', dtype=torch.float64)
tensor([-14.2551, -17.2294, -46.5719, -66.6482, -20.9070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7663, device='cuda:0', dtype=torch.float64)
tensor([-14.3306, -17.0324, -46.7467, -65.0886, -20.8542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6563, device='cuda:0', dtype=torch.float64)
tensor([-14.4171, -16.4526, -46.2301, -62.0149, -20.2630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6811, device='cuda:0', dtype=torch.float64)
tensor([-14.7289, -15.7715, -45.8572, -58.9428, -19.7572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8920, device='cuda:0', dtype=torch.float64)
tensor([-15.4394, -14.9876, -45.6754, -55.3549, -19.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4288, device='cuda:0', dtype=torch.float64)
tensor([-16.1927, -14.5829, -46.1912, -54.0395, -19.0525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7176, device='cuda:0', dtype=torch.float64)
tensor([-17.1056, -14.4093, -47.5602, -53.7365, -18.9496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4621, device='cuda:0', dtype=torch.float64)
tensor([-18.2805, -14.3218, -49.3551, -53.2857, -18.6049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7578, device='cuda:0', dtype=torch.float64)
tensor([-19.2708, -14.4193, -50.7827, -53.5417, -18.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8321, device='cuda:0', dtype=torch.float64)
tensor([-20.1691, -14.5464, -52.7959, -54.3729, -18.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5672, device='cuda:0', dtype=torch.float64)
tensor([-20.9454, -14.6632, -54.8451, -55.4097, -18.3449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7319, device='cuda:0', dtype=torch.float64)
tensor([-21.6256, -14.6576, -56.4126, -55.7806, -18.1916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8484, device='cuda:0', dtype=torch.float64)
tensor([-22.1223, -14.7440, -58.1462, -56.0953, -18.3086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6910, device='cuda:0', dtype=torch.float64)
tensor([-22.7738, -14.7243, -59.5907, -56.2880, -18.3341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0130, device='cuda:0', dtype=torch.float64)
tensor([-23.3511, -14.8411, -60.3806, -56.2671, -18.2523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6945, device='cuda:0', dtype=torch.float64)
tensor([-23.8663, -14.9870, -61.3951, -56.3822, -18.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2908, device='cuda:0', dtype=torch.float64)
tensor([-24.5022, -15.1271, -62.4595, -56.6143, -18.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0822, device='cuda:0', dtype=torch.float64)
tensor([-25.1779, -15.0054, -63.3934, -56.8518, -18.5378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9247, device='cuda:0', dtype=torch.float64)
tensor([-25.6795, -14.8335, -63.8056, -56.4583, -18.7541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5827, device='cuda:0', dtype=torch.float64)
tensor([-25.9840, -14.6283, -63.7740, -55.7443, -18.9270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8249, device='cuda:0', dtype=torch.float64)
tensor([-26.3552, -14.3652, -64.0089, -55.1179, -18.8853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9834, device='cuda:0', dtype=torch.float64)
tensor([-26.4717, -14.2822, -63.1268, -54.4599, -18.5521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6275, device='cuda:0', dtype=torch.float64)
tensor([-26.5929, -14.2820, -62.1473, -54.0488, -18.4749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9861, device='cuda:0', dtype=torch.float64)
tensor([-26.5625, -14.4788, -61.1367, -53.9880, -18.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5683, device='cuda:0', dtype=torch.float64)
tensor([-26.1993, -14.6114, -59.7827, -53.4426, -17.8699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5866, device='cuda:0', dtype=torch.float64)
tensor([-25.9213, -14.6981, -58.3469, -52.5345, -17.5962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7331, device='cuda:0', dtype=torch.float64)
tensor([-25.4609, -14.9133, -56.8956, -51.6458, -17.4188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6193, device='cuda:0', dtype=torch.float64)
tensor([-25.0137, -15.0446, -55.3526, -50.8337, -17.4539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3818, device='cuda:0', dtype=torch.float64)
tensor([-24.7112, -15.0574, -54.1818, -50.2099, -17.6537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9051, device='cuda:0', dtype=torch.float64)
tensor([-24.5917, -15.3723, -53.1123, -50.0082, -17.9218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4034, device='cuda:0', dtype=torch.float64)
tensor([-24.6850, -15.6426, -52.5967, -50.2361, -18.0961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5108, device='cuda:0', dtype=torch.float64)
tensor([-24.5631, -15.9657, -52.0187, -50.2035, -18.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5181, device='cuda:0', dtype=torch.float64)
tensor([-24.4995, -16.4905, -51.5636, -50.5065, -18.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4030, device='cuda:0', dtype=torch.float64)
tensor([-24.3934, -16.6605, -51.0200, -50.2140, -18.3124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7859, device='cuda:0', dtype=torch.float64)
tensor([-24.0056, -16.8644, -50.1001, -49.3633, -18.0617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8952, device='cuda:0', dtype=torch.float64)
tensor([-23.8447, -17.0886, -49.3668, -48.2404, -17.7339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8042, device='cuda:0', dtype=torch.float64)
tensor([-23.8463, -17.2491, -48.8178, -47.4107, -17.4732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6596, device='cuda:0', dtype=torch.float64)
tensor([-23.7900, -17.4773, -48.0392, -47.0014, -17.4474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7956, device='cuda:0', dtype=torch.float64)
tensor([-23.8434, -17.9953, -47.2049, -47.1392, -17.7660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3486, device='cuda:0', dtype=torch.float64)
tensor([-23.9087, -18.2654, -46.4525, -46.8173, -17.8651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6960, device='cuda:0', dtype=torch.float64)
tensor([-24.1481, -18.2287, -45.9459, -46.0327, -17.7844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6681, device='cuda:0', dtype=torch.float64)
tensor([-24.5750, -18.5259, -45.8012, -46.2147, -18.0862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7029, device='cuda:0', dtype=torch.float64)
tensor([-25.0082, -18.6516, -45.9439, -46.1208, -17.9715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6311, device='cuda:0', dtype=torch.float64)
tensor([-25.2818, -18.5957, -45.9992, -46.2349, -17.7419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5220, device='cuda:0', dtype=torch.float64)
tensor([-25.3751, -18.5719, -45.7270, -45.9516, -17.5223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7560, device='cuda:0', dtype=torch.float64)
tensor([-25.8455, -18.5815, -45.5362, -45.9748, -17.2778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2861, device='cuda:0', dtype=torch.float64)
tensor([-26.3898, -18.5224, -45.4599, -46.2159, -16.9426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5369, device='cuda:0', dtype=torch.float64)
tensor([-27.0531, -18.4479, -45.4685, -46.3020, -16.8579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6984, device='cuda:0', dtype=torch.float64)
tensor([-27.2423, -18.0833, -45.2159, -45.7798, -16.3699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0210, device='cuda:0', dtype=torch.float64)
tensor([-27.0032, -17.5231, -44.9955, -45.0759, -15.9806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4570, device='cuda:0', dtype=torch.float64)
tensor([-26.5635, -16.9876, -44.3949, -44.5922, -15.8100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6071, device='cuda:0', dtype=torch.float64)
tensor([-26.4140, -16.6956, -44.2963, -44.6352, -15.9532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9147, device='cuda:0', dtype=torch.float64)
tensor([-26.5024, -16.5990, -44.4064, -44.6403, -16.0524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4330, device='cuda:0', dtype=torch.float64)
tensor([-26.7605, -16.5359, -44.4465, -44.5717, -16.2125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4552, device='cuda:0', dtype=torch.float64)
tensor([-27.2568, -16.7249, -44.5283, -44.6882, -16.4482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7273, device='cuda:0', dtype=torch.float64)
tensor([-28.3479, -17.0051, -45.2565, -45.3865, -16.7316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7367, device='cuda:0', dtype=torch.float64)
tensor([-29.4416, -17.2912, -46.3141, -46.4663, -17.0934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9117, device='cuda:0', dtype=torch.float64)
tensor([-30.5061, -17.5708, -47.2951, -47.4722, -17.5556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8714, device='cuda:0', dtype=torch.float64)
tensor([-30.9891, -17.5544, -47.6440, -48.1819, -18.2785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5597, device='cuda:0', dtype=torch.float64)
tensor([-31.8065, -17.8318, -48.1639, -48.6587, -19.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7952, device='cuda:0', dtype=torch.float64)
tensor([-32.3663, -18.0587, -48.4397, -49.0557, -19.8818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4283, device='cuda:0', dtype=torch.float64)
tensor([-33.1850, -18.5163, -49.0399, -49.3998, -20.5778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5657, device='cuda:0', dtype=torch.float64)
tensor([-33.5662, -19.1539, -48.8714, -49.1253, -21.0304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7871, device='cuda:0', dtype=torch.float64)
tensor([-34.0818, -19.7581, -49.5504, -49.9048, -21.1041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5375, device='cuda:0', dtype=torch.float64)
tensor([-34.2993, -20.2980, -49.8572, -50.4724, -21.3833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5467, device='cuda:0', dtype=torch.float64)
tensor([-34.3352, -20.6379, -49.6217, -50.6132, -21.2965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6548, device='cuda:0', dtype=torch.float64)
tensor([-35.1126, -21.0952, -49.8704, -50.8495, -21.4472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8425, device='cuda:0', dtype=torch.float64)
tensor([-36.3308, -21.7076, -50.5496, -50.3593, -21.7599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1101, device='cuda:0', dtype=torch.float64)
tensor([-38.0358, -22.5266, -51.3799, -49.4969, -22.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6474, device='cuda:0', dtype=torch.float64)
tensor([-40.4515, -23.4568, -52.4634, -48.6359, -23.1049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2908, device='cuda:0', dtype=torch.float64)
tensor([-43.1863, -24.4643, -54.0461, -48.2994, -24.0614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5255, device='cuda:0', dtype=torch.float64)
tensor([-45.8676, -25.3175, -56.2067, -48.3009, -24.8215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5295, device='cuda:0', dtype=torch.float64)
tensor([-48.6370, -26.4526, -58.3160, -48.3156, -25.7102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8698, device='cuda:0', dtype=torch.float64)
tensor([-51.7884, -27.4906, -60.8178, -48.5831, -26.6028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5425, device='cuda:0', dtype=torch.float64)
tensor([-53.9653, -28.1192, -63.1542, -48.9477, -26.8118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8504, device='cuda:0', dtype=torch.float64)
tensor([-55.9077, -28.9832, -64.2879, -49.4123, -27.4348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4359, device='cuda:0', dtype=torch.float64)
tensor([-58.1801, -29.9370, -65.4178, -50.1500, -28.4898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7657, device='cuda:0', dtype=torch.float64)
tensor([-59.4556, -30.3960, -65.8371, -50.6046, -29.0121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6264, device='cuda:0', dtype=torch.float64)
tensor([-61.0260, -30.8502, -67.7112, -50.8995, -29.1915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8624, device='cuda:0', dtype=torch.float64)
tensor([-61.4252, -30.5959, -68.9136, -50.7334, -28.7228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5846, device='cuda:0', dtype=torch.float64)
tensor([-61.2910, -29.8479, -69.7035, -50.4194, -27.8014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3983, device='cuda:0', dtype=torch.float64)
tensor([-61.6716, -29.2666, -70.9140, -50.3476, -27.0884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7997, device='cuda:0', dtype=torch.float64)
tensor([-61.6892, -28.3556, -71.0401, -50.2137, -26.6304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9735, device='cuda:0', dtype=torch.float64)
tensor([-61.1052, -27.3708, -71.2934, -49.7508, -25.9273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4934, device='cuda:0', dtype=torch.float64)
tensor([-60.2875, -26.4094, -71.3842, -49.4170, -25.2849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4508, device='cuda:0', dtype=torch.float64)
tensor([-60.0804, -25.8576, -71.8043, -49.4655, -24.7521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3977, device='cuda:0', dtype=torch.float64)
tensor([-60.2859, -25.7715, -72.7125, -49.8900, -24.2786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6454, device='cuda:0', dtype=torch.float64)
tensor([-60.1094, -25.7383, -73.1177, -50.2655, -23.8792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6238, device='cuda:0', dtype=torch.float64)
tensor([-59.8299, -25.6061, -73.9008, -51.3859, -23.3381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6817, device='cuda:0', dtype=torch.float64)
tensor([-59.6575, -25.8294, -74.0643, -51.9831, -22.9313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9870, device='cuda:0', dtype=torch.float64)
tensor([-59.4953, -26.1451, -73.7898, -52.8313, -22.7031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7806, device='cuda:0', dtype=torch.float64)
tensor([-59.7542, -26.6492, -73.0658, -52.4595, -22.6401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4347, device='cuda:0', dtype=torch.float64)
tensor([-60.3123, -27.5183, -72.3767, -52.2535, -22.7880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3794, device='cuda:0', dtype=torch.float64)
tensor([-60.6584, -28.4785, -71.6233, -52.5568, -22.9956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7564, device='cuda:0', dtype=torch.float64)
tensor([-61.6515, -29.3651, -70.7683, -52.1217, -23.4268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6698, device='cuda:0', dtype=torch.float64)
tensor([-62.5089, -30.3758, -70.9186, -51.9799, -23.5553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5970, device='cuda:0', dtype=torch.float64)
tensor([-63.1915, -31.2634, -70.8412, -51.6119, -23.7550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2629, device='cuda:0', dtype=torch.float64)
tensor([-63.8238, -32.1934, -70.1697, -51.4244, -24.0607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7810, device='cuda:0', dtype=torch.float64)
tensor([-63.2821, -32.8631, -69.1317, -51.3329, -23.7797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7442, device='cuda:0', dtype=torch.float64)
tensor([-61.4865, -33.1028, -66.8941, -50.9451, -23.3070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5183, device='cuda:0', dtype=torch.float64)
tensor([-59.7382, -33.4731, -64.8647, -50.8096, -23.0278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6540, device='cuda:0', dtype=torch.float64)
tensor([-57.7737, -33.6223, -62.9952, -50.8025, -22.5736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4596, device='cuda:0', dtype=torch.float64)
tensor([-56.0059, -33.8220, -61.4500, -50.8559, -22.2099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5417, device='cuda:0', dtype=torch.float64)
tensor([-53.9565, -33.7699, -60.5934, -51.0357, -21.5085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3329, device='cuda:0', dtype=torch.float64)
tensor([-52.2076, -33.9627, -59.8721, -51.6421, -21.0161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5696, device='cuda:0', dtype=torch.float64)
tensor([-50.7379, -34.2341, -59.3656, -52.5858, -20.9099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1902, device='cuda:0', dtype=torch.float64)
tensor([-48.9842, -34.8220, -59.3898, -54.6591, -20.7618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9359, device='cuda:0', dtype=torch.float64)
tensor([-48.0534, -35.3837, -58.9287, -56.7017, -20.8753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3602, device='cuda:0', dtype=torch.float64)
tensor([-47.0355, -35.9409, -58.7944, -58.9611, -20.9526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8021, device='cuda:0', dtype=torch.float64)
tensor([-46.2105, -36.4374, -58.3785, -60.9407, -21.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8624, device='cuda:0', dtype=torch.float64)
tensor([-45.7590, -37.0876, -58.5800, -62.8191, -21.4533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5300, device='cuda:0', dtype=torch.float64)
tensor([-45.3451, -37.8735, -59.3185, -65.3968, -21.8481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5497, device='cuda:0', dtype=torch.float64)
tensor([-44.8016, -38.3442, -59.8693, -68.2185, -22.4128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6555, device='cuda:0', dtype=torch.float64)
tensor([-43.7761, -38.3888, -59.5766, -69.3715, -22.7323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3972, device='cuda:0', dtype=torch.float64)
tensor([-42.9457, -38.4957, -59.5741, -70.7007, -23.0792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6274, device='cuda:0', dtype=torch.float64)
tensor([-42.1564, -38.8245, -59.5179, -71.9701, -23.7028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6138, device='cuda:0', dtype=torch.float64)
tensor([-41.4418, -38.8052, -59.0931, -72.4391, -24.3438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7445, device='cuda:0', dtype=torch.float64)
tensor([-41.0091, -38.4509, -58.6255, -72.4897, -24.9436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8527, device='cuda:0', dtype=torch.float64)
tensor([-40.5913, -37.9805, -57.6817, -71.8705, -25.1269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8599, device='cuda:0', dtype=torch.float64)
tensor([-39.9027, -37.4918, -56.9948, -72.1519, -25.4203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4940, device='cuda:0', dtype=torch.float64)
tensor([-39.1357, -37.0208, -56.3355, -71.7687, -25.6887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6497, device='cuda:0', dtype=torch.float64)
tensor([-38.2464, -36.7961, -56.1383, -72.8367, -26.3152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7040, device='cuda:0', dtype=torch.float64)
tensor([-37.4507, -37.3428, -56.7749, -76.2625, -27.5555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6894, device='cuda:0', dtype=torch.float64)
tensor([-36.4970, -37.7584, -57.4876, -78.9899, -28.8833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3212, device='cuda:0', dtype=torch.float64)
tensor([-35.7083, -38.6519, -57.8552, -81.7895, -30.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5076, device='cuda:0', dtype=torch.float64)
tensor([-35.2616, -39.6383, -58.3787, -84.8600, -31.3296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4629, device='cuda:0', dtype=torch.float64)
tensor([-35.0070, -40.5209, -58.8361, -86.9976, -32.2143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5269, device='cuda:0', dtype=torch.float64)
tensor([-34.9216, -41.5408, -59.7487, -89.1289, -33.2108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6044, device='cuda:0', dtype=torch.float64)
tensor([-35.3372, -42.2800, -60.6108, -90.6628, -34.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5600, device='cuda:0', dtype=torch.float64)
tensor([-36.1190, -42.9386, -61.9504, -92.5072, -35.2413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6186, device='cuda:0', dtype=torch.float64)
tensor([-36.3283, -43.0802, -62.4451, -92.6449, -35.5613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7307, device='cuda:0', dtype=torch.float64)
tensor([-36.2926, -42.6040, -62.5749, -91.4988, -35.3095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4026, device='cuda:0', dtype=torch.float64)
tensor([-36.1430, -41.8690, -62.0442, -89.6775, -34.4202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4956, device='cuda:0', dtype=torch.float64)
tensor([-36.5177, -40.9694, -62.0917, -87.6595, -33.4890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5608, device='cuda:0', dtype=torch.float64)
tensor([-36.6206, -40.0686, -61.9150, -85.7262, -32.5643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5879, device='cuda:0', dtype=torch.float64)
tensor([-36.7639, -39.0474, -61.3896, -83.4869, -31.3909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5416, device='cuda:0', dtype=torch.float64)
tensor([-36.6000, -38.4885, -60.4516, -81.8383, -30.7623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8103, device='cuda:0', dtype=torch.float64)
tensor([-36.6306, -37.8867, -59.6236, -78.8622, -30.3316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4031, device='cuda:0', dtype=torch.float64)
tensor([-36.6314, -37.3978, -58.7526, -76.4166, -30.2762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5441, device='cuda:0', dtype=torch.float64)
tensor([-36.7367, -36.9824, -57.7802, -74.0519, -30.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2019, device='cuda:0', dtype=torch.float64)
tensor([-36.5941, -36.4356, -56.8937, -71.7535, -29.6711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4053, device='cuda:0', dtype=torch.float64)
tensor([-36.2269, -35.3529, -55.8112, -68.6732, -28.8382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9577, device='cuda:0', dtype=torch.float64)
tensor([-35.9116, -34.4285, -54.6087, -66.1824, -28.0633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8256, device='cuda:0', dtype=torch.float64)
tensor([-35.9272, -33.6163, -53.6318, -64.5644, -27.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8125, device='cuda:0', dtype=torch.float64)
tensor([-35.7202, -33.1047, -52.6023, -63.6019, -27.7567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7158, device='cuda:0', dtype=torch.float64)
tensor([-35.6570, -32.8507, -51.7449, -63.0835, -27.8659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5161, device='cuda:0', dtype=torch.float64)
tensor([-35.4647, -32.8306, -50.8828, -62.7529, -28.1051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4792, device='cuda:0', dtype=torch.float64)
tensor([-35.6348, -32.9266, -50.3451, -62.7364, -28.2502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6114, device='cuda:0', dtype=torch.float64)
tensor([-35.4182, -32.9523, -49.4348, -62.5028, -28.3363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6945, device='cuda:0', dtype=torch.float64)
tensor([-35.0394, -32.8978, -48.1052, -62.0997, -28.1995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7802, device='cuda:0', dtype=torch.float64)
tensor([-35.0115, -32.6013, -46.8806, -60.8658, -27.6917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4536, device='cuda:0', dtype=torch.float64)
tensor([-34.9655, -32.4610, -46.1490, -59.7202, -27.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5366, device='cuda:0', dtype=torch.float64)
tensor([-34.9064, -32.4992, -45.5832, -59.0276, -26.8547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7796, device='cuda:0', dtype=torch.float64)
tensor([-34.9679, -32.6859, -45.3671, -58.2557, -26.7959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5808, device='cuda:0', dtype=torch.float64)
tensor([-34.7769, -32.8913, -44.9594, -57.8121, -26.6439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4869, device='cuda:0', dtype=torch.float64)
tensor([-34.8612, -33.0364, -44.8030, -57.1135, -26.7950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4496, device='cuda:0', dtype=torch.float64)
tensor([-34.8674, -33.2275, -44.1798, -56.5274, -27.0419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4966, device='cuda:0', dtype=torch.float64)
tensor([-34.9658, -33.4842, -43.6887, -56.1083, -27.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5630, device='cuda:0', dtype=torch.float64)
tensor([-35.1883, -33.8143, -43.2600, -55.9789, -27.5942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6472, device='cuda:0', dtype=torch.float64)
tensor([-35.6161, -34.0981, -42.9630, -55.6355, -27.5393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6527, device='cuda:0', dtype=torch.float64)
tensor([-36.0569, -34.3671, -42.7009, -55.6577, -27.7406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4867, device='cuda:0', dtype=torch.float64)
tensor([-36.7548, -34.6093, -42.8819, -55.7801, -27.8129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7165, device='cuda:0', dtype=torch.float64)
tensor([-38.4340, -35.1662, -43.6724, -56.1476, -27.9239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2505, device='cuda:0', dtype=torch.float64)
tensor([-40.5259, -35.8796, -44.7213, -57.1029, -28.2071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6796, device='cuda:0', dtype=torch.float64)
tensor([-42.5888, -36.9577, -45.8004, -58.3241, -28.7489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5078, device='cuda:0', dtype=torch.float64)
tensor([-44.9162, -38.1238, -46.7593, -60.0992, -29.3583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4117, device='cuda:0', dtype=torch.float64)
tensor([-47.3565, -39.3484, -47.9098, -62.2094, -30.3071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3501, device='cuda:0', dtype=torch.float64)
tensor([-48.3690, -40.3405, -48.6709, -63.9785, -31.1261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5851, device='cuda:0', dtype=torch.float64)
tensor([-48.3359, -41.0911, -48.9977, -65.1030, -31.6685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7029, device='cuda:0', dtype=torch.float64)
tensor([-47.5591, -41.8384, -49.0704, -66.5536, -32.1960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5082, device='cuda:0', dtype=torch.float64)
tensor([-46.3644, -42.1534, -49.1009, -67.1862, -32.5519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6213, device='cuda:0', dtype=torch.float64)
tensor([-44.5083, -42.4259, -48.7612, -67.6030, -32.9494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3805, device='cuda:0', dtype=torch.float64)
tensor([-43.4803, -42.7646, -48.6170, -68.4301, -33.2769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6298, device='cuda:0', dtype=torch.float64)
tensor([-42.8436, -43.0336, -48.4690, -69.2741, -33.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4466, device='cuda:0', dtype=torch.float64)
tensor([-42.6270, -43.3116, -48.5300, -69.9456, -33.3672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3957, device='cuda:0', dtype=torch.float64)
tensor([-41.8129, -43.3814, -48.4507, -70.2889, -33.3851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7552, device='cuda:0', dtype=torch.float64)
tensor([-41.1718, -43.3193, -48.3374, -70.4962, -33.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2514, device='cuda:0', dtype=torch.float64)
tensor([-40.8879, -43.5390, -48.3697, -70.9698, -33.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5811, device='cuda:0', dtype=torch.float64)
tensor([-40.4556, -43.6623, -48.3147, -71.4466, -33.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4391, device='cuda:0', dtype=torch.float64)
tensor([-40.7141, -43.8778, -48.3360, -71.7862, -33.0869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3306, device='cuda:0', dtype=torch.float64)
tensor([-41.3044, -44.3480, -48.3933, -72.0937, -33.2191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4523, device='cuda:0', dtype=torch.float64)
tensor([-42.0665, -44.8038, -48.5907, -72.3958, -33.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3044, device='cuda:0', dtype=torch.float64)
tensor([-43.8916, -45.5719, -49.1714, -73.2211, -33.6355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5454, device='cuda:0', dtype=torch.float64)
tensor([-44.5568, -45.5374, -49.5498, -73.3080, -33.5232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6520, device='cuda:0', dtype=torch.float64)
tensor([-45.1659, -45.8610, -49.9575, -73.5305, -33.5474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5615, device='cuda:0', dtype=torch.float64)
tensor([-45.5675, -46.2733, -50.2155, -73.6252, -33.7588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5760, device='cuda:0', dtype=torch.float64)
tensor([-45.2095, -46.5088, -50.2972, -73.3979, -33.8874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4642, device='cuda:0', dtype=torch.float64)
tensor([-44.9404, -46.6036, -49.9129, -73.0707, -34.0186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6782, device='cuda:0', dtype=torch.float64)
tensor([-44.5846, -46.4725, -49.5843, -72.2866, -34.1192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2559, device='cuda:0', dtype=torch.float64)
tensor([-43.8152, -46.0382, -49.2547, -71.0484, -34.1232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6402, device='cuda:0', dtype=torch.float64)
tensor([-42.8048, -45.7679, -48.8026, -70.1681, -34.1820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3922, device='cuda:0', dtype=torch.float64)
tensor([-42.1367, -45.5297, -48.2944, -69.2031, -34.2226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3695, device='cuda:0', dtype=torch.float64)
tensor([-41.3834, -45.0821, -47.9447, -68.3782, -34.2740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4860, device='cuda:0', dtype=torch.float64)
tensor([-40.7148, -44.6494, -47.5050, -67.6427, -34.1881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5314, device='cuda:0', dtype=torch.float64)
tensor([-40.4014, -44.0979, -46.9463, -66.9701, -33.7682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4797, device='cuda:0', dtype=torch.float64)
tensor([-40.4719, -43.6288, -46.6100, -66.3625, -33.4471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5093, device='cuda:0', dtype=torch.float64)
tensor([-40.8629, -43.3859, -46.2533, -65.9216, -33.1983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3008, device='cuda:0', dtype=torch.float64)
tensor([-41.6566, -43.3336, -46.1032, -65.6367, -32.8490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3635, device='cuda:0', dtype=torch.float64)
tensor([-42.6232, -43.1774, -46.0282, -65.0129, -32.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4989, device='cuda:0', dtype=torch.float64)
tensor([-43.2963, -43.2329, -45.9236, -64.4209, -32.0811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5402, device='cuda:0', dtype=torch.float64)
tensor([-43.8988, -43.3374, -46.3235, -63.7559, -31.7423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2954, device='cuda:0', dtype=torch.float64)
tensor([-44.1588, -43.3089, -46.6914, -63.0137, -31.1733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6684, device='cuda:0', dtype=torch.float64)
tensor([-43.8912, -43.0631, -47.0349, -61.8408, -30.2716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6469, device='cuda:0', dtype=torch.float64)
tensor([-44.1871, -43.1048, -47.2983, -61.0062, -29.6601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5400, device='cuda:0', dtype=torch.float64)
tensor([-45.0373, -43.2389, -47.7917, -60.5677, -28.9134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7463, device='cuda:0', dtype=torch.float64)
tensor([-45.8252, -43.4177, -48.3417, -60.0830, -28.5197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2635, device='cuda:0', dtype=torch.float64)
tensor([-46.8855, -43.8677, -49.0838, -60.0591, -28.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2834, device='cuda:0', dtype=torch.float64)
tensor([-48.2478, -44.5474, -49.8076, -60.3157, -28.3184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3955, device='cuda:0', dtype=torch.float64)
tensor([-50.2381, -45.3388, -50.5346, -60.6182, -28.4070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4635, device='cuda:0', dtype=torch.float64)
tensor([-52.2883, -46.1499, -51.0407, -60.9936, -28.7181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4765, device='cuda:0', dtype=torch.float64)
tensor([-54.3922, -47.0621, -51.5454, -61.6909, -29.2884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5667, device='cuda:0', dtype=torch.float64)
tensor([-54.9246, -47.5314, -51.9921, -61.5643, -29.3788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5523, device='cuda:0', dtype=torch.float64)
tensor([-54.2204, -47.6567, -52.4814, -61.0618, -29.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5642, device='cuda:0', dtype=torch.float64)
tensor([-54.0208, -47.9789, -53.0554, -60.7250, -29.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4319, device='cuda:0', dtype=torch.float64)
tensor([-54.0231, -48.1911, -53.8139, -60.3052, -29.2635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3076, device='cuda:0', dtype=torch.float64)
tensor([-54.2746, -48.5125, -54.5384, -59.8216, -29.6480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5231, device='cuda:0', dtype=torch.float64)
tensor([-55.4484, -49.1800, -55.0386, -59.9606, -29.9973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5156, device='cuda:0', dtype=torch.float64)
tensor([-56.3512, -49.6706, -55.6448, -59.9033, -30.3969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1895, device='cuda:0', dtype=torch.float64)
tensor([-57.3727, -50.3109, -56.0189, -59.9823, -30.7950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6178, device='cuda:0', dtype=torch.float64)
tensor([-57.0692, -50.4579, -56.5465, -59.4822, -31.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3660, device='cuda:0', dtype=torch.float64)
tensor([-56.8305, -50.4685, -56.9683, -58.9821, -31.5816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3392, device='cuda:0', dtype=torch.float64)
tensor([-56.4335, -50.6463, -57.6234, -58.5502, -32.0048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3290, device='cuda:0', dtype=torch.float64)
tensor([-56.3002, -50.9249, -58.1669, -58.4816, -32.4722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3985, device='cuda:0', dtype=torch.float64)
tensor([-56.9998, -51.5915, -58.4622, -58.7878, -32.7586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3204, device='cuda:0', dtype=torch.float64)
tensor([-57.0729, -51.8335, -58.5769, -58.4908, -33.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5316, device='cuda:0', dtype=torch.float64)
tensor([-57.4073, -52.2171, -58.6664, -58.1703, -33.5421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3035, device='cuda:0', dtype=torch.float64)
tensor([-57.5263, -52.4806, -58.6849, -57.4129, -34.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2933, device='cuda:0', dtype=torch.float64)
tensor([-58.6688, -53.3872, -58.8829, -57.3899, -35.0221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6374, device='cuda:0', dtype=torch.float64)
tensor([-60.7262, -54.8479, -59.4001, -57.8023, -36.1208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6553, device='cuda:0', dtype=torch.float64)
tensor([-62.7506, -56.2891, -59.7597, -58.0765, -37.1191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2630, device='cuda:0', dtype=torch.float64)
tensor([-65.0339, -58.0811, -60.1803, -58.8454, -38.0810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1909, device='cuda:0', dtype=torch.float64)
tensor([-66.1610, -59.1194, -60.4568, -59.1430, -38.9531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2312, device='cuda:0', dtype=torch.float64)
tensor([-67.2181, -60.0882, -60.7637, -59.4792, -39.7636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3380, device='cuda:0', dtype=torch.float64)
tensor([-68.3551, -61.1041, -61.1815, -60.1660, -40.6223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4890, device='cuda:0', dtype=torch.float64)
tensor([-70.2882, -62.2089, -61.4324, -61.0457, -41.5160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4309, device='cuda:0', dtype=torch.float64)
tensor([-71.0716, -62.6906, -61.3250, -61.3207, -42.0803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3588, device='cuda:0', dtype=torch.float64)
tensor([-72.6190, -63.7305, -61.4105, -62.1992, -43.0804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2420, device='cuda:0', dtype=torch.float64)
tensor([-73.4935, -64.3717, -61.4529, -62.6952, -43.8139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3077, device='cuda:0', dtype=torch.float64)
tensor([-73.4550, -64.3836, -61.4392, -62.7813, -44.3085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5541, device='cuda:0', dtype=torch.float64)
tensor([-73.1397, -64.4701, -61.4073, -62.9644, -44.6508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1604, device='cuda:0', dtype=torch.float64)
tensor([-73.1048, -64.7949, -61.5960, -63.3428, -44.9849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1125, device='cuda:0', dtype=torch.float64)
tensor([-71.7939, -64.0653, -61.6792, -62.6479, -44.7803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6077, device='cuda:0', dtype=torch.float64)
tensor([-70.4330, -63.6132, -61.6953, -62.0537, -44.5784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3266, device='cuda:0', dtype=torch.float64)
tensor([-68.3646, -62.6048, -61.6247, -61.0625, -44.4198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4878, device='cuda:0', dtype=torch.float64)
tensor([-67.4557, -61.9183, -61.6383, -60.6696, -43.9428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4148, device='cuda:0', dtype=torch.float64)
tensor([-65.9753, -60.6589, -61.6879, -59.6604, -43.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3296, device='cuda:0', dtype=torch.float64)
tensor([-64.7381, -59.6897, -61.6846, -58.8507, -42.5909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2921, device='cuda:0', dtype=torch.float64)
tensor([-63.5588, -58.8453, -61.6003, -58.0935, -42.0491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3989, device='cuda:0', dtype=torch.float64)
tensor([-61.8962, -57.6343, -61.0949, -56.8180, -41.5476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3382, device='cuda:0', dtype=torch.float64)
tensor([-59.5900, -56.0484, -60.6688, -55.1568, -41.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4391, device='cuda:0', dtype=torch.float64)
tensor([-56.9766, -54.4405, -60.0919, -53.7308, -40.8878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1758, device='cuda:0', dtype=torch.float64)
tensor([-53.9604, -53.1317, -59.6635, -52.6457, -41.3458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6958, device='cuda:0', dtype=torch.float64)
tensor([-51.3371, -52.3985, -59.2046, -52.1516, -42.1067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4557, device='cuda:0', dtype=torch.float64)
tensor([-48.4645, -51.5513, -58.8165, -51.5976, -43.3282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4350, device='cuda:0', dtype=torch.float64)
tensor([-46.3119, -51.2056, -58.4771, -51.5049, -44.6176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4991, device='cuda:0', dtype=torch.float64)
tensor([-44.2294, -50.9267, -58.5058, -51.3826, -45.9356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1825, device='cuda:0', dtype=torch.float64)
tensor([-42.7953, -51.1026, -58.6617, -51.5878, -47.4983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3976, device='cuda:0', dtype=torch.float64)
tensor([-41.3892, -51.3450, -58.7576, -51.6325, -48.7783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2403, device='cuda:0', dtype=torch.float64)
tensor([-40.5757, -51.5488, -59.0452, -51.9274, -49.8559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2035, device='cuda:0', dtype=torch.float64)
tensor([-40.3414, -51.8063, -59.3783, -52.2126, -50.7184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4918, device='cuda:0', dtype=torch.float64)
tensor([-40.2528, -52.1886, -59.4819, -52.7388, -51.7091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3766, device='cuda:0', dtype=torch.float64)
tensor([-40.3340, -52.4338, -59.3268, -53.1836, -52.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2583, device='cuda:0', dtype=torch.float64)
tensor([-39.9410, -52.2599, -58.9382, -52.9765, -52.7254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2950, device='cuda:0', dtype=torch.float64)
tensor([-39.4038, -52.0436, -58.3247, -52.5647, -52.9848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3889, device='cuda:0', dtype=torch.float64)
tensor([-38.7260, -51.8174, -57.8005, -52.3486, -53.4811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5533, device='cuda:0', dtype=torch.float64)
tensor([-38.5221, -51.7268, -57.2548, -52.1641, -53.8693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5200, device='cuda:0', dtype=torch.float64)
tensor([-37.8785, -51.4031, -56.5812, -51.7327, -54.2104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7953, device='cuda:0', dtype=torch.float64)
tensor([-37.0020, -50.9925, -56.1572, -50.9919, -54.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3931, device='cuda:0', dtype=torch.float64)
tensor([-36.1254, -50.5975, -55.8206, -50.2979, -54.3378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3118, device='cuda:0', dtype=torch.float64)
tensor([-35.3413, -50.0864, -55.5486, -49.5990, -54.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4083, device='cuda:0', dtype=torch.float64)
tensor([-34.6552, -49.5734, -55.1557, -48.9544, -54.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4127, device='cuda:0', dtype=torch.float64)
tensor([-34.1652, -49.0342, -54.7917, -48.2836, -54.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3467, device='cuda:0', dtype=torch.float64)
tensor([-33.6983, -48.5347, -54.5753, -47.7511, -54.2598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2989, device='cuda:0', dtype=torch.float64)
tensor([-33.4481, -48.1891, -54.3740, -47.4789, -54.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5990, device='cuda:0', dtype=torch.float64)
tensor([-33.4826, -47.9600, -54.2934, -47.2724, -54.0650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3948, device='cuda:0', dtype=torch.float64)
tensor([-33.7901, -48.0385, -54.4146, -47.1782, -54.0152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2360, device='cuda:0', dtype=torch.float64)
tensor([-34.1613, -48.2634, -54.6086, -47.4584, -53.9398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1121, device='cuda:0', dtype=torch.float64)
tensor([-34.2396, -48.4066, -55.2280, -47.9949, -54.5557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3649, device='cuda:0', dtype=torch.float64)
tensor([-34.5691, -48.6368, -55.9793, -48.6380, -54.7417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3525, device='cuda:0', dtype=torch.float64)
tensor([-35.0474, -49.0876, -56.5191, -49.1355, -54.9009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3981, device='cuda:0', dtype=torch.float64)
tensor([-35.6936, -49.4735, -56.8085, -49.6484, -55.0121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4834, device='cuda:0', dtype=torch.float64)
tensor([-36.2622, -49.9489, -56.9059, -50.2955, -54.6661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4563, device='cuda:0', dtype=torch.float64)
tensor([-36.8586, -50.3600, -56.8689, -51.0027, -54.2367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3287, device='cuda:0', dtype=torch.float64)
tensor([-37.5882, -50.7737, -57.1388, -51.8803, -54.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4699, device='cuda:0', dtype=torch.float64)
tensor([-38.3895, -50.8539, -57.4869, -52.6768, -54.0888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3820, device='cuda:0', dtype=torch.float64)
tensor([-39.1781, -51.1916, -57.9874, -53.8168, -53.8277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5120, device='cuda:0', dtype=torch.float64)
tensor([-40.0320, -51.2937, -58.3182, -55.4036, -53.6612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2861, device='cuda:0', dtype=torch.float64)
tensor([-40.4301, -51.2678, -58.8100, -57.5146, -53.7127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4050, device='cuda:0', dtype=torch.float64)
tensor([-40.5512, -51.2159, -59.3514, -58.7036, -53.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5073, device='cuda:0', dtype=torch.float64)
tensor([-40.6191, -51.2910, -59.7360, -59.6807, -52.7047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4571, device='cuda:0', dtype=torch.float64)
tensor([-40.6325, -50.8766, -59.8321, -60.1060, -52.0605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2677, device='cuda:0', dtype=torch.float64)
tensor([-40.5271, -50.4906, -60.0193, -60.4059, -51.4247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3835, device='cuda:0', dtype=torch.float64)
tensor([-40.8070, -50.1363, -60.4211, -61.5051, -50.7467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4286, device='cuda:0', dtype=torch.float64)
tensor([-41.1188, -49.7723, -60.8373, -62.0802, -49.9067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5588, device='cuda:0', dtype=torch.float64)
tensor([-41.3009, -49.5274, -61.4222, -63.7925, -49.4603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5746, device='cuda:0', dtype=torch.float64)
tensor([-41.3022, -49.3398, -62.0840, -65.5676, -49.0659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1724, device='cuda:0', dtype=torch.float64)
tensor([-41.1977, -49.3671, -62.5573, -67.4742, -48.7840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4730, device='cuda:0', dtype=torch.float64)
tensor([-41.1248, -49.5250, -63.1473, -69.4116, -48.6510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3454, device='cuda:0', dtype=torch.float64)
tensor([-41.1880, -49.8659, -63.6910, -71.5534, -48.6388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3544, device='cuda:0', dtype=torch.float64)
tensor([-41.2724, -50.0199, -64.0680, -73.2340, -48.7881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4578, device='cuda:0', dtype=torch.float64)
tensor([-41.4528, -50.2995, -64.3160, -74.3537, -48.5573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2146, device='cuda:0', dtype=torch.float64)
tensor([-41.6264, -50.6729, -64.1818, -75.6583, -48.2068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4270, device='cuda:0', dtype=torch.float64)
tensor([-41.9655, -51.3413, -64.2744, -77.3413, -47.5895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4532, device='cuda:0', dtype=torch.float64)
tensor([-42.1904, -51.9001, -64.3055, -77.8565, -46.5472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4002, device='cuda:0', dtype=torch.float64)
tensor([-42.2748, -52.2081, -64.2239, -77.8928, -45.7483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2460, device='cuda:0', dtype=torch.float64)
tensor([-42.4946, -52.5168, -64.1922, -78.1593, -45.5858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2804, device='cuda:0', dtype=torch.float64)
tensor([-42.9264, -53.0623, -64.3033, -78.7788, -45.2858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5523, device='cuda:0', dtype=torch.float64)
tensor([-43.5515, -53.8454, -64.3555, -80.5266, -45.3285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2430, device='cuda:0', dtype=torch.float64)
tensor([-43.8784, -54.4349, -64.3731, -81.7420, -45.2691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4829, device='cuda:0', dtype=torch.float64)
tensor([-44.0651, -54.9271, -64.5505, -83.0052, -45.6466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4721, device='cuda:0', dtype=torch.float64)
tensor([-44.3318, -55.7719, -65.1021, -84.9228, -46.0633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4792, device='cuda:0', dtype=torch.float64)
tensor([-44.6398, -56.5647, -65.6012, -86.2079, -46.6411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2950, device='cuda:0', dtype=torch.float64)
tensor([-44.9599, -57.2794, -66.1150, -87.2477, -47.0030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3567, device='cuda:0', dtype=torch.float64)
tensor([-45.4188, -57.9861, -66.6175, -88.2539, -47.3684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4001, device='cuda:0', dtype=torch.float64)
tensor([-45.7316, -58.7643, -67.0449, -89.3620, -47.9209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3390, device='cuda:0', dtype=torch.float64)
tensor([-45.7581, -59.5132, -67.5695, -90.3455, -48.5057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2636, device='cuda:0', dtype=torch.float64)
tensor([-45.3242, -59.9316, -67.5827, -90.9321, -49.2253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3528, device='cuda:0', dtype=torch.float64)
tensor([-44.6504, -60.1694, -67.2526, -91.0697, -49.8975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3276, device='cuda:0', dtype=torch.float64)
tensor([-44.1022, -60.4032, -66.7464, -91.4557, -50.0891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3719, device='cuda:0', dtype=torch.float64)
tensor([-44.0360, -60.6154, -66.3584, -91.1338, -49.9149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5225, device='cuda:0', dtype=torch.float64)
tensor([-44.2604, -60.8911, -65.9249, -91.1018, -49.5017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5834, device='cuda:0', dtype=torch.float64)
tensor([-44.3004, -61.3230, -65.8073, -91.5967, -49.5301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2941, device='cuda:0', dtype=torch.float64)
tensor([-44.3838, -61.6781, -65.3904, -91.5714, -49.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4550, device='cuda:0', dtype=torch.float64)
tensor([-44.3024, -62.0629, -65.0722, -91.6060, -48.5171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4724, device='cuda:0', dtype=torch.float64)
tensor([-44.2298, -62.1415, -64.8201, -91.0326, -47.9308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6077, device='cuda:0', dtype=torch.float64)
tensor([-44.6018, -62.2977, -64.7375, -90.5897, -47.4926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3386, device='cuda:0', dtype=torch.float64)
tensor([-44.8684, -62.2349, -64.5045, -89.2707, -47.1158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3187, device='cuda:0', dtype=torch.float64)
tensor([-45.1671, -62.3232, -64.3418, -87.7905, -46.8491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3151, device='cuda:0', dtype=torch.float64)
tensor([-45.3351, -62.3158, -64.0609, -86.5319, -46.5065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5156, device='cuda:0', dtype=torch.float64)
tensor([-45.7482, -62.5484, -63.7504, -85.3409, -46.1258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5247, device='cuda:0', dtype=torch.float64)
tensor([-46.3008, -62.8399, -63.5818, -84.4675, -45.8698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3533, device='cuda:0', dtype=torch.float64)
tensor([-47.0706, -63.2695, -63.3260, -83.8753, -45.6817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1776, device='cuda:0', dtype=torch.float64)
tensor([-47.5245, -63.5827, -63.1044, -83.5794, -45.5013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2721, device='cuda:0', dtype=torch.float64)
tensor([-48.0723, -64.0207, -63.0072, -83.6128, -45.4438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4684, device='cuda:0', dtype=torch.float64)
tensor([-48.8959, -64.7853, -63.1258, -83.6890, -45.7809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6466, device='cuda:0', dtype=torch.float64)
tensor([-49.4826, -65.5207, -63.3171, -83.6673, -46.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4073, device='cuda:0', dtype=torch.float64)
tensor([-49.8235, -66.0006, -63.6231, -83.6169, -46.3472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4832, device='cuda:0', dtype=torch.float64)
tensor([-50.3429, -66.4785, -64.0720, -83.9669, -46.5473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3089, device='cuda:0', dtype=torch.float64)
tensor([-51.0154, -66.9502, -64.3636, -84.1547, -46.8473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4739, device='cuda:0', dtype=torch.float64)
tensor([-52.1553, -67.3987, -64.5711, -84.2441, -47.1971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4276, device='cuda:0', dtype=torch.float64)
tensor([-52.4417, -67.4819, -64.7591, -85.3701, -47.2168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3755, device='cuda:0', dtype=torch.float64)
tensor([-52.4467, -67.7685, -64.8539, -86.8287, -47.3490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2054, device='cuda:0', dtype=torch.float64)
tensor([-52.9422, -67.9940, -64.8198, -87.9861, -47.6655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3869, device='cuda:0', dtype=torch.float64)
tensor([-53.1864, -68.0429, -64.7182, -88.9579, -47.8465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3940, device='cuda:0', dtype=torch.float64)
tensor([-53.8892, -68.2969, -64.9960, -90.1628, -48.0361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2043, device='cuda:0', dtype=torch.float64)
tensor([-54.4672, -68.4324, -65.3191, -91.7177, -47.9415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1011, device='cuda:0', dtype=torch.float64)
tensor([-54.9655, -68.6186, -65.6705, -93.2766, -48.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5211, device='cuda:0', dtype=torch.float64)
tensor([-54.6681, -68.4451, -65.8189, -93.9860, -48.0448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3228, device='cuda:0', dtype=torch.float64)
tensor([-54.7810, -68.3207, -66.0363, -94.6280, -48.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5752, device='cuda:0', dtype=torch.float64)
tensor([-54.7734, -68.2015, -66.3208, -95.0165, -48.7735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4502, device='cuda:0', dtype=torch.float64)
tensor([-54.9338, -68.4150, -66.6249, -96.2754, -49.3788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3682, device='cuda:0', dtype=torch.float64)
tensor([-54.9479, -68.5475, -66.6674, -97.5608, -50.0323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3019, device='cuda:0', dtype=torch.float64)
tensor([-55.3156, -69.2564, -66.6504, -99.5841, -51.0975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2395, device='cuda:0', dtype=torch.float64)
tensor([ -55.7488,  -70.2929,  -66.5231, -101.8565,  -52.3269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4596, device='cuda:0', dtype=torch.float64)
tensor([ -55.7439,  -70.9990,  -66.1848, -103.7599,  -53.4134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3382, device='cuda:0', dtype=torch.float64)
tensor([ -55.9646,  -71.4983,  -65.6951, -104.8619,  -54.2513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4346, device='cuda:0', dtype=torch.float64)
tensor([ -56.0382,  -72.1980,  -65.0187, -106.3799,  -54.9777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3329, device='cuda:0', dtype=torch.float64)
tensor([ -56.6613,  -72.9908,  -64.5375, -107.5868,  -55.7743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3228, device='cuda:0', dtype=torch.float64)
tensor([ -57.3834,  -73.3392,  -64.0677, -108.3170,  -56.4328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4298, device='cuda:0', dtype=torch.float64)
tensor([ -57.8780,  -73.9421,  -63.6573, -109.3458,  -57.2676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3118, device='cuda:0', dtype=torch.float64)
tensor([ -58.1016,  -74.4900,  -62.9244, -110.0946,  -58.1680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2779, device='cuda:0', dtype=torch.float64)
tensor([ -57.7313,  -74.9951,  -61.8332, -110.6707,  -58.7124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1924, device='cuda:0', dtype=torch.float64)
tensor([ -57.3587,  -75.1808,  -60.5478, -110.5854,  -58.9689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1504, device='cuda:0', dtype=torch.float64)
tensor([ -57.0609,  -75.4320,  -59.5120, -110.6746,  -59.2929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2849, device='cuda:0', dtype=torch.float64)
tensor([ -56.8317,  -75.9989,  -58.6005, -111.4144,  -60.0792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2957, device='cuda:0', dtype=torch.float64)
tensor([ -56.6617,  -76.8950,  -58.0628, -112.5890,  -61.1873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3327, device='cuda:0', dtype=torch.float64)
tensor([ -56.6730,  -77.2571,  -57.5633, -113.4277,  -61.7567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2814, device='cuda:0', dtype=torch.float64)
tensor([ -56.4587,  -77.5793,  -56.8374, -113.9519,  -62.3245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3466, device='cuda:0', dtype=torch.float64)
tensor([ -56.0370,  -77.5554,  -55.6916, -113.5250,  -62.5042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2106, device='cuda:0', dtype=torch.float64)
tensor([ -55.4417,  -77.0617,  -54.4604, -112.6407,  -62.4339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5473, device='cuda:0', dtype=torch.float64)
tensor([ -55.5765,  -77.2920,  -53.9631, -112.5441,  -62.5225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4715, device='cuda:0', dtype=torch.float64)
tensor([ -55.6831,  -77.2186,  -53.3790, -111.7641,  -62.3485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4901, device='cuda:0', dtype=torch.float64)
tensor([ -55.2835,  -76.6555,  -52.4263, -110.4304,  -62.0862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4063, device='cuda:0', dtype=torch.float64)
tensor([ -55.5329,  -76.5996,  -51.8821, -109.6275,  -62.0671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4482, device='cuda:0', dtype=torch.float64)
tensor([ -55.4604,  -76.1916,  -51.1288, -108.3503,  -61.7410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5343, device='cuda:0', dtype=torch.float64)
tensor([ -55.0712,  -75.0326,  -49.7126, -105.6501,  -60.6027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2110, device='cuda:0', dtype=torch.float64)
tensor([ -54.4980,  -73.8831,  -48.3783, -103.1424,  -59.6343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3263, device='cuda:0', dtype=torch.float64)
tensor([ -53.9850,  -72.6612,  -46.8542, -100.1334,  -58.6397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1364, device='cuda:0', dtype=torch.float64)
tensor([-53.7629, -71.7745, -45.5114, -97.4172, -57.7276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1397, device='cuda:0', dtype=torch.float64)
tensor([-53.6693, -70.9987, -44.3427, -94.5525, -57.0043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5177, device='cuda:0', dtype=torch.float64)
tensor([-52.9530, -69.8438, -43.1988, -91.3570, -55.9729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4704, device='cuda:0', dtype=torch.float64)
tensor([-52.9544, -69.0738, -42.4708, -88.5603, -55.1956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3139, device='cuda:0', dtype=torch.float64)
tensor([-52.9480, -68.4581, -41.8011, -85.8387, -54.4055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3048, device='cuda:0', dtype=torch.float64)
tensor([-52.7091, -67.7059, -41.2732, -83.8208, -53.5998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2174, device='cuda:0', dtype=torch.float64)
tensor([-52.5384, -67.2788, -41.0051, -82.1522, -52.8202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3209, device='cuda:0', dtype=torch.float64)
tensor([-52.4921, -66.8022, -40.5431, -80.0426, -51.7842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1877, device='cuda:0', dtype=torch.float64)
tensor([-52.0627, -66.3221, -40.1015, -78.2107, -50.8645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1155, device='cuda:0', dtype=torch.float64)
tensor([-51.8337, -66.0304, -39.7409, -76.5832, -50.0830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2051, device='cuda:0', dtype=torch.float64)
tensor([-51.6966, -65.9239, -39.2965, -75.5225, -49.6284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1363, device='cuda:0', dtype=torch.float64)
tensor([-51.8636, -65.7730, -39.1066, -74.5799, -49.2042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3354, device='cuda:0', dtype=torch.float64)
tensor([-51.7627, -65.6439, -39.1053, -74.2016, -48.8755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5186, device='cuda:0', dtype=torch.float64)
tensor([-51.6106, -65.4684, -38.9393, -73.9501, -48.7338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1886, device='cuda:0', dtype=torch.float64)
tensor([-51.2624, -65.3394, -38.6672, -73.9163, -48.5524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2530, device='cuda:0', dtype=torch.float64)
tensor([-50.9342, -65.0308, -38.4964, -73.9482, -48.2475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4159, device='cuda:0', dtype=torch.float64)
tensor([-50.9451, -64.8039, -38.3889, -74.0507, -47.7875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1282, device='cuda:0', dtype=torch.float64)
tensor([-51.1306, -64.6966, -38.1444, -74.2837, -47.5072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3040, device='cuda:0', dtype=torch.float64)
tensor([-51.1349, -64.2934, -37.9858, -74.4167, -47.4966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3609, device='cuda:0', dtype=torch.float64)
tensor([-51.9607, -64.1066, -38.0158, -74.5780, -47.7065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2990, device='cuda:0', dtype=torch.float64)
tensor([-52.8606, -64.2468, -37.9882, -74.4135, -48.1608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2515, device='cuda:0', dtype=torch.float64)
tensor([-53.8526, -64.5131, -37.8752, -74.4441, -48.4744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1473, device='cuda:0', dtype=torch.float64)
tensor([-54.7783, -64.7918, -37.5632, -74.2591, -48.6772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4181, device='cuda:0', dtype=torch.float64)
tensor([-55.9612, -64.9165, -37.2713, -73.4816, -48.8926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1992, device='cuda:0', dtype=torch.float64)
tensor([-56.6024, -64.7473, -36.9443, -72.3629, -49.0071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2611, device='cuda:0', dtype=torch.float64)
tensor([-56.7267, -64.5870, -36.6110, -71.4175, -49.0172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3533, device='cuda:0', dtype=torch.float64)
tensor([-57.1263, -64.5996, -36.3865, -70.7267, -49.0972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4252, device='cuda:0', dtype=torch.float64)
tensor([-57.2246, -64.2701, -36.3280, -69.6475, -48.7956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4771, device='cuda:0', dtype=torch.float64)
tensor([-57.7979, -64.4455, -36.3893, -69.2325, -48.6953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3725, device='cuda:0', dtype=torch.float64)
tensor([-57.9067, -64.5022, -36.3530, -69.4280, -48.6401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1938, device='cuda:0', dtype=torch.float64)
tensor([-57.7179, -64.5504, -36.3359, -70.0581, -48.5625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2263, device='cuda:0', dtype=torch.float64)
tensor([-57.5055, -64.5507, -36.5137, -70.5357, -48.7795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2433, device='cuda:0', dtype=torch.float64)
tensor([-58.0559, -64.8797, -36.6310, -71.1453, -49.1099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4081, device='cuda:0', dtype=torch.float64)
tensor([-58.5099, -65.0541, -36.8442, -71.7191, -49.5427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2282, device='cuda:0', dtype=torch.float64)
tensor([-59.2656, -65.2459, -36.9876, -71.8906, -49.8563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1983, device='cuda:0', dtype=torch.float64)
tensor([-59.9286, -65.4148, -37.2030, -71.8370, -50.2811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8606, device='cuda:0', dtype=torch.float64)
tensor([-60.3105, -65.5325, -37.5039, -71.9858, -50.7845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1225, device='cuda:0', dtype=torch.float64)
tensor([-60.6594, -65.5614, -37.5989, -71.8662, -51.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1785, device='cuda:0', dtype=torch.float64)
tensor([-60.8372, -65.4739, -37.7715, -71.7884, -51.8303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2476, device='cuda:0', dtype=torch.float64)
tensor([-61.2734, -65.3853, -37.9338, -71.8512, -52.3861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4755, device='cuda:0', dtype=torch.float64)
tensor([-61.3134, -64.8664, -37.9339, -71.3338, -52.7693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3448, device='cuda:0', dtype=torch.float64)
tensor([-60.4896, -63.9618, -37.9825, -70.4272, -53.1940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-59.5066, -63.0764, -37.9926, -69.4458, -53.6567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2407, device='cuda:0', dtype=torch.float64)
tensor([-59.0468, -62.4525, -38.0858, -68.5945, -53.7436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1644, device='cuda:0', dtype=torch.float64)
tensor([-59.0731, -62.1731, -38.2668, -68.1141, -54.0477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2649, device='cuda:0', dtype=torch.float64)
tensor([-59.0682, -61.9043, -38.3820, -67.4780, -54.4157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1559, device='cuda:0', dtype=torch.float64)
tensor([-58.8389, -61.6586, -38.5238, -67.0729, -54.7387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3687, device='cuda:0', dtype=torch.float64)
tensor([-59.4531, -61.7501, -38.7357, -67.0040, -54.9834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1992, device='cuda:0', dtype=torch.float64)
tensor([-60.0102, -61.6659, -38.8845, -66.7439, -55.0279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0682, device='cuda:0', dtype=torch.float64)
tensor([-60.4818, -61.4557, -39.1417, -66.4981, -55.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0631, device='cuda:0', dtype=torch.float64)
tensor([-61.2820, -61.4273, -39.3671, -66.4124, -55.6125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3316, device='cuda:0', dtype=torch.float64)
tensor([-62.1595, -61.6606, -39.7192, -66.7831, -56.5199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9697, device='cuda:0', dtype=torch.float64)
tensor([-62.8135, -61.9033, -40.0656, -67.3595, -57.6291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4368, device='cuda:0', dtype=torch.float64)
tensor([-63.9715, -62.5043, -40.3209, -68.0004, -58.6729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3253, device='cuda:0', dtype=torch.float64)
tensor([-64.7819, -62.8748, -40.5971, -68.4403, -59.7377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1821, device='cuda:0', dtype=torch.float64)
tensor([-65.8572, -63.2123, -40.8610, -68.8625, -61.0833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1671, device='cuda:0', dtype=torch.float64)
tensor([-66.4659, -63.6194, -41.1820, -69.4424, -62.5571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9766, device='cuda:0', dtype=torch.float64)
tensor([-67.3431, -64.0115, -41.4552, -69.8875, -63.6002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3440, device='cuda:0', dtype=torch.float64)
tensor([-67.5755, -64.2335, -41.5723, -70.2525, -64.2567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2687, device='cuda:0', dtype=torch.float64)
tensor([-67.3714, -64.4071, -41.6075, -70.4466, -64.9103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2200, device='cuda:0', dtype=torch.float64)
tensor([-67.0685, -64.6436, -41.5637, -70.5384, -65.9080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3738, device='cuda:0', dtype=torch.float64)
tensor([-66.6565, -64.7688, -41.5354, -70.5246, -66.6741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1446, device='cuda:0', dtype=torch.float64)
tensor([-66.6816, -65.2169, -41.4810, -70.6689, -67.2676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1721, device='cuda:0', dtype=torch.float64)
tensor([-66.5006, -65.5760, -41.3154, -70.8796, -67.9406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3424, device='cuda:0', dtype=torch.float64)
tensor([-66.2061, -66.1634, -41.1854, -71.2869, -68.5488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1567, device='cuda:0', dtype=torch.float64)
tensor([-65.3027, -66.5065, -41.0921, -71.4524, -69.6749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1550, device='cuda:0', dtype=torch.float64)
tensor([-64.5023, -66.7034, -40.9350, -71.3113, -70.3609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3944, device='cuda:0', dtype=torch.float64)
tensor([-63.8962, -66.8317, -40.9659, -71.1136, -71.2706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9781, device='cuda:0', dtype=torch.float64)
tensor([-63.2715, -66.8688, -41.0267, -70.8177, -72.0959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2621, device='cuda:0', dtype=torch.float64)
tensor([-62.7370, -66.9202, -41.0238, -70.3575, -72.7645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2586, device='cuda:0', dtype=torch.float64)
tensor([-62.5986, -66.9009, -40.9943, -69.6904, -73.0322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3932, device='cuda:0', dtype=torch.float64)
tensor([-62.5632, -67.0313, -40.9506, -69.1624, -73.4044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0291, device='cuda:0', dtype=torch.float64)
tensor([-62.9948, -67.1488, -40.9511, -68.7691, -73.5177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3256, device='cuda:0', dtype=torch.float64)
tensor([-63.1896, -67.2118, -40.9309, -68.4688, -73.5450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2508, device='cuda:0', dtype=torch.float64)
tensor([-63.5437, -67.4520, -41.0585, -68.0003, -73.3532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2477, device='cuda:0', dtype=torch.float64)
tensor([-63.7659, -67.4857, -41.4214, -67.4362, -73.0653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1639, device='cuda:0', dtype=torch.float64)
tensor([-64.1412, -67.6757, -41.8899, -67.2467, -73.0694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3194, device='cuda:0', dtype=torch.float64)
tensor([-63.3907, -67.7912, -42.1024, -66.9242, -73.0078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1907, device='cuda:0', dtype=torch.float64)
tensor([-63.1515, -67.9526, -42.2342, -66.8534, -72.9196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1491, device='cuda:0', dtype=torch.float64)
tensor([-62.9711, -68.1486, -42.3697, -67.0437, -72.7226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1558, device='cuda:0', dtype=torch.float64)
tensor([-63.0966, -68.0592, -42.4452, -66.9832, -72.0746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3334, device='cuda:0', dtype=torch.float64)
tensor([-62.6523, -68.1775, -42.3896, -67.2037, -71.7689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2465, device='cuda:0', dtype=torch.float64)
tensor([-62.4455, -68.4900, -42.1140, -67.5867, -71.6116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2162, device='cuda:0', dtype=torch.float64)
tensor([-61.6142, -68.5533, -41.7310, -68.0360, -71.2476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0638, device='cuda:0', dtype=torch.float64)
tensor([-60.8918, -68.4936, -41.3116, -68.4393, -70.6760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1076, device='cuda:0', dtype=torch.float64)
tensor([-60.3244, -68.3568, -41.0222, -68.6160, -69.7293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1441, device='cuda:0', dtype=torch.float64)
tensor([-59.7778, -68.0899, -40.7477, -68.4440, -68.9031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3168, device='cuda:0', dtype=torch.float64)
tensor([-58.8378, -67.7922, -40.5023, -68.2034, -68.3496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0037, device='cuda:0', dtype=torch.float64)
tensor([-58.1283, -67.6995, -40.1803, -68.1238, -67.5944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2766, device='cuda:0', dtype=torch.float64)
tensor([-57.7556, -67.7679, -39.7581, -68.6048, -67.2215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2012, device='cuda:0', dtype=torch.float64)
tensor([-57.5955, -68.0594, -39.4430, -69.3938, -67.0389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3080, device='cuda:0', dtype=torch.float64)
tensor([-57.7479, -68.4175, -39.2500, -70.2611, -67.0616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2283, device='cuda:0', dtype=torch.float64)
tensor([-57.5913, -68.5723, -38.9968, -70.9049, -67.5946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2382, device='cuda:0', dtype=torch.float64)
tensor([-58.1950, -69.2136, -38.7895, -72.0975, -68.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2117, device='cuda:0', dtype=torch.float64)
tensor([-58.8929, -69.9077, -38.6088, -72.9986, -68.3927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3060, device='cuda:0', dtype=torch.float64)
tensor([-59.6679, -70.3953, -38.3642, -73.6891, -68.4539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3046, device='cuda:0', dtype=torch.float64)
tensor([-60.0746, -70.7239, -38.2560, -74.3939, -68.7766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1111, device='cuda:0', dtype=torch.float64)
tensor([-60.3455, -70.9600, -38.1447, -75.0519, -69.2746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0619, device='cuda:0', dtype=torch.float64)
tensor([-60.6123, -71.1898, -37.9912, -75.6168, -69.9009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1601, device='cuda:0', dtype=torch.float64)
tensor([-60.7325, -71.1054, -37.7489, -75.9786, -70.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1153, device='cuda:0', dtype=torch.float64)
tensor([-60.8347, -70.6990, -37.5206, -75.6445, -69.8555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3290, device='cuda:0', dtype=torch.float64)
tensor([-61.2809, -70.5457, -37.4686, -75.3980, -69.6497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2505, device='cuda:0', dtype=torch.float64)
tensor([-61.5089, -70.3750, -37.5067, -75.3805, -70.1086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1737, device='cuda:0', dtype=torch.float64)
tensor([-61.9806, -70.0482, -37.5688, -75.2892, -70.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0488, device='cuda:0', dtype=torch.float64)
tensor([-62.0668, -69.5689, -37.4196, -75.2224, -69.9956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2556, device='cuda:0', dtype=torch.float64)
tensor([-61.7808, -68.8829, -37.3821, -74.8816, -70.0029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2452, device='cuda:0', dtype=torch.float64)
tensor([-61.4809, -68.1552, -37.4035, -74.3033, -70.0004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2586, device='cuda:0', dtype=torch.float64)
tensor([-61.2449, -67.5018, -37.3810, -73.6905, -69.6297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0642, device='cuda:0', dtype=torch.float64)
tensor([-60.8373, -66.9456, -37.2813, -73.1078, -69.2744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-60.3506, -66.6831, -37.1690, -72.9467, -69.3937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2159, device='cuda:0', dtype=torch.float64)
tensor([-59.4592, -66.2912, -37.0259, -72.5476, -69.5529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3693, device='cuda:0', dtype=torch.float64)
tensor([-58.9612, -65.8016, -36.8867, -72.0598, -69.4683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1442, device='cuda:0', dtype=torch.float64)
tensor([-58.2644, -65.4105, -36.8598, -71.4091, -69.3967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3814, device='cuda:0', dtype=torch.float64)
tensor([-57.8429, -65.0065, -36.9128, -70.6289, -69.1348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4920, device='cuda:0', dtype=torch.float64)
tensor([-57.1938, -64.8703, -36.9301, -70.2245, -69.4320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4286, device='cuda:0', dtype=torch.float64)
tensor([-56.6354, -65.1560, -37.0148, -70.2747, -70.1550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0646, device='cuda:0', dtype=torch.float64)
tensor([-55.9084, -65.5344, -37.1249, -70.3613, -71.0770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4848, device='cuda:0', dtype=torch.float64)
tensor([-55.7062, -66.1304, -37.3906, -70.6376, -72.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2485, device='cuda:0', dtype=torch.float64)
tensor([-55.5813, -66.5238, -37.6922, -70.8164, -73.4261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2344, device='cuda:0', dtype=torch.float64)
tensor([-55.8491, -66.8401, -37.9277, -71.2008, -74.0673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2637, device='cuda:0', dtype=torch.float64)
tensor([-56.3056, -67.2645, -38.2517, -71.6774, -74.5807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0146, device='cuda:0', dtype=torch.float64)
tensor([-56.8813, -67.8630, -38.3660, -72.0201, -75.0289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3610, device='cuda:0', dtype=torch.float64)
tensor([-57.3946, -68.6139, -38.3853, -72.7785, -75.6356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3975, device='cuda:0', dtype=torch.float64)
tensor([-57.4129, -69.2723, -38.3763, -72.7504, -75.6981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3267, device='cuda:0', dtype=torch.float64)
tensor([-57.0328, -69.9455, -38.2181, -72.6879, -75.9445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1546, device='cuda:0', dtype=torch.float64)
tensor([-56.5451, -70.8038, -38.0479, -72.7523, -76.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9737, device='cuda:0', dtype=torch.float64)
tensor([-55.7067, -71.2917, -37.9109, -72.4946, -76.4466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1563, device='cuda:0', dtype=torch.float64)
tensor([-55.2407, -71.5131, -37.8196, -72.1457, -76.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1350, device='cuda:0', dtype=torch.float64)
tensor([-54.7128, -71.4914, -37.6574, -71.9322, -75.7727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1578, device='cuda:0', dtype=torch.float64)
tensor([-54.0602, -71.5995, -37.8358, -72.0463, -75.9537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1887, device='cuda:0', dtype=torch.float64)
tensor([-53.8613, -71.1674, -37.8445, -71.7480, -75.3800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2554, device='cuda:0', dtype=torch.float64)
tensor([-53.7322, -70.9975, -37.9619, -71.9054, -75.8993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0559, device='cuda:0', dtype=torch.float64)
tensor([-53.6918, -71.0258, -38.0590, -72.0676, -76.3209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1356, device='cuda:0', dtype=torch.float64)
tensor([-53.7166, -70.7438, -38.0355, -71.9216, -76.4161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2409, device='cuda:0', dtype=torch.float64)
tensor([-53.6751, -70.4327, -37.9212, -71.5698, -76.3531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1771, device='cuda:0', dtype=torch.float64)
tensor([-53.4783, -69.9199, -37.5597, -71.0307, -76.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2108, device='cuda:0', dtype=torch.float64)
tensor([-53.1981, -69.3558, -37.0488, -70.4072, -76.4002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1955, device='cuda:0', dtype=torch.float64)
tensor([-52.5080, -68.7446, -36.6934, -69.6933, -76.9030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3714, device='cuda:0', dtype=torch.float64)
tensor([-51.9970, -68.2400, -36.7037, -69.1292, -77.7242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1732, device='cuda:0', dtype=torch.float64)
tensor([-52.0225, -67.5739, -36.7636, -68.6007, -78.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2009, device='cuda:0', dtype=torch.float64)
tensor([-51.9298, -66.8329, -36.9457, -68.1498, -78.6757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2119, device='cuda:0', dtype=torch.float64)
tensor([-52.0060, -65.7234, -37.0464, -67.4748, -78.6796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2408, device='cuda:0', dtype=torch.float64)
tensor([-51.9906, -64.6732, -37.2110, -66.5997, -78.4620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([-52.1021, -63.7182, -37.6841, -65.7725, -78.6867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2291, device='cuda:0', dtype=torch.float64)
tensor([-52.2955, -62.9461, -38.4038, -65.2183, -79.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0560, device='cuda:0', dtype=torch.float64)
tensor([-52.5878, -62.3159, -39.1254, -64.8105, -79.6577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1551, device='cuda:0', dtype=torch.float64)
tensor([-52.6523, -61.9053, -39.9398, -64.5239, -80.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2981, device='cuda:0', dtype=torch.float64)
tensor([-52.3348, -61.6296, -40.6986, -64.3199, -80.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0004, device='cuda:0', dtype=torch.float64)
tensor([-52.2491, -61.4094, -41.5660, -64.1929, -80.2862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0769, device='cuda:0', dtype=torch.float64)
tensor([-52.2953, -61.1847, -42.3825, -64.1383, -80.2844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1996, device='cuda:0', dtype=torch.float64)
tensor([-52.2606, -61.1070, -42.8415, -64.1118, -80.4210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0680, device='cuda:0', dtype=torch.float64)
tensor([-52.2034, -61.0796, -43.2510, -63.9141, -80.6132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1561, device='cuda:0', dtype=torch.float64)
tensor([-52.0717, -61.0270, -43.4266, -63.8030, -80.5178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1896, device='cuda:0', dtype=torch.float64)
tensor([-52.0799, -61.0668, -43.4005, -63.5827, -80.3613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0123, device='cuda:0', dtype=torch.float64)
tensor([-52.2474, -61.2776, -43.2933, -63.5763, -79.8025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2621, device='cuda:0', dtype=torch.float64)
tensor([-52.6316, -61.7690, -43.3549, -63.8746, -80.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0474, device='cuda:0', dtype=torch.float64)
tensor([-52.8553, -62.2878, -43.1407, -64.4673, -80.5982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2152, device='cuda:0', dtype=torch.float64)
tensor([-53.2284, -62.8595, -42.7876, -65.1684, -81.0070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1890, device='cuda:0', dtype=torch.float64)
tensor([-53.5516, -63.5226, -42.5210, -65.9239, -81.6075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0167, device='cuda:0', dtype=torch.float64)
tensor([-54.1667, -64.4111, -42.5034, -66.9246, -82.6307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1003, device='cuda:0', dtype=torch.float64)
tensor([-54.7704, -65.0621, -42.2356, -67.5762, -82.6311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3891, device='cuda:0', dtype=torch.float64)
tensor([-55.3702, -65.8689, -42.0645, -68.1360, -82.9851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0076, device='cuda:0', dtype=torch.float64)
tensor([-55.8234, -66.6943, -41.9094, -68.6001, -83.5430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1481, device='cuda:0', dtype=torch.float64)
tensor([-56.0346, -67.5495, -41.6144, -69.2065, -84.3032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0290, device='cuda:0', dtype=torch.float64)
tensor([-56.2382, -68.5549, -41.6151, -69.9375, -85.3911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3613, device='cuda:0', dtype=torch.float64)
tensor([-56.5640, -69.5219, -42.0183, -70.9164, -86.5993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9430, device='cuda:0', dtype=torch.float64)
tensor([-56.8439, -70.5394, -42.3491, -72.2139, -87.5737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1765, device='cuda:0', dtype=torch.float64)
tensor([-57.0181, -71.6272, -42.9971, -73.5962, -88.8325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3126, device='cuda:0', dtype=torch.float64)
tensor([-57.3864, -72.6946, -43.5383, -74.7400, -89.6811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1945, device='cuda:0', dtype=torch.float64)
tensor([-57.6844, -73.8718, -43.9687, -76.0423, -90.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0885, device='cuda:0', dtype=torch.float64)
tensor([-58.2358, -74.7294, -44.3897, -77.0758, -91.2133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4277, device='cuda:0', dtype=torch.float64)
tensor([-58.7916, -75.4570, -44.5308, -78.0928, -91.5982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0239, device='cuda:0', dtype=torch.float64)
tensor([-59.5129, -75.9537, -44.7685, -78.6814, -91.5442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1303, device='cuda:0', dtype=torch.float64)
tensor([-60.3434, -76.1729, -44.7193, -79.0618, -91.2784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0313, device='cuda:0', dtype=torch.float64)
tensor([-60.9135, -76.5175, -44.7670, -79.4961, -91.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2133, device='cuda:0', dtype=torch.float64)
tensor([-61.4248, -76.8994, -44.8647, -79.9332, -91.3339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0465, device='cuda:0', dtype=torch.float64)
tensor([-61.7907, -76.9361, -44.8274, -80.0549, -90.8267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0272, device='cuda:0', dtype=torch.float64)
tensor([-62.2347, -77.0064, -44.9440, -80.1163, -90.5317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2138, device='cuda:0', dtype=torch.float64)
tensor([-62.7963, -77.0700, -44.9772, -80.1667, -89.8321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0530, device='cuda:0', dtype=torch.float64)
tensor([-63.5477, -77.2839, -45.2271, -80.4979, -89.1234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2463, device='cuda:0', dtype=torch.float64)
tensor([-64.7441, -77.1319, -45.2219, -80.3732, -87.6652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0486, device='cuda:0', dtype=torch.float64)
tensor([-66.0530, -76.7813, -45.1947, -80.2455, -86.2883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9394, device='cuda:0', dtype=torch.float64)
tensor([-67.3553, -76.5013, -45.2965, -80.1344, -84.9121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1310, device='cuda:0', dtype=torch.float64)
tensor([-68.3510, -76.3822, -45.6544, -80.2274, -84.2531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0621, device='cuda:0', dtype=torch.float64)
tensor([-69.5995, -76.2441, -46.0721, -80.4186, -83.7517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([-70.5080, -76.1783, -46.4739, -80.3741, -83.3305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2322, device='cuda:0', dtype=torch.float64)
tensor([-71.5802, -76.3124, -46.9687, -80.3678, -83.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9040, device='cuda:0', dtype=torch.float64)
tensor([-72.5219, -76.8040, -47.2870, -80.6530, -83.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1172, device='cuda:0', dtype=torch.float64)
tensor([-73.0676, -77.1721, -47.6260, -81.0829, -83.4618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0324, device='cuda:0', dtype=torch.float64)
tensor([-73.6663, -77.3835, -47.7383, -81.4178, -83.2881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1694, device='cuda:0', dtype=torch.float64)
tensor([-74.6078, -77.5647, -47.8921, -81.7495, -83.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9430, device='cuda:0', dtype=torch.float64)
tensor([-75.7036, -77.5928, -48.1184, -81.8606, -83.2098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9482, device='cuda:0', dtype=torch.float64)
tensor([-76.9128, -77.3352, -48.2812, -81.5610, -82.7647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9737, device='cuda:0', dtype=torch.float64)
tensor([-78.1504, -77.0876, -48.6031, -81.4285, -82.3939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1279, device='cuda:0', dtype=torch.float64)
tensor([-79.1744, -76.9998, -48.7332, -81.3697, -82.2459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9814, device='cuda:0', dtype=torch.float64)
tensor([-80.1093, -76.9324, -48.6735, -81.0870, -82.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2201, device='cuda:0', dtype=torch.float64)
tensor([-80.7581, -76.7889, -48.6017, -80.5790, -81.8115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1403, device='cuda:0', dtype=torch.float64)
tensor([-81.3975, -76.7684, -48.5835, -80.1881, -81.4901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8947, device='cuda:0', dtype=torch.float64)
tensor([-81.8026, -76.9024, -48.6125, -80.0456, -81.4754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9631, device='cuda:0', dtype=torch.float64)
tensor([-81.6072, -77.1983, -48.5056, -79.9889, -81.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0940, device='cuda:0', dtype=torch.float64)
tensor([-80.8155, -77.6016, -48.3837, -79.8825, -81.2222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2610, device='cuda:0', dtype=torch.float64)
tensor([-80.5131, -78.0453, -48.4151, -79.9212, -82.1841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1288, device='cuda:0', dtype=torch.float64)
tensor([-79.9464, -78.6349, -48.4908, -80.0487, -83.4675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1937, device='cuda:0', dtype=torch.float64)
tensor([-78.8122, -79.1674, -48.5386, -80.1135, -84.9840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9964, device='cuda:0', dtype=torch.float64)
tensor([-78.0655, -79.6737, -48.7616, -80.3042, -86.1632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1952, device='cuda:0', dtype=torch.float64)
tensor([-77.3083, -80.0037, -48.8831, -80.3298, -87.2237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0931, device='cuda:0', dtype=torch.float64)
tensor([-75.7920, -80.6416, -48.5985, -80.4245, -88.4079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9841, device='cuda:0', dtype=torch.float64)
tensor([-74.4681, -81.3148, -48.4499, -80.7596, -90.0694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1056, device='cuda:0', dtype=torch.float64)
tensor([-73.5252, -81.5097, -48.3292, -80.7254, -91.0166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1654, device='cuda:0', dtype=torch.float64)
tensor([-72.4295, -81.6555, -48.1820, -80.6871, -91.8884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1402, device='cuda:0', dtype=torch.float64)
tensor([-71.2410, -82.0470, -48.0072, -81.0150, -92.4893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9689, device='cuda:0', dtype=torch.float64)
tensor([-70.6439, -82.3026, -48.0629, -81.4023, -92.9133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0387, device='cuda:0', dtype=torch.float64)
tensor([-70.3282, -82.4346, -48.2920, -81.4159, -93.2684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2112, device='cuda:0', dtype=torch.float64)
tensor([-70.1377, -82.6379, -48.3606, -81.3371, -93.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0590, device='cuda:0', dtype=torch.float64)
tensor([-70.2171, -82.6542, -48.4337, -81.1748, -92.6883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1514, device='cuda:0', dtype=torch.float64)
tensor([-69.9980, -82.9286, -48.5644, -81.3661, -92.4471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9678, device='cuda:0', dtype=torch.float64)
tensor([-69.5545, -83.4103, -48.8252, -81.6934, -92.6178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9513, device='cuda:0', dtype=torch.float64)
tensor([-69.0025, -83.6581, -48.8579, -81.6722, -92.8714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0364, device='cuda:0', dtype=torch.float64)
tensor([-68.6768, -84.0524, -48.7928, -81.6198, -93.4171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1323, device='cuda:0', dtype=torch.float64)
tensor([-68.5178, -84.1851, -48.8528, -81.4066, -93.7246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9798, device='cuda:0', dtype=torch.float64)
tensor([-68.1866, -84.1382, -48.7227, -80.8843, -93.9102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9689, device='cuda:0', dtype=torch.float64)
tensor([-68.0310, -84.1675, -48.6385, -80.4291, -93.8037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9391, device='cuda:0', dtype=torch.float64)
tensor([-68.0289, -84.2207, -48.8230, -80.0420, -93.8424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1152, device='cuda:0', dtype=torch.float64)
tensor([-68.0135, -84.3832, -49.0238, -79.9458, -93.9492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9068, device='cuda:0', dtype=torch.float64)
tensor([-67.8727, -84.5728, -49.1269, -79.9723, -94.2621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9110, device='cuda:0', dtype=torch.float64)
tensor([-67.9837, -84.8353, -49.2904, -80.1059, -95.0479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0184, device='cuda:0', dtype=torch.float64)
tensor([-67.8143, -85.1248, -49.1411, -79.9718, -95.4397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9857, device='cuda:0', dtype=torch.float64)
tensor([-67.5616, -85.1272, -48.9423, -79.6102, -95.3790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0649, device='cuda:0', dtype=torch.float64)
tensor([-67.7054, -85.0417, -48.9136, -79.3178, -95.0105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0384, device='cuda:0', dtype=torch.float64)
tensor([-68.1877, -85.0188, -49.1613, -79.2594, -94.7371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9619, device='cuda:0', dtype=torch.float64)
tensor([-68.7744, -84.8145, -49.2738, -78.9366, -94.2460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0692, device='cuda:0', dtype=torch.float64)
tensor([-69.0680, -84.6350, -49.2173, -78.7897, -93.9729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1360, device='cuda:0', dtype=torch.float64)
tensor([-69.3264, -84.2975, -49.2111, -78.5533, -93.8425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9603, device='cuda:0', dtype=torch.float64)
tensor([-69.3241, -84.0144, -49.1127, -78.2205, -93.8459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0179, device='cuda:0', dtype=torch.float64)
tensor([-69.3325, -83.6296, -49.1469, -77.8675, -93.4389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0536, device='cuda:0', dtype=torch.float64)
tensor([-69.5865, -83.4000, -49.3760, -77.7596, -93.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0936, device='cuda:0', dtype=torch.float64)
tensor([-69.9733, -83.1982, -49.4366, -77.4698, -92.9311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1405, device='cuda:0', dtype=torch.float64)
tensor([-69.9645, -83.0095, -49.4206, -76.9010, -92.4023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9263, device='cuda:0', dtype=torch.float64)
tensor([-69.9305, -82.6530, -49.3593, -76.2015, -91.9755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0714, device='cuda:0', dtype=torch.float64)
tensor([-69.8561, -82.3347, -49.3380, -75.7559, -91.8892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0873, device='cuda:0', dtype=torch.float64)
tensor([-69.5725, -82.2095, -49.2928, -75.5322, -91.6128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0854, device='cuda:0', dtype=torch.float64)
tensor([-69.1768, -81.8670, -49.4146, -75.2546, -91.7464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9848, device='cuda:0', dtype=torch.float64)
tensor([-68.6915, -81.8763, -49.6365, -75.4993, -92.0945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0766, device='cuda:0', dtype=torch.float64)
tensor([-68.2259, -82.1813, -50.0685, -76.0395, -92.7366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9832, device='cuda:0', dtype=torch.float64)
tensor([-67.7097, -82.5363, -50.3493, -76.6376, -93.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8719, device='cuda:0', dtype=torch.float64)
tensor([-67.3499, -82.9769, -50.5146, -77.3657, -93.7751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0193, device='cuda:0', dtype=torch.float64)
tensor([-66.7235, -83.5713, -50.6683, -78.2520, -94.2089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0254, device='cuda:0', dtype=torch.float64)
tensor([-66.1908, -84.1691, -50.7553, -79.2698, -94.5241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0832, device='cuda:0', dtype=torch.float64)
tensor([-65.9389, -84.6357, -50.9568, -80.1906, -95.0524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9386, device='cuda:0', dtype=torch.float64)
tensor([-65.9475, -84.4555, -50.9488, -80.6669, -95.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2219, device='cuda:0', dtype=torch.float64)
tensor([-65.9503, -84.2165, -51.1426, -81.1430, -95.2856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0011, device='cuda:0', dtype=torch.float64)
tensor([-66.1247, -83.6538, -51.4700, -81.1959, -95.2671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9965, device='cuda:0', dtype=torch.float64)
tensor([-66.3477, -83.0836, -51.9009, -81.5059, -95.4473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0660, device='cuda:0', dtype=torch.float64)
tensor([-66.4958, -82.3089, -51.9833, -81.5450, -95.1970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1979, device='cuda:0', dtype=torch.float64)
tensor([-66.7379, -81.4387, -52.2082, -81.3935, -94.7894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9327, device='cuda:0', dtype=torch.float64)
tensor([-66.7984, -80.7526, -52.3840, -81.3126, -94.5391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9205, device='cuda:0', dtype=torch.float64)
tensor([-67.0748, -80.0558, -52.6846, -80.9876, -94.2527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9294, device='cuda:0', dtype=torch.float64)
tensor([-67.3014, -79.4851, -52.9366, -80.6396, -93.9094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0946, device='cuda:0', dtype=torch.float64)
tensor([-67.2329, -79.0466, -53.2122, -80.1924, -93.6425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1095, device='cuda:0', dtype=torch.float64)
tensor([-67.5158, -78.7076, -53.7773, -79.7939, -93.5619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1698, device='cuda:0', dtype=torch.float64)
tensor([-68.0886, -78.1076, -54.1719, -78.8882, -93.3006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2336, device='cuda:0', dtype=torch.float64)
tensor([-68.8164, -77.3657, -54.6052, -77.7682, -92.6524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0041, device='cuda:0', dtype=torch.float64)
tensor([-70.2074, -76.4327, -55.2524, -76.9258, -91.8483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1041, device='cuda:0', dtype=torch.float64)
tensor([-71.3341, -75.7582, -55.9040, -76.3395, -91.8674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9389, device='cuda:0', dtype=torch.float64)
tensor([-72.2526, -75.2209, -56.5387, -76.0955, -92.0165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0059, device='cuda:0', dtype=torch.float64)
tensor([-73.0052, -74.6479, -57.1100, -75.4598, -91.9159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8697, device='cuda:0', dtype=torch.float64)
tensor([-73.7899, -74.1058, -57.6086, -74.8689, -91.8086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8570, device='cuda:0', dtype=torch.float64)
tensor([-74.3704, -73.6138, -57.9854, -74.2456, -91.6992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9597, device='cuda:0', dtype=torch.float64)
tensor([-75.2283, -73.1864, -58.5135, -73.6489, -91.6314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0665, device='cuda:0', dtype=torch.float64)
tensor([-76.1025, -72.7629, -59.2057, -73.1845, -91.5879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8314, device='cuda:0', dtype=torch.float64)
tensor([-77.3382, -72.5140, -60.0008, -72.9547, -91.7532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9404, device='cuda:0', dtype=torch.float64)
tensor([-78.6609, -72.6262, -60.8178, -73.0062, -92.1894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9523, device='cuda:0', dtype=torch.float64)
tensor([-80.1977, -72.7705, -61.7725, -73.2350, -93.0742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9680, device='cuda:0', dtype=torch.float64)
tensor([-82.0916, -73.0910, -62.7935, -73.6575, -94.2359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8491, device='cuda:0', dtype=torch.float64)
tensor([-84.4472, -73.5142, -64.1101, -74.3604, -95.6896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8910, device='cuda:0', dtype=torch.float64)
tensor([-86.4631, -74.0775, -65.1512, -75.1842, -97.1659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0773, device='cuda:0', dtype=torch.float64)
tensor([-87.8431, -74.4938, -65.9311, -75.7379, -98.3024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8606, device='cuda:0', dtype=torch.float64)
tensor([-89.3539, -75.0614, -66.5375, -76.5082, -99.5131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9371, device='cuda:0', dtype=torch.float64)
tensor([ -91.4962,  -75.7215,  -67.5244,  -77.3042, -101.1303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0593, device='cuda:0', dtype=torch.float64)
tensor([ -93.2633,  -76.4034,  -68.3658,  -77.9796, -102.7161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8909, device='cuda:0', dtype=torch.float64)
tensor([ -95.1002,  -77.0495,  -69.3458,  -78.6791, -104.4436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9059, device='cuda:0', dtype=torch.float64)
tensor([ -96.5821,  -77.5793,  -70.3292,  -79.2541, -105.8953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8694, device='cuda:0', dtype=torch.float64)
tensor([ -97.4963,  -78.0039,  -71.2456,  -79.5557, -106.7982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8317, device='cuda:0', dtype=torch.float64)
tensor([ -98.4934,  -78.4215,  -72.0758,  -79.6525, -107.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9253, device='cuda:0', dtype=torch.float64)
tensor([ -98.7826,  -78.6256,  -72.6333,  -79.5384, -107.4273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7780, device='cuda:0', dtype=torch.float64)
tensor([ -98.8531,  -78.8335,  -73.1084,  -79.6433, -107.6394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8428, device='cuda:0', dtype=torch.float64)
tensor([ -98.2252,  -78.7843,  -73.5304,  -79.5953, -107.6588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9205, device='cuda:0', dtype=torch.float64)
tensor([ -97.1309,  -78.5019,  -73.6504,  -79.0352, -107.5692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([ -95.7823,  -78.1076,  -73.6824,  -78.4119, -106.9857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8599, device='cuda:0', dtype=torch.float64)
tensor([ -94.7622,  -77.7638,  -73.9184,  -77.8092, -106.5409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8769, device='cuda:0', dtype=torch.float64)
tensor([ -93.1295,  -77.1756,  -73.7183,  -77.1202, -105.6530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8716, device='cuda:0', dtype=torch.float64)
tensor([ -91.8092,  -76.6711,  -73.5452,  -76.5921, -104.8520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8086, device='cuda:0', dtype=torch.float64)
tensor([ -90.8447,  -76.2490,  -73.5447,  -76.2122, -104.2869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9306, device='cuda:0', dtype=torch.float64)
tensor([ -89.9446,  -75.9259,  -73.4487,  -75.9506, -103.6396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7978, device='cuda:0', dtype=torch.float64)
tensor([ -88.6246,  -75.6092,  -73.1689,  -75.6767, -102.9952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8592, device='cuda:0', dtype=torch.float64)
tensor([ -87.8577,  -75.4993,  -72.9489,  -75.4887, -102.2835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8823, device='cuda:0', dtype=torch.float64)
tensor([ -87.3325,  -75.5419,  -72.8377,  -75.2429, -101.5916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8385, device='cuda:0', dtype=torch.float64)
tensor([ -86.9941,  -75.6473,  -73.0548,  -74.9639, -101.2884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8883, device='cuda:0', dtype=torch.float64)
tensor([ -86.2193,  -75.6125,  -73.0857,  -74.4268, -100.8653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9374, device='cuda:0', dtype=torch.float64)
tensor([ -84.9520,  -75.5138,  -72.8494,  -73.8507, -100.4398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9172, device='cuda:0', dtype=torch.float64)
tensor([ -84.6049,  -75.6076,  -73.1222,  -73.5321, -100.3859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8476, device='cuda:0', dtype=torch.float64)
tensor([ -84.6102,  -75.5821,  -73.3662,  -73.3742, -100.1761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8323, device='cuda:0', dtype=torch.float64)
tensor([ -84.7515,  -75.6497,  -73.8398,  -73.4697, -100.2278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9950, device='cuda:0', dtype=torch.float64)
tensor([ -85.3756,  -75.6030,  -74.7018,  -73.5262, -100.3768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8339, device='cuda:0', dtype=torch.float64)
tensor([ -86.4299,  -75.7911,  -75.9413,  -73.6399, -100.8295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8555, device='cuda:0', dtype=torch.float64)
tensor([ -88.1133,  -76.3426,  -77.4987,  -73.7425, -101.4309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8415, device='cuda:0', dtype=torch.float64)
tensor([ -90.2946,  -77.3755,  -78.9976,  -74.2019, -101.8499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7361, device='cuda:0', dtype=torch.float64)
tensor([ -92.3268,  -78.4599,  -80.2718,  -74.5652, -102.2306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8068, device='cuda:0', dtype=torch.float64)
tensor([ -94.1351,  -79.2139,  -81.3330,  -75.0450, -102.6830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8961, device='cuda:0', dtype=torch.float64)
tensor([ -96.2572,  -80.1305,  -82.5942,  -75.9010, -103.4403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8596, device='cuda:0', dtype=torch.float64)
tensor([ -98.9810,  -81.5478,  -84.0699,  -77.0273, -104.3852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9332, device='cuda:0', dtype=torch.float64)
tensor([-101.0440,  -82.7248,  -85.1403,  -77.8939, -105.0344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7511, device='cuda:0', dtype=torch.float64)
tensor([-102.5252,  -83.5645,  -85.7598,  -78.5440, -105.4636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7880, device='cuda:0', dtype=torch.float64)
tensor([-104.1475,  -84.5410,  -86.6114,  -79.4419, -106.0078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8107, device='cuda:0', dtype=torch.float64)
tensor([-105.2370,  -85.0950,  -87.0364,  -79.9007, -106.0099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8176, device='cuda:0', dtype=torch.float64)
tensor([-105.8505,  -85.4348,  -87.3936,  -80.2970, -105.9576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8020, device='cuda:0', dtype=torch.float64)
tensor([-105.9947,  -85.4389,  -87.3592,  -80.5209, -105.7127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7955, device='cuda:0', dtype=torch.float64)
tensor([-106.7381,  -86.0619,  -87.8762,  -81.1003, -105.8962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7379, device='cuda:0', dtype=torch.float64)
tensor([-107.1698,  -86.4449,  -88.5899,  -81.6719, -106.0402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6927, device='cuda:0', dtype=torch.float64)
tensor([-107.7122,  -86.9094,  -89.2104,  -82.2843, -106.3275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8021, device='cuda:0', dtype=torch.float64)
tensor([-107.9705,  -87.3608,  -89.9539,  -82.9449, -106.6484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8290, device='cuda:0', dtype=torch.float64)
tensor([-107.5270,  -87.4370,  -90.0523,  -83.0739, -106.6353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7110, device='cuda:0', dtype=torch.float64)
tensor([-106.4055,  -87.3049,  -89.8418,  -83.0868, -106.4798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8509, device='cuda:0', dtype=torch.float64)
tensor([-104.5495,  -86.6612,  -89.0015,  -82.6803, -105.7944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8790, device='cuda:0', dtype=torch.float64)
tensor([-103.3818,  -86.3709,  -88.4252,  -82.6468, -105.4137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9187, device='cuda:0', dtype=torch.float64)
tensor([-101.8488,  -85.9115,  -87.5749,  -82.6077, -104.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8079, device='cuda:0', dtype=torch.float64)
tensor([-100.1589,  -85.2742,  -86.5034,  -82.5689, -103.9899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7890, device='cuda:0', dtype=torch.float64)
tensor([ -98.6267,  -84.5829,  -85.5739,  -82.3247, -103.3633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6598, device='cuda:0', dtype=torch.float64)
tensor([ -96.7378,  -83.6810,  -84.4036,  -81.8226, -102.4541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7744, device='cuda:0', dtype=torch.float64)
tensor([ -95.1305,  -82.9965,  -83.4515,  -81.6359, -101.6375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8355, device='cuda:0', dtype=torch.float64)
tensor([ -93.5319,  -82.3805,  -82.4340,  -81.3959, -100.9299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7172, device='cuda:0', dtype=torch.float64)
tensor([ -91.6599,  -81.6248,  -81.2388,  -80.9631, -100.3460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8172, device='cuda:0', dtype=torch.float64)
tensor([ -89.9973,  -81.1413,  -80.3344,  -80.7851, -100.4051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8769, device='cuda:0', dtype=torch.float64)
tensor([ -88.7456,  -80.9635,  -79.6230,  -80.6059, -100.8904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8650, device='cuda:0', dtype=torch.float64)
tensor([ -87.6992,  -81.0328,  -79.0155,  -80.5438, -101.4445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8470, device='cuda:0', dtype=torch.float64)
tensor([ -87.1908,  -81.3568,  -78.7879,  -80.7989, -102.3479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6959, device='cuda:0', dtype=torch.float64)
tensor([ -86.8093,  -81.5922,  -78.4305,  -80.9444, -102.9231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8615, device='cuda:0', dtype=torch.float64)
tensor([ -86.9236,  -81.9486,  -78.2863,  -81.1823, -103.1357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8077, device='cuda:0', dtype=torch.float64)
tensor([ -87.0128,  -82.1628,  -78.2324,  -81.1124, -103.2081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8196, device='cuda:0', dtype=torch.float64)
tensor([ -87.1875,  -82.5294,  -77.9468,  -81.2004, -103.0965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7701, device='cuda:0', dtype=torch.float64)
tensor([ -87.4476,  -82.9157,  -77.6382,  -81.3682, -102.8286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9622, device='cuda:0', dtype=torch.float64)
tensor([ -88.0730,  -83.4943,  -77.6978,  -81.7928, -102.6595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8685, device='cuda:0', dtype=torch.float64)
tensor([ -88.8884,  -84.0901,  -77.7047,  -82.1287, -102.4998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8527, device='cuda:0', dtype=torch.float64)
tensor([ -89.2103,  -84.3873,  -77.6124,  -82.2188, -102.7903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8237, device='cuda:0', dtype=torch.float64)
tensor([ -89.9684,  -84.9495,  -77.9322,  -82.5296, -103.5784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7894, device='cuda:0', dtype=torch.float64)
tensor([ -91.2392,  -85.6787,  -78.6492,  -82.9048, -104.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8643, device='cuda:0', dtype=torch.float64)
tensor([ -92.6790,  -86.7656,  -79.6621,  -83.6040, -105.6250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8337, device='cuda:0', dtype=torch.float64)
tensor([ -94.1901,  -87.8682,  -80.5576,  -84.4966, -106.5043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8239, device='cuda:0', dtype=torch.float64)
tensor([ -95.8523,  -89.1445,  -81.8973,  -85.4547, -107.5068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7603, device='cuda:0', dtype=torch.float64)
tensor([ -97.4941,  -90.3310,  -83.0674,  -86.4181, -108.0618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8552, device='cuda:0', dtype=torch.float64)
tensor([ -98.8028,  -91.2256,  -84.1028,  -87.4365, -108.7515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7679, device='cuda:0', dtype=torch.float64)
tensor([-100.0082,  -92.1474,  -85.0428,  -88.6039, -109.6418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8228, device='cuda:0', dtype=torch.float64)
tensor([-101.7257,  -93.3631,  -86.4198,  -89.9948, -110.8904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7345, device='cuda:0', dtype=torch.float64)
tensor([-103.5004,  -94.5084,  -87.6977,  -91.4169, -111.9754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7699, device='cuda:0', dtype=torch.float64)
tensor([-104.7006,  -95.2700,  -88.8915,  -92.5187, -113.0311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8725, device='cuda:0', dtype=torch.float64)
tensor([-105.0497,  -95.5270,  -89.2595,  -92.9645, -113.4355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7478, device='cuda:0', dtype=torch.float64)
tensor([-105.3417,  -95.6254,  -89.7108,  -93.4970, -113.8473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7661, device='cuda:0', dtype=torch.float64)
tensor([-105.5622,  -95.7082,  -90.2400,  -93.9938, -114.6109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7094, device='cuda:0', dtype=torch.float64)
tensor([-105.7410,  -95.7207,  -90.6448,  -94.3742, -114.8153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8796, device='cuda:0', dtype=torch.float64)
tensor([-105.7567,  -95.5785,  -91.0366,  -94.5866, -114.9282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7500, device='cuda:0', dtype=torch.float64)
tensor([-105.7508,  -95.2530,  -91.2328,  -94.9487, -114.7657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7458, device='cuda:0', dtype=torch.float64)
tensor([-105.4874,  -94.7778,  -91.3927,  -95.0652, -114.4921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7674, device='cuda:0', dtype=torch.float64)
tensor([-105.3689,  -94.2743,  -91.4646,  -95.1469, -113.9303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7079, device='cuda:0', dtype=torch.float64)
tensor([-105.2837,  -93.7059,  -91.2241,  -95.1538, -112.9728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7092, device='cuda:0', dtype=torch.float64)
tensor([-104.4580,  -92.6349,  -90.6968,  -94.8002, -111.8226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7581, device='cuda:0', dtype=torch.float64)
tensor([-103.7706,  -91.8363,  -90.3719,  -94.8357, -111.0162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7587, device='cuda:0', dtype=torch.float64)
tensor([-102.5901,  -90.8295,  -89.7055,  -94.5223, -110.1195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7171, device='cuda:0', dtype=torch.float64)
tensor([-101.5356,  -89.8532,  -89.1931,  -94.1599, -109.5756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7087, device='cuda:0', dtype=torch.float64)
tensor([-100.6465,  -89.1853,  -88.8378,  -93.9755, -109.4704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8395, device='cuda:0', dtype=torch.float64)
tensor([-100.5845,  -88.9509,  -89.1101,  -94.1139, -109.8123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7538, device='cuda:0', dtype=torch.float64)
tensor([-100.3420,  -88.9094,  -89.4078,  -94.2617, -110.4342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7699, device='cuda:0', dtype=torch.float64)
tensor([-100.2917,  -89.1335,  -90.0736,  -94.3136, -111.5157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6994, device='cuda:0', dtype=torch.float64)
tensor([-100.2550,  -89.4739,  -90.8212,  -94.5734, -112.6350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7416, device='cuda:0', dtype=torch.float64)
tensor([-100.6571,  -90.2224,  -91.6653,  -95.0598, -113.7239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6974, device='cuda:0', dtype=torch.float64)
tensor([-100.9084,  -90.9237,  -92.3793,  -95.3769, -114.9727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7363, device='cuda:0', dtype=torch.float64)
tensor([-101.3690,  -91.8035,  -92.8035,  -96.0572, -116.0819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7258, device='cuda:0', dtype=torch.float64)
tensor([-101.5775,  -92.4938,  -93.2176,  -96.3977, -117.0106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6807, device='cuda:0', dtype=torch.float64)
tensor([-101.7037,  -93.1092,  -93.6588,  -96.6962, -118.1144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6419, device='cuda:0', dtype=torch.float64)
tensor([-102.1441,  -93.8208,  -94.1476,  -97.1676, -118.9402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6892, device='cuda:0', dtype=torch.float64)
tensor([-102.1435,  -94.3152,  -94.2249,  -97.2594, -119.3616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7562, device='cuda:0', dtype=torch.float64)
tensor([-102.6366,  -94.8133,  -94.6353,  -97.5330, -119.8204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7785, device='cuda:0', dtype=torch.float64)
tensor([-103.2038,  -95.4399,  -95.0236,  -97.8449, -120.4033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7700, device='cuda:0', dtype=torch.float64)
tensor([-103.8472,  -96.0066,  -95.4772,  -98.2286, -120.9295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7266, device='cuda:0', dtype=torch.float64)
tensor([-104.5974,  -96.4927,  -95.9448,  -98.5994, -121.3855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6304, device='cuda:0', dtype=torch.float64)
tensor([-105.3125,  -97.1012,  -96.5539,  -99.0171, -121.9718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7165, device='cuda:0', dtype=torch.float64)
tensor([-105.7662,  -97.3286,  -96.8793,  -99.2526, -122.3625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6945, device='cuda:0', dtype=torch.float64)
tensor([-106.3868,  -97.6213,  -96.9541,  -99.4643, -122.4110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7355, device='cuda:0', dtype=torch.float64)
tensor([-107.1850,  -97.9938,  -97.0376,  -99.5658, -122.4057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7425, device='cuda:0', dtype=torch.float64)
tensor([-108.3974,  -98.4936,  -97.2635, -100.0595, -122.5691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7461, device='cuda:0', dtype=torch.float64)
tensor([-108.8732,  -98.3799,  -97.1181, -100.1904, -122.4642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6870, device='cuda:0', dtype=torch.float64)
tensor([-108.9981,  -98.0993,  -96.7307, -100.1520, -122.1065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6605, device='cuda:0', dtype=torch.float64)
tensor([-108.9534,  -97.7446,  -96.4051, -100.0469, -121.8432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7769, device='cuda:0', dtype=torch.float64)
tensor([-109.0473,  -97.4021,  -96.2017, -100.0031, -121.8929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8190, device='cuda:0', dtype=torch.float64)
tensor([-108.9597,  -97.0198,  -96.1770, -100.1106, -122.0508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7710, device='cuda:0', dtype=torch.float64)
tensor([-109.2825,  -96.9369,  -96.6062, -100.4323, -122.4354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7063, device='cuda:0', dtype=torch.float64)
tensor([-109.0749,  -96.6529,  -96.7310, -100.5067, -122.6373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6244, device='cuda:0', dtype=torch.float64)
tensor([-108.6293,  -96.4823,  -96.7172, -100.4264, -122.8999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7415, device='cuda:0', dtype=torch.float64)
tensor([-108.6672,  -96.5025,  -97.0873, -100.3889, -123.2276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6484, device='cuda:0', dtype=torch.float64)
tensor([-109.6136,  -97.0251,  -97.8210, -100.8001, -123.6142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7518, device='cuda:0', dtype=torch.float64)
tensor([-110.8692,  -97.7425,  -98.8665, -101.5229, -124.2519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6894, device='cuda:0', dtype=torch.float64)
tensor([-111.4945,  -97.9857,  -99.3541, -101.9029, -124.4424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7190, device='cuda:0', dtype=torch.float64)
tensor([-111.6351,  -98.0303,  -99.7131, -102.0994, -124.5724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6065, device='cuda:0', dtype=torch.float64)
tensor([-111.4873,  -97.8753, -100.1053, -102.1430, -124.7248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7187, device='cuda:0', dtype=torch.float64)
tensor([-111.2582,  -97.8070, -100.5729, -102.0978, -124.8417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6911, device='cuda:0', dtype=torch.float64)
tensor([-111.4832,  -97.8979, -101.1474, -102.3620, -124.9395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6925, device='cuda:0', dtype=torch.float64)
tensor([-112.0101,  -98.3479, -101.7279, -102.8418, -125.1955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6938, device='cuda:0', dtype=torch.float64)
tensor([-112.0653,  -98.4014, -102.2690, -103.0884, -125.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7058, device='cuda:0', dtype=torch.float64)
tensor([-112.1734,  -98.3773, -102.6310, -103.1506, -125.5859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6968, device='cuda:0', dtype=torch.float64)
tensor([-113.1570,  -98.9219, -103.4495, -103.6160, -126.2465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6883, device='cuda:0', dtype=torch.float64)
tensor([-113.5419,  -98.9146, -104.0080, -103.7389, -126.5725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8146, device='cuda:0', dtype=torch.float64)
tensor([-113.4042,  -98.6427, -104.1980, -103.5299, -126.8936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6348, device='cuda:0', dtype=torch.float64)
tensor([-113.6428,  -98.5923, -104.7051, -103.5199, -127.8145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7913, device='cuda:0', dtype=torch.float64)
tensor([-113.5034,  -98.4160, -105.1781, -103.3594, -128.7894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7491, device='cuda:0', dtype=torch.float64)
tensor([-112.4997,  -97.8339, -105.2701, -102.7363, -129.4946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6924, device='cuda:0', dtype=torch.float64)
tensor([-111.5825,  -97.2417, -105.3950, -102.0560, -130.1027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6387, device='cuda:0', dtype=torch.float64)
tensor([-110.6846,  -96.6550, -105.3298, -101.4224, -130.4274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6812, device='cuda:0', dtype=torch.float64)
tensor([-109.9135,  -96.2862, -105.4249, -100.7812, -130.7754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7093, device='cuda:0', dtype=torch.float64)
tensor([-109.7312,  -96.1616, -105.7792, -100.4423, -131.1596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6710, device='cuda:0', dtype=torch.float64)
tensor([-110.2887,  -96.5801, -106.5422, -100.5635, -132.2731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7415, device='cuda:0', dtype=torch.float64)
tensor([-110.2264,  -96.8860, -106.8861, -100.6406, -133.1582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6498, device='cuda:0', dtype=torch.float64)
tensor([-111.0075,  -97.3945, -107.7412, -101.1359, -134.1617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7144, device='cuda:0', dtype=torch.float64)
tensor([-111.9526,  -98.1228, -108.6693, -101.6908, -135.5224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7236, device='cuda:0', dtype=torch.float64)
tensor([-113.7515,  -99.4134, -110.1705, -102.8217, -137.5919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7923, device='cuda:0', dtype=torch.float64)
tensor([-115.1825, -100.4861, -111.4927, -103.7314, -139.3005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6286, device='cuda:0', dtype=torch.float64)
tensor([-116.3732, -101.5186, -112.7311, -104.7241, -140.9985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7004, device='cuda:0', dtype=torch.float64)
tensor([-116.9921, -102.0951, -113.4795, -105.3441, -142.2526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6439, device='cuda:0', dtype=torch.float64)
tensor([-117.0225, -102.4204, -113.8550, -105.6774, -143.3352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6298, device='cuda:0', dtype=torch.float64)
tensor([-117.4627, -102.8829, -114.3342, -106.3547, -144.5308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6438, device='cuda:0', dtype=torch.float64)
tensor([-118.0730, -103.6010, -114.8338, -106.9291, -145.9879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6057, device='cuda:0', dtype=torch.float64)
tensor([-118.3503, -104.1980, -114.9595, -107.5623, -147.0642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6345, device='cuda:0', dtype=torch.float64)
tensor([-118.6181, -104.4967, -114.6865, -107.8962, -147.3767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7029, device='cuda:0', dtype=torch.float64)
tensor([-119.1503, -104.8569, -114.5665, -108.1425, -147.8071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6351, device='cuda:0', dtype=torch.float64)
tensor([-120.1551, -105.4060, -114.8662, -108.9529, -148.6288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7047, device='cuda:0', dtype=torch.float64)
tensor([-121.4188, -106.3387, -115.5424, -109.8787, -149.5955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7527, device='cuda:0', dtype=torch.float64)
tensor([-122.9838, -107.5308, -116.1288, -110.7405, -150.5289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6674, device='cuda:0', dtype=torch.float64)
tensor([-124.3959, -108.6007, -116.4033, -111.3492, -151.0807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7495, device='cuda:0', dtype=torch.float64)
tensor([-124.7594, -109.0653, -116.1185, -111.5491, -151.0597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7485, device='cuda:0', dtype=torch.float64)
tensor([-126.1504, -110.1756, -116.4923, -112.4280, -151.8143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6327, device='cuda:0', dtype=torch.float64)
tensor([-127.3549, -111.1222, -117.1316, -113.4067, -152.8973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7357, device='cuda:0', dtype=torch.float64)
tensor([-128.2221, -112.4071, -118.0314, -114.1179, -154.3968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6462, device='cuda:0', dtype=torch.float64)
tensor([-128.3689, -113.2630, -118.6641, -114.2947, -155.7701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6597, device='cuda:0', dtype=torch.float64)
tensor([-127.3205, -113.1709, -118.4552, -113.8087, -156.4092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6732, device='cuda:0', dtype=torch.float64)
tensor([-127.2561, -113.4400, -118.4031, -113.9245, -157.2767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6881, device='cuda:0', dtype=torch.float64)
tensor([-127.2077, -113.6756, -118.2859, -113.9516, -158.0017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6001, device='cuda:0', dtype=torch.float64)
tensor([-127.1087, -113.7878, -118.0198, -113.9708, -158.4276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7387, device='cuda:0', dtype=torch.float64)
tensor([-127.1444, -114.0797, -118.2685, -114.2131, -159.1085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7380, device='cuda:0', dtype=torch.float64)
tensor([-127.7311, -115.0360, -119.1538, -114.7472, -160.6588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6726, device='cuda:0', dtype=torch.float64)
tensor([-127.9357, -115.9765, -119.8949, -115.0036, -161.9695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6329, device='cuda:0', dtype=torch.float64)
tensor([-127.2236, -116.7993, -120.3371, -114.9737, -163.3255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7399, device='cuda:0', dtype=torch.float64)
tensor([-127.5641, -117.9713, -120.9690, -115.2328, -164.5973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7064, device='cuda:0', dtype=torch.float64)
tensor([-127.5823, -119.1754, -121.2514, -115.4553, -165.7789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6829, device='cuda:0', dtype=torch.float64)
tensor([-128.2220, -120.6154, -121.8482, -115.9558, -166.9520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7109, device='cuda:0', dtype=torch.float64)
tensor([-129.7641, -122.3637, -123.0094, -116.9180, -168.2448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6845, device='cuda:0', dtype=torch.float64)
tensor([-131.6231, -123.8760, -124.9059, -118.6747, -170.2173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6594, device='cuda:0', dtype=torch.float64)
tensor([-132.1883, -124.0355, -125.4226, -119.6872, -170.9454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5280, device='cuda:0', dtype=torch.float64)
tensor([-133.2946, -124.7099, -126.2455, -120.5721, -171.6701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7284, device='cuda:0', dtype=torch.float64)
tensor([-135.0820, -126.3081, -127.7228, -121.3988, -172.5370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6613, device='cuda:0', dtype=torch.float64)
tensor([-136.9230, -127.6299, -129.1556, -122.4722, -173.3994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7446, device='cuda:0', dtype=torch.float64)
tensor([-137.7048, -128.1322, -129.5658, -122.9111, -173.4712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6820, device='cuda:0', dtype=torch.float64)
tensor([-137.8741, -128.3047, -129.6343, -123.2468, -173.5895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7129, device='cuda:0', dtype=torch.float64)
tensor([-138.1481, -128.3387, -129.3910, -123.1457, -173.2953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6481, device='cuda:0', dtype=torch.float64)
tensor([-139.1554, -128.4743, -129.6593, -123.3751, -172.9463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5872, device='cuda:0', dtype=torch.float64)
tensor([-140.4878, -129.1690, -130.3040, -123.7171, -172.6939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5957, device='cuda:0', dtype=torch.float64)
tensor([-140.7577, -129.3550, -130.5841, -123.8787, -172.4538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5939, device='cuda:0', dtype=torch.float64)
tensor([-141.7215, -130.2158, -131.4593, -124.4838, -172.9563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6066, device='cuda:0', dtype=torch.float64)
tensor([-143.0518, -131.4051, -132.7267, -125.2186, -173.6941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6439, device='cuda:0', dtype=torch.float64)
tensor([-145.0010, -133.0176, -134.3919, -126.1822, -174.7843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5496, device='cuda:0', dtype=torch.float64)
tensor([-146.8044, -134.7310, -136.0929, -127.3769, -176.1232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5234, device='cuda:0', dtype=torch.float64)
tensor([-148.3070, -135.8613, -137.4491, -128.5780, -177.1623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6871, device='cuda:0', dtype=torch.float64)
tensor([-148.4826, -135.7829, -137.6510, -129.0161, -177.3571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5620, device='cuda:0', dtype=torch.float64)
tensor([-149.3690, -135.7524, -138.2679, -129.6847, -177.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6333, device='cuda:0', dtype=torch.float64)
tensor([-151.4471, -136.8350, -139.9043, -131.1558, -178.7007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5663, device='cuda:0', dtype=torch.float64)
tensor([-152.7426, -137.4726, -140.7748, -132.2450, -179.2058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5457, device='cuda:0', dtype=torch.float64)
tensor([-153.6543, -138.2567, -141.5534, -133.3172, -179.6533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5572, device='cuda:0', dtype=torch.float64)
tensor([-154.3420, -138.4954, -142.0373, -134.1381, -179.6651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5664, device='cuda:0', dtype=torch.float64)
tensor([-154.8858, -138.6049, -142.3164, -134.7845, -179.6495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4882, device='cuda:0', dtype=torch.float64)
tensor([-155.7888, -139.3595, -143.1389, -135.7601, -180.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4910, device='cuda:0', dtype=torch.float64)
tensor([-156.1931, -140.0522, -143.7196, -136.4358, -180.4913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5710, device='cuda:0', dtype=torch.float64)
tensor([-155.9707, -140.3141, -144.0043, -136.8415, -180.8670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6462, device='cuda:0', dtype=torch.float64)
tensor([-154.8770, -139.9091, -143.5665, -136.9002, -180.7023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6270, device='cuda:0', dtype=torch.float64)
tensor([-153.5818, -139.3463, -143.0428, -136.7060, -180.3841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5936, device='cuda:0', dtype=torch.float64)
tensor([-151.2947, -137.5563, -141.4090, -135.8401, -179.0713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5286, device='cuda:0', dtype=torch.float64)
tensor([-148.2828, -135.4567, -139.4962, -134.5894, -177.5360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4903, device='cuda:0', dtype=torch.float64)
tensor([-145.9521, -134.0496, -138.3881, -133.9118, -176.8621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6117, device='cuda:0', dtype=torch.float64)
tensor([-143.7526, -132.7355, -137.0749, -132.9524, -175.9131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6456, device='cuda:0', dtype=torch.float64)
tensor([-140.6636, -130.2888, -134.7049, -131.2331, -173.9222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7014, device='cuda:0', dtype=torch.float64)
tensor([-137.3508, -128.1338, -132.8281, -130.2097, -172.7281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5750, device='cuda:0', dtype=torch.float64)
tensor([-134.6590, -126.6998, -131.4348, -129.2161, -171.7023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6873, device='cuda:0', dtype=torch.float64)
tensor([-133.3211, -126.3043, -131.0571, -129.4370, -171.7266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5969, device='cuda:0', dtype=torch.float64)
tensor([-132.6961, -126.0305, -131.0484, -129.9548, -171.8582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6625, device='cuda:0', dtype=torch.float64)
tensor([-133.5571, -126.5234, -131.8122, -130.8770, -172.4416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5189, device='cuda:0', dtype=torch.float64)
tensor([-134.2047, -127.0381, -132.5473, -131.5982, -173.1454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6917, device='cuda:0', dtype=torch.float64)
tensor([-136.0831, -128.2912, -133.7751, -132.7596, -174.0224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5690, device='cuda:0', dtype=torch.float64)
tensor([-137.3757, -129.3403, -134.6097, -133.7200, -174.7880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6870, device='cuda:0', dtype=torch.float64)
tensor([-140.1761, -131.3833, -136.3090, -135.2426, -176.1835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6657, device='cuda:0', dtype=torch.float64)
tensor([-143.0212, -133.5882, -138.3410, -136.8163, -177.7869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5804, device='cuda:0', dtype=torch.float64)
tensor([-144.9523, -134.9738, -139.8775, -137.9670, -179.0733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5814, device='cuda:0', dtype=torch.float64)
tensor([-146.5516, -136.6715, -141.4158, -138.9355, -180.2890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5821, device='cuda:0', dtype=torch.float64)
tensor([-148.3864, -138.6642, -143.7319, -140.8688, -182.4409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6869, device='cuda:0', dtype=torch.float64)
tensor([-150.3875, -140.7005, -146.2943, -143.7572, -185.0384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5628, device='cuda:0', dtype=torch.float64)
tensor([-151.8619, -142.6006, -148.5935, -146.6704, -187.5876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5504, device='cuda:0', dtype=torch.float64)
tensor([-153.1678, -144.8764, -151.1519, -149.1262, -190.2088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6824, device='cuda:0', dtype=torch.float64)
tensor([-155.6849, -147.6951, -154.5453, -152.8765, -193.5540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5813, device='cuda:0', dtype=torch.float64)
tensor([-158.4660, -150.3277, -158.0445, -156.7856, -196.8277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5706, device='cuda:0', dtype=torch.float64)
tensor([-160.1420, -152.0426, -160.4979, -159.7906, -199.1299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6385, device='cuda:0', dtype=torch.float64)
tensor([-161.9322, -154.2838, -163.1026, -163.2814, -201.8858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6070, device='cuda:0', dtype=torch.float64)
tensor([-162.2091, -155.6185, -164.7266, -165.8832, -203.7903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5796, device='cuda:0', dtype=torch.float64)
tensor([-163.0896, -157.0295, -166.4616, -168.2619, -205.4771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6057, device='cuda:0', dtype=torch.float64)
tensor([-164.1817, -158.6831, -168.3004, -170.6914, -207.3445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5494, device='cuda:0', dtype=torch.float64)
tensor([-164.9609, -159.9539, -169.8172, -172.5412, -208.7268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5473, device='cuda:0', dtype=torch.float64)
tensor([-166.0042, -161.4340, -171.2902, -174.2459, -209.9322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5211, device='cuda:0', dtype=torch.float64)
tensor([-167.0228, -162.9687, -173.0151, -176.3176, -211.3439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5060, device='cuda:0', dtype=torch.float64)
tensor([-168.8670, -165.1242, -175.6449, -179.2713, -213.6162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6489, device='cuda:0', dtype=torch.float64)
tensor([-171.2988, -167.7937, -178.9498, -182.9961, -216.5045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6004, device='cuda:0', dtype=torch.float64)
tensor([-173.7456, -170.3521, -182.0668, -186.1355, -219.1182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5473, device='cuda:0', dtype=torch.float64)
tensor([-177.3364, -173.8552, -186.4336, -190.2781, -222.9195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5365, device='cuda:0', dtype=torch.float64)
tensor([-180.8266, -177.2806, -190.7519, -194.5328, -226.9126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6060, device='cuda:0', dtype=torch.float64)
tensor([-184.1296, -180.7912, -194.8663, -198.3370, -230.8746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5604, device='cuda:0', dtype=torch.float64)
tensor([-186.1503, -182.7790, -197.3167, -200.2511, -233.2108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5581, device='cuda:0', dtype=torch.float64)
tensor([-187.6791, -184.6498, -199.2508, -201.8489, -235.1535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4782, device='cuda:0', dtype=torch.float64)
tensor([-188.6571, -186.1863, -201.0921, -203.3554, -236.8528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4983, device='cuda:0', dtype=torch.float64)
tensor([-189.1072, -187.5415, -202.7513, -204.6877, -238.3933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5424, device='cuda:0', dtype=torch.float64)
tensor([-189.3997, -188.7155, -203.8023, -205.3985, -239.3809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5388, device='cuda:0', dtype=torch.float64)
tensor([-190.3628, -190.5627, -205.8222, -206.9469, -241.2328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4644, device='cuda:0', dtype=torch.float64)
tensor([-190.9357, -192.1619, -207.6265, -208.4402, -242.8741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5002, device='cuda:0', dtype=torch.float64)
tensor([-190.7542, -193.3350, -208.6338, -209.3600, -243.5857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4870, device='cuda:0', dtype=torch.float64)
tensor([-190.9249, -194.8533, -210.0295, -211.1619, -244.6417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5083, device='cuda:0', dtype=torch.float64)
tensor([-191.8696, -197.0760, -211.8783, -213.5943, -246.3139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4546, device='cuda:0', dtype=torch.float64)
tensor([-193.5031, -199.5313, -214.1823, -216.6072, -248.4667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4958, device='cuda:0', dtype=torch.float64)
tensor([-195.3308, -201.9294, -216.1297, -218.8558, -250.3816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5726, device='cuda:0', dtype=torch.float64)
tensor([-196.4081, -203.9118, -217.3775, -219.8393, -251.4283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5229, device='cuda:0', dtype=torch.float64)
tensor([-198.2568, -206.4823, -219.4876, -222.1935, -253.4008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4847, device='cuda:0', dtype=torch.float64)
tensor([-199.7545, -208.4623, -221.0006, -223.8082, -254.9574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6417, device='cuda:0', dtype=torch.float64)
tensor([-201.8699, -210.7398, -223.1278, -226.3746, -257.3850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5473, device='cuda:0', dtype=torch.float64)
tensor([-202.7145, -212.0680, -224.2199, -228.1621, -258.5952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4886, device='cuda:0', dtype=torch.float64)
tensor([-203.8480, -213.8084, -226.0453, -231.0508, -260.5640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6025, device='cuda:0', dtype=torch.float64)
tensor([-206.2217, -216.2264, -229.0920, -235.4695, -264.1353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4497, device='cuda:0', dtype=torch.float64)
tensor([-208.9192, -219.3431, -232.8579, -240.6814, -268.6201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4928, device='cuda:0', dtype=torch.float64)
tensor([-210.7824, -221.9597, -236.3217, -245.9668, -272.6414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4784, device='cuda:0', dtype=torch.float64)
tensor([-211.1370, -223.3172, -238.3434, -250.0379, -274.8059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4546, device='cuda:0', dtype=torch.float64)
tensor([-211.9870, -224.7526, -240.2159, -253.8242, -277.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5019, device='cuda:0', dtype=torch.float64)
tensor([-213.3243, -226.7050, -242.7216, -258.4605, -280.1050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5692, device='cuda:0', dtype=torch.float64)
tensor([-216.0059, -229.8947, -246.4016, -264.4983, -284.8766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4470, device='cuda:0', dtype=torch.float64)
tensor([-218.2341, -232.5356, -249.1622, -269.3981, -288.5699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5438, device='cuda:0', dtype=torch.float64)
tensor([-220.0888, -234.7856, -251.6189, -273.6131, -291.7326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4428, device='cuda:0', dtype=torch.float64)
tensor([-221.3908, -236.2613, -252.7478, -275.8013, -293.3423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5056, device='cuda:0', dtype=torch.float64)
tensor([-222.4078, -237.5814, -253.7521, -277.9797, -294.7336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4435, device='cuda:0', dtype=torch.float64)
tensor([-222.5206, -237.8898, -254.1320, -279.8043, -295.0359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5005, device='cuda:0', dtype=torch.float64)
tensor([-223.2275, -238.4032, -254.4483, -280.8099, -295.4321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4524, device='cuda:0', dtype=torch.float64)
tensor([-224.8390, -239.3605, -255.1583, -281.6696, -296.5168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4570, device='cuda:0', dtype=torch.float64)
tensor([-226.4490, -240.4438, -256.0101, -282.8922, -297.7482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4981, device='cuda:0', dtype=torch.float64)
tensor([-226.6890, -240.5616, -256.0218, -283.5538, -297.4127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4931, device='cuda:0', dtype=torch.float64)
tensor([-229.0321, -242.4415, -258.1851, -286.1799, -300.0044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4320, device='cuda:0', dtype=torch.float64)
tensor([-230.6897, -243.6889, -259.5650, -287.7103, -301.5647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4180, device='cuda:0', dtype=torch.float64)
tensor([-231.1807, -244.1887, -260.1951, -288.6884, -301.7792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4677, device='cuda:0', dtype=torch.float64)
tensor([-231.4113, -244.6176, -260.4568, -289.5610, -301.4884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4713, device='cuda:0', dtype=torch.float64)
tensor([-233.1861, -246.3163, -262.0432, -291.8545, -303.2632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4511, device='cuda:0', dtype=torch.float64)
tensor([-235.5392, -248.3448, -264.4822, -294.8430, -306.0920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4017, device='cuda:0', dtype=torch.float64)
tensor([-237.8450, -250.5753, -266.8656, -297.3151, -309.0500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4350, device='cuda:0', dtype=torch.float64)
tensor([-239.6864, -252.6072, -269.3296, -300.1706, -311.9741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4274, device='cuda:0', dtype=torch.float64)
tensor([-241.5904, -254.5098, -271.8897, -303.0273, -315.0580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4900, device='cuda:0', dtype=torch.float64)
tensor([-241.2901, -254.5999, -272.9987, -305.0976, -315.7756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4591, device='cuda:0', dtype=torch.float64)
tensor([-240.7190, -254.3370, -273.4181, -306.0364, -315.7710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4840, device='cuda:0', dtype=torch.float64)
tensor([-239.3758, -253.6374, -273.4015, -307.2718, -315.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4710, device='cuda:0', dtype=torch.float64)
tensor([-237.3654, -252.8651, -273.1466, -308.8374, -314.6323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4988, device='cuda:0', dtype=torch.float64)
tensor([-235.1845, -251.7101, -272.5722, -310.4221, -313.5818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4448, device='cuda:0', dtype=torch.float64)
tensor([-232.6209, -249.9622, -271.1938, -311.4788, -311.6260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4896, device='cuda:0', dtype=torch.float64)
tensor([-230.8348, -249.0528, -271.0097, -314.2346, -311.0974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4577, device='cuda:0', dtype=torch.float64)
tensor([-228.9142, -247.5306, -270.0460, -315.6686, -309.8055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4034, device='cuda:0', dtype=torch.float64)
tensor([-227.2205, -246.4512, -269.2044, -317.3973, -308.9893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4923, device='cuda:0', dtype=torch.float64)
tensor([-225.9398, -245.3971, -268.3520, -317.9180, -307.9478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4845, device='cuda:0', dtype=torch.float64)
tensor([-224.1848, -244.3067, -267.0963, -318.4019, -306.4907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5193, device='cuda:0', dtype=torch.float64)
tensor([-224.5448, -245.0268, -267.5867, -320.2759, -307.5670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4779, device='cuda:0', dtype=torch.float64)
tensor([-227.0094, -247.2435, -270.1252, -323.6779, -311.2153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4694, device='cuda:0', dtype=torch.float64)
tensor([-228.9748, -249.0765, -272.0040, -326.5978, -314.1397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4810, device='cuda:0', dtype=torch.float64)
tensor([-232.9393, -252.3432, -275.9544, -330.8285, -319.5794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4909, device='cuda:0', dtype=torch.float64)
tensor([-237.6671, -256.0291, -279.8631, -334.9571, -325.3920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4939, device='cuda:0', dtype=torch.float64)
tensor([-243.3277, -260.5880, -284.6401, -339.8578, -332.6096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4821, device='cuda:0', dtype=torch.float64)
tensor([-249.1035, -265.2282, -289.3681, -343.9884, -339.7944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4636, device='cuda:0', dtype=torch.float64)
tensor([-254.3966, -269.5818, -294.0480, -348.2555, -346.9338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5383, device='cuda:0', dtype=torch.float64)
tensor([-259.9352, -274.5437, -299.2415, -354.1165, -355.0524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4273, device='cuda:0', dtype=torch.float64)
tensor([-265.2193, -279.5575, -304.0912, -359.1951, -362.5077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4657, device='cuda:0', dtype=torch.float64)
tensor([-270.4232, -284.4228, -308.5506, -364.2948, -369.6567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4469, device='cuda:0', dtype=torch.float64)
tensor([-275.7753, -289.8923, -313.2490, -369.2526, -376.9610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4651, device='cuda:0', dtype=torch.float64)
tensor([-283.9878, -298.3165, -319.5452, -375.4609, -387.0241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4475, device='cuda:0', dtype=torch.float64)
tensor([-289.9668, -304.7078, -323.6862, -380.5939, -394.3687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4283, device='cuda:0', dtype=torch.float64)
tensor([-295.0239, -310.4835, -327.4842, -385.7571, -400.8842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4087, device='cuda:0', dtype=torch.float64)
tensor([-300.1153, -316.6114, -331.5589, -391.4387, -407.9316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3568, device='cuda:0', dtype=torch.float64)
tensor([-304.7778, -321.6888, -334.3529, -395.6087, -413.5784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4400, device='cuda:0', dtype=torch.float64)
tensor([-307.7729, -325.5178, -336.6418, -399.4144, -417.9571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4275, device='cuda:0', dtype=torch.float64)
tensor([-308.7929, -327.2148, -337.4645, -401.9840, -420.1633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3915, device='cuda:0', dtype=torch.float64)
tensor([-308.6400, -327.5022, -337.1304, -403.5282, -420.8086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4163, device='cuda:0', dtype=torch.float64)
tensor([-305.4784, -324.7195, -334.2411, -402.5698, -417.6398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4369, device='cuda:0', dtype=torch.float64)
tensor([-302.8350, -322.6121, -331.8275, -402.2710, -415.3726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3908, device='cuda:0', dtype=torch.float64)
tensor([-300.8434, -321.2664, -329.9959, -402.0202, -413.6964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3413, device='cuda:0', dtype=torch.float64)
tensor([-298.8302, -320.0382, -328.5734, -402.0723, -412.3615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4015, device='cuda:0', dtype=torch.float64)
tensor([-296.5738, -318.7251, -326.9192, -402.1486, -411.0383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3814, device='cuda:0', dtype=torch.float64)
tensor([-295.0918, -318.0398, -325.7208, -402.8470, -410.5417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4047, device='cuda:0', dtype=torch.float64)
tensor([-292.7151, -316.6070, -324.0655, -403.3054, -409.3169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4152, device='cuda:0', dtype=torch.float64)
tensor([-290.4672, -315.1141, -322.2598, -403.7621, -408.0788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3549, device='cuda:0', dtype=torch.float64)
tensor([-288.6014, -314.0937, -320.6169, -404.6548, -407.2537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3706, device='cuda:0', dtype=torch.float64)
tensor([-287.0632, -313.4957, -319.1374, -405.1661, -406.6450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3685, device='cuda:0', dtype=torch.float64)
tensor([-286.6302, -313.4823, -318.7661, -406.4063, -407.2283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3805, device='cuda:0', dtype=torch.float64)
tensor([-286.6953, -313.8058, -318.6252, -408.0574, -408.4180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3817, device='cuda:0', dtype=torch.float64)
tensor([-285.6107, -313.1168, -317.7515, -409.7921, -408.6767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3746, device='cuda:0', dtype=torch.float64)
tensor([-286.7228, -314.3019, -318.4181, -412.7643, -411.1728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3788, device='cuda:0', dtype=torch.float64)
tensor([-289.1064, -316.5131, -320.0300, -416.7117, -415.0605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3984, device='cuda:0', dtype=torch.float64)
tensor([-291.9308, -319.0414, -321.7654, -420.5937, -419.0042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3719, device='cuda:0', dtype=torch.float64)
tensor([-294.6864, -321.7377, -322.9717, -423.7134, -422.2219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3660, device='cuda:0', dtype=torch.float64)
tensor([-297.5022, -324.5353, -324.2200, -427.0781, -425.5341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3893, device='cuda:0', dtype=torch.float64)
tensor([-299.3421, -326.3031, -324.4364, -429.5851, -427.4055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3254, device='cuda:0', dtype=torch.float64)
tensor([-300.6362, -327.5883, -324.0180, -431.3553, -428.4015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3816, device='cuda:0', dtype=torch.float64)
tensor([-302.1259, -328.6979, -323.4632, -432.4436, -429.1302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3696, device='cuda:0', dtype=torch.float64)
tensor([-302.6631, -328.9342, -322.1243, -432.4529, -428.7311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2951, device='cuda:0', dtype=torch.float64)
tensor([-303.2290, -329.3626, -320.8587, -432.7362, -428.6839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2981, device='cuda:0', dtype=torch.float64)
tensor([-303.4498, -329.6372, -319.6988, -432.9679, -428.6672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3532, device='cuda:0', dtype=torch.float64)
tensor([-304.0563, -330.3089, -318.3951, -432.8796, -428.7942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3484, device='cuda:0', dtype=torch.float64)
tensor([-305.2169, -331.5411, -317.2773, -432.5095, -429.1807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5283, device='cuda:0', dtype=torch.float64)
tensor([-303.9521, -330.7838, -314.4910, -430.8137, -426.9059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3199, device='cuda:0', dtype=torch.float64)
tensor([-303.4714, -330.6679, -312.7116, -430.1221, -425.7113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3601, device='cuda:0', dtype=torch.float64)
tensor([-304.2250, -331.6769, -311.9162, -430.2240, -426.0778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3961, device='cuda:0', dtype=torch.float64)
tensor([-306.6832, -333.8665, -312.6927, -431.9277, -428.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4060, device='cuda:0', dtype=torch.float64)
tensor([-309.1310, -335.7724, -313.7438, -434.0415, -430.7639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3713, device='cuda:0', dtype=torch.float64)
tensor([-312.2300, -338.1944, -314.9259, -436.2860, -433.2330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3370, device='cuda:0', dtype=torch.float64)
tensor([-314.6394, -339.8286, -315.6758, -438.1544, -434.9727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3017, device='cuda:0', dtype=torch.float64)
tensor([-317.9282, -342.4164, -317.1407, -440.7372, -437.8451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3428, device='cuda:0', dtype=torch.float64)
tensor([-319.3495, -343.5951, -317.8823, -443.1005, -439.5729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3711, device='cuda:0', dtype=torch.float64)
tensor([-321.5362, -345.4071, -319.4474, -446.6237, -442.6270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3890, device='cuda:0', dtype=torch.float64)
tensor([-323.8934, -347.2201, -321.6190, -450.7183, -446.2078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3367, device='cuda:0', dtype=torch.float64)
tensor([-325.4193, -348.3365, -323.4057, -454.1153, -448.7718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2927, device='cuda:0', dtype=torch.float64)
tensor([-328.1233, -350.3833, -326.0157, -459.0134, -452.8604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3043, device='cuda:0', dtype=torch.float64)
tensor([-330.0577, -351.8850, -327.9928, -463.0479, -456.1085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4549, device='cuda:0', dtype=torch.float64)
tensor([-332.0681, -353.2943, -330.2366, -467.4366, -459.4970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3212, device='cuda:0', dtype=torch.float64)
tensor([-334.0975, -354.4429, -331.8828, -470.8603, -461.9709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2535, device='cuda:0', dtype=torch.float64)
tensor([-334.8441, -354.6053, -332.5420, -472.7101, -462.8511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3092, device='cuda:0', dtype=torch.float64)
tensor([-335.5640, -354.7733, -333.3754, -474.7247, -463.9173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2999, device='cuda:0', dtype=torch.float64)
tensor([-335.4495, -354.3386, -333.5782, -475.5149, -463.9104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3164, device='cuda:0', dtype=torch.float64)
tensor([-335.4097, -353.9566, -333.9188, -476.8865, -464.3367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2654, device='cuda:0', dtype=torch.float64)
tensor([-335.5793, -353.7276, -334.3704, -478.6562, -465.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2929, device='cuda:0', dtype=torch.float64)
tensor([-335.4956, -353.3559, -334.6498, -480.5357, -466.0272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3109, device='cuda:0', dtype=torch.float64)
tensor([-335.7135, -353.2154, -335.4573, -483.5365, -467.8383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2322, device='cuda:0', dtype=torch.float64)
tensor([-336.6920, -353.6425, -336.5718, -487.0739, -470.2416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2637, device='cuda:0', dtype=torch.float64)
tensor([-338.0475, -354.4373, -337.9244, -491.2732, -473.4521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3121, device='cuda:0', dtype=torch.float64)
tensor([-339.1965, -355.1770, -338.7738, -494.5740, -476.0352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3176, device='cuda:0', dtype=torch.float64)
tensor([-340.8198, -356.4395, -340.0260, -498.4640, -479.1677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2973, device='cuda:0', dtype=torch.float64)
tensor([-342.4046, -357.8687, -341.4359, -502.7873, -482.8039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2968, device='cuda:0', dtype=torch.float64)
tensor([-343.4997, -358.7335, -342.8880, -506.9644, -486.1633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2913, device='cuda:0', dtype=torch.float64)
tensor([-344.3669, -359.3769, -344.1239, -510.9143, -489.4782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2239, device='cuda:0', dtype=torch.float64)
tensor([-344.8875, -359.6931, -344.8017, -513.9073, -491.9327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3175, device='cuda:0', dtype=torch.float64)
tensor([-344.8278, -359.5276, -344.8979, -515.8117, -493.1464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2615, device='cuda:0', dtype=torch.float64)
tensor([-344.5984, -359.3189, -344.7258, -517.6104, -494.0091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2751, device='cuda:0', dtype=torch.float64)
tensor([-344.0106, -359.3379, -343.7425, -517.9887, -493.8749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3397, device='cuda:0', dtype=torch.float64)
tensor([-344.1744, -359.5961, -343.3552, -519.4842, -494.2065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3209, device='cuda:0', dtype=torch.float64)
tensor([-344.9939, -360.1514, -342.9094, -520.7392, -494.2119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2682, device='cuda:0', dtype=torch.float64)
tensor([-345.5500, -360.3100, -342.1249, -521.1887, -493.3771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2231, device='cuda:0', dtype=torch.float64)
tensor([-346.1984, -360.6695, -341.5203, -521.7465, -492.8385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2244, device='cuda:0', dtype=torch.float64)
tensor([-347.3483, -361.3385, -341.1870, -522.7178, -492.8023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2972, device='cuda:0', dtype=torch.float64)
tensor([-346.3641, -360.9639, -339.3231, -520.5696, -490.2522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2851, device='cuda:0', dtype=torch.float64)
tensor([-346.0376, -360.8242, -337.7970, -519.2260, -488.5277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2627, device='cuda:0', dtype=torch.float64)
tensor([-346.7616, -361.3005, -336.9726, -519.2818, -488.2650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2499, device='cuda:0', dtype=torch.float64)
tensor([-349.1268, -362.5559, -337.1528, -521.5474, -489.9894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2543, device='cuda:0', dtype=torch.float64)
tensor([-351.7627, -363.8324, -337.8280, -524.9031, -492.4875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2427, device='cuda:0', dtype=torch.float64)
tensor([-354.3644, -365.2108, -338.3534, -528.1305, -494.9919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2709, device='cuda:0', dtype=torch.float64)
tensor([-356.6819, -366.4442, -338.6864, -531.2790, -497.3122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2770, device='cuda:0', dtype=torch.float64)
tensor([-357.9542, -366.8960, -338.5120, -533.2857, -498.2621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2550, device='cuda:0', dtype=torch.float64)
tensor([-357.8542, -366.7247, -337.4416, -533.1799, -497.3857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2847, device='cuda:0', dtype=torch.float64)
tensor([-357.7566, -366.4379, -336.1186, -532.7525, -496.2135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2715, device='cuda:0', dtype=torch.float64)
tensor([-357.6710, -366.0541, -334.6612, -531.9569, -494.4731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2466, device='cuda:0', dtype=torch.float64)
tensor([-357.7552, -365.9632, -333.1271, -530.8431, -492.7233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2743, device='cuda:0', dtype=torch.float64)
tensor([-358.5179, -366.1463, -331.8594, -530.1792, -491.4238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2432, device='cuda:0', dtype=torch.float64)
tensor([-357.2852, -365.2971, -329.6887, -527.2151, -488.0921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3713, device='cuda:0', dtype=torch.float64)
tensor([-359.4759, -366.1409, -329.8356, -529.2668, -488.9344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2318, device='cuda:0', dtype=torch.float64)
tensor([-361.2095, -366.6470, -330.0153, -531.5515, -489.8096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2501, device='cuda:0', dtype=torch.float64)
tensor([-362.7925, -367.0023, -330.2534, -534.0844, -490.8965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2030, device='cuda:0', dtype=torch.float64)
tensor([-364.1017, -367.2384, -330.3709, -536.3239, -491.8255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2331, device='cuda:0', dtype=torch.float64)
tensor([-364.7016, -367.2482, -330.2958, -538.2700, -492.7716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2207, device='cuda:0', dtype=torch.float64)
tensor([-365.7857, -367.3354, -330.5755, -540.6194, -494.0032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2180, device='cuda:0', dtype=torch.float64)
tensor([-367.1392, -367.3974, -330.8306, -542.7167, -494.9986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1906, device='cuda:0', dtype=torch.float64)
tensor([-368.2365, -367.2020, -331.2452, -544.7010, -495.9104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2788, device='cuda:0', dtype=torch.float64)
tensor([-368.5060, -366.4315, -331.4633, -545.8542, -496.2241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2058, device='cuda:0', dtype=torch.float64)
tensor([-369.4907, -366.0744, -332.0297, -548.1087, -497.5076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2209, device='cuda:0', dtype=torch.float64)
tensor([-370.4845, -365.8431, -332.6316, -550.4965, -499.0480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2471, device='cuda:0', dtype=torch.float64)
tensor([-371.4020, -365.7056, -333.4754, -553.1518, -501.0220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2562, device='cuda:0', dtype=torch.float64)
tensor([-371.6753, -365.0250, -334.1432, -554.9109, -502.0291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2333, device='cuda:0', dtype=torch.float64)
tensor([-372.9711, -364.6326, -335.3447, -557.9511, -503.9487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2223, device='cuda:0', dtype=torch.float64)
tensor([-372.4568, -363.4465, -335.6462, -558.9059, -504.0851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2325, device='cuda:0', dtype=torch.float64)
tensor([-372.3257, -362.4770, -336.1919, -560.2078, -504.4907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2258, device='cuda:0', dtype=torch.float64)
tensor([-371.2611, -361.1131, -336.2243, -560.1937, -504.0089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2439, device='cuda:0', dtype=torch.float64)
tensor([-371.3527, -359.9913, -337.0861, -561.9163, -504.8110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2340, device='cuda:0', dtype=torch.float64)
tensor([-372.0887, -359.6917, -337.6375, -563.3642, -505.7540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2590, device='cuda:0', dtype=torch.float64)
tensor([-374.0455, -359.6639, -338.8582, -566.1108, -507.7610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1932, device='cuda:0', dtype=torch.float64)
tensor([-374.5172, -359.1006, -339.4560, -567.3600, -508.7101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2551, device='cuda:0', dtype=torch.float64)
tensor([-373.2751, -357.9251, -338.9136, -566.4767, -507.7974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3016, device='cuda:0', dtype=torch.float64)
tensor([-373.7191, -357.5515, -339.5675, -567.9701, -508.9962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1930, device='cuda:0', dtype=torch.float64)
tensor([-374.7016, -357.4452, -340.2429, -569.5117, -510.1138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2163, device='cuda:0', dtype=torch.float64)
tensor([-375.5663, -357.0967, -340.8089, -570.5783, -510.5394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1763, device='cuda:0', dtype=torch.float64)
tensor([-376.3980, -356.8013, -341.1473, -571.2265, -510.6837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2214, device='cuda:0', dtype=torch.float64)
tensor([-378.6848, -357.1243, -341.8272, -573.0904, -511.7256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1814, device='cuda:0', dtype=torch.float64)
tensor([-379.8068, -356.9825, -342.0896, -574.0272, -511.8660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3141, device='cuda:0', dtype=torch.float64)
tensor([-380.6503, -356.6614, -341.8121, -573.6132, -511.1997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2767, device='cuda:0', dtype=torch.float64)
tensor([-381.6740, -356.2853, -341.4405, -573.0338, -510.3933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2108, device='cuda:0', dtype=torch.float64)
tensor([-382.3603, -356.0753, -340.6168, -571.7732, -509.3779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2112, device='cuda:0', dtype=torch.float64)
tensor([-382.5178, -355.9808, -339.3511, -570.0963, -508.1082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2062, device='cuda:0', dtype=torch.float64)
tensor([-382.8862, -356.1727, -337.9811, -568.2744, -506.6740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2173, device='cuda:0', dtype=torch.float64)
tensor([-384.5787, -356.7370, -337.5751, -568.2394, -506.6089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2610, device='cuda:0', dtype=torch.float64)
tensor([-388.0374, -357.7079, -338.0479, -570.0766, -507.7803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1966, device='cuda:0', dtype=torch.float64)
tensor([-390.3027, -358.1059, -338.4476, -571.1270, -508.4430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1883, device='cuda:0', dtype=torch.float64)
tensor([-391.8410, -358.4330, -338.5112, -571.3820, -508.7393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2517, device='cuda:0', dtype=torch.float64)
tensor([-393.2619, -358.4638, -338.3936, -571.1549, -508.3790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2198, device='cuda:0', dtype=torch.float64)
tensor([-393.4581, -358.0183, -337.7251, -569.7506, -506.8795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1921, device='cuda:0', dtype=torch.float64)
tensor([-393.5950, -357.6186, -337.2238, -568.7244, -505.7181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2270, device='cuda:0', dtype=torch.float64)
tensor([-392.2891, -356.9075, -335.9679, -566.3536, -503.6066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2036, device='cuda:0', dtype=torch.float64)
tensor([-391.0748, -356.2503, -334.8948, -564.2399, -501.6122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2037, device='cuda:0', dtype=torch.float64)
tensor([-389.6536, -355.3620, -333.8040, -561.8751, -499.1993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2212, device='cuda:0', dtype=torch.float64)
tensor([-386.5719, -353.8437, -332.2237, -558.0300, -495.6158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2300, device='cuda:0', dtype=torch.float64)
tensor([-382.9810, -352.0707, -330.4064, -553.7112, -491.9058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1989, device='cuda:0', dtype=torch.float64)
tensor([-379.4987, -350.5379, -328.3364, -549.2100, -487.7775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2083, device='cuda:0', dtype=torch.float64)
tensor([-375.6306, -348.8863, -325.9848, -544.3220, -483.3948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2298, device='cuda:0', dtype=torch.float64)
tensor([-373.0881, -347.6420, -324.3213, -540.8993, -480.1188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2033, device='cuda:0', dtype=torch.float64)
tensor([-371.6213, -346.8584, -323.0430, -538.7469, -477.9387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2034, device='cuda:0', dtype=torch.float64)
tensor([-369.6072, -346.1773, -321.3961, -536.0317, -475.4110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2502, device='cuda:0', dtype=torch.float64)
tensor([-368.7563, -345.8509, -320.4748, -534.6753, -474.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2424, device='cuda:0', dtype=torch.float64)
tensor([-369.3614, -345.8992, -320.2815, -534.9038, -474.3285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1897, device='cuda:0', dtype=torch.float64)
tensor([-369.6176, -346.0046, -319.6764, -534.4729, -474.0800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2176, device='cuda:0', dtype=torch.float64)
tensor([-370.3320, -346.1500, -319.2602, -534.4154, -474.0122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1861, device='cuda:0', dtype=torch.float64)
tensor([-372.1878, -346.6407, -319.4618, -535.6438, -475.1240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2014, device='cuda:0', dtype=torch.float64)
tensor([-375.8627, -347.5626, -320.3670, -538.4335, -477.3084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1704, device='cuda:0', dtype=torch.float64)
tensor([-378.8477, -348.3779, -320.9755, -540.8295, -479.1427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2121, device='cuda:0', dtype=torch.float64)
tensor([-380.7183, -348.9079, -320.6895, -541.7402, -479.7115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2012, device='cuda:0', dtype=torch.float64)
tensor([-382.8821, -349.3217, -320.7313, -543.4063, -480.6802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2168, device='cuda:0', dtype=torch.float64)
tensor([-385.5881, -349.7147, -321.1352, -545.6851, -482.0170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2056, device='cuda:0', dtype=torch.float64)
tensor([-387.2280, -349.5677, -321.1231, -546.9201, -482.5404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1619, device='cuda:0', dtype=torch.float64)
tensor([-388.4720, -349.1220, -321.3524, -548.2365, -483.0253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2101, device='cuda:0', dtype=torch.float64)
tensor([-389.2963, -348.5283, -321.5609, -549.2998, -483.5363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1802, device='cuda:0', dtype=torch.float64)
tensor([-391.4296, -348.2255, -322.5498, -551.7841, -485.0429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2178, device='cuda:0', dtype=torch.float64)
tensor([-393.5439, -348.1858, -323.3207, -554.0077, -486.2895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1933, device='cuda:0', dtype=torch.float64)
tensor([-395.4021, -348.1032, -323.9784, -556.0278, -487.2761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2074, device='cuda:0', dtype=torch.float64)
tensor([-396.6766, -347.6690, -324.7155, -557.6618, -487.9564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2005, device='cuda:0', dtype=torch.float64)
tensor([-398.3616, -347.4509, -325.5208, -559.5397, -488.7721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1777, device='cuda:0', dtype=torch.float64)
tensor([-401.1056, -347.3889, -327.0040, -562.5612, -490.3419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1848, device='cuda:0', dtype=torch.float64)
tensor([-403.0999, -347.1373, -327.9923, -564.5722, -491.2543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1905, device='cuda:0', dtype=torch.float64)
tensor([-405.0216, -346.9344, -328.8939, -566.4316, -491.9698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1887, device='cuda:0', dtype=torch.float64)
tensor([-404.4321, -346.0630, -328.6147, -565.8578, -490.8023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2004, device='cuda:0', dtype=torch.float64)
tensor([-402.2352, -344.7397, -327.5917, -563.6624, -488.4486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1764, device='cuda:0', dtype=torch.float64)
tensor([-399.4306, -343.2078, -326.3745, -560.7323, -485.6877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1930, device='cuda:0', dtype=torch.float64)
tensor([-397.5835, -341.9300, -325.4880, -558.5789, -483.4621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1799, device='cuda:0', dtype=torch.float64)
tensor([-396.0433, -340.5334, -324.9263, -556.9156, -481.4906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1861, device='cuda:0', dtype=torch.float64)
tensor([-394.2764, -339.3086, -324.1471, -554.7937, -479.5825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2405, device='cuda:0', dtype=torch.float64)
tensor([-391.1834, -337.7260, -322.7568, -551.2013, -476.4845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2308, device='cuda:0', dtype=torch.float64)
tensor([-389.2686, -336.4856, -321.9511, -548.7352, -474.4086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1626, device='cuda:0', dtype=torch.float64)
tensor([-388.1815, -335.7198, -321.2036, -546.8517, -472.7013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2023, device='cuda:0', dtype=torch.float64)
tensor([-386.5909, -335.1552, -319.9430, -544.2458, -470.8986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1675, device='cuda:0', dtype=torch.float64)
tensor([-385.1748, -334.8348, -318.3411, -541.6015, -468.8312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2304, device='cuda:0', dtype=torch.float64)
tensor([-384.7685, -334.7084, -317.3195, -539.9570, -467.7130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1819, device='cuda:0', dtype=torch.float64)
tensor([-384.6615, -334.7333, -316.2590, -538.5035, -466.5126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1844, device='cuda:0', dtype=torch.float64)
tensor([-385.2925, -334.9868, -315.5555, -537.8370, -465.9559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1749, device='cuda:0', dtype=torch.float64)
tensor([-384.8959, -335.2497, -314.0195, -535.8471, -464.5276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1664, device='cuda:0', dtype=torch.float64)
tensor([-383.8455, -335.4234, -312.3043, -533.4438, -463.0372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1555, device='cuda:0', dtype=torch.float64)
tensor([-382.6485, -335.5528, -310.6487, -530.9792, -461.5418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1610, device='cuda:0', dtype=torch.float64)
tensor([-381.8584, -335.6400, -309.6399, -529.5030, -460.7751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1520, device='cuda:0', dtype=torch.float64)
tensor([-382.3333, -335.7441, -309.6049, -529.5530, -461.0319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1728, device='cuda:0', dtype=torch.float64)
tensor([-383.6818, -336.0923, -310.1398, -530.6017, -462.0091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1615, device='cuda:0', dtype=torch.float64)
tensor([-385.5427, -336.4848, -311.1448, -532.3939, -463.5581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1642, device='cuda:0', dtype=torch.float64)
tensor([-388.2229, -336.8514, -312.5586, -534.9318, -465.4245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1618, device='cuda:0', dtype=torch.float64)
tensor([-392.2418, -337.4359, -314.7595, -539.0040, -468.5533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1748, device='cuda:0', dtype=torch.float64)
tensor([-396.6863, -338.1061, -317.2969, -543.7140, -472.2481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1599, device='cuda:0', dtype=torch.float64)
tensor([-401.7395, -339.1388, -319.9733, -548.9934, -476.3687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1778, device='cuda:0', dtype=torch.float64)
tensor([-404.3018, -339.3365, -321.6605, -551.8824, -478.5282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2390, device='cuda:0', dtype=torch.float64)
tensor([-407.5311, -339.5555, -323.4147, -554.8755, -480.6028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1574, device='cuda:0', dtype=torch.float64)
tensor([-409.8458, -339.4851, -324.8155, -557.0557, -482.0392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1563, device='cuda:0', dtype=torch.float64)
tensor([-411.7112, -339.3471, -326.1257, -558.8433, -483.5013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1657, device='cuda:0', dtype=torch.float64)
tensor([-413.6167, -339.2599, -327.3170, -560.4802, -484.6848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2033, device='cuda:0', dtype=torch.float64)
tensor([-416.5767, -339.5151, -329.0498, -563.3568, -487.0602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1900, device='cuda:0', dtype=torch.float64)
tensor([-419.4607, -339.7658, -330.9725, -566.3527, -489.5686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1701, device='cuda:0', dtype=torch.float64)
tensor([-421.6427, -339.8092, -332.5180, -568.6711, -491.3844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1326, device='cuda:0', dtype=torch.float64)
tensor([-423.2739, -339.8233, -333.6357, -570.3448, -492.8450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1408, device='cuda:0', dtype=torch.float64)
tensor([-422.9639, -339.4866, -333.8898, -570.3245, -493.0548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1251, device='cuda:0', dtype=torch.float64)
tensor([-422.4768, -339.1187, -334.1987, -570.3367, -493.2832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1510, device='cuda:0', dtype=torch.float64)
tensor([-422.2393, -338.8719, -334.6662, -570.5051, -493.7271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1484, device='cuda:0', dtype=torch.float64)
tensor([-422.1921, -338.7826, -334.9937, -570.6249, -494.2017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1679, device='cuda:0', dtype=torch.float64)
tensor([-422.9479, -338.8154, -335.4982, -571.1878, -495.0372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1564, device='cuda:0', dtype=torch.float64)
tensor([-422.2521, -338.3753, -335.3781, -570.3335, -494.5417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1992, device='cuda:0', dtype=torch.float64)
tensor([-422.5402, -337.9574, -335.9051, -570.2871, -494.9020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1495, device='cuda:0', dtype=torch.float64)
tensor([-422.2488, -337.5049, -335.9385, -569.5004, -494.7367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1604, device='cuda:0', dtype=torch.float64)
tensor([-422.1249, -337.1129, -335.9632, -568.6733, -494.5872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1599, device='cuda:0', dtype=torch.float64)
tensor([-422.1858, -336.8572, -336.0080, -568.0288, -494.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1816, device='cuda:0', dtype=torch.float64)
tensor([-422.3158, -336.8574, -335.6830, -567.1738, -494.7879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1462, device='cuda:0', dtype=torch.float64)
tensor([-422.3831, -336.8546, -335.2057, -566.2116, -494.5451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1534, device='cuda:0', dtype=torch.float64)
tensor([-422.2472, -336.6415, -335.0258, -565.3143, -494.4123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1636, device='cuda:0', dtype=torch.float64)
tensor([-421.5767, -336.2027, -334.8257, -563.9914, -494.0489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1409, device='cuda:0', dtype=torch.float64)
tensor([-421.4032, -335.7766, -334.8024, -563.1464, -493.8576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1740, device='cuda:0', dtype=torch.float64)
tensor([-419.7529, -335.0236, -334.3003, -561.3703, -492.9451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1352, device='cuda:0', dtype=torch.float64)
tensor([-417.2641, -334.3087, -333.4042, -559.1265, -492.0032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1700, device='cuda:0', dtype=torch.float64)
tensor([-417.1416, -333.7073, -333.7972, -558.9641, -492.2041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1588, device='cuda:0', dtype=torch.float64)
tensor([-416.4552, -333.0452, -334.1845, -558.7006, -492.3663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1747, device='cuda:0', dtype=torch.float64)
tensor([-416.2888, -332.4082, -334.9277, -558.9406, -492.9420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1502, device='cuda:0', dtype=torch.float64)
tensor([-416.0599, -331.9898, -335.5433, -559.1403, -493.6342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1546, device='cuda:0', dtype=torch.float64)
tensor([-415.3383, -331.5012, -335.7351, -558.8126, -494.0558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1583, device='cuda:0', dtype=torch.float64)
tensor([-414.8729, -330.9709, -335.8785, -558.4306, -494.2208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1735, device='cuda:0', dtype=torch.float64)
tensor([-415.1560, -330.5295, -336.2560, -558.4794, -494.6130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1606, device='cuda:0', dtype=torch.float64)
tensor([-416.4094, -330.3340, -336.7505, -559.1218, -495.0903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1658, device='cuda:0', dtype=torch.float64)
tensor([-417.8277, -330.2655, -336.9886, -559.5921, -495.2288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1427, device='cuda:0', dtype=torch.float64)
tensor([-419.5537, -330.1946, -337.3822, -560.3571, -495.3288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1239, device='cuda:0', dtype=torch.float64)
tensor([-421.3462, -330.1855, -337.6796, -561.1686, -495.3209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2965, device='cuda:0', dtype=torch.float64)
tensor([-420.5625, -330.1546, -337.2966, -561.0178, -494.6720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1656, device='cuda:0', dtype=torch.float64)
tensor([-419.9166, -330.0166, -337.0240, -560.7836, -494.1455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1481, device='cuda:0', dtype=torch.float64)
tensor([-418.5482, -329.8297, -336.4050, -559.8959, -493.3482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1378, device='cuda:0', dtype=torch.float64)
tensor([-415.7840, -329.6660, -334.7709, -557.5302, -491.6210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1327, device='cuda:0', dtype=torch.float64)
tensor([-413.4210, -329.6149, -333.1213, -555.2059, -489.9473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1400, device='cuda:0', dtype=torch.float64)
tensor([-410.8218, -329.5837, -331.2301, -552.4137, -487.9528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1273, device='cuda:0', dtype=torch.float64)
tensor([-407.7647, -329.3929, -329.3316, -549.2381, -485.6746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1302, device='cuda:0', dtype=torch.float64)
tensor([-405.0044, -329.2926, -327.3932, -546.0223, -483.3938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1649, device='cuda:0', dtype=torch.float64)
tensor([-403.5794, -329.1548, -326.4513, -544.3562, -482.2359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1197, device='cuda:0', dtype=torch.float64)
tensor([-402.3280, -329.1596, -325.4238, -542.6625, -481.0430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1456, device='cuda:0', dtype=torch.float64)
tensor([-401.3030, -329.2438, -324.3545, -541.0032, -479.6779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1530, device='cuda:0', dtype=torch.float64)
tensor([-399.6794, -329.2667, -322.9566, -538.9568, -478.0600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1662, device='cuda:0', dtype=torch.float64)
tensor([-399.1759, -329.3282, -322.2540, -537.9000, -477.0700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1319, device='cuda:0', dtype=torch.float64)
tensor([-398.3826, -329.3669, -321.4629, -536.5577, -476.1333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1502, device='cuda:0', dtype=torch.float64)
tensor([-397.4519, -329.3128, -320.5775, -535.0135, -475.1443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1430, device='cuda:0', dtype=torch.float64)
tensor([-395.8148, -329.2033, -319.0417, -532.5952, -473.5244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1323, device='cuda:0', dtype=torch.float64)
tensor([-395.5350, -329.2509, -318.1679, -531.4726, -472.6714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1337, device='cuda:0', dtype=torch.float64)
tensor([-395.3136, -329.2873, -317.3493, -530.4669, -471.9986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1580, device='cuda:0', dtype=torch.float64)
tensor([-395.0131, -329.3784, -316.5182, -529.2850, -471.0840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1310, device='cuda:0', dtype=torch.float64)
tensor([-395.3238, -329.4414, -316.0898, -528.6695, -470.5072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1192, device='cuda:0', dtype=torch.float64)
tensor([-395.3499, -329.4762, -315.4800, -527.7388, -469.6044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1376, device='cuda:0', dtype=torch.float64)
tensor([-396.0237, -329.4182, -315.5258, -527.8653, -469.3912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1337, device='cuda:0', dtype=torch.float64)
tensor([-395.2769, -329.2787, -315.1545, -526.9887, -468.7574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1414, device='cuda:0', dtype=torch.float64)
tensor([-394.0840, -329.0895, -314.5755, -525.7470, -468.1528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1142, device='cuda:0', dtype=torch.float64)
tensor([-392.4857, -328.8276, -313.6874, -523.9892, -467.0526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2023, device='cuda:0', dtype=torch.float64)
tensor([-391.9833, -328.6076, -312.8274, -522.5310, -466.0577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1297, device='cuda:0', dtype=torch.float64)
tensor([-392.3531, -328.4908, -312.4582, -521.9127, -465.6243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1388, device='cuda:0', dtype=torch.float64)
tensor([-393.5261, -328.4706, -312.6056, -522.1914, -465.6511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1515, device='cuda:0', dtype=torch.float64)
tensor([-395.6161, -328.3572, -313.5663, -523.6678, -466.3086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1298, device='cuda:0', dtype=torch.float64)
tensor([-398.0625, -328.4251, -314.4593, -525.2583, -467.0511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1316, device='cuda:0', dtype=torch.float64)
tensor([-400.2727, -328.4314, -315.4843, -526.9576, -467.9565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1512, device='cuda:0', dtype=torch.float64)
tensor([-402.5754, -328.4408, -316.5558, -528.7963, -469.0350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1441, device='cuda:0', dtype=torch.float64)
tensor([-404.0689, -328.5127, -317.0847, -529.8162, -469.7731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1423, device='cuda:0', dtype=torch.float64)
tensor([-406.0188, -328.5299, -317.9178, -531.2463, -470.7349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1197, device='cuda:0', dtype=torch.float64)
tensor([-407.8683, -328.5983, -318.4603, -532.4616, -471.5248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1349, device='cuda:0', dtype=torch.float64)
tensor([-410.4142, -328.7225, -319.5818, -534.4942, -473.0493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1661, device='cuda:0', dtype=torch.float64)
tensor([-412.7056, -328.7909, -320.6694, -536.4335, -474.6405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1307, device='cuda:0', dtype=torch.float64)
tensor([-414.3654, -328.9267, -321.1980, -537.5075, -475.7052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1201, device='cuda:0', dtype=torch.float64)
tensor([-415.7049, -328.9677, -321.6029, -538.3031, -476.6051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1285, device='cuda:0', dtype=torch.float64)
tensor([-417.1696, -328.8814, -322.0866, -539.3816, -477.3443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1425, device='cuda:0', dtype=torch.float64)
tensor([-416.4291, -328.6995, -321.2593, -538.3648, -476.6570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1379, device='cuda:0', dtype=torch.float64)
tensor([-416.4150, -328.5851, -320.8780, -538.0915, -476.3594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1054, device='cuda:0', dtype=torch.float64)
tensor([-416.2449, -328.4290, -320.5029, -537.6642, -475.9076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1236, device='cuda:0', dtype=torch.float64)
tensor([-416.3734, -328.3825, -320.3980, -537.7666, -475.9932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1241, device='cuda:0', dtype=torch.float64)
tensor([-416.0332, -328.4108, -319.8350, -537.3900, -475.8536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1329, device='cuda:0', dtype=torch.float64)
tensor([-416.7929, -328.5626, -319.8125, -537.9373, -476.1710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1130, device='cuda:0', dtype=torch.float64)
tensor([-416.9938, -328.6283, -319.4922, -537.8240, -476.1205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1322, device='cuda:0', dtype=torch.float64)
tensor([-417.4432, -328.9082, -319.2033, -537.7352, -476.2218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1106, device='cuda:0', dtype=torch.float64)
tensor([-417.3475, -328.8881, -318.7668, -537.1680, -476.0254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1525, device='cuda:0', dtype=torch.float64)
tensor([-417.8384, -328.8707, -318.6926, -537.3508, -476.1738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1394, device='cuda:0', dtype=torch.float64)
tensor([-417.3420, -328.7744, -317.8960, -536.2766, -475.5137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1244, device='cuda:0', dtype=torch.float64)
tensor([-415.9761, -328.4858, -316.8113, -534.4175, -474.3816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1161, device='cuda:0', dtype=torch.float64)
tensor([-414.3536, -328.3098, -315.6183, -532.4067, -473.2257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1050, device='cuda:0', dtype=torch.float64)
tensor([-413.0539, -328.2611, -314.4642, -530.4698, -472.1103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1335, device='cuda:0', dtype=torch.float64)
tensor([-411.0181, -328.1580, -312.8769, -527.7142, -470.5493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1187, device='cuda:0', dtype=torch.float64)
tensor([-409.8497, -328.2081, -311.6056, -525.6032, -469.3019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1154, device='cuda:0', dtype=torch.float64)
tensor([-409.3648, -328.3572, -310.5661, -523.8769, -468.1136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1299, device='cuda:0', dtype=torch.float64)
tensor([-408.4440, -328.4187, -309.4488, -521.9037, -466.7309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1222, device='cuda:0', dtype=torch.float64)
tensor([-407.7365, -328.4797, -308.4460, -520.0048, -465.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1174, device='cuda:0', dtype=torch.float64)
tensor([-407.0259, -328.3889, -307.6544, -518.3014, -464.1201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0999, device='cuda:0', dtype=torch.float64)
tensor([-406.4379, -328.2342, -307.0632, -516.8884, -463.0560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1084, device='cuda:0', dtype=torch.float64)
tensor([-406.0149, -328.0351, -306.4354, -515.5906, -462.0386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1219, device='cuda:0', dtype=torch.float64)
tensor([-405.0021, -327.6976, -305.6240, -514.0736, -460.9201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1277, device='cuda:0', dtype=torch.float64)
tensor([-405.0725, -327.3577, -305.4081, -513.4492, -460.3991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1094, device='cuda:0', dtype=torch.float64)
tensor([-405.2315, -326.8456, -305.5916, -513.3326, -460.2132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1138, device='cuda:0', dtype=torch.float64)
tensor([-406.7096, -326.4661, -306.5429, -514.5583, -460.9535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1216, device='cuda:0', dtype=torch.float64)
tensor([-406.8262, -326.0038, -306.9226, -514.7261, -461.1792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1072, device='cuda:0', dtype=torch.float64)
tensor([-406.7814, -325.6045, -307.2911, -514.9544, -461.5625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0977, device='cuda:0', dtype=torch.float64)
tensor([-406.8651, -325.3273, -307.5666, -515.1314, -461.8147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1231, device='cuda:0', dtype=torch.float64)
tensor([-407.3422, -325.1061, -308.0514, -515.7142, -462.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1302, device='cuda:0', dtype=torch.float64)
tensor([-407.9119, -324.8771, -308.8339, -516.5498, -463.1457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1061, device='cuda:0', dtype=torch.float64)
tensor([-408.8874, -324.5936, -309.8693, -517.8754, -464.1129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1074, device='cuda:0', dtype=torch.float64)
tensor([-408.8284, -324.3149, -310.2814, -518.1385, -464.3849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1247, device='cuda:0', dtype=torch.float64)
tensor([-409.7774, -324.1445, -311.1141, -519.1124, -465.0366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0991, device='cuda:0', dtype=torch.float64)
tensor([-410.9510, -324.0496, -311.9157, -520.1320, -465.5978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1117, device='cuda:0', dtype=torch.float64)
tensor([-412.0918, -324.0817, -312.4111, -520.7593, -465.8501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1132, device='cuda:0', dtype=torch.float64)
tensor([-412.1565, -324.1139, -312.1023, -520.1543, -465.3802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1350, device='cuda:0', dtype=torch.float64)
tensor([-413.0024, -324.2612, -311.9840, -520.1257, -465.1225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1026, device='cuda:0', dtype=torch.float64)
tensor([-413.0147, -324.3302, -311.4930, -519.4293, -464.5145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1364, device='cuda:0', dtype=torch.float64)
tensor([-412.9238, -324.3477, -311.0444, -518.6211, -463.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1006, device='cuda:0', dtype=torch.float64)
tensor([-413.2181, -324.3445, -310.8748, -518.2876, -463.6923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1214, device='cuda:0', dtype=torch.float64)
tensor([-414.1366, -324.3342, -310.9123, -518.2944, -463.6260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1340, device='cuda:0', dtype=torch.float64)
tensor([-413.8509, -324.4080, -310.1226, -516.9721, -462.9554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1139, device='cuda:0', dtype=torch.float64)
tensor([-412.4967, -324.3228, -308.8224, -514.7505, -461.6764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1280, device='cuda:0', dtype=torch.float64)
tensor([-410.8035, -324.3225, -307.2992, -512.2452, -460.3201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1126, device='cuda:0', dtype=torch.float64)
tensor([-409.1106, -324.2450, -305.8966, -509.8499, -459.0488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0961, device='cuda:0', dtype=torch.float64)
tensor([-407.3043, -324.0602, -304.5353, -507.4898, -457.6903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1536, device='cuda:0', dtype=torch.float64)
tensor([-404.8300, -323.7977, -302.6782, -504.2628, -455.6550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1262, device='cuda:0', dtype=torch.float64)
tensor([-403.6300, -323.5211, -301.6558, -502.2009, -454.1997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0996, device='cuda:0', dtype=torch.float64)
tensor([-402.2309, -323.2213, -300.5003, -500.0161, -452.6108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1242, device='cuda:0', dtype=torch.float64)
tensor([-402.0656, -322.8999, -300.2971, -499.3614, -452.0568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1182, device='cuda:0', dtype=torch.float64)
tensor([-403.1649, -322.5681, -300.8766, -500.0085, -452.2796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0901, device='cuda:0', dtype=torch.float64)
tensor([-403.7810, -322.2987, -301.2824, -500.3338, -452.4379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1083, device='cuda:0', dtype=torch.float64)
tensor([-404.3449, -322.1169, -301.7236, -500.7645, -452.7783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1096, device='cuda:0', dtype=torch.float64)
tensor([-404.5079, -321.9359, -301.9218, -500.9064, -453.0641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1147, device='cuda:0', dtype=torch.float64)
tensor([-404.7423, -321.8763, -301.9956, -500.9264, -453.2449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1001, device='cuda:0', dtype=torch.float64)
tensor([-405.0042, -321.8378, -302.1573, -500.9833, -453.4433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1389, device='cuda:0', dtype=torch.float64)
tensor([-406.1078, -321.8639, -302.4921, -501.5359, -453.7118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1062, device='cuda:0', dtype=torch.float64)
tensor([-407.0239, -321.8504, -302.8193, -502.0790, -454.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0961, device='cuda:0', dtype=torch.float64)
tensor([-407.7716, -321.7874, -302.8832, -502.1914, -453.9337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1181, device='cuda:0', dtype=torch.float64)
tensor([-408.4416, -321.8835, -302.6366, -502.0243, -453.6021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1073, device='cuda:0', dtype=torch.float64)
tensor([-409.5507, -322.1500, -302.6112, -502.2557, -453.6070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1146, device='cuda:0', dtype=torch.float64)
tensor([-410.2529, -322.4038, -302.4252, -502.2267, -453.4352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1154, device='cuda:0', dtype=torch.float64)
tensor([-411.3871, -322.6988, -302.4751, -502.7831, -453.6375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1163, device='cuda:0', dtype=torch.float64)
tensor([-413.5241, -322.9043, -303.2131, -504.2770, -454.3398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1157, device='cuda:0', dtype=torch.float64)
tensor([-415.5681, -323.1441, -303.9571, -505.6611, -455.1753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1076, device='cuda:0', dtype=torch.float64)
tensor([-416.9049, -323.3328, -304.3770, -506.5304, -455.7110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-417.5567, -323.4175, -304.5627, -506.8722, -456.0814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1124, device='cuda:0', dtype=torch.float64)
tensor([-418.0208, -323.4132, -304.7375, -507.1697, -456.4818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1325, device='cuda:0', dtype=torch.float64)
tensor([-417.5950, -323.4890, -304.4422, -506.7890, -456.5237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1038, device='cuda:0', dtype=torch.float64)
tensor([-416.8354, -323.4807, -304.2103, -506.2043, -456.4515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1083, device='cuda:0', dtype=torch.float64)
tensor([-415.2189, -323.3904, -303.4934, -504.8536, -455.9247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1036, device='cuda:0', dtype=torch.float64)
tensor([-414.3762, -323.3318, -302.9878, -504.0544, -455.5411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1042, device='cuda:0', dtype=torch.float64)
tensor([-413.3059, -323.3984, -302.2530, -502.8947, -455.0606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1158, device='cuda:0', dtype=torch.float64)
tensor([-413.0276, -323.2288, -302.3932, -502.8144, -455.2990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1285, device='cuda:0', dtype=torch.float64)
tensor([-412.7498, -322.9738, -302.6351, -502.7756, -455.6128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0942, device='cuda:0', dtype=torch.float64)
tensor([-412.4486, -322.7282, -302.8716, -502.7839, -455.9043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1081, device='cuda:0', dtype=torch.float64)
tensor([-412.5048, -322.5167, -303.2632, -503.0313, -456.3171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1125, device='cuda:0', dtype=torch.float64)
tensor([-412.0837, -322.3121, -303.3165, -502.8283, -456.4897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1126, device='cuda:0', dtype=torch.float64)
tensor([-412.7006, -322.0593, -304.0666, -503.6274, -457.1796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1016, device='cuda:0', dtype=torch.float64)
tensor([-412.9737, -321.9106, -304.4620, -504.0138, -457.6272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1050, device='cuda:0', dtype=torch.float64)
tensor([-413.2314, -321.8291, -304.7303, -504.2586, -458.0411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1026, device='cuda:0', dtype=torch.float64)
tensor([-413.8531, -321.5763, -305.3822, -505.0377, -458.7027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1001, device='cuda:0', dtype=torch.float64)
tensor([-415.2495, -321.3899, -306.1899, -506.2668, -459.5006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1019, device='cuda:0', dtype=torch.float64)
tensor([-416.8800, -321.2915, -306.9688, -507.4948, -460.2012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1081, device='cuda:0', dtype=torch.float64)
tensor([-418.9221, -321.2539, -307.6707, -508.8164, -460.9026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1025, device='cuda:0', dtype=torch.float64)
tensor([-420.3955, -321.2542, -308.0284, -509.6304, -461.2807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0907, device='cuda:0', dtype=torch.float64)
tensor([-421.6384, -321.0872, -308.5809, -510.5608, -461.7564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1128, device='cuda:0', dtype=torch.float64)
tensor([-422.7656, -320.7555, -309.1749, -511.5308, -462.2332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1084, device='cuda:0', dtype=torch.float64)
tensor([-422.8034, -320.4409, -309.1096, -511.2874, -462.0922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1133, device='cuda:0', dtype=torch.float64)
tensor([-422.6707, -319.9725, -308.9886, -510.8751, -461.7803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1090, device='cuda:0', dtype=torch.float64)
tensor([-421.8325, -319.5820, -308.5637, -509.7856, -461.3164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0862, device='cuda:0', dtype=torch.float64)
tensor([-421.1100, -319.1600, -308.1902, -508.7542, -460.7626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1167, device='cuda:0', dtype=torch.float64)
tensor([-420.4139, -318.7814, -307.7876, -507.6951, -460.0968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1028, device='cuda:0', dtype=torch.float64)
tensor([-418.9500, -318.4419, -306.6869, -505.6095, -458.6253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1158, device='cuda:0', dtype=torch.float64)
tensor([-418.4385, -318.3058, -305.6971, -504.2724, -457.3077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1243, device='cuda:0', dtype=torch.float64)
tensor([-416.9625, -318.1549, -304.1932, -501.9452, -455.4571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0782, device='cuda:0', dtype=torch.float64)
tensor([-415.6032, -318.0311, -302.9483, -499.9700, -453.9474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1107, device='cuda:0', dtype=torch.float64)
tensor([-414.5530, -317.9122, -301.9058, -498.4561, -452.7328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0943, device='cuda:0', dtype=torch.float64)
tensor([-413.7031, -317.9564, -300.7997, -496.9824, -451.6111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1119, device='cuda:0', dtype=torch.float64)
tensor([-413.3760, -317.9880, -300.0074, -496.1131, -450.8274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1011, device='cuda:0', dtype=torch.float64)
tensor([-413.7830, -318.0100, -299.6553, -495.9298, -450.2683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0928, device='cuda:0', dtype=torch.float64)
tensor([-414.5032, -318.0230, -299.5145, -496.0857, -449.8344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1026, device='cuda:0', dtype=torch.float64)
tensor([-415.1904, -317.9533, -299.6351, -496.5846, -449.6310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0831, device='cuda:0', dtype=torch.float64)
tensor([-415.7251, -318.0103, -299.4445, -496.7223, -449.2881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0918, device='cuda:0', dtype=torch.float64)
tensor([-415.1358, -317.9830, -298.6495, -495.7042, -448.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0941, device='cuda:0', dtype=torch.float64)
tensor([-415.2306, -317.9702, -298.3463, -495.5156, -448.1433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0818, device='cuda:0', dtype=torch.float64)
tensor([-415.5680, -318.0812, -297.9449, -495.2621, -447.7429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1068, device='cuda:0', dtype=torch.float64)
tensor([-415.8361, -318.1082, -297.6070, -495.0181, -447.2934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0897, device='cuda:0', dtype=torch.float64)
tensor([-415.3194, -318.1481, -296.8561, -493.9734, -446.4591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0739, device='cuda:0', dtype=torch.float64)
tensor([-415.1712, -318.1874, -296.2772, -493.2034, -445.7608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-415.6388, -318.2978, -296.1096, -493.1068, -445.4399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0983, device='cuda:0', dtype=torch.float64)
tensor([-415.2968, -318.3201, -295.7114, -492.4236, -444.9276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0945, device='cuda:0', dtype=torch.float64)
tensor([-414.5911, -318.2841, -295.1200, -491.4034, -444.3083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1362, device='cuda:0', dtype=torch.float64)
tensor([-413.5147, -318.1855, -294.4846, -490.2031, -443.6249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1025, device='cuda:0', dtype=torch.float64)
tensor([-412.5181, -317.9388, -293.9912, -489.2042, -443.0895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1081, device='cuda:0', dtype=torch.float64)
tensor([-410.8796, -317.7565, -292.9955, -487.2388, -441.9777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1010, device='cuda:0', dtype=torch.float64)
tensor([-409.9329, -317.7251, -292.0694, -485.5890, -441.0538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0929, device='cuda:0', dtype=torch.float64)
tensor([-409.3253, -317.8103, -291.2257, -484.1856, -440.3628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-409.4122, -317.9572, -290.7250, -483.4014, -440.0346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0946, device='cuda:0', dtype=torch.float64)
tensor([-409.3900, -318.1148, -290.0914, -482.4472, -439.5506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0864, device='cuda:0', dtype=torch.float64)
tensor([-408.9391, -318.2684, -289.4103, -481.4305, -439.0712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0933, device='cuda:0', dtype=torch.float64)
tensor([-408.6512, -318.3927, -288.9197, -480.7302, -438.9731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0941, device='cuda:0', dtype=torch.float64)
tensor([-408.7458, -318.4259, -288.8001, -480.5879, -439.1289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0910, device='cuda:0', dtype=torch.float64)
tensor([-409.0291, -318.2764, -288.8406, -480.6321, -439.2058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1001, device='cuda:0', dtype=torch.float64)
tensor([-409.1173, -318.1484, -288.8195, -480.5357, -439.1432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0840, device='cuda:0', dtype=torch.float64)
tensor([-409.3146, -318.1249, -288.7213, -480.4535, -439.0978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1117, device='cuda:0', dtype=torch.float64)
tensor([-410.1060, -318.0752, -289.0851, -481.0190, -439.5240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0941, device='cuda:0', dtype=torch.float64)
tensor([-410.8591, -317.9887, -289.5129, -481.5718, -439.9403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0789, device='cuda:0', dtype=torch.float64)
tensor([-411.3366, -317.9814, -289.6746, -481.8294, -440.1100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0871, device='cuda:0', dtype=torch.float64)
tensor([-411.4710, -317.9220, -289.6262, -481.7108, -440.0327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0928, device='cuda:0', dtype=torch.float64)
tensor([-411.3275, -317.7875, -289.4063, -481.1953, -439.6653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-411.4734, -317.7159, -289.2115, -480.7924, -439.1755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1093, device='cuda:0', dtype=torch.float64)
tensor([-411.9143, -317.4629, -289.4348, -480.8792, -439.0629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1013, device='cuda:0', dtype=torch.float64)
tensor([-412.7191, -317.2896, -289.8205, -481.3073, -439.2189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0822, device='cuda:0', dtype=torch.float64)
tensor([-413.7319, -317.0588, -290.5238, -482.0819, -439.5931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0870, device='cuda:0', dtype=torch.float64)
tensor([-414.7723, -316.8677, -291.3001, -482.9324, -440.1057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-415.8082, -316.8665, -291.8214, -483.5735, -440.5121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0823, device='cuda:0', dtype=torch.float64)
tensor([-416.6648, -316.8106, -292.3726, -484.2202, -440.9013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0997, device='cuda:0', dtype=torch.float64)
tensor([-417.5809, -316.7214, -292.9680, -485.0762, -441.4004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0957, device='cuda:0', dtype=torch.float64)
tensor([-418.3304, -316.5488, -293.4102, -485.6585, -441.7138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0807, device='cuda:0', dtype=torch.float64)
tensor([-419.5840, -316.4780, -293.9399, -486.6102, -442.0694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0967, device='cuda:0', dtype=torch.float64)
tensor([-420.5312, -316.3677, -294.2512, -487.2041, -442.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0842, device='cuda:0', dtype=torch.float64)
tensor([-420.9315, -316.3886, -294.0763, -487.0378, -441.6633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0718, device='cuda:0', dtype=torch.float64)
tensor([-421.0054, -316.3117, -293.9054, -486.6375, -441.2055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0779, device='cuda:0', dtype=torch.float64)
tensor([-420.3246, -316.1884, -293.1544, -485.4066, -440.1588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0878, device='cuda:0', dtype=torch.float64)
tensor([-419.6401, -316.0622, -292.4526, -484.3164, -439.2024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0786, device='cuda:0', dtype=torch.float64)
tensor([-418.0518, -316.0208, -291.1646, -482.2502, -437.7592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0867, device='cuda:0', dtype=torch.float64)
tensor([-415.9654, -315.9753, -289.6369, -479.7042, -436.1211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0807, device='cuda:0', dtype=torch.float64)
tensor([-413.4701, -315.9136, -288.0584, -477.0133, -434.5241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0987, device='cuda:0', dtype=torch.float64)
tensor([-412.0034, -315.8634, -287.0862, -475.4802, -433.6069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0874, device='cuda:0', dtype=torch.float64)
tensor([-410.4365, -315.7565, -286.3557, -474.1375, -432.9022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0892, device='cuda:0', dtype=torch.float64)
tensor([-408.5911, -315.6965, -285.2485, -472.2613, -431.8141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0867, device='cuda:0', dtype=torch.float64)
tensor([-406.7820, -315.6756, -284.2394, -470.4615, -430.7975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0715, device='cuda:0', dtype=torch.float64)
tensor([-404.7042, -315.7860, -282.9021, -468.3082, -429.5330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-402.7445, -315.9902, -281.5585, -466.1576, -428.3146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1098, device='cuda:0', dtype=torch.float64)
tensor([-400.2673, -316.1092, -279.8055, -463.2250, -426.4644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0795, device='cuda:0', dtype=torch.float64)
tensor([-399.2213, -316.2718, -278.7693, -461.6331, -425.3330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0939, device='cuda:0', dtype=torch.float64)
tensor([-397.8127, -316.3541, -277.7194, -459.9294, -424.1780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0878, device='cuda:0', dtype=torch.float64)
tensor([-396.6548, -316.4400, -276.8156, -458.3948, -423.2253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0699, device='cuda:0', dtype=torch.float64)
tensor([-395.1951, -316.5138, -275.7670, -456.6302, -422.1693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0945, device='cuda:0', dtype=torch.float64)
tensor([-393.9939, -316.5027, -274.8437, -455.0237, -421.1808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-393.2091, -316.4411, -274.2215, -453.8191, -420.5121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1016, device='cuda:0', dtype=torch.float64)
tensor([-393.4305, -316.4239, -274.1031, -453.5545, -420.4069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0724, device='cuda:0', dtype=torch.float64)
tensor([-394.0947, -316.4087, -274.3032, -453.7999, -420.4733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0754, device='cuda:0', dtype=torch.float64)
tensor([-395.3808, -316.3701, -274.7597, -454.6282, -420.6883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0808, device='cuda:0', dtype=torch.float64)
tensor([-396.9675, -316.2995, -275.5811, -456.0053, -421.3553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0733, device='cuda:0', dtype=torch.float64)
tensor([-398.9166, -316.2258, -276.5435, -457.6464, -422.1819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0848, device='cuda:0', dtype=torch.float64)
tensor([-400.6073, -315.8820, -277.6752, -459.2086, -422.9430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0854, device='cuda:0', dtype=torch.float64)
tensor([-402.0008, -315.6073, -278.6740, -460.5715, -423.7105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0935, device='cuda:0', dtype=torch.float64)
tensor([-403.9082, -315.2963, -280.1665, -462.6634, -424.8254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0949, device='cuda:0', dtype=torch.float64)
tensor([-405.8828, -314.9123, -281.6413, -464.6852, -425.8071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0713, device='cuda:0', dtype=torch.float64)
tensor([-408.5216, -314.6358, -283.4278, -467.3303, -427.2109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0851, device='cuda:0', dtype=torch.float64)
tensor([-410.4194, -314.3855, -284.7617, -469.1725, -428.1276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0771, device='cuda:0', dtype=torch.float64)
tensor([-412.1667, -314.1647, -285.9362, -470.7728, -428.8345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0698, device='cuda:0', dtype=torch.float64)
tensor([-413.4004, -313.9724, -286.8890, -472.0152, -429.4802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-414.5051, -313.8272, -287.8418, -473.2113, -430.1614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0806, device='cuda:0', dtype=torch.float64)
tensor([-415.5679, -313.6462, -288.7469, -474.3512, -430.8754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0831, device='cuda:0', dtype=torch.float64)
tensor([-416.5323, -313.4507, -289.5572, -475.3662, -431.3974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0845, device='cuda:0', dtype=torch.float64)
tensor([-417.1949, -313.2217, -290.1669, -476.0744, -431.7617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0808, device='cuda:0', dtype=torch.float64)
tensor([-417.3354, -312.9565, -290.4840, -476.3425, -431.9522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0696, device='cuda:0', dtype=torch.float64)
tensor([-417.2177, -312.9498, -290.3711, -476.0575, -432.0120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0813, device='cuda:0', dtype=torch.float64)
tensor([-417.5806, -312.9838, -290.5524, -476.2669, -432.3556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0776, device='cuda:0', dtype=torch.float64)
tensor([-418.0437, -312.9763, -290.8648, -476.6319, -432.8241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-418.3402, -312.9900, -291.0532, -476.8035, -433.1555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0864, device='cuda:0', dtype=torch.float64)
tensor([-417.7307, -312.8949, -290.9221, -476.3026, -433.1350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0776, device='cuda:0', dtype=torch.float64)
tensor([-416.3823, -312.8164, -290.1889, -474.8241, -432.5255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0838, device='cuda:0', dtype=torch.float64)
tensor([-415.5704, -312.6958, -289.7746, -473.8549, -432.0875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1011, device='cuda:0', dtype=torch.float64)
tensor([-414.6657, -312.4753, -289.5374, -473.0866, -432.0868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-413.5789, -312.2618, -289.2715, -472.2430, -432.1829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1364, device='cuda:0', dtype=torch.float64)
tensor([-411.9420, -312.0266, -288.9755, -471.3531, -432.1659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0755, device='cuda:0', dtype=torch.float64)
tensor([-410.3427, -311.8818, -288.6003, -470.4185, -432.0965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0723, device='cuda:0', dtype=torch.float64)
tensor([-408.3483, -311.7036, -287.9839, -469.0829, -431.6672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0707, device='cuda:0', dtype=torch.float64)
tensor([-406.4868, -311.5563, -287.3865, -467.9025, -431.3216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-404.6080, -311.4442, -286.7876, -466.6694, -430.9416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0759, device='cuda:0', dtype=torch.float64)
tensor([-402.8171, -311.3678, -286.1024, -465.3033, -430.2796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0822, device='cuda:0', dtype=torch.float64)
tensor([-401.6130, -311.2669, -285.7951, -464.5085, -429.9705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0797, device='cuda:0', dtype=torch.float64)
tensor([-399.8961, -311.3813, -284.8298, -462.8665, -429.1848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0704, device='cuda:0', dtype=torch.float64)
tensor([-398.6331, -311.6480, -283.7174, -461.1805, -428.1990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-397.5717, -311.8398, -282.8337, -459.8266, -427.3783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-396.4293, -312.1180, -281.7717, -458.2342, -426.3699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0680, device='cuda:0', dtype=torch.float64)
tensor([-395.6684, -312.5060, -280.6617, -456.7607, -425.4436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0895, device='cuda:0', dtype=torch.float64)
tensor([-395.1928, -312.8459, -279.7229, -455.6097, -424.5912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0754, device='cuda:0', dtype=torch.float64)
tensor([-394.7184, -313.1574, -278.8521, -454.5408, -423.8579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0817, device='cuda:0', dtype=torch.float64)
tensor([-394.2303, -313.6671, -277.6611, -453.1091, -423.0072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0730, device='cuda:0', dtype=torch.float64)
tensor([-394.1402, -314.1881, -276.6883, -452.0301, -422.4040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-394.0813, -314.7254, -275.7044, -450.8946, -421.7228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0770, device='cuda:0', dtype=torch.float64)
tensor([-394.2725, -315.2765, -274.8000, -449.9097, -421.1198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-394.5713, -315.7694, -273.9787, -448.9550, -420.4848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0719, device='cuda:0', dtype=torch.float64)
tensor([-394.9341, -316.2458, -273.3153, -448.1768, -420.0041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0795, device='cuda:0', dtype=torch.float64)
tensor([-395.9140, -316.7330, -273.1273, -448.2272, -420.0125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0861, device='cuda:0', dtype=torch.float64)
tensor([-396.7835, -317.2132, -273.0542, -448.3438, -420.1411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-396.8109, -317.5836, -272.7165, -447.8435, -420.0675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0735, device='cuda:0', dtype=torch.float64)
tensor([-396.3576, -317.8266, -272.2975, -447.1145, -419.8325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0709, device='cuda:0', dtype=torch.float64)
tensor([-395.6793, -317.8628, -271.9799, -446.3885, -419.5359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-394.9982, -318.0958, -271.2805, -445.2725, -418.8570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0752, device='cuda:0', dtype=torch.float64)
tensor([-394.1675, -318.3910, -270.3246, -443.7834, -417.7432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0716, device='cuda:0', dtype=torch.float64)
tensor([-393.6293, -318.6041, -269.6855, -442.7628, -416.8290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0731, device='cuda:0', dtype=torch.float64)
tensor([-392.6082, -318.7242, -268.9122, -441.3947, -415.6820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0708, device='cuda:0', dtype=torch.float64)
tensor([-392.1855, -318.9288, -268.3193, -440.3558, -414.7245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0719, device='cuda:0', dtype=torch.float64)
tensor([-392.4441, -319.0055, -268.3798, -440.3466, -414.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-392.5083, -319.0615, -268.3772, -440.2120, -414.0604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0784, device='cuda:0', dtype=torch.float64)
tensor([-391.9077, -318.9700, -268.2576, -439.7319, -413.5507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0643, device='cuda:0', dtype=torch.float64)
tensor([-391.8488, -318.9802, -268.3332, -439.6507, -413.3061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-391.5172, -318.9607, -268.3259, -439.3756, -412.9373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0847, device='cuda:0', dtype=torch.float64)
tensor([-391.6872, -318.8569, -268.5398, -439.5407, -412.6851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0729, device='cuda:0', dtype=torch.float64)
tensor([-391.9144, -318.8243, -268.6868, -439.6367, -412.3749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-391.6972, -318.7267, -268.6816, -439.4249, -412.0319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-391.4863, -318.6510, -268.7993, -439.4980, -411.9412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0715, device='cuda:0', dtype=torch.float64)
tensor([-390.8850, -318.5860, -268.6937, -439.2001, -411.6899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-390.2851, -318.5616, -268.5783, -438.8790, -411.4484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0710, device='cuda:0', dtype=torch.float64)
tensor([-388.6553, -318.4302, -268.0209, -437.6528, -410.7703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-387.5750, -318.2494, -267.8294, -436.9803, -410.2803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0780, device='cuda:0', dtype=torch.float64)
tensor([-386.8126, -317.9957, -267.8274, -436.5946, -409.9646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0769, device='cuda:0', dtype=torch.float64)
tensor([-385.9576, -317.7480, -267.7463, -436.1085, -409.6653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0735, device='cuda:0', dtype=torch.float64)
tensor([-384.5832, -317.4437, -267.5320, -435.2784, -409.2649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0619, device='cuda:0', dtype=torch.float64)
tensor([-383.2941, -317.2081, -267.2510, -434.4040, -408.8490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-381.8809, -316.8789, -266.9327, -433.3915, -408.2739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0717, device='cuda:0', dtype=torch.float64)
tensor([-381.4061, -316.5403, -267.0673, -433.1474, -408.1029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-381.3239, -316.3428, -267.2130, -433.1135, -407.9639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-380.8207, -316.2040, -267.0801, -432.6510, -407.5428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0701, device='cuda:0', dtype=torch.float64)
tensor([-380.1118, -316.1855, -266.7774, -431.9621, -407.1205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0729, device='cuda:0', dtype=torch.float64)
tensor([-379.9730, -316.2503, -266.6745, -431.6446, -406.9092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-380.1918, -316.2684, -266.7614, -431.6310, -406.6738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0607, device='cuda:0', dtype=torch.float64)
tensor([-380.6362, -316.2932, -266.8474, -431.6871, -406.4308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-381.2889, -316.3306, -266.9095, -431.8166, -406.0900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0668, device='cuda:0', dtype=torch.float64)
tensor([-382.1378, -316.3929, -267.0991, -432.1854, -406.0270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0619, device='cuda:0', dtype=torch.float64)
tensor([-382.3285, -316.4302, -267.0879, -432.0823, -405.7389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0713, device='cuda:0', dtype=torch.float64)
tensor([-382.5925, -316.4276, -267.1150, -432.1339, -405.4632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0818, device='cuda:0', dtype=torch.float64)
tensor([-383.6498, -316.5205, -267.3496, -432.6003, -405.3137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0685, device='cuda:0', dtype=torch.float64)
tensor([-384.9616, -316.6453, -267.8683, -433.4999, -405.5901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-386.7768, -316.7151, -268.7628, -434.9854, -406.2558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0848, device='cuda:0', dtype=torch.float64)
tensor([-388.9387, -316.6997, -270.0316, -437.1875, -407.4374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0715, device='cuda:0', dtype=torch.float64)
tensor([-390.8404, -316.6674, -271.1973, -439.1516, -408.3739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0641, device='cuda:0', dtype=torch.float64)
tensor([-392.6708, -316.6775, -272.1966, -440.8841, -409.2031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-393.9212, -316.6174, -273.0170, -442.1587, -409.8293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0635, device='cuda:0', dtype=torch.float64)
tensor([-395.2643, -316.5278, -273.9156, -443.5535, -410.4654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0680, device='cuda:0', dtype=torch.float64)
tensor([-396.3538, -316.4875, -274.6584, -444.6698, -410.9398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-397.0316, -316.4767, -275.1499, -445.3752, -411.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0715, device='cuda:0', dtype=torch.float64)
tensor([-397.4411, -316.2978, -275.7164, -446.0970, -411.6568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0730, device='cuda:0', dtype=torch.float64)
tensor([-397.7888, -316.1269, -276.2999, -446.7985, -412.1475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0624, device='cuda:0', dtype=torch.float64)
tensor([-397.7210, -315.9568, -276.7355, -447.2164, -412.5871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-397.3667, -315.7548, -276.9670, -447.2966, -412.7538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-396.5529, -315.6650, -276.7261, -446.6146, -412.4658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-394.8815, -315.6521, -275.9851, -445.0507, -411.6749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-393.7755, -315.6750, -275.4254, -443.9484, -411.0881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-393.5482, -315.7218, -275.2936, -443.6609, -410.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-393.1560, -315.8184, -274.9477, -443.0221, -410.4636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-392.5286, -315.8605, -274.5215, -442.1856, -409.8609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-391.5925, -315.8693, -274.0043, -441.1150, -409.1436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0647, device='cuda:0', dtype=torch.float64)
tensor([-391.2555, -316.0741, -273.5404, -440.3496, -408.5748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0799, device='cuda:0', dtype=torch.float64)
tensor([-390.6517, -316.2284, -272.9256, -439.2811, -407.7331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0713, device='cuda:0', dtype=torch.float64)
tensor([-389.2595, -316.4560, -271.7207, -437.2825, -406.3047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-388.1173, -316.6957, -270.6623, -435.6249, -405.0100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0694, device='cuda:0', dtype=torch.float64)
tensor([-386.7655, -316.9905, -269.3644, -433.6946, -403.5091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0591, device='cuda:0', dtype=torch.float64)
tensor([-386.1323, -317.2067, -268.5633, -432.6097, -402.4880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0521, device='cuda:0', dtype=torch.float64)
tensor([-385.3380, -317.4003, -267.7292, -431.4102, -401.4659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0599, device='cuda:0', dtype=torch.float64)
tensor([-384.7279, -317.4912, -267.0729, -430.3893, -400.5538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-383.8084, -317.6202, -266.2445, -429.0489, -399.5663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-383.4282, -317.7010, -265.8126, -428.3404, -398.9899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-383.2652, -317.8317, -265.4019, -427.6750, -398.4588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-383.4245, -317.9627, -265.2839, -427.5274, -398.2496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-383.4059, -317.9917, -265.2456, -427.3332, -398.0935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0658, device='cuda:0', dtype=torch.float64)
tensor([-383.6821, -318.1107, -265.2697, -427.3220, -398.1235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-383.7911, -318.2326, -265.1916, -427.1734, -398.0057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0629, device='cuda:0', dtype=torch.float64)
tensor([-384.1036, -318.3597, -265.3020, -427.2699, -398.1036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-384.3869, -318.4256, -265.5313, -427.5490, -398.3512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-384.4346, -318.4122, -265.6929, -427.6839, -398.4338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-384.6655, -318.3623, -266.0272, -428.0440, -398.7363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-385.3497, -318.3307, -266.6620, -428.9758, -399.3798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0538, device='cuda:0', dtype=torch.float64)
tensor([-385.6007, -318.2839, -266.9723, -429.3486, -399.6386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-386.0294, -318.2429, -267.2832, -429.7620, -399.8077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-386.1419, -318.2415, -267.3835, -429.8430, -399.7038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-386.4527, -318.1859, -267.7712, -430.2861, -399.9605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-386.4909, -318.1255, -268.0182, -430.4038, -400.0467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-386.3099, -318.0935, -268.0306, -430.2005, -399.9079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-386.0368, -318.0915, -267.9747, -429.8536, -399.6663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0636, device='cuda:0', dtype=torch.float64)
tensor([-385.5493, -318.1875, -267.6671, -429.1673, -399.2177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-385.3932, -318.3076, -267.4893, -428.7459, -399.0224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-385.3765, -318.4292, -267.3445, -428.3980, -398.8298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-386.1469, -318.5313, -267.6021, -428.7338, -398.9176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-386.9814, -318.6749, -267.8182, -429.0630, -398.9486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0723, device='cuda:0', dtype=torch.float64)
tensor([-387.2198, -318.8610, -267.6987, -428.8560, -398.6985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-387.5728, -318.9771, -267.6637, -428.7760, -398.4852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-388.1040, -319.0681, -267.8197, -428.9916, -398.4714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0578, device='cuda:0', dtype=torch.float64)
tensor([-388.9681, -319.1750, -268.1564, -429.4608, -398.6660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0523, device='cuda:0', dtype=torch.float64)
tensor([-389.4184, -319.2207, -268.3822, -429.7051, -398.6938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-389.9725, -319.3785, -268.5911, -429.9478, -398.7666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-391.0196, -319.4864, -269.0758, -430.7147, -399.0785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0629, device='cuda:0', dtype=torch.float64)
tensor([-392.1176, -319.5676, -269.5721, -431.4807, -399.2465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0679, device='cuda:0', dtype=torch.float64)
tensor([-393.6102, -319.6738, -270.2433, -432.5611, -399.5693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-394.8827, -319.7009, -270.9822, -433.6235, -399.9573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-395.8128, -319.7491, -271.5206, -434.4063, -400.3226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-396.3156, -319.8103, -271.7933, -434.7609, -400.4214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-396.8403, -319.9718, -271.9927, -435.0546, -400.4974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0633, device='cuda:0', dtype=torch.float64)
tensor([-396.6423, -320.0486, -271.9002, -434.7984, -400.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-396.4593, -320.1041, -271.8379, -434.5831, -399.9882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-396.2796, -320.1061, -271.8184, -434.4117, -399.8339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-396.1640, -320.1400, -271.8105, -434.2296, -399.6457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0666, device='cuda:0', dtype=torch.float64)
tensor([-396.4382, -320.1739, -272.0530, -434.5267, -399.7650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0519, device='cuda:0', dtype=torch.float64)
tensor([-397.1215, -320.2632, -272.3889, -435.0477, -399.9851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-397.5615, -320.2778, -272.6965, -435.5092, -400.1830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-397.3541, -320.1670, -272.7693, -435.4754, -400.0595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-396.9441, -320.0624, -272.7555, -435.1913, -399.8697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-396.5823, -319.9091, -272.9223, -435.1590, -399.8017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0694, device='cuda:0', dtype=torch.float64)
tensor([-396.9195, -319.7400, -273.5220, -435.9203, -400.1340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-397.3690, -319.5694, -274.2215, -436.8699, -400.5646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-397.2761, -319.3205, -274.6770, -437.2912, -400.6557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-397.1241, -319.1224, -275.0896, -437.6609, -400.7842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-396.6313, -318.9412, -275.1423, -437.4939, -400.4647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0710, device='cuda:0', dtype=torch.float64)
tensor([-395.4339, -318.6411, -274.7856, -436.5536, -399.5533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-394.8043, -318.4623, -274.6616, -436.1247, -399.0500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-393.8898, -318.3448, -274.2976, -435.3414, -398.3851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0626, device='cuda:0', dtype=torch.float64)
tensor([-393.2857, -318.2607, -274.1099, -434.8269, -397.8367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-392.5442, -318.2202, -273.8463, -434.1410, -397.2260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-391.9887, -318.2738, -273.5856, -433.5263, -396.7039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-391.2087, -318.3242, -273.2755, -432.7678, -396.1726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0624, device='cuda:0', dtype=torch.float64)
tensor([-390.7192, -318.4026, -273.0790, -432.1930, -395.7960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0563, device='cuda:0', dtype=torch.float64)
tensor([-390.6484, -318.4121, -273.2304, -432.1615, -395.7552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-390.3998, -318.3893, -273.2400, -431.9266, -395.5606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-390.1661, -318.4003, -273.0485, -431.3904, -395.0752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0569, device='cuda:0', dtype=torch.float64)
tensor([-389.9531, -318.4330, -272.9043, -430.9539, -394.6508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-389.7019, -318.4582, -272.7940, -430.5381, -394.3159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-389.5377, -318.4845, -272.8165, -430.3613, -394.1684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-389.7704, -318.5845, -272.9207, -430.3997, -394.1872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-389.5050, -318.6402, -272.8642, -430.1737, -394.0689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-389.2303, -318.7066, -272.8287, -430.0078, -393.9884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0617, device='cuda:0', dtype=torch.float64)
tensor([-389.5635, -318.8450, -272.9625, -430.1699, -394.0830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0588, device='cuda:0', dtype=torch.float64)
tensor([-390.7253, -318.9951, -273.4749, -431.0941, -394.6121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-391.5941, -319.1291, -273.8848, -431.8226, -395.0162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-392.4971, -319.3408, -274.1525, -432.3462, -395.2884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-393.6318, -319.6038, -274.5672, -433.1410, -395.7992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-394.7727, -319.8254, -275.1480, -434.0619, -396.4653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-395.8913, -320.0118, -275.6417, -434.8608, -396.9008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-396.6487, -320.1024, -276.0614, -435.4261, -397.1808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0657, device='cuda:0', dtype=torch.float64)
tensor([-397.0045, -320.2403, -276.1259, -435.3669, -397.0348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-397.4589, -320.3936, -276.2925, -435.4248, -397.0508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0564, device='cuda:0', dtype=torch.float64)
tensor([-398.4464, -320.5488, -276.6689, -435.9268, -397.2392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-399.3189, -320.7592, -276.9046, -436.2231, -397.2940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-399.7148, -320.9581, -276.9085, -436.0865, -397.0715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0514, device='cuda:0', dtype=torch.float64)
tensor([-399.9564, -321.0983, -276.8761, -435.9402, -396.8389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-400.0567, -321.1565, -276.8972, -435.9288, -396.7077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-400.2795, -321.2801, -276.8659, -435.9184, -396.5884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-400.4687, -321.4318, -276.7385, -435.8200, -396.4346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-401.1345, -321.5445, -276.9979, -436.2814, -396.6407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-401.2481, -321.5589, -277.0999, -436.4423, -396.6046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-402.0687, -321.6877, -277.4513, -437.1674, -396.9452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-402.8223, -321.7975, -277.7809, -437.7811, -397.2478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0557, device='cuda:0', dtype=torch.float64)
tensor([-402.7176, -321.7947, -277.7433, -437.5838, -396.9941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-402.9774, -321.8664, -277.8372, -437.6427, -396.9148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-403.2855, -321.9374, -277.9511, -437.6731, -396.8427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0566, device='cuda:0', dtype=torch.float64)
tensor([-403.2221, -321.9857, -278.0413, -437.6647, -396.8522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0589, device='cuda:0', dtype=torch.float64)
tensor([-402.7195, -321.9148, -277.9660, -437.3601, -396.6306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-402.3724, -321.9090, -277.9179, -437.2014, -396.5109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-401.5601, -321.7924, -277.7953, -436.8256, -396.3128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-400.6356, -321.7186, -277.5530, -436.1983, -395.9235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-399.9787, -321.6077, -277.6059, -436.0259, -395.8199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-399.3993, -321.5243, -277.7282, -435.9692, -395.7756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-399.5922, -321.5058, -278.2815, -436.6774, -396.3120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-399.6561, -321.5979, -278.5609, -437.0480, -396.6249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0462, device='cuda:0', dtype=torch.float64)
tensor([-399.6956, -321.7227, -278.7953, -437.2588, -396.8433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-400.1644, -321.9423, -279.2254, -437.8296, -397.3528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-400.9658, -322.1495, -279.7814, -438.6284, -397.9120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-401.4049, -322.3847, -280.1122, -438.9764, -398.2063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0518, device='cuda:0', dtype=torch.float64)
tensor([-401.9980, -322.7012, -280.4114, -439.3660, -398.4786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-402.0227, -322.9534, -280.5632, -439.4235, -398.5761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-402.1240, -323.2224, -280.7293, -439.5160, -398.7535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-402.4752, -323.4863, -280.9414, -439.7511, -398.9963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-403.3444, -323.7962, -281.3920, -440.4244, -399.5039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-404.4333, -324.1384, -281.8801, -441.1987, -399.9335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-405.2785, -324.4269, -282.2981, -441.8633, -400.2948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-406.1658, -324.6876, -282.7359, -442.5010, -400.6564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-406.5887, -324.8885, -283.0261, -442.8699, -400.8800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-407.0210, -325.1283, -283.2513, -443.1904, -401.1252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-407.4426, -325.3936, -283.5178, -443.5767, -401.4508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-408.3699, -325.7857, -283.9341, -444.3790, -401.9818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-409.3539, -326.2089, -284.3061, -445.1680, -402.4960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0537, device='cuda:0', dtype=torch.float64)
tensor([-410.4888, -326.6324, -284.7723, -446.0997, -403.0376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-412.0171, -327.0195, -285.4444, -447.3875, -403.7040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-413.4314, -327.3895, -286.1652, -448.7760, -404.4605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-414.6801, -327.7032, -286.9058, -450.1504, -405.1937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-415.7397, -327.9384, -287.5377, -451.3265, -405.7319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-416.7985, -328.1680, -288.2680, -452.5963, -406.3549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-416.8190, -328.2544, -288.5143, -452.9120, -406.3448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-417.1612, -328.3688, -288.9933, -453.6055, -406.6242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-417.3132, -328.5540, -289.3433, -454.0790, -406.8115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-417.8035, -328.8951, -289.7493, -454.7582, -407.1329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-418.4124, -329.2664, -290.1599, -455.5158, -407.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-419.3784, -329.7447, -290.7722, -456.6666, -408.2884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-420.1060, -330.1445, -291.4080, -457.7957, -409.0801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-420.7704, -330.5854, -291.9483, -458.7610, -409.7854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-421.1104, -330.9046, -292.4300, -459.5308, -410.3628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-421.6441, -331.2339, -292.9986, -460.5092, -411.0295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-422.9887, -331.6980, -293.8947, -462.1737, -412.1255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-424.7396, -332.2823, -294.8894, -464.0456, -413.3636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-426.2617, -332.8879, -295.7332, -465.6406, -414.4638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-427.4636, -333.4025, -296.4041, -466.8630, -415.3118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-428.7546, -333.9327, -297.1087, -468.1784, -416.1692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-429.9413, -334.4786, -297.6346, -469.1678, -416.8089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-431.1989, -335.0694, -298.1372, -470.1589, -417.4803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-432.6691, -335.5960, -298.8845, -471.4826, -418.3535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-433.4499, -335.9770, -299.3695, -472.2808, -418.8564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-433.8472, -336.2478, -299.7071, -472.7686, -419.1677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-434.1242, -336.4393, -300.0861, -473.3022, -419.5285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-434.9448, -336.7120, -300.8058, -474.3922, -420.3512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-435.5218, -336.8771, -301.4530, -475.2913, -420.9911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-435.8134, -336.9539, -302.0798, -476.1557, -421.5881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-436.1783, -337.0326, -302.7191, -477.1274, -422.2382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-436.3861, -337.2107, -303.0416, -477.6335, -422.6104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-436.2023, -337.3833, -303.1368, -477.6932, -422.6974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-435.9734, -337.5721, -303.1020, -477.5354, -422.6147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-435.4888, -337.7373, -302.8690, -477.0091, -422.3272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-434.5264, -337.8203, -302.3816, -476.0337, -421.6723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-432.9547, -337.7534, -301.7300, -474.6837, -420.8414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-431.9751, -337.8327, -301.3039, -473.7763, -420.3120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-430.6945, -337.7885, -300.8695, -472.7501, -419.6497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-429.5050, -337.7776, -300.4355, -471.7722, -418.9490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-428.5346, -337.7870, -300.1347, -470.9728, -418.3500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-427.0229, -337.6448, -299.7003, -469.8120, -417.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-425.8615, -337.5836, -299.4244, -469.0061, -416.9171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-424.7610, -337.5775, -299.1855, -468.2581, -416.3990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-423.9326, -337.6363, -299.0386, -467.7062, -416.0481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-423.5681, -337.7053, -299.1845, -467.6554, -416.0006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-423.0878, -337.6926, -299.3840, -467.6421, -416.0086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-422.7697, -337.7624, -299.5761, -467.7324, -416.1018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-423.0924, -337.9677, -299.9891, -468.3212, -416.5340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-423.6316, -338.2780, -300.4553, -469.0429, -417.1212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-425.2907, -338.8085, -301.4253, -470.7307, -418.4606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-426.4383, -339.1733, -302.2411, -472.1293, -419.4844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-427.2579, -339.5635, -302.7066, -472.9001, -420.0991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-427.4931, -339.8646, -302.9438, -473.2144, -420.3934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-427.5165, -340.1445, -303.0485, -473.2620, -420.5103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-428.0091, -340.5494, -303.4266, -473.7804, -421.0263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-428.3078, -340.9493, -303.6264, -473.9676, -421.3434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-429.2179, -341.5458, -304.0575, -474.6618, -422.0168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-429.8437, -342.0779, -304.3641, -475.1322, -422.5518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-430.1180, -342.5495, -304.4571, -475.2293, -422.8043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-430.0689, -342.9364, -304.4461, -475.0347, -422.8406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-431.5502, -343.6465, -305.2125, -476.3070, -423.9084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-433.0509, -344.3234, -306.0583, -477.6366, -425.0737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-434.3982, -344.9556, -306.7534, -478.7293, -426.0166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-435.7430, -345.5051, -307.5686, -479.9539, -427.0439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-437.0499, -346.0114, -308.4133, -481.2790, -428.0986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-438.3552, -346.4127, -309.2289, -482.5065, -429.0978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-439.5622, -346.7797, -310.0281, -483.6831, -430.0249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-440.6043, -347.1411, -310.7074, -484.6167, -430.7763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-441.7748, -347.4466, -311.4965, -485.7681, -431.6054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-442.8355, -347.7979, -312.1168, -486.6974, -432.2840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-443.4728, -348.0923, -312.5020, -487.2251, -432.6933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-444.1319, -348.4075, -312.8692, -487.7480, -433.1443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-444.2380, -348.5776, -313.0093, -487.8230, -433.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-444.5910, -348.7888, -313.3569, -488.2464, -433.6790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-445.0651, -349.0485, -313.7264, -488.7493, -434.1172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-445.2777, -349.2778, -313.9231, -488.9384, -434.3369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-445.8090, -349.5143, -314.3095, -489.4138, -434.7440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-446.1042, -349.7724, -314.4927, -489.5495, -434.9377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-446.3963, -350.0058, -314.7376, -489.8149, -435.2311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-446.8015, -350.3303, -314.9596, -490.0868, -435.5214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-447.1652, -350.6445, -315.1289, -490.3455, -435.7214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-447.9118, -351.1706, -315.4110, -490.8416, -436.1778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-448.4636, -351.6476, -315.6879, -491.3655, -436.6836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-449.0554, -352.1433, -315.8988, -491.7987, -437.0975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-449.4382, -352.5876, -316.0688, -492.0760, -437.4334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-450.3514, -353.2290, -316.4672, -492.8095, -438.1537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-451.1971, -353.8478, -316.8606, -493.5434, -438.8443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-452.4678, -354.6401, -317.3801, -494.5660, -439.7991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-454.0419, -355.4912, -318.0077, -495.8194, -440.9119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-455.7076, -356.3933, -318.7451, -497.2439, -442.2243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-456.9668, -357.0738, -319.4439, -498.5248, -443.3326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-457.5350, -357.5930, -319.6963, -499.0612, -443.8831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-457.9953, -358.0218, -319.9431, -499.5036, -444.3130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-458.8336, -358.6153, -320.2993, -500.2124, -444.9725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-460.0591, -359.3487, -320.7465, -501.1285, -445.7444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-461.2868, -360.0641, -321.2591, -502.1424, -446.5936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-462.9818, -360.8795, -322.1572, -503.8373, -447.9319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-464.5414, -361.6915, -322.8609, -505.1926, -449.0326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-465.6194, -362.4208, -323.2917, -506.0933, -449.7953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-466.4598, -363.1566, -323.4981, -506.6438, -450.3425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-467.7197, -364.0295, -323.8279, -507.4364, -451.0924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-469.2201, -364.9906, -324.2732, -508.4575, -452.0649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-471.3886, -366.1305, -325.0757, -510.1403, -453.5523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-473.2599, -367.1532, -325.7276, -511.5149, -454.7318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-474.2647, -367.8761, -326.0719, -512.2847, -455.4152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-475.2210, -368.6157, -326.3385, -512.9730, -456.0128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-475.8219, -369.2492, -326.4121, -513.2880, -456.3510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-476.2655, -369.8845, -326.3303, -513.2974, -456.4979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-477.0892, -370.6975, -326.3888, -513.5436, -456.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-477.9074, -371.5542, -326.4481, -513.8259, -457.3958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-478.9733, -372.5869, -326.4807, -514.1509, -457.9642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-479.7903, -373.5211, -326.3428, -514.1204, -458.2741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-480.0529, -374.1976, -326.0474, -513.7396, -458.2855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-480.4733, -374.8184, -326.0323, -513.7411, -458.5438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-480.5234, -375.2079, -325.9943, -513.5751, -458.6511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-480.2674, -375.3858, -325.8875, -513.3384, -458.6102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-479.9311, -375.4854, -325.8958, -513.3168, -458.6820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-479.6121, -375.6386, -325.8636, -513.2142, -458.7467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-479.8702, -376.0104, -326.0898, -513.5380, -459.1569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-479.6504, -376.2111, -326.1382, -513.4983, -459.2609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-478.8306, -376.2371, -325.9533, -512.9847, -458.9898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-478.5863, -376.4225, -326.1356, -513.1627, -459.2447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-478.6048, -376.6970, -326.3892, -513.4870, -459.6443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-478.3050, -376.8427, -326.4840, -513.5843, -459.8412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-478.5706, -377.1239, -326.8932, -514.2137, -460.4577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-478.6729, -377.2864, -327.3178, -514.8225, -461.0339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-478.6536, -377.4136, -327.6330, -515.2145, -461.4535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-478.9743, -377.7250, -328.0637, -515.7788, -462.0927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-479.6306, -378.2279, -328.5349, -516.5227, -462.8805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-480.8967, -378.9524, -329.3501, -517.9270, -464.2214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-482.8551, -379.8632, -330.4860, -519.9825, -466.0276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-484.3972, -380.4971, -331.5586, -521.8926, -467.5408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-485.4800, -381.0542, -332.3107, -523.2654, -468.6674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-486.8081, -381.7321, -333.1882, -524.9014, -469.9764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-488.0211, -382.2647, -334.1905, -526.7054, -471.2909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-488.9621, -382.6474, -335.1423, -528.4155, -472.4677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-490.1571, -383.1508, -336.1964, -530.2934, -473.8573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-491.0716, -383.5950, -337.0907, -531.8367, -475.0486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-492.3364, -384.1243, -338.2368, -533.7578, -476.5705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-493.7270, -384.7079, -339.4534, -535.8244, -478.1513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-494.9935, -385.3167, -340.4835, -537.5375, -479.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-496.9413, -386.1970, -341.7744, -539.7909, -481.3382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-499.0423, -387.2359, -342.9877, -541.9300, -483.1418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-500.7528, -388.2293, -343.8639, -543.4845, -484.5453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-502.0510, -389.0554, -344.5316, -544.5914, -485.6094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-503.6144, -389.9540, -345.3647, -546.0008, -486.8937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-504.7486, -390.7192, -345.9911, -547.0223, -487.8694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-506.2763, -391.6147, -346.8466, -548.4857, -489.1841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-507.8654, -392.5140, -347.7420, -550.0214, -490.5494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-508.9037, -393.2457, -348.3654, -550.9608, -491.5054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-509.9146, -394.0126, -348.8905, -551.7308, -492.4046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-510.5843, -394.7736, -349.1872, -552.1371, -493.0362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-511.3059, -395.5782, -349.4828, -552.6224, -493.7209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-511.7545, -396.2607, -349.6601, -552.8639, -494.1934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-512.3095, -397.0131, -349.9041, -553.2433, -494.7905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-512.8087, -397.8587, -350.0299, -553.3652, -495.2994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-513.2579, -398.7088, -350.1091, -553.4385, -495.8049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-513.8126, -399.5455, -350.3582, -553.7506, -496.4723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-514.5033, -400.3725, -350.7004, -554.2575, -497.2195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-515.3313, -401.2299, -351.2161, -555.0523, -498.1940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-516.7175, -402.4573, -351.8210, -556.1258, -499.5258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-517.7597, -403.5190, -352.2806, -556.9552, -500.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-519.1719, -404.7522, -352.9028, -558.0688, -501.9755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-520.8631, -405.9583, -353.8366, -559.6474, -503.6449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-522.8302, -407.4277, -354.7830, -561.2757, -505.4851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-525.3712, -409.1036, -356.1245, -563.5599, -507.8971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-528.2059, -410.9271, -357.5607, -565.9910, -510.4477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-531.0071, -412.6492, -359.1006, -568.5742, -512.9990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-533.8780, -414.3988, -360.6699, -571.0663, -515.5206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-536.3647, -415.9480, -362.0914, -573.3112, -517.8129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-538.8281, -417.3986, -363.6764, -575.8301, -520.1611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-540.9444, -418.6769, -365.0882, -578.0405, -522.2436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-542.6756, -419.7229, -366.4212, -580.0430, -524.1469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-544.1031, -420.6706, -367.4854, -581.6051, -525.7448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-545.0368, -421.2675, -368.2971, -582.6351, -526.7831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-545.7174, -421.8738, -368.8758, -583.3480, -527.6661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-546.3463, -422.6021, -369.2407, -583.8030, -528.4467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-546.9534, -423.2561, -369.6604, -584.3446, -529.2342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-547.8403, -424.0454, -370.2194, -585.1516, -530.2047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-548.9153, -425.0133, -370.8011, -585.9954, -531.2740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-549.8314, -425.9054, -371.3435, -586.7422, -532.2873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-551.0107, -427.0319, -371.8811, -587.5409, -533.4115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-551.9475, -428.0986, -372.3187, -588.1553, -534.4197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-553.0399, -429.3149, -372.7859, -588.8779, -535.5543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-554.2988, -430.5329, -373.3056, -589.6600, -536.6933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-555.7394, -431.8125, -373.9627, -590.5947, -538.0258],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_024328.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(122.6144, device='cuda:0', dtype=torch.float64)
tensor([ -2.0512, -12.0209,  -6.4028, -10.6342,  -5.4567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.1218, device='cuda:0', dtype=torch.float64)
tensor([ -2.9053,  -9.7401,  -6.9760, -11.8968, -16.4414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(117.1999, device='cuda:0', dtype=torch.float64)
tensor([ -3.6168,  -6.6352,  -5.9663, -16.4908, -17.9364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(126.6351, device='cuda:0', dtype=torch.float64)
tensor([ -2.6388,  -5.1650,  -4.4952, -13.1509, -13.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(86.6221, device='cuda:0', dtype=torch.float64)
tensor([ -2.5881,  -4.7834,  -3.3282,  -9.7426, -10.4981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.3379, device='cuda:0', dtype=torch.float64)
tensor([-2.4942, -4.8999, -3.0047, -6.3338, -6.2585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(42.2388, device='cuda:0', dtype=torch.float64)
tensor([-2.5177, -5.0380, -2.9362, -6.4097, -4.8013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(50.6330, device='cuda:0', dtype=torch.float64)
tensor([-2.5343, -4.8262, -2.8949, -6.5754, -4.6345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.0626, device='cuda:0', dtype=torch.float64)
tensor([-2.5704, -5.5061, -2.9472, -8.0904, -4.4161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.2697, device='cuda:0', dtype=torch.float64)
tensor([ -2.5509,  -5.3741,  -3.2156, -12.6110,  -4.2900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(46.2673, device='cuda:0', dtype=torch.float64)
tensor([ -2.4200,  -4.3773,  -3.5419, -13.5175,  -4.3190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.6490, device='cuda:0', dtype=torch.float64)
tensor([ -2.2286,  -3.7477,  -3.7921, -10.6231,  -4.7951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.7099, device='cuda:0', dtype=torch.float64)
tensor([-2.0635, -3.3558, -4.3623, -7.1005, -4.7448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.6947, device='cuda:0', dtype=torch.float64)
tensor([-1.9906, -3.1543, -4.4454, -4.4086, -4.0982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.1205, device='cuda:0', dtype=torch.float64)
tensor([-2.0108, -3.1444, -3.9438, -3.8167, -3.8438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.4048, device='cuda:0', dtype=torch.float64)
tensor([-2.0933, -3.1982, -3.5065, -3.5847, -3.8018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.6763, device='cuda:0', dtype=torch.float64)
tensor([-2.1758, -3.4242, -3.2919, -3.4632, -3.7682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.3656, device='cuda:0', dtype=torch.float64)
tensor([-2.1881, -3.6520, -3.1968, -3.4549, -3.7350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.9268, device='cuda:0', dtype=torch.float64)
tensor([-2.1105, -3.4243, -3.1432, -3.4690, -3.6813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.0730, device='cuda:0', dtype=torch.float64)
tensor([-2.0034, -3.0359, -3.0950, -3.4933, -3.5943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9132, device='cuda:0', dtype=torch.float64)
tensor([-1.9269, -2.8952, -3.0378, -3.5597, -3.5091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7878, device='cuda:0', dtype=torch.float64)
tensor([-1.8913, -2.8934, -2.9762, -3.6091, -3.4585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.3483, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.9290, -2.9219, -3.6535, -3.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.4402, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.9862, -2.8829, -3.7485, -3.4744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.3155, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -3.0512, -2.8567, -3.8626, -3.4757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0760, device='cuda:0', dtype=torch.float64)
tensor([-1.9010, -3.0999, -2.8375, -3.8939, -3.4415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.9805, device='cuda:0', dtype=torch.float64)
tensor([-1.8996, -3.1027, -2.8241, -3.8263, -3.4111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9112, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -3.0558, -2.8165, -3.7275, -3.4019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5114, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.9899, -2.8140, -3.6550, -3.4084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3440, device='cuda:0', dtype=torch.float64)
tensor([-1.7784, -2.9303, -2.8159, -3.6172, -3.4304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.4184, device='cuda:0', dtype=torch.float64)
tensor([-1.7586, -2.8872, -2.8214, -3.6021, -3.4621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.7239, device='cuda:0', dtype=torch.float64)
tensor([-1.7523, -2.8614, -2.8289, -3.6004, -3.4954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5680, device='cuda:0', dtype=torch.float64)
tensor([-1.7546, -2.8412, -2.8368, -3.6049, -3.5211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9067, device='cuda:0', dtype=torch.float64)
tensor([-1.7623, -2.8141, -2.8424, -3.6049, -3.5306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2043, device='cuda:0', dtype=torch.float64)
tensor([-1.7732, -2.7814, -2.8429, -3.5994, -3.5193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2173, device='cuda:0', dtype=torch.float64)
tensor([-1.7855, -2.7562, -2.8365, -3.5968, -3.4888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0316, device='cuda:0', dtype=torch.float64)
tensor([-1.7975, -2.7455, -2.8238, -3.5978, -3.4466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6115, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.7474, -2.8075, -3.5987, -3.4026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9994, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.7579, -2.7899, -3.5984, -3.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3980, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.7740, -2.7700, -3.5941, -3.3268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0070, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7932, -2.7461, -3.5804, -3.2914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7966, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.8132, -2.7208, -3.5572, -3.2607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6877, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.8324, -2.7002, -3.5310, -3.2407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6361, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.8493, -2.6877, -3.5062, -3.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6362, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.8634, -2.6831, -3.4821, -3.2328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5470, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.8744, -2.6849, -3.4573, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3699, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.8822, -2.6914, -3.4330, -3.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1193, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.8859, -2.7019, -3.4114, -3.2614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8964, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.8846, -2.7150, -3.3946, -3.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7506, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.8783, -2.7301, -3.3840, -3.2871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6545, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.8682, -2.7460, -3.3797, -3.2996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5509, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.8569, -2.7614, -3.3805, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4881, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.8462, -2.7751, -3.3848, -3.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5067, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.8373, -2.7862, -3.3905, -3.3357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5028, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.8302, -2.7941, -3.3959, -3.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4400, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.8249, -2.7985, -3.4001, -3.3542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3596, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.8204, -2.7996, -3.4021, -3.3594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2601, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.8162, -2.7976, -3.4014, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1955, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.8117, -2.7936, -3.3982, -3.3611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0773, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.8065, -2.7890, -3.3933, -3.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9685, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.8007, -2.7847, -3.3878, -3.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8620, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.7944, -2.7819, -3.3826, -3.3573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7667, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.7873, -2.7814, -3.3782, -3.3570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6991, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.7799, -2.7833, -3.3746, -3.3573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6322, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.7728, -2.7876, -3.3722, -3.3579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5828, device='cuda:0', dtype=torch.float64)
tensor([-1.8145, -2.7659, -2.7938, -3.3711, -3.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5250, device='cuda:0', dtype=torch.float64)
tensor([-1.8108, -2.7600, -2.8014, -3.3703, -3.3593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5102, device='cuda:0', dtype=torch.float64)
tensor([-1.8081, -2.7554, -2.8091, -3.3696, -3.3602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5118, device='cuda:0', dtype=torch.float64)
tensor([-1.8068, -2.7530, -2.8164, -3.3682, -3.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4571, device='cuda:0', dtype=torch.float64)
tensor([-1.8075, -2.7531, -2.8225, -3.3652, -3.3638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4076, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.7558, -2.8269, -3.3605, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3232, device='cuda:0', dtype=torch.float64)
tensor([-1.8142, -2.7604, -2.8297, -3.3544, -3.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2713, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.7660, -2.8317, -3.3480, -3.3740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2341, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.7717, -2.8330, -3.3419, -3.3776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2406, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.7772, -2.8338, -3.3366, -3.3806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2287, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.7818, -2.8345, -3.3325, -3.3827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2169, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7854, -2.8350, -3.3294, -3.3838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1994, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7879, -2.8355, -3.3275, -3.3838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1504, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7892, -2.8359, -3.3264, -3.3831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0719, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.7899, -2.8361, -3.3260, -3.3814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0745, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7900, -2.8360, -3.3258, -3.3790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0589, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.7896, -2.8359, -3.3257, -3.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0728, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.7889, -2.8358, -3.3256, -3.3738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0695, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.7876, -2.8362, -3.3252, -3.3714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0633, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.7857, -2.8372, -3.3249, -3.3692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0121, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7833, -2.8386, -3.3245, -3.3674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0087, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7811, -2.8403, -3.3237, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9672, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7791, -2.8420, -3.3226, -3.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9382, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.7772, -2.8440, -3.3218, -3.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9250, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.7755, -2.8462, -3.3207, -3.3654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9023, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.7743, -2.8480, -3.3192, -3.3665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8988, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.7734, -2.8497, -3.3178, -3.3676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8676, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.7727, -2.8513, -3.3169, -3.3686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8424, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.7722, -2.8525, -3.3164, -3.3696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8563, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.7721, -2.8535, -3.3161, -3.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8086, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.7726, -2.8536, -3.3156, -3.3713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8266, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.7734, -2.8532, -3.3149, -3.3716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7992, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.7743, -2.8524, -3.3145, -3.3714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8001, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.7749, -2.8515, -3.3148, -3.3707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7683, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7751, -2.8506, -3.3152, -3.3694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7771, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.7747, -2.8500, -3.3158, -3.3679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7515, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.7744, -2.8493, -3.3163, -3.3665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7708, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.7743, -2.8483, -3.3161, -3.3654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7746, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7741, -2.8476, -3.3158, -3.3646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7879, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.7740, -2.8469, -3.3146, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7265, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7742, -2.8465, -3.3135, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7341, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.7745, -2.8461, -3.3123, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7263, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.7747, -2.8455, -3.3113, -3.3644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7058, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.7744, -2.8452, -3.3109, -3.3650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7043, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7738, -2.8454, -3.3111, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7372, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.7730, -2.8459, -3.3116, -3.3667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7028, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.7723, -2.8459, -3.3116, -3.3675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6750, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.7718, -2.8457, -3.3118, -3.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7570, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.7711, -2.8456, -3.3122, -3.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6901, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7706, -2.8459, -3.3135, -3.3689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6780, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.7699, -2.8461, -3.3153, -3.3684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6567, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.7697, -2.8462, -3.3165, -3.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6858, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.7697, -2.8460, -3.3171, -3.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6388, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.7701, -2.8458, -3.3172, -3.3680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6794, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7704, -2.8457, -3.3168, -3.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6568, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.7707, -2.8455, -3.3160, -3.3686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6500, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.7713, -2.8450, -3.3144, -3.3693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6551, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.7716, -2.8447, -3.3135, -3.3700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6469, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.7715, -2.8449, -3.3136, -3.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6255, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.7714, -2.8450, -3.3139, -3.3709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6310, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.7713, -2.8448, -3.3142, -3.3713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6217, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.7711, -2.8445, -3.3140, -3.3713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6360, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.7715, -2.8438, -3.3136, -3.3708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6423, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7721, -2.8435, -3.3133, -3.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6455, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.7721, -2.8436, -3.3132, -3.3697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6388, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7717, -2.8434, -3.3128, -3.3690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6103, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.7715, -2.8430, -3.3120, -3.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5991, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7715, -2.8428, -3.3119, -3.3678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6183, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.7709, -2.8430, -3.3126, -3.3674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6505, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.7697, -2.8437, -3.3145, -3.3669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6139, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7684, -2.8447, -3.3164, -3.3665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5904, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7676, -2.8454, -3.3175, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6421, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.7673, -2.8458, -3.3172, -3.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5998, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7670, -2.8459, -3.3166, -3.3638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6960, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.7665, -2.8460, -3.3168, -3.3627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6434, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.7660, -2.8456, -3.3170, -3.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6209, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.7654, -2.8452, -3.3172, -3.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6304, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.7656, -2.8447, -3.3172, -3.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6343, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.7665, -2.8436, -3.3163, -3.3595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6030, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7683, -2.8422, -3.3142, -3.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6473, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.7702, -2.8410, -3.3122, -3.3604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5856, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.7724, -2.8401, -3.3107, -3.3611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6182, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.7737, -2.8397, -3.3103, -3.3616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5548, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.7743, -2.8399, -3.3105, -3.3619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5863, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.7741, -2.8409, -3.3115, -3.3620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5507, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.7733, -2.8425, -3.3130, -3.3626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5985, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.7729, -2.8441, -3.3140, -3.3633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6671, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7723, -2.8454, -3.3142, -3.3636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5940, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.7713, -2.8462, -3.3140, -3.3632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5862, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.7706, -2.8465, -3.3134, -3.3623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6566, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7692, -2.8467, -3.3144, -3.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5813, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.7675, -2.8476, -3.3161, -3.3593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5971, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.7668, -2.8478, -3.3170, -3.3575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6730, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.7668, -2.8470, -3.3166, -3.3554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6035, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.7669, -2.8462, -3.3162, -3.3534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5766, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.7670, -2.8457, -3.3157, -3.3521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6546, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.7669, -2.8450, -3.3139, -3.3514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5944, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7662, -2.8450, -3.3128, -3.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6185, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7644, -2.8453, -3.3130, -3.3514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6349, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.7628, -2.8460, -3.3140, -3.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6065, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.7614, -2.8467, -3.3140, -3.3527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5981, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.7611, -2.8465, -3.3123, -3.3540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6274, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7618, -2.8458, -3.3121, -3.3556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6655, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.7631, -2.8445, -3.3114, -3.3566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6258, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.7653, -2.8439, -3.3125, -3.3576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6274, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.7678, -2.8427, -3.3123, -3.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5812, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.7713, -2.8412, -3.3104, -3.3593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5915, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.7739, -2.8406, -3.3090, -3.3598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5803, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7762, -2.8405, -3.3079, -3.3602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6920, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.7765, -2.8420, -3.3090, -3.3592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5803, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.7751, -2.8437, -3.3096, -3.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5588, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.7730, -2.8452, -3.3105, -3.3567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6089, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.7712, -2.8460, -3.3109, -3.3556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5815, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.7706, -2.8460, -3.3108, -3.3550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5839, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.7695, -2.8455, -3.3101, -3.3542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5365, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.7683, -2.8449, -3.3099, -3.3538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5869, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.7662, -2.8449, -3.3099, -3.3536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5877, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.7645, -2.8448, -3.3099, -3.3535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6051, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.7634, -2.8443, -3.3096, -3.3535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5764, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.7629, -2.8442, -3.3098, -3.3540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6484, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7622, -2.8442, -3.3101, -3.3543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6228, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.7622, -2.8440, -3.3093, -3.3545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6249, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.7626, -2.8434, -3.3068, -3.3549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5741, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7630, -2.8435, -3.3054, -3.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5889, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.7633, -2.8432, -3.3048, -3.3546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6445, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.7622, -2.8445, -3.3068, -3.3537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6115, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.7615, -2.8455, -3.3095, -3.3530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6179, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7619, -2.8457, -3.3105, -3.3529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6511, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7628, -2.8444, -3.3096, -3.3524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6546, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.7641, -2.8420, -3.3079, -3.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5921, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.7660, -2.8393, -3.3064, -3.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6456, device='cuda:0', dtype=torch.float64)
tensor([-1.8545, -2.7668, -2.8381, -3.3068, -3.3507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5809, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.7671, -2.8378, -3.3082, -3.3503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7308, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.7675, -2.8382, -3.3077, -3.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6465, device='cuda:0', dtype=torch.float64)
tensor([-1.8577, -2.7686, -2.8382, -3.3059, -3.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6434, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7704, -2.8381, -3.3048, -3.3520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5928, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7713, -2.8390, -3.3052, -3.3521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6666, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.7710, -2.8407, -3.3065, -3.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7230, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.7692, -2.8432, -3.3097, -3.3493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5834, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.7670, -2.8454, -3.3130, -3.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6375, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.7665, -2.8457, -3.3130, -3.3482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6701, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.7671, -2.8445, -3.3102, -3.3487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6575, device='cuda:0', dtype=torch.float64)
tensor([-1.8545, -2.7678, -2.8434, -3.3075, -3.3494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6471, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.7670, -2.8426, -3.3069, -3.3488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6811, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.7652, -2.8426, -3.3082, -3.3481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6093, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.7633, -2.8425, -3.3088, -3.3476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7021, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.7632, -2.8408, -3.3062, -3.3471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6044, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7640, -2.8389, -3.3027, -3.3470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7371, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7654, -2.8385, -3.3008, -3.3470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6871, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.7652, -2.8397, -3.3007, -3.3468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6364, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.7645, -2.8417, -3.3022, -3.3452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7363, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.7641, -2.8447, -3.3040, -3.3438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6931, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.7637, -2.8470, -3.3034, -3.3434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7211, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.7637, -2.8482, -3.3024, -3.3437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6905, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.7637, -2.8498, -3.3025, -3.3435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7200, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.7622, -2.8521, -3.3033, -3.3429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6250, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.7608, -2.8543, -3.3034, -3.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6542, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.7597, -2.8548, -3.3030, -3.3435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6528, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.7593, -2.8541, -3.3020, -3.3443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7140, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.7598, -2.8528, -3.2995, -3.3455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7164, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.7609, -2.8507, -3.2964, -3.3465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7009, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7613, -2.8491, -3.2945, -3.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6666, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.7607, -2.8484, -3.2947, -3.3467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.7582, -2.8489, -3.2978, -3.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6346, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.7545, -2.8495, -3.3018, -3.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7004, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.7528, -2.8490, -3.3042, -3.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7475, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.7541, -2.8464, -3.3033, -3.3404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7261, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.7576, -2.8427, -3.3010, -3.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6674, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7611, -2.8403, -3.2990, -3.3401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6300, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.7637, -2.8395, -3.2984, -3.3400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6970, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.7665, -2.8389, -3.2975, -3.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6684, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.7701, -2.8383, -3.2954, -3.3423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7662, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.7732, -2.8380, -3.2924, -3.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6964, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.7754, -2.8380, -3.2916, -3.3480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5994, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.7760, -2.8385, -3.2915, -3.3512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7743, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.7770, -2.8388, -3.2929, -3.3539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6508, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.7763, -2.8399, -3.2948, -3.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6477, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.7754, -2.8400, -3.2974, -3.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6397, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.7747, -2.8400, -3.2993, -3.3546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6793, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.7734, -2.8405, -3.2998, -3.3540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6455, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.7703, -2.8417, -3.3013, -3.3515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6566, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.7656, -2.8427, -3.3047, -3.3488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7360, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7617, -2.8436, -3.3084, -3.3457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6612, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.7582, -2.8441, -3.3107, -3.3437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6365, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.7554, -2.8436, -3.3108, -3.3419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6716, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7538, -2.8420, -3.3103, -3.3402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7356, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.7523, -2.8407, -3.3082, -3.3396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7125, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.7496, -2.8409, -3.3092, -3.3388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6733, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.7475, -2.8426, -3.3102, -3.3386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7130, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7475, -2.8435, -3.3085, -3.3402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7862, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.7490, -2.8443, -3.3050, -3.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7409, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.7496, -2.8462, -3.3026, -3.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7200, device='cuda:0', dtype=torch.float64)
tensor([-1.8620, -2.7507, -2.8474, -3.3008, -3.3458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6978, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.7515, -2.8488, -3.3022, -3.3467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6806, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.7518, -2.8492, -3.3034, -3.3473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6898, device='cuda:0', dtype=torch.float64)
tensor([-1.8625, -2.7538, -2.8476, -3.3041, -3.3465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7070, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.7558, -2.8454, -3.3053, -3.3447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7067, device='cuda:0', dtype=torch.float64)
tensor([-1.8601, -2.7571, -2.8442, -3.3071, -3.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6840, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.7579, -2.8434, -3.3079, -3.3396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7867, device='cuda:0', dtype=torch.float64)
tensor([-1.8593, -2.7616, -2.8407, -3.3055, -3.3384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6902, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.7675, -2.8367, -3.2991, -3.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6347, device='cuda:0', dtype=torch.float64)
tensor([-1.8645, -2.7737, -2.8335, -3.2915, -3.3373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6608, device='cuda:0', dtype=torch.float64)
tensor([-1.8651, -2.7776, -2.8321, -3.2857, -3.3371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6847, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.7789, -2.8332, -3.2860, -3.3354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7360, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.7768, -2.8367, -3.2913, -3.3344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7072, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.7731, -2.8417, -3.2979, -3.3331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8120, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.7682, -2.8455, -3.3018, -3.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7884, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.7645, -2.8475, -3.3026, -3.3320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8206, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.7628, -2.8485, -3.3002, -3.3316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9094, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7599, -2.8504, -3.2979, -3.3311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8504, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.7569, -2.8534, -3.3001, -3.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8892, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.7571, -2.8540, -3.2990, -3.3306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0033, device='cuda:0', dtype=torch.float64)
tensor([-1.8561, -2.7594, -2.8495, -3.2911, -3.3325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6964, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.7636, -2.8456, -3.2871, -3.3354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8340, device='cuda:0', dtype=torch.float64)
tensor([-1.8602, -2.7658, -2.8439, -3.2863, -3.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8855, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.7677, -2.8450, -3.2921, -3.3353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7906, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7701, -2.8454, -3.2996, -3.3360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9493, device='cuda:0', dtype=torch.float64)
tensor([-1.8601, -2.7737, -2.8429, -3.3016, -3.3387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7584, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.7757, -2.8413, -3.3020, -3.3415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7907, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7753, -2.8409, -3.3044, -3.3431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8649, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.7706, -2.8436, -3.3058, -3.3442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7749, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.7647, -2.8446, -3.3055, -3.3451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7112, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.7601, -2.8448, -3.3038, -3.3458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7455, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7564, -2.8449, -3.3035, -3.3461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8278, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.7534, -2.8455, -3.3045, -3.3454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6938, device='cuda:0', dtype=torch.float64)
tensor([-1.8585, -2.7528, -2.8462, -3.3057, -3.3448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7864, device='cuda:0', dtype=torch.float64)
tensor([-1.8631, -2.7533, -2.8468, -3.3060, -3.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7664, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.7552, -2.8463, -3.3038, -3.3430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8645, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.7585, -2.8454, -3.3025, -3.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8049, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.7612, -2.8435, -3.2991, -3.3397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7257, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.7623, -2.8424, -3.2969, -3.3356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7898, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.7617, -2.8416, -3.2948, -3.3309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7834, device='cuda:0', dtype=torch.float64)
tensor([-1.8678, -2.7626, -2.8408, -3.2930, -3.3261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7409, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.7630, -2.8419, -3.2927, -3.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7533, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.7643, -2.8421, -3.2913, -3.3224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8619, device='cuda:0', dtype=torch.float64)
tensor([-1.8665, -2.7656, -2.8429, -3.2904, -3.3240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7560, device='cuda:0', dtype=torch.float64)
tensor([-1.8668, -2.7673, -2.8437, -3.2917, -3.3251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8187, device='cuda:0', dtype=torch.float64)
tensor([-1.8651, -2.7668, -2.8450, -3.2951, -3.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7121, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.7656, -2.8460, -3.2981, -3.3260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7595, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.7646, -2.8462, -3.2986, -3.3259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7394, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.7621, -2.8474, -3.2986, -3.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8953, device='cuda:0', dtype=torch.float64)
tensor([-1.8576, -2.7613, -2.8452, -3.2943, -3.3251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8516, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.7620, -2.8412, -3.2864, -3.3262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9173, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.7607, -2.8401, -3.2824, -3.3273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8318, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.7565, -2.8410, -3.2836, -3.3251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7620, device='cuda:0', dtype=torch.float64)
tensor([-1.8599, -2.7514, -2.8430, -3.2881, -3.3238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9146, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.7503, -2.8429, -3.2909, -3.3256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7300, device='cuda:0', dtype=torch.float64)
tensor([-1.8585, -2.7507, -2.8405, -3.2917, -3.3286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7140, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.7519, -2.8401, -3.2965, -3.3309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9608, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.7520, -2.8407, -3.3012, -3.3303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7735, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.7549, -2.8411, -3.3029, -3.3301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9182, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.7595, -2.8394, -3.2984, -3.3317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9350, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.7648, -2.8368, -3.2894, -3.3348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8929, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.7669, -2.8365, -3.2830, -3.3382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9120, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.7651, -2.8386, -3.2836, -3.3378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9943, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.7630, -2.8409, -3.2878, -3.3371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7786, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.7621, -2.8425, -3.2938, -3.3365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8454, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.7627, -2.8421, -3.2962, -3.3365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7728, device='cuda:0', dtype=torch.float64)
tensor([-1.8731, -2.7652, -2.8393, -3.2970, -3.3378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8621, device='cuda:0', dtype=torch.float64)
tensor([-1.8759, -2.7670, -2.8368, -3.2987, -3.3386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9452, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.7678, -2.8340, -3.3006, -3.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9284, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.7653, -2.8335, -3.3028, -3.3355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9075, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.7619, -2.8336, -3.2994, -3.3352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1309, device='cuda:0', dtype=torch.float64)
tensor([-1.8762, -2.7604, -2.8312, -3.2891, -3.3363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8671, device='cuda:0', dtype=torch.float64)
tensor([-1.8758, -2.7573, -2.8324, -3.2866, -3.3363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9867, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7525, -2.8359, -3.2890, -3.3355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8499, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.7503, -2.8404, -3.2919, -3.3351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9799, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.7507, -2.8440, -3.2957, -3.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8655, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.7543, -2.8440, -3.2951, -3.3328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8782, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.7589, -2.8425, -3.2920, -3.3324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8618, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.7610, -2.8422, -3.2873, -3.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9506, device='cuda:0', dtype=torch.float64)
tensor([-1.8651, -2.7632, -2.8415, -3.2841, -3.3270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9235, device='cuda:0', dtype=torch.float64)
tensor([-1.8641, -2.7639, -2.8419, -3.2846, -3.3228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9539, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.7633, -2.8413, -3.2848, -3.3205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8866, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.7625, -2.8409, -3.2864, -3.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8853, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.7625, -2.8406, -3.2899, -3.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8699, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.7603, -2.8410, -3.2926, -3.3200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9090, device='cuda:0', dtype=torch.float64)
tensor([-1.8670, -2.7597, -2.8417, -3.2938, -3.3203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7813, device='cuda:0', dtype=torch.float64)
tensor([-1.8691, -2.7600, -2.8414, -3.2937, -3.3226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9049, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.7607, -2.8415, -3.2957, -3.3250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8275, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.7629, -2.8415, -3.2975, -3.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7558, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.7669, -2.8394, -3.2946, -3.3360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8337, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.7715, -2.8354, -3.2915, -3.3400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7354, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.7746, -2.8331, -3.2906, -3.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9438, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.7767, -2.8311, -3.2932, -3.3413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9501, device='cuda:0', dtype=torch.float64)
tensor([-1.8665, -2.7770, -2.8292, -3.2973, -3.3385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9540, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.7755, -2.8287, -3.2993, -3.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9077, device='cuda:0', dtype=torch.float64)
tensor([-1.8705, -2.7750, -2.8293, -3.2977, -3.3335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9271, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.7707, -2.8316, -3.2940, -3.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9778, device='cuda:0', dtype=torch.float64)
tensor([-1.8738, -2.7687, -2.8329, -3.2868, -3.3311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7685, device='cuda:0', dtype=torch.float64)
tensor([-1.8752, -2.7658, -2.8351, -3.2780, -3.3322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8557, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.7629, -2.8377, -3.2719, -3.3317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9015, device='cuda:0', dtype=torch.float64)
tensor([-1.8696, -2.7575, -2.8416, -3.2722, -3.3289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9529, device='cuda:0', dtype=torch.float64)
tensor([-1.8631, -2.7514, -2.8457, -3.2794, -3.3247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9830, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.7472, -2.8489, -3.2867, -3.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0410, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7462, -2.8487, -3.2902, -3.3207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9176, device='cuda:0', dtype=torch.float64)
tensor([-1.8552, -2.7480, -2.8473, -3.2921, -3.3195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9252, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.7499, -2.8436, -3.2895, -3.3186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0488, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.7532, -2.8384, -3.2852, -3.3186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9708, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.7577, -2.8327, -3.2805, -3.3195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9648, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.7626, -2.8260, -3.2768, -3.3192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9832, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.7676, -2.8245, -3.2784, -3.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8656, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.7696, -2.8276, -3.2847, -3.3154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9942, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.7692, -2.8339, -3.2933, -3.3139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8374, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.7690, -2.8406, -3.3004, -3.3140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9868, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.7699, -2.8452, -3.3030, -3.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8783, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7700, -2.8485, -3.2994, -3.3180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9210, device='cuda:0', dtype=torch.float64)
tensor([-1.8692, -2.7680, -2.8515, -3.2989, -3.3190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8734, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.7679, -2.8541, -3.2972, -3.3207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8287, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.7682, -2.8540, -3.2959, -3.3201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0785, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.7709, -2.8500, -3.2954, -3.3203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0782, device='cuda:0', dtype=torch.float64)
tensor([-1.8736, -2.7705, -2.8465, -3.2966, -3.3174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0507, device='cuda:0', dtype=torch.float64)
tensor([-1.8756, -2.7686, -2.8433, -3.2964, -3.3152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0159, device='cuda:0', dtype=torch.float64)
tensor([-1.8771, -2.7632, -2.8420, -3.2935, -3.3128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9821, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.7579, -2.8384, -3.2889, -3.3159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0561, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.7565, -2.8343, -3.2819, -3.3219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9740, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.7534, -2.8343, -3.2809, -3.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8948, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.7509, -2.8366, -3.2815, -3.3313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9473, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.7500, -2.8397, -3.2816, -3.3368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9065, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.7525, -2.8427, -3.2792, -3.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8851, device='cuda:0', dtype=torch.float64)
tensor([-1.8621, -2.7574, -2.8436, -3.2769, -3.3431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8447, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.7630, -2.8423, -3.2739, -3.3440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0193, device='cuda:0', dtype=torch.float64)
tensor([-1.8633, -2.7663, -2.8404, -3.2754, -3.3401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1106, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.7705, -2.8392, -3.2821, -3.3347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9371, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.7718, -2.8382, -3.2877, -3.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0579, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.7725, -2.8347, -3.2912, -3.3274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0040, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.7712, -2.8324, -3.2960, -3.3247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9487, device='cuda:0', dtype=torch.float64)
tensor([-1.8754, -2.7672, -2.8303, -3.2976, -3.3229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8758, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.7633, -2.8307, -3.2994, -3.3215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0500, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.7560, -2.8355, -3.3062, -3.3194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9556, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.7507, -2.8381, -3.3046, -3.3193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0226, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.7494, -2.8377, -3.2997, -3.3215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8198, device='cuda:0', dtype=torch.float64)
tensor([-1.8829, -2.7508, -2.8378, -3.2968, -3.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9588, device='cuda:0', dtype=torch.float64)
tensor([-1.8803, -2.7527, -2.8392, -3.2989, -3.3236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9804, device='cuda:0', dtype=torch.float64)
tensor([-1.8767, -2.7535, -2.8411, -3.3016, -3.3210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8564, device='cuda:0', dtype=torch.float64)
tensor([-1.8764, -2.7596, -2.8394, -3.2991, -3.3182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8674, device='cuda:0', dtype=torch.float64)
tensor([-1.8788, -2.7680, -2.8351, -3.2922, -3.3163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8878, device='cuda:0', dtype=torch.float64)
tensor([-1.8807, -2.7759, -2.8312, -3.2871, -3.3139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9934, device='cuda:0', dtype=torch.float64)
tensor([-1.8806, -2.7818, -2.8307, -3.2867, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0939, device='cuda:0', dtype=torch.float64)
tensor([-1.8802, -2.7835, -2.8322, -3.2853, -3.3097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0670, device='cuda:0', dtype=torch.float64)
tensor([-1.8790, -2.7811, -2.8350, -3.2836, -3.3089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9999, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.7733, -2.8392, -3.2835, -3.3077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8530, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.7670, -2.8420, -3.2820, -3.3094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9626, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.7645, -2.8445, -3.2806, -3.3116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9324, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.7640, -2.8454, -3.2763, -3.3160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0808, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.7626, -2.8492, -3.2753, -3.3193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0029, device='cuda:0', dtype=torch.float64)
tensor([-1.8737, -2.7623, -2.8550, -3.2717, -3.3204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0168, device='cuda:0', dtype=torch.float64)
tensor([-1.8750, -2.7629, -2.8591, -3.2662, -3.3232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1883, device='cuda:0', dtype=torch.float64)
tensor([-1.8811, -2.7675, -2.8577, -3.2514, -3.3270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8953, device='cuda:0', dtype=torch.float64)
tensor([-1.8858, -2.7728, -2.8556, -3.2380, -3.3318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0752, device='cuda:0', dtype=torch.float64)
tensor([-1.8866, -2.7750, -2.8541, -3.2382, -3.3327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0504, device='cuda:0', dtype=torch.float64)
tensor([-1.8846, -2.7743, -2.8512, -3.2479, -3.3292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9847, device='cuda:0', dtype=torch.float64)
tensor([-1.8793, -2.7706, -2.8495, -3.2633, -3.3259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0824, device='cuda:0', dtype=torch.float64)
tensor([-1.8777, -2.7680, -2.8447, -3.2693, -3.3237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9050, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.7652, -2.8398, -3.2712, -3.3223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3387, device='cuda:0', dtype=torch.float64)
tensor([-1.8748, -2.7616, -2.8361, -3.2680, -3.3198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9435, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.7570, -2.8375, -3.2694, -3.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9158, device='cuda:0', dtype=torch.float64)
tensor([-1.8678, -2.7541, -2.8414, -3.2716, -3.3133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0670, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.7519, -2.8441, -3.2702, -3.3122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1549, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.7496, -2.8451, -3.2655, -3.3137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8719, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.7470, -2.8467, -3.2696, -3.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2462, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.7420, -2.8508, -3.2750, -3.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0474, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.7434, -2.8494, -3.2788, -3.3174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0155, device='cuda:0', dtype=torch.float64)
tensor([-1.8742, -2.7502, -2.8423, -3.2785, -3.3198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0428, device='cuda:0', dtype=torch.float64)
tensor([-1.8856, -2.7619, -2.8310, -3.2762, -3.3227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2079, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.7727, -2.8229, -3.2764, -3.3248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0507, device='cuda:0', dtype=torch.float64)
tensor([-1.8981, -2.7813, -2.8173, -3.2780, -3.3231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0241, device='cuda:0', dtype=torch.float64)
tensor([-1.8986, -2.7886, -2.8145, -3.2741, -3.3223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1916, device='cuda:0', dtype=torch.float64)
tensor([-1.8984, -2.7956, -2.8110, -3.2624, -3.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0144, device='cuda:0', dtype=torch.float64)
tensor([-1.8977, -2.8043, -2.8108, -3.2583, -3.3278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2104, device='cuda:0', dtype=torch.float64)
tensor([-1.8911, -2.8017, -2.8181, -3.2544, -3.3233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0159, device='cuda:0', dtype=torch.float64)
tensor([-1.8856, -2.7972, -2.8262, -3.2573, -3.3186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1698, device='cuda:0', dtype=torch.float64)
tensor([-1.8783, -2.7892, -2.8365, -3.2683, -3.3142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1380, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.7791, -2.8444, -3.2793, -3.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0566, device='cuda:0', dtype=torch.float64)
tensor([-1.8693, -2.7707, -2.8478, -3.2884, -3.3090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1750, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.7619, -2.8496, -3.2976, -3.3082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0294, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.7571, -2.8497, -3.3009, -3.3057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0366, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.7558, -2.8477, -3.3031, -3.3031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9857, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.7596, -2.8437, -3.2977, -3.3045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1028, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.7676, -2.8383, -3.2870, -3.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1238, device='cuda:0', dtype=torch.float64)
tensor([-1.8826, -2.7705, -2.8363, -3.2809, -3.3139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0973, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.7697, -2.8368, -3.2803, -3.3138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1798, device='cuda:0', dtype=torch.float64)
tensor([-1.8876, -2.7695, -2.8355, -3.2831, -3.3156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0587, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7732, -2.8310, -3.2777, -3.3189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0321, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.7787, -2.8233, -3.2689, -3.3218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9323, device='cuda:0', dtype=torch.float64)
tensor([-1.9032, -2.7803, -2.8181, -3.2659, -3.3244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1066, device='cuda:0', dtype=torch.float64)
tensor([-1.9009, -2.7731, -2.8178, -3.2708, -3.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9736, device='cuda:0', dtype=torch.float64)
tensor([-1.8991, -2.7654, -2.8221, -3.2748, -3.3236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1043, device='cuda:0', dtype=torch.float64)
tensor([-1.8990, -2.7618, -2.8256, -3.2733, -3.3269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9012, device='cuda:0', dtype=torch.float64)
tensor([-1.8957, -2.7580, -2.8308, -3.2798, -3.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2434, device='cuda:0', dtype=torch.float64)
tensor([-1.8897, -2.7505, -2.8377, -3.2926, -3.3269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8580, device='cuda:0', dtype=torch.float64)
tensor([-1.8858, -2.7465, -2.8407, -3.3039, -3.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0487, device='cuda:0', dtype=torch.float64)
tensor([-1.8826, -2.7440, -2.8442, -3.3120, -3.3259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5381, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.7480, -2.8427, -3.3152, -3.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0415, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.7494, -2.8410, -3.3111, -3.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3511, device='cuda:0', dtype=torch.float64)
tensor([-1.8859, -2.7533, -2.8342, -3.3050, -3.3228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3187, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.7608, -2.8239, -3.2935, -3.3233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1192, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.7657, -2.8144, -3.2807, -3.3232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1205, device='cuda:0', dtype=torch.float64)
tensor([-1.8901, -2.7640, -2.8139, -3.2788, -3.3197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1613, device='cuda:0', dtype=torch.float64)
tensor([-1.8821, -2.7578, -2.8187, -3.2826, -3.3132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9286, device='cuda:0', dtype=torch.float64)
tensor([-1.8754, -2.7541, -2.8274, -3.2884, -3.3047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0814, device='cuda:0', dtype=torch.float64)
tensor([-1.8711, -2.7543, -2.8389, -3.2924, -3.2990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3927, device='cuda:0', dtype=torch.float64)
tensor([-1.8723, -2.7585, -2.8451, -3.2848, -3.2993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2143, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.7643, -2.8514, -3.2786, -3.3016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2335, device='cuda:0', dtype=torch.float64)
tensor([-1.8720, -2.7674, -2.8582, -3.2738, -3.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0533, device='cuda:0', dtype=torch.float64)
tensor([-1.8731, -2.7727, -2.8603, -3.2731, -3.3068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0159, device='cuda:0', dtype=torch.float64)
tensor([-1.8788, -2.7775, -2.8585, -3.2711, -3.3128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.7796, -2.8561, -3.2696, -3.3203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0690, device='cuda:0', dtype=torch.float64)
tensor([-1.8942, -2.7817, -2.8532, -3.2729, -3.3257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0402, device='cuda:0', dtype=torch.float64)
tensor([-1.9015, -2.7810, -2.8503, -3.2751, -3.3280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2514, device='cuda:0', dtype=torch.float64)
tensor([-1.9043, -2.7762, -2.8516, -3.2850, -3.3269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2227, device='cuda:0', dtype=torch.float64)
tensor([-1.9079, -2.7701, -2.8487, -3.2917, -3.3259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1682, device='cuda:0', dtype=torch.float64)
tensor([-1.9094, -2.7637, -2.8448, -3.2900, -3.3250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0878, device='cuda:0', dtype=torch.float64)
tensor([-1.9099, -2.7622, -2.8391, -3.2806, -3.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0414, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.7605, -2.8361, -3.2719, -3.3259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2817, device='cuda:0', dtype=torch.float64)
tensor([-1.8965, -2.7567, -2.8409, -3.2685, -3.3247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4123, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.7536, -2.8525, -3.2746, -3.3250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2097, device='cuda:0', dtype=torch.float64)
tensor([-1.8782, -2.7554, -2.8609, -3.2740, -3.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1735, device='cuda:0', dtype=torch.float64)
tensor([-1.8767, -2.7568, -2.8682, -3.2716, -3.3246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0580, device='cuda:0', dtype=torch.float64)
tensor([-1.8790, -2.7620, -2.8711, -3.2723, -3.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3396, device='cuda:0', dtype=torch.float64)
tensor([-1.8817, -2.7655, -2.8724, -3.2747, -3.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0191, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.7732, -2.8695, -3.2749, -3.3350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0982, device='cuda:0', dtype=torch.float64)
tensor([-1.8963, -2.7811, -2.8664, -3.2747, -3.3399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1074, device='cuda:0', dtype=torch.float64)
tensor([-1.9034, -2.7885, -2.8610, -3.2665, -3.3447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5023, device='cuda:0', dtype=torch.float64)
tensor([-1.9046, -2.7914, -2.8556, -3.2716, -3.3450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0754, device='cuda:0', dtype=torch.float64)
tensor([-1.9024, -2.7906, -2.8494, -3.2805, -3.3415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9812, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.7856, -2.8461, -3.2951, -3.3353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8629, device='cuda:0', dtype=torch.float64)
tensor([-1.8857, -2.7784, -2.8454, -3.3037, -3.3280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0371, device='cuda:0', dtype=torch.float64)
tensor([-1.8771, -2.7693, -2.8465, -3.3070, -3.3236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0860, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.7640, -2.8449, -3.3029, -3.3221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4341, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.7563, -2.8437, -3.3075, -3.3217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9765, device='cuda:0', dtype=torch.float64)
tensor([-1.8742, -2.7518, -2.8421, -3.3049, -3.3209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1561, device='cuda:0', dtype=torch.float64)
tensor([-1.8783, -2.7496, -2.8426, -3.3028, -3.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1100, device='cuda:0', dtype=torch.float64)
tensor([-1.8810, -2.7453, -2.8449, -3.3004, -3.3154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1701, device='cuda:0', dtype=torch.float64)
tensor([-1.8858, -2.7443, -2.8464, -3.2970, -3.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1521, device='cuda:0', dtype=torch.float64)
tensor([-1.8909, -2.7438, -2.8481, -3.2940, -3.3072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1983, device='cuda:0', dtype=torch.float64)
tensor([-1.8914, -2.7423, -2.8505, -3.2935, -3.3050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3706, device='cuda:0', dtype=torch.float64)
tensor([-1.8934, -2.7440, -2.8483, -3.2909, -3.3058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3239, device='cuda:0', dtype=torch.float64)
tensor([-1.8940, -2.7483, -2.8437, -3.2963, -3.3069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3071, device='cuda:0', dtype=torch.float64)
tensor([-1.8919, -2.7485, -2.8414, -3.3022, -3.3055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1655, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -2.7515, -2.8375, -3.3053, -3.3073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1154, device='cuda:0', dtype=torch.float64)
tensor([-1.8952, -2.7601, -2.8304, -3.3024, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2663, device='cuda:0', dtype=torch.float64)
tensor([-1.9071, -2.7734, -2.8181, -3.2917, -3.3183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0071, device='cuda:0', dtype=torch.float64)
tensor([-1.9158, -2.7831, -2.8124, -3.2873, -3.3268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0801, device='cuda:0', dtype=torch.float64)
tensor([-1.9182, -2.7897, -2.8118, -3.2853, -3.3329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1226, device='cuda:0', dtype=torch.float64)
tensor([-1.9161, -2.7913, -2.8174, -3.2901, -3.3364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2833, device='cuda:0', dtype=torch.float64)
tensor([-1.9096, -2.7890, -2.8220, -3.2841, -3.3383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1950, device='cuda:0', dtype=torch.float64)
tensor([-1.9037, -2.7894, -2.8264, -3.2773, -3.3407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3792, device='cuda:0', dtype=torch.float64)
tensor([-1.8940, -2.7855, -2.8309, -3.2789, -3.3415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3013, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.7755, -2.8364, -3.2805, -3.3390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4066, device='cuda:0', dtype=torch.float64)
tensor([-1.8761, -2.7760, -2.8349, -3.2808, -3.3399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2158, device='cuda:0', dtype=torch.float64)
tensor([-1.8787, -2.7847, -2.8281, -3.2777, -3.3397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4587, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.7972, -2.8227, -3.2750, -3.3404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4919, device='cuda:0', dtype=torch.float64)
tensor([-1.8864, -2.7993, -2.8272, -3.2783, -3.3349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5579, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.7872, -2.8425, -3.2917, -3.3231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4752, device='cuda:0', dtype=torch.float64)
tensor([-1.8701, -2.7746, -2.8566, -3.2989, -3.3140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4318, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.7694, -2.8636, -3.2945, -3.3046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3190, device='cuda:0', dtype=torch.float64)
tensor([-1.8743, -2.7703, -2.8649, -3.2933, -3.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5190, device='cuda:0', dtype=torch.float64)
tensor([-1.8845, -2.7716, -2.8592, -3.2923, -3.3026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6413, device='cuda:0', dtype=torch.float64)
tensor([-1.8927, -2.7651, -2.8530, -3.2897, -3.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2707, device='cuda:0', dtype=torch.float64)
tensor([-1.8988, -2.7638, -2.8458, -3.3020, -3.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3944, device='cuda:0', dtype=torch.float64)
tensor([-1.9067, -2.7632, -2.8314, -3.2923, -3.3057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3423, device='cuda:0', dtype=torch.float64)
tensor([-1.9122, -2.7622, -2.8215, -3.2902, -3.3166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3820, device='cuda:0', dtype=torch.float64)
tensor([-1.9112, -2.7568, -2.8194, -3.2981, -3.3215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4110, device='cuda:0', dtype=torch.float64)
tensor([-1.9007, -2.7458, -2.8279, -3.3180, -3.3205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2379, device='cuda:0', dtype=torch.float64)
tensor([-1.8961, -2.7425, -2.8340, -3.3340, -3.3208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5445, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.7420, -2.8316, -3.3163, -3.3182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3008, device='cuda:0', dtype=torch.float64)
tensor([-1.8974, -2.7488, -2.8299, -3.3096, -3.3166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1622, device='cuda:0', dtype=torch.float64)
tensor([-1.8964, -2.7528, -2.8329, -3.3036, -3.3109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6847, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.7512, -2.8459, -3.3159, -3.3006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3646, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.7550, -2.8538, -3.3211, -3.2970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6776, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.7620, -2.8502, -3.2968, -3.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0179, device='cuda:0', dtype=torch.float64)
tensor([-1.9025, -2.7723, -2.8467, -3.2892, -3.2998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4437, device='cuda:0', dtype=torch.float64)
tensor([-1.9068, -2.7770, -2.8463, -3.2858, -3.3030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5079, device='cuda:0', dtype=torch.float64)
tensor([-1.9085, -2.7811, -2.8451, -3.2860, -3.3069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1554, device='cuda:0', dtype=torch.float64)
tensor([-1.9159, -2.7895, -2.8392, -3.2864, -3.3129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5529, device='cuda:0', dtype=torch.float64)
tensor([-1.9254, -2.7928, -2.8284, -3.2672, -3.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2960, device='cuda:0', dtype=torch.float64)
tensor([-1.9317, -2.7991, -2.8217, -3.2550, -3.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4914, device='cuda:0', dtype=torch.float64)
tensor([-1.9258, -2.7918, -2.8238, -3.2546, -3.3255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4399, device='cuda:0', dtype=torch.float64)
tensor([-1.9107, -2.7774, -2.8331, -3.2702, -3.3167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1967, device='cuda:0', dtype=torch.float64)
tensor([-1.8976, -2.7666, -2.8416, -3.2889, -3.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4206, device='cuda:0', dtype=torch.float64)
tensor([-1.8891, -2.7619, -2.8448, -3.2947, -3.3072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4013, device='cuda:0', dtype=torch.float64)
tensor([-1.8855, -2.7682, -2.8430, -3.2987, -3.3060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3148, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.7720, -2.8446, -3.3013, -3.3044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2638, device='cuda:0', dtype=torch.float64)
tensor([-1.8728, -2.7754, -2.8500, -3.3088, -3.3007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1813, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.7796, -2.8540, -3.3156, -3.2993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3844, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.7858, -2.8496, -3.3061, -3.2999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2593, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.7988, -2.8443, -3.2962, -3.3052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1951, device='cuda:0', dtype=torch.float64)
tensor([-1.8782, -2.8060, -2.8405, -3.2879, -3.3084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6414, device='cuda:0', dtype=torch.float64)
tensor([-1.8812, -2.8132, -2.8401, -3.2899, -3.3141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4344, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.8105, -2.8465, -3.2869, -3.3191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2681, device='cuda:0', dtype=torch.float64)
tensor([-1.8869, -2.8088, -2.8498, -3.2720, -3.3280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4982, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.8072, -2.8531, -3.2555, -3.3361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2568, device='cuda:0', dtype=torch.float64)
tensor([-1.8990, -2.8033, -2.8577, -3.2467, -3.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1099, device='cuda:0', dtype=torch.float64)
tensor([-1.9009, -2.7941, -2.8608, -3.2498, -3.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1209, device='cuda:0', dtype=torch.float64)
tensor([-1.8982, -2.7815, -2.8639, -3.2595, -3.3312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5114, device='cuda:0', dtype=torch.float64)
tensor([-1.8944, -2.7702, -2.8637, -3.2754, -3.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9470, device='cuda:0', dtype=torch.float64)
tensor([-1.8914, -2.7604, -2.8635, -3.2953, -3.3189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2971, device='cuda:0', dtype=torch.float64)
tensor([-1.8879, -2.7504, -2.8647, -3.3083, -3.3167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3488, device='cuda:0', dtype=torch.float64)
tensor([-1.8905, -2.7496, -2.8624, -3.3107, -3.3203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4256, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.7562, -2.8510, -3.2995, -3.3286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1626, device='cuda:0', dtype=torch.float64)
tensor([-1.9113, -2.7676, -2.8399, -3.2905, -3.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7615, device='cuda:0', dtype=torch.float64)
tensor([-1.9118, -2.7640, -2.8362, -3.2904, -3.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4742, device='cuda:0', dtype=torch.float64)
tensor([-1.9158, -2.7604, -2.8341, -3.2952, -3.3468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1291, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -2.7530, -2.8339, -3.3019, -3.3514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5635, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -2.7541, -2.8339, -3.3022, -3.3523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2998, device='cuda:0', dtype=torch.float64)
tensor([-1.9311, -2.7599, -2.8329, -3.2941, -3.3565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2012, device='cuda:0', dtype=torch.float64)
tensor([-1.9340, -2.7650, -2.8324, -3.2859, -3.3571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4947, device='cuda:0', dtype=torch.float64)
tensor([-1.9255, -2.7558, -2.8408, -3.2783, -3.3455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2923, device='cuda:0', dtype=torch.float64)
tensor([-1.9143, -2.7475, -2.8562, -3.2915, -3.3350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3732, device='cuda:0', dtype=torch.float64)
tensor([-1.9087, -2.7491, -2.8611, -3.2860, -3.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4169, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.7557, -2.8569, -3.2815, -3.3306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1341, device='cuda:0', dtype=torch.float64)
tensor([-1.9069, -2.7629, -2.8494, -3.2836, -3.3338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5595, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.7591, -2.8429, -3.2803, -3.3293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4007, device='cuda:0', dtype=torch.float64)
tensor([-1.8925, -2.7561, -2.8423, -3.2875, -3.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4876, device='cuda:0', dtype=torch.float64)
tensor([-1.8911, -2.7591, -2.8387, -3.2918, -3.3197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6890, device='cuda:0', dtype=torch.float64)
tensor([-1.8968, -2.7678, -2.8252, -3.2741, -3.3181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2688, device='cuda:0', dtype=torch.float64)
tensor([-1.9023, -2.7786, -2.8163, -3.2599, -3.3217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2264, device='cuda:0', dtype=torch.float64)
tensor([-1.8966, -2.7799, -2.8180, -3.2549, -3.3208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5759, device='cuda:0', dtype=torch.float64)
tensor([-1.8879, -2.7817, -2.8268, -3.2551, -3.3180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2408, device='cuda:0', dtype=torch.float64)
tensor([-1.8836, -2.7848, -2.8366, -3.2520, -3.3174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7940, device='cuda:0', dtype=torch.float64)
tensor([-1.8853, -2.7885, -2.8429, -3.2380, -3.3239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6930, device='cuda:0', dtype=torch.float64)
tensor([-1.8925, -2.7935, -2.8474, -3.2224, -3.3347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6171, device='cuda:0', dtype=torch.float64)
tensor([-1.9039, -2.8017, -2.8499, -3.2235, -3.3477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6343, device='cuda:0', dtype=torch.float64)
tensor([-1.9084, -2.8007, -2.8549, -3.2418, -3.3479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4758, device='cuda:0', dtype=torch.float64)
tensor([-1.9096, -2.7928, -2.8581, -3.2733, -3.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5299, device='cuda:0', dtype=torch.float64)
tensor([-1.9107, -2.7876, -2.8558, -3.2969, -3.3342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4721, device='cuda:0', dtype=torch.float64)
tensor([-1.9109, -2.7861, -2.8541, -3.3025, -3.3329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6115, device='cuda:0', dtype=torch.float64)
tensor([-1.9135, -2.7812, -2.8528, -3.2939, -3.3338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4548, device='cuda:0', dtype=torch.float64)
tensor([-1.9161, -2.7719, -2.8561, -3.2842, -3.3342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8080, device='cuda:0', dtype=torch.float64)
tensor([-1.9159, -2.7558, -2.8623, -3.2897, -3.3294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5482, device='cuda:0', dtype=torch.float64)
tensor([-1.9115, -2.7393, -2.8680, -3.3048, -3.3230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4365, device='cuda:0', dtype=torch.float64)
tensor([-1.9107, -2.7281, -2.8695, -3.3133, -3.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9953, device='cuda:0', dtype=torch.float64)
tensor([-1.9122, -2.7234, -2.8672, -3.3178, -3.3248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2271, device='cuda:0', dtype=torch.float64)
tensor([-1.9091, -2.7221, -2.8687, -3.3194, -3.3276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5337, device='cuda:0', dtype=torch.float64)
tensor([-1.9075, -2.7208, -2.8731, -3.3134, -3.3257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1829, device='cuda:0', dtype=torch.float64)
tensor([-1.9028, -2.7240, -2.8765, -3.3072, -3.3222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2928, device='cuda:0', dtype=torch.float64)
tensor([-1.9025, -2.7372, -2.8776, -3.3070, -3.3171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4745, device='cuda:0', dtype=torch.float64)
tensor([-1.9085, -2.7575, -2.8740, -3.3066, -3.3133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1096, device='cuda:0', dtype=torch.float64)
tensor([-1.9120, -2.7779, -2.8686, -3.3246, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6725, device='cuda:0', dtype=torch.float64)
tensor([-1.9128, -2.7882, -2.8633, -3.3226, -3.2998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1191, device='cuda:0', dtype=torch.float64)
tensor([-1.9098, -2.7944, -2.8628, -3.3282, -3.2918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3284, device='cuda:0', dtype=torch.float64)
tensor([-1.9101, -2.7998, -2.8594, -3.3260, -3.2909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3364, device='cuda:0', dtype=torch.float64)
tensor([-1.9158, -2.8046, -2.8548, -3.3197, -3.2934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1891, device='cuda:0', dtype=torch.float64)
tensor([-1.9206, -2.8062, -2.8549, -3.3202, -3.2984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4873, device='cuda:0', dtype=torch.float64)
tensor([-1.9184, -2.8008, -2.8628, -3.3038, -3.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6513, device='cuda:0', dtype=torch.float64)
tensor([-1.9150, -2.7960, -2.8679, -3.3043, -3.2891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2283, device='cuda:0', dtype=torch.float64)
tensor([-1.9126, -2.7938, -2.8687, -3.2978, -3.2898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6406, device='cuda:0', dtype=torch.float64)
tensor([-1.9168, -2.8007, -2.8574, -3.2849, -3.2975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4026, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -2.8130, -2.8464, -3.2850, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5162, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.8181, -2.8368, -3.2772, -3.3166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4815, device='cuda:0', dtype=torch.float64)
tensor([-1.9178, -2.8209, -2.8331, -3.2832, -3.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4752, device='cuda:0', dtype=torch.float64)
tensor([-1.9189, -2.8301, -2.8215, -3.2866, -3.3248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5213, device='cuda:0', dtype=torch.float64)
tensor([-1.9209, -2.8437, -2.8070, -3.2840, -3.3355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2498, device='cuda:0', dtype=torch.float64)
tensor([-1.9162, -2.8443, -2.8007, -3.3039, -3.3379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6520, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.8243, -2.8045, -3.3189, -3.3230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5101, device='cuda:0', dtype=torch.float64)
tensor([-1.8975, -2.8077, -2.8113, -3.3440, -3.3145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6303, device='cuda:0', dtype=torch.float64)
tensor([-1.8948, -2.7995, -2.8120, -3.3472, -3.3095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5635, device='cuda:0', dtype=torch.float64)
tensor([-1.9007, -2.7967, -2.8050, -3.3436, -3.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5187, device='cuda:0', dtype=torch.float64)
tensor([-1.9069, -2.7916, -2.8087, -3.3418, -3.3152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9287, device='cuda:0', dtype=torch.float64)
tensor([-1.9052, -2.7738, -2.8232, -3.3463, -3.3078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4131, device='cuda:0', dtype=torch.float64)
tensor([-1.9090, -2.7663, -2.8342, -3.3420, -3.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5226, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.7661, -2.8353, -3.3038, -3.3217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5192, device='cuda:0', dtype=torch.float64)
tensor([-1.9361, -2.7728, -2.8359, -3.2784, -3.3349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5607, device='cuda:0', dtype=torch.float64)
tensor([-1.9431, -2.7763, -2.8395, -3.2689, -3.3470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4646, device='cuda:0', dtype=torch.float64)
tensor([-1.9433, -2.7778, -2.8444, -3.2711, -3.3542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4344, device='cuda:0', dtype=torch.float64)
tensor([-1.9434, -2.7856, -2.8453, -3.2694, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3522, device='cuda:0', dtype=torch.float64)
tensor([-1.9392, -2.7954, -2.8437, -3.2709, -3.3667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2067, device='cuda:0', dtype=torch.float64)
tensor([-1.9276, -2.8041, -2.8436, -3.2793, -3.3708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4557, device='cuda:0', dtype=torch.float64)
tensor([-1.9147, -2.8053, -2.8499, -3.2843, -3.3685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2724, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.8040, -2.8610, -3.2938, -3.3645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3169, device='cuda:0', dtype=torch.float64)
tensor([-1.8893, -2.7978, -2.8733, -3.2993, -3.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5931, device='cuda:0', dtype=torch.float64)
tensor([-1.8870, -2.7934, -2.8800, -3.2902, -3.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4952, device='cuda:0', dtype=torch.float64)
tensor([-1.8906, -2.7881, -2.8902, -3.2778, -3.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1360, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.7761, -2.9014, -3.2742, -3.3462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2952, device='cuda:0', dtype=torch.float64)
tensor([-1.8987, -2.7627, -2.9100, -3.2764, -3.3342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5341, device='cuda:0', dtype=torch.float64)
tensor([-1.9018, -2.7556, -2.9131, -3.2796, -3.3261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4484, device='cuda:0', dtype=torch.float64)
tensor([-1.9092, -2.7570, -2.9044, -3.2720, -3.3170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2633, device='cuda:0', dtype=torch.float64)
tensor([-1.9182, -2.7711, -2.8897, -3.2745, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5146, device='cuda:0', dtype=torch.float64)
tensor([-1.9251, -2.7839, -2.8805, -3.2874, -3.3047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4665, device='cuda:0', dtype=torch.float64)
tensor([-1.9233, -2.7904, -2.8745, -3.2899, -3.2985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6795, device='cuda:0', dtype=torch.float64)
tensor([-1.9310, -2.7993, -2.8644, -3.2819, -3.2982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2231, device='cuda:0', dtype=torch.float64)
tensor([-1.9364, -2.8032, -2.8599, -3.2714, -3.3007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3992, device='cuda:0', dtype=torch.float64)
tensor([-1.9421, -2.8108, -2.8553, -3.2628, -3.3065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3344, device='cuda:0', dtype=torch.float64)
tensor([-1.9422, -2.8093, -2.8547, -3.2605, -3.3070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3374, device='cuda:0', dtype=torch.float64)
tensor([-1.9346, -2.7978, -2.8563, -3.2665, -3.3038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3368, device='cuda:0', dtype=torch.float64)
tensor([-1.9277, -2.7858, -2.8566, -3.2691, -3.3068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5179, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -2.7750, -2.8579, -3.2817, -3.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3583, device='cuda:0', dtype=torch.float64)
tensor([-1.9107, -2.7704, -2.8611, -3.3000, -3.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4502, device='cuda:0', dtype=torch.float64)
tensor([-1.9058, -2.7699, -2.8642, -3.2962, -3.3155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5109, device='cuda:0', dtype=torch.float64)
tensor([-1.9135, -2.7818, -2.8607, -3.2811, -3.3226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4156, device='cuda:0', dtype=torch.float64)
tensor([-1.9224, -2.7943, -2.8547, -3.2695, -3.3257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2020, device='cuda:0', dtype=torch.float64)
tensor([-1.9264, -2.8079, -2.8507, -3.2627, -3.3275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4266, device='cuda:0', dtype=torch.float64)
tensor([-1.9272, -2.8162, -2.8497, -3.2545, -3.3267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6767, device='cuda:0', dtype=torch.float64)
tensor([-1.9204, -2.8179, -2.8550, -3.2464, -3.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6491, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.8168, -2.8660, -3.2445, -3.3137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4052, device='cuda:0', dtype=torch.float64)
tensor([-1.9157, -2.8134, -2.8666, -3.2318, -3.3117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4238, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.8099, -2.8705, -3.2293, -3.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3753, device='cuda:0', dtype=torch.float64)
tensor([-1.9266, -2.8027, -2.8771, -3.2348, -3.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2786, device='cuda:0', dtype=torch.float64)
tensor([-1.9251, -2.7868, -2.8869, -3.2565, -3.3062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3917, device='cuda:0', dtype=torch.float64)
tensor([-1.9201, -2.7718, -2.8974, -3.2834, -3.3054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7352, device='cuda:0', dtype=torch.float64)
tensor([-1.9180, -2.7618, -2.8950, -3.2972, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6888, device='cuda:0', dtype=torch.float64)
tensor([-1.9194, -2.7537, -2.8906, -3.3041, -3.3213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4984, device='cuda:0', dtype=torch.float64)
tensor([-1.9160, -2.7469, -2.8882, -3.3127, -3.3322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5154, device='cuda:0', dtype=torch.float64)
tensor([-1.9179, -2.7528, -2.8820, -3.3125, -3.3403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5887, device='cuda:0', dtype=torch.float64)
tensor([-1.9265, -2.7667, -2.8757, -3.3066, -3.3493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2671, device='cuda:0', dtype=torch.float64)
tensor([-1.9347, -2.7792, -2.8757, -3.3038, -3.3586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2611, device='cuda:0', dtype=torch.float64)
tensor([-1.9461, -2.7909, -2.8738, -3.2941, -3.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4106, device='cuda:0', dtype=torch.float64)
tensor([-1.9563, -2.7984, -2.8702, -3.2778, -3.3670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4920, device='cuda:0', dtype=torch.float64)
tensor([-1.9613, -2.7965, -2.8697, -3.2664, -3.3692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3555, device='cuda:0', dtype=torch.float64)
tensor([-1.9573, -2.7847, -2.8710, -3.2644, -3.3645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3256, device='cuda:0', dtype=torch.float64)
tensor([-1.9505, -2.7753, -2.8715, -3.2646, -3.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6344, device='cuda:0', dtype=torch.float64)
tensor([-1.9364, -2.7635, -2.8741, -3.2726, -3.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3673, device='cuda:0', dtype=torch.float64)
tensor([-1.9235, -2.7535, -2.8752, -3.2878, -3.3304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0513, device='cuda:0', dtype=torch.float64)
tensor([-1.9170, -2.7486, -2.8706, -3.2923, -3.3183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4024, device='cuda:0', dtype=torch.float64)
tensor([-1.9167, -2.7512, -2.8633, -3.3018, -3.3087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5034, device='cuda:0', dtype=torch.float64)
tensor([-1.9125, -2.7464, -2.8646, -3.3126, -3.3002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3825, device='cuda:0', dtype=torch.float64)
tensor([-1.9137, -2.7520, -2.8626, -3.3197, -3.2940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4279, device='cuda:0', dtype=torch.float64)
tensor([-1.9183, -2.7655, -2.8602, -3.3189, -3.2934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5216, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.7843, -2.8618, -3.3193, -3.2911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4915, device='cuda:0', dtype=torch.float64)
tensor([-1.9312, -2.8019, -2.8632, -3.3123, -3.2930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5519, device='cuda:0', dtype=torch.float64)
tensor([-1.9353, -2.8186, -2.8679, -3.2982, -3.2979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2258, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.8286, -2.8752, -3.2948, -3.3027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4158, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.8352, -2.8829, -3.2969, -3.3032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4390, device='cuda:0', dtype=torch.float64)
tensor([-1.9243, -2.8310, -2.8877, -3.2918, -3.3026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5394, device='cuda:0', dtype=torch.float64)
tensor([-1.9240, -2.8236, -2.8832, -3.2847, -3.3035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2924, device='cuda:0', dtype=torch.float64)
tensor([-1.9275, -2.8179, -2.8725, -3.2749, -3.3046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3981, device='cuda:0', dtype=torch.float64)
tensor([-1.9308, -2.8081, -2.8635, -3.2668, -3.3056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6178, device='cuda:0', dtype=torch.float64)
tensor([-1.9347, -2.8029, -2.8516, -3.2562, -3.3084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9055, device='cuda:0', dtype=torch.float64)
tensor([-1.9366, -2.7989, -2.8398, -3.2444, -3.3093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6578, device='cuda:0', dtype=torch.float64)
tensor([-1.9339, -2.7915, -2.8372, -3.2520, -3.3044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5759, device='cuda:0', dtype=torch.float64)
tensor([-1.9363, -2.7951, -2.8323, -3.2644, -3.2986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8354, device='cuda:0', dtype=torch.float64)
tensor([-1.9359, -2.7969, -2.8295, -3.2784, -3.2853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4403, device='cuda:0', dtype=torch.float64)
tensor([-1.9324, -2.7973, -2.8363, -3.2943, -3.2751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5605, device='cuda:0', dtype=torch.float64)
tensor([-1.9294, -2.7889, -2.8439, -3.3088, -3.2698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4769, device='cuda:0', dtype=torch.float64)
tensor([-1.9301, -2.7798, -2.8497, -3.3037, -3.2688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8215, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.7771, -2.8435, -3.2818, -3.2812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7072, device='cuda:0', dtype=torch.float64)
tensor([-1.9442, -2.7766, -2.8442, -3.2657, -3.3009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5513, device='cuda:0', dtype=torch.float64)
tensor([-1.9399, -2.7641, -2.8521, -3.2517, -3.3106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8803, device='cuda:0', dtype=torch.float64)
tensor([-1.9284, -2.7547, -2.8624, -3.2555, -3.3092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6701, device='cuda:0', dtype=torch.float64)
tensor([-1.9146, -2.7496, -2.8718, -3.2639, -3.3100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4699, device='cuda:0', dtype=torch.float64)
tensor([-1.9091, -2.7577, -2.8723, -3.2642, -3.3164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7170, device='cuda:0', dtype=torch.float64)
tensor([-1.9195, -2.7806, -2.8678, -3.2791, -3.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0535, device='cuda:0', dtype=torch.float64)
tensor([-1.9305, -2.8034, -2.8689, -3.2930, -3.3237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7049, device='cuda:0', dtype=torch.float64)
tensor([-1.9348, -2.8235, -2.8789, -3.2912, -3.3161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3536, device='cuda:0', dtype=torch.float64)
tensor([-1.9417, -2.8424, -2.8884, -3.3019, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9931, device='cuda:0', dtype=torch.float64)
tensor([-1.9513, -2.8482, -2.8819, -3.2907, -3.3114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4670, device='cuda:0', dtype=torch.float64)
tensor([-1.9499, -2.8491, -2.8734, -3.2825, -3.3171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5942, device='cuda:0', dtype=torch.float64)
tensor([-1.9398, -2.8441, -2.8714, -3.2828, -3.3243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7473, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.8246, -2.8804, -3.3043, -3.3189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4896, device='cuda:0', dtype=torch.float64)
tensor([-1.8982, -2.8087, -2.8885, -3.3257, -3.3158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9545, device='cuda:0', dtype=torch.float64)
tensor([-1.8930, -2.8009, -2.8974, -3.3385, -3.3192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5510, device='cuda:0', dtype=torch.float64)
tensor([-1.9045, -2.8023, -2.8954, -3.3250, -3.3297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4214, device='cuda:0', dtype=torch.float64)
tensor([-1.9271, -2.8109, -2.8917, -3.3059, -3.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6080, device='cuda:0', dtype=torch.float64)
tensor([-1.9493, -2.8194, -2.8921, -3.2953, -3.3581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7058, device='cuda:0', dtype=torch.float64)
tensor([-1.9611, -2.8193, -2.8915, -3.2806, -3.3614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7739, device='cuda:0', dtype=torch.float64)
tensor([-1.9685, -2.8175, -2.8948, -3.2764, -3.3612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9860, device='cuda:0', dtype=torch.float64)
tensor([-1.9791, -2.8214, -2.8887, -3.2571, -3.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7935, device='cuda:0', dtype=torch.float64)
tensor([-1.9931, -2.8278, -2.8785, -3.2262, -3.3602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7062, device='cuda:0', dtype=torch.float64)
tensor([-1.9958, -2.8304, -2.8755, -3.2198, -3.3546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1214, device='cuda:0', dtype=torch.float64)
tensor([-1.9841, -2.8097, -2.8828, -3.2374, -3.3380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5943, device='cuda:0', dtype=torch.float64)
tensor([-1.9657, -2.7874, -2.8974, -3.2746, -3.3280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2938, device='cuda:0', dtype=torch.float64)
tensor([-1.9594, -2.7698, -2.8942, -3.2672, -3.3268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3510, device='cuda:0', dtype=torch.float64)
tensor([-1.9529, -2.7626, -2.8865, -3.2668, -3.3261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4963, device='cuda:0', dtype=torch.float64)
tensor([-1.9343, -2.7489, -2.8881, -3.2918, -3.3164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1548, device='cuda:0', dtype=torch.float64)
tensor([-1.9082, -2.7242, -2.9004, -3.3264, -3.2944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2072, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.7167, -2.9182, -3.3733, -3.2902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1580, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.7330, -2.9129, -3.3689, -3.2904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1205, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.7677, -2.8952, -3.3530, -3.2975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5108, device='cuda:0', dtype=torch.float64)
tensor([-1.9198, -2.8104, -2.8812, -3.3317, -3.3077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8025, device='cuda:0', dtype=torch.float64)
tensor([-1.9280, -2.8429, -2.8797, -3.3157, -3.3140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7503, device='cuda:0', dtype=torch.float64)
tensor([-1.9384, -2.8630, -2.8832, -3.3123, -3.3193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8655, device='cuda:0', dtype=torch.float64)
tensor([-1.9528, -2.8759, -2.8816, -3.3006, -3.3296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4706, device='cuda:0', dtype=torch.float64)
tensor([-1.9698, -2.8751, -2.8773, -3.2793, -3.3467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3244, device='cuda:0', dtype=torch.float64)
tensor([-1.9893, -2.8724, -2.8672, -3.2635, -3.3658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4456, device='cuda:0', dtype=torch.float64)
tensor([-1.9988, -2.8593, -2.8611, -3.2531, -3.3728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9836, device='cuda:0', dtype=torch.float64)
tensor([-1.9918, -2.8315, -2.8626, -3.2672, -3.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5125, device='cuda:0', dtype=torch.float64)
tensor([-1.9872, -2.8147, -2.8537, -3.2703, -3.3708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9369, device='cuda:0', dtype=torch.float64)
tensor([-1.9867, -2.8083, -2.8323, -3.2593, -3.3783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6598, device='cuda:0', dtype=torch.float64)
tensor([-1.9880, -2.8175, -2.8192, -3.2619, -3.3846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4493, device='cuda:0', dtype=torch.float64)
tensor([-1.9801, -2.8193, -2.8202, -3.2729, -3.3730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5061, device='cuda:0', dtype=torch.float64)
tensor([-1.9657, -2.8175, -2.8326, -3.3075, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7256, device='cuda:0', dtype=torch.float64)
tensor([-1.9598, -2.8181, -2.8474, -3.3288, -3.3574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5531, device='cuda:0', dtype=torch.float64)
tensor([-1.9529, -2.8134, -2.8544, -3.3347, -3.3559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7940, device='cuda:0', dtype=torch.float64)
tensor([-1.9456, -2.8113, -2.8562, -3.3295, -3.3561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6936, device='cuda:0', dtype=torch.float64)
tensor([-1.9468, -2.8123, -2.8531, -3.3238, -3.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5489, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.8111, -2.8495, -3.3136, -3.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5780, device='cuda:0', dtype=torch.float64)
tensor([-1.9399, -2.8142, -2.8483, -3.3061, -3.3485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4543, device='cuda:0', dtype=torch.float64)
tensor([-1.9427, -2.8245, -2.8518, -3.2870, -3.3438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6431, device='cuda:0', dtype=torch.float64)
tensor([-1.9411, -2.8206, -2.8591, -3.2648, -3.3383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7436, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.8069, -2.8730, -3.2493, -3.3367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6770, device='cuda:0', dtype=torch.float64)
tensor([-1.9401, -2.7955, -2.8815, -3.2366, -3.3379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7380, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.7841, -2.8928, -3.2351, -3.3383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6535, device='cuda:0', dtype=torch.float64)
tensor([-1.9408, -2.7781, -2.9001, -3.2428, -3.3394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6344, device='cuda:0', dtype=torch.float64)
tensor([-1.9478, -2.7754, -2.9017, -3.2526, -3.3399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8320, device='cuda:0', dtype=torch.float64)
tensor([-1.9556, -2.7816, -2.8992, -3.2721, -3.3481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6061, device='cuda:0', dtype=torch.float64)
tensor([-1.9677, -2.7931, -2.8897, -3.3102, -3.3591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7578, device='cuda:0', dtype=torch.float64)
tensor([-1.9744, -2.7977, -2.8825, -3.3065, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7247, device='cuda:0', dtype=torch.float64)
tensor([-1.9720, -2.7939, -2.8850, -3.2896, -3.3692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7716, device='cuda:0', dtype=torch.float64)
tensor([-1.9683, -2.7960, -2.8887, -3.2856, -3.3722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1884, device='cuda:0', dtype=torch.float64)
tensor([-1.9727, -2.8001, -2.8776, -3.2574, -3.3696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6870, device='cuda:0', dtype=torch.float64)
tensor([-1.9834, -2.8169, -2.8681, -3.2541, -3.3674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9064, device='cuda:0', dtype=torch.float64)
tensor([-1.9871, -2.8173, -2.8737, -3.2558, -3.3561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7923, device='cuda:0', dtype=torch.float64)
tensor([-1.9868, -2.8158, -2.8854, -3.2617, -3.3448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7606, device='cuda:0', dtype=torch.float64)
tensor([-1.9921, -2.8207, -2.8899, -3.2726, -3.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5875, device='cuda:0', dtype=torch.float64)
tensor([-1.9977, -2.8292, -2.8814, -3.2760, -3.3402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5559, device='cuda:0', dtype=torch.float64)
tensor([-1.9985, -2.8378, -2.8780, -3.2681, -3.3431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1672, device='cuda:0', dtype=torch.float64)
tensor([-1.9918, -2.8413, -2.8787, -3.2619, -3.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6420, device='cuda:0', dtype=torch.float64)
tensor([-1.9827, -2.8454, -2.8741, -3.2590, -3.3451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4252, device='cuda:0', dtype=torch.float64)
tensor([-1.9640, -2.8387, -2.8756, -3.2548, -3.3494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6442, device='cuda:0', dtype=torch.float64)
tensor([-1.9414, -2.8220, -2.8816, -3.2640, -3.3487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6578, device='cuda:0', dtype=torch.float64)
tensor([-1.9185, -2.8078, -2.8908, -3.2857, -3.3457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5361, device='cuda:0', dtype=torch.float64)
tensor([-1.9117, -2.7999, -2.8935, -3.2854, -3.3472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5372, device='cuda:0', dtype=torch.float64)
tensor([-1.9127, -2.8008, -2.8972, -3.2977, -3.3547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7619, device='cuda:0', dtype=torch.float64)
tensor([-1.9172, -2.8072, -2.9027, -3.3087, -3.3491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7737, device='cuda:0', dtype=torch.float64)
tensor([-1.9349, -2.8159, -2.9070, -3.3247, -3.3443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6867, device='cuda:0', dtype=torch.float64)
tensor([-1.9649, -2.8322, -2.9043, -3.3344, -3.3475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9830, device='cuda:0', dtype=torch.float64)
tensor([-2.0012, -2.8531, -2.8901, -3.3116, -3.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6814, device='cuda:0', dtype=torch.float64)
tensor([-2.0244, -2.8599, -2.8845, -3.3029, -3.3587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7962, device='cuda:0', dtype=torch.float64)
tensor([-2.0353, -2.8521, -2.8809, -3.2980, -3.3568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7306, device='cuda:0', dtype=torch.float64)
tensor([-2.0389, -2.8399, -2.8807, -3.2984, -3.3539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8924, device='cuda:0', dtype=torch.float64)
tensor([-2.0380, -2.8360, -2.8722, -3.2803, -3.3528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9471, device='cuda:0', dtype=torch.float64)
tensor([-2.0293, -2.8329, -2.8699, -3.2811, -3.3417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5688, device='cuda:0', dtype=torch.float64)
tensor([-2.0128, -2.8217, -2.8758, -3.2913, -3.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6668, device='cuda:0', dtype=torch.float64)
tensor([-1.9912, -2.8049, -2.8838, -3.3086, -3.3068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7000, device='cuda:0', dtype=torch.float64)
tensor([-1.9642, -2.7886, -2.9014, -3.3458, -3.2920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8716, device='cuda:0', dtype=torch.float64)
tensor([-1.9487, -2.7810, -2.9143, -3.3712, -3.2889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7549, device='cuda:0', dtype=torch.float64)
tensor([-1.9494, -2.7887, -2.9123, -3.3802, -3.2890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5870, device='cuda:0', dtype=torch.float64)
tensor([-1.9583, -2.8010, -2.8969, -3.3880, -3.2993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7389, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.8042, -2.8823, -3.3417, -3.3046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5996, device='cuda:0', dtype=torch.float64)
tensor([-1.9752, -2.8084, -2.8761, -3.3182, -3.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7667, device='cuda:0', dtype=torch.float64)
tensor([-1.9883, -2.8142, -2.8740, -3.3113, -3.3245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0371, device='cuda:0', dtype=torch.float64)
tensor([-2.0023, -2.8191, -2.8683, -3.2728, -3.3397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7468, device='cuda:0', dtype=torch.float64)
tensor([-2.0131, -2.8296, -2.8601, -3.2446, -3.3571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7403, device='cuda:0', dtype=torch.float64)
tensor([-2.0124, -2.8250, -2.8657, -3.2594, -3.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6691, device='cuda:0', dtype=torch.float64)
tensor([-1.9958, -2.7997, -2.8804, -3.2949, -3.3472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0867, device='cuda:0', dtype=torch.float64)
tensor([-1.9868, -2.7939, -2.8945, -3.3420, -3.3408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2770, device='cuda:0', dtype=torch.float64)
tensor([-1.9916, -2.7962, -2.8884, -3.3698, -3.3344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4953, device='cuda:0', dtype=torch.float64)
tensor([-2.0072, -2.8010, -2.8791, -3.4033, -3.3395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6764, device='cuda:0', dtype=torch.float64)
tensor([-2.0129, -2.8001, -2.8856, -3.4006, -3.3468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7904, device='cuda:0', dtype=torch.float64)
tensor([-2.0138, -2.7960, -2.8966, -3.3698, -3.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5439, device='cuda:0', dtype=torch.float64)
tensor([-2.0151, -2.7940, -2.9095, -3.3709, -3.3466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7818, device='cuda:0', dtype=torch.float64)
tensor([-2.0098, -2.7928, -2.9155, -3.3598, -3.3536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8488, device='cuda:0', dtype=torch.float64)
tensor([-2.0003, -2.7908, -2.9120, -3.3147, -3.3644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5983, device='cuda:0', dtype=torch.float64)
tensor([-1.9883, -2.8003, -2.9102, -3.2935, -3.3765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0881, device='cuda:0', dtype=torch.float64)
tensor([-1.9641, -2.7965, -2.9156, -3.2930, -3.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9667, device='cuda:0', dtype=torch.float64)
tensor([-1.9392, -2.7881, -2.9302, -3.3058, -3.3329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6908, device='cuda:0', dtype=torch.float64)
tensor([-1.9304, -2.7969, -2.9365, -3.3312, -3.3115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8839, device='cuda:0', dtype=torch.float64)
tensor([-1.9364, -2.8176, -2.9233, -3.3278, -3.3031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7500, device='cuda:0', dtype=torch.float64)
tensor([-1.9526, -2.8419, -2.8970, -3.3025, -3.3068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7243, device='cuda:0', dtype=torch.float64)
tensor([-1.9734, -2.8695, -2.8794, -3.2948, -3.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2121, device='cuda:0', dtype=torch.float64)
tensor([-1.9811, -2.8620, -2.8670, -3.2747, -3.3194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9406, device='cuda:0', dtype=torch.float64)
tensor([-1.9810, -2.8423, -2.8651, -3.3012, -3.3124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6640, device='cuda:0', dtype=torch.float64)
tensor([-1.9805, -2.8353, -2.8714, -3.3472, -3.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9476, device='cuda:0', dtype=torch.float64)
tensor([-1.9856, -2.8172, -2.8675, -3.3184, -3.3435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7677, device='cuda:0', dtype=torch.float64)
tensor([-2.0081, -2.8182, -2.8596, -3.3014, -3.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8218, device='cuda:0', dtype=torch.float64)
tensor([-2.0193, -2.8226, -2.8619, -3.3225, -3.3729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8480, device='cuda:0', dtype=torch.float64)
tensor([-2.0182, -2.8165, -2.8678, -3.3065, -3.3748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0346, device='cuda:0', dtype=torch.float64)
tensor([-2.0083, -2.8070, -2.8827, -3.3082, -3.3730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7441, device='cuda:0', dtype=torch.float64)
tensor([-2.0042, -2.8158, -2.8875, -3.3099, -3.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8310, device='cuda:0', dtype=torch.float64)
tensor([-1.9993, -2.8181, -2.8859, -3.2911, -3.3755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7399, device='cuda:0', dtype=torch.float64)
tensor([-1.9943, -2.8320, -2.8818, -3.2870, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8342, device='cuda:0', dtype=torch.float64)
tensor([-1.9779, -2.8215, -2.8923, -3.3025, -3.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6310, device='cuda:0', dtype=torch.float64)
tensor([-1.9556, -2.8055, -2.9105, -3.3256, -3.3531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5541, device='cuda:0', dtype=torch.float64)
tensor([-1.9359, -2.7954, -2.9299, -3.3667, -3.3417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5787, device='cuda:0', dtype=torch.float64)
tensor([-1.9263, -2.7915, -2.9490, -3.4053, -3.3338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8296, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.7971, -2.9505, -3.4026, -3.3249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7623, device='cuda:0', dtype=torch.float64)
tensor([-1.9372, -2.8121, -2.9458, -3.4126, -3.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5855, device='cuda:0', dtype=torch.float64)
tensor([-1.9489, -2.8229, -2.9494, -3.4125, -3.3216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8321, device='cuda:0', dtype=torch.float64)
tensor([-1.9519, -2.8146, -2.9523, -3.3493, -3.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9265, device='cuda:0', dtype=torch.float64)
tensor([-1.9687, -2.8098, -2.9521, -3.3230, -3.3117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9036, device='cuda:0', dtype=torch.float64)
tensor([-1.9964, -2.8218, -2.9408, -3.2914, -3.3207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8240, device='cuda:0', dtype=torch.float64)
tensor([-2.0244, -2.8309, -2.9319, -3.2716, -3.3301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8728, device='cuda:0', dtype=torch.float64)
tensor([-2.0370, -2.8234, -2.9215, -3.2637, -3.3317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8066, device='cuda:0', dtype=torch.float64)
tensor([-2.0410, -2.8312, -2.9064, -3.2758, -3.3252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7935, device='cuda:0', dtype=torch.float64)
tensor([-2.0391, -2.8396, -2.9020, -3.3230, -3.3165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9760, device='cuda:0', dtype=torch.float64)
tensor([-2.0442, -2.8540, -2.8913, -3.3364, -3.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9014, device='cuda:0', dtype=torch.float64)
tensor([-2.0491, -2.8681, -2.8860, -3.3287, -3.3287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6145, device='cuda:0', dtype=torch.float64)
tensor([-2.0521, -2.8777, -2.8901, -3.3139, -3.3373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4935, device='cuda:0', dtype=torch.float64)
tensor([-2.0476, -2.8776, -2.9068, -3.3003, -3.3399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0627, device='cuda:0', dtype=torch.float64)
tensor([-2.0391, -2.8631, -2.9228, -3.2979, -3.3468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6528, device='cuda:0', dtype=torch.float64)
tensor([-2.0281, -2.8478, -2.9324, -3.2898, -3.3586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0585, device='cuda:0', dtype=torch.float64)
tensor([-2.0085, -2.8282, -2.9375, -3.2987, -3.3594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7554, device='cuda:0', dtype=torch.float64)
tensor([-1.9922, -2.8190, -2.9439, -3.3276, -3.3569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9493, device='cuda:0', dtype=torch.float64)
tensor([-1.9725, -2.8002, -2.9523, -3.3608, -3.3453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5541, device='cuda:0', dtype=torch.float64)
tensor([-1.9545, -2.7799, -2.9605, -3.3759, -3.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9386, device='cuda:0', dtype=torch.float64)
tensor([-1.9537, -2.7813, -2.9691, -3.4015, -3.3213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2136, device='cuda:0', dtype=torch.float64)
tensor([-1.9630, -2.7994, -2.9571, -3.3861, -3.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7678, device='cuda:0', dtype=torch.float64)
tensor([-1.9817, -2.8257, -2.9368, -3.3348, -3.3352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0449, device='cuda:0', dtype=torch.float64)
tensor([-2.0000, -2.8531, -2.9270, -3.3016, -3.3560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7769, device='cuda:0', dtype=torch.float64)
tensor([-2.0134, -2.8731, -2.9160, -3.2871, -3.3716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0308, device='cuda:0', dtype=torch.float64)
tensor([-2.0137, -2.8697, -2.9063, -3.2742, -3.3692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4949, device='cuda:0', dtype=torch.float64)
tensor([-2.0085, -2.8644, -2.9040, -3.2978, -3.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9928, device='cuda:0', dtype=torch.float64)
tensor([-2.0141, -2.8572, -2.8960, -3.3201, -3.3791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7272, device='cuda:0', dtype=torch.float64)
tensor([-2.0348, -2.8485, -2.8807, -3.3293, -3.3938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6139, device='cuda:0', dtype=torch.float64)
tensor([-2.0694, -2.8555, -2.8668, -3.3622, -3.4115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9411, device='cuda:0', dtype=torch.float64)
tensor([-2.0969, -2.8639, -2.8628, -3.3615, -3.4256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7435, device='cuda:0', dtype=torch.float64)
tensor([-2.1109, -2.8681, -2.8705, -3.3505, -3.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2141, device='cuda:0', dtype=torch.float64)
tensor([-2.1109, -2.8583, -2.8873, -3.3521, -3.4278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1253, device='cuda:0', dtype=torch.float64)
tensor([-2.1020, -2.8412, -2.9060, -3.3280, -3.4184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5234, device='cuda:0', dtype=torch.float64)
tensor([-2.0852, -2.8280, -2.9207, -3.3119, -3.4066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0526, device='cuda:0', dtype=torch.float64)
tensor([-2.0518, -2.8066, -2.9526, -3.3246, -3.3915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7776, device='cuda:0', dtype=torch.float64)
tensor([-2.0129, -2.7884, -2.9838, -3.3411, -3.3770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6873, device='cuda:0', dtype=torch.float64)
tensor([-1.9793, -2.7713, -3.0076, -3.3535, -3.3633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7783, device='cuda:0', dtype=torch.float64)
tensor([-1.9539, -2.7625, -3.0244, -3.3772, -3.3522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9420, device='cuda:0', dtype=torch.float64)
tensor([-1.9424, -2.7708, -3.0294, -3.3967, -3.3470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6267, device='cuda:0', dtype=torch.float64)
tensor([-1.9322, -2.7802, -3.0345, -3.4199, -3.3437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8240, device='cuda:0', dtype=torch.float64)
tensor([-1.9305, -2.7961, -3.0350, -3.4335, -3.3440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0194, device='cuda:0', dtype=torch.float64)
tensor([-1.9270, -2.8033, -3.0354, -3.4455, -3.3380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7243, device='cuda:0', dtype=torch.float64)
tensor([-1.9305, -2.8121, -3.0283, -3.4606, -3.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9137, device='cuda:0', dtype=torch.float64)
tensor([-1.9489, -2.8208, -3.0102, -3.4508, -3.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0603, device='cuda:0', dtype=torch.float64)
tensor([-1.9779, -2.8275, -2.9816, -3.4083, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9734, device='cuda:0', dtype=torch.float64)
tensor([-2.0170, -2.8423, -2.9532, -3.3640, -3.3766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6631, device='cuda:0', dtype=torch.float64)
tensor([-2.0434, -2.8591, -2.9381, -3.3453, -3.3893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6888, device='cuda:0', dtype=torch.float64)
tensor([-2.0620, -2.8787, -2.9291, -3.3425, -3.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8905, device='cuda:0', dtype=torch.float64)
tensor([-2.0710, -2.8845, -2.9247, -3.3579, -3.3986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6967, device='cuda:0', dtype=torch.float64)
tensor([-2.0641, -2.8767, -2.9325, -3.3912, -3.3883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8222, device='cuda:0', dtype=torch.float64)
tensor([-2.0510, -2.8694, -2.9420, -3.4212, -3.3768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4039, device='cuda:0', dtype=torch.float64)
tensor([-2.0401, -2.8766, -2.9452, -3.4361, -3.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7047, device='cuda:0', dtype=torch.float64)
tensor([-2.0335, -2.8878, -2.9387, -3.4462, -3.3775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7687, device='cuda:0', dtype=torch.float64)
tensor([-2.0306, -2.9056, -2.9321, -3.5017, -3.3849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8752, device='cuda:0', dtype=torch.float64)
tensor([-2.0196, -2.9099, -2.9290, -3.4381, -3.3870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8871, device='cuda:0', dtype=torch.float64)
tensor([-2.0167, -2.9213, -2.9194, -3.4024, -3.3871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9350, device='cuda:0', dtype=torch.float64)
tensor([-2.0250, -2.9287, -2.9096, -3.3673, -3.3928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8247, device='cuda:0', dtype=torch.float64)
tensor([-2.0272, -2.9244, -2.9060, -3.3476, -3.4076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8048, device='cuda:0', dtype=torch.float64)
tensor([-2.0276, -2.9137, -2.9022, -3.3383, -3.4167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9015, device='cuda:0', dtype=torch.float64)
tensor([-2.0266, -2.8980, -2.9062, -3.3345, -3.4195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6941, device='cuda:0', dtype=torch.float64)
tensor([-2.0236, -2.8818, -2.9083, -3.3286, -3.4177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9055, device='cuda:0', dtype=torch.float64)
tensor([-2.0174, -2.8648, -2.9112, -3.3265, -3.4134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9632, device='cuda:0', dtype=torch.float64)
tensor([-2.0078, -2.8534, -2.9112, -3.3265, -3.4104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7720, device='cuda:0', dtype=torch.float64)
tensor([-1.9970, -2.8498, -2.9058, -3.3379, -3.4024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5569, device='cuda:0', dtype=torch.float64)
tensor([-1.9978, -2.8550, -2.8985, -3.3274, -3.3999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8138, device='cuda:0', dtype=torch.float64)
tensor([-2.0057, -2.8613, -2.8948, -3.3131, -3.4019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9875, device='cuda:0', dtype=torch.float64)
tensor([-2.0042, -2.8635, -2.9012, -3.3228, -3.4042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9934, device='cuda:0', dtype=torch.float64)
tensor([-2.0021, -2.8587, -2.9144, -3.3437, -3.4066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5041, device='cuda:0', dtype=torch.float64)
tensor([-2.0012, -2.8530, -2.9302, -3.3764, -3.4037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1399, device='cuda:0', dtype=torch.float64)
tensor([-2.0048, -2.8491, -2.9430, -3.4154, -3.3988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6873, device='cuda:0', dtype=torch.float64)
tensor([-2.0100, -2.8486, -2.9508, -3.4489, -3.3941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6416, device='cuda:0', dtype=torch.float64)
tensor([-2.0200, -2.8508, -2.9548, -3.4669, -3.3998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0884, device='cuda:0', dtype=torch.float64)
tensor([-2.0284, -2.8643, -2.9592, -3.4916, -3.4192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3332, device='cuda:0', dtype=torch.float64)
tensor([-2.0467, -2.8810, -2.9500, -3.4759, -3.4368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0227, device='cuda:0', dtype=torch.float64)
tensor([-2.0680, -2.8942, -2.9363, -3.4465, -3.4517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9705, device='cuda:0', dtype=torch.float64)
tensor([-2.0854, -2.9144, -2.9246, -3.4155, -3.4654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7245, device='cuda:0', dtype=torch.float64)
tensor([-2.0977, -2.9350, -2.9160, -3.4034, -3.4829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8233, device='cuda:0', dtype=torch.float64)
tensor([-2.0955, -2.9331, -2.9096, -3.3867, -3.4839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9551, device='cuda:0', dtype=torch.float64)
tensor([-2.0871, -2.9205, -2.9003, -3.3800, -3.4692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8799, device='cuda:0', dtype=torch.float64)
tensor([-2.0708, -2.8930, -2.8973, -3.3783, -3.4455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7881, device='cuda:0', dtype=torch.float64)
tensor([-2.0525, -2.8678, -2.9002, -3.3909, -3.4173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9327, device='cuda:0', dtype=torch.float64)
tensor([-2.0392, -2.8497, -2.9058, -3.3976, -3.3917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9286, device='cuda:0', dtype=torch.float64)
tensor([-2.0274, -2.8301, -2.9194, -3.3925, -3.3765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9775, device='cuda:0', dtype=torch.float64)
tensor([-2.0151, -2.8248, -2.9319, -3.3868, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8859, device='cuda:0', dtype=torch.float64)
tensor([-2.0137, -2.8370, -2.9427, -3.3764, -3.3646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8987, device='cuda:0', dtype=torch.float64)
tensor([-2.0270, -2.8707, -2.9497, -3.3676, -3.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7901, device='cuda:0', dtype=torch.float64)
tensor([-2.0367, -2.8936, -2.9564, -3.3675, -3.3936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8074, device='cuda:0', dtype=torch.float64)
tensor([-2.0489, -2.9194, -2.9625, -3.3778, -3.3969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7922, device='cuda:0', dtype=torch.float64)
tensor([-2.0564, -2.9417, -2.9676, -3.3962, -3.3985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0633, device='cuda:0', dtype=torch.float64)
tensor([-2.0573, -2.9649, -2.9856, -3.4155, -3.3948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2929, device='cuda:0', dtype=torch.float64)
tensor([-2.0626, -2.9559, -3.0005, -3.3995, -3.3975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9047, device='cuda:0', dtype=torch.float64)
tensor([-2.0728, -2.9268, -3.0111, -3.3602, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5050, device='cuda:0', dtype=torch.float64)
tensor([-2.0784, -2.9084, -3.0125, -3.3372, -3.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9390, device='cuda:0', dtype=torch.float64)
tensor([-2.0850, -2.9021, -3.0074, -3.3253, -3.4248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7570, device='cuda:0', dtype=torch.float64)
tensor([-2.0895, -2.8965, -2.9969, -3.3122, -3.4240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9423, device='cuda:0', dtype=torch.float64)
tensor([-2.0823, -2.8838, -2.9830, -3.2905, -3.4022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1282, device='cuda:0', dtype=torch.float64)
tensor([-2.0807, -2.8807, -2.9745, -3.2885, -3.3876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8309, device='cuda:0', dtype=torch.float64)
tensor([-2.0794, -2.8804, -2.9602, -3.2951, -3.3776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0979, device='cuda:0', dtype=torch.float64)
tensor([-2.0960, -2.8794, -2.9453, -3.2938, -3.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6741, device='cuda:0', dtype=torch.float64)
tensor([-2.1075, -2.8882, -2.9490, -3.3247, -3.3837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9884, device='cuda:0', dtype=torch.float64)
tensor([-2.1018, -2.8791, -2.9503, -3.3573, -3.3674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2461, device='cuda:0', dtype=torch.float64)
tensor([-2.0791, -2.8652, -2.9557, -3.3837, -3.3396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7673, device='cuda:0', dtype=torch.float64)
tensor([-2.0654, -2.8546, -2.9617, -3.4116, -3.3335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6127, device='cuda:0', dtype=torch.float64)
tensor([-2.0524, -2.8405, -2.9734, -3.4183, -3.3453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0752, device='cuda:0', dtype=torch.float64)
tensor([-2.0527, -2.8363, -2.9797, -3.4111, -3.3624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6606, device='cuda:0', dtype=torch.float64)
tensor([-2.0672, -2.8428, -2.9740, -3.4115, -3.3846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8704, device='cuda:0', dtype=torch.float64)
tensor([-2.0790, -2.8495, -2.9742, -3.4114, -3.4032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8957, device='cuda:0', dtype=torch.float64)
tensor([-2.0836, -2.8554, -2.9734, -3.4107, -3.4145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9127, device='cuda:0', dtype=torch.float64)
tensor([-2.0821, -2.8538, -2.9747, -3.4282, -3.4278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6451, device='cuda:0', dtype=torch.float64)
tensor([-2.0909, -2.8618, -2.9680, -3.4376, -3.4463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8960, device='cuda:0', dtype=torch.float64)
tensor([-2.1055, -2.8720, -2.9469, -3.4193, -3.4668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6463, device='cuda:0', dtype=torch.float64)
tensor([-2.1214, -2.8858, -2.9313, -3.3825, -3.5003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9403, device='cuda:0', dtype=torch.float64)
tensor([-2.1269, -2.8973, -2.9328, -3.3637, -3.5303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8638, device='cuda:0', dtype=torch.float64)
tensor([-2.1226, -2.9002, -2.9413, -3.3567, -3.5396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0020, device='cuda:0', dtype=torch.float64)
tensor([-2.1034, -2.8905, -2.9586, -3.3637, -3.5316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1893, device='cuda:0', dtype=torch.float64)
tensor([-2.0895, -2.8937, -2.9822, -3.3931, -3.5437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1649, device='cuda:0', dtype=torch.float64)
tensor([-2.0885, -2.8974, -2.9838, -3.3857, -3.5381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1082, device='cuda:0', dtype=torch.float64)
tensor([-2.0963, -2.9159, -2.9651, -3.3628, -3.5264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9911, device='cuda:0', dtype=torch.float64)
tensor([-2.1149, -2.9529, -2.9532, -3.4051, -3.5562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1275, device='cuda:0', dtype=torch.float64)
tensor([-2.1187, -2.9478, -2.9436, -3.3892, -3.5467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1884, device='cuda:0', dtype=torch.float64)
tensor([-2.0997, -2.9166, -2.9503, -3.3820, -3.5059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9038, device='cuda:0', dtype=torch.float64)
tensor([-2.0803, -2.9109, -2.9659, -3.4248, -3.4769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0252, device='cuda:0', dtype=torch.float64)
tensor([-2.0563, -2.9091, -2.9728, -3.4646, -3.4528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9419, device='cuda:0', dtype=torch.float64)
tensor([-2.0451, -2.9136, -2.9703, -3.4667, -3.4480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6058, device='cuda:0', dtype=torch.float64)
tensor([-2.0379, -2.9170, -2.9717, -3.4790, -3.4397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0828, device='cuda:0', dtype=torch.float64)
tensor([-2.0334, -2.9042, -2.9815, -3.4784, -3.4202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9805, device='cuda:0', dtype=torch.float64)
tensor([-2.0215, -2.8776, -3.0027, -3.4777, -3.3977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0207, device='cuda:0', dtype=torch.float64)
tensor([-2.0286, -2.8762, -3.0092, -3.4426, -3.3961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1617, device='cuda:0', dtype=torch.float64)
tensor([-2.0551, -2.9007, -2.9946, -3.3759, -3.4078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9972, device='cuda:0', dtype=torch.float64)
tensor([-2.0849, -2.9434, -2.9807, -3.3523, -3.4369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0091, device='cuda:0', dtype=torch.float64)
tensor([-2.1153, -2.9749, -2.9721, -3.3365, -3.4574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9222, device='cuda:0', dtype=torch.float64)
tensor([-2.1323, -2.9833, -2.9672, -3.2838, -3.4451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7838, device='cuda:0', dtype=torch.float64)
tensor([-2.1336, -2.9839, -2.9665, -3.2486, -3.4260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8214, device='cuda:0', dtype=torch.float64)
tensor([-2.1373, -2.9838, -2.9670, -3.2443, -3.4102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5416, device='cuda:0', dtype=torch.float64)
tensor([-2.1352, -2.9862, -2.9640, -3.2615, -3.4015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7533, device='cuda:0', dtype=torch.float64)
tensor([-2.1341, -2.9791, -2.9622, -3.2841, -3.3956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9766, device='cuda:0', dtype=torch.float64)
tensor([-2.1390, -2.9776, -2.9603, -3.3286, -3.3930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9797, device='cuda:0', dtype=torch.float64)
tensor([-2.1257, -2.9526, -2.9694, -3.3509, -3.3831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9734, device='cuda:0', dtype=torch.float64)
tensor([-2.1100, -2.9274, -2.9816, -3.3727, -3.3690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7302, device='cuda:0', dtype=torch.float64)
tensor([-2.0928, -2.9151, -2.9945, -3.4140, -3.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1472, device='cuda:0', dtype=torch.float64)
tensor([-2.0834, -2.8977, -2.9979, -3.4149, -3.3566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7243, device='cuda:0', dtype=torch.float64)
tensor([-2.0721, -2.8888, -3.0030, -3.4198, -3.3608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6629, device='cuda:0', dtype=torch.float64)
tensor([-2.0586, -2.8926, -3.0084, -3.4323, -3.3676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7574, device='cuda:0', dtype=torch.float64)
tensor([-2.0470, -2.8960, -3.0100, -3.4401, -3.3750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2099, device='cuda:0', dtype=torch.float64)
tensor([-2.0406, -2.8939, -3.0195, -3.4280, -3.3720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8045, device='cuda:0', dtype=torch.float64)
tensor([-2.0323, -2.8976, -3.0343, -3.4342, -3.3841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0516, device='cuda:0', dtype=torch.float64)
tensor([-2.0401, -2.9118, -3.0256, -3.4309, -3.3863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0114, device='cuda:0', dtype=torch.float64)
tensor([-2.0694, -2.9313, -3.0122, -3.4212, -3.3897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0768, device='cuda:0', dtype=torch.float64)
tensor([-2.1146, -2.9634, -3.0196, -3.4344, -3.4162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0714, device='cuda:0', dtype=torch.float64)
tensor([-2.1554, -2.9780, -3.0249, -3.4147, -3.4279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5257, device='cuda:0', dtype=torch.float64)
tensor([-2.1795, -2.9609, -3.0156, -3.3901, -3.4252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0874, device='cuda:0', dtype=torch.float64)
tensor([-2.1997, -2.9475, -3.0168, -3.3918, -3.4271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7154, device='cuda:0', dtype=torch.float64)
tensor([-2.2184, -2.9399, -3.0323, -3.3896, -3.4334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6724, device='cuda:0', dtype=torch.float64)
tensor([-2.2370, -2.9284, -3.0417, -3.3782, -3.4379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8012, device='cuda:0', dtype=torch.float64)
tensor([-2.2461, -2.9146, -3.0436, -3.3715, -3.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1977, device='cuda:0', dtype=torch.float64)
tensor([-2.2382, -2.9075, -3.0398, -3.3700, -3.4497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8833, device='cuda:0', dtype=torch.float64)
tensor([-2.2235, -2.9096, -3.0312, -3.3657, -3.4523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5734, device='cuda:0', dtype=torch.float64)
tensor([-2.2072, -2.9216, -3.0184, -3.3642, -3.4619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0203, device='cuda:0', dtype=torch.float64)
tensor([-2.1789, -2.9273, -3.0113, -3.3712, -3.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8449, device='cuda:0', dtype=torch.float64)
tensor([-2.1479, -2.9229, -3.0043, -3.3908, -3.4727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0319, device='cuda:0', dtype=torch.float64)
tensor([-2.1223, -2.9366, -2.9993, -3.4247, -3.4764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8084, device='cuda:0', dtype=torch.float64)
tensor([-2.1087, -2.9418, -2.9923, -3.4607, -3.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9990, device='cuda:0', dtype=torch.float64)
tensor([-2.1021, -2.9446, -2.9829, -3.4810, -3.4893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7791, device='cuda:0', dtype=torch.float64)
tensor([-2.0908, -2.9483, -2.9774, -3.4756, -3.5041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7474, device='cuda:0', dtype=torch.float64)
tensor([-2.0833, -2.9475, -2.9709, -3.4663, -3.5172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7383, device='cuda:0', dtype=torch.float64)
tensor([-2.0802, -2.9444, -2.9591, -3.4276, -3.5303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9086, device='cuda:0', dtype=torch.float64)
tensor([-2.0813, -2.9525, -2.9542, -3.3962, -3.5437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0861, device='cuda:0', dtype=torch.float64)
tensor([-2.0953, -2.9777, -2.9493, -3.3831, -3.5617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9052, device='cuda:0', dtype=torch.float64)
tensor([-2.1043, -3.0087, -2.9457, -3.3783, -3.5830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7211, device='cuda:0', dtype=torch.float64)
tensor([-2.1201, -3.0332, -2.9463, -3.3915, -3.5975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8809, device='cuda:0', dtype=torch.float64)
tensor([-2.1327, -3.0522, -2.9537, -3.4151, -3.6104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0043, device='cuda:0', dtype=torch.float64)
tensor([-2.1550, -3.0479, -2.9527, -3.4050, -3.6087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3254, device='cuda:0', dtype=torch.float64)
tensor([-2.1760, -3.0480, -2.9592, -3.3986, -3.6122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2078, device='cuda:0', dtype=torch.float64)
tensor([-2.2005, -3.0484, -2.9657, -3.3988, -3.6106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8322, device='cuda:0', dtype=torch.float64)
tensor([-2.2228, -3.0469, -2.9803, -3.4119, -3.5929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6733, device='cuda:0', dtype=torch.float64)
tensor([-2.2263, -3.0348, -2.9904, -3.4180, -3.5752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7035, device='cuda:0', dtype=torch.float64)
tensor([-2.2140, -3.0201, -2.9927, -3.4199, -3.5595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8821, device='cuda:0', dtype=torch.float64)
tensor([-2.1926, -3.0049, -2.9917, -3.4339, -3.5395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8823, device='cuda:0', dtype=torch.float64)
tensor([-2.1776, -2.9958, -2.9919, -3.4507, -3.5253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7845, device='cuda:0', dtype=torch.float64)
tensor([-2.1556, -2.9864, -2.9969, -3.4706, -3.5156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1770, device='cuda:0', dtype=torch.float64)
tensor([-2.1232, -2.9657, -3.0138, -3.4868, -3.4962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2970, device='cuda:0', dtype=torch.float64)
tensor([-2.1081, -2.9439, -3.0300, -3.4852, -3.5004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3515, device='cuda:0', dtype=torch.float64)
tensor([-2.1002, -2.9154, -3.0459, -3.4589, -3.5226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1689, device='cuda:0', dtype=torch.float64)
tensor([-2.0926, -2.8983, -3.0621, -3.4315, -3.5471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8957, device='cuda:0', dtype=torch.float64)
tensor([-2.0841, -2.8892, -3.0799, -3.4257, -3.5553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9682, device='cuda:0', dtype=torch.float64)
tensor([-2.0761, -2.8889, -3.0942, -3.4285, -3.5627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8433, device='cuda:0', dtype=torch.float64)
tensor([-2.0716, -2.8974, -3.0972, -3.4338, -3.5498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7543, device='cuda:0', dtype=torch.float64)
tensor([-2.0781, -2.9082, -3.0900, -3.4297, -3.5312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1071, device='cuda:0', dtype=torch.float64)
tensor([-2.1002, -2.9394, -3.0689, -3.4327, -3.5067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8257, device='cuda:0', dtype=torch.float64)
tensor([-2.1345, -2.9838, -3.0376, -3.4420, -3.5019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7240, device='cuda:0', dtype=torch.float64)
tensor([-2.1671, -3.0261, -3.0058, -3.4612, -3.4989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7532, device='cuda:0', dtype=torch.float64)
tensor([-2.1909, -3.0485, -2.9830, -3.4744, -3.4976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9713, device='cuda:0', dtype=torch.float64)
tensor([-2.2066, -3.0623, -2.9673, -3.4443, -3.4927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8121, device='cuda:0', dtype=torch.float64)
tensor([-2.2028, -3.0703, -2.9727, -3.4508, -3.4829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1353, device='cuda:0', dtype=torch.float64)
tensor([-2.1966, -3.0720, -2.9824, -3.4965, -3.4959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1017, device='cuda:0', dtype=torch.float64)
tensor([-2.1844, -3.0672, -2.9796, -3.5026, -3.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6508, device='cuda:0', dtype=torch.float64)
tensor([-2.1676, -3.0549, -2.9761, -3.4791, -3.4949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6575, device='cuda:0', dtype=torch.float64)
tensor([-2.1565, -3.0375, -2.9684, -3.4675, -3.4893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8556, device='cuda:0', dtype=torch.float64)
tensor([-2.1500, -3.0264, -2.9714, -3.5059, -3.4879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0844, device='cuda:0', dtype=torch.float64)
tensor([-2.1405, -2.9995, -2.9871, -3.4803, -3.4893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9363, device='cuda:0', dtype=torch.float64)
tensor([-2.1342, -2.9772, -3.0045, -3.4746, -3.4957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9952, device='cuda:0', dtype=torch.float64)
tensor([-2.1418, -2.9578, -3.0374, -3.4999, -3.5181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9057, device='cuda:0', dtype=torch.float64)
tensor([-2.1522, -2.9463, -3.0633, -3.5429, -3.5283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9107, device='cuda:0', dtype=torch.float64)
tensor([-2.1726, -2.9310, -3.0461, -3.5128, -3.5225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7982, device='cuda:0', dtype=torch.float64)
tensor([-2.2139, -2.9516, -3.0239, -3.4941, -3.5219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7982, device='cuda:0', dtype=torch.float64)
tensor([-2.2491, -2.9639, -3.0086, -3.4991, -3.5182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1113, device='cuda:0', dtype=torch.float64)
tensor([-2.2705, -2.9685, -3.0029, -3.5154, -3.5078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8881, device='cuda:0', dtype=torch.float64)
tensor([-2.2749, -2.9381, -2.9966, -3.5376, -3.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0257, device='cuda:0', dtype=torch.float64)
tensor([-2.2815, -2.9238, -2.9966, -3.5525, -3.4581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7475, device='cuda:0', dtype=torch.float64)
tensor([-2.2953, -2.9267, -2.9997, -3.4973, -3.4436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0337, device='cuda:0', dtype=torch.float64)
tensor([-2.3087, -2.9213, -3.0046, -3.4386, -3.4386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9705, device='cuda:0', dtype=torch.float64)
tensor([-2.3180, -2.9190, -3.0065, -3.4271, -3.4410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7677, device='cuda:0', dtype=torch.float64)
tensor([-2.3164, -2.9090, -3.0093, -3.4022, -3.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6750, device='cuda:0', dtype=torch.float64)
tensor([-2.2994, -2.9047, -3.0171, -3.4052, -3.4487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8850, device='cuda:0', dtype=torch.float64)
tensor([-2.2732, -2.9116, -3.0385, -3.4421, -3.4681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8927, device='cuda:0', dtype=torch.float64)
tensor([-2.2494, -2.9204, -3.0628, -3.4987, -3.4901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2816, device='cuda:0', dtype=torch.float64)
tensor([-2.2248, -2.9234, -3.0791, -3.5019, -3.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9742, device='cuda:0', dtype=torch.float64)
tensor([-2.2126, -2.9391, -3.0954, -3.4880, -3.4972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8245, device='cuda:0', dtype=torch.float64)
tensor([-2.1892, -2.9517, -3.1152, -3.5101, -3.4954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8366, device='cuda:0', dtype=torch.float64)
tensor([-2.1762, -2.9753, -3.1303, -3.6272, -3.4959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1197, device='cuda:0', dtype=torch.float64)
tensor([-2.1588, -2.9848, -3.1402, -3.5279, -3.4875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0571, device='cuda:0', dtype=torch.float64)
tensor([-2.1377, -3.0057, -3.1619, -3.5221, -3.4733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9690, device='cuda:0', dtype=torch.float64)
tensor([-2.1344, -3.0439, -3.1775, -3.5590, -3.4758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7894, device='cuda:0', dtype=torch.float64)
tensor([-2.1454, -3.0861, -3.1830, -3.5249, -3.4941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1370, device='cuda:0', dtype=torch.float64)
tensor([-2.1680, -3.1311, -3.1856, -3.5084, -3.5108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7011, device='cuda:0', dtype=torch.float64)
tensor([-2.1931, -3.1781, -3.2058, -3.5114, -3.5537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3164, device='cuda:0', dtype=torch.float64)
tensor([-2.2118, -3.2027, -3.2231, -3.5363, -3.5572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1579, device='cuda:0', dtype=torch.float64)
tensor([-2.2259, -3.2038, -3.2098, -3.5429, -3.5340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0502, device='cuda:0', dtype=torch.float64)
tensor([-2.2367, -3.1975, -3.1926, -3.5797, -3.5207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6894, device='cuda:0', dtype=torch.float64)
tensor([-2.2420, -3.1811, -3.1993, -3.5722, -3.5275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1834, device='cuda:0', dtype=torch.float64)
tensor([-2.2580, -3.1954, -3.2024, -3.6700, -3.5588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3359, device='cuda:0', dtype=torch.float64)
tensor([-2.2767, -3.2148, -3.1688, -3.6689, -3.5783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9313, device='cuda:0', dtype=torch.float64)
tensor([-2.3034, -3.2395, -3.1063, -3.5677, -3.5843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0923, device='cuda:0', dtype=torch.float64)
tensor([-2.3475, -3.2840, -3.0697, -3.5246, -3.5970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8795, device='cuda:0', dtype=torch.float64)
tensor([-2.3684, -3.3096, -3.0617, -3.5470, -3.6038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1895, device='cuda:0', dtype=torch.float64)
tensor([-2.3301, -3.2857, -3.0864, -3.4756, -3.5879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1809, device='cuda:0', dtype=torch.float64)
tensor([-2.2909, -3.2576, -3.1118, -3.4603, -3.5780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8515, device='cuda:0', dtype=torch.float64)
tensor([-2.2384, -3.2099, -3.1455, -3.4775, -3.5694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7403, device='cuda:0', dtype=torch.float64)
tensor([-2.2003, -3.1682, -3.1777, -3.4970, -3.5645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7877, device='cuda:0', dtype=torch.float64)
tensor([-2.1825, -3.1375, -3.1965, -3.4900, -3.5539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4555, device='cuda:0', dtype=torch.float64)
tensor([-2.1823, -3.1339, -3.1882, -3.4657, -3.5291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0280, device='cuda:0', dtype=torch.float64)
tensor([-2.1920, -3.1311, -3.1862, -3.4690, -3.5290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7012, device='cuda:0', dtype=torch.float64)
tensor([-2.1890, -3.1082, -3.1979, -3.4859, -3.5321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6316, device='cuda:0', dtype=torch.float64)
tensor([-2.2076, -3.1116, -3.2068, -3.5120, -3.5412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0073, device='cuda:0', dtype=torch.float64)
tensor([-2.2179, -3.0961, -3.2130, -3.5025, -3.5391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7494, device='cuda:0', dtype=torch.float64)
tensor([-2.2176, -3.0838, -3.2225, -3.4907, -3.5251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9208, device='cuda:0', dtype=torch.float64)
tensor([-2.2133, -3.0819, -3.2283, -3.5068, -3.5108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2148, device='cuda:0', dtype=torch.float64)
tensor([-2.2339, -3.1050, -3.2240, -3.5241, -3.5139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8665, device='cuda:0', dtype=torch.float64)
tensor([-2.2592, -3.1150, -3.2135, -3.5106, -3.5217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0340, device='cuda:0', dtype=torch.float64)
tensor([-2.2878, -3.1212, -3.2032, -3.4984, -3.5324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2598, device='cuda:0', dtype=torch.float64)
tensor([-2.3061, -3.1138, -3.2045, -3.4851, -3.5541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0366, device='cuda:0', dtype=torch.float64)
tensor([-2.3138, -3.1075, -3.2083, -3.4952, -3.5697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0463, device='cuda:0', dtype=torch.float64)
tensor([-2.3191, -3.1001, -3.2158, -3.5382, -3.5838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8231, device='cuda:0', dtype=torch.float64)
tensor([-2.3287, -3.1000, -3.2192, -3.5728, -3.5883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4413, device='cuda:0', dtype=torch.float64)
tensor([-2.3439, -3.1128, -3.2222, -3.6028, -3.6044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7894, device='cuda:0', dtype=torch.float64)
tensor([-2.3577, -3.1204, -3.2265, -3.6510, -3.6127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9413, device='cuda:0', dtype=torch.float64)
tensor([-2.3765, -3.1159, -3.2287, -3.7095, -3.6234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0303, device='cuda:0', dtype=torch.float64)
tensor([-2.3926, -3.1060, -3.2301, -3.7502, -3.6345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0132, device='cuda:0', dtype=torch.float64)
tensor([-2.4084, -3.1023, -3.2307, -3.7912, -3.6573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6452, device='cuda:0', dtype=torch.float64)
tensor([-2.4101, -3.0843, -3.2344, -3.7863, -3.6578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3059, device='cuda:0', dtype=torch.float64)
tensor([-2.4119, -3.0586, -3.2414, -3.7583, -3.6411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9150, device='cuda:0', dtype=torch.float64)
tensor([-2.4101, -3.0285, -3.2457, -3.7068, -3.6233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9662, device='cuda:0', dtype=torch.float64)
tensor([-2.3997, -3.0003, -3.2614, -3.6993, -3.5926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9140, device='cuda:0', dtype=torch.float64)
tensor([-2.3778, -2.9718, -3.2794, -3.7070, -3.5736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8412, device='cuda:0', dtype=torch.float64)
tensor([-2.3469, -2.9664, -3.3066, -3.7093, -3.5579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1226, device='cuda:0', dtype=torch.float64)
tensor([-2.3335, -2.9951, -3.3264, -3.7101, -3.5591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8684, device='cuda:0', dtype=torch.float64)
tensor([-2.3203, -3.0304, -3.3376, -3.7078, -3.5649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6141, device='cuda:0', dtype=torch.float64)
tensor([-2.3012, -3.0573, -3.3400, -3.6971, -3.5828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1625, device='cuda:0', dtype=torch.float64)
tensor([-2.2905, -3.0829, -3.3319, -3.6763, -3.5987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1454, device='cuda:0', dtype=torch.float64)
tensor([-2.2774, -3.1035, -3.3218, -3.6567, -3.6068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1540, device='cuda:0', dtype=torch.float64)
tensor([-2.2805, -3.1330, -3.2964, -3.6148, -3.6219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0136, device='cuda:0', dtype=torch.float64)
tensor([-2.2906, -3.1632, -3.2690, -3.5746, -3.6304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1285, device='cuda:0', dtype=torch.float64)
tensor([-2.3085, -3.2102, -3.2426, -3.5404, -3.6550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1553, device='cuda:0', dtype=torch.float64)
tensor([-2.3184, -3.2508, -3.2266, -3.5221, -3.6717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0234, device='cuda:0', dtype=torch.float64)
tensor([-2.3325, -3.2839, -3.2142, -3.5154, -3.6712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1679, device='cuda:0', dtype=torch.float64)
tensor([-2.3583, -3.3027, -3.2041, -3.5401, -3.6805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1543, device='cuda:0', dtype=torch.float64)
tensor([-2.3639, -3.3030, -3.2107, -3.5163, -3.6638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9283, device='cuda:0', dtype=torch.float64)
tensor([-2.3521, -3.3070, -3.2234, -3.5119, -3.6561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4260, device='cuda:0', dtype=torch.float64)
tensor([-2.3540, -3.3052, -3.2347, -3.5335, -3.6538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7971, device='cuda:0', dtype=torch.float64)
tensor([-2.3612, -3.3016, -3.2395, -3.5520, -3.6509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2049, device='cuda:0', dtype=torch.float64)
tensor([-2.3797, -3.3049, -3.2325, -3.5358, -3.6490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8896, device='cuda:0', dtype=torch.float64)
tensor([-2.3845, -3.3157, -3.2415, -3.5380, -3.6479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6086, device='cuda:0', dtype=torch.float64)
tensor([-2.3971, -3.3304, -3.2439, -3.5373, -3.6448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8798, device='cuda:0', dtype=torch.float64)
tensor([-2.4114, -3.3404, -3.2349, -3.5640, -3.6461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1941, device='cuda:0', dtype=torch.float64)
tensor([-2.4203, -3.3480, -3.2238, -3.5597, -3.6528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8528, device='cuda:0', dtype=torch.float64)
tensor([-2.4226, -3.3509, -3.2145, -3.5665, -3.6657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0878, device='cuda:0', dtype=torch.float64)
tensor([-2.4198, -3.3386, -3.2061, -3.5819, -3.6703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6674, device='cuda:0', dtype=torch.float64)
tensor([-2.4195, -3.3226, -3.2134, -3.6154, -3.6875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7770, device='cuda:0', dtype=torch.float64)
tensor([-2.4239, -3.2990, -3.1891, -3.6176, -3.6751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0331, device='cuda:0', dtype=torch.float64)
tensor([-2.4189, -3.2728, -3.1708, -3.6203, -3.6619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7192, device='cuda:0', dtype=torch.float64)
tensor([-2.4191, -3.2567, -3.1642, -3.6378, -3.6552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9046, device='cuda:0', dtype=torch.float64)
tensor([-2.4220, -3.2505, -3.1372, -3.7017, -3.6516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0759, device='cuda:0', dtype=torch.float64)
tensor([-2.4391, -3.2489, -3.1050, -4.3052, -3.6537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4970, device='cuda:0', dtype=torch.float64)
tensor([-2.4415, -3.2377, -3.1000, -3.6919, -3.6460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4959, device='cuda:0', dtype=torch.float64)
tensor([-2.4285, -3.2290, -3.1004, -3.6363, -3.6325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6918, device='cuda:0', dtype=torch.float64)
tensor([-2.4155, -3.2213, -3.1102, -3.6820, -3.6177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9920, device='cuda:0', dtype=torch.float64)
tensor([-2.4020, -3.2159, -3.1245, -3.6648, -3.6226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7314, device='cuda:0', dtype=torch.float64)
tensor([-2.3995, -3.2154, -3.1366, -3.6257, -3.6358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6623, device='cuda:0', dtype=torch.float64)
tensor([-2.3951, -3.2130, -3.1479, -3.6297, -3.6334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9747, device='cuda:0', dtype=torch.float64)
tensor([-2.3884, -3.2196, -3.1599, -3.6526, -3.6241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7690, device='cuda:0', dtype=torch.float64)
tensor([-2.3884, -3.2361, -3.1714, -3.6995, -3.6172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3632, device='cuda:0', dtype=torch.float64)
tensor([-2.3926, -3.2113, -3.1618, -3.7198, -3.6172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9564, device='cuda:0', dtype=torch.float64)
tensor([-2.3952, -3.1857, -3.1535, -3.7459, -3.6197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2670, device='cuda:0', dtype=torch.float64)
tensor([-2.4057, -3.2049, -3.1439, -3.7607, -3.6231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0564, device='cuda:0', dtype=torch.float64)
tensor([-2.4242, -3.2966, -3.1433, -3.7717, -3.6374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2567, device='cuda:0', dtype=torch.float64)
tensor([-2.4559, -3.2856, -3.1568, -3.8029, -3.6594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4400, device='cuda:0', dtype=torch.float64)
tensor([-2.5012, -3.2840, -3.1476, -3.8324, -3.6689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1770, device='cuda:0', dtype=torch.float64)
tensor([-2.5437, -3.2382, -3.1362, -3.7886, -3.6687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0684, device='cuda:0', dtype=torch.float64)
tensor([-2.5881, -3.2455, -3.1330, -3.7878, -3.6907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8827, device='cuda:0', dtype=torch.float64)
tensor([-2.6167, -3.2400, -3.1465, -3.7666, -3.7121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6998, device='cuda:0', dtype=torch.float64)
tensor([-2.6467, -3.2496, -3.1781, -3.7682, -3.7310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3166, device='cuda:0', dtype=torch.float64)
tensor([-2.6698, -3.2596, -3.2270, -3.8051, -3.7505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7931, device='cuda:0', dtype=torch.float64)
tensor([-2.6886, -3.2766, -3.2562, -3.8264, -3.7636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1519, device='cuda:0', dtype=torch.float64)
tensor([-2.7103, -3.2943, -3.3068, -3.8915, -3.7719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9437, device='cuda:0', dtype=torch.float64)
tensor([-2.7343, -3.3123, -3.3217, -3.8355, -3.7601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9864, device='cuda:0', dtype=torch.float64)
tensor([-2.7338, -3.3134, -3.2881, -3.6778, -3.7272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9374, device='cuda:0', dtype=torch.float64)
tensor([-2.7330, -3.3279, -3.2716, -3.6152, -3.7253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7394, device='cuda:0', dtype=torch.float64)
tensor([-2.7035, -3.3371, -3.2863, -3.6419, -3.7282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1743, device='cuda:0', dtype=torch.float64)
tensor([-2.6706, -3.3405, -3.3301, -3.6966, -3.7359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2950, device='cuda:0', dtype=torch.float64)
tensor([-2.6363, -3.3268, -3.3589, -3.7521, -3.7326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0000, device='cuda:0', dtype=torch.float64)
tensor([-2.5924, -3.3107, -3.3417, -3.6865, -3.7281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9872, device='cuda:0', dtype=torch.float64)
tensor([-2.5401, -3.2999, -3.3305, -3.6533, -3.7319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9805, device='cuda:0', dtype=torch.float64)
tensor([-2.5031, -3.3068, -3.3312, -3.6891, -3.7530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9002, device='cuda:0', dtype=torch.float64)
tensor([-2.4786, -3.3133, -3.3362, -3.7444, -3.7741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9857, device='cuda:0', dtype=torch.float64)
tensor([-2.4551, -3.3031, -3.3277, -3.7519, -3.7746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3272, device='cuda:0', dtype=torch.float64)
tensor([-2.4449, -3.2935, -3.3154, -3.7312, -3.7699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1219, device='cuda:0', dtype=torch.float64)
tensor([-2.4499, -3.3131, -3.3174, -3.7586, -3.7887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7767, device='cuda:0', dtype=torch.float64)
tensor([-2.4468, -3.3339, -3.3247, -3.8298, -3.8056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6451, device='cuda:0', dtype=torch.float64)
tensor([-2.4387, -3.3192, -3.3388, -3.8147, -3.7954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9343, device='cuda:0', dtype=torch.float64)
tensor([-2.4265, -3.2768, -3.3521, -3.7803, -3.7629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7531, device='cuda:0', dtype=torch.float64)
tensor([-2.4131, -3.2497, -3.3582, -3.7818, -3.7324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9473, device='cuda:0', dtype=torch.float64)
tensor([-2.4124, -3.2518, -3.3638, -3.8201, -3.7129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8859, device='cuda:0', dtype=torch.float64)
tensor([-2.4190, -3.2578, -3.3746, -3.8706, -3.7119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0603, device='cuda:0', dtype=torch.float64)
tensor([-2.4281, -3.2666, -3.3667, -3.8669, -3.7180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3423, device='cuda:0', dtype=torch.float64)
tensor([-2.4562, -3.2984, -3.3427, -3.8242, -3.7355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9115, device='cuda:0', dtype=torch.float64)
tensor([-2.4906, -3.3332, -3.3263, -3.7697, -3.7694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9410, device='cuda:0', dtype=torch.float64)
tensor([-2.5275, -3.3701, -3.3081, -3.7315, -3.8044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7662, device='cuda:0', dtype=torch.float64)
tensor([-2.5708, -3.4041, -3.2971, -3.7107, -3.8312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3873, device='cuda:0', dtype=torch.float64)
tensor([-2.6067, -3.4350, -3.2955, -3.7149, -3.8388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9782, device='cuda:0', dtype=torch.float64)
tensor([-2.6419, -3.4619, -3.2952, -3.7095, -3.8577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9034, device='cuda:0', dtype=torch.float64)
tensor([-2.6691, -3.4991, -3.3017, -3.7744, -3.8584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3302, device='cuda:0', dtype=torch.float64)
tensor([-2.6809, -3.5418, -3.3248, -3.9656, -3.8516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7181, device='cuda:0', dtype=torch.float64)
tensor([-2.6819, -3.5373, -3.3514, -4.0213, -3.8639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9437, device='cuda:0', dtype=torch.float64)
tensor([-2.6967, -3.5319, -3.3628, -3.9387, -3.8873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0092, device='cuda:0', dtype=torch.float64)
tensor([-2.7199, -3.5417, -3.3749, -3.8031, -3.9175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9655, device='cuda:0', dtype=torch.float64)
tensor([-2.7601, -3.5630, -3.4128, -3.7083, -3.9571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0448, device='cuda:0', dtype=torch.float64)
tensor([-2.7938, -3.5980, -3.4613, -3.6925, -4.0084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8461, device='cuda:0', dtype=torch.float64)
tensor([-2.8146, -3.6441, -3.5111, -3.7232, -4.0641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5300, device='cuda:0', dtype=torch.float64)
tensor([-2.8277, -3.6795, -3.5492, -3.7716, -4.0957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9971, device='cuda:0', dtype=torch.float64)
tensor([-2.8260, -3.6575, -3.5639, -3.7485, -4.0842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7835, device='cuda:0', dtype=torch.float64)
tensor([-2.8245, -3.5883, -3.5747, -3.7348, -4.0561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9184, device='cuda:0', dtype=torch.float64)
tensor([-2.8382, -3.5450, -3.5795, -3.7743, -4.0408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7910, device='cuda:0', dtype=torch.float64)
tensor([-2.8553, -3.5386, -3.5728, -3.8460, -4.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7208, device='cuda:0', dtype=torch.float64)
tensor([-2.8764, -3.5396, -3.5584, -3.9164, -4.0548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2589, device='cuda:0', dtype=torch.float64)
tensor([-2.8953, -3.5322, -3.5348, -4.0035, -4.0726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9035, device='cuda:0', dtype=torch.float64)
tensor([-2.9056, -3.5224, -3.5200, -4.0183, -4.0891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7709, device='cuda:0', dtype=torch.float64)
tensor([-2.9258, -3.5279, -3.5083, -3.9991, -4.0842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0409, device='cuda:0', dtype=torch.float64)
tensor([-2.9280, -3.5780, -3.5094, -4.0125, -4.0641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3603, device='cuda:0', dtype=torch.float64)
tensor([-2.9293, -3.8796, -3.5179, -4.1197, -4.0617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1337, device='cuda:0', dtype=torch.float64)
tensor([-2.9510, -4.3908, -3.5299, -4.1162, -4.0960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0798, device='cuda:0', dtype=torch.float64)
tensor([-2.9759, -4.0288, -3.5272, -3.9520, -4.0565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2965, device='cuda:0', dtype=torch.float64)
tensor([-2.9962, -3.6162, -3.5360, -3.8683, -4.0418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7065, device='cuda:0', dtype=torch.float64)
tensor([-3.0241, -3.5025, -3.5398, -3.8555, -4.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7584, device='cuda:0', dtype=torch.float64)
tensor([-3.0566, -3.5010, -3.5548, -3.8835, -4.2499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9545, device='cuda:0', dtype=torch.float64)
tensor([-3.0554, -3.5108, -3.5714, -3.9350, -4.3006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8068, device='cuda:0', dtype=torch.float64)
tensor([-3.0474, -3.5069, -3.5884, -3.9930, -4.2619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4889, device='cuda:0', dtype=torch.float64)
tensor([-3.0259, -3.5025, -3.6045, -4.0279, -4.1150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1515, device='cuda:0', dtype=torch.float64)
tensor([-3.0213, -3.4893, -3.6424, -4.0388, -3.9676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8913, device='cuda:0', dtype=torch.float64)
tensor([-3.0309, -3.5036, -3.6962, -4.0590, -3.9388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0910, device='cuda:0', dtype=torch.float64)
tensor([-3.0641, -3.5610, -3.7519, -4.1124, -4.0176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0141, device='cuda:0', dtype=torch.float64)
tensor([-3.0756, -3.6022, -3.7793, -4.1410, -4.0703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1506, device='cuda:0', dtype=torch.float64)
tensor([-3.0195, -3.6238, -3.7774, -4.1590, -4.0301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2316, device='cuda:0', dtype=torch.float64)
tensor([-2.9828, -3.6244, -3.7458, -4.1374, -3.9644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8878, device='cuda:0', dtype=torch.float64)
tensor([-2.9787, -3.6561, -3.7060, -4.1167, -3.9794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9321, device='cuda:0', dtype=torch.float64)
tensor([-2.9878, -3.7138, -3.6866, -4.0945, -4.0410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6286, device='cuda:0', dtype=torch.float64)
tensor([-3.0008, -3.7750, -3.6865, -4.0612, -4.1111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7780, device='cuda:0', dtype=torch.float64)
tensor([-3.0185, -3.8248, -3.6985, -4.0347, -4.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0743, device='cuda:0', dtype=torch.float64)
tensor([-3.0278, -3.8582, -3.7086, -4.0350, -4.1877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8926, device='cuda:0', dtype=torch.float64)
tensor([-3.0355, -3.8956, -3.7324, -4.0855, -4.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7295, device='cuda:0', dtype=torch.float64)
tensor([-3.0391, -3.9212, -3.7515, -4.1326, -4.2668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4095, device='cuda:0', dtype=torch.float64)
tensor([-3.0464, -3.9292, -3.7492, -4.0820, -4.3107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9444, device='cuda:0', dtype=torch.float64)
tensor([-3.0385, -3.9358, -3.7543, -4.0746, -4.3351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8601, device='cuda:0', dtype=torch.float64)
tensor([-3.0292, -3.9464, -3.7550, -4.0570, -4.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8176, device='cuda:0', dtype=torch.float64)
tensor([-3.0081, -3.9656, -3.7816, -4.0847, -4.3945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4999, device='cuda:0', dtype=torch.float64)
tensor([-2.9955, -3.9849, -3.8062, -4.1299, -4.4269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8050, device='cuda:0', dtype=torch.float64)
tensor([-2.9933, -3.9811, -3.8164, -4.1235, -4.4486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8334, device='cuda:0', dtype=torch.float64)
tensor([-2.9835, -4.0001, -3.8466, -4.1390, -4.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3823, device='cuda:0', dtype=torch.float64)
tensor([-2.9660, -3.9672, -3.8413, -4.0732, -4.4778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9115, device='cuda:0', dtype=torch.float64)
tensor([-2.9697, -3.9600, -3.8271, -4.0414, -4.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9057, device='cuda:0', dtype=torch.float64)
tensor([-2.9909, -3.9905, -3.8198, -4.1707, -4.4969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9537, device='cuda:0', dtype=torch.float64)
tensor([-3.0213, -4.0729, -3.8277, -4.6541, -4.5509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6371, device='cuda:0', dtype=torch.float64)
tensor([-3.0264, -4.1228, -3.8330, -4.5841, -4.5489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1199, device='cuda:0', dtype=torch.float64)
tensor([-3.0291, -4.1040, -3.8203, -4.2610, -4.5241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7402, device='cuda:0', dtype=torch.float64)
tensor([-3.0411, -4.0417, -3.8197, -4.0671, -4.5082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0675, device='cuda:0', dtype=torch.float64)
tensor([-3.0486, -4.0347, -3.8405, -4.0858, -4.4788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6930, device='cuda:0', dtype=torch.float64)
tensor([-3.0843, -4.0770, -3.8802, -4.2514, -4.5301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8815, device='cuda:0', dtype=torch.float64)
tensor([-3.1525, -4.1269, -3.9167, -4.6323, -4.6907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0362, device='cuda:0', dtype=torch.float64)
tensor([-3.2068, -4.0752, -3.9235, -5.0886, -4.7332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0691, device='cuda:0', dtype=torch.float64)
tensor([-3.2336, -3.9493, -3.8813, -4.5699, -4.6477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7500, device='cuda:0', dtype=torch.float64)
tensor([-3.2734, -3.8955, -3.8506, -4.2306, -4.6485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5071, device='cuda:0', dtype=torch.float64)
tensor([-3.3327, -3.9156, -3.8526, -4.1008, -4.8110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8490, device='cuda:0', dtype=torch.float64)
tensor([-3.4018, -3.9883, -3.8755, -4.1018, -5.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2145, device='cuda:0', dtype=torch.float64)
tensor([-3.4454, -4.0640, -3.8939, -4.1854, -5.4516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6353, device='cuda:0', dtype=torch.float64)
tensor([-3.4787, -4.1022, -3.8890, -4.2892, -5.3726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8105, device='cuda:0', dtype=torch.float64)
tensor([-3.4824, -4.0770, -3.8755, -4.3178, -5.0575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8880, device='cuda:0', dtype=torch.float64)
tensor([-3.4811, -4.0449, -3.8836, -4.3084, -4.7935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6645, device='cuda:0', dtype=torch.float64)
tensor([-3.4879, -4.0281, -3.9015, -4.3298, -4.6399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9438, device='cuda:0', dtype=torch.float64)
tensor([-3.5163, -4.0486, -3.9172, -4.3587, -4.6031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8624, device='cuda:0', dtype=torch.float64)
tensor([-3.5481, -4.0836, -3.9423, -4.4307, -4.6014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9858, device='cuda:0', dtype=torch.float64)
tensor([-3.5911, -4.1333, -3.9615, -4.5293, -4.6182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4339, device='cuda:0', dtype=torch.float64)
tensor([-3.6301, -4.1716, -3.9749, -4.5894, -4.6431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7945, device='cuda:0', dtype=torch.float64)
tensor([-3.6764, -4.2252, -3.9942, -4.7110, -4.6863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7055, device='cuda:0', dtype=torch.float64)
tensor([-3.7183, -4.2733, -4.0073, -4.7477, -4.7262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7391, device='cuda:0', dtype=torch.float64)
tensor([-3.7765, -4.3212, -4.0171, -4.7370, -4.8063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3901, device='cuda:0', dtype=torch.float64)
tensor([-3.8441, -4.3801, -4.0385, -4.7077, -4.8839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7595, device='cuda:0', dtype=torch.float64)
tensor([-3.9088, -4.4093, -4.0658, -4.6605, -4.9545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7879, device='cuda:0', dtype=torch.float64)
tensor([-3.9716, -4.4314, -4.0999, -4.6082, -5.0262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9538, device='cuda:0', dtype=torch.float64)
tensor([-3.9917, -4.4234, -4.1118, -4.5539, -5.0149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8655, device='cuda:0', dtype=torch.float64)
tensor([-4.0193, -4.4088, -4.1095, -4.4993, -4.9881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1576, device='cuda:0', dtype=torch.float64)
tensor([-4.0450, -4.4186, -4.0933, -4.4606, -4.9569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6620, device='cuda:0', dtype=torch.float64)
tensor([-4.0895, -4.4575, -4.1062, -4.4752, -4.9423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7661, device='cuda:0', dtype=torch.float64)
tensor([-4.1225, -4.5249, -4.1459, -4.5892, -4.9243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9783, device='cuda:0', dtype=torch.float64)
tensor([-4.1541, -4.6057, -4.2174, -4.7996, -4.9373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4040, device='cuda:0', dtype=torch.float64)
tensor([-4.1811, -4.6871, -4.3082, -5.2607, -4.9812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7333, device='cuda:0', dtype=torch.float64)
tensor([-4.2006, -4.7481, -4.3929, -5.9576, -5.0226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6309, device='cuda:0', dtype=torch.float64)
tensor([-4.2364, -4.7715, -4.4580, -6.2584, -5.0720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8363, device='cuda:0', dtype=torch.float64)
tensor([-4.2691, -4.7898, -4.5473, -6.3863, -5.1080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7955, device='cuda:0', dtype=torch.float64)
tensor([-4.2981, -4.8102, -4.6151, -6.5212, -5.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7984, device='cuda:0', dtype=torch.float64)
tensor([-4.3599, -4.8136, -4.6514, -6.9325, -5.2597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0126, device='cuda:0', dtype=torch.float64)
tensor([-4.4566, -4.8495, -4.6342, -7.8291, -5.3613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6080, device='cuda:0', dtype=torch.float64)
tensor([-4.4968, -4.8914, -4.6103, -8.3128, -5.4776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7664, device='cuda:0', dtype=torch.float64)
tensor([-4.5657, -4.9359, -4.5794, -9.7388, -5.5938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7503, device='cuda:0', dtype=torch.float64)
tensor([-4.5619, -4.9817, -4.5711, -9.5296, -5.6829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5922, device='cuda:0', dtype=torch.float64)
tensor([-4.4943, -5.0442, -4.5953, -7.9916, -5.7092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9983, device='cuda:0', dtype=torch.float64)
tensor([-4.3799, -5.0977, -4.6492, -6.1744, -5.7122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0794, device='cuda:0', dtype=torch.float64)
tensor([-4.3504, -5.1672, -4.7043, -5.6976, -5.7285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9101, device='cuda:0', dtype=torch.float64)
tensor([-4.3682, -5.2276, -4.6911, -5.6888, -5.7463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6110, device='cuda:0', dtype=torch.float64)
tensor([-4.4030, -5.2786, -4.7344, -5.7896, -5.7843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7786, device='cuda:0', dtype=torch.float64)
tensor([-4.4397, -5.3317, -4.7948, -5.6353, -5.8703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0351, device='cuda:0', dtype=torch.float64)
tensor([-4.4667, -5.3916, -4.9732, -5.6361, -5.9519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0682, device='cuda:0', dtype=torch.float64)
tensor([-4.5040, -5.4713, -5.0744, -5.9271, -6.0575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4810, device='cuda:0', dtype=torch.float64)
tensor([-4.5118, -5.6575, -5.2585, -6.4629, -6.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6646, device='cuda:0', dtype=torch.float64)
tensor([-4.5307, -6.0207, -5.4563, -7.2732, -6.2863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9033, device='cuda:0', dtype=torch.float64)
tensor([-4.5669, -6.6367, -5.6888, -7.9220, -6.4749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9211, device='cuda:0', dtype=torch.float64)
tensor([-4.6261, -7.4397, -5.8714, -8.5218, -6.6956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3337, device='cuda:0', dtype=torch.float64)
tensor([-4.6830, -8.2349, -6.1506, -9.0951, -6.8964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7214, device='cuda:0', dtype=torch.float64)
tensor([ -4.7294,  -9.8458,  -6.8900, -10.4158,  -7.1330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8101, device='cuda:0', dtype=torch.float64)
tensor([ -4.8576, -12.1447,  -8.4029, -13.1271,  -7.5706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8174, device='cuda:0', dtype=torch.float64)
tensor([ -5.0710, -13.9326, -10.0747, -15.4563,  -8.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0233, device='cuda:0', dtype=torch.float64)
tensor([ -5.3503, -15.4838, -11.8537, -17.2022,  -8.8163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7324, device='cuda:0', dtype=torch.float64)
tensor([ -5.6062, -17.0737, -13.4329, -18.8337,  -9.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6840, device='cuda:0', dtype=torch.float64)
tensor([ -6.0379, -19.5425, -15.2944, -21.2769, -10.3973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0732, device='cuda:0', dtype=torch.float64)
tensor([ -6.4148, -21.4406, -16.8661, -22.8415, -10.9415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6741, device='cuda:0', dtype=torch.float64)
tensor([ -6.5526, -21.9823, -17.0389, -21.9587, -10.7677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6785, device='cuda:0', dtype=torch.float64)
tensor([ -6.5574, -20.1457, -16.0448, -18.9010,  -9.9862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4909, device='cuda:0', dtype=torch.float64)
tensor([ -6.7901, -17.6368, -14.5997, -15.3836,  -9.1808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5995, device='cuda:0', dtype=torch.float64)
tensor([ -7.3379, -14.8829, -13.2572, -11.9537,  -8.5961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8071, device='cuda:0', dtype=torch.float64)
tensor([ -8.1017, -13.0579, -12.3083,  -9.1296,  -8.4637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6850, device='cuda:0', dtype=torch.float64)
tensor([ -8.7490, -11.6273, -11.6128,  -7.8583,  -8.6978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7389, device='cuda:0', dtype=torch.float64)
tensor([ -9.2568,  -9.9825, -10.7272,  -7.6744,  -9.3685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8699, device='cuda:0', dtype=torch.float64)
tensor([ -9.7454,  -9.3730, -10.3442,  -7.8916, -10.4010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9732, device='cuda:0', dtype=torch.float64)
tensor([-10.0035,  -9.2401, -10.0596,  -8.2700, -11.6525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9716, device='cuda:0', dtype=torch.float64)
tensor([-10.1545,  -9.4389,  -9.8844,  -8.9711, -13.1184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8213, device='cuda:0', dtype=torch.float64)
tensor([-10.5551, -10.0692,  -9.9307,  -9.7905, -14.4055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6220, device='cuda:0', dtype=torch.float64)
tensor([-11.1823, -11.1497, -10.1486, -11.2844, -15.7926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7308, device='cuda:0', dtype=torch.float64)
tensor([-12.0612, -12.1720, -10.4201, -12.8901, -16.5319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6872, device='cuda:0', dtype=torch.float64)
tensor([-13.0544, -12.7352, -10.6794, -15.4043, -17.2872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5826, device='cuda:0', dtype=torch.float64)
tensor([-14.0685, -13.3414, -10.8831, -16.8878, -18.0349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6049, device='cuda:0', dtype=torch.float64)
tensor([-15.1169, -14.1118, -11.0876, -18.9124, -18.7543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8351, device='cuda:0', dtype=torch.float64)
tensor([-16.9101, -15.2023, -11.8732, -24.6285, -20.5002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4257, device='cuda:0', dtype=torch.float64)
tensor([-18.4153, -16.1999, -12.8024, -29.7614, -22.2520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3749, device='cuda:0', dtype=torch.float64)
tensor([-19.8062, -16.8649, -13.5763, -34.1162, -23.6581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7522, device='cuda:0', dtype=torch.float64)
tensor([-20.6866, -17.2077, -14.0115, -37.7136, -24.2787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9550, device='cuda:0', dtype=torch.float64)
tensor([-20.9400, -16.7110, -13.9343, -39.9152, -24.5878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7244, device='cuda:0', dtype=torch.float64)
tensor([-21.0547, -16.9100, -14.4454, -44.4205, -25.7827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9665, device='cuda:0', dtype=torch.float64)
tensor([-20.8835, -17.3890, -14.4685, -46.5214, -26.2528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7956, device='cuda:0', dtype=torch.float64)
tensor([-20.6156, -18.0196, -14.1898, -47.3812, -26.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8573, device='cuda:0', dtype=torch.float64)
tensor([-20.2780, -18.7060, -13.7111, -46.8173, -26.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5114, device='cuda:0', dtype=torch.float64)
tensor([-19.7714, -19.5575, -12.7640, -44.2069, -25.7211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6860, device='cuda:0', dtype=torch.float64)
tensor([-19.1438, -20.7222, -12.3480, -42.7700, -25.8782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6154, device='cuda:0', dtype=torch.float64)
tensor([-18.6215, -22.4751, -12.1169, -42.3763, -26.3536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6854, device='cuda:0', dtype=torch.float64)
tensor([-18.2457, -24.8764, -11.7555, -40.0328, -26.3820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5089, device='cuda:0', dtype=torch.float64)
tensor([-18.4027, -27.8974, -12.1923, -39.8363, -26.7874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4822, device='cuda:0', dtype=torch.float64)
tensor([-18.3939, -30.7076, -12.2953, -40.9303, -27.4335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6311, device='cuda:0', dtype=torch.float64)
tensor([-18.6167, -33.5024, -12.4544, -43.4032, -28.6238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7803, device='cuda:0', dtype=torch.float64)
tensor([-18.9203, -35.8043, -12.6591, -45.8994, -29.7575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4232, device='cuda:0', dtype=torch.float64)
tensor([-19.3340, -38.1922, -12.9249, -48.9274, -31.2447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9080, device='cuda:0', dtype=torch.float64)
tensor([-20.0715, -41.1053, -13.4937, -52.2271, -33.0811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7634, device='cuda:0', dtype=torch.float64)
tensor([-20.1439, -42.6006, -13.8789, -57.5454, -36.0221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8682, device='cuda:0', dtype=torch.float64)
tensor([-20.6822, -44.9168, -14.7523, -62.8285, -40.1048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7312, device='cuda:0', dtype=torch.float64)
tensor([-21.8114, -47.1552, -16.3459, -69.6191, -45.0801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9233, device='cuda:0', dtype=torch.float64)
tensor([-22.5623, -48.4125, -17.9860, -75.8369, -50.4045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3017, device='cuda:0', dtype=torch.float64)
tensor([-23.6074, -50.3543, -20.2382, -82.4136, -55.8732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8931, device='cuda:0', dtype=torch.float64)
tensor([-24.1454, -51.3718, -22.7957, -87.9670, -60.3707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6186, device='cuda:0', dtype=torch.float64)
tensor([-24.8176, -53.0037, -25.7865, -91.5550, -64.3145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6553, device='cuda:0', dtype=torch.float64)
tensor([-25.7607, -54.6360, -28.6442, -94.4785, -67.7936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6975, device='cuda:0', dtype=torch.float64)
tensor([-26.5547, -55.6929, -31.3172, -97.0589, -70.7869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8098, device='cuda:0', dtype=torch.float64)
tensor([ -27.1455,  -57.2537,  -34.5496, -100.6028,  -74.1912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6886, device='cuda:0', dtype=torch.float64)
tensor([ -28.0120,  -59.5602,  -37.1830, -102.9766,  -77.3847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6318, device='cuda:0', dtype=torch.float64)
tensor([ -29.5507,  -63.6353,  -40.4764, -107.9264,  -81.5950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8880, device='cuda:0', dtype=torch.float64)
tensor([ -31.6718,  -67.6466,  -45.3377, -114.6094,  -86.0301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0038, device='cuda:0', dtype=torch.float64)
tensor([ -33.6483,  -71.2448,  -50.5782, -121.7594,  -90.0511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7083, device='cuda:0', dtype=torch.float64)
tensor([ -34.5284,  -74.1549,  -53.7651, -126.9418,  -93.1827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8013, device='cuda:0', dtype=torch.float64)
tensor([ -35.8943,  -77.5895,  -57.3854, -132.2714,  -96.7661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5952, device='cuda:0', dtype=torch.float64)
tensor([ -36.7413,  -80.6238,  -60.0047, -137.6105, -100.4216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7696, device='cuda:0', dtype=torch.float64)
tensor([ -37.5406,  -82.8574,  -61.6393, -142.3111, -103.8017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.1660, device='cuda:0', dtype=torch.float64)
tensor([ -38.8470,  -86.4451,  -64.0467, -148.6681, -108.8842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3546, device='cuda:0', dtype=torch.float64)
tensor([ -40.6689,  -90.8072,  -67.3787, -156.3097, -114.7559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5946, device='cuda:0', dtype=torch.float64)
tensor([ -42.6001,  -95.8910,  -70.7109, -165.4376, -120.6410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3593, device='cuda:0', dtype=torch.float64)
tensor([ -44.3725, -100.3047,  -73.1413, -172.4766, -125.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3939, device='cuda:0', dtype=torch.float64)
tensor([ -45.6819, -103.1332,  -74.1419, -177.5628, -129.5731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0167, device='cuda:0', dtype=torch.float64)
tensor([ -46.9909, -105.1183,  -75.1296, -181.4276, -132.4741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6915, device='cuda:0', dtype=torch.float64)
tensor([ -47.8344, -106.4991,  -76.2610, -183.6786, -133.8260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9693, device='cuda:0', dtype=torch.float64)
tensor([ -48.2184, -107.6639,  -75.4778, -184.4793, -134.9666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3839, device='cuda:0', dtype=torch.float64)
tensor([ -50.1783, -109.5013,  -76.4237, -187.7029, -137.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6801, device='cuda:0', dtype=torch.float64)
tensor([ -50.5839, -109.0985,  -75.9715, -186.9373, -137.8217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6765, device='cuda:0', dtype=torch.float64)
tensor([ -53.0403, -110.9831,  -76.6696, -190.1518, -140.8352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9296, device='cuda:0', dtype=torch.float64)
tensor([ -58.1992, -116.7674,  -79.2920, -198.7660, -146.6405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6271, device='cuda:0', dtype=torch.float64)
tensor([ -63.9286, -122.4949,  -82.1934, -208.0576, -152.3647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4904, device='cuda:0', dtype=torch.float64)
tensor([ -68.1718, -126.1829,  -83.4463, -214.1337, -155.8458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3978, device='cuda:0', dtype=torch.float64)
tensor([ -71.9102, -130.1539,  -85.1592, -221.3348, -158.7587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3889, device='cuda:0', dtype=torch.float64)
tensor([ -77.7900, -136.6245,  -88.6949, -232.5579, -163.3363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6505, device='cuda:0', dtype=torch.float64)
tensor([ -84.4575, -145.6887,  -94.7826, -248.8753, -169.5898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4953, device='cuda:0', dtype=torch.float64)
tensor([ -89.6528, -153.0943,  -99.6371, -260.5210, -174.0166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4930, device='cuda:0', dtype=torch.float64)
tensor([ -94.0937, -160.0100, -103.7001, -270.8570, -177.4265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.6768, device='cuda:0', dtype=torch.float64)
tensor([ -91.5834, -158.0774, -100.6563, -265.0121, -174.5522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5385, device='cuda:0', dtype=torch.float64)
tensor([ -88.1524, -156.5539,  -97.9518, -258.6912, -171.9414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7799, device='cuda:0', dtype=torch.float64)
tensor([ -82.0159, -150.8765,  -91.8377, -244.8111, -166.5506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7462, device='cuda:0', dtype=torch.float64)
tensor([ -74.1615, -141.4232,  -83.4323, -224.8105, -158.0542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8299, device='cuda:0', dtype=torch.float64)
tensor([ -67.5146, -133.7940,  -77.2103, -206.5523, -150.5203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7643, device='cuda:0', dtype=torch.float64)
tensor([ -61.0510, -127.4225,  -72.4389, -190.0794, -142.7937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5906, device='cuda:0', dtype=torch.float64)
tensor([ -56.8655, -123.2140,  -69.7862, -178.6519, -137.1074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5374, device='cuda:0', dtype=torch.float64)
tensor([ -53.7757, -120.3318,  -67.4877, -171.1994, -132.0118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7085, device='cuda:0', dtype=torch.float64)
tensor([ -52.7205, -119.6271,  -67.4179, -169.5897, -128.6988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8859, device='cuda:0', dtype=torch.float64)
tensor([ -50.7531, -117.8260,  -66.3142, -166.8132, -124.7715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9050, device='cuda:0', dtype=torch.float64)
tensor([ -47.7416, -114.7670,  -63.0831, -160.9290, -119.5027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7840, device='cuda:0', dtype=torch.float64)
tensor([ -44.2244, -109.3197,  -58.3971, -151.9764, -113.4425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8293, device='cuda:0', dtype=torch.float64)
tensor([ -41.0798, -104.6520,  -54.6029, -145.2004, -107.0788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8227, device='cuda:0', dtype=torch.float64)
tensor([ -38.3077, -100.8952,  -50.9456, -139.2549, -101.5882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7810, device='cuda:0', dtype=torch.float64)
tensor([ -36.4069,  -97.2677,  -47.0228, -133.4775,  -96.4414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7238, device='cuda:0', dtype=torch.float64)
tensor([ -35.7474,  -94.1629,  -44.0869, -128.8976,  -92.4932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9290, device='cuda:0', dtype=torch.float64)
tensor([ -35.6038,  -90.9121,  -40.8949, -124.7046,  -89.5123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8903, device='cuda:0', dtype=torch.float64)
tensor([ -35.4865,  -88.7611,  -37.8865, -120.3879,  -86.9110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8090, device='cuda:0', dtype=torch.float64)
tensor([ -35.8182,  -88.8222,  -36.1716, -118.5349,  -86.0710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8797, device='cuda:0', dtype=torch.float64)
tensor([ -35.9950,  -89.7437,  -35.4359, -118.8546,  -86.8225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9559, device='cuda:0', dtype=torch.float64)
tensor([ -36.0136,  -90.9134,  -34.5688, -118.7410,  -88.3523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7999, device='cuda:0', dtype=torch.float64)
tensor([ -35.6347,  -92.1043,  -33.1368, -118.1389,  -89.6995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8994, device='cuda:0', dtype=torch.float64)
tensor([ -34.7125,  -92.2415,  -30.8559, -115.2015,  -90.3020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3929, device='cuda:0', dtype=torch.float64)
tensor([ -34.1805,  -92.7512,  -29.0510, -113.5536,  -91.1221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8661, device='cuda:0', dtype=torch.float64)
tensor([ -33.6667,  -94.3162,  -27.6453, -113.4079,  -92.6624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8275, device='cuda:0', dtype=torch.float64)
tensor([ -33.2749,  -96.2636,  -27.0168, -114.2727,  -94.5857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8509, device='cuda:0', dtype=torch.float64)
tensor([ -32.9222,  -98.4489,  -26.9389, -115.2605,  -97.0570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7522, device='cuda:0', dtype=torch.float64)
tensor([ -32.3198, -100.4499,  -26.3928, -115.5178,  -99.1555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8129, device='cuda:0', dtype=torch.float64)
tensor([ -31.8003, -102.4230,  -25.6402, -116.0780, -101.5608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3856, device='cuda:0', dtype=torch.float64)
tensor([ -31.5936, -104.7422,  -25.3564, -117.8142, -103.8519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7109, device='cuda:0', dtype=torch.float64)
tensor([ -31.4915, -106.4185,  -25.1615, -118.8737, -105.3633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6896, device='cuda:0', dtype=torch.float64)
tensor([ -31.5631, -107.5620,  -25.1014, -119.9504, -106.3979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.1004, device='cuda:0', dtype=torch.float64)
tensor([ -31.3843, -108.2418,  -24.4777, -120.6041, -105.8633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7526, device='cuda:0', dtype=torch.float64)
tensor([ -30.8325, -108.1995,  -24.0428, -121.0975, -105.0783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5458, device='cuda:0', dtype=torch.float64)
tensor([ -30.3520, -108.4726,  -23.6409, -121.1647, -103.4402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6235, device='cuda:0', dtype=torch.float64)
tensor([ -30.2139, -108.8260,  -23.0263, -121.3444, -100.6401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6099, device='cuda:0', dtype=torch.float64)
tensor([ -30.1677, -109.2157,  -22.4387, -120.1848,  -97.8405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9098, device='cuda:0', dtype=torch.float64)
tensor([ -29.9984, -109.3745,  -21.7043, -118.9797,  -96.1762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8026, device='cuda:0', dtype=torch.float64)
tensor([ -29.4740, -109.9803,  -20.8780, -117.8052,  -96.2393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9002, device='cuda:0', dtype=torch.float64)
tensor([ -29.2834, -111.6674,  -20.6062, -117.3913,  -98.0077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7220, device='cuda:0', dtype=torch.float64)
tensor([ -29.1300, -113.2076,  -20.4935, -117.5990, -100.1799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5123, device='cuda:0', dtype=torch.float64)
tensor([ -29.2143, -114.1010,  -20.2067, -116.8778, -100.7578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6818, device='cuda:0', dtype=torch.float64)
tensor([ -29.3117, -114.4215,  -19.9849, -115.4462, -101.2801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0255, device='cuda:0', dtype=torch.float64)
tensor([ -29.4249, -115.7295,  -19.9251, -115.1869, -103.1777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7880, device='cuda:0', dtype=torch.float64)
tensor([ -29.0376, -116.6233,  -19.7981, -114.7841, -104.7142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7404, device='cuda:0', dtype=torch.float64)
tensor([ -28.7919, -116.7875,  -19.8674, -113.4947, -106.1982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.1306, device='cuda:0', dtype=torch.float64)
tensor([ -28.6175, -116.0901,  -20.1615, -110.9918, -107.8850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8963, device='cuda:0', dtype=torch.float64)
tensor([ -28.5331, -115.6432,  -20.3984, -109.6781, -109.1684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7567, device='cuda:0', dtype=torch.float64)
tensor([ -28.5937, -115.8807,  -21.1891, -108.7309, -111.9024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6916, device='cuda:0', dtype=torch.float64)
tensor([ -28.9820, -116.2116,  -22.2444, -108.2183, -114.8198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0028, device='cuda:0', dtype=torch.float64)
tensor([ -29.0479, -115.0177,  -23.0226, -106.2032, -115.2433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.1314, device='cuda:0', dtype=torch.float64)
tensor([ -28.7851, -114.4916,  -23.6257, -105.1683, -116.9534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8789, device='cuda:0', dtype=torch.float64)
tensor([ -28.6151, -115.0217,  -24.1641, -104.8697, -118.3664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8139, device='cuda:0', dtype=torch.float64)
tensor([ -28.7815, -116.5399,  -24.9400, -105.6193, -120.7635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.1857, device='cuda:0', dtype=torch.float64)
tensor([ -28.9320, -117.6382,  -26.3494, -106.2883, -122.3043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7682, device='cuda:0', dtype=torch.float64)
tensor([ -29.0195, -118.5881,  -28.1334, -107.9216, -124.1956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7333, device='cuda:0', dtype=torch.float64)
tensor([ -29.0393, -119.5428,  -29.7792, -110.0427, -125.9850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9730, device='cuda:0', dtype=torch.float64)
tensor([ -29.3024, -122.0866,  -31.6033, -113.3373, -128.9054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0760, device='cuda:0', dtype=torch.float64)
tensor([ -30.0764, -125.3625,  -34.2734, -120.5564, -132.0666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6761, device='cuda:0', dtype=torch.float64)
tensor([ -30.9346, -128.7096,  -36.5733, -126.9784, -135.6569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7888, device='cuda:0', dtype=torch.float64)
tensor([ -32.5226, -131.2648,  -39.1380, -131.9759, -139.2856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6705, device='cuda:0', dtype=torch.float64)
tensor([ -33.5684, -130.0105,  -39.4121, -130.3712, -140.1470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6073, device='cuda:0', dtype=torch.float64)
tensor([ -34.1059, -128.5204,  -38.6245, -126.4224, -140.3787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.2053, device='cuda:0', dtype=torch.float64)
tensor([ -34.0587, -126.0872,  -37.3183, -120.0615, -139.1306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6347, device='cuda:0', dtype=torch.float64)
tensor([ -34.5083, -124.2162,  -37.0371, -115.6814, -138.1888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8694, device='cuda:0', dtype=torch.float64)
tensor([ -34.8534, -122.2038,  -36.7310, -112.1602, -137.1080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6641, device='cuda:0', dtype=torch.float64)
tensor([ -35.2690, -119.5970,  -35.9911, -109.5490, -135.9440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6911, device='cuda:0', dtype=torch.float64)
tensor([ -35.4557, -117.1463,  -35.3588, -106.2826, -134.7109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3638, device='cuda:0', dtype=torch.float64)
tensor([ -35.9933, -115.3810,  -34.9228, -104.4714, -133.9804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7827, device='cuda:0', dtype=torch.float64)
tensor([ -36.4920, -112.4384,  -34.0028, -101.7531, -132.5937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7136, device='cuda:0', dtype=torch.float64)
tensor([ -36.6996, -109.1037,  -33.0648,  -99.0695, -131.2763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7889, device='cuda:0', dtype=torch.float64)
tensor([ -36.7082, -105.5458,  -32.1924,  -96.1472, -128.6281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7092, device='cuda:0', dtype=torch.float64)
tensor([ -36.3407, -103.2878,  -31.4663,  -94.1399, -126.9468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5217, device='cuda:0', dtype=torch.float64)
tensor([ -35.5929, -101.3670,  -30.7524,  -92.3514, -125.2098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.4113, device='cuda:0', dtype=torch.float64)
tensor([ -34.8506,  -99.9968,  -29.9401,  -90.1462, -123.2188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0464, device='cuda:0', dtype=torch.float64)
tensor([ -34.5960,  -98.9364,  -29.6258,  -89.2354, -123.1808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9445, device='cuda:0', dtype=torch.float64)
tensor([ -34.1314,  -97.6034,  -29.5719,  -88.8489, -122.7095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0085, device='cuda:0', dtype=torch.float64)
tensor([ -33.9779,  -96.6462,  -29.6140,  -88.6056, -122.8209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8210, device='cuda:0', dtype=torch.float64)
tensor([ -33.9645,  -95.9343,  -29.8127,  -88.0134, -123.3506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7762, device='cuda:0', dtype=torch.float64)
tensor([ -33.9122,  -96.1667,  -30.2179,  -88.3705, -124.3358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6509, device='cuda:0', dtype=torch.float64)
tensor([ -33.7043,  -96.7404,  -30.7491,  -88.4546, -126.2484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0244, device='cuda:0', dtype=torch.float64)
tensor([ -33.8285,  -97.8585,  -31.7422,  -88.8370, -129.9583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7990, device='cuda:0', dtype=torch.float64)
tensor([ -33.9321,  -97.5549,  -32.6297,  -87.8421, -131.5893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7687, device='cuda:0', dtype=torch.float64)
tensor([ -34.0447,  -96.6855,  -33.3631,  -86.4881, -131.4558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7303, device='cuda:0', dtype=torch.float64)
tensor([ -33.9892,  -95.6214,  -34.4249,  -85.9911, -132.1726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6515, device='cuda:0', dtype=torch.float64)
tensor([ -34.0614,  -94.7582,  -35.3534,  -85.3447, -132.4114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6691, device='cuda:0', dtype=torch.float64)
tensor([ -34.0558,  -94.4850,  -35.8932,  -85.1869, -133.3107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0340, device='cuda:0', dtype=torch.float64)
tensor([ -33.8175,  -93.1958,  -36.1014,  -84.8056, -132.5673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3349, device='cuda:0', dtype=torch.float64)
tensor([ -34.1850,  -92.6431,  -36.4910,  -84.7585, -132.6249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5923, device='cuda:0', dtype=torch.float64)
tensor([ -34.3679,  -92.6341,  -36.6618,  -84.8736, -132.7746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8110, device='cuda:0', dtype=torch.float64)
tensor([ -34.1034,  -92.9748,  -36.7591,  -85.2877, -133.2887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8250, device='cuda:0', dtype=torch.float64)
tensor([ -34.0960,  -93.2530,  -37.1081,  -85.7463, -134.8061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9328, device='cuda:0', dtype=torch.float64)
tensor([ -34.3224,  -92.5886,  -37.8546,  -85.8915, -136.0650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7052, device='cuda:0', dtype=torch.float64)
tensor([ -34.6468,  -91.3000,  -38.7653,  -85.2700, -136.7300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6514, device='cuda:0', dtype=torch.float64)
tensor([ -35.0645,  -90.2341,  -39.6186,  -84.6112, -137.6557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9267, device='cuda:0', dtype=torch.float64)
tensor([ -35.9760,  -89.7682,  -40.4674,  -84.0694, -137.9538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9781, device='cuda:0', dtype=torch.float64)
tensor([ -36.9400,  -89.7225,  -40.8451,  -83.9933, -138.5357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8460, device='cuda:0', dtype=torch.float64)
tensor([ -37.3985,  -89.5867,  -41.3892,  -84.2380, -139.4347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0427, device='cuda:0', dtype=torch.float64)
tensor([ -37.8973,  -89.5742,  -41.6524,  -84.8566, -140.1815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9097, device='cuda:0', dtype=torch.float64)
tensor([ -38.5412,  -89.3287,  -42.1239,  -85.6290, -140.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4912, device='cuda:0', dtype=torch.float64)
tensor([ -38.8898,  -88.8857,  -42.5476,  -86.2811, -141.7375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8813, device='cuda:0', dtype=torch.float64)
tensor([ -39.8030,  -88.7816,  -43.1738,  -87.4432, -143.6552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6654, device='cuda:0', dtype=torch.float64)
tensor([ -40.7082,  -88.7962,  -43.6399,  -88.1280, -144.6587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8248, device='cuda:0', dtype=torch.float64)
tensor([ -41.8067,  -88.9942,  -43.9913,  -88.8443, -144.7209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3788, device='cuda:0', dtype=torch.float64)
tensor([ -43.1777,  -90.0571,  -44.5047,  -90.0126, -145.2148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7330, device='cuda:0', dtype=torch.float64)
tensor([ -43.6293,  -90.8178,  -44.8178,  -90.4331, -145.1545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6759, device='cuda:0', dtype=torch.float64)
tensor([ -43.8437,  -91.9698,  -45.0095,  -90.4106, -145.0504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7611, device='cuda:0', dtype=torch.float64)
tensor([ -44.3664,  -93.2433,  -45.6942,  -90.3809, -145.3364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8652, device='cuda:0', dtype=torch.float64)
tensor([ -45.2319,  -94.9235,  -46.2251,  -89.7728, -145.8432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5616, device='cuda:0', dtype=torch.float64)
tensor([ -46.5966,  -96.7607,  -46.5469,  -89.5866, -146.3364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6498, device='cuda:0', dtype=torch.float64)
tensor([ -48.0726,  -98.6795,  -46.6193,  -88.9859, -146.6977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9811, device='cuda:0', dtype=torch.float64)
tensor([ -49.4762,  -99.8342,  -46.5321,  -87.7178, -146.3327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0532, device='cuda:0', dtype=torch.float64)
tensor([ -51.0471, -101.3479,  -47.0031,  -87.3361, -148.6255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0220, device='cuda:0', dtype=torch.float64)
tensor([ -52.2276, -102.7377,  -47.6183,  -87.4098, -151.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.1540, device='cuda:0', dtype=torch.float64)
tensor([ -53.3588, -104.8771,  -48.4326,  -87.7713, -156.1056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8412, device='cuda:0', dtype=torch.float64)
tensor([ -54.2020, -107.3626,  -49.4860,  -88.2442, -160.8635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4612, device='cuda:0', dtype=torch.float64)
tensor([ -55.4369, -110.5663,  -51.1420,  -89.6152, -167.3202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7917, device='cuda:0', dtype=torch.float64)
tensor([ -57.0799, -114.4670,  -52.8635,  -91.4006, -174.0820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9032, device='cuda:0', dtype=torch.float64)
tensor([ -59.2941, -118.7052,  -54.1057,  -92.7106, -180.7193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6321, device='cuda:0', dtype=torch.float64)
tensor([ -60.2757, -122.9103,  -55.1888,  -93.5319, -186.0598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6430, device='cuda:0', dtype=torch.float64)
tensor([ -61.7190, -127.1208,  -56.4863,  -94.4730, -191.8813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5360, device='cuda:0', dtype=torch.float64)
tensor([ -63.7607, -132.2590,  -57.6534,  -95.5196, -198.0674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8019, device='cuda:0', dtype=torch.float64)
tensor([ -64.6633, -135.0685,  -57.7983,  -95.2627, -200.7789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6397, device='cuda:0', dtype=torch.float64)
tensor([ -65.5115, -135.7501,  -57.1597,  -94.1125, -200.8977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9138, device='cuda:0', dtype=torch.float64)
tensor([ -66.0191, -133.7441,  -55.8942,  -91.8773, -198.3186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4364, device='cuda:0', dtype=torch.float64)
tensor([ -67.2985, -131.4103,  -55.0621,  -90.0354, -195.7314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8499, device='cuda:0', dtype=torch.float64)
tensor([ -68.5502, -128.0733,  -54.2673,  -88.0670, -192.1774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5316, device='cuda:0', dtype=torch.float64)
tensor([ -69.5781, -124.4454,  -53.7546,  -86.2248, -189.0838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5133, device='cuda:0', dtype=torch.float64)
tensor([ -69.9488, -120.9118,  -53.5468,  -84.6972, -185.1854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7589, device='cuda:0', dtype=torch.float64)
tensor([ -70.3369, -118.1629,  -53.4385,  -83.0059, -181.2785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9514, device='cuda:0', dtype=torch.float64)
tensor([ -71.9993, -116.3163,  -54.0421,  -82.7346, -179.8923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5981, device='cuda:0', dtype=torch.float64)
tensor([ -72.9042, -114.8243,  -54.3616,  -82.6889, -177.4383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8176, device='cuda:0', dtype=torch.float64)
tensor([ -74.3387, -113.5394,  -54.8338,  -82.9478, -175.6765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5975, device='cuda:0', dtype=torch.float64)
tensor([ -75.7039, -112.8280,  -55.1888,  -83.3503, -174.5922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6814, device='cuda:0', dtype=torch.float64)
tensor([ -77.2122, -112.1216,  -55.5185,  -84.0950, -172.8198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6576, device='cuda:0', dtype=torch.float64)
tensor([ -78.8253, -112.4705,  -56.3240,  -85.3252, -172.3436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8068, device='cuda:0', dtype=torch.float64)
tensor([ -80.6167, -112.2274,  -57.3983,  -86.7660, -171.8988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8825, device='cuda:0', dtype=torch.float64)
tensor([ -82.5023, -112.5918,  -58.2868,  -88.2403, -172.0935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7794, device='cuda:0', dtype=torch.float64)
tensor([ -84.6183, -113.0253,  -59.2195,  -89.5820, -172.2217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9383, device='cuda:0', dtype=torch.float64)
tensor([ -85.1373, -112.9728,  -59.4034,  -89.1953, -171.7097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6780, device='cuda:0', dtype=torch.float64)
tensor([ -86.2607, -112.6109,  -59.5021,  -89.2005, -171.0313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5624, device='cuda:0', dtype=torch.float64)
tensor([ -86.9842, -112.7488,  -59.3030,  -89.2305, -170.7541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6291, device='cuda:0', dtype=torch.float64)
tensor([ -86.4335, -112.6717,  -59.0583,  -88.1052, -170.2568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6849, device='cuda:0', dtype=torch.float64)
tensor([ -86.6990, -111.9313,  -58.5453,  -88.1424, -169.0443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7520, device='cuda:0', dtype=torch.float64)
tensor([ -86.2580, -112.5447,  -57.7942,  -87.8328, -168.7173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3954, device='cuda:0', dtype=torch.float64)
tensor([ -85.8516, -113.3948,  -56.8744,  -87.5391, -168.5537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6804, device='cuda:0', dtype=torch.float64)
tensor([ -85.1120, -113.9228,  -55.7246,  -86.2266, -167.9325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5249, device='cuda:0', dtype=torch.float64)
tensor([ -84.7826, -114.0775,  -54.9650,  -85.0325, -167.3769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3208, device='cuda:0', dtype=torch.float64)
tensor([ -84.7027, -113.7944,  -53.8556,  -83.7093, -166.1489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6309, device='cuda:0', dtype=torch.float64)
tensor([ -84.5077, -113.8577,  -53.2476,  -83.4254, -164.8229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9188, device='cuda:0', dtype=torch.float64)
tensor([ -83.4398, -113.9702,  -52.9593,  -83.0083, -163.7388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7701, device='cuda:0', dtype=torch.float64)
tensor([ -82.5059, -115.7681,  -52.8671,  -82.6951, -164.2186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6431, device='cuda:0', dtype=torch.float64)
tensor([ -81.3947, -114.9446,  -52.9985,  -82.9114, -162.2654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.3457, device='cuda:0', dtype=torch.float64)
tensor([ -81.3823, -114.0736,  -53.2344,  -83.3308, -161.2554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7471, device='cuda:0', dtype=torch.float64)
tensor([ -81.4529, -112.9804,  -53.1448,  -85.1524, -158.7774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7016, device='cuda:0', dtype=torch.float64)
tensor([ -81.4447, -112.9385,  -53.0327,  -87.2957, -156.1709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7854, device='cuda:0', dtype=torch.float64)
tensor([ -81.2172, -113.3646,  -53.0707,  -89.5304, -153.9451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7267, device='cuda:0', dtype=torch.float64)
tensor([ -80.3032, -113.7720,  -53.0160,  -89.9757, -152.7324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6164, device='cuda:0', dtype=torch.float64)
tensor([ -78.8632, -114.2618,  -52.8722,  -89.6267, -151.4273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9174, device='cuda:0', dtype=torch.float64)
tensor([ -79.0500, -114.9225,  -52.9087,  -90.3734, -150.2286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5227, device='cuda:0', dtype=torch.float64)
tensor([ -78.5837, -115.1861,  -52.8147,  -90.5479, -149.1749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9981, device='cuda:0', dtype=torch.float64)
tensor([ -79.7888, -116.2682,  -52.9766,  -92.1745, -149.0860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9216, device='cuda:0', dtype=torch.float64)
tensor([ -81.7952, -117.4554,  -53.4313,  -93.7210, -149.1306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5466, device='cuda:0', dtype=torch.float64)
tensor([ -84.1725, -118.3895,  -54.0749,  -95.0441, -149.3976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7626, device='cuda:0', dtype=torch.float64)
tensor([ -86.4964, -119.0886,  -54.7384,  -95.7770, -149.9284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8545, device='cuda:0', dtype=torch.float64)
tensor([ -89.3191, -120.2056,  -55.2248,  -96.8170, -150.5934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5060, device='cuda:0', dtype=torch.float64)
tensor([ -91.3779, -121.2420,  -55.4705,  -97.7015, -151.2236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7247, device='cuda:0', dtype=torch.float64)
tensor([ -93.3869, -122.1326,  -55.2503,  -98.4855, -152.4945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5488, device='cuda:0', dtype=torch.float64)
tensor([ -95.1762, -122.9456,  -55.1336,  -98.9882, -153.6802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6077, device='cuda:0', dtype=torch.float64)
tensor([ -98.1409, -124.4960,  -55.0865, -100.1858, -155.2733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9444, device='cuda:0', dtype=torch.float64)
tensor([ -98.7470, -124.8618,  -54.2810,  -99.5073, -156.6226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6431, device='cuda:0', dtype=torch.float64)
tensor([ -98.9049, -125.0947,  -53.4577,  -98.2285, -157.9432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6917, device='cuda:0', dtype=torch.float64)
tensor([ -96.7828, -124.3148,  -52.1974,  -95.8197, -158.9187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5846, device='cuda:0', dtype=torch.float64)
tensor([ -94.4437, -123.5069,  -50.9897,  -94.1021, -159.1683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5932, device='cuda:0', dtype=torch.float64)
tensor([ -93.4812, -123.4545,  -50.1932,  -93.3996, -159.8623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0265, device='cuda:0', dtype=torch.float64)
tensor([ -92.7534, -123.7202,  -50.0126,  -92.8431, -161.2967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8435, device='cuda:0', dtype=torch.float64)
tensor([ -92.0163, -124.6082,  -50.0270,  -92.3481, -162.9208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8123, device='cuda:0', dtype=torch.float64)
tensor([ -91.3454, -125.8183,  -50.4810,  -92.4484, -165.6261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9401, device='cuda:0', dtype=torch.float64)
tensor([ -91.6824, -127.4681,  -51.0915,  -92.8537, -169.0861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5482, device='cuda:0', dtype=torch.float64)
tensor([ -92.2248, -129.3335,  -51.6295,  -93.4404, -172.0326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6428, device='cuda:0', dtype=torch.float64)
tensor([ -92.1341, -130.6465,  -51.9578,  -92.7161, -173.7956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7693, device='cuda:0', dtype=torch.float64)
tensor([ -91.5502, -131.8686,  -52.3738,  -91.8813, -174.9077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6794, device='cuda:0', dtype=torch.float64)
tensor([ -90.5385, -132.2172,  -52.5575,  -90.4709, -174.0803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6214, device='cuda:0', dtype=torch.float64)
tensor([ -91.0778, -132.3952,  -52.5524,  -89.5042, -172.4093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6002, device='cuda:0', dtype=torch.float64)
tensor([ -91.5806, -133.1814,  -52.4113,  -88.9237, -172.2928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6518, device='cuda:0', dtype=torch.float64)
tensor([ -92.0219, -134.8854,  -52.9327,  -89.1883, -174.3609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6256, device='cuda:0', dtype=torch.float64)
tensor([ -92.3402, -135.5395,  -53.0313,  -89.8411, -173.3769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7268, device='cuda:0', dtype=torch.float64)
tensor([ -93.4372, -135.9814,  -52.8257,  -90.3098, -171.6076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7684, device='cuda:0', dtype=torch.float64)
tensor([ -93.6162, -135.5557,  -52.6476,  -89.8134, -170.9323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7335, device='cuda:0', dtype=torch.float64)
tensor([ -94.5387, -135.3531,  -52.9475,  -88.8754, -170.9585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7019, device='cuda:0', dtype=torch.float64)
tensor([ -96.7723, -135.5637,  -53.5659,  -88.7450, -171.2314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4444, device='cuda:0', dtype=torch.float64)
tensor([ -99.2904, -135.7879,  -54.2881,  -89.3068, -172.0256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4058, device='cuda:0', dtype=torch.float64)
tensor([-102.4490, -136.2523,  -55.2294,  -90.2385, -172.8980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7263, device='cuda:0', dtype=torch.float64)
tensor([-105.8763, -136.6560,  -56.2996,  -91.2697, -173.7469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5906, device='cuda:0', dtype=torch.float64)
tensor([-107.1873, -136.3717,  -56.8761,  -91.2966, -174.0239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6467, device='cuda:0', dtype=torch.float64)
tensor([-107.0717, -135.8998,  -57.0208,  -90.4937, -174.2657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8914, device='cuda:0', dtype=torch.float64)
tensor([-105.7086, -135.0992,  -57.1050,  -89.9938, -174.2380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8129, device='cuda:0', dtype=torch.float64)
tensor([-105.6012, -134.1531,  -57.1949,  -89.6440, -173.9165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7002, device='cuda:0', dtype=torch.float64)
tensor([-104.0513, -132.9910,  -56.9621,  -88.8941, -173.5303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6792, device='cuda:0', dtype=torch.float64)
tensor([-101.3828, -132.3749,  -56.9982,  -87.9545, -174.4295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5945, device='cuda:0', dtype=torch.float64)
tensor([-100.0339, -132.0741,  -57.2391,  -87.8175, -175.7338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5299, device='cuda:0', dtype=torch.float64)
tensor([ -98.0320, -132.1124,  -57.6624,  -86.9170, -177.9800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6533, device='cuda:0', dtype=torch.float64)
tensor([ -96.4405, -132.2390,  -58.4942,  -85.4954, -180.5549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7710, device='cuda:0', dtype=torch.float64)
tensor([ -96.2519, -132.7737,  -59.6684,  -85.0041, -183.2889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7481, device='cuda:0', dtype=torch.float64)
tensor([ -96.0532, -133.3181,  -60.4339,  -84.9172, -185.7203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5438, device='cuda:0', dtype=torch.float64)
tensor([ -96.3064, -134.6638,  -61.2234,  -85.5916, -188.6366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3978, device='cuda:0', dtype=torch.float64)
tensor([ -95.9039, -136.1617,  -62.3747,  -86.0404, -192.2052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7510, device='cuda:0', dtype=torch.float64)
tensor([ -95.1568, -136.6350,  -63.1784,  -85.5544, -194.0173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4459, device='cuda:0', dtype=torch.float64)
tensor([ -94.6464, -136.8985,  -64.1778,  -84.6627, -196.3394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5937, device='cuda:0', dtype=torch.float64)
tensor([ -94.4554, -137.4299,  -65.4192,  -83.3092, -200.1642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8001, device='cuda:0', dtype=torch.float64)
tensor([ -94.2901, -137.1741,  -66.5949,  -81.3404, -203.3584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6983, device='cuda:0', dtype=torch.float64)
tensor([ -95.0328, -136.7375,  -67.3801,  -80.0359, -205.3441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5730, device='cuda:0', dtype=torch.float64)
tensor([ -95.7792, -136.9160,  -67.9135,  -79.1498, -207.2185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6764, device='cuda:0', dtype=torch.float64)
tensor([ -97.2698, -137.1318,  -68.4067,  -78.5332, -208.8902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8472, device='cuda:0', dtype=torch.float64)
tensor([ -99.3893, -137.5849,  -68.5956,  -78.9354, -209.9319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6637, device='cuda:0', dtype=torch.float64)
tensor([-101.3748, -139.2162,  -69.3186,  -80.1440, -212.6230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6275, device='cuda:0', dtype=torch.float64)
tensor([-103.0417, -140.0347,  -70.0782,  -81.4130, -214.8335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6818, device='cuda:0', dtype=torch.float64)
tensor([-104.4413, -141.2497,  -70.9572,  -82.4793, -217.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6943, device='cuda:0', dtype=torch.float64)
tensor([-105.1883, -143.1754,  -71.9866,  -83.7373, -220.8872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5500, device='cuda:0', dtype=torch.float64)
tensor([-105.8294, -143.3527,  -72.1241,  -84.6618, -221.5137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5959, device='cuda:0', dtype=torch.float64)
tensor([-107.2614, -144.2935,  -72.7170,  -86.1787, -223.0452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9157, device='cuda:0', dtype=torch.float64)
tensor([-108.3504, -144.7561,  -73.2999,  -86.8444, -223.8838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6461, device='cuda:0', dtype=torch.float64)
tensor([-109.6371, -146.7787,  -74.1362,  -88.6054, -225.7643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4920, device='cuda:0', dtype=torch.float64)
tensor([-110.9710, -149.5942,  -75.5163,  -90.1741, -229.0001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0431, device='cuda:0', dtype=torch.float64)
tensor([-111.0186, -152.6898,  -76.4530,  -92.0103, -232.1973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5205, device='cuda:0', dtype=torch.float64)
tensor([-110.8143, -156.3568,  -77.6174,  -94.5379, -236.1716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6317, device='cuda:0', dtype=torch.float64)
tensor([-110.1340, -159.4226,  -78.3909,  -96.9997, -239.7310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0664, device='cuda:0', dtype=torch.float64)
tensor([-110.9119, -163.0697,  -79.3469, -101.2411, -243.9555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5669, device='cuda:0', dtype=torch.float64)
tensor([-111.7358, -166.7669,  -79.9742, -106.1370, -247.9484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7401, device='cuda:0', dtype=torch.float64)
tensor([-112.8296, -171.1722,  -81.7973, -111.9611, -252.8310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7291, device='cuda:0', dtype=torch.float64)
tensor([-114.2029, -177.1940,  -84.6475, -118.2835, -259.2529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7423, device='cuda:0', dtype=torch.float64)
tensor([-115.6614, -182.8757,  -88.0713, -124.5488, -265.3193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6924, device='cuda:0', dtype=torch.float64)
tensor([-116.6578, -185.5145,  -89.8655, -128.4578, -268.6319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4461, device='cuda:0', dtype=torch.float64)
tensor([-118.0217, -187.2709,  -91.6760, -131.6850, -271.0277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7401, device='cuda:0', dtype=torch.float64)
tensor([-118.1624, -190.7869,  -94.5592, -135.6480, -274.9914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6460, device='cuda:0', dtype=torch.float64)
tensor([-118.0072, -193.6011,  -96.5347, -138.9165, -277.6736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7077, device='cuda:0', dtype=torch.float64)
tensor([-118.0675, -196.4220,  -98.9533, -142.0759, -280.8635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6993, device='cuda:0', dtype=torch.float64)
tensor([-118.4474, -198.9057, -100.8890, -144.3727, -282.4891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5285, device='cuda:0', dtype=torch.float64)
tensor([-118.1973, -200.5385, -102.6939, -145.5436, -283.9434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8567, device='cuda:0', dtype=torch.float64)
tensor([-118.7472, -202.9191, -105.0322, -147.8353, -286.2925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5730, device='cuda:0', dtype=torch.float64)
tensor([-119.8423, -204.0084, -106.0740, -149.5581, -287.1359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6960, device='cuda:0', dtype=torch.float64)
tensor([-120.3544, -203.6569, -105.2300, -149.9740, -285.8069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4300, device='cuda:0', dtype=torch.float64)
tensor([-120.4493, -204.3212, -105.0326, -150.8804, -285.5776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3766, device='cuda:0', dtype=torch.float64)
tensor([-120.7737, -205.1763, -104.9376, -152.0585, -285.8004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5740, device='cuda:0', dtype=torch.float64)
tensor([-120.8606, -205.1891, -104.3085, -152.0757, -284.3731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4232, device='cuda:0', dtype=torch.float64)
tensor([-120.8390, -205.1498, -103.1029, -151.8765, -282.2541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4723, device='cuda:0', dtype=torch.float64)
tensor([-121.0425, -205.6551, -102.7535, -152.3105, -281.5698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6462, device='cuda:0', dtype=torch.float64)
tensor([-121.9856, -206.4701, -102.8529, -153.4941, -281.6166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7194, device='cuda:0', dtype=torch.float64)
tensor([-123.1369, -205.7013, -101.8004, -154.0443, -279.7778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7673, device='cuda:0', dtype=torch.float64)
tensor([-125.8526, -205.8208, -101.9500, -156.5759, -280.4365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9708, device='cuda:0', dtype=torch.float64)
tensor([-128.2284, -206.3728, -102.4412, -159.5137, -281.2093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4316, device='cuda:0', dtype=torch.float64)
tensor([-130.8024, -207.7082, -104.1126, -163.2608, -283.4958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3680, device='cuda:0', dtype=torch.float64)
tensor([-133.8547, -207.3004, -104.5673, -165.7602, -283.9076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5615, device='cuda:0', dtype=torch.float64)
tensor([-136.5866, -206.8108, -104.9403, -167.6288, -283.9448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8888, device='cuda:0', dtype=torch.float64)
tensor([-139.4441, -204.4447, -104.2724, -167.8091, -281.8396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8783, device='cuda:0', dtype=torch.float64)
tensor([-143.4368, -203.0909, -103.9778, -168.0664, -281.0423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8157, device='cuda:0', dtype=torch.float64)
tensor([-146.0776, -200.4195, -103.4357, -167.5812, -278.7286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0809, device='cuda:0', dtype=torch.float64)
tensor([-148.0459, -198.4077, -103.7991, -167.8907, -277.3326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6021, device='cuda:0', dtype=torch.float64)
tensor([-150.5420, -198.8523, -105.9183, -169.7835, -279.1503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5860, device='cuda:0', dtype=torch.float64)
tensor([-152.1385, -199.0744, -107.5217, -171.2523, -280.0025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6027, device='cuda:0', dtype=torch.float64)
tensor([-153.8980, -199.8073, -109.6153, -173.5544, -281.8208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5217, device='cuda:0', dtype=torch.float64)
tensor([-155.8547, -197.4035, -110.3029, -174.0709, -281.3946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8923, device='cuda:0', dtype=torch.float64)
tensor([-157.5667, -195.6097, -110.9326, -175.2984, -281.5940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7193, device='cuda:0', dtype=torch.float64)
tensor([-159.0062, -194.8068, -111.9592, -176.9657, -282.7918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5832, device='cuda:0', dtype=torch.float64)
tensor([-160.2851, -194.0374, -112.9755, -178.5382, -284.2149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6905, device='cuda:0', dtype=torch.float64)
tensor([-161.1913, -193.1819, -113.1197, -179.9546, -284.8701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7124, device='cuda:0', dtype=torch.float64)
tensor([-161.7768, -192.5077, -113.6405, -181.1381, -285.5083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3891, device='cuda:0', dtype=torch.float64)
tensor([-162.7992, -192.2789, -114.6955, -182.1770, -286.5407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0249, device='cuda:0', dtype=torch.float64)
tensor([-163.5605, -192.8009, -116.4716, -183.5603, -288.4922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7438, device='cuda:0', dtype=torch.float64)
tensor([-163.0297, -193.5425, -117.7264, -184.3144, -289.7958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5858, device='cuda:0', dtype=torch.float64)
tensor([-161.5657, -193.4159, -118.0750, -184.2291, -289.1945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5030, device='cuda:0', dtype=torch.float64)
tensor([-162.2160, -192.9947, -118.9119, -185.0368, -289.7088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5279, device='cuda:0', dtype=torch.float64)
tensor([-162.5927, -193.3850, -120.6429, -186.4004, -291.2754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5382, device='cuda:0', dtype=torch.float64)
tensor([-163.1411, -192.5509, -121.4503, -186.0088, -291.3626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3973, device='cuda:0', dtype=torch.float64)
tensor([-162.7289, -191.2332, -121.4305, -184.9020, -290.4455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7301, device='cuda:0', dtype=torch.float64)
tensor([-160.9702, -188.8294, -120.8296, -181.8665, -287.8346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6883, device='cuda:0', dtype=torch.float64)
tensor([-159.3973, -185.5365, -119.6822, -178.6463, -283.8743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3791, device='cuda:0', dtype=torch.float64)
tensor([-157.6323, -181.5760, -117.1187, -174.9154, -278.3258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4079, device='cuda:0', dtype=torch.float64)
tensor([-157.4286, -178.3842, -115.3390, -172.0814, -274.2461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5709, device='cuda:0', dtype=torch.float64)
tensor([-157.3629, -175.0940, -113.6708, -168.6835, -270.3422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3785, device='cuda:0', dtype=torch.float64)
tensor([-158.0948, -173.2809, -112.7952, -166.4878, -268.9080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7513, device='cuda:0', dtype=torch.float64)
tensor([-157.6769, -172.2405, -112.6088, -165.2263, -268.2176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6433, device='cuda:0', dtype=torch.float64)
tensor([-157.4324, -171.1106, -112.0988, -163.3210, -267.4457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6953, device='cuda:0', dtype=torch.float64)
tensor([-158.1598, -170.0412, -111.9386, -162.3440, -266.9412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6043, device='cuda:0', dtype=torch.float64)
tensor([-159.0080, -169.1931, -111.2751, -161.1310, -266.8673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2963, device='cuda:0', dtype=torch.float64)
tensor([-159.9501, -168.6308, -110.6429, -159.4228, -267.3929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5173, device='cuda:0', dtype=torch.float64)
tensor([-160.1459, -167.9499, -109.8661, -157.8803, -267.3414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5001, device='cuda:0', dtype=torch.float64)
tensor([-161.4444, -167.3407, -109.2536, -156.7699, -267.9688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4151, device='cuda:0', dtype=torch.float64)
tensor([-161.5922, -165.2708, -107.4249, -154.2706, -266.1866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3952, device='cuda:0', dtype=torch.float64)
tensor([-162.1864, -162.5386, -105.1575, -151.7090, -263.7615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4015, device='cuda:0', dtype=torch.float64)
tensor([-164.0711, -160.2998, -103.5919, -149.4642, -262.5069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5338, device='cuda:0', dtype=torch.float64)
tensor([-164.3802, -156.7826, -101.6866, -145.9986, -259.8426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5311, device='cuda:0', dtype=torch.float64)
tensor([-162.5217, -153.8293, -100.0303, -143.0612, -257.4604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4507, device='cuda:0', dtype=torch.float64)
tensor([-161.4780, -151.6628,  -98.8202, -141.2682, -255.9552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3633, device='cuda:0', dtype=torch.float64)
tensor([-160.0481, -149.4577,  -97.8985, -139.9246, -254.6031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4925, device='cuda:0', dtype=torch.float64)
tensor([-157.7026, -147.1688,  -96.9227, -138.2088, -252.7517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6005, device='cuda:0', dtype=torch.float64)
tensor([-156.3173, -146.2039,  -96.3657, -137.3864, -252.2231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4790, device='cuda:0', dtype=torch.float64)
tensor([-154.6778, -145.6085,  -96.1981, -136.4335, -252.4733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4511, device='cuda:0', dtype=torch.float64)
tensor([-153.2056, -146.0350,  -95.9433, -136.2540, -253.9554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5515, device='cuda:0', dtype=torch.float64)
tensor([-151.6874, -146.1056,  -95.0534, -136.4387, -254.7677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4155, device='cuda:0', dtype=torch.float64)
tensor([-150.2911, -146.8813,  -94.4565, -137.3748, -256.5207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6207, device='cuda:0', dtype=torch.float64)
tensor([-147.3862, -149.0521,  -94.1308, -138.8683, -259.1953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6925, device='cuda:0', dtype=torch.float64)
tensor([-144.0881, -149.7568,  -93.6249, -139.6851, -259.7861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7002, device='cuda:0', dtype=torch.float64)
tensor([-143.2821, -150.3074,  -92.9110, -140.6235, -261.3316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2795, device='cuda:0', dtype=torch.float64)
tensor([-143.0026, -150.2751,  -92.5751, -141.2454, -263.1911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3991, device='cuda:0', dtype=torch.float64)
tensor([-141.9319, -150.3837,  -92.0341, -141.1541, -264.4184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7043, device='cuda:0', dtype=torch.float64)
tensor([-141.3707, -150.5011,  -91.6850, -141.1885, -265.4498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2260, device='cuda:0', dtype=torch.float64)
tensor([-140.3725, -150.7815,  -91.3788, -140.9674, -266.4188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3166, device='cuda:0', dtype=torch.float64)
tensor([-140.1081, -151.1896,  -91.1959, -141.2014, -267.7328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4287, device='cuda:0', dtype=torch.float64)
tensor([-139.2686, -151.6384,  -90.8517, -141.5751, -268.4529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3864, device='cuda:0', dtype=torch.float64)
tensor([-137.7954, -151.8416,  -90.3730, -141.7667, -268.1896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6717, device='cuda:0', dtype=torch.float64)
tensor([-135.9197, -152.8197,  -90.0335, -141.6623, -267.4243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3682, device='cuda:0', dtype=torch.float64)
tensor([-134.2059, -153.6496,  -89.7092, -140.9873, -266.7872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7740, device='cuda:0', dtype=torch.float64)
tensor([-132.7206, -155.6553,  -90.3327, -141.8369, -267.8169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3562, device='cuda:0', dtype=torch.float64)
tensor([-133.1209, -158.4021,  -91.5684, -143.9863, -270.6923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8316, device='cuda:0', dtype=torch.float64)
tensor([-135.4776, -160.6117,  -92.7569, -146.4582, -275.3585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4171, device='cuda:0', dtype=torch.float64)
tensor([-136.1303, -163.7078,  -94.5516, -149.1165, -279.7210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6095, device='cuda:0', dtype=torch.float64)
tensor([-136.8503, -168.3712,  -96.9660, -152.8242, -284.9064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5741, device='cuda:0', dtype=torch.float64)
tensor([-138.8866, -173.7278, -100.2433, -157.2852, -292.0723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7669, device='cuda:0', dtype=torch.float64)
tensor([-141.8832, -179.0237, -103.2779, -162.2042, -299.9795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5383, device='cuda:0', dtype=torch.float64)
tensor([-145.7230, -183.3549, -105.3600, -166.4918, -307.5413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3925, device='cuda:0', dtype=torch.float64)
tensor([-148.4621, -186.7571, -106.6932, -170.2308, -312.9608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2976, device='cuda:0', dtype=torch.float64)
tensor([-151.3890, -190.8195, -108.0802, -174.3199, -318.6339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4085, device='cuda:0', dtype=torch.float64)
tensor([-155.6028, -195.1600, -109.6836, -179.5886, -325.9399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3455, device='cuda:0', dtype=torch.float64)
tensor([-159.6387, -200.5876, -111.8636, -186.2740, -333.3726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3295, device='cuda:0', dtype=torch.float64)
tensor([-163.3855, -204.3080, -113.2807, -190.9627, -339.4381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5052, device='cuda:0', dtype=torch.float64)
tensor([-166.3244, -205.6479, -113.3899, -193.7616, -343.0108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4282, device='cuda:0', dtype=torch.float64)
tensor([-168.2531, -207.5023, -113.4192, -195.6045, -346.4783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3280, device='cuda:0', dtype=torch.float64)
tensor([-170.0324, -209.7130, -114.2412, -198.2711, -349.8967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3998, device='cuda:0', dtype=torch.float64)
tensor([-171.7994, -211.9446, -115.2366, -201.0040, -353.0968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4217, device='cuda:0', dtype=torch.float64)
tensor([-173.9244, -213.1914, -116.1579, -203.3231, -356.3311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6943, device='cuda:0', dtype=torch.float64)
tensor([-174.1353, -212.8517, -116.1886, -201.8773, -356.0964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6611, device='cuda:0', dtype=torch.float64)
tensor([-174.1964, -211.4703, -116.0701, -200.4709, -355.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4915, device='cuda:0', dtype=torch.float64)
tensor([-173.6492, -209.5875, -116.0513, -198.8175, -355.4724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5772, device='cuda:0', dtype=torch.float64)
tensor([-173.1674, -210.7706, -117.5184, -199.0107, -357.5729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4027, device='cuda:0', dtype=torch.float64)
tensor([-171.9668, -210.8755, -118.3887, -198.6653, -358.3079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4420, device='cuda:0', dtype=torch.float64)
tensor([-170.7177, -210.0533, -119.0210, -196.6978, -358.2547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3900, device='cuda:0', dtype=torch.float64)
tensor([-168.6780, -207.5944, -118.5996, -193.4341, -356.2567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3557, device='cuda:0', dtype=torch.float64)
tensor([-167.0537, -204.4842, -118.0736, -190.0873, -353.7931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1220, device='cuda:0', dtype=torch.float64)
tensor([-165.1884, -201.2934, -117.2093, -186.7425, -350.7480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4232, device='cuda:0', dtype=torch.float64)
tensor([-163.8009, -197.8447, -116.3161, -183.8905, -349.0756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2278, device='cuda:0', dtype=torch.float64)
tensor([-163.3778, -195.3532, -116.1299, -182.1974, -349.1247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6470, device='cuda:0', dtype=torch.float64)
tensor([-164.0051, -194.2310, -116.5160, -182.7406, -350.2641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3109, device='cuda:0', dtype=torch.float64)
tensor([-165.4998, -193.8003, -117.5593, -184.1410, -352.4734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4060, device='cuda:0', dtype=torch.float64)
tensor([-166.1512, -193.7025, -117.9239, -184.8300, -353.3892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2140, device='cuda:0', dtype=torch.float64)
tensor([-167.3709, -194.5314, -118.8138, -186.6032, -354.4056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2209, device='cuda:0', dtype=torch.float64)
tensor([-169.3588, -196.0272, -120.0331, -189.2550, -356.3995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4904, device='cuda:0', dtype=torch.float64)
tensor([-171.3297, -197.5562, -121.0314, -191.8298, -358.6843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4248, device='cuda:0', dtype=torch.float64)
tensor([-173.8119, -198.7440, -121.9702, -193.9839, -361.3392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3319, device='cuda:0', dtype=torch.float64)
tensor([-177.1510, -200.3212, -122.7176, -196.0477, -365.0825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2363, device='cuda:0', dtype=torch.float64)
tensor([-180.7004, -201.8700, -123.5267, -198.9291, -368.6569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5152, device='cuda:0', dtype=torch.float64)
tensor([-184.0802, -202.3194, -123.8574, -199.8355, -370.9144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2067, device='cuda:0', dtype=torch.float64)
tensor([-187.3472, -204.0673, -124.4740, -201.5619, -373.0922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3894, device='cuda:0', dtype=torch.float64)
tensor([-190.8251, -206.9484, -126.1231, -205.0070, -376.6195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3053, device='cuda:0', dtype=torch.float64)
tensor([-193.4500, -209.4194, -128.1393, -208.1345, -379.9040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3597, device='cuda:0', dtype=torch.float64)
tensor([-196.2261, -212.3546, -130.6241, -211.4297, -384.2017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5671, device='cuda:0', dtype=torch.float64)
tensor([-196.7705, -213.0612, -130.8911, -211.2012, -384.1868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1370, device='cuda:0', dtype=torch.float64)
tensor([-197.2054, -213.9018, -131.4093, -210.9880, -384.6745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3083, device='cuda:0', dtype=torch.float64)
tensor([-197.8094, -214.6784, -131.9380, -210.0674, -385.1802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1605, device='cuda:0', dtype=torch.float64)
tensor([-197.6201, -215.4431, -131.9233, -209.3342, -385.6360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3999, device='cuda:0', dtype=torch.float64)
tensor([-197.6154, -216.5112, -132.3824, -209.3514, -387.3430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3765, device='cuda:0', dtype=torch.float64)
tensor([-198.8622, -219.1246, -134.2853, -211.1517, -391.5485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1892, device='cuda:0', dtype=torch.float64)
tensor([-201.1389, -221.4365, -136.3846, -211.7725, -395.1201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5006, device='cuda:0', dtype=torch.float64)
tensor([-202.1114, -222.6707, -137.4672, -211.6650, -396.7548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2033, device='cuda:0', dtype=torch.float64)
tensor([-203.7201, -224.8229, -139.4526, -212.4564, -399.9971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2335, device='cuda:0', dtype=torch.float64)
tensor([-205.8957, -226.5527, -141.5945, -212.8409, -402.7217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1631, device='cuda:0', dtype=torch.float64)
tensor([-209.3579, -228.4787, -145.6785, -212.9879, -406.0440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3122, device='cuda:0', dtype=torch.float64)
tensor([-213.6107, -231.6997, -152.4951, -214.8164, -411.1977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1591, device='cuda:0', dtype=torch.float64)
tensor([-217.0595, -232.9209, -158.8591, -214.9180, -413.0825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2358, device='cuda:0', dtype=torch.float64)
tensor([-219.1166, -234.2405, -163.7464, -215.7779, -414.4054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3038, device='cuda:0', dtype=torch.float64)
tensor([-220.9580, -236.0962, -168.9505, -217.8626, -416.2835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2411, device='cuda:0', dtype=torch.float64)
tensor([-220.9746, -237.7407, -171.7052, -219.8426, -417.9318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3319, device='cuda:0', dtype=torch.float64)
tensor([-220.7350, -238.3169, -172.6220, -220.7674, -417.7603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1926, device='cuda:0', dtype=torch.float64)
tensor([-218.9672, -237.6738, -170.2922, -218.8507, -414.8463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2179, device='cuda:0', dtype=torch.float64)
tensor([-216.8587, -236.1842, -166.9614, -216.1806, -411.1350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4137, device='cuda:0', dtype=torch.float64)
tensor([-212.5579, -234.0476, -159.9131, -211.5323, -404.8331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3907, device='cuda:0', dtype=torch.float64)
tensor([-206.9341, -230.3434, -151.3808, -205.3564, -396.6318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2034, device='cuda:0', dtype=torch.float64)
tensor([-202.7232, -227.3060, -144.9749, -200.4065, -390.1552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3003, device='cuda:0', dtype=torch.float64)
tensor([-197.9578, -223.4293, -138.2237, -195.3815, -383.0876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1967, device='cuda:0', dtype=torch.float64)
tensor([-194.1825, -220.7006, -134.1387, -191.9676, -378.4364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4228, device='cuda:0', dtype=torch.float64)
tensor([-192.9150, -218.9039, -132.4060, -190.5319, -375.7151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1601, device='cuda:0', dtype=torch.float64)
tensor([-192.7544, -218.4614, -132.2124, -190.2394, -374.9602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3379, device='cuda:0', dtype=torch.float64)
tensor([-194.9432, -220.5357, -135.5331, -192.4433, -378.4310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2393, device='cuda:0', dtype=torch.float64)
tensor([-197.5540, -222.7470, -140.0757, -195.7605, -382.8104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2803, device='cuda:0', dtype=torch.float64)
tensor([-200.8090, -224.5502, -146.1929, -199.0848, -386.7370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2995, device='cuda:0', dtype=torch.float64)
tensor([-205.3944, -227.6230, -154.9456, -203.7756, -392.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-209.4969, -230.3637, -162.8748, -208.3472, -398.2026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2991, device='cuda:0', dtype=torch.float64)
tensor([-215.0020, -235.0644, -175.1409, -215.0428, -405.9651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1804, device='cuda:0', dtype=torch.float64)
tensor([-219.6695, -239.1667, -187.7864, -221.8374, -412.0335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1914, device='cuda:0', dtype=torch.float64)
tensor([-224.0666, -243.4757, -201.8088, -228.3684, -417.0993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1986, device='cuda:0', dtype=torch.float64)
tensor([-227.4381, -247.5814, -214.2992, -234.7195, -421.9451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1949, device='cuda:0', dtype=torch.float64)
tensor([-230.0242, -250.8126, -224.8522, -240.2537, -426.2505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2270, device='cuda:0', dtype=torch.float64)
tensor([-232.8541, -254.9847, -237.4493, -247.1469, -432.3645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1271, device='cuda:0', dtype=torch.float64)
tensor([-234.7873, -259.3773, -248.5764, -254.5342, -438.0607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0008, device='cuda:0', dtype=torch.float64)
tensor([-236.2262, -262.7558, -258.2164, -260.7923, -442.8892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8454, device='cuda:0', dtype=torch.float64)
tensor([-237.4667, -266.4635, -267.0238, -266.8635, -448.1969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0719, device='cuda:0', dtype=torch.float64)
tensor([-238.1801, -268.7759, -272.1660, -271.1997, -452.0075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9325, device='cuda:0', dtype=torch.float64)
tensor([-238.1732, -271.3063, -275.8624, -275.0511, -455.4661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1702, device='cuda:0', dtype=torch.float64)
tensor([-237.5241, -272.5905, -277.7928, -276.0844, -456.5869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0688, device='cuda:0', dtype=torch.float64)
tensor([-238.4314, -276.1617, -283.3669, -279.4709, -460.0890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1270, device='cuda:0', dtype=torch.float64)
tensor([-239.6361, -281.5417, -291.9658, -285.9577, -466.6070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9350, device='cuda:0', dtype=torch.float64)
tensor([-240.6086, -287.5321, -300.4827, -293.8307, -473.9722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1252, device='cuda:0', dtype=torch.float64)
tensor([-240.9746, -292.2226, -307.4175, -299.8184, -478.8727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9817, device='cuda:0', dtype=torch.float64)
tensor([-241.4189, -296.9980, -314.3754, -307.1884, -484.7701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0862, device='cuda:0', dtype=torch.float64)
tensor([-241.6007, -301.9112, -321.1227, -315.6361, -491.4131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9162, device='cuda:0', dtype=torch.float64)
tensor([-241.5201, -306.8221, -327.6969, -324.5475, -498.0050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9331, device='cuda:0', dtype=torch.float64)
tensor([-240.6126, -308.8836, -329.1267, -329.9453, -500.8933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9564, device='cuda:0', dtype=torch.float64)
tensor([-239.1518, -308.4884, -327.4167, -331.0308, -499.9075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7917, device='cuda:0', dtype=torch.float64)
tensor([-237.1980, -307.2529, -324.0576, -329.7759, -497.6614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8956, device='cuda:0', dtype=torch.float64)
tensor([-235.5449, -306.5437, -321.9670, -329.0453, -496.6158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8263, device='cuda:0', dtype=torch.float64)
tensor([-234.8734, -308.3683, -323.5958, -330.4474, -498.3268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9509, device='cuda:0', dtype=torch.float64)
tensor([-234.1924, -310.2064, -325.7360, -331.0324, -499.8792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0197, device='cuda:0', dtype=torch.float64)
tensor([-233.8899, -312.7477, -329.6110, -335.1008, -503.4175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1140, device='cuda:0', dtype=torch.float64)
tensor([-233.9864, -314.4021, -333.9481, -338.9373, -506.5234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0275, device='cuda:0', dtype=torch.float64)
tensor([-233.5829, -314.1050, -336.1312, -337.0706, -505.8278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9812, device='cuda:0', dtype=torch.float64)
tensor([-233.0148, -312.2027, -335.2327, -332.1430, -502.8128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0668, device='cuda:0', dtype=torch.float64)
tensor([-232.2891, -310.6132, -334.5278, -326.3175, -499.8065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8647, device='cuda:0', dtype=torch.float64)
tensor([-232.0740, -309.9889, -335.3557, -322.4240, -497.4997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9423, device='cuda:0', dtype=torch.float64)
tensor([-232.8008, -310.4264, -338.0554, -320.4412, -496.9309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0025, device='cuda:0', dtype=torch.float64)
tensor([-234.3486, -312.7239, -343.0897, -322.7405, -499.0640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0069, device='cuda:0', dtype=torch.float64)
tensor([-234.8335, -312.9755, -344.8669, -322.5319, -499.1066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0157, device='cuda:0', dtype=torch.float64)
tensor([-234.7308, -311.6519, -344.7216, -320.7159, -497.3692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9696, device='cuda:0', dtype=torch.float64)
tensor([-234.9281, -310.1850, -344.6075, -320.0959, -496.6440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0974, device='cuda:0', dtype=torch.float64)
tensor([-235.6526, -311.1282, -347.9992, -324.4078, -499.4686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0755, device='cuda:0', dtype=torch.float64)
tensor([-236.2939, -314.0146, -354.5016, -333.2820, -505.8870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9031, device='cuda:0', dtype=torch.float64)
tensor([-236.4170, -316.4420, -359.1445, -340.9291, -511.0406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9547, device='cuda:0', dtype=torch.float64)
tensor([-237.3997, -321.6115, -367.0000, -351.9509, -518.9756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8777, device='cuda:0', dtype=torch.float64)
tensor([-238.4034, -328.2211, -376.1784, -365.4426, -528.4025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0933, device='cuda:0', dtype=torch.float64)
tensor([-238.9781, -334.3917, -383.4900, -375.4946, -536.2871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0330, device='cuda:0', dtype=torch.float64)
tensor([-241.8095, -347.5774, -396.6970, -392.9474, -551.7515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6896, device='cuda:0', dtype=torch.float64)
tensor([-244.8403, -362.3622, -409.5019, -409.1425, -567.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9926, device='cuda:0', dtype=torch.float64)
tensor([-248.1371, -377.8109, -422.1144, -425.8590, -585.1325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7273, device='cuda:0', dtype=torch.float64)
tensor([-250.6667, -389.9407, -432.7563, -442.3120, -600.6973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7914, device='cuda:0', dtype=torch.float64)
tensor([-252.2752, -398.0036, -440.4399, -456.4094, -611.7797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7969, device='cuda:0', dtype=torch.float64)
tensor([-252.4158, -401.8057, -443.6307, -467.5868, -616.4473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8790, device='cuda:0', dtype=torch.float64)
tensor([-252.6888, -404.8856, -446.0306, -478.2270, -620.6011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8176, device='cuda:0', dtype=torch.float64)
tensor([-253.1369, -407.5561, -445.9123, -487.3080, -623.1236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9302, device='cuda:0', dtype=torch.float64)
tensor([-254.2411, -410.5442, -445.8529, -497.7430, -626.9014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7504, device='cuda:0', dtype=torch.float64)
tensor([-255.9832, -414.3646, -446.3839, -507.8463, -631.7842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8193, device='cuda:0', dtype=torch.float64)
tensor([-258.3334, -418.7824, -448.6232, -518.2675, -637.8030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7707, device='cuda:0', dtype=torch.float64)
tensor([-260.4052, -423.5232, -451.5634, -527.8168, -644.6414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1272, device='cuda:0', dtype=torch.float64)
tensor([-262.7830, -430.3790, -457.4408, -538.8166, -654.9892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7938, device='cuda:0', dtype=torch.float64)
tensor([-265.3544, -436.8451, -464.0703, -548.0968, -666.0320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7103, device='cuda:0', dtype=torch.float64)
tensor([-267.6911, -441.3387, -469.8341, -556.0586, -675.5753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5954, device='cuda:0', dtype=torch.float64)
tensor([-269.2175, -443.7183, -473.5276, -561.4995, -682.2751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7226, device='cuda:0', dtype=torch.float64)
tensor([-271.2277, -446.7933, -478.2630, -565.5102, -691.0752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7775, device='cuda:0', dtype=torch.float64)
tensor([-274.8412, -451.5269, -485.2838, -571.7915, -703.1221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5648, device='cuda:0', dtype=torch.float64)
tensor([-277.7850, -455.0954, -490.2320, -576.2152, -712.7379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6430, device='cuda:0', dtype=torch.float64)
tensor([-279.2958, -456.7708, -492.9675, -577.5123, -718.7814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6404, device='cuda:0', dtype=torch.float64)
tensor([-279.9877, -456.8700, -493.3356, -577.6727, -721.2485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7141, device='cuda:0', dtype=torch.float64)
tensor([-279.2748, -455.6772, -491.2625, -576.2414, -719.3986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6355, device='cuda:0', dtype=torch.float64)
tensor([-276.9938, -452.6022, -486.4491, -573.9106, -713.8486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6536, device='cuda:0', dtype=torch.float64)
tensor([-276.4296, -451.9580, -484.5061, -574.3190, -713.5438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6632, device='cuda:0', dtype=torch.float64)
tensor([-274.4756, -449.1992, -480.6125, -573.7875, -707.6394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7224, device='cuda:0', dtype=torch.float64)
tensor([-273.3289, -446.7934, -476.9221, -572.6043, -701.6397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7086, device='cuda:0', dtype=torch.float64)
tensor([-274.2789, -446.6753, -475.7139, -573.6534, -700.4980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6881, device='cuda:0', dtype=torch.float64)
tensor([-276.7460, -448.8971, -477.2223, -576.3001, -704.0385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6937, device='cuda:0', dtype=torch.float64)
tensor([-279.8161, -452.1333, -478.8557, -578.5327, -708.8131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6455, device='cuda:0', dtype=torch.float64)
tensor([-281.4483, -453.6153, -479.4196, -580.4383, -710.6458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6857, device='cuda:0', dtype=torch.float64)
tensor([-282.5008, -454.7442, -479.9215, -581.0819, -711.8701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5934, device='cuda:0', dtype=torch.float64)
tensor([-281.5416, -453.7747, -479.1132, -580.7367, -710.0550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5244, device='cuda:0', dtype=torch.float64)
tensor([-280.7983, -453.5125, -479.0796, -580.7723, -708.7368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6383, device='cuda:0', dtype=torch.float64)
tensor([-280.6638, -453.1814, -479.8496, -580.7389, -706.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6915, device='cuda:0', dtype=torch.float64)
tensor([-281.7541, -453.7160, -481.8991, -582.2311, -706.1437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6584, device='cuda:0', dtype=torch.float64)
tensor([-281.9674, -454.2397, -482.8385, -582.2728, -704.8176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7212, device='cuda:0', dtype=torch.float64)
tensor([-284.7509, -457.0220, -486.6300, -584.8932, -708.1708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7927, device='cuda:0', dtype=torch.float64)
tensor([-288.7068, -461.9415, -492.8349, -587.1738, -714.9681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6435, device='cuda:0', dtype=torch.float64)
tensor([-293.0265, -467.2645, -499.7271, -589.9712, -723.1210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5564, device='cuda:0', dtype=torch.float64)
tensor([-294.5591, -470.4305, -503.5473, -591.4768, -727.0662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6214, device='cuda:0', dtype=torch.float64)
tensor([-296.3732, -473.1020, -506.8127, -592.3162, -729.7622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5690, device='cuda:0', dtype=torch.float64)
tensor([-297.3557, -475.7840, -509.2855, -592.9322, -732.8112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7151, device='cuda:0', dtype=torch.float64)
tensor([-297.3243, -476.5096, -511.5723, -594.6879, -734.5942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4597, device='cuda:0', dtype=torch.float64)
tensor([-297.6602, -477.5132, -513.2101, -596.0633, -736.1474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5010, device='cuda:0', dtype=torch.float64)
tensor([-296.9011, -477.0162, -514.2432, -598.1207, -736.1437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5297, device='cuda:0', dtype=torch.float64)
tensor([-296.6828, -476.6999, -515.3374, -599.1493, -736.7823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6736, device='cuda:0', dtype=torch.float64)
tensor([-293.9781, -474.5863, -513.6529, -598.9176, -734.0250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4775, device='cuda:0', dtype=torch.float64)
tensor([-291.1328, -472.0020, -510.5534, -598.3622, -730.1357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4489, device='cuda:0', dtype=torch.float64)
tensor([-288.7980, -469.7771, -507.2565, -598.2385, -727.0986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6180, device='cuda:0', dtype=torch.float64)
tensor([-287.4104, -467.0052, -503.7509, -599.3549, -723.6630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5010, device='cuda:0', dtype=torch.float64)
tensor([-284.6893, -463.0425, -498.2577, -598.8040, -717.0776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5506, device='cuda:0', dtype=torch.float64)
tensor([-281.1767, -457.5464, -490.4500, -596.6640, -706.4207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5152, device='cuda:0', dtype=torch.float64)
tensor([-280.3939, -452.9038, -484.6243, -595.4969, -697.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4376, device='cuda:0', dtype=torch.float64)
tensor([-280.6285, -449.1708, -480.9218, -594.7840, -690.2577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5129, device='cuda:0', dtype=torch.float64)
tensor([-281.5717, -446.0184, -478.5339, -594.8394, -684.7939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4955, device='cuda:0', dtype=torch.float64)
tensor([-285.1286, -445.3063, -478.5545, -597.2538, -683.9895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5026, device='cuda:0', dtype=torch.float64)
tensor([-289.4905, -444.6028, -479.5073, -600.0224, -684.3189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4844, device='cuda:0', dtype=torch.float64)
tensor([-294.3163, -444.2424, -480.1436, -602.9172, -685.0868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4914, device='cuda:0', dtype=torch.float64)
tensor([-299.0592, -444.2579, -481.1432, -606.0704, -687.1583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6278, device='cuda:0', dtype=torch.float64)
tensor([-307.5541, -445.8634, -484.8946, -611.5627, -694.2964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5429, device='cuda:0', dtype=torch.float64)
tensor([-315.0464, -447.4193, -489.1297, -617.6798, -701.8843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4373, device='cuda:0', dtype=torch.float64)
tensor([-323.4927, -448.8898, -494.6966, -624.5606, -709.7601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4208, device='cuda:0', dtype=torch.float64)
tensor([-332.9512, -450.1031, -500.4702, -631.2677, -717.0792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4819, device='cuda:0', dtype=torch.float64)
tensor([-343.7035, -451.7813, -507.4172, -637.5896, -725.1943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4378, device='cuda:0', dtype=torch.float64)
tensor([-354.5233, -452.8245, -513.7939, -644.2518, -731.5759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3609, device='cuda:0', dtype=torch.float64)
tensor([-365.4518, -454.0378, -520.2315, -651.7400, -738.1709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4824, device='cuda:0', dtype=torch.float64)
tensor([-375.4313, -454.0264, -523.4792, -656.9943, -741.0606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4932, device='cuda:0', dtype=torch.float64)
tensor([-383.0108, -452.6838, -523.0922, -658.0798, -740.0038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3622, device='cuda:0', dtype=torch.float64)
tensor([-390.9952, -451.4019, -523.2088, -659.7668, -739.1736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3948, device='cuda:0', dtype=torch.float64)
tensor([-398.1986, -450.0190, -522.4634, -660.7296, -737.8576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4357, device='cuda:0', dtype=torch.float64)
tensor([-406.7735, -448.8564, -522.4754, -661.9158, -736.6758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3488, device='cuda:0', dtype=torch.float64)
tensor([-415.1584, -447.3283, -521.9138, -662.2350, -734.5639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4282, device='cuda:0', dtype=torch.float64)
tensor([-424.2543, -445.6938, -519.4576, -659.8498, -730.7904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3364, device='cuda:0', dtype=torch.float64)
tensor([-433.9798, -444.2865, -516.8117, -656.8570, -726.9234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3318, device='cuda:0', dtype=torch.float64)
tensor([-442.3397, -443.0117, -514.4278, -653.9522, -723.0364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3650, device='cuda:0', dtype=torch.float64)
tensor([-449.4411, -442.2058, -512.7324, -651.0216, -719.3587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4518, device='cuda:0', dtype=torch.float64)
tensor([-455.0240, -441.8243, -512.1118, -649.3823, -716.8186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3711, device='cuda:0', dtype=torch.float64)
tensor([-458.1132, -441.0067, -511.6180, -647.1626, -713.4568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3461, device='cuda:0', dtype=torch.float64)
tensor([-459.9589, -440.7688, -511.9013, -646.2117, -711.9496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5694, device='cuda:0', dtype=torch.float64)
tensor([-459.3448, -441.1411, -512.8504, -646.2140, -712.2924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4095, device='cuda:0', dtype=torch.float64)
tensor([-459.3854, -441.9732, -514.7136, -646.8643, -713.8671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3662, device='cuda:0', dtype=torch.float64)
tensor([-459.3243, -442.8724, -516.6951, -647.3816, -715.4550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3682, device='cuda:0', dtype=torch.float64)
tensor([-459.4118, -444.0022, -518.0470, -646.9506, -716.6600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2979, device='cuda:0', dtype=torch.float64)
tensor([-459.8830, -445.3815, -520.0290, -647.6344, -718.9507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3549, device='cuda:0', dtype=torch.float64)
tensor([-460.5663, -446.8086, -521.4342, -647.8636, -720.8241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3438, device='cuda:0', dtype=torch.float64)
tensor([-460.9947, -447.8705, -521.7810, -647.2655, -721.7872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3652, device='cuda:0', dtype=torch.float64)
tensor([-462.0621, -449.1335, -523.3000, -648.9689, -724.5090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2989, device='cuda:0', dtype=torch.float64)
tensor([-462.6762, -449.9022, -523.4445, -648.4929, -725.5384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3046, device='cuda:0', dtype=torch.float64)
tensor([-462.5639, -449.7400, -522.2995, -645.6464, -724.2327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4475, device='cuda:0', dtype=torch.float64)
tensor([-460.6954, -449.4431, -520.2969, -641.6108, -722.0824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2931, device='cuda:0', dtype=torch.float64)
tensor([-460.0783, -449.3712, -518.9268, -640.0248, -721.3579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2596, device='cuda:0', dtype=torch.float64)
tensor([-459.9752, -449.3204, -517.4397, -638.4454, -720.3628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3195, device='cuda:0', dtype=torch.float64)
tensor([-459.0284, -448.5076, -514.6151, -634.8904, -717.5583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2884, device='cuda:0', dtype=torch.float64)
tensor([-457.9030, -447.2073, -512.1080, -631.8270, -714.4592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3014, device='cuda:0', dtype=torch.float64)
tensor([-456.4565, -445.8194, -509.9059, -629.1661, -710.9803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3101, device='cuda:0', dtype=torch.float64)
tensor([-455.3196, -444.5293, -506.7890, -625.0795, -706.9287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3331, device='cuda:0', dtype=torch.float64)
tensor([-454.3732, -443.5048, -503.6062, -620.3614, -702.6244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2299, device='cuda:0', dtype=torch.float64)
tensor([-453.3041, -442.6274, -500.6874, -616.1177, -698.5011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2871, device='cuda:0', dtype=torch.float64)
tensor([-453.0258, -441.5422, -498.4405, -613.1188, -694.9325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3644, device='cuda:0', dtype=torch.float64)
tensor([-452.0279, -440.3187, -496.7693, -610.4291, -691.0507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2603, device='cuda:0', dtype=torch.float64)
tensor([-452.1678, -439.1783, -495.0198, -607.0715, -686.8206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3092, device='cuda:0', dtype=torch.float64)
tensor([-453.1706, -438.2952, -494.4907, -605.0832, -684.2765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3401, device='cuda:0', dtype=torch.float64)
tensor([-456.4989, -437.3394, -494.9387, -604.4363, -683.3465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3304, device='cuda:0', dtype=torch.float64)
tensor([-459.3835, -436.3615, -496.1821, -605.4243, -684.2545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3463, device='cuda:0', dtype=torch.float64)
tensor([-462.3366, -435.1871, -497.0879, -605.8920, -684.5168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2829, device='cuda:0', dtype=torch.float64)
tensor([-465.0770, -434.3142, -498.3617, -607.0245, -685.2209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2788, device='cuda:0', dtype=torch.float64)
tensor([-467.4161, -433.7693, -499.7456, -607.9958, -686.0848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2755, device='cuda:0', dtype=torch.float64)
tensor([-468.7937, -433.3831, -500.1302, -607.7027, -685.9954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2606, device='cuda:0', dtype=torch.float64)
tensor([-469.7760, -433.1225, -500.9739, -608.2312, -686.2407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4043, device='cuda:0', dtype=torch.float64)
tensor([-470.5187, -432.7797, -502.2137, -608.9897, -686.4621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2325, device='cuda:0', dtype=torch.float64)
tensor([-470.1038, -432.4022, -503.0574, -609.6641, -686.4694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2702, device='cuda:0', dtype=torch.float64)
tensor([-469.7644, -432.1916, -503.0527, -608.9252, -685.8800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2533, device='cuda:0', dtype=torch.float64)
tensor([-471.5469, -432.3033, -503.3002, -609.1645, -685.7989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2415, device='cuda:0', dtype=torch.float64)
tensor([-476.1163, -432.3868, -503.1339, -608.4312, -684.9403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2188, device='cuda:0', dtype=torch.float64)
tensor([-481.2034, -432.3919, -502.2182, -606.5841, -683.2760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3050, device='cuda:0', dtype=torch.float64)
tensor([-488.3015, -432.1042, -500.4661, -602.4988, -680.0838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2779, device='cuda:0', dtype=torch.float64)
tensor([-496.0231, -431.5232, -499.1318, -598.5168, -676.7635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2586, device='cuda:0', dtype=torch.float64)
tensor([-505.1884, -430.9395, -497.5346, -593.2031, -672.2013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2095, device='cuda:0', dtype=torch.float64)
tensor([-511.5164, -430.5177, -496.3163, -588.6529, -668.2991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2896, device='cuda:0', dtype=torch.float64)
tensor([-516.9424, -430.2436, -495.2514, -585.0283, -664.9890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2630, device='cuda:0', dtype=torch.float64)
tensor([-519.2499, -429.9507, -493.9403, -581.9338, -662.1241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2178, device='cuda:0', dtype=torch.float64)
tensor([-521.1392, -429.8671, -493.1759, -579.7053, -660.1594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2227, device='cuda:0', dtype=torch.float64)
tensor([-523.2834, -429.6914, -492.4512, -578.4816, -659.0924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2346, device='cuda:0', dtype=torch.float64)
tensor([-527.3047, -429.4442, -491.9933, -577.1348, -658.0256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3109, device='cuda:0', dtype=torch.float64)
tensor([-532.4878, -429.2129, -491.6401, -576.7259, -657.7905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2450, device='cuda:0', dtype=torch.float64)
tensor([-538.2705, -429.2375, -491.6994, -578.0977, -658.9156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2450, device='cuda:0', dtype=torch.float64)
tensor([-543.8837, -429.3848, -491.6043, -578.2218, -659.0282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2524, device='cuda:0', dtype=torch.float64)
tensor([-548.8234, -429.6059, -491.0521, -577.3891, -659.0235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2245, device='cuda:0', dtype=torch.float64)
tensor([-556.1579, -429.7478, -490.5563, -576.2502, -658.6966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2158, device='cuda:0', dtype=torch.float64)
tensor([-566.7312, -430.0139, -490.2403, -575.9366, -659.3434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2762, device='cuda:0', dtype=torch.float64)
tensor([-580.6569, -430.2924, -490.1427, -576.5378, -660.6721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2506, device='cuda:0', dtype=torch.float64)
tensor([-594.3768, -430.4853, -489.9279, -576.2978, -661.2821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2151, device='cuda:0', dtype=torch.float64)
tensor([-609.2423, -430.4827, -490.1637, -577.7650, -662.5490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2985, device='cuda:0', dtype=torch.float64)
tensor([-629.2892, -430.3273, -490.9266, -579.8128, -664.3313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1847, device='cuda:0', dtype=torch.float64)
tensor([-649.2331, -430.1856, -491.4769, -581.1223, -665.5676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1959, device='cuda:0', dtype=torch.float64)
tensor([-669.3045, -429.9235, -492.0843, -582.1666, -666.5583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2641, device='cuda:0', dtype=torch.float64)
tensor([-690.2308, -429.6586, -492.6226, -583.5796, -667.7668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2074, device='cuda:0', dtype=torch.float64)
tensor([-714.1613, -429.5082, -493.5512, -586.5094, -670.0477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2251, device='cuda:0', dtype=torch.float64)
tensor([-740.9994, -429.4204, -494.3230, -588.7992, -671.7946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2077, device='cuda:0', dtype=torch.float64)
tensor([-768.4003, -429.5802, -494.8808, -591.3448, -674.1367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2486, device='cuda:0', dtype=torch.float64)
tensor([-793.4065, -429.6764, -495.2128, -593.1407, -675.9630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2633, device='cuda:0', dtype=torch.float64)
tensor([-817.7577, -430.2094, -496.2519, -596.6787, -678.9889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2021, device='cuda:0', dtype=torch.float64)
tensor([-808.5241, -430.3647, -496.7880, -597.7968, -680.2613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1913, device='cuda:0', dtype=torch.float64)
tensor([-815.2243, -430.1648, -497.0492, -597.7751, -680.7451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1863, device='cuda:0', dtype=torch.float64)
tensor([-869.2038, -429.8380, -497.2060, -596.4733, -680.2565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3478, device='cuda:0', dtype=torch.float64)
tensor([-950.4569, -429.4090, -496.8227, -594.0628, -679.1645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2256, device='cuda:0', dtype=torch.float64)
tensor([-1023.4371,  -428.9138,  -495.8920,  -590.5920,  -677.4016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2094, device='cuda:0', dtype=torch.float64)
tensor([-1085.8590,  -428.7117,  -495.4527,  -588.3602,  -676.2530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1782, device='cuda:0', dtype=torch.float64)
tensor([-1147.7825,  -428.2521,  -495.2078,  -585.0023,  -674.2574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2455, device='cuda:0', dtype=torch.float64)
tensor([-1197.3414,  -427.6539,  -494.9719,  -581.7960,  -672.3255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1869, device='cuda:0', dtype=torch.float64)
tensor([-1239.7874,  -426.9575,  -494.5135,  -578.4790,  -670.3574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1499, device='cuda:0', dtype=torch.float64)
tensor([-1277.2274,  -426.4757,  -493.9687,  -575.3588,  -668.3245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1978, device='cuda:0', dtype=torch.float64)
tensor([-1310.4802,  -426.1702,  -493.2268,  -573.3848,  -667.1516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2235, device='cuda:0', dtype=torch.float64)
tensor([-1345.1561,  -426.1133,  -492.1936,  -571.5648,  -666.2688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1498, device='cuda:0', dtype=torch.float64)
tensor([-1381.3540,  -426.1618,  -491.1044,  -569.6213,  -665.3355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1852, device='cuda:0', dtype=torch.float64)
tensor([-1413.9119,  -426.1495,  -489.7854,  -568.6481,  -664.5303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2011, device='cuda:0', dtype=torch.float64)
tensor([-1443.5968,  -426.1062,  -488.2690,  -566.3830,  -662.6218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2262, device='cuda:0', dtype=torch.float64)
tensor([-1464.6530,  -426.0966,  -486.5532,  -563.5690,  -660.5547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2159, device='cuda:0', dtype=torch.float64)
tensor([-1477.1427,  -426.1742,  -484.5898,  -561.8760,  -659.3994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3995, device='cuda:0', dtype=torch.float64)
tensor([-1463.4349,  -426.1781,  -482.6811,  -560.3700,  -658.2645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2152, device='cuda:0', dtype=torch.float64)
tensor([-1449.4313,  -426.4482,  -480.8810,  -561.2774,  -658.4809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1742, device='cuda:0', dtype=torch.float64)
tensor([-1436.2107,  -426.6424,  -479.1618,  -561.7211,  -658.1695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1623, device='cuda:0', dtype=torch.float64)
tensor([-1423.9432,  -426.7221,  -477.4234,  -561.3964,  -657.3817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1782, device='cuda:0', dtype=torch.float64)
tensor([-1420.4631,  -427.0974,  -475.8655,  -560.4319,  -656.7160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1784, device='cuda:0', dtype=torch.float64)
tensor([-1416.6635,  -426.9394,  -474.1733,  -556.5879,  -654.2596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1684, device='cuda:0', dtype=torch.float64)
tensor([-1416.3197,  -426.8628,  -472.7392,  -552.8347,  -652.2041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1803, device='cuda:0', dtype=torch.float64)
tensor([-1418.3238,  -426.6088,  -471.4904,  -549.0766,  -650.0178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2634, device='cuda:0', dtype=torch.float64)
tensor([-1423.3546,  -426.3002,  -470.7472,  -546.0426,  -648.0967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1903, device='cuda:0', dtype=torch.float64)
tensor([-1426.4596,  -425.8651,  -470.0600,  -543.2614,  -646.0998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1433, device='cuda:0', dtype=torch.float64)
tensor([-1432.2126,  -425.3959,  -469.6681,  -540.5835,  -644.1087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2265, device='cuda:0', dtype=torch.float64)
tensor([-1434.7630,  -425.1171,  -469.8408,  -540.0269,  -643.5950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1977, device='cuda:0', dtype=torch.float64)
tensor([-1437.5134,  -424.8101,  -470.0523,  -539.8604,  -643.3764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2459, device='cuda:0', dtype=torch.float64)
tensor([-1439.2624,  -424.4190,  -470.2415,  -541.2424,  -643.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1680, device='cuda:0', dtype=torch.float64)
tensor([-1434.4278,  -424.0328,  -470.5542,  -543.6765,  -644.4621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2080, device='cuda:0', dtype=torch.float64)
tensor([-1427.7844,  -423.9578,  -471.0808,  -548.9675,  -646.7033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1883, device='cuda:0', dtype=torch.float64)
tensor([-1427.0520,  -423.8086,  -472.0192,  -554.5222,  -648.8476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2175, device='cuda:0', dtype=torch.float64)
tensor([-1431.8457,  -423.0822,  -472.8325,  -557.9139,  -649.5555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2021, device='cuda:0', dtype=torch.float64)
tensor([-1439.2142,  -422.0080,  -472.8660,  -558.2335,  -648.5659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1705, device='cuda:0', dtype=torch.float64)
tensor([-1450.3702,  -420.7936,  -472.3146,  -556.0230,  -646.3055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1786, device='cuda:0', dtype=torch.float64)
tensor([-1463.8645,  -419.3525,  -471.2491,  -551.8266,  -642.9676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1796, device='cuda:0', dtype=torch.float64)
tensor([-1477.9370,  -417.9869,  -470.1978,  -547.8170,  -639.7974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1633, device='cuda:0', dtype=torch.float64)
tensor([-1487.6864,  -416.8143,  -469.2268,  -544.5175,  -637.1877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1912, device='cuda:0', dtype=torch.float64)
tensor([-1496.7168,  -415.6557,  -467.9617,  -540.3908,  -634.0597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2249, device='cuda:0', dtype=torch.float64)
tensor([-1506.7387,  -414.4275,  -466.7589,  -535.6635,  -630.5951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1762, device='cuda:0', dtype=torch.float64)
tensor([-1518.6095,  -413.3575,  -466.0784,  -533.0174,  -628.1397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1868, device='cuda:0', dtype=torch.float64)
tensor([-1528.1267,  -412.6860,  -465.1507,  -530.8774,  -626.5617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1449, device='cuda:0', dtype=torch.float64)
tensor([-1535.3859,  -412.0803,  -464.0367,  -529.1854,  -625.7762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1482, device='cuda:0', dtype=torch.float64)
tensor([-1544.1403,  -411.8318,  -462.7096,  -528.9424,  -626.1090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1572, device='cuda:0', dtype=torch.float64)
tensor([-1551.7705,  -411.3607,  -461.5422,  -528.5969,  -626.0018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2033, device='cuda:0', dtype=torch.float64)
tensor([-1554.2024,  -410.9057,  -460.3406,  -529.0311,  -626.2751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1750, device='cuda:0', dtype=torch.float64)
tensor([-1559.5474,  -410.2890,  -459.6642,  -529.2991,  -626.2651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1998, device='cuda:0', dtype=torch.float64)
tensor([-1562.9885,  -409.7872,  -459.1369,  -530.1580,  -626.4651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1568, device='cuda:0', dtype=torch.float64)
tensor([-1562.9143,  -408.9929,  -458.5670,  -530.0295,  -625.7739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1657, device='cuda:0', dtype=torch.float64)
tensor([-1563.0753,  -408.4037,  -458.2060,  -531.2615,  -625.8911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1504, device='cuda:0', dtype=torch.float64)
tensor([-1564.6001,  -407.7995,  -457.6103,  -531.7829,  -625.4104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1335, device='cuda:0', dtype=torch.float64)
tensor([-1562.5081,  -407.4496,  -456.7841,  -532.1320,  -625.0993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1456, device='cuda:0', dtype=torch.float64)
tensor([-1567.9223,  -406.9851,  -456.1950,  -532.5079,  -624.7683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1657, device='cuda:0', dtype=torch.float64)
tensor([-1572.1684,  -406.2797,  -455.0044,  -530.6516,  -623.2370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1889, device='cuda:0', dtype=torch.float64)
tensor([-1577.8531,  -405.2137,  -453.6371,  -527.4265,  -620.9074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1392, device='cuda:0', dtype=torch.float64)
tensor([-1580.2873,  -404.1931,  -451.8659,  -522.1924,  -617.8066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1384, device='cuda:0', dtype=torch.float64)
tensor([-1586.0621,  -403.2358,  -450.5153,  -518.1757,  -615.3446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1369, device='cuda:0', dtype=torch.float64)
tensor([-1594.4165,  -402.5209,  -448.9166,  -513.6258,  -612.6044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1543, device='cuda:0', dtype=torch.float64)
tensor([-1608.8400,  -401.9047,  -447.6817,  -509.4562,  -610.2812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1612, device='cuda:0', dtype=torch.float64)
tensor([-1620.4967,  -401.6732,  -446.5086,  -505.7258,  -608.4217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1444, device='cuda:0', dtype=torch.float64)
tensor([-1629.9172,  -401.6516,  -445.6771,  -504.1084,  -607.9566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1610, device='cuda:0', dtype=torch.float64)
tensor([-1640.0838,  -401.9787,  -444.8819,  -505.0564,  -608.9721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1408, device='cuda:0', dtype=torch.float64)
tensor([-1652.1767,  -402.4903,  -444.3804,  -506.7540,  -610.2641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1739, device='cuda:0', dtype=torch.float64)
tensor([-1667.0133,  -403.0329,  -443.7354,  -508.1220,  -611.7390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1888, device='cuda:0', dtype=torch.float64)
tensor([-1681.9651,  -403.8434,  -443.2488,  -509.9955,  -613.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1532, device='cuda:0', dtype=torch.float64)
tensor([-1699.7714,  -404.6174,  -442.7912,  -511.1379,  -615.2143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1403, device='cuda:0', dtype=torch.float64)
tensor([-1716.8913,  -405.2437,  -442.1162,  -511.2869,  -615.8630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1502, device='cuda:0', dtype=torch.float64)
tensor([-1730.3520,  -405.6328,  -441.2626,  -510.8882,  -616.0266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1559, device='cuda:0', dtype=torch.float64)
tensor([-1739.9438,  -405.8125,  -440.1453,  -509.1308,  -615.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1570, device='cuda:0', dtype=torch.float64)
tensor([-1747.2389,  -405.8595,  -439.2054,  -506.9780,  -613.6829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1146, device='cuda:0', dtype=torch.float64)
tensor([-1750.8025,  -405.7880,  -438.5439,  -505.7679,  -612.5928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1429, device='cuda:0', dtype=torch.float64)
tensor([-1751.8446,  -405.4369,  -438.0104,  -504.8316,  -611.1480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1202, device='cuda:0', dtype=torch.float64)
tensor([-1754.8934,  -405.0219,  -437.5570,  -504.0101,  -609.7142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1930, device='cuda:0', dtype=torch.float64)
tensor([-1758.0043,  -404.5733,  -437.1878,  -503.9406,  -608.7573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1521, device='cuda:0', dtype=torch.float64)
tensor([-1762.2428,  -403.9875,  -436.8429,  -503.5965,  -607.7154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1483, device='cuda:0', dtype=torch.float64)
tensor([-1767.0014,  -403.3351,  -436.0951,  -501.9742,  -606.0646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1841, device='cuda:0', dtype=torch.float64)
tensor([-1771.0210,  -402.6093,  -435.0770,  -500.6881,  -604.5518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1677, device='cuda:0', dtype=torch.float64)
tensor([-1778.6671,  -401.8304,  -434.2342,  -499.2568,  -602.8633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1336, device='cuda:0', dtype=torch.float64)
tensor([-1782.1249,  -400.8492,  -433.5924,  -498.1116,  -601.0840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1278, device='cuda:0', dtype=torch.float64)
tensor([-1786.4789,  -400.0651,  -433.0320,  -496.5726,  -599.4758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1288, device='cuda:0', dtype=torch.float64)
tensor([-1794.4498,  -399.2671,  -432.8346,  -495.0386,  -598.0515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1494, device='cuda:0', dtype=torch.float64)
tensor([-1798.7869,  -398.5607,  -432.4957,  -494.4055,  -597.1466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1207, device='cuda:0', dtype=torch.float64)
tensor([-1804.3012,  -397.9559,  -431.8272,  -493.3683,  -595.9884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1342, device='cuda:0', dtype=torch.float64)
tensor([-1811.0478,  -397.6084,  -431.0995,  -492.8549,  -595.5809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1786, device='cuda:0', dtype=torch.float64)
tensor([-1822.4417,  -397.3777,  -430.5696,  -494.7319,  -596.5093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1373, device='cuda:0', dtype=torch.float64)
tensor([-1836.2654,  -397.2975,  -430.2256,  -497.1102,  -597.8934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1344, device='cuda:0', dtype=torch.float64)
tensor([-1850.7726,  -397.2512,  -430.3434,  -500.1515,  -599.5344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1168, device='cuda:0', dtype=torch.float64)
tensor([-1866.4482,  -397.3065,  -430.5860,  -502.5941,  -600.9937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1377, device='cuda:0', dtype=torch.float64)
tensor([-1882.7451,  -397.4878,  -430.9674,  -505.0375,  -602.6762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1413, device='cuda:0', dtype=torch.float64)
tensor([-1902.3128,  -397.6607,  -431.4328,  -506.0995,  -603.6280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1432, device='cuda:0', dtype=torch.float64)
tensor([-1922.2265,  -397.6971,  -431.9992,  -507.1580,  -604.3960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1190, device='cuda:0', dtype=torch.float64)
tensor([-1934.8807,  -397.5559,  -432.1833,  -507.0834,  -604.5275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1299, device='cuda:0', dtype=torch.float64)
tensor([-1944.4343,  -397.1857,  -432.0369,  -505.4569,  -603.6805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1380, device='cuda:0', dtype=torch.float64)
tensor([-1955.5615,  -396.8863,  -431.7998,  -502.7605,  -602.2088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1119, device='cuda:0', dtype=torch.float64)
tensor([-1971.1455,  -396.7625,  -431.6340,  -499.8331,  -600.8358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1276, device='cuda:0', dtype=torch.float64)
tensor([-1986.9588,  -396.5842,  -431.4548,  -496.6353,  -599.0760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1491, device='cuda:0', dtype=torch.float64)
tensor([-1997.8779,  -396.1633,  -431.2342,  -493.1063,  -596.7199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1434, device='cuda:0', dtype=torch.float64)
tensor([-2007.5242,  -395.8749,  -430.7116,  -490.2741,  -594.5657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1001, device='cuda:0', dtype=torch.float64)
tensor([-2016.9448,  -395.6145,  -430.0900,  -487.3367,  -592.3076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1576, device='cuda:0', dtype=torch.float64)
tensor([-2024.4617,  -395.5350,  -429.4885,  -486.1022,  -590.9143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1126, device='cuda:0', dtype=torch.float64)
tensor([-2030.9459,  -395.3986,  -428.9092,  -484.9777,  -589.3672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1144, device='cuda:0', dtype=torch.float64)
tensor([-2033.9645,  -395.1130,  -428.0446,  -484.1710,  -587.7711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1581, device='cuda:0', dtype=torch.float64)
tensor([-2032.9436,  -394.9023,  -427.1259,  -484.6841,  -586.8425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1135, device='cuda:0', dtype=torch.float64)
tensor([-2030.6573,  -394.6641,  -426.0478,  -485.4144,  -586.2771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1047, device='cuda:0', dtype=torch.float64)
tensor([-2029.7028,  -394.4066,  -424.9685,  -486.2058,  -585.5777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1154, device='cuda:0', dtype=torch.float64)
tensor([-2031.5288,  -394.2365,  -424.1196,  -488.0039,  -585.5448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1051, device='cuda:0', dtype=torch.float64)
tensor([-2034.2025,  -394.2287,  -423.7154,  -489.9932,  -585.7944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1225, device='cuda:0', dtype=torch.float64)
tensor([-2036.2605,  -394.3246,  -423.1335,  -492.0696,  -586.3470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1180, device='cuda:0', dtype=torch.float64)
tensor([-2043.4315,  -394.2644,  -422.8679,  -492.9873,  -586.4397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0951, device='cuda:0', dtype=torch.float64)
tensor([-2052.3265,  -394.1259,  -422.2681,  -492.9208,  -585.6758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1025, device='cuda:0', dtype=torch.float64)
tensor([-2062.1587,  -393.7762,  -421.5216,  -492.2340,  -584.5027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1202, device='cuda:0', dtype=torch.float64)
tensor([-2070.8357,  -393.4180,  -420.7550,  -492.1031,  -583.4892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1259, device='cuda:0', dtype=torch.float64)
tensor([-2084.7762,  -392.9777,  -419.9941,  -490.6158,  -581.6626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0905, device='cuda:0', dtype=torch.float64)
tensor([-2097.0217,  -392.7113,  -419.1785,  -489.4761,  -580.2004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1105, device='cuda:0', dtype=torch.float64)
tensor([-2109.5539,  -392.5713,  -418.3808,  -488.7160,  -579.2198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1236, device='cuda:0', dtype=torch.float64)
tensor([-2120.8443,  -392.2573,  -417.4546,  -487.4131,  -577.7660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1028, device='cuda:0', dtype=torch.float64)
tensor([-2130.2424,  -391.9063,  -416.5596,  -486.4307,  -576.6856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1190, device='cuda:0', dtype=torch.float64)
tensor([-2138.4670,  -391.4144,  -415.7859,  -485.3338,  -575.5842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1357, device='cuda:0', dtype=torch.float64)
tensor([-2141.3112,  -390.7806,  -415.1055,  -484.3703,  -574.6406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1486, device='cuda:0', dtype=torch.float64)
tensor([-2137.6800,  -390.1750,  -413.8773,  -483.9748,  -573.8177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1048, device='cuda:0', dtype=torch.float64)
tensor([-2132.9600,  -389.5773,  -412.5551,  -483.3716,  -572.8601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1117, device='cuda:0', dtype=torch.float64)
tensor([-2131.9212,  -389.0735,  -411.4648,  -482.9257,  -572.0075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1132, device='cuda:0', dtype=torch.float64)
tensor([-2134.4305,  -388.5300,  -410.4914,  -482.2353,  -570.8570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1461, device='cuda:0', dtype=torch.float64)
tensor([-2133.2741,  -388.1563,  -409.6894,  -482.6610,  -570.5760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1157, device='cuda:0', dtype=torch.float64)
tensor([-2133.7603,  -387.9320,  -408.8592,  -482.7665,  -570.2174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1113, device='cuda:0', dtype=torch.float64)
tensor([-2133.8722,  -387.7525,  -407.9458,  -482.8150,  -569.8053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1198, device='cuda:0', dtype=torch.float64)
tensor([-2134.5118,  -387.8014,  -407.1476,  -483.8827,  -570.0533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1202, device='cuda:0', dtype=torch.float64)
tensor([-2141.5525,  -388.0540,  -406.2344,  -483.4496,  -569.7607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1307, device='cuda:0', dtype=torch.float64)
tensor([-2144.1369,  -388.2212,  -405.5621,  -483.9613,  -569.8948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1096, device='cuda:0', dtype=torch.float64)
tensor([-2146.2080,  -388.2075,  -405.1673,  -484.1524,  -569.8660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1090, device='cuda:0', dtype=torch.float64)
tensor([-2147.5157,  -387.9167,  -404.7814,  -483.6934,  -569.2576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1346, device='cuda:0', dtype=torch.float64)
tensor([-2153.9716,  -387.9761,  -404.8263,  -483.6547,  -569.1606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1223, device='cuda:0', dtype=torch.float64)
tensor([-2163.1875,  -388.0114,  -404.8207,  -483.2710,  -568.7082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0979, device='cuda:0', dtype=torch.float64)
tensor([-2170.8940,  -387.9739,  -404.6738,  -482.2075,  -568.0205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1375, device='cuda:0', dtype=torch.float64)
tensor([-2178.5689,  -388.0338,  -404.6486,  -481.2522,  -567.5128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1187, device='cuda:0', dtype=torch.float64)
tensor([-2186.2738,  -387.9184,  -404.4600,  -479.9467,  -566.6350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1007, device='cuda:0', dtype=torch.float64)
tensor([-2193.6535,  -387.6784,  -404.2023,  -479.0959,  -565.9777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-2202.9373,  -387.3552,  -403.8446,  -477.7328,  -564.9950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0976, device='cuda:0', dtype=torch.float64)
tensor([-2209.8296,  -386.8066,  -403.4812,  -475.9222,  -563.5401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1181, device='cuda:0', dtype=torch.float64)
tensor([-2215.8374,  -386.2078,  -403.0113,  -473.7659,  -561.9908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0998, device='cuda:0', dtype=torch.float64)
tensor([-2219.1172,  -385.5533,  -402.3509,  -470.8538,  -559.7878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0925, device='cuda:0', dtype=torch.float64)
tensor([-2220.4595,  -384.8202,  -401.7430,  -468.1553,  -557.6237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0992, device='cuda:0', dtype=torch.float64)
tensor([-2222.7033,  -384.3076,  -401.0791,  -466.1146,  -555.7517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0910, device='cuda:0', dtype=torch.float64)
tensor([-2225.1727,  -383.7395,  -400.5983,  -464.4937,  -554.0138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1072, device='cuda:0', dtype=torch.float64)
tensor([-2227.1824,  -383.0561,  -400.1689,  -463.2161,  -552.3866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1065, device='cuda:0', dtype=torch.float64)
tensor([-2230.7721,  -382.5449,  -399.6114,  -462.6662,  -551.2716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1027, device='cuda:0', dtype=torch.float64)
tensor([-2235.8125,  -382.2435,  -399.0997,  -462.8921,  -550.9825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1070, device='cuda:0', dtype=torch.float64)
tensor([-2239.8629,  -381.9308,  -398.3943,  -463.6842,  -550.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-2243.7109,  -381.6494,  -397.6161,  -464.1764,  -550.4762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1141, device='cuda:0', dtype=torch.float64)
tensor([-2245.8960,  -381.4882,  -396.8368,  -465.8301,  -550.7786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1039, device='cuda:0', dtype=torch.float64)
tensor([-2246.7779,  -381.3333,  -396.0955,  -466.8814,  -550.8795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1009, device='cuda:0', dtype=torch.float64)
tensor([-2244.8270,  -381.2080,  -395.1137,  -468.0630,  -551.0355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1223, device='cuda:0', dtype=torch.float64)
tensor([-2245.3900,  -381.3212,  -394.1210,  -468.9477,  -551.0894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1276, device='cuda:0', dtype=torch.float64)
tensor([-2245.4577,  -381.1808,  -393.0960,  -468.5721,  -550.2448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1197, device='cuda:0', dtype=torch.float64)
tensor([-2246.2521,  -380.8953,  -391.7894,  -467.6657,  -548.8063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2528, device='cuda:0', dtype=torch.float64)
tensor([-2264.5607,  -380.5173,  -390.7580,  -466.1918,  -546.8584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1168, device='cuda:0', dtype=torch.float64)
tensor([-2280.8142,  -380.2354,  -389.8048,  -465.0011,  -545.3209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0973, device='cuda:0', dtype=torch.float64)
tensor([-2291.7565,  -379.7213,  -388.8098,  -462.3669,  -542.8158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1061, device='cuda:0', dtype=torch.float64)
tensor([-2295.8480,  -378.8815,  -387.8819,  -459.1931,  -539.7242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0997, device='cuda:0', dtype=torch.float64)
tensor([-2297.9703,  -378.0559,  -386.9027,  -455.7188,  -536.3633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0933, device='cuda:0', dtype=torch.float64)
tensor([-2300.2591,  -377.1834,  -386.0669,  -452.0734,  -532.9201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-2308.3625,  -376.5807,  -385.5878,  -449.1899,  -530.0568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1140, device='cuda:0', dtype=torch.float64)
tensor([-2313.9523,  -376.0357,  -385.0816,  -447.7920,  -528.1506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0990, device='cuda:0', dtype=torch.float64)
tensor([-2318.7731,  -375.5020,  -384.8418,  -446.3843,  -526.2681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0975, device='cuda:0', dtype=torch.float64)
tensor([-2322.6770,  -375.0524,  -384.6685,  -445.2870,  -524.9378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0824, device='cuda:0', dtype=torch.float64)
tensor([-2328.0250,  -374.6472,  -384.4293,  -444.3105,  -523.6412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0978, device='cuda:0', dtype=torch.float64)
tensor([-2334.7197,  -374.4039,  -383.9152,  -444.7229,  -523.5803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1063, device='cuda:0', dtype=torch.float64)
tensor([-2345.1622,  -374.3335,  -383.1990,  -445.8188,  -524.1431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1085, device='cuda:0', dtype=torch.float64)
tensor([-2358.4802,  -374.5849,  -382.4841,  -447.1764,  -525.1614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0923, device='cuda:0', dtype=torch.float64)
tensor([-2368.8491,  -374.8467,  -381.7625,  -448.7934,  -526.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0825, device='cuda:0', dtype=torch.float64)
tensor([-2377.1522,  -375.0578,  -381.2060,  -449.5312,  -526.8938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1013, device='cuda:0', dtype=torch.float64)
tensor([-2384.8032,  -375.3990,  -380.6339,  -450.7352,  -527.9307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1223, device='cuda:0', dtype=torch.float64)
tensor([-2389.1547,  -375.5870,  -380.1152,  -451.8502,  -528.8042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0824, device='cuda:0', dtype=torch.float64)
tensor([-2390.6035,  -375.7673,  -379.5082,  -453.2706,  -529.9557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1045, device='cuda:0', dtype=torch.float64)
tensor([-2387.6070,  -375.6533,  -378.7482,  -453.6212,  -530.4346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0909, device='cuda:0', dtype=torch.float64)
tensor([-2384.1870,  -375.3845,  -378.0002,  -453.1995,  -530.2849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1178, device='cuda:0', dtype=torch.float64)
tensor([-2386.5932,  -375.0729,  -377.3936,  -452.2540,  -529.6831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0848, device='cuda:0', dtype=torch.float64)
tensor([-2386.8113,  -374.6506,  -376.6666,  -450.7211,  -528.5898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1060, device='cuda:0', dtype=torch.float64)
tensor([-2387.7509,  -374.0305,  -375.8168,  -449.1643,  -527.1676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0984, device='cuda:0', dtype=torch.float64)
tensor([-2387.6828,  -373.2096,  -375.0333,  -447.1104,  -525.2945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0818, device='cuda:0', dtype=torch.float64)
tensor([-2387.2819,  -372.4303,  -374.3745,  -445.2180,  -523.4905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0932, device='cuda:0', dtype=torch.float64)
tensor([-2383.1535,  -371.4857,  -373.5443,  -442.8228,  -521.2386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0833, device='cuda:0', dtype=torch.float64)
tensor([-2375.1841,  -370.5946,  -372.6505,  -440.9021,  -519.3066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-2366.1224,  -369.6722,  -371.9622,  -438.5187,  -517.1977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0856, device='cuda:0', dtype=torch.float64)
tensor([-2357.5682,  -368.8108,  -371.3778,  -435.9257,  -514.8884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0847, device='cuda:0', dtype=torch.float64)
tensor([-2350.9615,  -368.0281,  -370.9270,  -433.7336,  -512.8717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1053, device='cuda:0', dtype=torch.float64)
tensor([-2344.7910,  -367.4400,  -370.2205,  -432.0219,  -511.1075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0915, device='cuda:0', dtype=torch.float64)
tensor([-2341.4244,  -366.8502,  -369.6525,  -430.7551,  -509.7815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0773, device='cuda:0', dtype=torch.float64)
tensor([-2339.9227,  -366.4280,  -369.0446,  -430.1040,  -508.8652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-2342.1087,  -366.0919,  -368.4241,  -429.9514,  -508.1866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0947, device='cuda:0', dtype=torch.float64)
tensor([-2345.3105,  -365.8011,  -367.8062,  -429.6421,  -507.3896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0822, device='cuda:0', dtype=torch.float64)
tensor([-2348.9683,  -365.5982,  -367.1432,  -429.8336,  -506.9612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0761, device='cuda:0', dtype=torch.float64)
tensor([-2357.4254,  -365.3961,  -366.6026,  -430.2256,  -506.6211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0886, device='cuda:0', dtype=torch.float64)
tensor([-2369.4542,  -365.2726,  -366.4048,  -430.5972,  -506.4355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0881, device='cuda:0', dtype=torch.float64)
tensor([-2385.3573,  -365.0072,  -366.5535,  -430.5744,  -505.7166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0766, device='cuda:0', dtype=torch.float64)
tensor([-2395.3787,  -364.7366,  -366.4890,  -430.2884,  -504.8908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0862, device='cuda:0', dtype=torch.float64)
tensor([-2404.5407,  -364.5085,  -366.2018,  -430.0603,  -504.0797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1088, device='cuda:0', dtype=torch.float64)
tensor([-2414.7934,  -364.4073,  -365.9069,  -429.5470,  -503.0474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0775, device='cuda:0', dtype=torch.float64)
tensor([-2423.0956,  -364.2877,  -365.6504,  -429.1037,  -502.1728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-2428.7549,  -364.0824,  -365.2829,  -428.6169,  -501.2332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1057, device='cuda:0', dtype=torch.float64)
tensor([-2434.2986,  -363.8431,  -364.7784,  -427.9927,  -500.0540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0976, device='cuda:0', dtype=torch.float64)
tensor([-2438.7823,  -363.5939,  -364.1699,  -427.2912,  -498.6613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0769, device='cuda:0', dtype=torch.float64)
tensor([-2443.4382,  -363.2135,  -363.8831,  -426.4529,  -497.2430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1076, device='cuda:0', dtype=torch.float64)
tensor([-2443.9024,  -362.7007,  -363.3052,  -425.6206,  -495.8949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0743, device='cuda:0', dtype=torch.float64)
tensor([-2441.7934,  -362.1887,  -362.6739,  -424.4301,  -494.2620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0986, device='cuda:0', dtype=torch.float64)
tensor([-2433.1341,  -361.6163,  -361.3728,  -423.4882,  -493.0041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1132, device='cuda:0', dtype=torch.float64)
tensor([-2420.7194,  -360.9310,  -360.0533,  -422.4514,  -491.5054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0932, device='cuda:0', dtype=torch.float64)
tensor([-2411.9295,  -360.2245,  -358.7999,  -421.1956,  -489.7987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0886, device='cuda:0', dtype=torch.float64)
tensor([-2402.4686,  -359.4031,  -357.7270,  -419.4552,  -487.6964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1000, device='cuda:0', dtype=torch.float64)
tensor([-2391.9003,  -358.5936,  -356.8821,  -417.3737,  -485.4768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0782, device='cuda:0', dtype=torch.float64)
tensor([-2382.2930,  -357.9529,  -355.8212,  -416.1266,  -484.0092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-2373.3089,  -357.2635,  -354.9983,  -415.0338,  -482.6081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-2363.2831,  -356.4609,  -354.2268,  -413.3402,  -480.6923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0872, device='cuda:0', dtype=torch.float64)
tensor([-2357.0539,  -355.6527,  -353.4884,  -411.7777,  -478.6873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1226, device='cuda:0', dtype=torch.float64)
tensor([-2349.4146,  -354.9464,  -352.6366,  -411.0533,  -477.4281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0851, device='cuda:0', dtype=torch.float64)
tensor([-2339.6976,  -354.3363,  -351.7238,  -410.3375,  -476.4173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0820, device='cuda:0', dtype=torch.float64)
tensor([-2331.1832,  -353.7430,  -350.7085,  -410.0414,  -475.7661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0782, device='cuda:0', dtype=torch.float64)
tensor([-2323.5704,  -353.1205,  -349.8337,  -409.6718,  -474.9220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0734, device='cuda:0', dtype=torch.float64)
tensor([-2316.9790,  -352.4371,  -349.2364,  -409.3976,  -474.1931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1025, device='cuda:0', dtype=torch.float64)
tensor([-2314.5749,  -351.8390,  -348.6435,  -408.9381,  -473.3370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0942, device='cuda:0', dtype=torch.float64)
tensor([-2317.8184,  -351.4635,  -347.9972,  -408.9538,  -472.8961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0808, device='cuda:0', dtype=torch.float64)
tensor([-2320.9699,  -351.2250,  -347.1213,  -408.9420,  -472.4828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1080, device='cuda:0', dtype=torch.float64)
tensor([-2328.8402,  -351.0598,  -346.3597,  -408.7951,  -471.8947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0680, device='cuda:0', dtype=torch.float64)
tensor([-2329.6906,  -350.8453,  -345.5078,  -408.2078,  -471.1597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1088, device='cuda:0', dtype=torch.float64)
tensor([-2332.3321,  -350.7165,  -344.6423,  -407.4685,  -470.2569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0918, device='cuda:0', dtype=torch.float64)
tensor([-2343.5756,  -350.6735,  -344.0546,  -406.2252,  -468.8104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-2351.8478,  -350.7180,  -343.2236,  -404.6907,  -467.4191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1002, device='cuda:0', dtype=torch.float64)
tensor([-2357.7017,  -350.5393,  -342.3860,  -402.3512,  -465.1370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0773, device='cuda:0', dtype=torch.float64)
tensor([-2358.5403,  -350.2120,  -341.5078,  -400.1906,  -462.9708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1212, device='cuda:0', dtype=torch.float64)
tensor([-2358.2546,  -349.9293,  -340.5830,  -398.4962,  -461.2934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1168, device='cuda:0', dtype=torch.float64)
tensor([-2352.9597,  -349.4894,  -339.1732,  -396.8505,  -459.4501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1182, device='cuda:0', dtype=torch.float64)
tensor([-2339.6753,  -348.8182,  -337.5341,  -395.0222,  -457.2846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0807, device='cuda:0', dtype=torch.float64)
tensor([-2328.3453,  -348.0984,  -336.0678,  -393.4660,  -455.2512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0882, device='cuda:0', dtype=torch.float64)
tensor([-2316.4602,  -347.2927,  -334.3956,  -392.2619,  -453.4086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0966, device='cuda:0', dtype=torch.float64)
tensor([-2298.5479,  -346.4330,  -332.3073,  -391.4719,  -451.8964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1109, device='cuda:0', dtype=torch.float64)
tensor([-2278.6237,  -345.5814,  -330.1512,  -391.0791,  -450.7785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-2262.6192,  -344.5980,  -328.5349,  -390.2104,  -449.2483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0911, device='cuda:0', dtype=torch.float64)
tensor([-2250.8619,  -343.6967,  -327.1786,  -389.1017,  -447.4052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0775, device='cuda:0', dtype=torch.float64)
tensor([-2241.5265,  -342.7666,  -326.0782,  -387.4878,  -445.1786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0772, device='cuda:0', dtype=torch.float64)
tensor([-2232.3827,  -341.8102,  -325.0912,  -385.9290,  -443.0050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0834, device='cuda:0', dtype=torch.float64)
tensor([-2220.0825,  -340.9013,  -323.7667,  -384.5867,  -441.1650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0971, device='cuda:0', dtype=torch.float64)
tensor([-2215.4398,  -340.0503,  -322.6987,  -383.2589,  -439.1538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1971, device='cuda:0', dtype=torch.float64)
tensor([-2212.1469,  -339.3066,  -321.7920,  -382.2473,  -437.8330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-2213.5991,  -338.5752,  -321.1554,  -381.0925,  -436.3291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-2215.2739,  -337.8380,  -320.7947,  -379.8281,  -434.8617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0949, device='cuda:0', dtype=torch.float64)
tensor([-2217.1580,  -337.1152,  -320.5796,  -378.5796,  -433.3911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0903, device='cuda:0', dtype=torch.float64)
tensor([-2219.9114,  -336.6760,  -320.0586,  -377.6128,  -432.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1070, device='cuda:0', dtype=torch.float64)
tensor([-2221.9771,  -336.2827,  -319.4255,  -376.8156,  -431.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0801, device='cuda:0', dtype=torch.float64)
tensor([-2220.7479,  -335.9208,  -318.7087,  -376.1680,  -430.9677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0905, device='cuda:0', dtype=torch.float64)
tensor([-2223.6678,  -335.7750,  -318.1562,  -375.6913,  -430.6628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0785, device='cuda:0', dtype=torch.float64)
tensor([-2226.8306,  -335.7587,  -317.5949,  -375.4291,  -430.5918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0762, device='cuda:0', dtype=torch.float64)
tensor([-2231.7956,  -335.7965,  -316.8717,  -375.2691,  -430.4969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-2226.2964,  -335.6542,  -315.9623,  -374.6261,  -429.9694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0988, device='cuda:0', dtype=torch.float64)
tensor([-2218.6770,  -335.4853,  -314.9064,  -373.8088,  -429.2839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1124, device='cuda:0', dtype=torch.float64)
tensor([-2203.1528,  -335.2000,  -313.6611,  -372.9791,  -428.6616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0883, device='cuda:0', dtype=torch.float64)
tensor([-2187.7552,  -334.6170,  -312.3762,  -371.8546,  -427.5030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0921, device='cuda:0', dtype=torch.float64)
tensor([-2170.7887,  -334.1464,  -311.0043,  -370.7377,  -426.5488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0997, device='cuda:0', dtype=torch.float64)
tensor([-2155.9061,  -333.5217,  -309.5363,  -369.0075,  -424.7949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1048, device='cuda:0', dtype=torch.float64)
tensor([-2139.1622,  -332.9357,  -308.1443,  -367.5163,  -423.3760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0735, device='cuda:0', dtype=torch.float64)
tensor([-2119.0416,  -332.4371,  -306.4700,  -366.0511,  -422.0305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0821, device='cuda:0', dtype=torch.float64)
tensor([-2103.9382,  -331.9470,  -304.9569,  -364.9352,  -420.9163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0829, device='cuda:0', dtype=torch.float64)
tensor([-2088.2315,  -331.2762,  -303.4866,  -363.5118,  -419.4161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0996, device='cuda:0', dtype=torch.float64)
tensor([-2077.7432,  -330.7654,  -302.2153,  -362.3744,  -418.1804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0989, device='cuda:0', dtype=torch.float64)
tensor([-2065.7278,  -330.2288,  -301.0474,  -361.1208,  -416.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0790, device='cuda:0', dtype=torch.float64)
tensor([-2048.2521,  -329.3797,  -299.9565,  -359.4358,  -414.8063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-2034.1502,  -328.6388,  -298.8242,  -357.8462,  -412.9408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1078, device='cuda:0', dtype=torch.float64)
tensor([-2023.0984,  -327.8282,  -297.9719,  -356.5185,  -411.0321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0778, device='cuda:0', dtype=torch.float64)
tensor([-2016.0193,  -327.1486,  -297.1138,  -355.3808,  -409.3498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-2003.7222,  -326.3517,  -296.2581,  -354.2215,  -407.4938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0876, device='cuda:0', dtype=torch.float64)
tensor([-1994.2280,  -325.7080,  -295.0945,  -353.3811,  -405.9954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0770, device='cuda:0', dtype=torch.float64)
tensor([-1983.0430,  -325.2594,  -293.8603,  -352.9069,  -405.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0800, device='cuda:0', dtype=torch.float64)
tensor([-1972.0203,  -324.9378,  -292.5057,  -352.4814,  -404.2442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0931, device='cuda:0', dtype=torch.float64)
tensor([-1955.4784,  -324.5753,  -291.0477,  -352.1303,  -403.4745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1043, device='cuda:0', dtype=torch.float64)
tensor([-1935.7258,  -324.3479,  -289.4206,  -352.0516,  -402.9833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0888, device='cuda:0', dtype=torch.float64)
tensor([-1923.1522,  -324.1762,  -287.8964,  -351.9931,  -402.4158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0758, device='cuda:0', dtype=torch.float64)
tensor([-1906.5460,  -323.9242,  -286.7767,  -351.9433,  -402.0925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-1888.8440,  -323.5468,  -285.8787,  -351.7296,  -401.6454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0969, device='cuda:0', dtype=torch.float64)
tensor([-1869.0973,  -322.8534,  -285.1259,  -350.9594,  -400.5687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0825, device='cuda:0', dtype=torch.float64)
tensor([-1849.4681,  -321.8321,  -284.5939,  -349.7568,  -398.9146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0992, device='cuda:0', dtype=torch.float64)
tensor([-1829.7564,  -320.8602,  -284.1054,  -348.4478,  -397.2290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-1806.8412,  -319.8682,  -283.6623,  -346.9813,  -395.4340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0996, device='cuda:0', dtype=torch.float64)
tensor([-1788.8210,  -318.7776,  -283.3179,  -345.5534,  -393.4318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-1767.7835,  -317.7084,  -282.8930,  -344.1852,  -391.5042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0831, device='cuda:0', dtype=torch.float64)
tensor([-1742.3495,  -316.6061,  -282.5262,  -342.6185,  -389.5483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0912, device='cuda:0', dtype=torch.float64)
tensor([-1720.7581,  -315.7471,  -282.0102,  -341.2964,  -387.9410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0856, device='cuda:0', dtype=torch.float64)
tensor([-1697.9577,  -315.0317,  -281.2369,  -340.2120,  -386.5469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0882, device='cuda:0', dtype=torch.float64)
tensor([-1686.9159,  -314.5626,  -280.2004,  -339.2398,  -385.3673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0824, device='cuda:0', dtype=torch.float64)
tensor([-1670.2766,  -314.2358,  -279.0558,  -338.5509,  -384.6500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0845, device='cuda:0', dtype=torch.float64)
tensor([-1667.7998,  -314.0763,  -278.1094,  -338.0452,  -384.2465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0825, device='cuda:0', dtype=torch.float64)
tensor([-1659.6247,  -314.0035,  -277.2045,  -337.4911,  -383.9594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0972, device='cuda:0', dtype=torch.float64)
tensor([-1642.3881,  -313.9444,  -276.1168,  -336.6998,  -383.3569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1053, device='cuda:0', dtype=torch.float64)
tensor([-1630.0912,  -313.8516,  -275.2443,  -335.8503,  -382.7444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0778, device='cuda:0', dtype=torch.float64)
tensor([-1622.2845,  -313.8048,  -274.4161,  -335.1178,  -382.2604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-1620.0136,  -313.7033,  -273.6934,  -334.5966,  -381.7875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0831, device='cuda:0', dtype=torch.float64)
tensor([-1623.2079,  -313.7990,  -272.9396,  -334.2783,  -381.4852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0763, device='cuda:0', dtype=torch.float64)
tensor([-1634.4472,  -313.7003,  -272.3867,  -333.7144,  -380.8382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0932, device='cuda:0', dtype=torch.float64)
tensor([-1635.1046,  -313.4452,  -271.8347,  -333.2926,  -380.2851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0710, device='cuda:0', dtype=torch.float64)
tensor([-1622.0675,  -312.9352,  -271.3326,  -332.4739,  -379.3592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0848, device='cuda:0', dtype=torch.float64)
tensor([-1602.1863,  -312.4946,  -270.5291,  -331.8065,  -378.3982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0720, device='cuda:0', dtype=torch.float64)
tensor([-1584.5645,  -312.1212,  -269.6063,  -331.1033,  -377.2858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1018, device='cuda:0', dtype=torch.float64)
tensor([-1559.9865,  -311.5615,  -268.9252,  -330.3368,  -376.0504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0780, device='cuda:0', dtype=torch.float64)
tensor([-1531.5217,  -310.7816,  -268.3046,  -329.3539,  -374.4287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0832, device='cuda:0', dtype=torch.float64)
tensor([-1511.2611,  -310.0347,  -267.7631,  -328.5524,  -372.9960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0954, device='cuda:0', dtype=torch.float64)
tensor([-1504.7091,  -309.2024,  -267.2942,  -327.5244,  -371.2295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0895, device='cuda:0', dtype=torch.float64)
tensor([-1491.6082,  -308.1678,  -267.0181,  -326.4019,  -369.3224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0705, device='cuda:0', dtype=torch.float64)
tensor([-1484.2585,  -307.2683,  -266.8520,  -325.4323,  -367.6187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0860, device='cuda:0', dtype=torch.float64)
tensor([-1483.4283,  -306.5312,  -266.5390,  -324.6877,  -366.2581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0810, device='cuda:0', dtype=torch.float64)
tensor([-1464.8254,  -305.9226,  -266.0637,  -324.0712,  -365.1468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-1446.3668,  -305.4366,  -265.4788,  -323.8311,  -364.4396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0651, device='cuda:0', dtype=torch.float64)
tensor([-1429.4705,  -304.9880,  -264.9122,  -323.6692,  -363.8707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0697, device='cuda:0', dtype=torch.float64)
tensor([-1396.6350,  -304.5315,  -264.3634,  -323.3754,  -363.2344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0696, device='cuda:0', dtype=torch.float64)
tensor([-1352.7378,  -303.8476,  -264.0510,  -322.8528,  -362.3581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1099, device='cuda:0', dtype=torch.float64)
tensor([-1279.7315,  -303.0693,  -263.6838,  -322.2430,  -361.4621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0675, device='cuda:0', dtype=torch.float64)
tensor([-1177.3984,  -302.4783,  -263.0361,  -321.6927,  -360.7395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0729, device='cuda:0', dtype=torch.float64)
tensor([-1050.2016,  -301.9621,  -262.2659,  -321.1112,  -360.0397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0795, device='cuda:0', dtype=torch.float64)
tensor([-893.7701, -301.4900, -261.5245, -320.6828, -359.5237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0816, device='cuda:0', dtype=torch.float64)
tensor([-764.9670, -300.9180, -260.8459, -320.0605, -358.6917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0793, device='cuda:0', dtype=torch.float64)
tensor([-744.3545, -300.5040, -260.0208, -319.3505, -357.7152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0787, device='cuda:0', dtype=torch.float64)
tensor([-719.7048, -300.0143, -259.3084, -318.6592, -356.7299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0893, device='cuda:0', dtype=torch.float64)
tensor([-701.8500, -299.4426, -258.7360, -318.1017, -355.8274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0764, device='cuda:0', dtype=torch.float64)
tensor([-691.6716, -298.9755, -258.2282, -317.6031, -355.1836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0729, device='cuda:0', dtype=torch.float64)
tensor([-677.0628, -298.2419, -257.6568, -316.7475, -354.0490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0932, device='cuda:0', dtype=torch.float64)
tensor([-656.3675, -297.4181, -257.1211, -315.7922, -352.7228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0920, device='cuda:0', dtype=torch.float64)
tensor([-646.1725, -296.5588, -256.7890, -314.6640, -351.1437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0802, device='cuda:0', dtype=torch.float64)
tensor([-635.4382, -295.9287, -256.3853, -313.9766, -350.1605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0751, device='cuda:0', dtype=torch.float64)
tensor([-620.7361, -295.4061, -255.6657, -313.3342, -349.1182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0724, device='cuda:0', dtype=torch.float64)
tensor([-610.6054, -294.9934, -254.9656, -312.9619, -348.3592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-600.0570, -294.7042, -254.1985, -312.7545, -347.9507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0845, device='cuda:0', dtype=torch.float64)
tensor([-589.2875, -294.6201, -253.3524, -312.6097, -347.7356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0763, device='cuda:0', dtype=torch.float64)
tensor([-577.4620, -294.6091, -252.5471, -312.5156, -347.6232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-565.3721, -294.6511, -251.8618, -312.4813, -347.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0784, device='cuda:0', dtype=torch.float64)
tensor([-549.6719, -294.7758, -251.3351, -312.5091, -347.6875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-532.1504, -294.7497, -250.9321, -312.1829, -347.3636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-516.2605, -294.5045, -250.7571, -311.6416, -346.7805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-499.8201, -294.0657, -250.6389, -310.9268, -345.8588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0952, device='cuda:0', dtype=torch.float64)
tensor([-485.0268, -293.6378, -250.6418, -310.2380, -344.9273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0899, device='cuda:0', dtype=torch.float64)
tensor([-476.2805, -293.1167, -250.6365, -309.4699, -343.7472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0780, device='cuda:0', dtype=torch.float64)
tensor([-457.5440, -292.5222, -250.6067, -308.5506, -342.4849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0679, device='cuda:0', dtype=torch.float64)
tensor([-442.5222, -291.8175, -250.6778, -307.6891, -341.2472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0763, device='cuda:0', dtype=torch.float64)
tensor([-427.6130, -291.1021, -250.6588, -307.0826, -340.2956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-411.0756, -290.2663, -250.6860, -306.5713, -339.4522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0755, device='cuda:0', dtype=torch.float64)
tensor([-396.0331, -289.3614, -250.7421, -306.1052, -338.6012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-384.7874, -288.5341, -250.7568, -305.7757, -337.8690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-374.1810, -287.7339, -250.7242, -305.5064, -337.2814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0861, device='cuda:0', dtype=torch.float64)
tensor([-361.4465, -286.8958, -250.6992, -305.1930, -336.7513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0699, device='cuda:0', dtype=torch.float64)
tensor([-351.1233, -286.1644, -250.6289, -304.8865, -336.2433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0876, device='cuda:0', dtype=torch.float64)
tensor([-343.2957, -285.6003, -250.4334, -304.5704, -335.7638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-336.5705, -284.9071, -250.3151, -304.2144, -335.2248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0938, device='cuda:0', dtype=torch.float64)
tensor([-331.2798, -284.1103, -250.3393, -303.6630, -334.4039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0698, device='cuda:0', dtype=torch.float64)
tensor([-326.2693, -283.3772, -250.2374, -303.2663, -333.7793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-322.8502, -282.7472, -250.0107, -302.9064, -333.2306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0757, device='cuda:0', dtype=torch.float64)
tensor([-321.8096, -282.0663, -249.8388, -302.4564, -332.5326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-321.4556, -281.4476, -249.7052, -301.8900, -331.7899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0633, device='cuda:0', dtype=torch.float64)
tensor([-320.9087, -280.7900, -249.5711, -301.2211, -330.9335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0659, device='cuda:0', dtype=torch.float64)
tensor([-319.7480, -280.2535, -249.3067, -300.5921, -330.2033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0677, device='cuda:0', dtype=torch.float64)
tensor([-318.2134, -279.8437, -248.9305, -299.8962, -329.3802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-316.5695, -279.5907, -248.5126, -299.1316, -328.5250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-314.9565, -279.3797, -248.0443, -298.4194, -327.6591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-313.0312, -279.2244, -247.5392, -297.7366, -326.8110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-310.8789, -279.1350, -247.0080, -297.0460, -326.0081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-308.7612, -278.9296, -246.5406, -296.2552, -325.0197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0694, device='cuda:0', dtype=torch.float64)
tensor([-306.6897, -278.6465, -246.1662, -295.4537, -324.0158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0780, device='cuda:0', dtype=torch.float64)
tensor([-304.7052, -278.2876, -245.9500, -294.7792, -323.0811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-302.3872, -277.9369, -245.7347, -294.0692, -322.0766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0680, device='cuda:0', dtype=torch.float64)
tensor([-300.5738, -277.6987, -245.3407, -293.5006, -321.1949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-299.0699, -277.4363, -245.0738, -293.0642, -320.3962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-297.6268, -277.2100, -244.8462, -292.6771, -319.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-296.4369, -276.9631, -244.6607, -292.3864, -319.3452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0753, device='cuda:0', dtype=torch.float64)
tensor([-295.3638, -276.7323, -244.4513, -291.9966, -318.8803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0917, device='cuda:0', dtype=torch.float64)
tensor([-294.6448, -276.5733, -244.2156, -291.6960, -318.5742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0677, device='cuda:0', dtype=torch.float64)
tensor([-294.1470, -276.5548, -243.9736, -291.4239, -318.3664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-293.8282, -276.4447, -243.8641, -291.3163, -318.3375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-293.8329, -276.4590, -243.6762, -291.3812, -318.5318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0955, device='cuda:0', dtype=torch.float64)
tensor([-293.2678, -276.2066, -243.6762, -291.2476, -318.4557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0802, device='cuda:0', dtype=torch.float64)
tensor([-292.6561, -275.9645, -243.5841, -291.0465, -318.3455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-291.9034, -275.6325, -243.5590, -290.7604, -318.1010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0537, device='cuda:0', dtype=torch.float64)
tensor([-291.1243, -275.2082, -243.5240, -290.3546, -317.6364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0685, device='cuda:0', dtype=torch.float64)
tensor([-290.7637, -274.9079, -243.3721, -290.0542, -317.3686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1307, device='cuda:0', dtype=torch.float64)
tensor([-290.2586, -274.5154, -243.3356, -289.7929, -317.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0897, device='cuda:0', dtype=torch.float64)
tensor([-289.8148, -274.1188, -243.2852, -289.7465, -316.8961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-289.5744, -273.8388, -243.0689, -289.7773, -317.0080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0651, device='cuda:0', dtype=torch.float64)
tensor([-289.3521, -273.4664, -242.9656, -289.6279, -316.9345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0768, device='cuda:0', dtype=torch.float64)
tensor([-288.8328, -273.0260, -242.9016, -289.1287, -316.4469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-287.4775, -272.3954, -242.9795, -288.1091, -315.3214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0612, device='cuda:0', dtype=torch.float64)
tensor([-285.9916, -271.7638, -243.1424, -286.9613, -314.0029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0832, device='cuda:0', dtype=torch.float64)
tensor([-284.7528, -271.2145, -243.3778, -286.0616, -312.9626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-283.8491, -270.6225, -243.6017, -285.2395, -312.0023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-283.1319, -270.1296, -243.8120, -284.5537, -311.2393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0824, device='cuda:0', dtype=torch.float64)
tensor([-283.0806, -269.7324, -243.9536, -284.0941, -310.8122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-283.6376, -269.4402, -243.8658, -283.7266, -310.5238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-285.0029, -269.3116, -243.6061, -283.6393, -310.7064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0719, device='cuda:0', dtype=torch.float64)
tensor([-286.9301, -269.3044, -243.1637, -283.7369, -311.0664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-289.1908, -269.4354, -242.5941, -283.8907, -311.5937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0645, device='cuda:0', dtype=torch.float64)
tensor([-290.9493, -269.5060, -242.1712, -284.0510, -311.9649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-292.5480, -269.4602, -241.9055, -284.3004, -312.3366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0619, device='cuda:0', dtype=torch.float64)
tensor([-293.7435, -269.4069, -241.6810, -284.3708, -312.5627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-294.2646, -269.0083, -241.5569, -284.1929, -312.3485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0535, device='cuda:0', dtype=torch.float64)
tensor([-294.6572, -268.5927, -241.4608, -283.9422, -312.1759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-294.2401, -268.0186, -241.3594, -283.2406, -311.4494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-293.6555, -267.6545, -241.1327, -282.3925, -310.5990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-292.4917, -267.1371, -240.9913, -281.3606, -309.4579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0680, device='cuda:0', dtype=torch.float64)
tensor([-290.9877, -266.5918, -241.0498, -280.3083, -308.2866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0697, device='cuda:0', dtype=torch.float64)
tensor([-289.4784, -266.1322, -241.1091, -279.2637, -307.0971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0704, device='cuda:0', dtype=torch.float64)
tensor([-288.3207, -265.7744, -241.1181, -278.3560, -306.1134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-287.3624, -265.4254, -241.1493, -277.6573, -305.2897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-286.5293, -265.0741, -241.2389, -277.0716, -304.6404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-285.8305, -264.7153, -241.4654, -276.6581, -304.2133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-285.1805, -264.3754, -241.6708, -276.2859, -303.7605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-285.0984, -264.0597, -241.6987, -276.1232, -303.4415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0704, device='cuda:0', dtype=torch.float64)
tensor([-285.5181, -263.7878, -241.6107, -276.1141, -303.4317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0648, device='cuda:0', dtype=torch.float64)
tensor([-286.4876, -263.5900, -241.4113, -276.2599, -303.6514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-287.6572, -263.3219, -241.2317, -276.4920, -303.8386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0599, device='cuda:0', dtype=torch.float64)
tensor([-288.7794, -263.0841, -241.0141, -276.6463, -303.9717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0633, device='cuda:0', dtype=torch.float64)
tensor([-289.7313, -262.9717, -240.7553, -276.7138, -304.1020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0576, device='cuda:0', dtype=torch.float64)
tensor([-290.2991, -262.7358, -240.6196, -276.7476, -304.1595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-290.5798, -262.5743, -240.4625, -276.6106, -304.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0658, device='cuda:0', dtype=torch.float64)
tensor([-290.5462, -262.4583, -240.2032, -276.2626, -303.8171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0663, device='cuda:0', dtype=torch.float64)
tensor([-290.4233, -262.3641, -239.8502, -275.8527, -303.4277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-289.4293, -262.0664, -239.6694, -275.1557, -302.6987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0670, device='cuda:0', dtype=torch.float64)
tensor([-287.8057, -261.7118, -239.5458, -274.1827, -301.6710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-286.3090, -261.4166, -239.4312, -273.2975, -300.6848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-284.8938, -261.1684, -239.2883, -272.4131, -299.6724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-283.6354, -260.8140, -239.2358, -271.6732, -298.7691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0612, device='cuda:0', dtype=torch.float64)
tensor([-282.7369, -260.5480, -239.1300, -271.0333, -298.0382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-282.0626, -260.1614, -239.0846, -270.5219, -297.3783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0796, device='cuda:0', dtype=torch.float64)
tensor([-281.5359, -259.7264, -239.0249, -270.0378, -296.7208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-280.9919, -259.2776, -238.9952, -269.5545, -296.0715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0686, device='cuda:0', dtype=torch.float64)
tensor([-280.5922, -258.7450, -238.9849, -269.1814, -295.4614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-280.1180, -258.2139, -239.0771, -268.8350, -294.9523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-279.9677, -257.7579, -239.1572, -268.5904, -294.7032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-279.5572, -257.2288, -239.3330, -268.2452, -294.2695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-279.3324, -256.7645, -239.4783, -267.9583, -293.9612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-279.2428, -256.3694, -239.5825, -267.6787, -293.6850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0735, device='cuda:0', dtype=torch.float64)
tensor([-278.9154, -256.0435, -239.6441, -267.2687, -293.2540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0569, device='cuda:0', dtype=torch.float64)
tensor([-278.9144, -255.8273, -239.5797, -266.9171, -292.8582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0743, device='cuda:0', dtype=torch.float64)
tensor([-278.4021, -255.5785, -239.5144, -266.2279, -292.1012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0582, device='cuda:0', dtype=torch.float64)
tensor([-278.3114, -255.4006, -239.3961, -265.7529, -291.6354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0800, device='cuda:0', dtype=torch.float64)
tensor([-278.1986, -255.3004, -239.2321, -265.2415, -291.1330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0603, device='cuda:0', dtype=torch.float64)
tensor([-277.7996, -255.2154, -239.0643, -264.5863, -290.4185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-277.2736, -255.1234, -238.9326, -263.9467, -289.7025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0732, device='cuda:0', dtype=torch.float64)
tensor([-276.8533, -255.0004, -238.8498, -263.3329, -289.0560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0567, device='cuda:0', dtype=torch.float64)
tensor([-276.4488, -254.8979, -238.7892, -262.6952, -288.5197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0770, device='cuda:0', dtype=torch.float64)
tensor([-276.5153, -254.8224, -238.6603, -262.1759, -288.0920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-276.6756, -254.7516, -238.5896, -261.7417, -287.7955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-277.3527, -254.7153, -238.3957, -261.5035, -287.7330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0758, device='cuda:0', dtype=torch.float64)
tensor([-277.6355, -254.5348, -238.3198, -261.1745, -287.5232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0862, device='cuda:0', dtype=torch.float64)
tensor([-277.6427, -254.2789, -238.3777, -260.8026, -287.2261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-277.5736, -253.9926, -238.4179, -260.3864, -286.8721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-277.5257, -253.7346, -238.4645, -260.0096, -286.6283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0681, device='cuda:0', dtype=torch.float64)
tensor([-277.9102, -253.5588, -238.3983, -259.8183, -286.5782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0603, device='cuda:0', dtype=torch.float64)
tensor([-278.0973, -253.3236, -238.4001, -259.5660, -286.4247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-278.0398, -253.0674, -238.4302, -259.2051, -286.1747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-277.7865, -252.6730, -238.4880, -258.8180, -285.7370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0637, device='cuda:0', dtype=torch.float64)
tensor([-277.5384, -252.2791, -238.5176, -258.4145, -285.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-277.4934, -251.9359, -238.5035, -258.1631, -284.9861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-277.4912, -251.5757, -238.4732, -257.9898, -284.7927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-277.6295, -251.2671, -238.3608, -257.8354, -284.5981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-277.9043, -251.0366, -238.2155, -257.6918, -284.4649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0638, device='cuda:0', dtype=torch.float64)
tensor([-277.9719, -250.7368, -238.1800, -257.4976, -284.2745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-277.7346, -250.3847, -238.2303, -257.1715, -283.9566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-277.5496, -249.9953, -238.3060, -256.8769, -283.6063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-277.4586, -249.6305, -238.3976, -256.7096, -283.3849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-277.2154, -249.2293, -238.5352, -256.4498, -282.9703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-276.6590, -248.7976, -238.6867, -255.9955, -282.3282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-276.0343, -248.4242, -238.7707, -255.4875, -281.6517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-275.5862, -248.1254, -238.7562, -255.0058, -280.9974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-274.9895, -247.7836, -238.7957, -254.4475, -280.2921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-274.6355, -247.5471, -238.7115, -253.9294, -279.6949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0677, device='cuda:0', dtype=torch.float64)
tensor([-274.3777, -247.3053, -238.5701, -253.4131, -279.0577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-274.4771, -247.1015, -238.3299, -253.0460, -278.5686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-274.4365, -246.8611, -238.2262, -252.6891, -278.1037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0609, device='cuda:0', dtype=torch.float64)
tensor([-273.9688, -246.5301, -238.1913, -252.1153, -277.3891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-273.4224, -246.2305, -238.1549, -251.4834, -276.6108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-272.5892, -245.8386, -238.2040, -250.7095, -275.5748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0603, device='cuda:0', dtype=torch.float64)
tensor([-271.2988, -245.3349, -238.4779, -249.7845, -274.2957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-270.1867, -244.8354, -238.7195, -249.0105, -273.1279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-269.1252, -244.3066, -239.0569, -248.3895, -272.0903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-268.4823, -243.8615, -239.2849, -247.9935, -271.3664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-267.8452, -243.4460, -239.5252, -247.5793, -270.7060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-267.1669, -242.9891, -239.8073, -247.1863, -270.0623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-266.8645, -242.6857, -239.8484, -246.8298, -269.6104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-267.2791, -242.5566, -239.4559, -246.6838, -269.5034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-267.8974, -242.4154, -239.0380, -246.6928, -269.5024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0666, device='cuda:0', dtype=torch.float64)
tensor([-268.2291, -242.2358, -238.7483, -246.5945, -269.4116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-268.7555, -242.1295, -238.4039, -246.5297, -269.4233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-269.0121, -241.9685, -238.1707, -246.3360, -269.2828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-269.0750, -241.8006, -238.0452, -246.0549, -269.0974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-269.0900, -241.6669, -237.7986, -245.6800, -268.7896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0636, device='cuda:0', dtype=torch.float64)
tensor([-269.2447, -241.5801, -237.4290, -245.3287, -268.5206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0594, device='cuda:0', dtype=torch.float64)
tensor([-269.5841, -241.5647, -236.8954, -245.0948, -268.3716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0717, device='cuda:0', dtype=torch.float64)
tensor([-269.8957, -241.4893, -236.4288, -244.9297, -268.2424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-269.7599, -241.2760, -236.1660, -244.5849, -267.8900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-269.2976, -241.0039, -236.0525, -244.0398, -267.3667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-268.6173, -240.6640, -236.1582, -243.4678, -266.7877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-267.7414, -240.2780, -236.3619, -242.8019, -266.0831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-267.2730, -240.0235, -236.3627, -242.3191, -265.6193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0462, device='cuda:0', dtype=torch.float64)
tensor([-266.8005, -239.7651, -236.3728, -241.8435, -265.1713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-266.3247, -239.5073, -236.4678, -241.4163, -264.8022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-266.0245, -239.3203, -236.4683, -241.1312, -264.6075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-265.7786, -239.1529, -236.3905, -240.8259, -264.3878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0571, device='cuda:0', dtype=torch.float64)
tensor([-265.5976, -238.9632, -236.2834, -240.5942, -264.1450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-265.1464, -238.6983, -236.3059, -240.1671, -263.7246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0570, device='cuda:0', dtype=torch.float64)
tensor([-264.9312, -238.5293, -236.1950, -239.8333, -263.4284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-264.6276, -238.3358, -236.1521, -239.4325, -263.0753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1661, device='cuda:0', dtype=torch.float64)
tensor([-264.0685, -237.9972, -236.3546, -238.8368, -262.5471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-263.6025, -237.6781, -236.5516, -238.3343, -262.0667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0594, device='cuda:0', dtype=torch.float64)
tensor([-263.1109, -237.3623, -236.7996, -237.8620, -261.5972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-262.8771, -237.1054, -236.8511, -237.4812, -261.2343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-262.7639, -236.8609, -236.8385, -237.2814, -261.0004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-262.8921, -236.7120, -236.6282, -237.1905, -260.8547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-262.8964, -236.5377, -236.4858, -237.0294, -260.5962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0589, device='cuda:0', dtype=torch.float64)
tensor([-263.1218, -236.4132, -236.1975, -236.9944, -260.4182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-263.4379, -236.3091, -235.8485, -237.0560, -260.2833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-263.8231, -236.2300, -235.4348, -237.1526, -260.1545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-264.0754, -236.1450, -235.0709, -237.2296, -260.0176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-264.1663, -236.0494, -234.7803, -237.1776, -259.7905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-263.9392, -235.8568, -234.6359, -237.0043, -259.3908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-263.8410, -235.7003, -234.4415, -236.9156, -259.0523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-263.7546, -235.5670, -234.2546, -236.7947, -258.7115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-263.7242, -235.4671, -233.9622, -236.6180, -258.3483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-263.4606, -235.3098, -233.7821, -236.2640, -257.8196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-263.1788, -235.1530, -233.5964, -235.9131, -257.3019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-262.9921, -235.0511, -233.3238, -235.5283, -256.7743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-263.0506, -235.0556, -232.9064, -235.2400, -256.4311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-263.1898, -235.0349, -232.4985, -235.0877, -256.1982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-263.5039, -235.0783, -231.9362, -234.9872, -256.0105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-263.9595, -235.1219, -231.3700, -235.0813, -255.9774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-264.4310, -235.1993, -230.8410, -235.2253, -256.0420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-265.0911, -235.3525, -230.2696, -235.5371, -256.2682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-265.6994, -235.5176, -229.7687, -235.8089, -256.4841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-266.0513, -235.5862, -229.4218, -235.9686, -256.5661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-265.9539, -235.5171, -229.2903, -235.8090, -256.3808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-265.8167, -235.4532, -229.1967, -235.6152, -256.2087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-265.1522, -235.2041, -229.3357, -235.0758, -255.7016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0538, device='cuda:0', dtype=torch.float64)
tensor([-264.5059, -234.9465, -229.4642, -234.5712, -255.1953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-263.9145, -234.6550, -229.5842, -234.1029, -254.6630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-263.4797, -234.4438, -229.6120, -233.7085, -254.2050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-262.8661, -234.1294, -229.7708, -233.2679, -253.6642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-262.1133, -233.7771, -229.9933, -232.7062, -253.0375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-261.0930, -233.3591, -230.3976, -232.0134, -252.3452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0578, device='cuda:0', dtype=torch.float64)
tensor([-260.3838, -233.0321, -230.6478, -231.4366, -251.7624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-259.5216, -232.6069, -231.0824, -230.9221, -251.2205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-258.9555, -232.3093, -231.3449, -230.5660, -250.8645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-258.7222, -232.1404, -231.4203, -230.4502, -250.7680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-258.6721, -232.0312, -231.4100, -230.4550, -250.7865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-258.7718, -231.9998, -231.2697, -230.4961, -250.8314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-258.9278, -231.9871, -231.0812, -230.4947, -250.8189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-259.1258, -231.9797, -230.8730, -230.5432, -250.8365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-259.1282, -231.9012, -230.7463, -230.4389, -250.6855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-259.1451, -231.8299, -230.5902, -230.3468, -250.4982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-259.0804, -231.7256, -230.5297, -230.2562, -250.3148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-258.9212, -231.5762, -230.5402, -230.1576, -250.1259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0524, device='cuda:0', dtype=torch.float64)
tensor([-258.7454, -231.4180, -230.5283, -230.0600, -249.9176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-258.7274, -231.3109, -230.4585, -230.0798, -249.8103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-258.8142, -231.2372, -230.3363, -230.1947, -249.7620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-258.7244, -231.0825, -230.2737, -230.1558, -249.5350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-258.4365, -230.8452, -230.2919, -229.9881, -249.1430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-258.1490, -230.6062, -230.2980, -229.7814, -248.6942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-257.8122, -230.3798, -230.3567, -229.5573, -248.2926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-257.5726, -230.1835, -230.3002, -229.3260, -247.8609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-257.4856, -230.0489, -230.1902, -229.2153, -247.6051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-257.4872, -229.9743, -230.0035, -229.1445, -247.4012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-257.7193, -229.9706, -229.6884, -229.2155, -247.3522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-257.8461, -229.9392, -229.4545, -229.2324, -247.2852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-257.8266, -229.8474, -229.3157, -229.2066, -247.1694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-257.7987, -229.7735, -229.1702, -229.1458, -247.0523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-257.7102, -229.7008, -229.0217, -228.9685, -246.8719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-257.5768, -229.5894, -228.9040, -228.7678, -246.6231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-257.6342, -229.5557, -228.6592, -228.6588, -246.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-257.6112, -229.4850, -228.4295, -228.4891, -246.1959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-257.5153, -229.3823, -228.2058, -228.2530, -245.8262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-257.1556, -229.1853, -228.1293, -227.8000, -245.2567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-257.0662, -229.1200, -227.8739, -227.4539, -244.8218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-257.0055, -229.0787, -227.6540, -227.1650, -244.4531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-256.7862, -228.9927, -227.5266, -226.7402, -243.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-256.6206, -228.9136, -227.4079, -226.3693, -243.6079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-256.6603, -228.8754, -227.2260, -226.1873, -243.4225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-256.4416, -228.7253, -227.1898, -225.8702, -243.0689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-256.4046, -228.6522, -227.0898, -225.7215, -242.9115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-256.4258, -228.6067, -226.9662, -225.6517, -242.8257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-256.3334, -228.5210, -226.9602, -225.6046, -242.7682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-256.3396, -228.4729, -226.9036, -225.6679, -242.8126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-256.4625, -228.4773, -226.7962, -225.7957, -242.9349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-256.5886, -228.4955, -226.6537, -225.8767, -243.0053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-256.7436, -228.5338, -226.5230, -225.9849, -243.1348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-256.7829, -228.5081, -226.4674, -226.0792, -243.2170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-256.6727, -228.4237, -226.5365, -226.1349, -243.2521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-256.5716, -228.3668, -226.5844, -226.2096, -243.3129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-256.3841, -228.2792, -226.6740, -226.2313, -243.3361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-256.0690, -228.1421, -226.8037, -226.1337, -243.2442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-255.7279, -227.9878, -226.9212, -226.0329, -243.1300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-255.3124, -227.8124, -227.0405, -225.8139, -242.8972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-255.1561, -227.7322, -227.0269, -225.8274, -242.8650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-255.0009, -227.6343, -226.9954, -225.8532, -242.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-254.5816, -227.4185, -227.1214, -225.6497, -242.5057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-254.3395, -227.2924, -227.1317, -225.5236, -242.3182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-254.0775, -227.1423, -227.1590, -225.3782, -242.0904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-253.6989, -226.9356, -227.2057, -225.0636, -241.6861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-253.3959, -226.7701, -227.1632, -224.7750, -241.3000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-253.1735, -226.6549, -227.0629, -224.4904, -240.9511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-252.8730, -226.5131, -227.0132, -224.1553, -240.5569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-252.6416, -226.3852, -226.9245, -223.8478, -240.1523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-252.5767, -226.3545, -226.7347, -223.6527, -239.9022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0514, device='cuda:0', dtype=torch.float64)
tensor([-252.4935, -226.3094, -226.5387, -223.4118, -239.5816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-252.3523, -226.2404, -226.3929, -223.1319, -239.2113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-252.2106, -226.1594, -226.2259, -222.8667, -238.8575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-252.0783, -226.0780, -226.0371, -222.5659, -238.4772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-251.8672, -225.9661, -225.8633, -222.2019, -237.9916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-251.6682, -225.8587, -225.6302, -221.8013, -237.4464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-251.7817, -225.9010, -225.2442, -221.6430, -237.1738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-252.0924, -226.0561, -224.8045, -221.6331, -237.1293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-252.3968, -226.2008, -224.3785, -221.6024, -237.0616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-252.7263, -226.3416, -224.0144, -221.7002, -237.1140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-252.7972, -226.3758, -223.8056, -221.6294, -237.0037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-252.8630, -226.4085, -223.6016, -221.5705, -236.8903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-252.7164, -226.3563, -223.4821, -221.3209, -236.6030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-252.5660, -226.3061, -223.3591, -221.0537, -236.2807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-252.6833, -226.3750, -223.1211, -220.9791, -236.1912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-252.8433, -226.4578, -222.8542, -220.9912, -236.1438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-252.9959, -226.5353, -222.6317, -221.0741, -236.1551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-253.0783, -226.5759, -222.4223, -221.0734, -236.0652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-253.2755, -226.6602, -222.1510, -221.1331, -236.0085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-253.2566, -226.6449, -222.0132, -221.0874, -235.8453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-253.4237, -226.7244, -221.8085, -221.1923, -235.8544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-253.5944, -226.7984, -221.6027, -221.2921, -235.8707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-253.7231, -226.8371, -221.3886, -221.3673, -235.8212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-253.7453, -226.8229, -221.2724, -221.4276, -235.7774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-253.7365, -226.8002, -221.1612, -221.4769, -235.7278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-253.3785, -226.6047, -221.2189, -221.3029, -235.4212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-252.8773, -226.3511, -221.3395, -221.0367, -235.0123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-252.2732, -226.0568, -221.5267, -220.7011, -234.5270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-251.6107, -225.7351, -221.7543, -220.3448, -234.0053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-251.0985, -225.4821, -221.9149, -220.1176, -233.6015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-250.5988, -225.2559, -222.0635, -219.8781, -233.2298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-250.2202, -225.0795, -222.1305, -219.7253, -232.9262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-249.6544, -224.8263, -222.3350, -219.4524, -232.4815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-249.0065, -224.5394, -222.5718, -219.1199, -231.9512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-248.7308, -224.4103, -222.5919, -219.0309, -231.7056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-248.6274, -224.3632, -222.5205, -219.0690, -231.6187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-248.2097, -224.1813, -222.5837, -218.8135, -231.1941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-247.7878, -223.9997, -222.6494, -218.5345, -230.7564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-247.3455, -223.8120, -222.7241, -218.2733, -230.3203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-246.9751, -223.6696, -222.7258, -218.0017, -229.9186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-246.9238, -223.6658, -222.5499, -217.9058, -229.7686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-246.8962, -223.6811, -222.3104, -217.8849, -229.6101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-247.1191, -223.8087, -221.9469, -218.0530, -229.6982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-247.4443, -223.9905, -221.4897, -218.2229, -229.8016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-248.0150, -224.2652, -220.9363, -218.5981, -230.1182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-248.5391, -224.5024, -220.4955, -219.0098, -230.4595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-249.0211, -224.7329, -220.0967, -219.3825, -230.7632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-249.5382, -224.9870, -219.7230, -219.8277, -231.1469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-249.8457, -225.1544, -219.4369, -220.0859, -231.3204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-249.7491, -225.1395, -219.3305, -220.0479, -231.1960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-249.5745, -225.1042, -219.2378, -219.9162, -231.0025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-249.1785, -224.9651, -219.2720, -219.6208, -230.6769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-248.7919, -224.8312, -219.3721, -219.3722, -230.4451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-248.1204, -224.5547, -219.5643, -218.9021, -229.9469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-247.3813, -224.2522, -219.7796, -218.3466, -229.3405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-246.5084, -223.8866, -220.0904, -217.7216, -228.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-245.8797, -223.6133, -220.3039, -217.3181, -228.0800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-245.2562, -223.3405, -220.5290, -216.9579, -227.5783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-244.7614, -223.1332, -220.6762, -216.6691, -227.1701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-244.3160, -222.9387, -220.7943, -216.4240, -226.8138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-243.9569, -222.7803, -220.8757, -216.2602, -226.5442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-243.7589, -222.6789, -220.8948, -216.2538, -226.4372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-243.5073, -222.5608, -220.9902, -216.2260, -226.3243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0641, device='cuda:0', dtype=torch.float64)
tensor([-243.2238, -222.4289, -221.0985, -216.1963, -226.2229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-243.0974, -222.3650, -221.0705, -216.2497, -226.2136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-243.2230, -222.4142, -220.9078, -216.4656, -226.4052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-243.4334, -222.5098, -220.6829, -216.6989, -226.6088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-243.6198, -222.6115, -220.4439, -216.9185, -226.7768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-243.7536, -222.6864, -220.2590, -217.1258, -226.9355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-243.9394, -222.7869, -220.0808, -217.3720, -227.1796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-244.2676, -222.9633, -219.8046, -217.6519, -227.4764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-244.5463, -223.1298, -219.5630, -217.8915, -227.7619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-244.5897, -223.1989, -219.3671, -217.9243, -227.7615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-244.5298, -223.2072, -219.1527, -217.8470, -227.5911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-244.3526, -223.1562, -218.9748, -217.6712, -227.3000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-243.9795, -223.0301, -218.9180, -217.3625, -226.8954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-243.4589, -222.8444, -218.9264, -216.9395, -226.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-243.0294, -222.7036, -218.8820, -216.5401, -225.8652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-242.7622, -222.6285, -218.7489, -216.2535, -225.4872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-242.3887, -222.5087, -218.6955, -215.9116, -225.0374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-242.1822, -222.4550, -218.5369, -215.6612, -224.6833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-241.8697, -222.3601, -218.4523, -215.3318, -224.2592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-241.6970, -222.3452, -218.2799, -215.0646, -223.9497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-241.6775, -222.3960, -218.0466, -214.9257, -223.7875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-241.7314, -222.4605, -217.8000, -214.8984, -223.7163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-241.7782, -222.5126, -217.6090, -214.9493, -223.7181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-242.1490, -222.7099, -217.2915, -215.2680, -224.0511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-242.3955, -222.8463, -217.0551, -215.5189, -224.3014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-242.5097, -222.9309, -216.8680, -215.6230, -224.4032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-242.6078, -223.0091, -216.7463, -215.7277, -224.5427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-242.5140, -223.0038, -216.7115, -215.7388, -224.5589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-242.4228, -222.9965, -216.6721, -215.7645, -224.5924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-242.2014, -222.9335, -216.6834, -215.6956, -224.5135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-241.9259, -222.8357, -216.6964, -215.5739, -224.3432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-241.6229, -222.7162, -216.7537, -215.4905, -224.1914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-241.2036, -222.5255, -216.8461, -215.3072, -223.8999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-240.7515, -222.3199, -216.9576, -215.1063, -223.5950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-240.2374, -222.0934, -217.0650, -214.8420, -223.1987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-239.6034, -221.8203, -217.2576, -214.5040, -222.7074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-239.1890, -221.6472, -217.3565, -214.2806, -222.3966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-238.8715, -221.5227, -217.4041, -214.0952, -222.1599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-238.6262, -221.4324, -217.3866, -213.9474, -221.9548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-238.4112, -221.3403, -217.4097, -213.8493, -221.8210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-238.2583, -221.2633, -217.4039, -213.8052, -221.7445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-238.2220, -221.2463, -217.3686, -213.8676, -221.8248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-238.3886, -221.3279, -217.2642, -214.1225, -222.1558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-238.5836, -221.4335, -217.1319, -214.3590, -222.4709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-238.7769, -221.5437, -216.9880, -214.5916, -222.7614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-238.7338, -221.5522, -216.9722, -214.6587, -222.8626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-238.6929, -221.5638, -216.9796, -214.7590, -222.9991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-238.6218, -221.5596, -216.9626, -214.7838, -223.0437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-238.3889, -221.4850, -217.0081, -214.6946, -222.9331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-238.0004, -221.3417, -217.1101, -214.4818, -222.6701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-237.6593, -221.2184, -217.1861, -214.3245, -222.4564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-237.2862, -221.0856, -217.2635, -214.1131, -222.1928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-236.8332, -220.9094, -217.3766, -213.8309, -221.8322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-236.3237, -220.7093, -217.5207, -213.5266, -221.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-235.9049, -220.5504, -217.6111, -213.2965, -221.0863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-235.4707, -220.3819, -217.7140, -212.9917, -220.7073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-235.2512, -220.3208, -217.6629, -212.8403, -220.5152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-235.2977, -220.3864, -217.5031, -212.9233, -220.6168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-235.3473, -220.4457, -217.3223, -212.9902, -220.6823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-235.4134, -220.5118, -217.1367, -213.0344, -220.7493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-235.5137, -220.5989, -216.9450, -213.1329, -220.8691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-235.6863, -220.7278, -216.7247, -213.2962, -221.0764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-235.8459, -220.8477, -216.4861, -213.4255, -221.2424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-235.9187, -220.9277, -216.3394, -213.5002, -221.3688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-235.8357, -220.9363, -216.2282, -213.4344, -221.3004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-235.4733, -220.8069, -216.2875, -213.1914, -221.0122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-235.1555, -220.6688, -216.3178, -212.9851, -220.7416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-234.8293, -220.5144, -216.3516, -212.8104, -220.4743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-234.4989, -220.3586, -216.3819, -212.6543, -220.2184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-234.2045, -220.2230, -216.3668, -212.5083, -219.9720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-233.9150, -220.0957, -216.3783, -212.3950, -219.7760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-233.6372, -219.9757, -216.3595, -212.2022, -219.4980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-233.3367, -219.8479, -216.3315, -211.9298, -219.1324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-233.0623, -219.7436, -216.3530, -211.7095, -218.8577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-233.0061, -219.7393, -216.2250, -211.6433, -218.7772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-232.9937, -219.7529, -216.0822, -211.6379, -218.7768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-233.1521, -219.8502, -215.8166, -211.7643, -218.9252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-233.3598, -219.9721, -215.5175, -211.9596, -219.1247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-233.4931, -220.0853, -215.2244, -212.0277, -219.2111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-233.4097, -220.1035, -215.0474, -211.9715, -219.1224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-233.3727, -220.1395, -214.8616, -211.9502, -219.0717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-233.1253, -220.0560, -214.7793, -211.8152, -218.8261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-232.8652, -219.9540, -214.7377, -211.6800, -218.5904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-232.8092, -219.9443, -214.6025, -211.7381, -218.5634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-232.6828, -219.8864, -214.5773, -211.8043, -218.5410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-232.5830, -219.8446, -214.5769, -211.9386, -218.5996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-232.5305, -219.8324, -214.5330, -212.0913, -218.6821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-232.2696, -219.7061, -214.5647, -212.0938, -218.5579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-232.0283, -219.5990, -214.6064, -212.1298, -218.4789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-231.8090, -219.4973, -214.6258, -212.1444, -218.3760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-231.4692, -219.3370, -214.6587, -212.0464, -218.1115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-231.2090, -219.2278, -214.6404, -211.9951, -217.9311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-230.6724, -218.9991, -214.7296, -211.6971, -217.4591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-230.2340, -218.8255, -214.7944, -211.4673, -217.1044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-229.7585, -218.6445, -214.9433, -211.2350, -216.8013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-229.4181, -218.5246, -215.0409, -211.0921, -216.6397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-229.2846, -218.5045, -215.0511, -211.0941, -216.6730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-229.3417, -218.5854, -214.9636, -211.2180, -216.8932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-229.3706, -218.6444, -214.9151, -211.3171, -217.0927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-229.5785, -218.8017, -214.7895, -211.5081, -217.4661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-229.8325, -218.9837, -214.6275, -211.7371, -217.8501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-229.9438, -219.0849, -214.5393, -211.8841, -218.0882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-229.9066, -219.1065, -214.4746, -211.8645, -218.1044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-229.8079, -219.0959, -214.4338, -211.8050, -218.0647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-229.7745, -219.1232, -214.3560, -211.7786, -218.0780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-229.5949, -219.0711, -214.3902, -211.6990, -217.9979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-229.3172, -218.9701, -214.4843, -211.5511, -217.8332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-228.9730, -218.8219, -214.6377, -211.3723, -217.6100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-228.8337, -218.7795, -214.6438, -211.2816, -217.5429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-228.5372, -218.6663, -214.7048, -211.0670, -217.3119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-228.2051, -218.5208, -214.7464, -210.8277, -217.0129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-228.0153, -218.4478, -214.6866, -210.6531, -216.8090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-227.7933, -218.3490, -214.6059, -210.4552, -216.5505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-227.6494, -218.2786, -214.4750, -210.2988, -216.3394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-227.5241, -218.2113, -214.3209, -210.1138, -216.0832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-227.3759, -218.1387, -214.1711, -209.9209, -215.8213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-227.2347, -218.0749, -214.0544, -209.7957, -215.6404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-227.2840, -218.1056, -213.8373, -209.8142, -215.6512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-227.4710, -218.2081, -213.5581, -209.9683, -215.8309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-227.6550, -218.3163, -213.3046, -210.1842, -216.0600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-227.7453, -218.3713, -213.1121, -210.3944, -216.2309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-227.8341, -218.4237, -212.9697, -210.6483, -216.4483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-227.8749, -218.4626, -212.8584, -210.8278, -216.6150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-227.6759, -218.3657, -212.8421, -210.7807, -216.5045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-227.3937, -218.2280, -212.9229, -210.7058, -216.3762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-227.1938, -218.1431, -212.9923, -210.6833, -216.3460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-227.0225, -218.0810, -213.0704, -210.6690, -216.3689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-226.8917, -218.0361, -213.1776, -210.6835, -216.4606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-226.6904, -217.9509, -213.2709, -210.6095, -216.4187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-226.4392, -217.8323, -213.4039, -210.5174, -216.3374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-226.0187, -217.6164, -213.5810, -210.3037, -216.0551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-225.5231, -217.3615, -213.8060, -210.0177, -215.6829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-225.1273, -217.1531, -213.9554, -209.7943, -215.3694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-224.7321, -216.9528, -214.1608, -209.6256, -215.1271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-224.3416, -216.7623, -214.3121, -209.3779, -214.8145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-224.0185, -216.6139, -214.4175, -209.1862, -214.5809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-223.8136, -216.5201, -214.4447, -209.1277, -214.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-223.7450, -216.4894, -214.3672, -209.1515, -214.4970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-223.8260, -216.5392, -214.2352, -209.2952, -214.6812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-224.0483, -216.6634, -214.0435, -209.5630, -215.0273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-224.3786, -216.8552, -213.7831, -209.8963, -215.4803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-224.7941, -217.0976, -213.5144, -210.2882, -216.0168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-225.2503, -217.3692, -213.2397, -210.6646, -216.5811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-225.5931, -217.5794, -212.9907, -210.9901, -217.0185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-225.8052, -217.7124, -212.8199, -211.2506, -217.3416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-225.9538, -217.8113, -212.6216, -211.4373, -217.5630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-226.1092, -217.9093, -212.4349, -211.6669, -217.7953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-225.8783, -217.7911, -212.4321, -211.6300, -217.6790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-225.5588, -217.6364, -212.4309, -211.5082, -217.4497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-225.0271, -217.3668, -212.4725, -211.1772, -216.9553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-224.5252, -217.1168, -212.4753, -210.8392, -216.4503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-223.9694, -216.8352, -212.5359, -210.4777, -215.9180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-223.3038, -216.4923, -212.6590, -210.0281, -215.2519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-222.6818, -216.1794, -212.7528, -209.6020, -214.5957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-222.0969, -215.8915, -212.8326, -209.1991, -213.9714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-221.6593, -215.6866, -212.9175, -208.9331, -213.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-221.4033, -215.5901, -212.9587, -208.8201, -213.4050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-221.2821, -215.5620, -212.9781, -208.8880, -213.4852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-221.1211, -215.5114, -213.0255, -208.9246, -213.5266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-221.0236, -215.4977, -213.0164, -208.9924, -213.6023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-220.9149, -215.4717, -213.0448, -209.1130, -213.7233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-220.7740, -215.4256, -213.1264, -209.2431, -213.8722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-220.5124, -215.3206, -213.2318, -209.2251, -213.8429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-220.2054, -215.1970, -213.3458, -209.1424, -213.7568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-220.0290, -215.1523, -213.3734, -209.1422, -213.7966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-219.9110, -215.1545, -213.3811, -209.1686, -213.9142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-219.7511, -215.1377, -213.3415, -209.0826, -213.9062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-219.7227, -215.1884, -213.1941, -209.0462, -213.9727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-219.8337, -215.3132, -213.0218, -209.1478, -214.2386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-220.0227, -215.4777, -212.7722, -209.2583, -214.5209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-220.0696, -215.5619, -212.5463, -209.2303, -214.5927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-220.2247, -215.7091, -212.3236, -209.2996, -214.8379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-220.4630, -215.9082, -212.1043, -209.4570, -215.2087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-220.7121, -216.1180, -211.8780, -209.6215, -215.5797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-220.7122, -216.1774, -211.7950, -209.6748, -215.7571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-220.6192, -216.1840, -211.7156, -209.6182, -215.7818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-220.3545, -216.0937, -211.7134, -209.4506, -215.6471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-220.1572, -216.0436, -211.6170, -209.2200, -215.4626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-219.9435, -215.9849, -211.5102, -208.9635, -215.2430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-219.7034, -215.9011, -211.4186, -208.7339, -215.0019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-219.4490, -215.8135, -211.3730, -208.5294, -214.7947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-219.1727, -215.7095, -211.3579, -208.3393, -214.5831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-218.9045, -215.6003, -211.3565, -208.1606, -214.3813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-218.6555, -215.5094, -211.3742, -208.0535, -214.2466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-218.2412, -215.3132, -211.4802, -207.8609, -213.9600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-217.8956, -215.1541, -211.5783, -207.7438, -213.7537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-217.6817, -215.0751, -211.6518, -207.7320, -213.6981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-217.4264, -214.9715, -211.7379, -207.7089, -213.5998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-217.0989, -214.8206, -211.8742, -207.6517, -213.4391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-216.8510, -214.7195, -211.9377, -207.6116, -213.3308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-216.5995, -214.6156, -211.9971, -207.5633, -213.2190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-216.3631, -214.5188, -212.0452, -207.5287, -213.1250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-216.2810, -214.5119, -212.0363, -207.6134, -213.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-216.1662, -214.4821, -212.0641, -207.6540, -213.2648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-216.0378, -214.4382, -212.1562, -207.7471, -213.3539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-216.0855, -214.4954, -212.1265, -207.9093, -213.5791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-216.1796, -214.5845, -212.0830, -208.1165, -213.8645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-216.0861, -214.5559, -212.0740, -208.1326, -213.8642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-215.9919, -214.5209, -212.0893, -208.1798, -213.8988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-216.0463, -214.5696, -212.0215, -208.3056, -214.0665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-216.0249, -214.5701, -211.9612, -208.3595, -214.1313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-216.0152, -214.5820, -211.8704, -208.3690, -214.1729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-215.9369, -214.5474, -211.7982, -208.3387, -214.1394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-215.9929, -214.5891, -211.6617, -208.3954, -214.2363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-215.9617, -214.5922, -211.5695, -208.3942, -214.2537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-215.8597, -214.5530, -211.5054, -208.3628, -214.1994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0644, device='cuda:0', dtype=torch.float64)
tensor([-215.8700, -214.5265, -211.3376, -208.2863, -214.1074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-215.8306, -214.4785, -211.2432, -208.2086, -214.0057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-215.8387, -214.4602, -211.1073, -208.1211, -213.9181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-215.8969, -214.4734, -210.9696, -208.0887, -213.9129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-216.0179, -214.5238, -210.8188, -208.1203, -213.9799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-216.0117, -214.5075, -210.7104, -208.0550, -213.9214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-216.0414, -214.5167, -210.6184, -208.0629, -213.9473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-215.9628, -214.4741, -210.5528, -207.9843, -213.8526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-215.7942, -214.3773, -210.5352, -207.8598, -213.6711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-215.5420, -214.2226, -210.5438, -207.6568, -213.3793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-215.2365, -214.0351, -210.6086, -207.4314, -213.0620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-215.0078, -213.9022, -210.6882, -207.3210, -212.9109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-214.7997, -213.7872, -210.7118, -207.1738, -212.7268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-214.5550, -213.6493, -210.7685, -207.0228, -212.5285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-214.3593, -213.5443, -210.7467, -206.8335, -212.3009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-214.2611, -213.5042, -210.6616, -206.6765, -212.1548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-214.0527, -213.3940, -210.6076, -206.4463, -211.8620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-213.7600, -213.2376, -210.6472, -206.2254, -211.5608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-213.5529, -213.1314, -210.6281, -206.0515, -211.3213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-213.4745, -213.1007, -210.5157, -205.9553, -211.1878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-213.4170, -213.0906, -210.3996, -205.8941, -211.1008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-213.4846, -213.1657, -210.2518, -205.9963, -211.2369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-213.5771, -213.2516, -210.1365, -206.1784, -211.4538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-213.5567, -213.2727, -210.0783, -206.2968, -211.5563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-213.5045, -213.2771, -210.0709, -206.3657, -211.6505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-213.4298, -213.2691, -210.1087, -206.4495, -211.7527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-213.4704, -213.3344, -210.0798, -206.6105, -211.9637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-213.4395, -213.3537, -210.0814, -206.6850, -212.0752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-213.2825, -213.2983, -210.1947, -206.7098, -212.1206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-213.1976, -213.2946, -210.3050, -206.8080, -212.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-213.3025, -213.4167, -210.3705, -207.0660, -212.7205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-213.3987, -213.5307, -210.4269, -207.3224, -213.1294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-213.4235, -213.5928, -210.4793, -207.4819, -213.3974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-213.5018, -213.6807, -210.4617, -207.6257, -213.6567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-213.5691, -213.7615, -210.4460, -207.7811, -213.9048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-213.4669, -213.7188, -210.4471, -207.7703, -213.8787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-213.2695, -213.6193, -210.5279, -207.7123, -213.7920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-212.9809, -213.4624, -210.6087, -207.5770, -213.5580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-212.6369, -213.2691, -210.6823, -207.3982, -213.2090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-212.2990, -213.0807, -210.7713, -207.2410, -212.8736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-211.9956, -212.9108, -210.7888, -207.0244, -212.4919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-211.7794, -212.7828, -210.7212, -206.8036, -212.1397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-211.3750, -212.5385, -210.7442, -206.4567, -211.5760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-210.9654, -212.2876, -210.7652, -206.1110, -210.9913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-210.5727, -212.0554, -210.8107, -205.8036, -210.4528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-210.2829, -211.8995, -210.8142, -205.5719, -210.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-210.1673, -211.8554, -210.7645, -205.5015, -209.8927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-209.9920, -211.7724, -210.7700, -205.4308, -209.7070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-210.0190, -211.8133, -210.7068, -205.5345, -209.8167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-210.2796, -212.0044, -210.5891, -205.8384, -210.2905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-210.6127, -212.2352, -210.4222, -206.1421, -210.8114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-210.9764, -212.4906, -210.2833, -206.4904, -211.4045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-211.2204, -212.6768, -210.1907, -206.7113, -211.8344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-211.3045, -212.7561, -210.1310, -206.7971, -212.0281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-211.2861, -212.7638, -210.0763, -206.7595, -212.0462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-211.1888, -212.7220, -210.0677, -206.6620, -211.9851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-211.1968, -212.7516, -210.0122, -206.6334, -212.0459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-211.0843, -212.7037, -209.9911, -206.4864, -211.9319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-210.8336, -212.5716, -210.0805, -206.3096, -211.7370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-210.4802, -212.3740, -210.2162, -206.0523, -211.4100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-210.0932, -212.1613, -210.4259, -205.8252, -211.1082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-209.6273, -211.8934, -210.6694, -205.5721, -210.7041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-209.4224, -211.7976, -210.7936, -205.5380, -210.6384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-209.2796, -211.7356, -210.8672, -205.5051, -210.6047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-209.2719, -211.7589, -210.8569, -205.5560, -210.7047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-209.1618, -211.7138, -210.9117, -205.5423, -210.6993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-209.1272, -211.7060, -210.8945, -205.5704, -210.7477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-209.1487, -211.7368, -210.8672, -205.6910, -210.9029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-209.1027, -211.7150, -210.8460, -205.7465, -210.9337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-209.0209, -211.6665, -210.8200, -205.7653, -210.8983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-208.9919, -211.6568, -210.7877, -205.8346, -210.9467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-208.9867, -211.6688, -210.7455, -205.9203, -211.0187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-208.9126, -211.6366, -210.7308, -205.9527, -210.9951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-208.8414, -211.5949, -210.6666, -205.9439, -210.9134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-208.7883, -211.5684, -210.5879, -205.9191, -210.8437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-208.7770, -211.5644, -210.4901, -205.9514, -210.8340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-208.6578, -211.4906, -210.4159, -205.8585, -210.6524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-208.6542, -211.4821, -210.2608, -205.8122, -210.5739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-208.7578, -211.5376, -210.0448, -205.8202, -210.6242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-208.8417, -211.5863, -209.8901, -205.8356, -210.6925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-209.1231, -211.7695, -209.6700, -205.9951, -211.0104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-209.3599, -211.9268, -209.5102, -206.1759, -211.3193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-209.3426, -211.9152, -209.4289, -206.1576, -211.3001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-209.2294, -211.8411, -209.3730, -206.0506, -211.1469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-209.0391, -211.7168, -209.3564, -205.8876, -210.9029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-208.9340, -211.6434, -209.2695, -205.7476, -210.7051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-208.8445, -211.5730, -209.1520, -205.6118, -210.4949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-208.6575, -211.4515, -209.1146, -205.4280, -210.2162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-208.4230, -211.2997, -209.1136, -205.2392, -209.9076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-208.1747, -211.1440, -209.1333, -205.0371, -209.6054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-207.8463, -210.9289, -209.1852, -204.7532, -209.1768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-207.6033, -210.7651, -209.2002, -204.5047, -208.8325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-207.2614, -210.5435, -209.2969, -204.2333, -208.4086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-206.9888, -210.3790, -209.3571, -204.0140, -208.0863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-206.8387, -210.2986, -209.4029, -203.9354, -207.9776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-206.6013, -210.1695, -209.5500, -203.8280, -207.8140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-206.5312, -210.1558, -209.6760, -203.9184, -207.9658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-206.5418, -210.1917, -209.7268, -204.0537, -208.1841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-206.5697, -210.2462, -209.7556, -204.2101, -208.4285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-206.6052, -210.3187, -209.8140, -204.3943, -208.7340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-206.8812, -210.5519, -209.7900, -204.7811, -209.3825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-207.0972, -210.7522, -209.8495, -205.1822, -210.0005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-207.3616, -210.9786, -209.8958, -205.5918, -210.6488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-207.6648, -211.2202, -209.8870, -205.9679, -211.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-207.9157, -211.4179, -209.8572, -206.2660, -211.7737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-208.0632, -211.5484, -209.8587, -206.4865, -212.1366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-208.1248, -211.6240, -209.8603, -206.5845, -212.3440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-208.0382, -211.6018, -209.8540, -206.5069, -212.2913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-207.8046, -211.4799, -209.8528, -206.2783, -211.9993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-207.3917, -211.2421, -209.9233, -205.9083, -211.4796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-206.9977, -211.0011, -210.0029, -205.5633, -210.9805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-206.7396, -210.8399, -210.0167, -205.3078, -210.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-206.4205, -210.6366, -210.0451, -204.9923, -210.1372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-206.3442, -210.5796, -209.9206, -204.8110, -209.9031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-206.2505, -210.4948, -209.8068, -204.6120, -209.6340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-206.1357, -210.4030, -209.7304, -204.4285, -209.3780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-206.0520, -210.3340, -209.6472, -204.2785, -209.1864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-206.1443, -210.3768, -209.4590, -204.2387, -209.1818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-206.2635, -210.4431, -209.3115, -204.2667, -209.2752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-206.4245, -210.5379, -209.1319, -204.3449, -209.4175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-206.5472, -210.6118, -208.9985, -204.4237, -209.5495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-206.7105, -210.7118, -208.8534, -204.5193, -209.7446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-207.0106, -210.9026, -208.6272, -204.7023, -210.0764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-207.3366, -211.1134, -208.4082, -204.9096, -210.4385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-207.5658, -211.2578, -208.2378, -205.0701, -210.6923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-207.6287, -211.2915, -208.1043, -205.0763, -210.7071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-207.7132, -211.3436, -207.9707, -205.0925, -210.7571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-207.6935, -211.3197, -207.8512, -204.9917, -210.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-207.5596, -211.2259, -207.8337, -204.8783, -210.4691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-207.3841, -211.1095, -207.8308, -204.7520, -210.2678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-207.2284, -211.0108, -207.8439, -204.6377, -210.1243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-207.0198, -210.8765, -207.8618, -204.4380, -209.8842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-206.8192, -210.7497, -207.8919, -204.2606, -209.6718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-206.5914, -210.5999, -207.8960, -204.0310, -209.3774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-206.3093, -210.4331, -207.9555, -203.8248, -209.0761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-206.0450, -210.2838, -208.0563, -203.6896, -208.8648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-205.8072, -210.1640, -208.2008, -203.6281, -208.7668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-205.5368, -210.0363, -208.3600, -203.5654, -208.6452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-205.2475, -209.9075, -208.5920, -203.5635, -208.5977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-205.0306, -209.8175, -208.7667, -203.5744, -208.5941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-204.9686, -209.8226, -208.8456, -203.6904, -208.7542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-204.9415, -209.8514, -208.8845, -203.8127, -208.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-204.9461, -209.8939, -208.8755, -203.9293, -209.0812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-204.8403, -209.8569, -208.8834, -203.9233, -209.0634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-204.8019, -209.8558, -208.8125, -203.9091, -209.0532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-204.8536, -209.9096, -208.6941, -203.9375, -209.1295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-204.9846, -210.0161, -208.5816, -204.0382, -209.3363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-205.1577, -210.1454, -208.4445, -204.1315, -209.5778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-205.2695, -210.2333, -208.3260, -204.1841, -209.7389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-205.3444, -210.3007, -208.1975, -204.1522, -209.8086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-205.4459, -210.3818, -208.0560, -204.1488, -209.9014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-205.4675, -210.4177, -208.0238, -204.1683, -209.9974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-205.6172, -210.5355, -207.9501, -204.3093, -210.2604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-205.8199, -210.6814, -207.8460, -204.4987, -210.5639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-206.0631, -210.8599, -207.7816, -204.7562, -210.9638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-206.1508, -210.9441, -207.7983, -204.9008, -211.2068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-205.9687, -210.8602, -207.8747, -204.8201, -211.1049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-205.6835, -210.7063, -208.0036, -204.6662, -210.8765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-205.4506, -210.5794, -208.0899, -204.5132, -210.6751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-205.0180, -210.3091, -208.2067, -204.1470, -210.1636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-204.6712, -210.0928, -208.3124, -203.8660, -209.7725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-204.3909, -209.9375, -208.4537, -203.7093, -209.5613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-203.9862, -209.6946, -208.6114, -203.4046, -209.1344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-203.5583, -209.4209, -208.7218, -203.0020, -208.5761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-203.2399, -209.2269, -208.8032, -202.7024, -208.1762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-203.0073, -209.1008, -208.8769, -202.5322, -207.9503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-202.8376, -209.0273, -208.9565, -202.4720, -207.8710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-202.8344, -209.0630, -208.9472, -202.5703, -208.0117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-202.7803, -209.0558, -208.9530, -202.5727, -208.0550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-202.9569, -209.2195, -208.8641, -202.8073, -208.4326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-203.2258, -209.4296, -208.7126, -203.0752, -208.8702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-203.5393, -209.6556, -208.5286, -203.3277, -209.3198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-203.8751, -209.9016, -208.4112, -203.6593, -209.8629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-204.0370, -210.0188, -208.2898, -203.8069, -210.0903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-204.0539, -210.0410, -208.2334, -203.8228, -210.1438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-204.0352, -210.0382, -208.2082, -203.8376, -210.1744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-203.9662, -209.9990, -208.1862, -203.7994, -210.1208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-203.8686, -209.9449, -208.1735, -203.7514, -210.0418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-203.8209, -209.9237, -208.1313, -203.7416, -210.0094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-203.8303, -209.9236, -208.0247, -203.7174, -209.9707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-203.6197, -209.7786, -207.9866, -203.4852, -209.6260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-203.4596, -209.6722, -207.9755, -203.3514, -209.3971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-203.3487, -209.5998, -207.9434, -203.2598, -209.2289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-203.1921, -209.4948, -207.9251, -203.1185, -208.9933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-202.9907, -209.3538, -207.8854, -202.8823, -208.6356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-202.8681, -209.2593, -207.8017, -202.7008, -208.3546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-202.9098, -209.2892, -207.6506, -202.6623, -208.3076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-202.9287, -209.3211, -207.5745, -202.6804, -208.3376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-202.8105, -209.2604, -207.5383, -202.5822, -208.1712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-202.7980, -209.2707, -207.4761, -202.5744, -208.1615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-202.9589, -209.4028, -207.3798, -202.7385, -208.4153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-203.0079, -209.4609, -207.3298, -202.8185, -208.5335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-203.0146, -209.4893, -207.3121, -202.8890, -208.6156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-203.0212, -209.5007, -207.2714, -202.8908, -208.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-202.7842, -209.3504, -207.3022, -202.6759, -208.3222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-202.7697, -209.3419, -207.2431, -202.6409, -208.2772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-202.7474, -209.3350, -207.2091, -202.6275, -208.2622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-202.4932, -209.1781, -207.2721, -202.4495, -207.9707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-202.3078, -209.0773, -207.3443, -202.3586, -207.8083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-202.0311, -208.9160, -207.4554, -202.1957, -207.5375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-201.8176, -208.7969, -207.5342, -202.0611, -207.3388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-201.7469, -208.7764, -207.5713, -202.0590, -207.3583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-201.7893, -208.8307, -207.5898, -202.1994, -207.5604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-201.9917, -208.9892, -207.5472, -202.4731, -207.9642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-202.1833, -209.1471, -207.5262, -202.7667, -208.3834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-202.5478, -209.4043, -207.4225, -203.1896, -208.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-202.8936, -209.6338, -207.2837, -203.5530, -209.4867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-203.2353, -209.8481, -207.0941, -203.8262, -209.9001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-203.4210, -209.9690, -206.9683, -203.9707, -210.1347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-203.6593, -210.1201, -206.7941, -204.1203, -210.3888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-203.7024, -210.1526, -206.6717, -204.1028, -210.3873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-203.5467, -210.0608, -206.6200, -203.9471, -210.1688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-203.2602, -209.8909, -206.6770, -203.7740, -209.8937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-203.0190, -209.7514, -206.7168, -203.6247, -209.6633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-202.8485, -209.6559, -206.7366, -203.5127, -209.5024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-202.4788, -209.4255, -206.7883, -203.2266, -209.0483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-202.1372, -209.2121, -206.8451, -202.9850, -208.6313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-201.6956, -208.9424, -206.9630, -202.6843, -208.1162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-201.3694, -208.7535, -207.0814, -202.5171, -207.7957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-201.1399, -208.6179, -207.1478, -202.3973, -207.5658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-201.0401, -208.5678, -207.1580, -202.3560, -207.4961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-201.0357, -208.5786, -207.1504, -202.4140, -207.5726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-201.0061, -208.5878, -207.1914, -202.5137, -207.6927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-200.9701, -208.5876, -207.2098, -202.5816, -207.7625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-200.8498, -208.5226, -207.2417, -202.5607, -207.6932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-200.9540, -208.5984, -207.1626, -202.6728, -207.8722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-201.2299, -208.7759, -207.0373, -202.8678, -208.2139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-201.3576, -208.8601, -206.9682, -202.9613, -208.3824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-201.4459, -208.9164, -206.8984, -202.9870, -208.4816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-201.4391, -208.9204, -206.8915, -202.9892, -208.5258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-201.5032, -208.9698, -206.8779, -203.0654, -208.6834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-201.5787, -209.0314, -206.8583, -203.1240, -208.8466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-201.5792, -209.0303, -206.8263, -203.1172, -208.8745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-201.4750, -208.9612, -206.8101, -203.0226, -208.7395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-201.2910, -208.8411, -206.8460, -202.8968, -208.5317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-201.0411, -208.6814, -206.8719, -202.7008, -208.2042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-200.8019, -208.5409, -206.9323, -202.5609, -207.9389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-200.6466, -208.4511, -206.9703, -202.4808, -207.7822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-200.4920, -208.3774, -207.0654, -202.4355, -207.7123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-200.3601, -208.3202, -207.1722, -202.4500, -207.6995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-200.1035, -208.1727, -207.2744, -202.2992, -207.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-199.9078, -208.0688, -207.3716, -202.2295, -207.2953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-199.8276, -208.0375, -207.4116, -202.2413, -207.2829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-199.8233, -208.0626, -207.4401, -202.3028, -207.4006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-199.8503, -208.1104, -207.4393, -202.3640, -207.5446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-199.8248, -208.1192, -207.4581, -202.3785, -207.6222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-199.8318, -208.1536, -207.4698, -202.4389, -207.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-200.0112, -208.2928, -207.4403, -202.6363, -208.1302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-200.3864, -208.5450, -207.3625, -203.0059, -208.7415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-200.6176, -208.7079, -207.3481, -203.2777, -209.1802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-200.5867, -208.6945, -207.3514, -203.2840, -209.2075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-200.4922, -208.6399, -207.3754, -203.2353, -209.1468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-200.5130, -208.6508, -207.3390, -203.2752, -209.2025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-200.5544, -208.6838, -207.3306, -203.3775, -209.3325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-200.5373, -208.6785, -207.3194, -203.3927, -209.3587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-200.5203, -208.6619, -207.2614, -203.3585, -209.3180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-200.3740, -208.5591, -207.2124, -203.2045, -209.0794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-200.3516, -208.5296, -207.1010, -203.1027, -208.9622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-200.3034, -208.4795, -206.9899, -202.9673, -208.8009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-200.2475, -208.4282, -206.8949, -202.8497, -208.6484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-200.0646, -208.2882, -206.8110, -202.6172, -208.2986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.9031, -208.1620, -206.7461, -202.4123, -208.0052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-199.6543, -207.9895, -206.7120, -202.1145, -207.5945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-199.3710, -207.7920, -206.6743, -201.7723, -207.0921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-199.2924, -207.7267, -206.5628, -201.6246, -206.8623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-199.3456, -207.7569, -206.4441, -201.6340, -206.8668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-199.3705, -207.7703, -206.3482, -201.6485, -206.8544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-199.5214, -207.8708, -206.2546, -201.8041, -207.0584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-199.6823, -207.9763, -206.1645, -201.9826, -207.2838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.9357, -208.1496, -206.0855, -202.2643, -207.6816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-200.2117, -208.3404, -206.0083, -202.5367, -208.0889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-200.4557, -208.5054, -205.9117, -202.7248, -208.4065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-200.8257, -208.7489, -205.8119, -203.0269, -208.8986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-201.0085, -208.8809, -205.7875, -203.2187, -209.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-201.1691, -209.0029, -205.7600, -203.3754, -209.4611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-201.3141, -209.1063, -205.7341, -203.5282, -209.6975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-201.1530, -209.0260, -205.7935, -203.4707, -209.5980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-200.9366, -208.9058, -205.8561, -203.3558, -209.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-200.5891, -208.6931, -205.9113, -203.0838, -209.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-200.2622, -208.4927, -205.9470, -202.7844, -208.6101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-199.8687, -208.2417, -205.9806, -202.4131, -208.0829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-199.3149, -207.8896, -206.0603, -201.8956, -207.3270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-198.7710, -207.5408, -206.1502, -201.3610, -206.5648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-198.2336, -207.1862, -206.2372, -200.8229, -205.7716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-197.7576, -206.8736, -206.3358, -200.3435, -205.0565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-197.5065, -206.7076, -206.3427, -200.0603, -204.6393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-197.4326, -206.6657, -206.2755, -199.9435, -204.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-197.4734, -206.6968, -206.1603, -199.9179, -204.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-197.5455, -206.7595, -206.0558, -199.9596, -204.5866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-197.7105, -206.8806, -205.9032, -200.0706, -204.8023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-198.0097, -207.0988, -205.7392, -200.3438, -205.2374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-198.6236, -207.5056, -205.4372, -200.8239, -206.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-199.3653, -207.9891, -205.1279, -201.4214, -206.9331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-200.0704, -208.4407, -204.8424, -201.9507, -207.7421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-200.6337, -208.8091, -204.6615, -202.4284, -208.4343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-201.0238, -209.0726, -204.5919, -202.8222, -208.9791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-201.3732, -209.2989, -204.5232, -203.1634, -209.4348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-201.5300, -209.4016, -204.4971, -203.3551, -209.6670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-201.3784, -209.3089, -204.5040, -203.2850, -209.5155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-201.1775, -209.1902, -204.5628, -203.2352, -209.3694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-200.8123, -208.9681, -204.6597, -203.0764, -209.0277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-200.5030, -208.7781, -204.7446, -202.9316, -208.7356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-200.0879, -208.5343, -204.8721, -202.7221, -208.3365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.6521, -208.2821, -205.0190, -202.5058, -207.9121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-199.0246, -207.9143, -205.1908, -202.1012, -207.1927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-198.5046, -207.6073, -205.3549, -201.7611, -206.6035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-198.1361, -207.3951, -205.4912, -201.5474, -206.2127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-197.8732, -207.2589, -205.6095, -201.4241, -205.9811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-197.8066, -207.2445, -205.6999, -201.4831, -206.0570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-197.7647, -207.2379, -205.7635, -201.5412, -206.1330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-197.8259, -207.2978, -205.8089, -201.7160, -206.3673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-197.9945, -207.4143, -205.7930, -201.9331, -206.6910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-198.1473, -207.5219, -205.7729, -202.1306, -206.9744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-198.2752, -207.6178, -205.7633, -202.2885, -207.2333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-198.3715, -207.6781, -205.7179, -202.3629, -207.3835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-198.4170, -207.7004, -205.6779, -202.3747, -207.4545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-198.3885, -207.6729, -205.6312, -202.2986, -207.3956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.3280, -207.6226, -205.5484, -202.1432, -207.2329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-198.1122, -207.4726, -205.4859, -201.8313, -206.8364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-198.0071, -207.3944, -205.4222, -201.6181, -206.6179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-198.1242, -207.4529, -205.3069, -201.5878, -206.6981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-198.1238, -207.4191, -205.1572, -201.3845, -206.5297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-198.1352, -207.3952, -205.0167, -201.1884, -206.3772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-198.2732, -207.4680, -204.8926, -201.1539, -206.4738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-198.5589, -207.6431, -204.7600, -201.2718, -206.8097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-198.9451, -207.8676, -204.5435, -201.3948, -207.1742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-199.1569, -207.9985, -204.4138, -201.4522, -207.3848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-199.2570, -208.0636, -204.2959, -201.4176, -207.4305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-199.3912, -208.1686, -204.2147, -201.4523, -207.5902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-199.4642, -208.2266, -204.1240, -201.4119, -207.6287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-199.3955, -208.1979, -204.0947, -201.2954, -207.5271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-199.2458, -208.1224, -204.1268, -201.1723, -207.3888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-198.9328, -207.9510, -204.2431, -200.9801, -207.1108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-198.5796, -207.7574, -204.3970, -200.7819, -206.8089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-198.3862, -207.6720, -204.5086, -200.7015, -206.7136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-198.1997, -207.5884, -204.6065, -200.6176, -206.6069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-198.0827, -207.5537, -204.6928, -200.6116, -206.6160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-197.9618, -207.5190, -204.7801, -200.6038, -206.6205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-198.0202, -207.5966, -204.8143, -200.7252, -206.8494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-198.2239, -207.7628, -204.8009, -200.9768, -207.2598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-198.3459, -207.8702, -204.8026, -201.1699, -207.5487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-198.5085, -207.9869, -204.7659, -201.3585, -207.8447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-198.7334, -208.1568, -204.7667, -201.6055, -208.2248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-198.9116, -208.2886, -204.7856, -201.8511, -208.5577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.1164, -208.4259, -204.7783, -202.0993, -208.8929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-199.2037, -208.4714, -204.7403, -202.1915, -208.9967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-199.1586, -208.4357, -204.7060, -202.1598, -208.9094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-198.9786, -208.3143, -204.6717, -201.9845, -208.6177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-198.9536, -208.2749, -204.5759, -201.9114, -208.4833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-198.8984, -208.2117, -204.4851, -201.8075, -208.3027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-198.8423, -208.1434, -204.3945, -201.7094, -208.1200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-198.7512, -208.0456, -204.3060, -201.5779, -207.8839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-198.6451, -207.9397, -204.1983, -201.4217, -207.5985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-198.7039, -207.9354, -204.0486, -201.3715, -207.5108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-198.6534, -207.8746, -203.9814, -201.3024, -207.3609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-198.5966, -207.8132, -203.9347, -201.2380, -207.2206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-198.7650, -207.8977, -203.8736, -201.4000, -207.4361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-198.7762, -207.8902, -203.8462, -201.4344, -207.4525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-198.6498, -207.8086, -203.8942, -201.4168, -207.3531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-198.3968, -207.6655, -204.0143, -201.3628, -207.1694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-197.9976, -207.4472, -204.2295, -201.2812, -206.8773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-197.5001, -207.1793, -204.4917, -201.1343, -206.4863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-197.1344, -206.9884, -204.7096, -201.0672, -206.2487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-196.8973, -206.8685, -204.8616, -201.0571, -206.1331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-196.8688, -206.8675, -204.9456, -201.1984, -206.2747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-197.1135, -207.0186, -204.9275, -201.5044, -206.7225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-197.3375, -207.1392, -204.8290, -201.6876, -207.0100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-197.5368, -207.2458, -204.7583, -201.8700, -207.2863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-197.7225, -207.3428, -204.6878, -202.0097, -207.5324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-197.9476, -207.4622, -204.6029, -202.1780, -207.8216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-198.1134, -207.5542, -204.5533, -202.3222, -208.0577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-198.2204, -207.6146, -204.5180, -202.4135, -208.2227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.3785, -207.7071, -204.4764, -202.5465, -208.4558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-198.3743, -207.7120, -204.5016, -202.5894, -208.5395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-198.3336, -207.6983, -204.5282, -202.6002, -208.5734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-198.0477, -207.5471, -204.6260, -202.4727, -208.3388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-197.8932, -207.4587, -204.6511, -202.3964, -208.1977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-197.8018, -207.4059, -204.6461, -202.3366, -208.1037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-197.5402, -207.2579, -204.6781, -202.1232, -207.7948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-197.2507, -207.0897, -204.6937, -201.8642, -207.4187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-197.0047, -206.9576, -204.7423, -201.6726, -207.1462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-196.6558, -206.7559, -204.8096, -201.4147, -206.7304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-196.3553, -206.5845, -204.8570, -201.1429, -206.3460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-196.1110, -206.4327, -204.8634, -200.8998, -205.9833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-195.9239, -206.3143, -204.8402, -200.6860, -205.6807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-195.7201, -206.1810, -204.7996, -200.4228, -205.3150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-195.5104, -206.0557, -204.7928, -200.1990, -204.9902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-195.4807, -206.0474, -204.7631, -200.1752, -204.9638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-195.5830, -206.1171, -204.6904, -200.2305, -205.1131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-195.8067, -206.2543, -204.5657, -200.3742, -205.4004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-196.1307, -206.4437, -204.3664, -200.5095, -205.7405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-196.4159, -206.6202, -204.2233, -200.6669, -206.0755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-196.6827, -206.7836, -204.0929, -200.8152, -206.3854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-196.9146, -206.9396, -204.0257, -200.9878, -206.7156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-197.1671, -207.0989, -203.9177, -201.1399, -207.0216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-197.3195, -207.1938, -203.8266, -201.1979, -207.1808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-197.4176, -207.2499, -203.7324, -201.1614, -207.2411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-197.4646, -207.2780, -203.6700, -201.1117, -207.2633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-197.4303, -207.2512, -203.6046, -200.9720, -207.1518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.5589, -207.3170, -203.4680, -200.9015, -207.1921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-197.7251, -207.4048, -203.3474, -200.8925, -207.3040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-197.8746, -207.4757, -203.2150, -200.8428, -207.3615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-197.9400, -207.5064, -203.1142, -200.7675, -207.3502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-197.8656, -207.4563, -203.0293, -200.5866, -207.1535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-197.6209, -207.3064, -202.9869, -200.2949, -206.7587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-197.5239, -207.2534, -202.9595, -200.1571, -206.6118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-197.3607, -207.1637, -202.9505, -199.9872, -206.3952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-197.4399, -207.2258, -202.8906, -200.0089, -206.4892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-197.4890, -207.2675, -202.8341, -200.0121, -206.5372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-197.5035, -207.2795, -202.7633, -199.9617, -206.5122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-197.4867, -207.2737, -202.7366, -199.9467, -206.4983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-197.4464, -207.2649, -202.7649, -199.9921, -206.5333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-197.3835, -207.2402, -202.8109, -200.0149, -206.5470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-197.3090, -207.2045, -202.8395, -200.0141, -206.5218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-197.3539, -207.2332, -202.8069, -200.0679, -206.5919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-197.2204, -207.1661, -202.8497, -200.0232, -206.4930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-196.9542, -207.0353, -202.9479, -199.8876, -206.2643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-196.7006, -206.9183, -203.0744, -199.7863, -206.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-196.5154, -206.8384, -203.1585, -199.7077, -205.9744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-196.4069, -206.8065, -203.2357, -199.6936, -205.9640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-196.3103, -206.7829, -203.3102, -199.6887, -205.9663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-196.2105, -206.7686, -203.4329, -199.7472, -206.0349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-196.1465, -206.7671, -203.5318, -199.8340, -206.1304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-196.0482, -206.7459, -203.6447, -199.9293, -206.1968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-196.0287, -206.7672, -203.7320, -200.0519, -206.3459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-196.2459, -206.9383, -203.8130, -200.4030, -206.8494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-196.5404, -207.1395, -203.8602, -200.7748, -207.4042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-196.8747, -207.3612, -203.9386, -201.2053, -208.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-197.0628, -207.4940, -204.0225, -201.4896, -208.4613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-197.0968, -207.5338, -204.0886, -201.5998, -208.6356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-197.2119, -207.6017, -204.0726, -201.6848, -208.8117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-197.2942, -207.6313, -203.9628, -201.6449, -208.8225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-197.2136, -207.5708, -203.8499, -201.4483, -208.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-197.1514, -207.5219, -203.7298, -201.2427, -208.4013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-196.9721, -207.3977, -203.6155, -200.9400, -208.0365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-196.8292, -207.2896, -203.5295, -200.7107, -207.7475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-196.5924, -207.1290, -203.4723, -200.4418, -207.3682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-196.2120, -206.8715, -203.4394, -200.0743, -206.8040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-195.9113, -206.6681, -203.4410, -199.7994, -206.3899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-195.7840, -206.5600, -203.4173, -199.6644, -206.1940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-195.6785, -206.4731, -203.4110, -199.5811, -206.0640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-195.5104, -206.3669, -203.4728, -199.5644, -205.9427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-195.4408, -206.3240, -203.5193, -199.6409, -205.9590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-195.2593, -206.2201, -203.6232, -199.7114, -205.8845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-195.2316, -206.2139, -203.7110, -199.8977, -206.0230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-195.1925, -206.1903, -203.7466, -200.0002, -206.0730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-195.1596, -206.1458, -203.7049, -200.0226, -206.0277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-195.1912, -206.1434, -203.6885, -200.1419, -206.1102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-195.0910, -206.0728, -203.7108, -200.1643, -206.0470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-194.9781, -205.9994, -203.7424, -200.1605, -205.9797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-194.9202, -205.9524, -203.7237, -200.1423, -205.9237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-194.8606, -205.9007, -203.6970, -200.1098, -205.8419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-194.7744, -205.8254, -203.6327, -200.0261, -205.6843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-194.7459, -205.7922, -203.5946, -200.0162, -205.6440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-194.7060, -205.7562, -203.5738, -200.0193, -205.6092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-194.6224, -205.6979, -203.5385, -199.9515, -205.4866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-194.4790, -205.6071, -203.4821, -199.8470, -205.2829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-194.4110, -205.5527, -203.3643, -199.7581, -205.1577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-194.3079, -205.4830, -203.2727, -199.6217, -204.9968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-194.1486, -205.3921, -203.2460, -199.5035, -204.8349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-194.1075, -205.3785, -203.2225, -199.4929, -204.8578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-194.1271, -205.4128, -203.2519, -199.6042, -205.0409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-194.1013, -205.4224, -203.3093, -199.7057, -205.1931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-194.1024, -205.4689, -203.3566, -199.8208, -205.3737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-194.2990, -205.6118, -203.3340, -200.0429, -205.7414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-194.5816, -205.7926, -203.2804, -200.3084, -206.1776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-194.6044, -205.8305, -203.2776, -200.3635, -206.2888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-194.6809, -205.8879, -203.2555, -200.4444, -206.4443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-194.8557, -205.9901, -203.1641, -200.5280, -206.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-195.1547, -206.1664, -203.0726, -200.7135, -206.9973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-195.2462, -206.2278, -203.0285, -200.7788, -207.1106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-194.8800, -206.0399, -203.0785, -200.5365, -206.7224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-194.4887, -205.8193, -203.1226, -200.2334, -206.2478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-194.1099, -205.5901, -203.1165, -199.9026, -205.7130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-193.6086, -205.2739, -203.1354, -199.4776, -204.9962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-193.2308, -205.0191, -203.0986, -199.1116, -204.3744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-192.7741, -204.7404, -203.1353, -198.7400, -203.7206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-192.4737, -204.5591, -203.1449, -198.4569, -203.2674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-192.1882, -204.4024, -203.2015, -198.2298, -202.9069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-192.3115, -204.4733, -203.1375, -198.3097, -203.0672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-192.9679, -204.8245, -202.9162, -198.7509, -203.8610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-193.7576, -205.2482, -202.6893, -199.2898, -204.7923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-194.5745, -205.6941, -202.5113, -199.8612, -205.7607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-195.2919, -206.1062, -202.4323, -200.3899, -206.6869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-195.9228, -206.4583, -202.3896, -200.8812, -207.5090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-196.5201, -206.7885, -202.3946, -201.3843, -208.3228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-196.8583, -206.9719, -202.4313, -201.7097, -208.8254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-197.1086, -207.0948, -202.4658, -201.9754, -209.2093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-196.9922, -207.0421, -202.5620, -202.0131, -209.2380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-196.5869, -206.8566, -202.7447, -201.9000, -209.0319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-196.1250, -206.6384, -202.9059, -201.7200, -208.7126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-195.7201, -206.4429, -202.9596, -201.4544, -208.3211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-195.0771, -206.1229, -203.0727, -201.0518, -207.6748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-194.5307, -205.8441, -203.1910, -200.7363, -207.1338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-193.9977, -205.5660, -203.2871, -200.3974, -206.5605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-193.4199, -205.2622, -203.3517, -199.9543, -205.8626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-193.0058, -205.0412, -203.3996, -199.6238, -205.3582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.6722, -204.8579, -203.4586, -199.3879, -204.9618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.6285, -204.8338, -203.4770, -199.3918, -204.9496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-192.7651, -204.8958, -203.4316, -199.5028, -205.1231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-192.8355, -204.9222, -203.4337, -199.6328, -205.2620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-192.9355, -204.9504, -203.3689, -199.7197, -205.3578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-193.1581, -205.0419, -203.2637, -199.8718, -205.5875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-193.3588, -205.1315, -203.1874, -200.0435, -205.8216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-193.3947, -205.1396, -203.1793, -200.1415, -205.9057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-193.4482, -205.1562, -203.1709, -200.2472, -206.0155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-193.4634, -205.1522, -203.1222, -200.2622, -206.0179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-193.5509, -205.1733, -203.0103, -200.2636, -206.0380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-193.6702, -205.2116, -202.9162, -200.3028, -206.1158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-193.7394, -205.2352, -202.8494, -200.3080, -206.1604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-193.6451, -205.1779, -202.8253, -200.2142, -206.0271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-193.6413, -205.1657, -202.7919, -200.1823, -206.0052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-193.7307, -205.2090, -202.7448, -200.2027, -206.1017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-193.7431, -205.2170, -202.7176, -200.1705, -206.1176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-193.8384, -205.2741, -202.6633, -200.1852, -206.2103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-193.9003, -205.2981, -202.5767, -200.1489, -206.2095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-193.7718, -205.2342, -202.5840, -200.0608, -206.0732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-193.7534, -205.2276, -202.5929, -200.0923, -206.0872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-193.8775, -205.2937, -202.5689, -200.1991, -206.2584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-193.8761, -205.3049, -202.6024, -200.2589, -206.3345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-193.9855, -205.3647, -202.6112, -200.3857, -206.5296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-193.9716, -205.3526, -202.6237, -200.4108, -206.5591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-194.0252, -205.3608, -202.5797, -200.4433, -206.6118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-194.3222, -205.4965, -202.4756, -200.5919, -206.9055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-194.6159, -205.6274, -202.3567, -200.7155, -207.1694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-194.6948, -205.6532, -202.3227, -200.7782, -207.2609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-194.6577, -205.6252, -202.3209, -200.7739, -207.2443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-194.5508, -205.5635, -202.3149, -200.6975, -207.1353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-194.1903, -205.3716, -202.3178, -200.4187, -206.7064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-193.7387, -205.1285, -202.3333, -200.0823, -206.1589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-193.4219, -204.9569, -202.3318, -199.8173, -205.7592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-193.0427, -204.7543, -202.3605, -199.5198, -205.3002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-192.8998, -204.6744, -202.3236, -199.3383, -205.0834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.7580, -204.6027, -202.3059, -199.1872, -204.9019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-192.6343, -204.5481, -202.3188, -199.0741, -204.7815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.5874, -204.5376, -202.3310, -199.0423, -204.7838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-192.6107, -204.5558, -202.3145, -199.0478, -204.8436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.6145, -204.5707, -202.3631, -199.1251, -204.9589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-192.5951, -204.5916, -202.4071, -199.1787, -205.0639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-192.5309, -204.5827, -202.4213, -199.1614, -205.0667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-192.3314, -204.4961, -202.4567, -199.0449, -204.8984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-192.1803, -204.4326, -202.4618, -198.9182, -204.7650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-192.0543, -204.3733, -202.4440, -198.7936, -204.6356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-192.0032, -204.3488, -202.3840, -198.7160, -204.5559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-191.8325, -204.2542, -202.3444, -198.5578, -204.3153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-191.7765, -204.2203, -202.2804, -198.4824, -204.2072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-191.9350, -204.3156, -202.2011, -198.5858, -204.4014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-192.1087, -204.4224, -202.1442, -198.7242, -204.6481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.0664, -204.4268, -202.1691, -198.7484, -204.6796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-192.0809, -204.4615, -202.1706, -198.7948, -204.7591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-192.1859, -204.5456, -202.1284, -198.8666, -204.9203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-192.1947, -204.5726, -202.0988, -198.8674, -204.9536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-192.2484, -204.6295, -202.0781, -198.9121, -205.0673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-192.2423, -204.6508, -202.0567, -198.8930, -205.0968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-192.1724, -204.6314, -202.0522, -198.8333, -205.0472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-192.0859, -204.5904, -202.0428, -198.7436, -204.9559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-192.0653, -204.5749, -202.0115, -198.6891, -204.9246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-192.1683, -204.6240, -201.9538, -198.7161, -205.0411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-192.1052, -204.5881, -201.9356, -198.6383, -204.9708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-192.0788, -204.5770, -201.9298, -198.6127, -204.9727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.1000, -204.5962, -201.9260, -198.6273, -205.0405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-192.3710, -204.7349, -201.8465, -198.7720, -205.3537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-192.7597, -204.9316, -201.7120, -198.9334, -205.7520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-193.2639, -205.1935, -201.6031, -199.2107, -206.3255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-193.7363, -205.4380, -201.5373, -199.5023, -206.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-194.0472, -205.5962, -201.4946, -199.7012, -207.2715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-194.2366, -205.6953, -201.4673, -199.8191, -207.5082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-194.3460, -205.7555, -201.4909, -199.9468, -207.7070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-194.3239, -205.7351, -201.4941, -199.9571, -207.7183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-194.1374, -205.6229, -201.4944, -199.8265, -207.5174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-193.7307, -205.4067, -201.5997, -199.6501, -207.1665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-193.1515, -205.1082, -201.7686, -199.3942, -206.6543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-192.7241, -204.8887, -201.9390, -199.2724, -206.3314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-192.3053, -204.6807, -202.1365, -199.1694, -206.0417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-191.9463, -204.4851, -202.2886, -199.0873, -205.7647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-191.7011, -204.3564, -202.4362, -199.0948, -205.6370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-191.6679, -204.3344, -202.5286, -199.2267, -205.7290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-191.9283, -204.4479, -202.5322, -199.5018, -206.1208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-192.1316, -204.5362, -202.5535, -199.7298, -206.4489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.1124, -204.5042, -202.5905, -199.7739, -206.4776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-191.9851, -204.4153, -202.6225, -199.7386, -206.3555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-192.1480, -204.4738, -202.5696, -199.8395, -206.5283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-192.2233, -204.5042, -202.5409, -199.8680, -206.6206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.1917, -204.4724, -202.5020, -199.7983, -206.5463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.2107, -204.4682, -202.4653, -199.7934, -206.5496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.1978, -204.4481, -202.4246, -199.7507, -206.5012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-192.2028, -204.4437, -202.3989, -199.7371, -206.5102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.2152, -204.4346, -202.3568, -199.7231, -206.5012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.1805, -204.4057, -202.3484, -199.7064, -206.4698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-192.0438, -204.3297, -202.3953, -199.6762, -206.3729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-191.8133, -204.2039, -202.4387, -199.5593, -206.1436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-191.5779, -204.0814, -202.5068, -199.4661, -205.9302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.4337, -204.0029, -202.5496, -199.4186, -205.8060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-191.3951, -203.9596, -202.5115, -199.3824, -205.7188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-191.4621, -203.9615, -202.3954, -199.3432, -205.6796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-191.3366, -203.8680, -202.3245, -199.1986, -205.4183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-191.1752, -203.7454, -202.2158, -198.9960, -205.0641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-191.1404, -203.6784, -202.0460, -198.8217, -204.8016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-191.2603, -203.7026, -201.8528, -198.7332, -204.7378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-191.4287, -203.7547, -201.6592, -198.6794, -204.7409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-191.5442, -203.7822, -201.4895, -198.6196, -204.6984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-191.5992, -203.7830, -201.3729, -198.5744, -204.6431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-191.4888, -203.7114, -201.3173, -198.4551, -204.4507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-191.5039, -203.7077, -201.2852, -198.4730, -204.4601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.5826, -203.7303, -201.2035, -198.4720, -204.4878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.5805, -203.7227, -201.1499, -198.4239, -204.4484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.7065, -203.7718, -201.0311, -198.4025, -204.4966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-191.7191, -203.7571, -200.9239, -198.3107, -204.4085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.8133, -203.7828, -200.8103, -198.2858, -204.4209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-191.8099, -203.7718, -200.7821, -198.2859, -204.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-191.7542, -203.7398, -200.8014, -198.2866, -204.3918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-191.9772, -203.8592, -200.7744, -198.4679, -204.6982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-192.2015, -203.9775, -200.7751, -198.6847, -205.0315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-192.3098, -204.0294, -200.7654, -198.7868, -205.1848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-192.4699, -204.0992, -200.7459, -198.9295, -205.3909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.4721, -204.0835, -200.7155, -198.9348, -205.3737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-192.3748, -204.0290, -200.7069, -198.8757, -205.2617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-192.2803, -203.9789, -200.6785, -198.7786, -205.1322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-192.1274, -203.9031, -200.6841, -198.6835, -204.9688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-191.8325, -203.7530, -200.7098, -198.4895, -204.6384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-191.4837, -203.5721, -200.7762, -198.3092, -204.2754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-191.0978, -203.3746, -200.8477, -198.0988, -203.8631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-190.6552, -203.1822, -200.9596, -197.8567, -203.4217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.2753, -203.0256, -201.0884, -197.6736, -203.0701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.9589, -202.8986, -201.1900, -197.5021, -202.7653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-189.6783, -202.7873, -201.2542, -197.2995, -202.4626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-189.4429, -202.7054, -201.3413, -197.1626, -202.2538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-189.3568, -202.6963, -201.4115, -197.1547, -202.2556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-189.4302, -202.7564, -201.4379, -197.2807, -202.4410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-189.7512, -202.9209, -201.3093, -197.4429, -202.7935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-190.2621, -203.1838, -201.1211, -197.7100, -203.3466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-190.6392, -203.3920, -201.0180, -197.9526, -203.7994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-190.8775, -203.5344, -200.9601, -198.1155, -204.1051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-191.1353, -203.6906, -200.8984, -198.2825, -204.4265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-191.5481, -203.9061, -200.7428, -198.4706, -204.8254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-191.9586, -204.1264, -200.5845, -198.6316, -205.2086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-192.3137, -204.3155, -200.4544, -198.7793, -205.5369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-192.6934, -204.5177, -200.3495, -198.9737, -205.9179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-192.7500, -204.5635, -200.3457, -199.0374, -206.0246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-192.7035, -204.5669, -200.3703, -199.0440, -206.0519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-192.6251, -204.5487, -200.3785, -199.0172, -206.0123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-192.4237, -204.4606, -200.3703, -198.8610, -205.7889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-191.9675, -204.2623, -200.4392, -198.5742, -205.3466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-191.5048, -204.0560, -200.5472, -198.3318, -204.9267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-190.9981, -203.8216, -200.6695, -198.0469, -204.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-190.6406, -203.6495, -200.7453, -197.8169, -204.0571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-190.0367, -203.3501, -200.8919, -197.4534, -203.4204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-189.6014, -203.1299, -201.0478, -197.2704, -203.0157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-189.3926, -203.0263, -201.1573, -197.2408, -202.8744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-189.3269, -202.9774, -201.1599, -197.1919, -202.7953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-189.4422, -203.0175, -201.1119, -197.2527, -202.9192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-189.6753, -203.1215, -201.0264, -197.3704, -203.1687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-190.2398, -203.3855, -200.8773, -197.7121, -203.7848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-190.9157, -203.7125, -200.7093, -198.1191, -204.5209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-191.3950, -203.9428, -200.5900, -198.4115, -205.0327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.8858, -204.1806, -200.4751, -198.6888, -205.5520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-192.3282, -204.3822, -200.3603, -198.9254, -205.9866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.4624, -204.4348, -200.3133, -198.9951, -206.1127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-192.5865, -204.4851, -200.2991, -199.0893, -206.2633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-192.3421, -204.3561, -200.3668, -198.9791, -206.0621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.0499, -204.2070, -200.4502, -198.8516, -205.8245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-191.6384, -204.0062, -200.5497, -198.6424, -205.4544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-191.3197, -203.8485, -200.6261, -198.4779, -205.1674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-190.9049, -203.6442, -200.7479, -198.2821, -204.7984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-190.4866, -203.4335, -200.8387, -198.0376, -204.3786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.0061, -203.1952, -200.9542, -197.7732, -203.8955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-189.7129, -203.0509, -201.0446, -197.6368, -203.6237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-189.6120, -203.0010, -201.0730, -197.6043, -203.5319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-189.6334, -203.0075, -201.0219, -197.5750, -203.5146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-189.6841, -203.0298, -200.9999, -197.6134, -203.5719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-189.7370, -203.0595, -201.0043, -197.6869, -203.6739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-189.7256, -203.0534, -201.0059, -197.7026, -203.6977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-189.7089, -203.0342, -200.9656, -197.6649, -203.6588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-189.7246, -203.0256, -200.8859, -197.6097, -203.6140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-189.8637, -203.0839, -200.8155, -197.6685, -203.7485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-190.1257, -203.1928, -200.6901, -197.7663, -203.9803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-190.3287, -203.2769, -200.6054, -197.8653, -204.1813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-190.4817, -203.3438, -200.5498, -197.9485, -204.3492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-190.4846, -203.3398, -200.5432, -197.9659, -204.3750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-190.6263, -203.3949, -200.4906, -198.0590, -204.5254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-190.7473, -203.4392, -200.4388, -198.1240, -204.6465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-190.7235, -203.4063, -200.4411, -198.1439, -204.6415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-190.6738, -203.3649, -200.4570, -198.1495, -204.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-190.5943, -203.3002, -200.4671, -198.1399, -204.5480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-190.3484, -203.1598, -200.5370, -198.0527, -204.3346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-190.0586, -202.9864, -200.6212, -197.9594, -204.0803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-189.6737, -202.7697, -200.7402, -197.8316, -203.7304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-189.2978, -202.5488, -200.8298, -197.6796, -203.3460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-189.0537, -202.3985, -200.8925, -197.6078, -203.1157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-189.0002, -202.3529, -200.9213, -197.6454, -203.1132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-189.1286, -202.4056, -200.9203, -197.8042, -203.3300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-189.3241, -202.4940, -200.9299, -198.0385, -203.6482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-189.7458, -202.6988, -200.9022, -198.4046, -204.2268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-190.1090, -202.8780, -200.9205, -198.7402, -204.7620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-190.2684, -202.9852, -201.0286, -199.0069, -205.1482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-190.3487, -203.0533, -201.1053, -199.1685, -205.3875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-190.3537, -203.0790, -201.1722, -199.2636, -205.5104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-190.4261, -203.1360, -201.1767, -199.3312, -205.6478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-190.3113, -203.0974, -201.1729, -199.2481, -205.5367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-189.8978, -202.9218, -201.2744, -199.0398, -205.1618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-189.4244, -202.7116, -201.3826, -198.7955, -204.7079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-188.7891, -202.4347, -201.5559, -198.4620, -204.1033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.4928, -202.3067, -201.6517, -198.3267, -203.8427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-188.3699, -202.2672, -201.7205, -198.3022, -203.7936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-188.5776, -202.3731, -201.6973, -198.4555, -204.0965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-188.7955, -202.4693, -201.6460, -198.5934, -204.3669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-189.0139, -202.5680, -201.5783, -198.7075, -204.6199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-189.2447, -202.6701, -201.4744, -198.7954, -204.8531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-189.2654, -202.6754, -201.4207, -198.7536, -204.8593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.0563, -202.5763, -201.4118, -198.5829, -204.6108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-188.7003, -202.4068, -201.3918, -198.2766, -204.1485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-188.4075, -202.2636, -201.3932, -198.0493, -203.7865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-188.1774, -202.1490, -201.3654, -197.8316, -203.4728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-188.1179, -202.1046, -201.2808, -197.7235, -203.3317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-188.0276, -202.0455, -201.2361, -197.6426, -203.1908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-188.4022, -202.2014, -201.0262, -197.7744, -203.5175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-188.9968, -202.4647, -200.8103, -198.0588, -204.1261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-189.7272, -202.7904, -200.6139, -198.4696, -204.9101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-190.1663, -202.9832, -200.5157, -198.7353, -205.4113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.5089, -203.1344, -200.4685, -198.9723, -205.8385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-190.7766, -203.2542, -200.4499, -199.1694, -206.1952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.0533, -203.3862, -200.4340, -199.3655, -206.5646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-191.2771, -203.4894, -200.4106, -199.5109, -206.8522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.2868, -203.4999, -200.4187, -199.5354, -206.9249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.2932, -203.5088, -200.4119, -199.5398, -206.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-191.0601, -203.4070, -200.4627, -199.4292, -206.8004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-190.8523, -203.3114, -200.5131, -199.3393, -206.6426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.5366, -203.1671, -200.5889, -199.1945, -206.3806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-190.1202, -202.9835, -200.6567, -198.9515, -205.9750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-189.6997, -202.8019, -200.7006, -198.6635, -205.5302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-189.3316, -202.6412, -200.7394, -198.4006, -205.1320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-188.8315, -202.4219, -200.8185, -198.0784, -204.5974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-188.4014, -202.2293, -200.8949, -197.8226, -204.1363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.0526, -202.0713, -200.9564, -197.6117, -203.7569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-188.0751, -202.0768, -200.8913, -197.5843, -203.7471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-188.1869, -202.1182, -200.7859, -197.5889, -203.8104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.5668, -202.2780, -200.5959, -197.7192, -204.1305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-188.9998, -202.4578, -200.4102, -197.8963, -204.5064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-189.4483, -202.6440, -200.2106, -198.0496, -204.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-190.0211, -202.8843, -199.9720, -198.2441, -205.3219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-190.4633, -203.0517, -199.7221, -198.3073, -205.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-190.8546, -203.2021, -199.5087, -198.3709, -205.7967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-190.9471, -203.2255, -199.4181, -198.3396, -205.7956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.0081, -203.2375, -199.3177, -198.2667, -205.7444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-190.8308, -203.1382, -199.2822, -198.0824, -205.4836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-190.7160, -203.0600, -199.1869, -197.8780, -205.2241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.4301, -202.8989, -199.1333, -197.5857, -204.8025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-190.3569, -202.8555, -199.1160, -197.4920, -204.6951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-190.1610, -202.7584, -199.1505, -197.3644, -204.5043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-189.7221, -202.5394, -199.2759, -197.1499, -204.1017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-189.4251, -202.3846, -199.3870, -197.0421, -203.8565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-189.0579, -202.2057, -199.5203, -196.8979, -203.5544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-188.7424, -202.0524, -199.6560, -196.7995, -203.3124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-188.6780, -202.0202, -199.7273, -196.8370, -203.3223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-188.3314, -201.8383, -199.8546, -196.7080, -203.0189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-188.1897, -201.7457, -199.9390, -196.7056, -202.9226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-187.9810, -201.6176, -200.0265, -196.6707, -202.7361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-187.6608, -201.4496, -200.2057, -196.6422, -202.5096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-187.4376, -201.3453, -200.3742, -196.6755, -202.4190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-187.2780, -201.2727, -200.5490, -196.7714, -202.4176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-187.2135, -201.2467, -200.7445, -196.9615, -202.5605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-187.4983, -201.3808, -200.8182, -197.3040, -203.0450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-187.9222, -201.5857, -200.8799, -197.7268, -203.6980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-188.3508, -201.7862, -200.9514, -198.1607, -204.3512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.7872, -201.9908, -201.0357, -198.5934, -205.0240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-189.0283, -202.1025, -201.1031, -198.8512, -205.4200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-189.1045, -202.1365, -201.2019, -199.0215, -205.6360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-189.2199, -202.1900, -201.2628, -199.1858, -205.8634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-189.1841, -202.1706, -201.3362, -199.2431, -205.9067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-189.0692, -202.1118, -201.4011, -199.2331, -205.8397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-188.8464, -202.0042, -201.4634, -199.1302, -205.6372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-188.5453, -201.8656, -201.5204, -198.9494, -205.3309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-188.3874, -201.7938, -201.5318, -198.8330, -205.1611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-188.2999, -201.7522, -201.4586, -198.6892, -205.0037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-188.2843, -201.7243, -201.3297, -198.5564, -204.8693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-188.3571, -201.7239, -201.1097, -198.4092, -204.7512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-187.9964, -201.5345, -200.9811, -197.9979, -204.1604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-187.7872, -201.4070, -200.7986, -197.6543, -203.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-187.7462, -201.3501, -200.5730, -197.4054, -203.4153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-187.5817, -201.2412, -200.4006, -197.1099, -203.0272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-187.7324, -201.2811, -200.1877, -197.0358, -203.0157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-187.9195, -201.3411, -199.9729, -196.9987, -203.0538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-188.1929, -201.4251, -199.6920, -196.9576, -203.1181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-188.7120, -201.6215, -199.3689, -197.0680, -203.4404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-189.0595, -201.7515, -199.1272, -197.1144, -203.6285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-189.1611, -201.7757, -198.9292, -196.9907, -203.5523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.0892, -201.7135, -198.8083, -196.8362, -203.3383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-189.0892, -201.6962, -198.7039, -196.7562, -203.2462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-189.2166, -201.7362, -198.5496, -196.7168, -203.2557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-189.3223, -201.7761, -198.4333, -196.6834, -203.2868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-189.1788, -201.6996, -198.3969, -196.5349, -203.0991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-189.0330, -201.6329, -198.4357, -196.4677, -203.0043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-188.9641, -201.6042, -198.4491, -196.4265, -202.9793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-189.0128, -201.6276, -198.4601, -196.4876, -203.0979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-189.0557, -201.6459, -198.4828, -196.5692, -203.2176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-189.3543, -201.7975, -198.4640, -196.7931, -203.6285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-189.6296, -201.9394, -198.4129, -196.9580, -203.9677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.7479, -202.0113, -198.3946, -197.0259, -204.1484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-189.8733, -202.0859, -198.3921, -197.1102, -204.3566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-190.0414, -202.1787, -198.4158, -197.2643, -204.6514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-189.9428, -202.1559, -198.4988, -197.2849, -204.6922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-189.6516, -202.0390, -198.6332, -197.2232, -204.5441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-189.2221, -201.8572, -198.8083, -197.0952, -204.2513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-188.7109, -201.6439, -199.0353, -196.9500, -203.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-188.0627, -201.3669, -199.3176, -196.7473, -203.3978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-187.3361, -201.0546, -199.6293, -196.4811, -202.8027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-186.8091, -200.8296, -199.8750, -196.3012, -202.3799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-186.3365, -200.6272, -200.1006, -196.1511, -201.9959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-186.0224, -200.4964, -200.2884, -196.1072, -201.7913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-185.6255, -200.3248, -200.4786, -195.9908, -201.4583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-185.3956, -200.2218, -200.5568, -195.8969, -201.2402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-185.3166, -200.1890, -200.5890, -195.9033, -201.1899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-185.6780, -200.3513, -200.4663, -196.1579, -201.6183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-186.0920, -200.5185, -200.2476, -196.3448, -202.0063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-186.4858, -200.6738, -200.0379, -196.5117, -202.3594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-186.7987, -200.7793, -199.8439, -196.6292, -202.5978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-187.2747, -200.9564, -199.6036, -196.8291, -202.9968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-187.6175, -201.0622, -199.3961, -196.9571, -203.2314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-187.8614, -201.1268, -199.1976, -196.9952, -203.3413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.2225, -201.2417, -198.9689, -197.0965, -203.5641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-188.4441, -201.2962, -198.7740, -197.1104, -203.6369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-188.4375, -201.2546, -198.6492, -196.9942, -203.4964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.4774, -201.2402, -198.4900, -196.8794, -203.3780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-188.4833, -201.2100, -198.3374, -196.7345, -203.2183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-188.5875, -201.2356, -198.1558, -196.6156, -203.1562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.7169, -201.2763, -198.0124, -196.5604, -203.1706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-188.6298, -201.2195, -197.9343, -196.4139, -202.9840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-188.3284, -201.0685, -197.9197, -196.1778, -202.6004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-188.2696, -201.0244, -197.8776, -196.1153, -202.4914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-188.1218, -200.9434, -197.8564, -195.9925, -202.2962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-187.9395, -200.8428, -197.8329, -195.8324, -202.0549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-187.8003, -200.7626, -197.8187, -195.7172, -201.8780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-187.7700, -200.7385, -197.7501, -195.6175, -201.7829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-187.8001, -200.7509, -197.6835, -195.5691, -201.7804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-187.9347, -200.8194, -197.6479, -195.6310, -201.9453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-188.3216, -201.0023, -197.5840, -195.8638, -202.3895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-188.7550, -201.2149, -197.5553, -196.1705, -202.9290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-189.2864, -201.4736, -197.5030, -196.5251, -203.5638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-189.7412, -201.6944, -197.4971, -196.8919, -204.1504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.2050, -201.9243, -197.4960, -197.2599, -204.7421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-190.4989, -202.0693, -197.5261, -197.5302, -205.1584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-190.4531, -202.0532, -197.5742, -197.5523, -205.1920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-190.3906, -202.0423, -197.6730, -197.6142, -205.2691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-190.1346, -201.9322, -197.7949, -197.5595, -205.1355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-190.0260, -201.8910, -197.8426, -197.5313, -205.1018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-189.7725, -201.7884, -197.9303, -197.4368, -204.9380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-189.4864, -201.6833, -198.0789, -197.3747, -204.8076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-189.3853, -201.6656, -198.2402, -197.4647, -204.9085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-189.1459, -201.5760, -198.3758, -197.4277, -204.8090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-188.9620, -201.5070, -198.4565, -197.3644, -204.7072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-188.6362, -201.3676, -198.5413, -197.1905, -204.4299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-188.6423, -201.3659, -198.5426, -197.1961, -204.4636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-188.4803, -201.2954, -198.6051, -197.1240, -204.3562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-188.5391, -201.3279, -198.6454, -197.1985, -204.4951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-188.4553, -201.2825, -198.6878, -197.1670, -204.4469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-188.3532, -201.2309, -198.7317, -197.1223, -204.3794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-188.3371, -201.2283, -198.7476, -197.1003, -204.3983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-188.0924, -201.1308, -198.8111, -196.9317, -204.1823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-187.9812, -201.0929, -198.8436, -196.8507, -204.1123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-188.0110, -201.1028, -198.8105, -196.8346, -204.1480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-188.0409, -201.1072, -198.7739, -196.8212, -204.1753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-188.1209, -201.1356, -198.6884, -196.7978, -204.2191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-188.2721, -201.1875, -198.5325, -196.7630, -204.2767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.2018, -201.1340, -198.4475, -196.6386, -204.1245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-188.0892, -201.0522, -198.3087, -196.4111, -203.8506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-187.7714, -200.8811, -198.2540, -196.1083, -203.4056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-187.2349, -200.6081, -198.2311, -195.6521, -202.7101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-186.7414, -200.3579, -198.2602, -195.2935, -202.1122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-186.2518, -200.1044, -198.2878, -194.9399, -201.4953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.0735, -199.9894, -198.2111, -194.7371, -201.1715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.1029, -199.9811, -198.1389, -194.7179, -201.1337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-186.1599, -200.0078, -198.1622, -194.8263, -201.2554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-186.3813, -200.1207, -198.1719, -195.0504, -201.5818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-187.0414, -200.4298, -198.0552, -195.5056, -202.3314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-187.5670, -200.6873, -198.0176, -195.9039, -202.9755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-187.7464, -200.7941, -198.1158, -196.1709, -203.3155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-187.8836, -200.8786, -198.2380, -196.4221, -203.6216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-187.9758, -200.9391, -198.3433, -196.6144, -203.8570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-188.0445, -200.9816, -198.4056, -196.7373, -204.0209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-188.1557, -201.0435, -198.4322, -196.8516, -204.1989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-188.0719, -201.0230, -198.4996, -196.8496, -204.1829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-187.7531, -200.8825, -198.5253, -196.6146, -203.8373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-187.2981, -200.6758, -198.5790, -196.2985, -203.3421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-186.9040, -200.5025, -198.6612, -196.0458, -202.9461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-186.5928, -200.3667, -198.7276, -195.8449, -202.6331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-186.4162, -200.2977, -198.7944, -195.7494, -202.4968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-186.2091, -200.2090, -198.8032, -195.5590, -202.2552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-186.1574, -200.1876, -198.7403, -195.4201, -202.1425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-186.0282, -200.1384, -198.7712, -195.3126, -202.0265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-185.9614, -200.1080, -198.7760, -195.2500, -201.9588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-185.9347, -200.0945, -198.7483, -195.1906, -201.9105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-185.8788, -200.0650, -198.6859, -195.0634, -201.7841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-186.1004, -200.1523, -198.5216, -195.0749, -201.9229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-186.2545, -200.2064, -198.3851, -195.0653, -201.9935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-186.5987, -200.3410, -198.2073, -195.1842, -202.2618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-186.7794, -200.4042, -198.1312, -195.2735, -202.4170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.9946, -200.4808, -198.0223, -195.3449, -202.5799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.2999, -200.5977, -197.8770, -195.4376, -202.8103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-187.7048, -200.7721, -197.7257, -195.6006, -203.1635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-188.0615, -200.9259, -197.6211, -195.7651, -203.4910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-188.2097, -200.9763, -197.5930, -195.8563, -203.6386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-188.1846, -200.9567, -197.5657, -195.7954, -203.5783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-188.1219, -200.9154, -197.5466, -195.7135, -203.4829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-188.0901, -200.9073, -197.5418, -195.6712, -203.4614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-188.1573, -200.9498, -197.5861, -195.7670, -203.6114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.0046, -200.8950, -197.6686, -195.7270, -203.5438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-187.6632, -200.7485, -197.7837, -195.5597, -203.2721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-187.5155, -200.6933, -197.8485, -195.5022, -203.1884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-187.3194, -200.6091, -197.9262, -195.4207, -203.0480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-187.1003, -200.5138, -197.9708, -195.2750, -202.8471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-186.8556, -200.4032, -197.9939, -195.0970, -202.5911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-186.3111, -200.1581, -198.1351, -194.7869, -202.0710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-185.6985, -199.8792, -198.2650, -194.3837, -201.4371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-185.1753, -199.6443, -198.4149, -194.0669, -200.9199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-185.1512, -199.6470, -198.4479, -194.0689, -200.9554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-185.3537, -199.7610, -198.4278, -194.2157, -201.2418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-185.4869, -199.8312, -198.4133, -194.3230, -201.4340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-185.9355, -200.0475, -198.3186, -194.6349, -201.9666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-186.3140, -200.2311, -198.2317, -194.8984, -202.4075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-186.6716, -200.3975, -198.1967, -195.2165, -202.8535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-187.0610, -200.5726, -198.1608, -195.5522, -203.3166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-187.6413, -200.8392, -198.1118, -196.0165, -203.9916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-188.2491, -201.1133, -198.0375, -196.4554, -204.6508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-188.6094, -201.2655, -197.9788, -196.7060, -205.0176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.7015, -201.2973, -197.9959, -196.8181, -205.1423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-188.5955, -201.2434, -198.0505, -196.8139, -205.0690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-188.5208, -201.2071, -198.1046, -196.8332, -205.0401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-188.3959, -201.1685, -198.1217, -196.7730, -204.9323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-188.2317, -201.1007, -198.1054, -196.6554, -204.7391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.0508, -201.0255, -198.0567, -196.4860, -204.5031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-187.8423, -200.9364, -197.9629, -196.2415, -204.1904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-187.5546, -200.7993, -197.8422, -195.9045, -203.7489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-187.3599, -200.6986, -197.7430, -195.6648, -203.4300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-186.9793, -200.5107, -197.6674, -195.3039, -202.8979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-186.6265, -200.3261, -197.5861, -194.9577, -202.3820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.5980, -200.2967, -197.4970, -194.8723, -202.2614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-186.5373, -200.2523, -197.3945, -194.7391, -202.0942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-186.3057, -200.1226, -197.3457, -194.5394, -201.7630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-186.0084, -199.9608, -197.2951, -194.2716, -201.3433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-186.0638, -199.9594, -197.1472, -194.1978, -201.2654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-186.0652, -199.9343, -197.0461, -194.1324, -201.1644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-186.0533, -199.9143, -197.0116, -194.1364, -201.1279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-186.3152, -200.0180, -196.8980, -194.2782, -201.3539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-186.6982, -200.1826, -196.8051, -194.5361, -201.7479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-187.1148, -200.3633, -196.7007, -194.8055, -202.1659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-187.5284, -200.5503, -196.6426, -195.1352, -202.6136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-187.8182, -200.6949, -196.6267, -195.4020, -202.9662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-187.8407, -200.7199, -196.6999, -195.5523, -203.0960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-187.5591, -200.6030, -196.8528, -195.5381, -202.9404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-187.4054, -200.5459, -196.9811, -195.5970, -202.9138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-187.3393, -200.5251, -197.0728, -195.6815, -202.9581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.2614, -200.4954, -197.1162, -195.7014, -202.9333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-187.1380, -200.4421, -197.1519, -195.6767, -202.8462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-186.9376, -200.3592, -197.1948, -195.5933, -202.6743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-186.8384, -200.3081, -197.1754, -195.5259, -202.5544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-186.6767, -200.2320, -197.2016, -195.4596, -202.4016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-186.4824, -200.1382, -197.2016, -195.3292, -202.1785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-186.3648, -200.0691, -197.1729, -195.2393, -202.0071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-186.4198, -200.0831, -197.1186, -195.2537, -202.0293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-186.7084, -200.1917, -196.9680, -195.3594, -202.2325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-186.8534, -200.2423, -196.8266, -195.3513, -202.2717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-187.1949, -200.3907, -196.6266, -195.4330, -202.4979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-187.6060, -200.5825, -196.5007, -195.6401, -202.8856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-188.0855, -200.7987, -196.3823, -195.8940, -203.3523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-188.4624, -200.9683, -196.2925, -196.0981, -203.7201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-188.8214, -201.1237, -196.1514, -196.2355, -204.0018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-189.1614, -201.2797, -196.0489, -196.3995, -204.3024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-189.2225, -201.2842, -195.9941, -196.4148, -204.3234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-189.1813, -201.2392, -195.9763, -196.3999, -204.2702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-189.0569, -201.1613, -195.9935, -196.3598, -204.1545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-189.0010, -201.1166, -195.9838, -196.3377, -204.0964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-188.9288, -201.0706, -196.0352, -196.3643, -204.0827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-188.9318, -201.0455, -196.0830, -196.4486, -204.1315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-189.0083, -201.0531, -196.1020, -196.5469, -204.2491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-189.1011, -201.0705, -196.1513, -196.6810, -204.4130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-189.0993, -201.0402, -196.1472, -196.6907, -204.4176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.8694, -200.8923, -196.1936, -196.5962, -204.1978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-188.6393, -200.7546, -196.2653, -196.5221, -204.0138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-188.0491, -200.4398, -196.3498, -196.1866, -203.4108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-187.6997, -200.2518, -196.3655, -195.9429, -203.0290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-187.1664, -199.9891, -196.4178, -195.5768, -202.4580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-186.5259, -199.6712, -196.4550, -195.1048, -201.7298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-185.9289, -199.3770, -196.5699, -194.7467, -201.1121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-185.2658, -199.0597, -196.7228, -194.3667, -200.4357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-184.6772, -198.7812, -196.8609, -194.0227, -199.8281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-184.4117, -198.6473, -196.9200, -193.8630, -199.5463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-184.1221, -198.5123, -197.0177, -193.7136, -199.2704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-183.9977, -198.4587, -197.1203, -193.7183, -199.2220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-184.1590, -198.5331, -197.1027, -193.8336, -199.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-184.6353, -198.7564, -197.0685, -194.2153, -200.0548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-185.2677, -199.0597, -196.9524, -194.6285, -200.7824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-186.2632, -199.5190, -196.7201, -195.2082, -201.8143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-187.2838, -200.0072, -196.5591, -195.8494, -202.9161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.1579, -200.4244, -196.3836, -196.3334, -203.7915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-188.9824, -200.8153, -196.1878, -196.7395, -204.5600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-189.7035, -201.1682, -195.9931, -197.0599, -205.2020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-189.9406, -201.2865, -195.8549, -197.0841, -205.3558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-189.8249, -201.2361, -195.7433, -196.8896, -205.1480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-189.3305, -200.9991, -195.6779, -196.4685, -204.5605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-188.8154, -200.7422, -195.6043, -196.0122, -203.9202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-188.1337, -200.4009, -195.5928, -195.4802, -203.1349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-187.1983, -199.9348, -195.6384, -194.7912, -202.0842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-186.1823, -199.4315, -195.7638, -194.0957, -200.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-185.3684, -199.0381, -195.9173, -193.5887, -200.1264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-184.6885, -198.7108, -196.0992, -193.2145, -199.4458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-184.3471, -198.5445, -196.2135, -193.0493, -199.1259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-184.3688, -198.5447, -196.2392, -193.1157, -199.1964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-184.6467, -198.6718, -196.1931, -193.3260, -199.5422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-185.0291, -198.8621, -196.1804, -193.6605, -200.0699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-185.4213, -199.0529, -196.2240, -194.0706, -200.6457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-185.6372, -199.1595, -196.2634, -194.3173, -200.9818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-185.9513, -199.3207, -196.2268, -194.5544, -201.3747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.2996, -199.5055, -196.2332, -194.8503, -201.8504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-186.3497, -199.5324, -196.2979, -194.9683, -201.9948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-186.3494, -199.5344, -196.3740, -195.0527, -202.0844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-186.2910, -199.5065, -196.5038, -195.1507, -202.1427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-186.2928, -199.5042, -196.6440, -195.3119, -202.2764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-186.3336, -199.5034, -196.7043, -195.4332, -202.3707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-186.3627, -199.5042, -196.7709, -195.5463, -202.4594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-186.6118, -199.6106, -196.7426, -195.7223, -202.7355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-186.9525, -199.7682, -196.6973, -195.9306, -203.1082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-186.9189, -199.7509, -196.7336, -195.9357, -203.1127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-186.7417, -199.6713, -196.8249, -195.8729, -202.9948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-186.7227, -199.6653, -196.8767, -195.8937, -203.0275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-186.7552, -199.6768, -196.8427, -195.8840, -203.0473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.7875, -199.6763, -196.7938, -195.8586, -203.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-186.8972, -199.7127, -196.7289, -195.8809, -203.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-186.9672, -199.7345, -196.6077, -195.8038, -203.0962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-187.3321, -199.8792, -196.4364, -195.9107, -203.3616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-187.7648, -200.0584, -196.2932, -196.1061, -203.7286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-187.8053, -200.0451, -196.2295, -196.0925, -203.7005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-187.6009, -199.9213, -196.1489, -195.8720, -203.3907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-187.5801, -199.8827, -195.9688, -195.6735, -203.2017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-187.4569, -199.7945, -195.8229, -195.4272, -202.9211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-187.3780, -199.7326, -195.6943, -195.2253, -202.7050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-187.4108, -199.7208, -195.5326, -195.0819, -202.5847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-187.4822, -199.7286, -195.3576, -194.9491, -202.4956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-187.5826, -199.7573, -195.2352, -194.8956, -202.4956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-187.8005, -199.8510, -195.1080, -194.9131, -202.6296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-187.9313, -199.9060, -195.0283, -194.9196, -202.7123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-188.2178, -200.0259, -194.9362, -195.0436, -202.9532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-188.3251, -200.0550, -194.8716, -195.0662, -203.0104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-188.2487, -199.9842, -194.7858, -194.9300, -202.8259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-187.8395, -199.7554, -194.7550, -194.5810, -202.3124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-187.5847, -199.6106, -194.7746, -194.4223, -202.0355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-187.2592, -199.4463, -194.8438, -194.2510, -201.7311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-187.0255, -199.3248, -194.8795, -194.1088, -201.5049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-186.8287, -199.2189, -194.8957, -193.9880, -201.2977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-186.8649, -199.2215, -194.8633, -194.0037, -201.3199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-186.9647, -199.2597, -194.8627, -194.1152, -201.4514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-187.1621, -199.3647, -194.8624, -194.2874, -201.7206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-187.3596, -199.4777, -194.8949, -194.4985, -202.0324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-187.3696, -199.4966, -194.9206, -194.5591, -202.1135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-187.3574, -199.5074, -194.9383, -194.5878, -202.1622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-187.3041, -199.4959, -194.9516, -194.5835, -202.1607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-187.0920, -199.4039, -195.0132, -194.5026, -202.0064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-186.8634, -199.2954, -195.0603, -194.4066, -201.8133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-186.6838, -199.2128, -195.1089, -194.3547, -201.6824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-186.3297, -199.0419, -195.0767, -194.0740, -201.2588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-185.9228, -198.8431, -195.1077, -193.8323, -200.8280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-185.6688, -198.7252, -195.1926, -193.7703, -200.6335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-185.4416, -198.6255, -195.2329, -193.6641, -200.4301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-185.3206, -198.5803, -195.3032, -193.6661, -200.3853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-185.3110, -198.5732, -195.3457, -193.7456, -200.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-185.1668, -198.5093, -195.4934, -193.8250, -200.4182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-184.9349, -198.3939, -195.6680, -193.8728, -200.2967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-184.9903, -198.4027, -195.7595, -194.0641, -200.4388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-185.2701, -198.5207, -195.7626, -194.3322, -200.7820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-185.8355, -198.7717, -195.6951, -194.7424, -201.4019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-186.3670, -199.0172, -195.5809, -195.0532, -201.9473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-186.8058, -199.2129, -195.4768, -195.2910, -202.3795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-187.0049, -199.2651, -195.4214, -195.3585, -202.5104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-187.1971, -199.3192, -195.4008, -195.4592, -202.6670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-187.4533, -199.4143, -195.3974, -195.6159, -202.9214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-187.1815, -199.2563, -195.4664, -195.4715, -202.6363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-186.8249, -199.0652, -195.5274, -195.2511, -202.2500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-186.5786, -198.9272, -195.5905, -195.1094, -201.9864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-186.4672, -198.8700, -195.6451, -195.0440, -201.8945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-186.1642, -198.7120, -195.7151, -194.8492, -201.5829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-185.9125, -198.5738, -195.7728, -194.6860, -201.3155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-185.7302, -198.4719, -195.8046, -194.5496, -201.1163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-185.7382, -198.4588, -195.8223, -194.5562, -201.1315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-185.8553, -198.5144, -195.8019, -194.5976, -201.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-186.0670, -198.6192, -195.7837, -194.7260, -201.5116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-186.0417, -198.6070, -195.7943, -194.7035, -201.4946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-185.9917, -198.5810, -195.7884, -194.6522, -201.4409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-185.8235, -198.4958, -195.7885, -194.5132, -201.2536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-185.9224, -198.5323, -195.7399, -194.5342, -201.3418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.1724, -198.6532, -195.6712, -194.6437, -201.6017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-186.7001, -198.9071, -195.5136, -194.8684, -202.1089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-187.2486, -199.1719, -195.3069, -195.0528, -202.5854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-187.7934, -199.4477, -195.1169, -195.2372, -203.0756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-188.2107, -199.6564, -194.9440, -195.3516, -203.4235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-188.6297, -199.8699, -194.7834, -195.4837, -203.7858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-188.9750, -200.0547, -194.6094, -195.5507, -204.0559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-189.1383, -200.1481, -194.4820, -195.5281, -204.1603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-188.4895, -199.8520, -194.4510, -195.0084, -203.4612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-187.9467, -199.6151, -194.4058, -194.5337, -202.8696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-187.4600, -199.4011, -194.3562, -194.0867, -202.3245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-186.7450, -199.0548, -194.4222, -193.5851, -201.5831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.1016, -198.7475, -194.4999, -193.1389, -200.9282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-185.5636, -198.4951, -194.5273, -192.7070, -200.3451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-184.9446, -198.1957, -194.6637, -192.2987, -199.7376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-184.5394, -197.9854, -194.7973, -192.0707, -199.3577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-184.3935, -197.9108, -194.8410, -191.9520, -199.2338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-184.2283, -197.8141, -194.8555, -191.7944, -199.0480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-184.1871, -197.7642, -194.8693, -191.7641, -199.0015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-184.2341, -197.7450, -194.8738, -191.8357, -199.0511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-184.4492, -197.8111, -194.8049, -191.9722, -199.2504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-184.8200, -197.9559, -194.7581, -192.2739, -199.6609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-185.3034, -198.1676, -194.6791, -192.6219, -200.1862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.0264, -198.5093, -194.5869, -193.1348, -200.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-186.4765, -198.7235, -194.5723, -193.4925, -201.5150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.7316, -198.8501, -194.5519, -193.6805, -201.8177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-186.7557, -198.8515, -194.5946, -193.7742, -201.8926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.8960, -198.9129, -194.5727, -193.8747, -202.0516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-186.9043, -198.9000, -194.6392, -193.9922, -202.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-186.8573, -198.8619, -194.6614, -194.0139, -202.1091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-186.5866, -198.7163, -194.7235, -193.9004, -201.8679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-186.0473, -198.4489, -194.8270, -193.6021, -201.3512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-185.4433, -198.1460, -194.9542, -193.2701, -200.7519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-184.9299, -197.8927, -195.1073, -193.0257, -200.2775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-184.5702, -197.7077, -195.2410, -192.8892, -199.9561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-184.2602, -197.5394, -195.3537, -192.7715, -199.6659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-183.6385, -197.2149, -195.5255, -192.4414, -199.0188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-182.9164, -196.8522, -195.7387, -192.0335, -198.2697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-182.4684, -196.6326, -195.8728, -191.7793, -197.8046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-182.2690, -196.5267, -195.9050, -191.6507, -197.5774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-182.3684, -196.5593, -195.8005, -191.6541, -197.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-182.8258, -196.7556, -195.6374, -191.9410, -198.1047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-183.5696, -197.0904, -195.3953, -192.3872, -198.8636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-184.5078, -197.5281, -195.1366, -192.9633, -199.8329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-185.4883, -197.9947, -194.9033, -193.5643, -200.8494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-186.4208, -198.4449, -194.7359, -194.1557, -201.8328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-187.5349, -198.9909, -194.5808, -194.8823, -203.0017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-188.6741, -199.5500, -194.4379, -195.6047, -204.1716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-189.5842, -199.9905, -194.3322, -196.1707, -205.0859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-190.0488, -200.2059, -194.3004, -196.4934, -205.5715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-190.2670, -200.2965, -194.2543, -196.6311, -205.7757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-190.3454, -200.3027, -194.2041, -196.6833, -205.8196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-190.3231, -200.2622, -194.1989, -196.7111, -205.7950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-190.3280, -200.2383, -194.1913, -196.7489, -205.7997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-189.8010, -199.9567, -194.2010, -196.4338, -205.2626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-189.0493, -199.5727, -194.1924, -195.9371, -204.4827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-188.1048, -199.0830, -194.1416, -195.2616, -203.4310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-186.9277, -198.4855, -194.1844, -194.4689, -202.1673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-185.6749, -197.8594, -194.2421, -193.5805, -200.7904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-184.6068, -197.3271, -194.3012, -192.7860, -199.5887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-183.7554, -196.8999, -194.4039, -192.1916, -198.6515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-183.1416, -196.5917, -194.4927, -191.7641, -197.9771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-182.7308, -196.3818, -194.6238, -191.5492, -197.5797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-182.3465, -196.1900, -194.7884, -191.3795, -197.2400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-182.3886, -196.1970, -194.8582, -191.4923, -197.3720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-182.5766, -196.2816, -194.9082, -191.6921, -197.6865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-182.8965, -196.4273, -194.9554, -192.0282, -198.1623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-183.1949, -196.5585, -194.9416, -192.2660, -198.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-183.6277, -196.7531, -194.8977, -192.5975, -199.0762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-184.2411, -197.0348, -194.8385, -193.0652, -199.8052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-185.0227, -197.3945, -194.7647, -193.6470, -200.7083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-185.5433, -197.6412, -194.7470, -194.0460, -201.3406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-186.1110, -197.9231, -194.7060, -194.4519, -202.0172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-186.3885, -198.0504, -194.6711, -194.6382, -202.3498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-186.3782, -198.0288, -194.6326, -194.5906, -202.3236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.4090, -198.0315, -194.5744, -194.5498, -202.3348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-186.6840, -198.1541, -194.4746, -194.6552, -202.5918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-186.7916, -198.1759, -194.3315, -194.5932, -202.6047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-186.8927, -198.1924, -194.2127, -194.5485, -202.6250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-186.9752, -198.2125, -194.1426, -194.5269, -202.6756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-187.1233, -198.2543, -194.0772, -194.5720, -202.7962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-186.9699, -198.1494, -194.0338, -194.4025, -202.5901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-186.6154, -197.9573, -193.9863, -194.0563, -202.1612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-186.4219, -197.8459, -193.8943, -193.7884, -201.8855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-186.2349, -197.7382, -193.8044, -193.5276, -201.6206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.0415, -197.6272, -193.7539, -193.3046, -201.3740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-185.7356, -197.4599, -193.7023, -192.9952, -200.9873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-185.3382, -197.2620, -193.6929, -192.6367, -200.5350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-185.1214, -197.1567, -193.6896, -192.4347, -200.3027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-185.0688, -197.1292, -193.6381, -192.3301, -200.2276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-185.0225, -197.0948, -193.6090, -192.2673, -200.1626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-185.2436, -197.1985, -193.5600, -192.4041, -200.4094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-185.4031, -197.2813, -193.5555, -192.5387, -200.6275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-185.3629, -197.2664, -193.5626, -192.5298, -200.6220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-185.3980, -197.2921, -193.5362, -192.5509, -200.6810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-185.3533, -197.2783, -193.5339, -192.5310, -200.6573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-185.1952, -197.1986, -193.5168, -192.4144, -200.4855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-185.0625, -197.1404, -193.5217, -192.3382, -200.3696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-184.9979, -197.1273, -193.5077, -192.2827, -200.3308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-185.0797, -197.1742, -193.4675, -192.3274, -200.4367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-185.3436, -197.3064, -193.4419, -192.5466, -200.7617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-185.9065, -197.5627, -193.3709, -192.9686, -201.3689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-186.2538, -197.7144, -193.3570, -193.2739, -201.7676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-186.7020, -197.9077, -193.3012, -193.6073, -202.2300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-186.8176, -197.9515, -193.2531, -193.6761, -202.3361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-186.7681, -197.9237, -193.2252, -193.6274, -202.2802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-186.2949, -197.6941, -193.2917, -193.3500, -201.8349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-185.7465, -197.4162, -193.3152, -192.9801, -201.2451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-185.0040, -197.0531, -193.3882, -192.4898, -200.4687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-184.5562, -196.8398, -193.3983, -192.1505, -199.9697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-184.2526, -196.6997, -193.4334, -191.9489, -199.6628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-184.0775, -196.6261, -193.4595, -191.8428, -199.5053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-183.9926, -196.5908, -193.4435, -191.7722, -199.4130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-183.5855, -196.4061, -193.4640, -191.4455, -198.9616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-183.3692, -196.3110, -193.4651, -191.2549, -198.7127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-183.1380, -196.2058, -193.4889, -191.0712, -198.4766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-182.9267, -196.1127, -193.5667, -190.9529, -198.3128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-182.7351, -196.0259, -193.6208, -190.8310, -198.1494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-182.6871, -196.0031, -193.6898, -190.8464, -198.1718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-182.9906, -196.1572, -193.6289, -191.0339, -198.5359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-183.4459, -196.3832, -193.5274, -191.3183, -199.0507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-183.9698, -196.6566, -193.4466, -191.6916, -199.6748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-184.3356, -196.8431, -193.3955, -191.9586, -200.1103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-184.6579, -197.0067, -193.3938, -192.2311, -200.5174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-184.8709, -197.1032, -193.3640, -192.3918, -200.7571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-185.0804, -197.1820, -193.3313, -192.5670, -200.9704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-184.9108, -197.0747, -193.3259, -192.4499, -200.7661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-184.5769, -196.8831, -193.3434, -192.2259, -200.3830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-184.1992, -196.6676, -193.3982, -192.0045, -199.9694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-183.9786, -196.5304, -193.4395, -191.9001, -199.7317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-183.4216, -196.2389, -193.5413, -191.5645, -199.1338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-183.0323, -196.0388, -193.5966, -191.3143, -198.7011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-182.7197, -195.8860, -193.6571, -191.1221, -198.3759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-182.4858, -195.7717, -193.7455, -191.0210, -198.1688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-182.3244, -195.6917, -193.8287, -190.9797, -198.0440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-182.2582, -195.6543, -193.8948, -191.0106, -198.0201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-181.9950, -195.5246, -193.9950, -190.8833, -197.7733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-181.8315, -195.4521, -194.0823, -190.8320, -197.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-181.7798, -195.4306, -194.0899, -190.8036, -197.6072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-182.0017, -195.5197, -194.0204, -190.9531, -197.8341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-182.3004, -195.6424, -193.9173, -191.1283, -198.1220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-182.9094, -195.9151, -193.7367, -191.4791, -198.7241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-183.5663, -196.2070, -193.6285, -191.9319, -199.4213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-184.2304, -196.5193, -193.5096, -192.3449, -200.1201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-184.9171, -196.8526, -193.3934, -192.7692, -200.8492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-185.5931, -197.1808, -193.3179, -193.2192, -201.5838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-186.0430, -197.4070, -193.2935, -193.5356, -202.1021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-186.0882, -197.4216, -193.2956, -193.5549, -202.1685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-186.1232, -197.4224, -193.3000, -193.5699, -202.2214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-186.0172, -197.3651, -193.2569, -193.4086, -202.0910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-185.6532, -197.1771, -193.2324, -193.0685, -201.6773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-185.1287, -196.9101, -193.1990, -192.5974, -201.0634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-184.4892, -196.5956, -193.1846, -192.0454, -200.3269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-183.7576, -196.2473, -193.1850, -191.4163, -199.4863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-183.2301, -195.9947, -193.1769, -190.9344, -198.8542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-182.8086, -195.7813, -193.1943, -190.5758, -198.3466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-182.7034, -195.7223, -193.1861, -190.4806, -198.2118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-182.6491, -195.6888, -193.0816, -190.3405, -198.0659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-182.7823, -195.7436, -192.9848, -190.3795, -198.1566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-182.9181, -195.7939, -192.9342, -190.4821, -198.2809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-182.8852, -195.7676, -192.9226, -190.4748, -198.2279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-183.1735, -195.8891, -192.8201, -190.6489, -198.4896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-183.7147, -196.1368, -192.6924, -191.0057, -199.0409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-184.2131, -196.3740, -192.6031, -191.3564, -199.5622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-184.6216, -196.5716, -192.5412, -191.6496, -199.9965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-185.0372, -196.7789, -192.4970, -191.9628, -200.4531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-185.1892, -196.8588, -192.5195, -192.1173, -200.6591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-185.2395, -196.8857, -192.5613, -192.2053, -200.7576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-185.1521, -196.8484, -192.6134, -192.1819, -200.7027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-185.0448, -196.8011, -192.6826, -192.1418, -200.6400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-184.8805, -196.7215, -192.7762, -192.0734, -200.5253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-184.8235, -196.6945, -192.8804, -192.1138, -200.5477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-184.6083, -196.5834, -192.9692, -192.0197, -200.3708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-184.4698, -196.5136, -192.9369, -191.8703, -200.1923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-184.1871, -196.3776, -193.0099, -191.7117, -199.9210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-183.9016, -196.2471, -193.0923, -191.5541, -199.6620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-183.9334, -196.2601, -193.1010, -191.5953, -199.7055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-183.8557, -196.2062, -193.0159, -191.4650, -199.5434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-183.9938, -196.2483, -192.8780, -191.4596, -199.5852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-183.9702, -196.2138, -192.7554, -191.3290, -199.4520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-184.2578, -196.3348, -192.6612, -191.4793, -199.6987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-184.7123, -196.5440, -192.5451, -191.7413, -200.1251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-184.8482, -196.5997, -192.5183, -191.8394, -200.2631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-184.8946, -196.6027, -192.4820, -191.8573, -200.2874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-184.6302, -196.4629, -192.5248, -191.6922, -200.0254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-184.2611, -196.2681, -192.5929, -191.4662, -199.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-183.8124, -196.0502, -192.6793, -191.1827, -199.2181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-183.4727, -195.8946, -192.8045, -191.0189, -198.9438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-183.0401, -195.6937, -192.9650, -190.8097, -198.5859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-182.8278, -195.5993, -193.0536, -190.7194, -198.4328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-182.6999, -195.5416, -193.1438, -190.7027, -198.3763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-182.6223, -195.4921, -193.1058, -190.6248, -198.2698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-182.4642, -195.4039, -193.0509, -190.4577, -198.0585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-182.6280, -195.4628, -192.9868, -190.5618, -198.2101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-182.9426, -195.6077, -192.8881, -190.7533, -198.5275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-183.5574, -195.8970, -192.6818, -191.0843, -199.1066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-184.0523, -196.1284, -192.5076, -191.3512, -199.5513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-184.3649, -196.2707, -192.4050, -191.5174, -199.8314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-184.4953, -196.3291, -192.3507, -191.5793, -199.9437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-184.4918, -196.3237, -192.2791, -191.5140, -199.9003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-184.2296, -196.1930, -192.1402, -191.1718, -199.5226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-183.8792, -196.0215, -191.9938, -190.7532, -199.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-183.5180, -195.8401, -191.8735, -190.3417, -198.5527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-183.0861, -195.6389, -191.7309, -189.8419, -197.9852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-182.8807, -195.5511, -191.5560, -189.5101, -197.6633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-182.7530, -195.4999, -191.3809, -189.2509, -197.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-182.8110, -195.5458, -191.2168, -189.1698, -197.4327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-182.9738, -195.6463, -191.0629, -189.1931, -197.5728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-182.8486, -195.6020, -190.9444, -188.9996, -197.3933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-182.6143, -195.5129, -190.8612, -188.7432, -197.1171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-182.5112, -195.4778, -190.7967, -188.6330, -197.0013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-182.2412, -195.3587, -190.8089, -188.4671, -196.7495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-182.0651, -195.2762, -190.8181, -188.3753, -196.5893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-182.0417, -195.2623, -190.8037, -188.3880, -196.5789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-181.9111, -195.2021, -190.8222, -188.3466, -196.4763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-181.8492, -195.1667, -190.9351, -188.4602, -196.5260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-181.5657, -195.0129, -191.1441, -188.4768, -196.3701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-181.5124, -194.9798, -191.2371, -188.5708, -196.4068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-181.7182, -195.0734, -191.2981, -188.8538, -196.7250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-182.1569, -195.2836, -191.3664, -189.3487, -197.3131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-182.7098, -195.5522, -191.4084, -189.8976, -198.0022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-183.1374, -195.7615, -191.4910, -190.3704, -198.5669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-183.4838, -195.9410, -191.6055, -190.7933, -199.0688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-184.0699, -196.2547, -191.6643, -191.3498, -199.8087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-184.7665, -196.6266, -191.7161, -191.9744, -200.6575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-185.3788, -196.9637, -191.7788, -192.5103, -201.4127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-185.6235, -197.1020, -191.8217, -192.7481, -201.7317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-185.8096, -197.2044, -191.8415, -192.9242, -201.9657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-185.8647, -197.2397, -191.8765, -193.0008, -202.0584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-185.5598, -197.0907, -191.8952, -192.7954, -201.7475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-185.1531, -196.8827, -191.9181, -192.5171, -201.3216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-184.8647, -196.7343, -191.9418, -192.3212, -201.0326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-184.4327, -196.5172, -191.9120, -191.9527, -200.5562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-184.2822, -196.4535, -191.8771, -191.7844, -200.3900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-184.0310, -196.3316, -191.8629, -191.5542, -200.1195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-183.7132, -196.1643, -191.8527, -191.2772, -199.7588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-183.1570, -195.8583, -191.9253, -190.8949, -199.1599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-182.6961, -195.5974, -191.9984, -190.5840, -198.6626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-182.4587, -195.4465, -192.0363, -190.4239, -198.3927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-182.2608, -195.3238, -192.0562, -190.2708, -198.1563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-181.9331, -195.1329, -192.0794, -190.0100, -197.7676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-181.5072, -194.8878, -192.1013, -189.6691, -197.2625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-181.2268, -194.7211, -192.1276, -189.4613, -196.9351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-180.8753, -194.4925, -192.1479, -189.1535, -196.4762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-180.6433, -194.3255, -192.1866, -188.9649, -196.1714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-180.3739, -194.1402, -192.2447, -188.7700, -195.8383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-180.3661, -194.0736, -192.2317, -188.7627, -195.7602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-180.3301, -194.0028, -192.1938, -188.7075, -195.6429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-180.2767, -193.9321, -192.1760, -188.6479, -195.5297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-180.3564, -193.9244, -192.1315, -188.6943, -195.5631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-180.3826, -193.8946, -192.0254, -188.6340, -195.4964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-180.7358, -194.0268, -191.8670, -188.8255, -195.7947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-181.2936, -194.2544, -191.6264, -189.1123, -196.2661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-181.6717, -194.4026, -191.4656, -189.3000, -196.5817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-182.2993, -194.6657, -191.3014, -189.6856, -197.1638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-183.0254, -194.9900, -191.1193, -190.1313, -197.8456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-183.6982, -195.3036, -190.9316, -190.5057, -198.4584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-184.4233, -195.6515, -190.6524, -190.8302, -199.0620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-185.0841, -195.9668, -190.4605, -191.1740, -199.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-185.9063, -196.3554, -190.2691, -191.6264, -200.3761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-186.5848, -196.6655, -190.1240, -192.0061, -200.9657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.9411, -196.8071, -190.0450, -192.2109, -201.2595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-186.6408, -196.5911, -189.9836, -191.9528, -200.8486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.1626, -196.2852, -189.9525, -191.5769, -200.2730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-185.5358, -195.9134, -189.9387, -191.0890, -199.5648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-184.9376, -195.5685, -189.9465, -190.6457, -198.9059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-184.5914, -195.3588, -189.8986, -190.3467, -198.4863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-184.2566, -195.1625, -189.8404, -190.0396, -198.0767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-184.0832, -195.0479, -189.8125, -189.8854, -197.8741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-183.8357, -194.9044, -189.7936, -189.6720, -197.6009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-183.5781, -194.7542, -189.8300, -189.5080, -197.3581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-183.4451, -194.6680, -189.8454, -189.4200, -197.2376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-183.3224, -194.5963, -189.9045, -189.3730, -197.1705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-183.2347, -194.5435, -189.9518, -189.3461, -197.1373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-183.1920, -194.5131, -190.0731, -189.4299, -197.2124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-182.8585, -194.3474, -190.2634, -189.3308, -197.0114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-182.8061, -194.3010, -190.3639, -189.3789, -197.0463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-182.7293, -194.2515, -190.3738, -189.3219, -196.9987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-182.6492, -194.2096, -190.3500, -189.2313, -196.9240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-182.5550, -194.1445, -190.2822, -189.0979, -196.7907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-182.3098, -194.0116, -190.2139, -188.8244, -196.4961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-182.4164, -194.0492, -190.0559, -188.7551, -196.5325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-182.5589, -194.1075, -189.9015, -188.7262, -196.6211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-182.6994, -194.1685, -189.7634, -188.7043, -196.7183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-183.1423, -194.3810, -189.5840, -188.9030, -197.1277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-183.8441, -194.7107, -189.3435, -189.2534, -197.7521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-184.4786, -195.0223, -189.2262, -189.6610, -198.3877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-184.9498, -195.2591, -189.0786, -189.9063, -198.8182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-185.0984, -195.3148, -188.9392, -189.9145, -198.8802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-185.2596, -195.3709, -188.8123, -189.9560, -198.9615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-185.2068, -195.3086, -188.6782, -189.8232, -198.7963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-184.9229, -195.1272, -188.5962, -189.5591, -198.4154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-184.6175, -194.9463, -188.4374, -189.1893, -197.9637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-184.3768, -194.8030, -188.3037, -188.8891, -197.6016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-183.8916, -194.5271, -188.2117, -188.4347, -196.9938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-183.4421, -194.2750, -188.1735, -188.0533, -196.4642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-183.0790, -194.0645, -188.1827, -187.7882, -196.0584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-182.9305, -193.9561, -188.2090, -187.7291, -195.9005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-182.5458, -193.7325, -188.3466, -187.5721, -195.5572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-182.1330, -193.5069, -188.5301, -187.4260, -195.2150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-181.8607, -193.3463, -188.7791, -187.4650, -195.0724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-181.6775, -193.2309, -189.0341, -187.5812, -195.0313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-181.6041, -193.1658, -189.2767, -187.7817, -195.1094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-181.3061, -193.0075, -189.5264, -187.7869, -194.9514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-181.4180, -193.0392, -189.7542, -188.1333, -195.2250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-181.6510, -193.1239, -189.9165, -188.5267, -195.5905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-181.9272, -193.2243, -190.0068, -188.8816, -195.9469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-182.2319, -193.3384, -190.0762, -189.2394, -196.3135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-182.5096, -193.4490, -190.1004, -189.5240, -196.6314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-183.0692, -193.6859, -190.1264, -190.0283, -197.2435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-183.2726, -193.7566, -190.2233, -190.2962, -197.5144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-183.4866, -193.8286, -190.2267, -190.4948, -197.7426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-183.8935, -194.0006, -190.2060, -190.8131, -198.1701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-184.1228, -194.0801, -190.2384, -191.0339, -198.4297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-184.4131, -194.1911, -190.1881, -191.2334, -198.7031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-184.6467, -194.2610, -190.1054, -191.3676, -198.8801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-184.3992, -194.1184, -190.0063, -191.1178, -198.5548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-183.7224, -193.7693, -189.8565, -190.4920, -197.7417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-182.8644, -193.3556, -189.7434, -189.7351, -196.7741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-182.3364, -193.1119, -189.6220, -189.2198, -196.1597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-181.6242, -192.7919, -189.5674, -188.5908, -195.3892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-180.7038, -192.3908, -189.6369, -187.8743, -194.4611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-180.1918, -192.1748, -189.6243, -187.4210, -193.9216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-180.1311, -192.1662, -189.5359, -187.2996, -193.8488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-179.7549, -192.0172, -189.5049, -186.9309, -193.4452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-179.4808, -191.9094, -189.4912, -186.6657, -193.1646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-179.3038, -191.8484, -189.4579, -186.4711, -192.9795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-179.2852, -191.8591, -189.3703, -186.3716, -192.9453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-179.1684, -191.8322, -189.2915, -186.1810, -192.8127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-179.0211, -191.8022, -189.2021, -185.9380, -192.6395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-179.0756, -191.8538, -189.0808, -185.8581, -192.6765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-179.3030, -191.9690, -188.9235, -185.9156, -192.8810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-179.5664, -192.0977, -188.7337, -185.9750, -193.1006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-180.0583, -192.3262, -188.4768, -186.1804, -193.5348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-180.3840, -192.4844, -188.2785, -186.2872, -193.8239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-180.8649, -192.7066, -188.0797, -186.5415, -194.2772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-181.4564, -192.9668, -187.9116, -186.9128, -194.8539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-181.8974, -193.1595, -187.7880, -187.1838, -195.2778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-182.0147, -193.2066, -187.7171, -187.2188, -195.3833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-182.1629, -193.2584, -187.7102, -187.3450, -195.5523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-182.2617, -193.2994, -187.6466, -187.3724, -195.6482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-182.2324, -193.2780, -187.5795, -187.2849, -195.5924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-182.1056, -193.1933, -187.5435, -187.1365, -195.4332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-181.9506, -193.0788, -187.5879, -187.0431, -195.2702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-181.7618, -192.9550, -187.6961, -186.9898, -195.1171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-181.4818, -192.7888, -187.8288, -186.8755, -194.8795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-181.4584, -192.7311, -187.9146, -186.9475, -194.8722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-181.4564, -192.6831, -187.9741, -187.0210, -194.8601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-181.2683, -192.5519, -188.0217, -186.9167, -194.6431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-180.9956, -192.3912, -188.1442, -186.7989, -194.3924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-180.8725, -192.2969, -188.2212, -186.7716, -194.2782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-180.8667, -192.2543, -188.2279, -186.7762, -194.2351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-181.1281, -192.3243, -188.1595, -186.9619, -194.4227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-181.2949, -192.3520, -188.1664, -187.1255, -194.5545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-181.5682, -192.4406, -188.0872, -187.3000, -194.7659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-181.7532, -192.4901, -188.0431, -187.4347, -194.9073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-182.2165, -192.6812, -187.9200, -187.7211, -195.3001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-182.5243, -192.8005, -187.7805, -187.8646, -195.5266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-183.0233, -193.0168, -187.5891, -188.1097, -195.9218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-183.3549, -193.1516, -187.4370, -188.2651, -196.1567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-183.5159, -193.2064, -187.2795, -188.2684, -196.2189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-183.4626, -193.1525, -187.1242, -188.1051, -196.0622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-183.5740, -193.2000, -186.8983, -188.0099, -196.0465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-183.5620, -193.1917, -186.6470, -187.7922, -195.8884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-183.6536, -193.2364, -186.3884, -187.6520, -195.8360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-183.6579, -193.2389, -186.2244, -187.5269, -195.7565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-183.6579, -193.2309, -186.1092, -187.4392, -195.6982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-183.5388, -193.1648, -186.0386, -187.2955, -195.5545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-183.6940, -193.2189, -186.0466, -187.4301, -195.7094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-183.8908, -193.3019, -186.0274, -187.5760, -195.9017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-184.0429, -193.3635, -186.0959, -187.7647, -196.1088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-184.0803, -193.3747, -186.2016, -187.8960, -196.2224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-183.9894, -193.3356, -186.3280, -187.9429, -196.2324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-184.1729, -193.4166, -186.4322, -188.1815, -196.4800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-184.0650, -193.3294, -186.5946, -188.2495, -196.4628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-183.8132, -193.1981, -186.7247, -188.1631, -196.3042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-183.7990, -193.1883, -186.8576, -188.2692, -196.3755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-183.6785, -193.1213, -186.9649, -188.2710, -196.3128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-183.2707, -192.9137, -187.1113, -188.0957, -195.9893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-182.8365, -192.7000, -187.2207, -187.8687, -195.6219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-182.6179, -192.5812, -187.3604, -187.8205, -195.4703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-182.1998, -192.3780, -187.4358, -187.5672, -195.0922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-181.6424, -192.1052, -187.5242, -187.2070, -194.5705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-181.1458, -191.8604, -187.5681, -186.8369, -194.0831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-180.7067, -191.6498, -187.5191, -186.4428, -193.6088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-180.5752, -191.5773, -187.3037, -186.1637, -193.3484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-180.5599, -191.5567, -187.0723, -185.9547, -193.1891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-180.6069, -191.5634, -186.8720, -185.8189, -193.1142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-180.7301, -191.6186, -186.6462, -185.7042, -193.1222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-180.9199, -191.7073, -186.4300, -185.6502, -193.2010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-181.0482, -191.7611, -186.2937, -185.6079, -193.2587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-181.2737, -191.8657, -186.1038, -185.5965, -193.3934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-181.3293, -191.8896, -186.0073, -185.5296, -193.4171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-181.3371, -191.8974, -185.9387, -185.4468, -193.4215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-181.4610, -191.9507, -185.8934, -185.4775, -193.5427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-181.5012, -191.9567, -185.9401, -185.5278, -193.6299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-181.4711, -191.9319, -186.0803, -185.5906, -193.7052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-181.2322, -191.8208, -186.2149, -185.4857, -193.5699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-181.1553, -191.7826, -186.3031, -185.4677, -193.5630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-180.8004, -191.6222, -186.4056, -185.2400, -193.2829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-180.6295, -191.5522, -186.4605, -185.1150, -193.1636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-180.5222, -191.5129, -186.5117, -185.0531, -193.1124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-180.5967, -191.5506, -186.5606, -185.1445, -193.2430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-180.4346, -191.4902, -186.6075, -185.0422, -193.1408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-180.5010, -191.5152, -186.6853, -185.1677, -193.2692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-180.3560, -191.4438, -186.7996, -185.1439, -193.2035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-180.1867, -191.3503, -186.9100, -185.0999, -193.0904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-180.0602, -191.2924, -186.9281, -185.0145, -192.9776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-180.2294, -191.3649, -186.9013, -185.1435, -193.1410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-180.3973, -191.4313, -186.8191, -185.2174, -193.2663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-180.5964, -191.5037, -186.7125, -185.2968, -193.4046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-180.8117, -191.5898, -186.6442, -185.4076, -193.5848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-181.4398, -191.8629, -186.6445, -185.9092, -194.2071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-181.9520, -192.0952, -186.6661, -186.3306, -194.7307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-182.2242, -192.2061, -186.7003, -186.5610, -195.0070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-182.5141, -192.3404, -186.7018, -186.7777, -195.2981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-182.6670, -192.4024, -186.6875, -186.8790, -195.4298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-182.6267, -192.3698, -186.6603, -186.8218, -195.3619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-182.6285, -192.3515, -186.6270, -186.7902, -195.3277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-182.9380, -192.4823, -186.5727, -186.9991, -195.5993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-183.1195, -192.5503, -186.4887, -187.0848, -195.7293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-183.2208, -192.5782, -186.4071, -187.1114, -195.7811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-183.2051, -192.5439, -186.3075, -187.0371, -195.7065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-182.9780, -192.4036, -186.2055, -186.8022, -195.4160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-182.6063, -192.1988, -186.0720, -186.4294, -194.9730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-182.5610, -192.1581, -185.9121, -186.2913, -194.8392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-182.3748, -192.0569, -185.6540, -185.9594, -194.5251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-182.4445, -192.0619, -185.3911, -185.8293, -194.4467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-182.0857, -191.8730, -185.1024, -185.3346, -193.9373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-181.8357, -191.7444, -184.8938, -184.9868, -193.5956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-181.6977, -191.6772, -184.6492, -184.6850, -193.3386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-181.5920, -191.6197, -184.4295, -184.4247, -193.1193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-181.5944, -191.6157, -184.2292, -184.2594, -193.0115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-181.7070, -191.6550, -184.0465, -184.1970, -193.0102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-181.6079, -191.6087, -183.9020, -184.0076, -192.8435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-181.3828, -191.4930, -183.8612, -183.8189, -192.6082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-181.3798, -191.4691, -183.7917, -183.7883, -192.5595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-181.4804, -191.5053, -183.6737, -183.7992, -192.5894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-181.6664, -191.5686, -183.5516, -183.8777, -192.6869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-181.9192, -191.6762, -183.3697, -183.9400, -192.8301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-182.1218, -191.7475, -183.2529, -184.0229, -192.9592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-182.0620, -191.6939, -183.2511, -183.9857, -192.9033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-182.0466, -191.6486, -183.2957, -184.0307, -192.9075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-181.6634, -191.4242, -183.4852, -183.9106, -192.6406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-181.2665, -191.2089, -183.7418, -183.8343, -192.4231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-180.6708, -190.9138, -183.9827, -183.5909, -192.0019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-179.9505, -190.5662, -184.2819, -183.2952, -191.4787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-179.4014, -190.3013, -184.5601, -183.1075, -191.1036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-179.0484, -190.1343, -184.7758, -183.0096, -190.8993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-178.9888, -190.0660, -185.0524, -183.1983, -190.9769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-178.7919, -189.9358, -185.4162, -183.3462, -190.9583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-178.8324, -189.9064, -185.7550, -183.6754, -191.1568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-179.0138, -189.9508, -186.0045, -184.0431, -191.4559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-179.0577, -189.9466, -186.2639, -184.3146, -191.6216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-179.2426, -190.0049, -186.4431, -184.6373, -191.8868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-179.4019, -190.0581, -186.6199, -184.9398, -192.1371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-179.2107, -189.9565, -186.9106, -185.0491, -192.0889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-179.0899, -189.8921, -187.1579, -185.1797, -192.0956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-179.2545, -189.9576, -187.3190, -185.4749, -192.3488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-179.4055, -190.0187, -187.4609, -185.7362, -192.5836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-179.3763, -190.0010, -187.5682, -185.8109, -192.6283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-178.9846, -189.8170, -187.7927, -185.6811, -192.3575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-178.7181, -189.6923, -187.9732, -185.6125, -192.1888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-178.6133, -189.6463, -188.0346, -185.5870, -192.1373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-178.7791, -189.7203, -187.9589, -185.6772, -192.2918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-178.8733, -189.7644, -187.7578, -185.6046, -192.3169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-178.7175, -189.6946, -187.6176, -185.3773, -192.1124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-178.8497, -189.7456, -187.5418, -185.4368, -192.2117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-179.1605, -189.8731, -187.4401, -185.6063, -192.4758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-179.4102, -189.9759, -187.2534, -185.6519, -192.6411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-179.3877, -189.9548, -187.0207, -185.4337, -192.5249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-178.9623, -189.7578, -186.8334, -184.9143, -192.0276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-178.6626, -189.6167, -186.5962, -184.4604, -191.6247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-178.5252, -189.5487, -186.3662, -184.1429, -191.3864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-178.3324, -189.4539, -186.2011, -183.8432, -191.1175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-178.4288, -189.4732, -186.0585, -183.8188, -191.1321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-178.6359, -189.5409, -185.9326, -183.8840, -191.2597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-178.4442, -189.4448, -185.8367, -183.6398, -191.0186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-178.4964, -189.4355, -185.7594, -183.6174, -191.0081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-178.5612, -189.4271, -185.7083, -183.6331, -191.0262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-178.6884, -189.4522, -185.5965, -183.6359, -191.0834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-178.8174, -189.4816, -185.4451, -183.6091, -191.1241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-179.0278, -189.5297, -185.3251, -183.6773, -191.2448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-179.2547, -189.5893, -185.1743, -183.7289, -191.3606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-179.5356, -189.6674, -185.0325, -183.8357, -191.5294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-179.7296, -189.7136, -184.9033, -183.8830, -191.6285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-179.7769, -189.6900, -184.8399, -183.8602, -191.6126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-179.8057, -189.6712, -184.7072, -183.7567, -191.5489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-179.7296, -189.6251, -184.6423, -183.6203, -191.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-179.5499, -189.5379, -184.5580, -183.3855, -191.2339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-179.5405, -189.5462, -184.4197, -183.2290, -191.1919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-179.5045, -189.5605, -184.2206, -182.9921, -191.0977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-179.3999, -189.5519, -184.0267, -182.7034, -190.9471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-179.2416, -189.5238, -183.8410, -182.3796, -190.7540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-179.2167, -189.5178, -183.7364, -182.2412, -190.7003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-179.3146, -189.5444, -183.7234, -182.2874, -190.7845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-179.4120, -189.5564, -183.7793, -182.4024, -190.8932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-179.4078, -189.5245, -183.8688, -182.4615, -190.9195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-179.5729, -189.5638, -183.9277, -182.6271, -191.0918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-179.7807, -189.6474, -183.9219, -182.7622, -191.2974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-179.9704, -189.7260, -183.8839, -182.8597, -191.4708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-180.1797, -189.8179, -183.7498, -182.8960, -191.6216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-180.5275, -189.9512, -183.6997, -183.1240, -191.9277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-180.9486, -190.1195, -183.6333, -183.4087, -192.3042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-181.2070, -190.2270, -183.5253, -183.5238, -192.5164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-181.3045, -190.2691, -183.3565, -183.4665, -192.5538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-181.4682, -190.3265, -183.1458, -183.4372, -192.6321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-181.3889, -190.2732, -182.9404, -183.2167, -192.4885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-181.3953, -190.2554, -182.7513, -183.0748, -192.4308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-181.5134, -190.2613, -182.6545, -183.0945, -192.4905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-181.7082, -190.3054, -182.5492, -183.1727, -192.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-181.7347, -190.2704, -182.4867, -183.1436, -192.5976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-181.7668, -190.2227, -182.4478, -183.1503, -192.5863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-181.4869, -190.0509, -182.4105, -182.9120, -192.3069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-181.3842, -189.9331, -182.4120, -182.8469, -192.1756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-181.0010, -189.6884, -182.4465, -182.5902, -191.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-180.5846, -189.4305, -182.5251, -182.3441, -191.4153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-180.2604, -189.2136, -182.6060, -182.1600, -191.1234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-180.1263, -189.0773, -182.6519, -182.0941, -190.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-179.7720, -188.8518, -182.7449, -181.8913, -190.6539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-179.2010, -188.5522, -182.8649, -181.5339, -190.1605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-178.4951, -188.2209, -182.9276, -181.0077, -189.5359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-177.9257, -187.9494, -182.9489, -180.5667, -189.0149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-177.2098, -187.6327, -183.0381, -180.0536, -188.3929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-176.4902, -187.3351, -183.1454, -179.5407, -187.7851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-176.2415, -187.2128, -183.1126, -179.3170, -187.5433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-176.4263, -187.2384, -182.9195, -179.3488, -187.6236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-176.4315, -187.2105, -182.7680, -179.2498, -187.5609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-176.4848, -187.1983, -182.6207, -179.2068, -187.5451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-176.5821, -187.1980, -182.4837, -179.2034, -187.5740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-176.5068, -187.1481, -182.3709, -179.0780, -187.4755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-176.2906, -187.0734, -182.2574, -178.8102, -187.2773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-175.9818, -186.9792, -182.1429, -178.4651, -186.9997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-175.9485, -186.9658, -182.0001, -178.3287, -186.9398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-176.2097, -187.0194, -181.8798, -178.4731, -187.1144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-176.7292, -187.1632, -181.6728, -178.7735, -187.4616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-177.4930, -187.3996, -181.4700, -179.2653, -188.0120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-178.0112, -187.5844, -181.2848, -179.5400, -188.3814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-178.7382, -187.8448, -181.0577, -179.9343, -188.8788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-179.4427, -188.1058, -180.8421, -180.3071, -189.3649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-179.9796, -188.3080, -180.6805, -180.5820, -189.7293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-180.7203, -188.5933, -180.5985, -181.0574, -190.2897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-181.2737, -188.8190, -180.5391, -181.3993, -190.7106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-181.8352, -189.0412, -180.6088, -181.8573, -191.2006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-182.4490, -189.2936, -180.7065, -182.3707, -191.7571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-182.8542, -189.4769, -180.7217, -182.6623, -192.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-182.7180, -189.4210, -180.7174, -182.5492, -192.0432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-182.4833, -189.3178, -180.7259, -182.3905, -191.8933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-182.2831, -189.2266, -180.7951, -182.3079, -191.7907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-182.3722, -189.2655, -180.8332, -182.4039, -191.9025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-182.0074, -189.0776, -180.9116, -182.2069, -191.6352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-181.3795, -188.7783, -180.9320, -181.7742, -191.1248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-180.8635, -188.5501, -180.8951, -181.3610, -190.6997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-180.4376, -188.3665, -180.8549, -181.0141, -190.3457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-180.0081, -188.1781, -180.8747, -180.7174, -189.9994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-179.4914, -187.9538, -180.8952, -180.3674, -189.5813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-179.0445, -187.7593, -180.9276, -180.0810, -189.2393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-178.9057, -187.6929, -180.9152, -179.9816, -189.1334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-178.6700, -187.5966, -180.8789, -179.7756, -188.9369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-178.4391, -187.5195, -180.8350, -179.5548, -188.7558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-177.9399, -187.3371, -180.8331, -179.1406, -188.3613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-177.4175, -187.1538, -180.8564, -178.7080, -187.9514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-177.1250, -187.0544, -180.8997, -178.4771, -187.7375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-177.0064, -187.0042, -180.9463, -178.3926, -187.6557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-176.9169, -186.9523, -181.0306, -178.3669, -187.6003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-176.4938, -186.7874, -181.2015, -178.1284, -187.3008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-176.1006, -186.6344, -181.3221, -177.8691, -186.9947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-176.0964, -186.6162, -181.2880, -177.8348, -186.9531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-176.3010, -186.6726, -181.1669, -177.9251, -187.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-176.6011, -186.7586, -181.0813, -178.1245, -187.2579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-176.7456, -186.7905, -181.0349, -178.2104, -187.3401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-176.6570, -186.7332, -181.0264, -178.1151, -187.2231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-176.6451, -186.7197, -180.9329, -178.0168, -187.1545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-176.7053, -186.7298, -180.8120, -177.9591, -187.1400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-176.9349, -186.7851, -180.7041, -178.0673, -187.2695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-177.2588, -186.8776, -180.5530, -178.2175, -187.4675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-177.5526, -186.9717, -180.4061, -178.3375, -187.6447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-178.1839, -187.1877, -180.2003, -178.6788, -188.0748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-179.0691, -187.5161, -179.9405, -179.1525, -188.6887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-179.7156, -187.7547, -179.7686, -179.5009, -189.1338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-180.5506, -188.0769, -179.6020, -179.9887, -189.7331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-180.9871, -188.2323, -179.5189, -180.2458, -190.0378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-181.4352, -188.3967, -179.3885, -180.4728, -190.3336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-181.9318, -188.5807, -179.3226, -180.7906, -190.6892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-181.9866, -188.5739, -179.2721, -180.7995, -190.6859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-182.2821, -188.6784, -179.2209, -180.9736, -190.8812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-182.7385, -188.8725, -179.1664, -181.2495, -191.2215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-182.7915, -188.8899, -179.0697, -181.1996, -191.2190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-183.1096, -189.0258, -179.0170, -181.3718, -191.4453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-183.4480, -189.1609, -179.0532, -181.6431, -191.7332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-183.2699, -189.0562, -179.0227, -181.4858, -191.5596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-183.1434, -188.9829, -179.0047, -181.3731, -191.4430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-182.6526, -188.7551, -178.9585, -180.9786, -191.0393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-182.2486, -188.5782, -178.8669, -180.6094, -190.6926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-182.0100, -188.4807, -178.7167, -180.3125, -190.4505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-181.6259, -188.3166, -178.6351, -179.9670, -190.1184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-181.0169, -188.0691, -178.5783, -179.4741, -189.6277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-180.2780, -187.7829, -178.5553, -178.8943, -189.0587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-179.3553, -187.4304, -178.6130, -178.2325, -188.3799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-178.6925, -187.1815, -178.6902, -177.7663, -187.9089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-178.0267, -186.9226, -178.8406, -177.3552, -187.4552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-177.4792, -186.7146, -179.0072, -177.0374, -187.0971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-177.1309, -186.5920, -179.0889, -176.7793, -186.8571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-177.0202, -186.5518, -179.1197, -176.6803, -186.7899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-176.6540, -186.4117, -179.2765, -176.4618, -186.5608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-176.8876, -186.4603, -179.3299, -176.6652, -186.7465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-177.0334, -186.4879, -179.3529, -176.7806, -186.8554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-177.2233, -186.5355, -179.3245, -176.8892, -186.9794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-177.4307, -186.5741, -179.3391, -177.0484, -187.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-177.7158, -186.6365, -179.3749, -177.2868, -187.3274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-177.7850, -186.6380, -179.4166, -177.3520, -187.3783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-177.9798, -186.6813, -179.4823, -177.5370, -187.5244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-178.0820, -186.7022, -179.5454, -177.6487, -187.6065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-178.0198, -186.6875, -179.4730, -177.5211, -187.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-178.0314, -186.7004, -179.4362, -177.4751, -187.5214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-178.3566, -186.8497, -179.2801, -177.5707, -187.7207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-178.4560, -186.9060, -179.1141, -177.4912, -187.7351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-178.4745, -186.9224, -178.9870, -177.3727, -187.6916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-178.8051, -187.0631, -178.7301, -177.3833, -187.8401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-178.9385, -187.1407, -178.5210, -177.2738, -187.8633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-179.1939, -187.2159, -178.4513, -177.3689, -187.9942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-179.6704, -187.3728, -178.3726, -177.6238, -188.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-180.1370, -187.5254, -178.3279, -177.9064, -188.5746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-180.6453, -187.6940, -178.2958, -178.2346, -188.9098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-180.8724, -187.7554, -178.2521, -178.3493, -189.0344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-181.1135, -187.8194, -178.2442, -178.4997, -189.1815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-181.2396, -187.8409, -178.1866, -178.5195, -189.2202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-181.0886, -187.7521, -178.1213, -178.3267, -189.0508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-180.6885, -187.5518, -178.0789, -177.9780, -188.7003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-180.0002, -187.2239, -178.0933, -177.4760, -188.1531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-179.0180, -186.7890, -178.1800, -176.8228, -187.4209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-178.1457, -186.4151, -178.2771, -176.2288, -186.7726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-177.2450, -186.0516, -178.4479, -175.6563, -186.1347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-176.6284, -185.8079, -178.5453, -175.2300, -185.6798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-176.1012, -185.6050, -178.6260, -174.8561, -185.2924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-175.6136, -185.4094, -178.7766, -174.5702, -184.9510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-175.2603, -185.2631, -178.8230, -174.3348, -184.6842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-174.9052, -185.1160, -178.8954, -174.1160, -184.4153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-174.2511, -184.8554, -179.1358, -173.7679, -183.9601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-173.8195, -184.6562, -179.3142, -173.5760, -183.6476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-173.5385, -184.5066, -179.4457, -173.4568, -183.4400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-173.1540, -184.3567, -179.5726, -173.2252, -183.1673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-172.9326, -184.2556, -179.5912, -173.0567, -182.9937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-173.1542, -184.2556, -179.3877, -173.1510, -183.0890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-173.7220, -184.3339, -179.0664, -173.4504, -183.3815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-174.5503, -184.5343, -178.6092, -173.8351, -183.8355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-175.2520, -184.7063, -178.3064, -174.1935, -184.2291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-176.0717, -184.9271, -178.0384, -174.6421, -184.7242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-177.0412, -185.2151, -177.7872, -175.1959, -185.3340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-178.2946, -185.6154, -177.6314, -176.0182, -186.1837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-179.3163, -185.9696, -177.5553, -176.6863, -186.9047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-180.1506, -186.2761, -177.5377, -177.2422, -187.5154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-180.6505, -186.4626, -177.5516, -177.5715, -187.9016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-181.1829, -186.6718, -177.4738, -177.8563, -188.2795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-181.8990, -186.9688, -177.3605, -178.2386, -188.7811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-182.2959, -187.1528, -177.1920, -178.3466, -189.0223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-182.1594, -187.0942, -177.0538, -178.1089, -188.8714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-182.0322, -187.0475, -176.8888, -177.8680, -188.7212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-181.7196, -186.9213, -176.6974, -177.4692, -188.4293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-181.3406, -186.7824, -176.4271, -176.9652, -188.0742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-181.0301, -186.6784, -176.1385, -176.4997, -187.7669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-180.5469, -186.5135, -175.8121, -175.8800, -187.3315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-180.2484, -186.4484, -175.4268, -175.3436, -187.0194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-180.1700, -186.4707, -175.0692, -174.9911, -186.8809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-180.0362, -186.4770, -174.7232, -174.6034, -186.7157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-179.8536, -186.4755, -174.3606, -174.1840, -186.5205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-179.9556, -186.5710, -174.0141, -173.9802, -186.5232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-180.1786, -186.7178, -173.6486, -173.8543, -186.6142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-180.6431, -186.9439, -173.3110, -173.9195, -186.8692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-181.5585, -187.3395, -172.9812, -174.3158, -187.4366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-182.1829, -187.6369, -172.6992, -174.5308, -187.8194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-182.1723, -187.6205, -172.5951, -174.4289, -187.7839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-181.6850, -187.4214, -172.5358, -174.0149, -187.4481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-181.1870, -187.2112, -172.5375, -173.6356, -187.1168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-180.3110, -186.8614, -172.6197, -173.0407, -186.5495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-179.6339, -186.5968, -172.6994, -172.5801, -186.1155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-179.0454, -186.3177, -172.8987, -172.2566, -185.7383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-178.8725, -186.2042, -172.9754, -172.1537, -185.6066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-178.8263, -186.1501, -173.0261, -172.1101, -185.5596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-178.7381, -186.0875, -173.0482, -172.0233, -185.4773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-178.3450, -185.8948, -173.1767, -171.7935, -185.2091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-177.9287, -185.7197, -173.3079, -171.5404, -184.9565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-177.3741, -185.5381, -173.4070, -171.1441, -184.6190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-176.9426, -185.3640, -173.6100, -170.9169, -184.3657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-176.5731, -185.1940, -173.8637, -170.7618, -184.1477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-176.1053, -185.0250, -174.0928, -170.4992, -183.8737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-175.6809, -184.9040, -174.2524, -170.2179, -183.6284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-175.5834, -184.9036, -174.2125, -170.0515, -183.5474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-175.8787, -184.9743, -174.0625, -170.1495, -183.6727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-175.9918, -185.0138, -173.9834, -170.1416, -183.7138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-176.2275, -185.1043, -173.8389, -170.1709, -183.8253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-176.4954, -185.1973, -173.7183, -170.2530, -183.9638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-176.6977, -185.2602, -173.6236, -170.3046, -184.0521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-176.2650, -185.1939, -173.5950, -169.8932, -183.7886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-176.0617, -185.1601, -173.5715, -169.6672, -183.6575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-175.7154, -185.1159, -173.5549, -169.3328, -183.4661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-175.4648, -185.1151, -173.5063, -169.0538, -183.3417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-175.4581, -185.1746, -173.3640, -168.9004, -183.3499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-175.7418, -185.3294, -173.0831, -168.8715, -183.5031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-176.1657, -185.4870, -172.7935, -168.9686, -183.7285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-176.6447, -185.6603, -172.4970, -169.0893, -183.9850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-176.9422, -185.7749, -172.2714, -169.1242, -184.1427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-177.1211, -185.8101, -172.1666, -169.1700, -184.2275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-177.6992, -185.9304, -171.9909, -169.4691, -184.5195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-178.2748, -186.0648, -171.7983, -169.7506, -184.8175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-178.8293, -186.2262, -171.5788, -169.9716, -185.1096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-178.8525, -186.2348, -171.4845, -169.8829, -185.1234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-178.7658, -186.1784, -171.4813, -169.7886, -185.0738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-179.0354, -186.1950, -171.4690, -169.9449, -185.2057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-179.3149, -186.2073, -171.4738, -170.1388, -185.3490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-179.5051, -186.2570, -171.3771, -170.1880, -185.4525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-179.1527, -186.1629, -171.3359, -169.8651, -185.2467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-178.6433, -186.0187, -171.3530, -169.4616, -184.9576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-178.0868, -185.8101, -171.5034, -169.1496, -184.6504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-177.3533, -185.5544, -171.7028, -168.7484, -184.2525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-176.6355, -185.2708, -171.9803, -168.4195, -183.8672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-176.0609, -185.0489, -172.2040, -168.1587, -183.5629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-175.8426, -184.9184, -172.2963, -168.0824, -183.4292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-175.6571, -184.8056, -172.3659, -168.0142, -183.3110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-175.4947, -184.7149, -172.4078, -167.9483, -183.2145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-175.6046, -184.6662, -172.3724, -168.0504, -183.2475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-176.0265, -184.7231, -172.1806, -168.2881, -183.4368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-176.1452, -184.7216, -172.0777, -168.3287, -183.4837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-176.4076, -184.7790, -171.9004, -168.4059, -183.6051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-176.7123, -184.8487, -171.7455, -168.5303, -183.7662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-177.2597, -184.9696, -171.5449, -168.8185, -184.0451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-178.1140, -185.1969, -171.2704, -169.2516, -184.4944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-178.8565, -185.4030, -171.0799, -169.6466, -184.8962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-179.6483, -185.6458, -170.8871, -170.0747, -185.3299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-180.1456, -185.8020, -170.7572, -170.3376, -185.6082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-180.3604, -185.8690, -170.6355, -170.3927, -185.7069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-180.2925, -185.8652, -170.4911, -170.2189, -185.6474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-180.3207, -185.8907, -170.3416, -170.1249, -185.6477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-180.6994, -186.0139, -170.1920, -170.2724, -185.8378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-180.6424, -185.9854, -170.0893, -170.1294, -185.7802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-180.4886, -185.9831, -169.8772, -169.8116, -185.6607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-180.7335, -186.1171, -169.6395, -169.7530, -185.7732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-181.0599, -186.2903, -169.3786, -169.7460, -185.9307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-181.5270, -186.5170, -169.1323, -169.8513, -186.1840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-181.6922, -186.6754, -168.8801, -169.7265, -186.2821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-181.7323, -186.8121, -168.5950, -169.4856, -186.3115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-181.3783, -186.8161, -168.3655, -169.0131, -186.1280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-181.0104, -186.7536, -168.2357, -168.6072, -185.9345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-180.3653, -186.6064, -168.1716, -168.0316, -185.6029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-179.7584, -186.4452, -168.1569, -167.5202, -185.2818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-179.8370, -186.4789, -168.0470, -167.4359, -185.3028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-179.8122, -186.4670, -167.9672, -167.3102, -185.2690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-179.5794, -186.4012, -167.9260, -167.0435, -185.1379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-179.5863, -186.3727, -167.8674, -166.9528, -185.1111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-179.6550, -186.4357, -167.7448, -166.8480, -185.1517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-179.5940, -186.4243, -167.6770, -166.7041, -185.1062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-179.1928, -186.3073, -167.6738, -166.3706, -184.8939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-178.7629, -186.1823, -167.6949, -166.0317, -184.6685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-178.3662, -186.1329, -167.6687, -165.6503, -184.4917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-177.9419, -186.0955, -167.6681, -165.2549, -184.3367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-177.5708, -186.0122, -167.6916, -164.9471, -184.1755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-177.2763, -185.9081, -167.7252, -164.7140, -184.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-177.5721, -185.9141, -167.5668, -164.8079, -184.1120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-178.1390, -185.9107, -167.4187, -165.1245, -184.2830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-178.4608, -185.7637, -167.4494, -165.4289, -184.3103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-178.5715, -185.6273, -167.5008, -165.5496, -184.2773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-178.9041, -185.5759, -167.5026, -165.7981, -184.3627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-179.1924, -185.5572, -167.4792, -165.9866, -184.4591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-179.3302, -185.5055, -167.4632, -166.0669, -184.4983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-179.5240, -185.5169, -167.3821, -166.1055, -184.5753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-179.7040, -185.5701, -167.2849, -166.1101, -184.6758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-179.5430, -185.5046, -167.2733, -165.9521, -184.6186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-179.3644, -185.4428, -167.2443, -165.7464, -184.5391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-178.9838, -185.2801, -167.3112, -165.4629, -184.3435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-178.7226, -185.2199, -167.2839, -165.1616, -184.2408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-178.1303, -185.0505, -167.3886, -164.7274, -183.9900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-177.6593, -184.9194, -167.4844, -164.3951, -183.8066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-177.1145, -184.7655, -167.6182, -164.0444, -183.5873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-176.6101, -184.5775, -167.7694, -163.7659, -183.3647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-175.9937, -184.3533, -167.9884, -163.4494, -183.0980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-175.4907, -184.1989, -168.1585, -163.1451, -182.8930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-174.9102, -184.0260, -168.3896, -162.8179, -182.6700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-174.3556, -183.8938, -168.5949, -162.4709, -182.4815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-173.8576, -183.7995, -168.7882, -162.1514, -182.3238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-173.5450, -183.7820, -168.8768, -161.8827, -182.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-173.5744, -183.9290, -168.7277, -161.6540, -182.3969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-173.7586, -184.1022, -168.4996, -161.4924, -182.5878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-173.8207, -184.3689, -168.3695, -161.1959, -182.8193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-174.0674, -184.6310, -168.1450, -160.9971, -183.0989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-174.4992, -184.8980, -167.8185, -160.9138, -183.4304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-175.2166, -185.2576, -167.3042, -160.9361, -183.8862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-175.6970, -185.4982, -166.9340, -160.9268, -184.1913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-176.3185, -185.7791, -166.5138, -160.9710, -184.5575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-177.0025, -186.0373, -166.0836, -161.0666, -184.9132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-177.3272, -186.1208, -165.8610, -161.0668, -185.0617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-177.4652, -186.1414, -165.7617, -161.0017, -185.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-177.6167, -186.2275, -165.6523, -160.8912, -185.2263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-178.1602, -186.3529, -165.3424, -160.9684, -185.4121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-179.0366, -186.6273, -164.9115, -161.1931, -185.7539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-179.8560, -186.8843, -164.5730, -161.4300, -186.0742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-180.5783, -187.1149, -164.2988, -161.6313, -186.3562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-181.4213, -187.5023, -163.9847, -161.8251, -186.8009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-182.1948, -187.8292, -163.7294, -162.0421, -187.1845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-182.9166, -188.0200, -163.5450, -162.3147, -187.4535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-183.3995, -188.2314, -163.3770, -162.3720, -187.7057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-183.4625, -188.3088, -163.2892, -162.1735, -187.7773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-183.6037, -188.3787, -163.1801, -162.0187, -187.8426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-183.8818, -188.6682, -162.9657, -161.8161, -188.1042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-184.0272, -188.8055, -162.8221, -161.6356, -188.2142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-184.0986, -188.9128, -162.7002, -161.4562, -188.3128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-184.2300, -189.1126, -162.5626, -161.2588, -188.5155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-184.5170, -189.4570, -162.3626, -161.0380, -188.8440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-184.8386, -189.7647, -162.1648, -160.8812, -189.1257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-184.9950, -189.8407, -162.0489, -160.7570, -189.1715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-185.1780, -189.8754, -161.9128, -160.6930, -189.1702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-185.3193, -189.9122, -161.7997, -160.5932, -189.1674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-185.5986, -189.9829, -161.6587, -160.5718, -189.1848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-185.9216, -190.0538, -161.5150, -160.5940, -189.2028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-185.8034, -189.8902, -161.4759, -160.3989, -189.0032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-185.7518, -189.7276, -161.4380, -160.2411, -188.7981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-185.5220, -189.4574, -161.4479, -160.0244, -188.5161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-185.3750, -189.4185, -161.4214, -159.7340, -188.4588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-185.3009, -189.4189, -161.3728, -159.4769, -188.4390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-185.5923, -189.7223, -161.2550, -159.3125, -188.7115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-185.5550, -189.7564, -161.2322, -159.0767, -188.7343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-185.6329, -189.8380, -161.1851, -158.8712, -188.7830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-185.5909, -189.6700, -161.1407, -158.7441, -188.5902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-185.3381, -189.5004, -161.1879, -158.4616, -188.4188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-185.3309, -189.5656, -161.1716, -158.2039, -188.4657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-185.3079, -189.6424, -161.1656, -157.9862, -188.5388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-185.4735, -189.7329, -161.0617, -157.9161, -188.6131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-185.7186, -189.7906, -160.9255, -157.9156, -188.6428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-185.7700, -189.8949, -160.9040, -157.7296, -188.7340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-185.8373, -189.9861, -160.8787, -157.6055, -188.8217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-185.9742, -190.0791, -160.8251, -157.5254, -188.8830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-185.9162, -190.1187, -160.8493, -157.3345, -188.9192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-186.0529, -190.1660, -160.7973, -157.2416, -188.9402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-186.3840, -190.2356, -160.6560, -157.2572, -188.9352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-186.9488, -190.3703, -160.4411, -157.3742, -188.9511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-187.4016, -190.5283, -160.2647, -157.4444, -189.0015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-187.8597, -190.8752, -160.1330, -157.4406, -189.2708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-188.8781, -191.4906, -159.8918, -157.7139, -189.7187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-189.5831, -192.0082, -159.7550, -157.8015, -190.1323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-190.4303, -192.6782, -159.6259, -157.9007, -190.6944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-191.2875, -193.2713, -159.5062, -158.0701, -191.1724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-191.6810, -193.5711, -159.4691, -158.0600, -191.3773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-191.8092, -193.7331, -159.4531, -157.9599, -191.4985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-191.2507, -193.4743, -159.5804, -157.5618, -191.3213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-190.4484, -193.1518, -159.8358, -157.0343, -191.1434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-190.0030, -193.0564, -160.0775, -156.6455, -191.1801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-189.6173, -192.9938, -160.3365, -156.2967, -191.2361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-188.9395, -192.6903, -160.6308, -155.8949, -191.0633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-188.6100, -192.5256, -160.7899, -155.6576, -190.9727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-188.4208, -192.4367, -160.9114, -155.4750, -190.9369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-188.3580, -192.3955, -161.0005, -155.3147, -190.9204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-187.9224, -192.1078, -161.1529, -155.0626, -190.6811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-187.6926, -191.9202, -161.2297, -154.8873, -190.5401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-187.4915, -191.6735, -161.2022, -154.7630, -190.2767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-186.8983, -191.2644, -161.3696, -154.5133, -189.9148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-186.5533, -190.8995, -161.3240, -154.3908, -189.5506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-186.5510, -190.8543, -161.3157, -154.3063, -189.4990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-185.8835, -190.5760, -161.7403, -153.9752, -189.3708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-185.5010, -190.4683, -162.1011, -153.7529, -189.3993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-185.6266, -190.6009, -162.2340, -153.6751, -189.6093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-186.1139, -190.9249, -162.1848, -153.6853, -189.9580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-186.8668, -191.3653, -161.9530, -153.7959, -190.3905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-187.6619, -191.7824, -161.6382, -153.9296, -190.7560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-188.2010, -192.1371, -161.5401, -153.9649, -191.1151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-188.5682, -192.3869, -161.5090, -153.9412, -191.3903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-189.5611, -193.0779, -161.3712, -154.1226, -192.1100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-190.2538, -193.6209, -161.4417, -154.1881, -192.7308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-192.1092, -194.9408, -161.3890, -154.6308, -194.1275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-193.9130, -196.2100, -161.3153, -155.1236, -195.4733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-195.5343, -197.3687, -161.3057, -155.5894, -196.7325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-197.3830, -198.6905, -161.3274, -156.1714, -198.1729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-198.9515, -199.9306, -161.5417, -156.6483, -199.6432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-200.1246, -200.8952, -161.8311, -156.9806, -200.8483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-201.0666, -201.6529, -162.0406, -157.2582, -201.8213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-201.6282, -202.0991, -162.1361, -157.4150, -202.4217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-200.5647, -201.2960, -162.0915, -156.9357, -201.6650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-199.8503, -200.7529, -161.9782, -156.6369, -201.1511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-199.2011, -200.3061, -161.9342, -156.3813, -200.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-198.0960, -199.5397, -161.9153, -155.9511, -200.0342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-197.1589, -198.8936, -161.8745, -155.6045, -199.4234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-196.4558, -198.4561, -161.9335, -155.3302, -199.0384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-195.5918, -197.8647, -161.9780, -154.9748, -198.4607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-194.1944, -196.9272, -162.2026, -154.4012, -197.5746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-192.8033, -195.8853, -162.1383, -153.8827, -196.4772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-191.0824, -194.6103, -162.1170, -153.2446, -195.1413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-189.5486, -193.5403, -162.2640, -152.6722, -194.0788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-188.2322, -192.5679, -162.2343, -152.2081, -193.0611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-187.3468, -191.8496, -162.0836, -151.9152, -192.2710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-186.4380, -191.1485, -162.0635, -151.5964, -191.5602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-185.3424, -190.2937, -162.0490, -151.2107, -190.7043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-184.3774, -189.5856, -162.2064, -150.8371, -190.0538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-183.7239, -189.0938, -162.2887, -150.5762, -189.6114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-183.3149, -188.6738, -162.1361, -150.4324, -189.1605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-183.3389, -188.5122, -161.8680, -150.4269, -188.9372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-183.2043, -188.2079, -161.6402, -150.3706, -188.5600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-183.3109, -188.1588, -161.5149, -150.3751, -188.4600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-183.5386, -188.1363, -161.3074, -150.4548, -188.4095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-183.4068, -188.0151, -161.3139, -150.3678, -188.3256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-183.0596, -187.8344, -161.4575, -150.1743, -188.2097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-182.4843, -187.5844, -161.7602, -149.8771, -188.0604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-182.2820, -187.6827, -162.1485, -149.6673, -188.2623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-182.2950, -187.8306, -162.3749, -149.5704, -188.4599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-182.7661, -188.3680, -162.5988, -149.5962, -189.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-183.5259, -189.1699, -162.8891, -149.7085, -189.8953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-184.5059, -190.2175, -163.3311, -149.9079, -191.0499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-185.3705, -191.0903, -163.6396, -150.1237, -192.0174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-186.1707, -191.9407, -164.0370, -150.3289, -192.9773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-186.5246, -192.4042, -164.3627, -150.4109, -193.5402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-186.7952, -192.8793, -164.8498, -150.4811, -194.1619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-186.6702, -193.0490, -165.3861, -150.4164, -194.4684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-186.6521, -193.2761, -165.8945, -150.4046, -194.8415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-186.7521, -193.5631, -166.3145, -150.4332, -195.2534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-186.6412, -193.7062, -166.8129, -150.3890, -195.5167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-186.1713, -193.6216, -167.5143, -150.2128, -195.5676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-185.3604, -193.2578, -168.1518, -149.9283, -195.2796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-184.6256, -192.9527, -168.9157, -149.6693, -195.0680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-184.3336, -192.9145, -169.3883, -149.5806, -195.1290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-184.5859, -193.1995, -169.4267, -149.6793, -195.5032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-185.1475, -193.6876, -169.3082, -149.8915, -196.0845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-185.9096, -194.3157, -169.0819, -150.1899, -196.8076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-186.9105, -195.1005, -168.7727, -150.5886, -197.7040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-187.8064, -195.8809, -168.7192, -150.9927, -198.6773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-188.1614, -196.2636, -168.8186, -151.1656, -199.2270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-189.0646, -197.0886, -168.9842, -151.5664, -200.2838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-190.3096, -198.1434, -168.8956, -152.1345, -201.5669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-190.9243, -198.8335, -169.3272, -152.4357, -202.5389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-191.5423, -199.5076, -169.6147, -152.7593, -203.4740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-192.4378, -200.4248, -170.0334, -153.1987, -204.6751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-193.0151, -201.0449, -170.2295, -153.5226, -205.5290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-193.7036, -201.7230, -170.2992, -153.9042, -206.4461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-194.0406, -202.0737, -170.0663, -154.1270, -206.9294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-193.9831, -202.0817, -169.7831, -154.1521, -207.0221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-193.6979, -201.9475, -169.6671, -154.0749, -206.9684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-193.1664, -201.5873, -169.4978, -153.8483, -206.6188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-193.0908, -201.5641, -169.2083, -153.8411, -206.6319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-193.0239, -201.5993, -169.0820, -153.8494, -206.7471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-193.9223, -202.4075, -169.1592, -154.2922, -207.8164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-194.8801, -203.2316, -169.0190, -154.8120, -208.8975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-195.3692, -203.6421, -168.8070, -155.1001, -209.4643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-195.1307, -203.4506, -168.5215, -155.0119, -209.2846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-195.2481, -203.5814, -168.4227, -155.0926, -209.5282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-195.7917, -204.0537, -168.1048, -155.4502, -210.1491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-195.6892, -204.0122, -167.9744, -155.4256, -210.2062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-195.6819, -204.0244, -167.7036, -155.4813, -210.3233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-195.0388, -203.5760, -167.6739, -155.1811, -209.9398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-194.9229, -203.5367, -167.5740, -155.1724, -210.0163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-194.8458, -203.5810, -167.6508, -155.1735, -210.2418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-194.8198, -203.7177, -167.9566, -155.1920, -210.6322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-194.8795, -203.8966, -168.1800, -155.2620, -211.0737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-194.4087, -203.7047, -168.6036, -155.0128, -211.0570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-194.4644, -203.9778, -169.0124, -155.1120, -211.5955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-194.2286, -204.0734, -169.6567, -155.0547, -211.9547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-194.3137, -204.4765, -170.5833, -155.1735, -212.7364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-194.6444, -205.0061, -171.1562, -155.4504, -213.6059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-195.1468, -205.6122, -171.4374, -155.8406, -214.5548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-195.9046, -206.3886, -171.7001, -156.3539, -215.7198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-196.2779, -206.7824, -171.5892, -156.6654, -216.3532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-196.5626, -207.0356, -171.1650, -156.9405, -216.7779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-196.4756, -207.0045, -170.9987, -156.9571, -216.8847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-196.2825, -206.9258, -171.0343, -156.9141, -216.9566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-196.1397, -206.8344, -170.7209, -156.9402, -216.9585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-196.2780, -206.9742, -170.3611, -157.1635, -217.2463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-196.6045, -207.2471, -170.0542, -157.4612, -217.6936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-197.0120, -207.5258, -169.4978, -157.8576, -218.1147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-197.6553, -208.0452, -169.1876, -158.3691, -218.8230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-197.7976, -208.1914, -169.1891, -158.4728, -219.1410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-197.2529, -207.8204, -169.4487, -158.0780, -218.8614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-197.7018, -208.2360, -169.5371, -158.3925, -219.5426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-198.2558, -208.8401, -170.1181, -158.6965, -220.5154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-198.0474, -208.8523, -170.8514, -158.4553, -220.7633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-197.9826, -208.9427, -171.4312, -158.3340, -221.0842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-197.6510, -208.7371, -171.5498, -158.1013, -220.9712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-197.3037, -208.4745, -171.3675, -157.8924, -220.7187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-196.9415, -208.1915, -171.0895, -157.7134, -220.4418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-196.9494, -208.2773, -171.1066, -157.7658, -220.6661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-197.2574, -208.5953, -171.1195, -157.9901, -221.1819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-197.3902, -208.7290, -171.0182, -158.1065, -221.4479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-197.4261, -208.8353, -171.1282, -158.1486, -221.7026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-197.2034, -208.7379, -171.3755, -157.9757, -221.7206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-197.2637, -208.8239, -171.3469, -158.0372, -221.9418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-197.6030, -209.1553, -171.4653, -158.2582, -222.4983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-197.5677, -209.2189, -171.7505, -158.2435, -222.7512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-197.1193, -208.9205, -171.9108, -157.9450, -222.5241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-196.2519, -208.3307, -172.0666, -157.4397, -221.9130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-195.0453, -207.5098, -172.3670, -156.7296, -220.9713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-193.7226, -206.6219, -172.6323, -155.9920, -219.9186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-192.2851, -205.6943, -173.1464, -155.1971, -218.8206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-191.0553, -204.9098, -173.4115, -154.5764, -217.8674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-189.7434, -203.9620, -173.2620, -153.8948, -216.6482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-188.7326, -203.2569, -173.0106, -153.3801, -215.6894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-188.2028, -202.9149, -172.7091, -153.1585, -215.2554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-187.9239, -202.7265, -172.2920, -153.0688, -215.0052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-188.1995, -202.9598, -171.8576, -153.2827, -215.3133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-188.6783, -203.3707, -171.3867, -153.6637, -215.8927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-189.4936, -204.0485, -171.0225, -154.2219, -216.8157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-190.2394, -204.7690, -170.9005, -154.7918, -217.8102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-190.8898, -205.5052, -171.2318, -155.2667, -218.8651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-191.7517, -206.4089, -171.6022, -155.8685, -220.1561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-192.5523, -207.2231, -171.7906, -156.4409, -221.3002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-193.2428, -207.9604, -171.9769, -156.9618, -222.3339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-193.7880, -208.5430, -171.9968, -157.4022, -223.1159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-194.7400, -209.4002, -171.8934, -158.1398, -224.2231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-195.3764, -210.0054, -171.6196, -158.7530, -224.9987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-195.8055, -210.4956, -171.6153, -159.1900, -225.6370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-196.1547, -210.8350, -171.3199, -159.5989, -226.0443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-196.4692, -211.1749, -171.1773, -159.9456, -226.4707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-197.0260, -211.7698, -171.2322, -160.4988, -227.2519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-197.6436, -212.4797, -171.4786, -161.1078, -228.2047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-198.3091, -213.2828, -171.9951, -161.7149, -229.3068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-199.1745, -214.3345, -172.7552, -162.4814, -230.7456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-199.6008, -215.1836, -174.0247, -162.8683, -232.0480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-200.0705, -216.2550, -176.1057, -163.1666, -233.7114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-200.8516, -217.5189, -178.2059, -163.6782, -235.5621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-201.3916, -218.6196, -180.5236, -163.9861, -237.1751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-201.5580, -219.3424, -182.7271, -164.0348, -238.2804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-201.6308, -219.9488, -184.6094, -164.1174, -239.1880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-201.2201, -220.2105, -186.7188, -163.8662, -239.6321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-200.2327, -219.9936, -188.9571, -163.1757, -239.3998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-199.7189, -220.0931, -190.6059, -162.9611, -239.5526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-198.7016, -219.7292, -192.0828, -162.4117, -239.0687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-197.2667, -219.0095, -193.4674, -161.5953, -238.0659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-195.9080, -218.3674, -194.9744, -160.8502, -237.1354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-194.5952, -217.6526, -195.9290, -160.1346, -236.1101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-193.2828, -216.8654, -196.4362, -159.4168, -234.9846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-192.7523, -216.6010, -196.2234, -159.2360, -234.6774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-192.2877, -216.2997, -195.4079, -159.1053, -234.3521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-191.5425, -215.7434, -194.5696, -158.7412, -233.6359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-190.6406, -214.9950, -193.3552, -158.2739, -232.6440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-190.1984, -214.5176, -191.8359, -158.0735, -232.0753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-189.8003, -213.9665, -189.8188, -157.9146, -231.4007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-189.3799, -213.4471, -188.1283, -157.7725, -230.7564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-188.8852, -213.0759, -187.3285, -157.6095, -230.2800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-188.5226, -212.7646, -186.2874, -157.5395, -229.8790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-188.6454, -212.8220, -185.3216, -157.8276, -230.0193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-188.6817, -212.8074, -184.4796, -158.0092, -230.0194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-189.1112, -213.0353, -183.3663, -158.5219, -230.3865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-189.9033, -213.6994, -182.9744, -159.3217, -231.3656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-190.7438, -214.4364, -182.7688, -160.1699, -232.4426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-191.7721, -215.4525, -183.2974, -161.0914, -233.9094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-192.7648, -216.5376, -184.3397, -161.9212, -235.4690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-193.6531, -217.5305, -185.3704, -162.6919, -236.9268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-194.1709, -218.1847, -186.0765, -163.2004, -237.8939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-194.7008, -218.8910, -187.0593, -163.6561, -238.9290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-194.6141, -219.2672, -188.6627, -163.5686, -239.4932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-194.3665, -219.5250, -190.3554, -163.3384, -239.8630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-194.0916, -219.7275, -191.9496, -163.0501, -240.1075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-193.6266, -219.7853, -193.6636, -162.6071, -240.1398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-193.1298, -219.8263, -195.2426, -162.2019, -240.1221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-193.0227, -220.0968, -196.4769, -162.1540, -240.4716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-192.9681, -220.3231, -197.3751, -162.1392, -240.7560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-193.1219, -220.5215, -197.4973, -162.2851, -241.0629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-193.4317, -220.9200, -198.0102, -162.5818, -241.6878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-194.0234, -221.4801, -198.4262, -163.0581, -242.5541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-194.5918, -221.9075, -198.2781, -163.5609, -243.2763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-194.8302, -222.0255, -197.7793, -163.8201, -243.5421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-195.1702, -222.1304, -196.8816, -164.1993, -243.8333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-195.4634, -222.2476, -196.2028, -164.5391, -244.0984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-195.0427, -221.9402, -195.9124, -164.3232, -243.7168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-194.8408, -221.8045, -195.7507, -164.2178, -243.5382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-194.5674, -221.6886, -195.8247, -164.0486, -243.3560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-193.8503, -221.4571, -196.6429, -163.5378, -242.9432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-193.4606, -221.5504, -197.8960, -163.2825, -242.9925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-193.8943, -222.1099, -198.6237, -163.7541, -243.8208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-194.5316, -222.8633, -199.5400, -164.4034, -244.9303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-195.1169, -223.4875, -200.1042, -164.9931, -245.8421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-195.2813, -223.9210, -201.0133, -165.2650, -246.4268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-195.7105, -224.6159, -202.2295, -165.7401, -247.3789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-196.7347, -225.6244, -203.0502, -166.7028, -248.8702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-197.2974, -226.2384, -203.7368, -167.1853, -249.7253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-198.6321, -227.3003, -203.9536, -168.3908, -251.3475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-199.9418, -228.5248, -204.8028, -169.6284, -253.1627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-201.4833, -230.0001, -206.1115, -171.0062, -255.2976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-202.4617, -231.0683, -207.5014, -171.8641, -256.8107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-203.1400, -231.8874, -208.7366, -172.5036, -257.9794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-203.6626, -232.4621, -209.4502, -172.9849, -258.8213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-204.0905, -232.9320, -210.0294, -173.3977, -259.5185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-203.8505, -232.8343, -210.2645, -173.2490, -259.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-203.2782, -232.5557, -210.8348, -172.7436, -258.9632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-202.5055, -232.1681, -211.6033, -172.0353, -258.3192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-201.8186, -231.9207, -212.8342, -171.3068, -257.8053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-201.4716, -231.9175, -214.0054, -170.9440, -257.7005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-201.2311, -231.9141, -214.8333, -170.6321, -257.5859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-201.3305, -232.0979, -215.4840, -170.5667, -257.7757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-201.1408, -232.2331, -216.3844, -170.4502, -257.8303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-201.1625, -232.3964, -216.8067, -170.4802, -258.0016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-201.3553, -232.5720, -216.7060, -170.6762, -258.2849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-201.8470, -232.8242, -216.0116, -171.1668, -258.7994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-202.7314, -233.1446, -214.4708, -171.9785, -259.5312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-203.4346, -233.3115, -212.8652, -172.6999, -260.0578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-203.6291, -233.1736, -211.5738, -172.9663, -260.0381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-204.0351, -233.2441, -210.5943, -173.3940, -260.2957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-204.9127, -233.7761, -210.1298, -174.2344, -261.2062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-206.3232, -234.6240, -209.5510, -175.5904, -262.6666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-207.6712, -235.5804, -209.6291, -176.8456, -264.2203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-208.4844, -236.1557, -209.6263, -177.6225, -265.1657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-208.8748, -236.4738, -209.6484, -178.0759, -265.7269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-209.3899, -236.9050, -209.7710, -178.6242, -266.4661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-209.8027, -237.1987, -209.4872, -179.1785, -267.0121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-209.6712, -237.2210, -209.5585, -179.2083, -267.0896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-209.5608, -237.2411, -209.5679, -179.2627, -267.1578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-209.1320, -237.3515, -210.7610, -178.8963, -267.2404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-208.6677, -237.4340, -211.9439, -178.4866, -267.2765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-207.8445, -237.4532, -213.7978, -177.7054, -267.0943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-207.2154, -237.6776, -215.9618, -177.0970, -267.1892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-206.7413, -237.9437, -217.8985, -176.6917, -267.3640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-206.5792, -238.4010, -219.8764, -176.5143, -267.8231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-206.6815, -239.0430, -221.9676, -176.5875, -268.5726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-206.9793, -239.9235, -224.6143, -176.8373, -269.6375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-207.7750, -241.0416, -226.9486, -177.5585, -271.1521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-208.8334, -242.2237, -228.7725, -178.5174, -272.8945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-209.5489, -243.0636, -230.0412, -179.1704, -274.1007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-210.9296, -244.2663, -230.9817, -180.4878, -276.0730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-212.1291, -245.3912, -232.0199, -181.6272, -277.8737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-213.7388, -246.8400, -233.2106, -183.2195, -280.2551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-215.3657, -248.1494, -233.7621, -184.8763, -282.5167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-217.3420, -249.6838, -234.4491, -186.7873, -285.1410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-219.0707, -251.1728, -235.5352, -188.5233, -287.6180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-220.2930, -252.2309, -236.2313, -189.7862, -289.4361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-220.9466, -252.9631, -237.0982, -190.5381, -290.6380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-222.4422, -254.3701, -238.2496, -192.1553, -292.9532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-223.0345, -255.3944, -240.3987, -192.8850, -294.4301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-223.8041, -256.4149, -242.0823, -193.7680, -295.9662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-224.2609, -257.1869, -243.6684, -194.3634, -297.1126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-224.3678, -257.6639, -244.8106, -194.7087, -297.8075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-224.5884, -257.9481, -244.9275, -195.1084, -298.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-224.5085, -258.0298, -245.0792, -195.2382, -298.5129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-223.8314, -257.6133, -244.8296, -194.7219, -297.8099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-222.5320, -256.8549, -245.2108, -193.4189, -296.3135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-221.8281, -256.4769, -245.3754, -192.7285, -295.5323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-220.5896, -255.6729, -244.9900, -191.6081, -294.0629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-219.6883, -254.9424, -244.0963, -190.7726, -292.8241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-219.0984, -254.4935, -243.4426, -190.3131, -292.0479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-218.6756, -254.1053, -242.5740, -189.9879, -291.4195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-217.9514, -253.5620, -241.8084, -189.3773, -290.4360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-217.8208, -253.4911, -241.5625, -189.2027, -290.2349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-218.0300, -253.5506, -241.1425, -189.3028, -290.3529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-218.7371, -253.9093, -240.8422, -189.8044, -291.0453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-219.9072, -254.5347, -240.6792, -190.6316, -292.2072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-220.8259, -255.0881, -240.9524, -191.1430, -293.1440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-222.2662, -255.9550, -241.3232, -192.1109, -294.6760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-223.6913, -256.8844, -241.8878, -193.1183, -296.2772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-224.7615, -257.4665, -242.0079, -193.7114, -297.2906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-225.6667, -258.0470, -242.5277, -194.0563, -298.1872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-226.6525, -258.7517, -243.2441, -194.5273, -299.2858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-228.0196, -259.6441, -243.8496, -195.3029, -300.7743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-228.3044, -259.9009, -244.4330, -195.0241, -301.0770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-228.1593, -259.9782, -245.2471, -194.3094, -300.9625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-228.4156, -260.4901, -246.7127, -193.9872, -301.5276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-227.6264, -260.4916, -248.4477, -192.5448, -300.8756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-227.5034, -260.8338, -249.7735, -191.8301, -300.9575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-227.5928, -261.4253, -251.5801, -191.3398, -301.4041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-227.9147, -262.2142, -253.5871, -191.1658, -302.2311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-228.5019, -262.9912, -254.8955, -191.2839, -303.2384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-229.7580, -263.9856, -255.8810, -191.9898, -304.8372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-230.9277, -264.7990, -256.3760, -192.5821, -306.2026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-233.4271, -266.3511, -257.1793, -194.3595, -309.1237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-235.3874, -267.7484, -258.2865, -195.7514, -311.6030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-237.0313, -269.0849, -259.7329, -196.7509, -313.7648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-238.3187, -270.3854, -261.7469, -197.3404, -315.6126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-239.8539, -271.6768, -263.4264, -198.1411, -317.6224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-241.3028, -272.9079, -265.0426, -198.9327, -319.5297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-243.3251, -274.4762, -266.8491, -200.3746, -322.1431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-245.4792, -275.9277, -268.0149, -201.9398, -324.7287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-247.7416, -277.5136, -269.4134, -203.6007, -327.4902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-249.6146, -278.7998, -270.3552, -204.9776, -329.7794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-250.8185, -279.6544, -271.0412, -205.7676, -331.2557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-252.2254, -280.5430, -271.4705, -206.7206, -332.8388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-253.9867, -281.7584, -272.2789, -208.0516, -334.9680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-255.6448, -282.9287, -273.1714, -209.3352, -337.0142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-257.1122, -284.1923, -274.7197, -210.2367, -339.0075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-258.2081, -285.1755, -276.0457, -210.7079, -340.4646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-259.6455, -286.4837, -277.7120, -211.6047, -342.5498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-260.9576, -287.8552, -279.8083, -212.3241, -344.6094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-261.3227, -288.8541, -282.1467, -212.2518, -345.8141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-262.1422, -289.9651, -283.9974, -212.6061, -347.3621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-263.2725, -291.0581, -285.3399, -213.1223, -349.0466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-262.9597, -291.1775, -285.8284, -212.4588, -348.9666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-262.5795, -291.4372, -286.9446, -211.7504, -348.9992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-261.5743, -291.2191, -287.3996, -210.5210, -348.1845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-260.7074, -291.0221, -287.5962, -209.5112, -347.4615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-260.2335, -290.7640, -286.9171, -208.8262, -346.8637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-260.7360, -290.9195, -286.0960, -209.1158, -347.2525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-263.4183, -292.0179, -284.8905, -211.5154, -349.8797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-265.3210, -293.0544, -284.5261, -213.2843, -351.9989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-266.9914, -294.0284, -284.3595, -214.8012, -353.9344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-268.7600, -295.2532, -284.8061, -216.3754, -356.1201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-269.6431, -296.1986, -285.7757, -217.1547, -357.5063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-270.1817, -296.9352, -286.5356, -217.7751, -358.5587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-271.0961, -298.1837, -288.3927, -218.6950, -360.3690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-271.7063, -299.5074, -290.8567, -219.2886, -362.0715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-272.1842, -301.0345, -294.1288, -219.8012, -363.8905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-271.8686, -302.1380, -297.2550, -219.5170, -364.7242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-272.6561, -303.8750, -300.7575, -220.0850, -366.7607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-273.9879, -305.6612, -303.6141, -220.9798, -369.1389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-276.2068, -307.5747, -305.6514, -222.6232, -372.1999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-279.0120, -309.8687, -307.9109, -224.7552, -375.9777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-280.5986, -311.5646, -310.0651, -225.7216, -378.3853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-281.5739, -312.9868, -312.2748, -226.1084, -380.1377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-282.5765, -314.3481, -314.2364, -226.5224, -381.8780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-284.4293, -315.8800, -315.6952, -227.4894, -384.2102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-286.6208, -317.5521, -317.1904, -228.7027, -386.8596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-288.7422, -319.1916, -318.6677, -229.8211, -389.4731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-291.2693, -320.8281, -319.4921, -231.4030, -392.3641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-294.5507, -322.9801, -320.8004, -233.8213, -396.2321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-296.9673, -324.4530, -321.2922, -235.6587, -398.9660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-298.7851, -325.5965, -321.5019, -237.1102, -401.1289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-299.2550, -326.1499, -322.0609, -237.2821, -401.8976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-297.3153, -325.4243, -322.2527, -235.4305, -400.0693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-295.0174, -324.5037, -322.3112, -233.1852, -397.7884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-292.8452, -323.6699, -322.1924, -231.0992, -395.6429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-291.2119, -323.1499, -322.0837, -229.4556, -394.1126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-289.0195, -322.4771, -322.1845, -227.3505, -392.1351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-289.0973, -322.5914, -321.8177, -227.2287, -392.1974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-290.2340, -323.1576, -321.4425, -228.0105, -393.3939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-292.1753, -324.3613, -321.8809, -229.3459, -395.6081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-294.9189, -326.1047, -322.9367, -231.3979, -398.7883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-297.0782, -327.8141, -324.6159, -232.9172, -401.5967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-298.5565, -329.6800, -327.4811, -233.5791, -404.0152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-301.0541, -332.1779, -330.9049, -235.0391, -407.6673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-304.8149, -335.5160, -335.2257, -237.4531, -412.7918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-309.0703, -339.0728, -339.4906, -240.1980, -418.3859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-313.5942, -342.7626, -343.6463, -243.2237, -424.2803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-317.7380, -346.0950, -347.2383, -246.1961, -429.6299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-321.8774, -349.0555, -349.6894, -249.0938, -434.6083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-326.3448, -352.0037, -351.6770, -252.2549, -439.7372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-330.0919, -354.6671, -353.7630, -254.8038, -444.1664],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_024328.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(122.8557, device='cuda:0', dtype=torch.float64)
tensor([ -2.0507, -12.0036,  -6.3982, -10.6089,  -5.4568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.2376, device='cuda:0', dtype=torch.float64)
tensor([ -2.9067,  -9.7247,  -6.9723, -11.9066, -16.4379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(117.4470, device='cuda:0', dtype=torch.float64)
tensor([ -3.6157,  -6.6264,  -5.9616, -16.5023, -17.9203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(126.8353, device='cuda:0', dtype=torch.float64)
tensor([ -2.6391,  -5.1586,  -4.4902, -13.1426, -13.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(86.6530, device='cuda:0', dtype=torch.float64)
tensor([ -2.5876,  -4.7825,  -3.3256,  -9.7325, -10.4927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.4709, device='cuda:0', dtype=torch.float64)
tensor([-2.4933, -4.8977, -3.0038, -6.3187, -6.2278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(42.3681, device='cuda:0', dtype=torch.float64)
tensor([-2.5166, -5.0340, -2.9354, -6.4118, -4.7960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(50.8356, device='cuda:0', dtype=torch.float64)
tensor([-2.5332, -4.8261, -2.8944, -6.5727, -4.6294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.2290, device='cuda:0', dtype=torch.float64)
tensor([-2.5695, -5.5157, -2.9484, -8.1413, -4.4124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.4595, device='cuda:0', dtype=torch.float64)
tensor([ -2.5490,  -5.3619,  -3.2199, -12.6668,  -4.2876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(46.4379, device='cuda:0', dtype=torch.float64)
tensor([ -2.4165,  -4.3636,  -3.5448, -13.4941,  -4.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.7011, device='cuda:0', dtype=torch.float64)
tensor([ -2.2243,  -3.7376,  -3.7982, -10.5482,  -4.7989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.6641, device='cuda:0', dtype=torch.float64)
tensor([-2.0604, -3.3482, -4.3716, -7.0134, -4.7309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.7609, device='cuda:0', dtype=torch.float64)
tensor([-1.9895, -3.1515, -4.4377, -4.3779, -4.0855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.2413, device='cuda:0', dtype=torch.float64)
tensor([-2.0116, -3.1448, -3.9303, -3.8085, -3.8418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.5841, device='cuda:0', dtype=torch.float64)
tensor([-2.0952, -3.1997, -3.4975, -3.5800, -3.8007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.8666, device='cuda:0', dtype=torch.float64)
tensor([-2.1765, -3.4317, -3.2873, -3.4615, -3.7667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.5505, device='cuda:0', dtype=torch.float64)
tensor([-2.1855, -3.6504, -3.1941, -3.4560, -3.7331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.0338, device='cuda:0', dtype=torch.float64)
tensor([-2.1053, -3.4084, -3.1411, -3.4694, -3.6781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.0629, device='cuda:0', dtype=torch.float64)
tensor([-1.9983, -3.0253, -3.0927, -3.4956, -3.5901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.8817, device='cuda:0', dtype=torch.float64)
tensor([-1.9235, -2.8936, -3.0351, -3.5627, -3.5056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7844, device='cuda:0', dtype=torch.float64)
tensor([-1.8895, -2.8945, -2.9734, -3.6110, -3.4568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.4212, device='cuda:0', dtype=torch.float64)
tensor([-1.8818, -2.9313, -2.9195, -3.6570, -3.4538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.5746, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.9896, -2.8811, -3.7557, -3.4752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.4904, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -3.0547, -2.8554, -3.8686, -3.4743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.2527, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -3.1014, -2.8365, -3.8929, -3.4387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0739, device='cuda:0', dtype=torch.float64)
tensor([-1.8971, -3.1002, -2.8234, -3.8199, -3.4094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9310, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -3.0504, -2.8161, -3.7208, -3.4014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5167, device='cuda:0', dtype=torch.float64)
tensor([-1.8116, -2.9839, -2.8140, -3.6507, -3.4092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3504, device='cuda:0', dtype=torch.float64)
tensor([-1.7746, -2.9252, -2.8162, -3.6152, -3.4324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.4385, device='cuda:0', dtype=torch.float64)
tensor([-1.7559, -2.8836, -2.8219, -3.6015, -3.4649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.7613, device='cuda:0', dtype=torch.float64)
tensor([-1.7505, -2.8590, -2.8295, -3.6008, -3.4980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6742, device='cuda:0', dtype=torch.float64)
tensor([-1.7533, -2.8382, -2.8373, -3.6055, -3.5224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0427, device='cuda:0', dtype=torch.float64)
tensor([-1.7614, -2.8099, -2.8425, -3.6047, -3.5298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3155, device='cuda:0', dtype=torch.float64)
tensor([-1.7726, -2.7771, -2.8422, -3.5991, -3.5159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3131, device='cuda:0', dtype=torch.float64)
tensor([-1.7849, -2.7532, -2.8348, -3.5971, -3.4833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0940, device='cuda:0', dtype=torch.float64)
tensor([-1.7969, -2.7443, -2.8213, -3.5982, -3.4400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6385, device='cuda:0', dtype=torch.float64)
tensor([-1.8079, -2.7476, -2.8047, -3.5991, -3.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9949, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.7592, -2.7867, -3.5986, -3.3567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4065, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.7760, -2.7662, -3.5932, -3.3204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0473, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7957, -2.7416, -3.5777, -3.2851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8504, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.8159, -2.7164, -3.5533, -3.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7400, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.8349, -2.6968, -3.5269, -3.2375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7036, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.8515, -2.6857, -3.5021, -3.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7017, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.8652, -2.6823, -3.4777, -3.2327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6031, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.8757, -2.6851, -3.4526, -3.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3964, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.8829, -2.6925, -3.4282, -3.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1315, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.8857, -2.7036, -3.4070, -3.2635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9247, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.8833, -2.7173, -3.3912, -3.2766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7937, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.8758, -2.7327, -3.3818, -3.2896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6884, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.8650, -2.7486, -3.3787, -3.3022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5932, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.8534, -2.7638, -3.3806, -3.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5484, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.8428, -2.7771, -3.3855, -3.3269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5646, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.8340, -2.7876, -3.3915, -3.3382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5530, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.8272, -2.7947, -3.3970, -3.3481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4899, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.8219, -2.7984, -3.4008, -3.3554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3981, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.8175, -2.7986, -3.4021, -3.3596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3052, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.8132, -2.7959, -3.4005, -3.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2183, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.8084, -2.7914, -3.3965, -3.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0934, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.8030, -2.7866, -3.3913, -3.3580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9715, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.7968, -2.7827, -3.3858, -3.3565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8674, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.7899, -2.7806, -3.3807, -3.3557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7800, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.7825, -2.7809, -3.3765, -3.3557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7117, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.7748, -2.7837, -3.3733, -3.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6430, device='cuda:0', dtype=torch.float64)
tensor([-1.8130, -2.7674, -2.7888, -3.3712, -3.3569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5887, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.7606, -2.7956, -3.3702, -3.3577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5641, device='cuda:0', dtype=torch.float64)
tensor([-1.8057, -2.7551, -2.8034, -3.3694, -3.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5453, device='cuda:0', dtype=torch.float64)
tensor([-1.8036, -2.7514, -2.8110, -3.3683, -3.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5181, device='cuda:0', dtype=torch.float64)
tensor([-1.8031, -2.7501, -2.8179, -3.3661, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4639, device='cuda:0', dtype=torch.float64)
tensor([-1.8046, -2.7513, -2.8233, -3.3621, -3.3641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4027, device='cuda:0', dtype=torch.float64)
tensor([-1.8079, -2.7547, -2.8272, -3.3566, -3.3674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3245, device='cuda:0', dtype=torch.float64)
tensor([-1.8124, -2.7597, -2.8298, -3.3501, -3.3711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2741, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.7653, -2.8315, -3.3435, -3.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2566, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.7709, -2.8326, -3.3376, -3.3782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2705, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.7760, -2.8333, -3.3326, -3.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2704, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.7801, -2.8339, -3.3289, -3.3823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2407, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.7833, -2.8342, -3.3262, -3.3828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2003, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7855, -2.8345, -3.3245, -3.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7865, -2.8347, -3.3237, -3.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0864, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.7869, -2.8347, -3.3236, -3.3785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0938, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.7866, -2.8346, -3.3239, -3.3756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0909, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.7858, -2.8346, -3.3243, -3.3726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0955, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.7846, -2.8346, -3.3246, -3.3695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0858, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.7832, -2.8350, -3.3244, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0662, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.7814, -2.8359, -3.3239, -3.3645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0243, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.7793, -2.8371, -3.3230, -3.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0005, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.7773, -2.8387, -3.3217, -3.3618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9589, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.7754, -2.8406, -3.3203, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9368, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7735, -2.8428, -3.3190, -3.3618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9261, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.7718, -2.8451, -3.3178, -3.3627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9154, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.7704, -2.8471, -3.3164, -3.3641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8982, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.7695, -2.8490, -3.3151, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8634, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.7688, -2.8504, -3.3142, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8408, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.7685, -2.8514, -3.3135, -3.3679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8397, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.7684, -2.8520, -3.3130, -3.3685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7980, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.7688, -2.8518, -3.3126, -3.3689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8104, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.7693, -2.8510, -3.3121, -3.3686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7934, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.7699, -2.8499, -3.3118, -3.3679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7898, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.7704, -2.8485, -3.3118, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7772, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.7706, -2.8471, -3.3119, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7717, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.7706, -2.8459, -3.3120, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7539, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7705, -2.8447, -3.3119, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7531, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7706, -2.8436, -3.3114, -3.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7572, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.7705, -2.8429, -3.3110, -3.3628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7497, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.7703, -2.8424, -3.3103, -3.3631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7226, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7701, -2.8423, -3.3097, -3.3636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7126, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7699, -2.8422, -3.3092, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7023, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7696, -2.8422, -3.3088, -3.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6848, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.7692, -2.8422, -3.3087, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6817, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7687, -2.8424, -3.3089, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6887, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.7681, -2.8426, -3.3092, -3.3665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6771, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.7676, -2.8425, -3.3093, -3.3667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6612, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.7672, -2.8422, -3.3095, -3.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6796, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.7668, -2.8420, -3.3098, -3.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6538, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.7665, -2.8419, -3.3106, -3.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6482, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.7661, -2.8418, -3.3115, -3.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6412, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.7658, -2.8416, -3.3122, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6492, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.7656, -2.8414, -3.3126, -3.3639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6280, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.7656, -2.8413, -3.3129, -3.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6373, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.7655, -2.8412, -3.3129, -3.3639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6219, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.7655, -2.8410, -3.3126, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6155, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.7659, -2.8406, -3.3118, -3.3647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6142, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.7661, -2.8401, -3.3112, -3.3652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6087, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.7663, -2.8399, -3.3111, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5969, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.7665, -2.8397, -3.3112, -3.3658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5985, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7666, -2.8395, -3.3114, -3.3658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5912, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.7667, -2.8393, -3.3116, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5953, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.7669, -2.8389, -3.3115, -3.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5939, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.7674, -2.8387, -3.3113, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5887, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.7674, -2.8389, -3.3112, -3.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5895, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7670, -2.8390, -3.3110, -3.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5719, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.7666, -2.8391, -3.3105, -3.3623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5669, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.7662, -2.8392, -3.3102, -3.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5748, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.7655, -2.8395, -3.3104, -3.3612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5723, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.7645, -2.8399, -3.3111, -3.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5739, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7636, -2.8404, -3.3120, -3.3603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5458, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.7630, -2.8408, -3.3125, -3.3596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5652, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.7626, -2.8408, -3.3125, -3.3591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5523, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.7623, -2.8407, -3.3123, -3.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5798, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.7620, -2.8406, -3.3123, -3.3579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5563, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.7620, -2.8401, -3.3121, -3.3574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5504, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.7620, -2.8395, -3.3118, -3.3569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5587, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7623, -2.8389, -3.3114, -3.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5525, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7627, -2.8383, -3.3109, -3.3558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5340, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.7634, -2.8376, -3.3100, -3.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5534, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.7639, -2.8372, -3.3091, -3.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5316, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7646, -2.8369, -3.3085, -3.3556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5345, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7650, -2.8367, -3.3082, -3.3556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5140, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.7651, -2.8368, -3.3079, -3.3556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5225, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.7648, -2.8373, -3.3080, -3.3556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5088, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.7641, -2.8382, -3.3084, -3.3558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5250, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7635, -2.8392, -3.3088, -3.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5459, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.7629, -2.8400, -3.3088, -3.3563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5215, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.7622, -2.8406, -3.3089, -3.3560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5203, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.7619, -2.8407, -3.3089, -3.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5352, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.7615, -2.8406, -3.3096, -3.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5111, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7610, -2.8407, -3.3103, -3.3538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5209, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7609, -2.8404, -3.3104, -3.3528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5569, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.7611, -2.8398, -3.3098, -3.3516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5118, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.7612, -2.8391, -3.3092, -3.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5062, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.7612, -2.8387, -3.3084, -3.3497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5389, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.7610, -2.8383, -3.3072, -3.3491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5058, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.7605, -2.8383, -3.3065, -3.3487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5145, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.7594, -2.8387, -3.3064, -3.3486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5097, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.7583, -2.8393, -3.3068, -3.3486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5026, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.7575, -2.8398, -3.3067, -3.3489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5059, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.7574, -2.8396, -3.3057, -3.3495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5138, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.7578, -2.8391, -3.3053, -3.3502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5142, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.7585, -2.8383, -3.3050, -3.3506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5249, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7594, -2.8380, -3.3059, -3.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5075, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.7602, -2.8375, -3.3063, -3.3507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4923, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.7616, -2.8367, -3.3056, -3.3509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4949, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.7626, -2.8364, -3.3049, -3.3507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4915, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7635, -2.8362, -3.3039, -3.3506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5216, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7636, -2.8368, -3.3037, -3.3500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4937, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.7626, -2.8377, -3.3035, -3.3492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4719, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7614, -2.8385, -3.3033, -3.3483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4962, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.7603, -2.8390, -3.3030, -3.3475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4773, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7599, -2.8390, -3.3027, -3.3470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4842, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7592, -2.8387, -3.3020, -3.3465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4761, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7586, -2.8383, -3.3018, -3.3462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4821, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.7574, -2.8383, -3.3020, -3.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4792, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.7565, -2.8381, -3.3022, -3.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4889, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.7559, -2.8376, -3.3021, -3.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4830, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.7557, -2.8373, -3.3021, -3.3461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5148, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.7555, -2.8372, -3.3022, -3.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4955, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.7554, -2.8371, -3.3016, -3.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4968, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.7556, -2.8368, -3.3006, -3.3465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4739, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.7557, -2.8369, -3.3001, -3.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4739, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.7559, -2.8369, -3.2999, -3.3461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4913, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.7553, -2.8374, -3.3006, -3.3455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4698, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7550, -2.8376, -3.3013, -3.3451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4864, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.7552, -2.8374, -3.3014, -3.3449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4918, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.7555, -2.8365, -3.3006, -3.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4932, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.7558, -2.8352, -3.2995, -3.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4773, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7564, -2.8338, -3.2984, -3.3436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4930, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7564, -2.8332, -3.2984, -3.3430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4738, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7561, -2.8330, -3.2990, -3.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5295, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.7559, -2.8332, -3.2986, -3.3423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4896, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.7562, -2.8332, -3.2975, -3.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4936, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7567, -2.8331, -3.2967, -3.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4666, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.7570, -2.8333, -3.2964, -3.3419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4944, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7571, -2.8337, -3.2966, -3.3412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5278, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7563, -2.8347, -3.2984, -3.3403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4622, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.7555, -2.8356, -3.3005, -3.3396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4654, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.7553, -2.8357, -3.3013, -3.3391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4914, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7558, -2.8352, -3.3005, -3.3391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5042, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.7564, -2.8346, -3.2991, -3.3393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4777, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7564, -2.8340, -3.2986, -3.3389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4813, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7560, -2.8338, -3.2986, -3.3385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4727, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7549, -2.8338, -3.2986, -3.3381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4873, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.7543, -2.8333, -3.2973, -3.3376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4557, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7540, -2.8327, -3.2956, -3.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5013, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7541, -2.8328, -3.2943, -3.3369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4949, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.7536, -2.8337, -3.2938, -3.3367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4772, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.7530, -2.8347, -3.2940, -3.3359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5080, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7525, -2.8360, -3.2944, -3.3351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4779, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.7523, -2.8366, -3.2942, -3.3346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4814, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.7526, -2.8364, -3.2941, -3.3345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5041, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7528, -2.8365, -3.2947, -3.3339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5075, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7523, -2.8371, -3.2958, -3.3334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4749, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.7517, -2.8376, -3.2960, -3.3335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4624, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.7513, -2.8374, -3.2954, -3.3339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4847, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7510, -2.8368, -3.2941, -3.3348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5211, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.7508, -2.8362, -3.2922, -3.3356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4975, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.7507, -2.8356, -3.2908, -3.3363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4987, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.7501, -2.8351, -3.2900, -3.3365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4770, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.7494, -2.8350, -3.2903, -3.3363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5239, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.7481, -2.8355, -3.2921, -3.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4740, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.7466, -2.8355, -3.2937, -3.3346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5021, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7466, -2.8346, -3.2933, -3.3334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4861, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7485, -2.8324, -3.2912, -3.3329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5014, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.7510, -2.8299, -3.2890, -3.3330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4925, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7527, -2.8286, -3.2881, -3.3326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4828, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7534, -2.8285, -3.2887, -3.3324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5224, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7539, -2.8287, -3.2892, -3.3326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4948, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.7550, -2.8287, -3.2887, -3.3332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5121, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.7559, -2.8290, -3.2879, -3.3342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5131, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7562, -2.8295, -3.2879, -3.3354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4684, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.7563, -2.8298, -3.2877, -3.3365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5097, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.7573, -2.8293, -3.2872, -3.3373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4693, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7578, -2.8290, -3.2868, -3.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4603, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7578, -2.8285, -3.2873, -3.3367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4700, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.7572, -2.8287, -3.2887, -3.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4808, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.7558, -2.8295, -3.2899, -3.3348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4574, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.7532, -2.8307, -3.2917, -3.3329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4885, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.7501, -2.8317, -3.2931, -3.3314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4951, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7479, -2.8321, -3.2940, -3.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4762, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.7459, -2.8321, -3.2942, -3.3289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4977, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.7443, -2.8315, -3.2936, -3.3278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4719, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.7434, -2.8302, -3.2931, -3.3265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5085, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.7429, -2.8289, -3.2915, -3.3258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4994, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7421, -2.8286, -3.2919, -3.3251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5174, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.7417, -2.8290, -3.2928, -3.3247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4937, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7425, -2.8291, -3.2927, -3.3255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5240, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.7435, -2.8298, -3.2917, -3.3268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5208, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.7440, -2.8310, -3.2909, -3.3278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4979, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.7445, -2.8318, -3.2896, -3.3289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4922, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7447, -2.8326, -3.2896, -3.3294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4766, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7449, -2.8324, -3.2889, -3.3297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4939, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.7458, -2.8313, -3.2885, -3.3294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4632, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.7464, -2.8301, -3.2888, -3.3281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5610, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7471, -2.8296, -3.2905, -3.3263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4893, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.7479, -2.8290, -3.2913, -3.3249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5867, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7502, -2.8270, -3.2889, -3.3249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4995, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.7533, -2.8245, -3.2841, -3.3255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4618, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7552, -2.8236, -3.2806, -3.3259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5176, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7555, -2.8239, -3.2794, -3.3256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4929, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.7543, -2.8257, -3.2813, -3.3246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4689, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7525, -2.8278, -3.2845, -3.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4791, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.7507, -2.8296, -3.2865, -3.3238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5663, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.7495, -2.8305, -3.2861, -3.3235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5145, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.7487, -2.8308, -3.2843, -3.3236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5652, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7482, -2.8310, -3.2823, -3.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5316, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7471, -2.8318, -3.2825, -3.3209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5163, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.7461, -2.8326, -3.2839, -3.3194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5786, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.7462, -2.8320, -3.2833, -3.3189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5125, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.7471, -2.8299, -3.2819, -3.3195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5030, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7478, -2.8288, -3.2820, -3.3203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5970, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7477, -2.8284, -3.2826, -3.3204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4894, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7485, -2.8284, -3.2836, -3.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5689, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7502, -2.8270, -3.2830, -3.3228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5507, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7518, -2.8250, -3.2820, -3.3250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4965, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7510, -2.8251, -3.2836, -3.3262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5630, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7485, -2.8264, -3.2877, -3.3259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5253, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.7459, -2.8283, -3.2903, -3.3258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6024, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.7446, -2.8275, -3.2891, -3.3261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5022, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.7438, -2.8262, -3.2880, -3.3262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5512, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.7425, -2.8258, -3.2881, -3.3252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5526, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7405, -2.8267, -3.2895, -3.3230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4950, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.7401, -2.8268, -3.2898, -3.3216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5810, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.7408, -2.8255, -3.2873, -3.3210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4876, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7415, -2.8248, -3.2857, -3.3201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5808, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7415, -2.8248, -3.2862, -3.3189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5211, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7417, -2.8250, -3.2858, -3.3170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5081, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7426, -2.8246, -3.2834, -3.3158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5415, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7446, -2.8230, -3.2794, -3.3152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5062, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.7473, -2.8213, -3.2762, -3.3144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5189, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7488, -2.8213, -3.2764, -3.3134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5292, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7489, -2.8224, -3.2786, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5342, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.7484, -2.8237, -3.2812, -3.3115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5484, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7484, -2.8236, -3.2815, -3.3111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5063, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.7479, -2.8233, -3.2812, -3.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5580, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.7466, -2.8232, -3.2803, -3.3107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5727, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.7455, -2.8230, -3.2780, -3.3107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5208, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.7438, -2.8237, -3.2774, -3.3105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6748, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.7440, -2.8218, -3.2738, -3.3114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5218, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7451, -2.8195, -3.2705, -3.3128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6519, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.7441, -2.8199, -3.2720, -3.3131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5672, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.7413, -2.8222, -3.2767, -3.3119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4807, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.7390, -2.8241, -3.2797, -3.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6466, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.7395, -2.8234, -3.2782, -3.3138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5124, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.7406, -2.8220, -3.2758, -3.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6102, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.7399, -2.8227, -3.2762, -3.3167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6164, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.7379, -2.8243, -3.2780, -3.3155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5577, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.7383, -2.8241, -3.2769, -3.3151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6921, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.7406, -2.8219, -3.2724, -3.3161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5575, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7433, -2.8205, -3.2695, -3.3174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7244, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7431, -2.8214, -3.2705, -3.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5528, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.7424, -2.8229, -3.2749, -3.3168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6683, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7439, -2.8220, -3.2758, -3.3171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6068, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.7469, -2.8192, -3.2735, -3.3181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4777, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7486, -2.8175, -3.2725, -3.3187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5491, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7480, -2.8175, -3.2736, -3.3181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4969, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.7458, -2.8192, -3.2766, -3.3169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6086, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.7448, -2.8196, -3.2774, -3.3158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5785, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7438, -2.8193, -3.2759, -3.3154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5377, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.7417, -2.8197, -3.2747, -3.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5739, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7397, -2.8207, -3.2751, -3.3135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5743, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.7368, -2.8227, -3.2776, -3.3111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5581, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.7361, -2.8229, -3.2784, -3.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6721, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.7391, -2.8208, -3.2748, -3.3102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5390, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7418, -2.8190, -3.2723, -3.3095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6795, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.7413, -2.8191, -3.2723, -3.3074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5662, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7400, -2.8203, -3.2745, -3.3050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6066, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.7392, -2.8204, -3.2738, -3.3035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6663, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.7403, -2.8183, -3.2702, -3.3031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6083, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7404, -2.8182, -3.2697, -3.3024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5918, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7393, -2.8198, -3.2720, -3.3013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5916, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.7391, -2.8210, -3.2748, -3.3006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5809, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.7409, -2.8201, -3.2754, -3.3018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5447, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.7429, -2.8186, -3.2733, -3.3047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6067, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.7449, -2.8183, -3.2716, -3.3060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5685, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.7445, -2.8196, -3.2716, -3.3059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5795, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.7438, -2.8215, -3.2733, -3.3054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5951, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.7452, -2.8211, -3.2725, -3.3070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6157, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7479, -2.8180, -3.2680, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5416, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.7496, -2.8155, -3.2676, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6501, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7484, -2.8157, -3.2709, -3.3123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5900, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7477, -2.8155, -3.2755, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6078, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.7476, -2.8140, -3.2766, -3.3124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5584, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.7461, -2.8134, -3.2754, -3.3124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6145, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7427, -2.8153, -3.2739, -3.3112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6658, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.7366, -2.8188, -3.2729, -3.3088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6459, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.7331, -2.8203, -3.2690, -3.3089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5604, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.7316, -2.8207, -3.2630, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5578, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7307, -2.8212, -3.2605, -3.3105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6529, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.7287, -2.8227, -3.2638, -3.3084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5912, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7271, -2.8246, -3.2698, -3.3062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6413, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.7281, -2.8236, -3.2721, -3.3059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6762, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.7313, -2.8198, -3.2707, -3.3059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6160, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7341, -2.8175, -3.2690, -3.3053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5951, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.7361, -2.8158, -3.2687, -3.3035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6239, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.7394, -2.8127, -3.2668, -3.3026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6146, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.7428, -2.8093, -3.2636, -3.3022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5807, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.7449, -2.8070, -3.2628, -3.3014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5599, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.7454, -2.8086, -3.2671, -3.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5848, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.7437, -2.8124, -3.2718, -3.2966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6464, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.7431, -2.8157, -3.2735, -3.2964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5905, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.7434, -2.8172, -3.2714, -3.2974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6156, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.7443, -2.8175, -3.2683, -3.2982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5698, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.7432, -2.8188, -3.2675, -3.2986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5936, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.7407, -2.8204, -3.2706, -3.2974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6055, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.7399, -2.8203, -3.2706, -3.2973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5826, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.7393, -2.8183, -3.2694, -3.2971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5419, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.7384, -2.8161, -3.2686, -3.2974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7128, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.7357, -2.8147, -3.2678, -3.2960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5913, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.7340, -2.8129, -3.2655, -3.2956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6733, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.7331, -2.8110, -3.2610, -3.2961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6322, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.7318, -2.8097, -3.2593, -3.2988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6677, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7307, -2.8116, -3.2605, -3.3008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5846, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7290, -2.8153, -3.2663, -3.3018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5788, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.7303, -2.8178, -3.2685, -3.3039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7201, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.7355, -2.8174, -3.2665, -3.3069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6226, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7405, -2.8176, -3.2631, -3.3085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5841, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.7427, -2.8185, -3.2631, -3.3078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5606, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7434, -2.8176, -3.2621, -3.3066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5982, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.7438, -2.8139, -3.2605, -3.3049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6031, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7442, -2.8098, -3.2613, -3.3035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7253, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7405, -2.8089, -3.2655, -3.3015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6398, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.7362, -2.8082, -3.2688, -3.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7479, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7339, -2.8071, -3.2671, -3.2982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6147, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.7337, -2.8058, -3.2619, -3.2990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6818, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.7338, -2.8074, -3.2615, -3.2983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7911, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7304, -2.8130, -3.2687, -3.2949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6831, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7288, -2.8163, -3.2720, -3.2925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7900, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.7302, -2.8154, -3.2696, -3.2927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6204, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7338, -2.8133, -3.2668, -3.2944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8643, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.7355, -2.8127, -3.2675, -3.2939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5631, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7368, -2.8122, -3.2697, -3.2926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7669, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7409, -2.8079, -3.2651, -3.2938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6171, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.7457, -2.8027, -3.2593, -3.2955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6596, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7468, -2.8014, -3.2596, -3.2946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7631, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.7441, -2.8048, -3.2652, -3.2911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6878, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7414, -2.8085, -3.2638, -3.2895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8297, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7412, -2.8091, -3.2532, -3.2907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5115, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7409, -2.8099, -3.2474, -3.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6918, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7392, -2.8129, -3.2475, -3.2923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6072, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7383, -2.8173, -3.2542, -3.2919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7642, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.7389, -2.8179, -3.2540, -3.2937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6003, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.7395, -2.8186, -3.2551, -3.2960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6604, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.7377, -2.8206, -3.2568, -3.2963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5996, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.7342, -2.8227, -3.2571, -3.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5644, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7323, -2.8225, -3.2527, -3.2962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6310, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.7314, -2.8202, -3.2455, -3.2973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6470, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.7312, -2.8175, -3.2435, -3.2983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.7305, -2.8155, -3.2479, -3.2963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5949, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7302, -2.8135, -3.2527, -3.2945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6618, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.7317, -2.8103, -3.2521, -3.2938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5285, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.7339, -2.8073, -3.2498, -3.2937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7537, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.7345, -2.8066, -3.2466, -3.2926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5691, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.7330, -2.8083, -3.2486, -3.2906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5494, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.7314, -2.8119, -3.2513, -3.2888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6617, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.7299, -2.8143, -3.2531, -3.2881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6049, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.7286, -2.8155, -3.2557, -3.2886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5828, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.7273, -2.8162, -3.2594, -3.2887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6968, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.7263, -2.8166, -3.2624, -3.2899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6660, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.7301, -2.8120, -3.2627, -3.2913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7333, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.7373, -2.8041, -3.2607, -3.2926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7684, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.7409, -2.7991, -3.2612, -3.2908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8164, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.7414, -2.7986, -3.2656, -3.2870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7048, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7434, -2.7970, -3.2641, -3.2853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8427, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.7474, -2.7929, -3.2537, -3.2877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6105, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.7492, -2.7920, -3.2478, -3.2908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7459, -2.7965, -3.2443, -3.2901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5532, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.7422, -2.8025, -3.2471, -3.2895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0502, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.7429, -2.8017, -3.2395, -3.2913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6264, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.7429, -2.8013, -3.2406, -3.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8907, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.7364, -2.8048, -3.2472, -3.2891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7404, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7303, -2.8085, -3.2561, -3.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8348, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.7277, -2.8078, -3.2582, -3.2846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7190, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.7297, -2.8047, -3.2548, -3.2868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7227, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.7289, -2.8049, -3.2566, -3.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7689, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7257, -2.8086, -3.2640, -3.2827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6982, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7260, -2.8101, -3.2660, -3.2831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8473, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7307, -2.8067, -3.2607, -3.2858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6532, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7339, -2.8049, -3.2569, -3.2883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6510, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7360, -2.8039, -3.2530, -3.2897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6076, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7383, -2.8035, -3.2505, -3.2914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7110, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.7419, -2.7994, -3.2434, -3.2941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5616, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.7439, -2.7962, -3.2388, -3.2969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8282, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.7394, -2.7978, -3.2409, -3.2964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5666, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.7343, -2.8006, -3.2440, -3.2954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8178, device='cuda:0', dtype=torch.float64)
tensor([-1.8536, -2.7320, -2.8010, -3.2440, -3.2943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5640, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.7298, -2.8022, -3.2477, -3.2920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6621, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7254, -2.8053, -3.2540, -3.2891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6006, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7232, -2.8067, -3.2593, -3.2874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7251, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.7229, -2.8073, -3.2606, -3.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7391, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.7245, -2.8055, -3.2596, -3.2853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7359, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.7247, -2.8055, -3.2587, -3.2833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7319, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.7266, -2.8033, -3.2567, -3.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7792, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.7304, -2.7983, -3.2494, -3.2828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7047, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.7349, -2.7924, -3.2393, -3.2847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6134, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.7361, -2.7906, -3.2361, -3.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7123, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.7328, -2.7931, -3.2410, -3.2817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6039, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.7290, -2.7992, -3.2515, -3.2758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6335, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.7267, -2.8060, -3.2593, -3.2720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7673, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7267, -2.8101, -3.2606, -3.2709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7817, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.7267, -2.8144, -3.2603, -3.2709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6892, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.7260, -2.8184, -3.2605, -3.2713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6764, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7267, -2.8192, -3.2594, -3.2731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7777, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7284, -2.8179, -3.2565, -3.2761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6778, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.7284, -2.8173, -3.2552, -3.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6714, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.7270, -2.8175, -3.2563, -3.2806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7227, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.7293, -2.8138, -3.2536, -3.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6787, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.7341, -2.8087, -3.2499, -3.2853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6962, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.7380, -2.8035, -3.2467, -3.2876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7117, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.7394, -2.8024, -3.2448, -3.2879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6280, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.7380, -2.8038, -3.2453, -3.2874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6742, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.7336, -2.8071, -3.2456, -3.2866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7029, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.7274, -2.8126, -3.2479, -3.2849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7441, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7220, -2.8180, -3.2518, -3.2851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6817, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.7189, -2.8213, -3.2524, -3.2843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8067, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7190, -2.8206, -3.2489, -3.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6112, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.7237, -2.8159, -3.2442, -3.2872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6377, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.7303, -2.8092, -3.2415, -3.2909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6708, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.7353, -2.8051, -3.2438, -3.2919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7420, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.7358, -2.8048, -3.2501, -3.2907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7005, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.7344, -2.8046, -3.2522, -3.2899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7040, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.7322, -2.8033, -3.2526, -3.2890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6992, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.7308, -2.8003, -3.2478, -3.2877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6571, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7291, -2.7979, -3.2432, -3.2858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5886, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.7298, -2.7962, -3.2383, -3.2841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6652, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7292, -2.7970, -3.2380, -3.2817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7504, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.7274, -2.8003, -3.2425, -3.2770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6910, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.7255, -2.8032, -3.2493, -3.2739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7664, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7262, -2.8041, -3.2491, -3.2726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7186, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.7266, -2.8073, -3.2502, -3.2703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7039, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.7243, -2.8120, -3.2498, -3.2676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6844, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.7270, -2.8130, -3.2445, -3.2673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6937, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.7317, -2.8102, -3.2349, -3.2701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5896, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.7346, -2.8065, -3.2293, -3.2728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9261, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.7333, -2.8051, -3.2326, -3.2734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6762, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7300, -2.8046, -3.2413, -3.2736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8317, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7281, -2.8015, -3.2460, -3.2756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6889, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7283, -2.7973, -3.2479, -3.2787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6941, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.7292, -2.7948, -3.2474, -3.2809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7042, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7297, -2.7931, -3.2442, -3.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6048, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.7313, -2.7944, -3.2438, -3.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7130, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.7334, -2.7966, -3.2449, -3.2811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7405, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7340, -2.8003, -3.2489, -3.2792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6222, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.7348, -2.8013, -3.2496, -3.2788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7001, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.7383, -2.8003, -3.2453, -3.2803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7706, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.7372, -2.8001, -3.2425, -3.2806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6984, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.7335, -2.8010, -3.2440, -3.2804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8807, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.7325, -2.7983, -3.2412, -3.2830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7525, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.7342, -2.7943, -3.2389, -3.2855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7170, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.7342, -2.7947, -3.2408, -3.2860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8541, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7313, -2.8008, -3.2487, -3.2822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8727, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.7289, -2.8057, -3.2540, -3.2801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9003, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7282, -2.8067, -3.2494, -3.2807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7965, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.7261, -2.8076, -3.2459, -3.2808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8846, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7208, -2.8091, -3.2441, -3.2795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6223, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.7174, -2.8074, -3.2450, -3.2786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0170, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.7177, -2.8012, -3.2389, -3.2802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7473, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.7181, -2.7987, -3.2418, -3.2806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9076, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.7125, -2.8025, -3.2506, -3.2759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7123, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7093, -2.8074, -3.2636, -3.2716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2101, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.7142, -2.8020, -3.2555, -3.2711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6448, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.7209, -2.7983, -3.2478, -3.2720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1701, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.7208, -2.8009, -3.2486, -3.2665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6497, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.7217, -2.8028, -3.2508, -3.2641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0354, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.7277, -2.7987, -3.2446, -3.2650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6440, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.7344, -2.7948, -3.2421, -3.2674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0789, device='cuda:0', dtype=torch.float64)
tensor([-1.8576, -2.7333, -2.7965, -3.2464, -3.2654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7187, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7315, -2.7980, -3.2531, -3.2633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8699, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.7304, -2.7953, -3.2509, -3.2633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6678, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.7295, -2.7920, -3.2474, -3.2647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8521, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.7257, -2.7921, -3.2467, -3.2634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7538, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7232, -2.7943, -3.2460, -3.2630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7523, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.7254, -2.7947, -3.2421, -3.2630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8209, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.7294, -2.7954, -3.2382, -3.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8411, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.7310, -2.8001, -3.2356, -3.2625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7769, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.7303, -2.8056, -3.2344, -3.2604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8150, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.7320, -2.8070, -3.2324, -3.2609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7003, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7325, -2.8041, -3.2281, -3.2634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8832, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.7315, -2.8019, -3.2292, -3.2659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7072, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.7311, -2.7984, -3.2316, -3.2682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7215, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.7294, -2.7967, -3.2381, -3.2694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7779, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.7282, -2.7960, -3.2437, -3.2696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7306, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.7280, -2.7948, -3.2452, -3.2689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6912, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7288, -2.7947, -3.2440, -3.2673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7227, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7331, -2.7952, -3.2424, -3.2670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7232, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.7367, -2.7948, -3.2378, -3.2678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8536, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7412, -2.7948, -3.2365, -3.2705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6825, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.7431, -2.7967, -3.2343, -3.2734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6999, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7413, -2.7987, -3.2327, -3.2757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7649, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.7376, -2.8022, -3.2295, -3.2773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6949, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.7312, -2.8053, -3.2264, -3.2795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7756, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.7231, -2.8062, -3.2256, -3.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6538, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.7140, -2.8068, -3.2295, -3.2750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7390, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.7090, -2.8037, -3.2354, -3.2724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8177, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.7074, -2.7996, -3.2376, -3.2697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8210, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.7099, -2.7960, -3.2376, -3.2672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7553, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.7171, -2.7926, -3.2347, -3.2670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7962, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.7222, -2.7901, -3.2323, -3.2677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7595, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.7244, -2.7894, -3.2325, -3.2685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8538, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.7204, -2.7927, -3.2387, -3.2661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6871, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.7184, -2.7925, -3.2399, -3.2665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8437, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.7169, -2.7905, -3.2378, -3.2689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7980, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.7184, -2.7885, -3.2343, -3.2706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7887, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.7186, -2.7885, -3.2326, -3.2734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8517, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.7161, -2.7936, -3.2384, -3.2705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7656, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.7120, -2.8000, -3.2487, -3.2649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7498, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.7109, -2.8058, -3.2544, -3.2624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7081, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7167, -2.8058, -3.2532, -3.2633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9140, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7226, -2.8031, -3.2481, -3.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6528, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.7295, -2.7974, -3.2402, -3.2668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7814, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7355, -2.7904, -3.2320, -3.2724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8480, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.7407, -2.7855, -3.2286, -3.2761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8063, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.7394, -2.7875, -3.2326, -3.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8464, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.7386, -2.7881, -3.2346, -3.2729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8874, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.7399, -2.7866, -3.2320, -3.2724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7763, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.7410, -2.7851, -3.2256, -3.2723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8515, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7398, -2.7862, -3.2201, -3.2692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8831, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.7333, -2.7926, -3.2188, -3.2636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8954, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.7256, -2.7966, -3.2177, -3.2585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8839, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.7206, -2.7976, -3.2165, -3.2559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9252, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.7194, -2.7963, -3.2171, -3.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8976, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.7146, -2.7973, -3.2204, -3.2535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8299, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.7091, -2.7995, -3.2288, -3.2547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9109, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.7089, -2.7972, -3.2252, -3.2587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8425, device='cuda:0', dtype=torch.float64)
tensor([-1.8640, -2.7111, -2.7970, -3.2232, -3.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8972, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.7075, -2.8013, -3.2328, -3.2632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8700, device='cuda:0', dtype=torch.float64)
tensor([-1.8593, -2.7061, -2.8041, -3.2404, -3.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8618, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.7099, -2.8039, -3.2439, -3.2620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8363, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.7148, -2.8007, -3.2460, -3.2632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8138, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.7195, -2.7968, -3.2440, -3.2655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6002, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.7227, -2.7955, -3.2419, -3.2678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8092, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.7212, -2.7990, -3.2402, -3.2669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7266, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.7185, -2.8035, -3.2375, -3.2672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8123, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.7210, -2.8035, -3.2324, -3.2699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7830, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.7259, -2.8046, -3.2320, -3.2672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6999, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.7321, -2.8043, -3.2324, -3.2626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7710, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.7376, -2.8002, -3.2319, -3.2576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8270, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.7409, -2.7937, -3.2302, -3.2530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6862, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.7388, -2.7924, -3.2296, -3.2478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8781, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7340, -2.7931, -3.2323, -3.2415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8537, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.7299, -2.7912, -3.2328, -3.2395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8294, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.7277, -2.7894, -3.2302, -3.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9984, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.7209, -2.7937, -3.2311, -3.2409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8050, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.7165, -2.7980, -3.2359, -3.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9992, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.7170, -2.7945, -3.2317, -3.2498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7200, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.7212, -2.7895, -3.2363, -3.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0808, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.7219, -2.7886, -3.2431, -3.2565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8697, device='cuda:0', dtype=torch.float64)
tensor([-1.8585, -2.7284, -2.7855, -3.2512, -3.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0762, device='cuda:0', dtype=torch.float64)
tensor([-1.8668, -2.7414, -2.7768, -3.2419, -3.2704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8165, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7505, -2.7716, -3.2408, -3.2749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9951, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.7469, -2.7756, -3.2460, -3.2715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7210, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.7361, -2.7802, -3.2505, -3.2682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0072, device='cuda:0', dtype=torch.float64)
tensor([-1.8502, -2.7293, -2.7788, -3.2420, -3.2685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8573, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.7245, -2.7764, -3.2354, -3.2707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0911, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.7138, -2.7831, -3.2375, -3.2641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7678, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.7103, -2.7862, -3.2417, -3.2592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0230, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.7145, -2.7860, -3.2382, -3.2586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8578, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.7214, -2.7884, -3.2367, -3.2582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9181, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.7287, -2.7909, -3.2318, -3.2572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8937, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.7352, -2.7916, -3.2280, -3.2571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.7428, -2.7871, -3.2203, -3.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7564, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.7423, -2.7834, -3.2178, -3.2614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7738, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7366, -2.7826, -3.2202, -3.2610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9745, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.7280, -2.7823, -3.2231, -3.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7271, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.7194, -2.7847, -3.2236, -3.2618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7168, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7129, -2.7888, -3.2218, -3.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8110, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7084, -2.7932, -3.2173, -3.2671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9081, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.7088, -2.7974, -3.2200, -3.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7896, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.7088, -2.8035, -3.2227, -3.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7700, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.7148, -2.8072, -3.2212, -3.2691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7754, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.7208, -2.8105, -3.2141, -3.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8339, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.7295, -2.8081, -3.2075, -3.2664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8830, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.7314, -2.8076, -3.2049, -3.2599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8159, device='cuda:0', dtype=torch.float64)
tensor([-1.8520, -2.7298, -2.8081, -3.2077, -3.2517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8377, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7301, -2.8020, -3.2055, -3.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8483, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.7335, -2.7965, -3.2076, -3.2475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8896, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.7299, -2.7964, -3.2139, -3.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7581, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.7236, -2.7986, -3.2180, -3.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8998, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.7228, -2.7968, -3.2153, -3.2501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6861, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.7211, -2.7969, -3.2126, -3.2536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7650, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7198, -2.7950, -3.2093, -3.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8867, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.7177, -2.7933, -3.2144, -3.2539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8050, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.7124, -2.7928, -3.2228, -3.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8821, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.7119, -2.7900, -3.2240, -3.2479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8361, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.7140, -2.7876, -3.2277, -3.2473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8874, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7146, -2.7882, -3.2302, -3.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8152, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.7158, -2.7937, -3.2378, -3.2438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8381, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.7236, -2.7951, -3.2370, -3.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8646, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.7284, -2.7959, -3.2339, -3.2500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9090, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.7281, -2.7989, -3.2353, -3.2522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8454, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.7258, -2.8024, -3.2327, -3.2536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9022, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.7274, -2.8003, -3.2245, -3.2577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8694, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.7302, -2.7979, -3.2147, -3.2611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9189, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.7277, -2.7972, -3.2123, -3.2611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8821, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.7211, -2.8017, -3.2197, -3.2582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7570, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.7159, -2.8035, -3.2272, -3.2569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8173, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.7130, -2.8024, -3.2331, -3.2589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8719, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.7079, -2.8052, -3.2370, -3.2597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9455, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.7087, -2.8013, -3.2347, -3.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8947, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7106, -2.7981, -3.2288, -3.2641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0097, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.7147, -2.7942, -3.2183, -3.2667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.7204, -2.7926, -3.2107, -3.2672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9226, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.7247, -2.7933, -3.2079, -3.2656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7406, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.7271, -2.7967, -3.2095, -3.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7595, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.7301, -2.7967, -3.2107, -3.2625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7968, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.7333, -2.7931, -3.2132, -3.2591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7647, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.7311, -2.7910, -3.2162, -3.2529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7739, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.7247, -2.7892, -3.2172, -3.2460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9193, device='cuda:0', dtype=torch.float64)
tensor([-1.8620, -2.7204, -2.7857, -3.2141, -3.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8338, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.7167, -2.7854, -3.2137, -3.2426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9716, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.7084, -2.7885, -3.2203, -3.2383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1090, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7050, -2.7907, -3.2235, -3.2368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8561, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.7076, -2.7884, -3.2242, -3.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8881, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.7143, -2.7863, -3.2196, -3.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7983, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7207, -2.7858, -3.2128, -3.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8731, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.7261, -2.7872, -3.2107, -3.2489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8977, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7283, -2.7924, -3.2131, -3.2479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9621, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.7269, -2.7980, -3.2163, -3.2484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9570, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.7266, -2.8034, -3.2197, -3.2460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1061, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.7312, -2.8008, -3.2098, -3.2485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8967, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.7334, -2.7967, -3.2102, -3.2481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0028, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.7278, -2.7949, -3.2145, -3.2440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9609, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.7248, -2.7906, -3.2179, -3.2425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8401, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.7252, -2.7836, -3.2134, -3.2446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7571, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.7227, -2.7803, -3.2088, -3.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9317, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.7143, -2.7817, -3.2104, -3.2445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9796, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7053, -2.7841, -3.2154, -3.2395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1059, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.7015, -2.7830, -3.2136, -3.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9549, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7082, -2.7771, -3.2236, -3.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7907, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7095, -2.7791, -3.2183, -3.2295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0174, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.7167, -2.7786, -3.2176, -3.2309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2923, device='cuda:0', dtype=torch.float64)
tensor([-1.8728, -2.7267, -2.7712, -3.2014, -3.2406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8937, device='cuda:0', dtype=torch.float64)
tensor([-1.8760, -2.7331, -2.7721, -3.1984, -3.2491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1714, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.7278, -2.7811, -3.2067, -3.2478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.7288, -2.7869, -3.2192, -3.2491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1182, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.7364, -2.7844, -3.2086, -3.2545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8937, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.7413, -2.7824, -3.2066, -3.2551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0834, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.7374, -2.7880, -3.2095, -3.2497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8501, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7339, -2.7961, -3.2129, -3.2461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3393, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.7349, -2.7944, -3.2011, -3.2501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1180, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.7316, -2.7975, -3.2082, -3.2516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2764, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.7221, -2.8078, -3.2254, -3.2461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8369, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7150, -2.8150, -3.2440, -3.2445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2200, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7116, -2.8120, -3.2379, -3.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9595, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7062, -2.8099, -3.2296, -3.2580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0475, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.6997, -2.8095, -3.2277, -3.2599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8432, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6992, -2.8082, -3.2250, -3.2613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2207, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7061, -2.8009, -3.2246, -3.2651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3407, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.7106, -2.8020, -3.2231, -3.2614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8903, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.7217, -2.8010, -3.2293, -3.2583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3175, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.7379, -2.7908, -3.2140, -3.2593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9043, device='cuda:0', dtype=torch.float64)
tensor([-1.8789, -2.7468, -2.7843, -3.2061, -3.2609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5809, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.7295, -2.7903, -3.2088, -3.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1899, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.7087, -2.8002, -3.2110, -3.2391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1813, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.6972, -2.8009, -3.2108, -3.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8482, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.6910, -2.8017, -3.2177, -3.2344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2043, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6862, -2.8063, -3.2262, -3.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1078, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.6931, -2.8041, -3.2284, -3.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9429, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7069, -2.7979, -3.2205, -3.2377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7569, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.7180, -2.7902, -3.2121, -3.2425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0231, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.7186, -2.7900, -3.2136, -3.2383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0256, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.7158, -2.7926, -3.2134, -3.2349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8965, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.7163, -2.7919, -3.2075, -3.2357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8699, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7159, -2.7930, -3.2023, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1561, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.7154, -2.7959, -3.1981, -3.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2112, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.7220, -2.7943, -3.1970, -3.2402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9841, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.7338, -2.7874, -3.1971, -3.2431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1471, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.7431, -2.7792, -3.1959, -3.2491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9415, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.7450, -2.7746, -3.1935, -3.2529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0500, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.7396, -2.7749, -3.2011, -3.2527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9814, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7346, -2.7754, -3.2090, -3.2572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7668, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.7299, -2.7736, -3.2121, -3.2610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0564, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.7304, -2.7662, -3.2117, -3.2633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2340, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.7226, -2.7683, -3.2115, -3.2632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9490, device='cuda:0', dtype=torch.float64)
tensor([-1.8661, -2.7141, -2.7716, -3.2097, -3.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2322, device='cuda:0', dtype=torch.float64)
tensor([-1.8705, -2.7079, -2.7694, -3.1956, -3.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9193, device='cuda:0', dtype=torch.float64)
tensor([-1.8701, -2.7036, -2.7729, -3.1959, -3.2577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0815, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.6943, -2.7827, -3.2043, -3.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0798, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6937, -2.7869, -3.2112, -3.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0877, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.7025, -2.7854, -3.2160, -3.2445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0092, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7083, -2.7841, -3.2225, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8967, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.7156, -2.7823, -3.2299, -3.2389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9783, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.7244, -2.7741, -3.2335, -3.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9107, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.7288, -2.7679, -3.2375, -3.2368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7778, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7244, -2.7705, -3.2412, -3.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9999, device='cuda:0', dtype=torch.float64)
tensor([-1.8602, -2.7178, -2.7771, -3.2357, -3.2291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9665, device='cuda:0', dtype=torch.float64)
tensor([-1.8641, -2.7133, -2.7861, -3.2250, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8507, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -2.7068, -2.7975, -3.2168, -3.2268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9833, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.7014, -2.8049, -3.2062, -3.2296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9716, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.7032, -2.8073, -3.1956, -3.2364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0529, device='cuda:0', dtype=torch.float64)
tensor([-1.8633, -2.7155, -2.8024, -3.1881, -3.2436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1908, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.7197, -2.8000, -3.1895, -3.2424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9138, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.7232, -2.7993, -3.2020, -3.2421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9630, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.7279, -2.7963, -3.2043, -3.2438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9656, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.7341, -2.7900, -3.2073, -3.2492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0342, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.7270, -2.7924, -3.2081, -3.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0164, device='cuda:0', dtype=torch.float64)
tensor([-1.8536, -2.7191, -2.7992, -3.2147, -3.2485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5082, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.7201, -2.7922, -3.2070, -3.2537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9695, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.7160, -2.7885, -3.2067, -3.2554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1017, device='cuda:0', dtype=torch.float64)
tensor([-1.8678, -2.7099, -2.7907, -3.2170, -3.2512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9325, device='cuda:0', dtype=torch.float64)
tensor([-1.8693, -2.7121, -2.7874, -3.2177, -3.2492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0990, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.7174, -2.7804, -3.2077, -3.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1085, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.7161, -2.7793, -3.2009, -3.2487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9416, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.7100, -2.7858, -3.1968, -3.2447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1108, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.7079, -2.7882, -3.1917, -3.2429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9884, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.7155, -2.7847, -3.1852, -3.2471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0865, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.7147, -2.7894, -3.1872, -3.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8269, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.7111, -2.7969, -3.1961, -3.2411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1512, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.7143, -2.7964, -3.1958, -3.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9681, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.7210, -2.7950, -3.1984, -3.2384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8551, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7235, -2.7950, -3.2049, -3.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0374, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7282, -2.7946, -3.2158, -3.2333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6000, device='cuda:0', dtype=torch.float64)
tensor([-1.8687, -2.7410, -2.7803, -3.1976, -3.2382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9712, device='cuda:0', dtype=torch.float64)
tensor([-1.8742, -2.7492, -2.7733, -3.1911, -3.2428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2578, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.7396, -2.7756, -3.1968, -3.2359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8566, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7283, -2.7819, -3.2094, -3.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2443, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.7187, -2.7822, -3.2040, -3.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2301, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.7170, -2.7774, -3.2091, -3.2309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3009, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.7045, -2.7820, -3.1988, -3.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0782, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6995, -2.7835, -3.2058, -3.2162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5305, device='cuda:0', dtype=torch.float64)
tensor([-1.8621, -2.7034, -2.7731, -3.1976, -3.2165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3886, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.7014, -2.7756, -3.2117, -3.2138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1749, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.6962, -2.7883, -3.2341, -3.2080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3830, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.7034, -2.7933, -3.2386, -3.2141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9897, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.7190, -2.7940, -3.2342, -3.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2582, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.7281, -2.7939, -3.2202, -3.2337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1757, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.7294, -2.7985, -3.2135, -3.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2690, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7292, -2.7950, -3.2074, -3.2402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0102, device='cuda:0', dtype=torch.float64)
tensor([-1.8593, -2.7274, -2.7917, -3.2108, -3.2467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3591, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.7156, -2.7972, -3.2153, -3.2436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9421, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.7080, -2.8011, -3.2183, -3.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1457, device='cuda:0', dtype=torch.float64)
tensor([-1.8697, -2.7067, -2.7986, -3.2170, -3.2476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0273, device='cuda:0', dtype=torch.float64)
tensor([-1.8734, -2.7034, -2.7923, -3.2138, -3.2508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3193, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.6931, -2.7934, -3.2140, -3.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9372, device='cuda:0', dtype=torch.float64)
tensor([-1.8585, -2.6894, -2.7947, -3.2163, -3.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0859, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.6959, -2.7867, -3.2057, -3.2412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9684, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.7020, -2.7831, -3.1961, -3.2428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9222, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.7102, -2.7823, -3.1901, -3.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9669, device='cuda:0', dtype=torch.float64)
tensor([-1.8792, -2.7104, -2.7900, -3.1933, -3.2361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1012, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.7090, -2.7951, -3.1882, -3.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0167, device='cuda:0', dtype=torch.float64)
tensor([-1.8670, -2.7098, -2.7938, -3.1858, -3.2311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1845, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.7048, -2.7920, -3.1845, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9678, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7027, -2.7900, -3.1877, -3.2236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9907, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.7082, -2.7855, -3.1844, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9447, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.7186, -2.7794, -3.1796, -3.2339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0599, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.7239, -2.7818, -3.1895, -3.2351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2226, device='cuda:0', dtype=torch.float64)
tensor([-1.8520, -2.7246, -2.7891, -3.2043, -3.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9870, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.7294, -2.7883, -3.2051, -3.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1034, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.7396, -2.7799, -3.1946, -3.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1265, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.7456, -2.7747, -3.1753, -3.2422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0374, device='cuda:0', dtype=torch.float64)
tensor([-1.8756, -2.7423, -2.7774, -3.1717, -3.2444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2227, device='cuda:0', dtype=torch.float64)
tensor([-1.8771, -2.7353, -2.7762, -3.1665, -3.2479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0215, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.7222, -2.7780, -3.1781, -3.2459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0410, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.7011, -2.7885, -3.1990, -3.2387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2990, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6931, -2.7936, -3.2046, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3198, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6946, -2.7890, -3.1979, -3.2438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1080, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.6989, -2.7821, -3.1870, -3.2475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1412, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.6936, -2.7843, -3.1913, -3.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1647, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6864, -2.7868, -3.2003, -3.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0789, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6795, -2.7950, -3.2137, -3.2390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6793, -2.8026, -3.2181, -3.2382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1176, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6847, -2.8068, -3.2150, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1918, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.6991, -2.8018, -3.1999, -3.2468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1122, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.7138, -2.7934, -3.1903, -3.2516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8951, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7231, -2.7886, -3.1981, -3.2503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2038, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.7219, -2.7909, -3.2136, -3.2422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1134, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.7183, -2.7901, -3.2218, -3.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1454, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.7134, -2.7906, -3.2080, -3.2331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-1.8734, -2.7155, -2.7927, -3.1899, -3.2340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1195, device='cuda:0', dtype=torch.float64)
tensor([-1.8665, -2.7121, -2.8019, -3.1787, -3.2320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1541, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.7140, -2.8040, -3.1716, -3.2372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1096, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.7243, -2.8001, -3.1719, -3.2425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4794, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.7252, -2.8028, -3.1913, -3.2361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.7292, -2.8015, -3.2091, -3.2341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([-1.8576, -2.7364, -2.7939, -3.2075, -3.2391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0664, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.7389, -2.7888, -3.1991, -3.2442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0693, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.7305, -2.7945, -3.1979, -3.2425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0899, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.7185, -2.8003, -3.2010, -3.2380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0677, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.7154, -2.7964, -3.1977, -3.2391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2110, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.7077, -2.7971, -3.2051, -3.2369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2539, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.6961, -2.8049, -3.2099, -3.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2411, device='cuda:0', dtype=torch.float64)
tensor([-1.8641, -2.6953, -2.8044, -3.2027, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.6958, -2.8035, -3.1899, -3.2276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1479, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.6893, -2.8042, -3.1864, -3.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1991, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.6849, -2.8076, -3.2001, -3.2223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1432, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.6936, -2.7982, -3.2040, -3.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3457, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.7090, -2.7862, -3.2054, -3.2329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1699, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.7241, -2.7727, -3.2070, -3.2381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1048, device='cuda:0', dtype=torch.float64)
tensor([-1.8742, -2.7305, -2.7677, -3.2212, -3.2359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2178, device='cuda:0', dtype=torch.float64)
tensor([-1.8807, -2.7397, -2.7574, -3.2208, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1535, device='cuda:0', dtype=torch.float64)
tensor([-1.8831, -2.7473, -2.7560, -3.2160, -3.2397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9987, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.7416, -2.7676, -3.2104, -3.2353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.7292, -2.7868, -3.2081, -3.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1219, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.7176, -2.8030, -3.1997, -3.2250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0533, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7088, -2.8186, -3.1911, -3.2235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1136, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6939, -2.8303, -3.1960, -3.2150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2737, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6801, -2.8330, -3.2051, -3.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1610, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6798, -2.8169, -3.1994, -3.2078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9700, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.6869, -2.7976, -3.1942, -3.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1852, device='cuda:0', dtype=torch.float64)
tensor([-1.8787, -2.6875, -2.7862, -3.1953, -3.2183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1487, device='cuda:0', dtype=torch.float64)
tensor([-1.8880, -2.6942, -2.7798, -3.1990, -3.2224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1388, device='cuda:0', dtype=torch.float64)
tensor([-1.8915, -2.7017, -2.7781, -3.2033, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1390, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.7067, -2.7836, -3.2116, -3.2331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1830, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.7058, -2.8012, -3.2154, -3.2316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9945, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.7115, -2.8165, -3.2125, -3.2364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1407, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.7231, -2.8236, -3.2022, -3.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1600, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.7230, -2.8283, -3.2005, -3.2368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0385, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.7225, -2.8206, -3.2008, -3.2369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2686, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.7185, -2.8094, -3.2053, -3.2357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1222, device='cuda:0', dtype=torch.float64)
tensor([-1.8640, -2.7190, -2.7866, -3.1904, -3.2444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1802, device='cuda:0', dtype=torch.float64)
tensor([-1.8747, -2.7203, -2.7661, -3.1785, -3.2550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1047, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.7161, -2.7561, -3.1815, -3.2583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1503, device='cuda:0', dtype=torch.float64)
tensor([-1.8674, -2.7019, -2.7598, -3.1967, -3.2538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1025, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.6886, -2.7703, -3.2122, -3.2491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0509, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.6824, -2.7847, -3.2230, -3.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6074, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6938, -2.7869, -3.2164, -3.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0239, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.7075, -2.7870, -3.1968, -3.2512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0476, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.7227, -2.7822, -3.1733, -3.2569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1313, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.7321, -2.7740, -3.1549, -3.2607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3425, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.7351, -2.7702, -3.1610, -3.2571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9544, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.7310, -2.7731, -3.1713, -3.2502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1130, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.7276, -2.7779, -3.1760, -3.2463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2976, device='cuda:0', dtype=torch.float64)
tensor([-1.8803, -2.7325, -2.7735, -3.1653, -3.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1005, device='cuda:0', dtype=torch.float64)
tensor([-1.8892, -2.7377, -2.7739, -3.1642, -3.2530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3334, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.7230, -2.7870, -3.1779, -3.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1503, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -2.7108, -2.8002, -3.2075, -3.2362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2971, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.7033, -2.8004, -3.2061, -3.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1321, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.7017, -2.7992, -3.2152, -3.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1915, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7001, -2.7983, -3.1992, -3.2265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0838, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.6990, -2.7931, -3.1924, -3.2236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1378, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7055, -2.7823, -3.1820, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2357, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.7048, -2.7754, -3.1803, -3.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3877, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6920, -2.7790, -3.1925, -3.2271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0559, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6847, -2.7856, -3.2118, -3.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2806, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.6954, -2.7845, -3.2234, -3.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3459, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.7134, -2.7777, -3.2158, -3.2389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1609, device='cuda:0', dtype=torch.float64)
tensor([-1.8803, -2.7287, -2.7746, -3.2015, -3.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3331, device='cuda:0', dtype=torch.float64)
tensor([-1.8843, -2.7288, -2.7775, -3.1996, -3.2590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2479, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.7250, -2.7757, -3.2030, -3.2614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1905, device='cuda:0', dtype=torch.float64)
tensor([-1.8760, -2.7220, -2.7757, -3.2164, -3.2636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2687, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.7223, -2.7738, -3.2268, -3.2669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5257, device='cuda:0', dtype=torch.float64)
tensor([-1.8673, -2.7155, -2.7765, -3.2194, -3.2655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3539, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.7136, -2.7769, -3.2110, -3.2670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4466, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.7182, -2.7758, -3.1911, -3.2710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1965, device='cuda:0', dtype=torch.float64)
tensor([-1.8804, -2.7138, -2.7863, -3.1900, -3.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1810, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.7018, -2.7988, -3.1971, -3.2539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1338, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6922, -2.8085, -3.2063, -3.2404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4002, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.6971, -2.8032, -3.1987, -3.2348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2366, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.7170, -2.7901, -3.1913, -3.2396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3232, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.7275, -2.7867, -3.1864, -3.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1845, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.7289, -2.7924, -3.2032, -3.2156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5516, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.7284, -2.7894, -3.2087, -3.2049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4842, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.7199, -2.7924, -3.2121, -3.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1139, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.7088, -2.7997, -3.2100, -3.1828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3053, device='cuda:0', dtype=torch.float64)
tensor([-1.8643, -2.7044, -2.8029, -3.1859, -3.1815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2486, device='cuda:0', dtype=torch.float64)
tensor([-1.8778, -2.7134, -2.7926, -3.1581, -3.1916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0723, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.7184, -2.7870, -3.1467, -3.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2374, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.7160, -2.7830, -3.1531, -3.2077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1681, device='cuda:0', dtype=torch.float64)
tensor([-1.8648, -2.7083, -2.7848, -3.1743, -3.2124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9258, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.7075, -2.7783, -3.1965, -3.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1001, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.7104, -2.7759, -3.2081, -3.2268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2207, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.7080, -2.7824, -3.2174, -3.2329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0990, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7120, -2.7840, -3.2132, -3.2383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2939, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.7224, -2.7800, -3.2028, -3.2506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0711, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.7188, -2.7858, -3.2011, -3.2550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4456, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.7077, -2.8001, -3.2042, -3.2577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4962, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.7126, -2.7929, -3.1937, -3.2685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1933, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7203, -2.7870, -3.1830, -3.2831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4906, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.7042, -2.7971, -3.1830, -3.2777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1088, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6837, -2.8140, -3.1879, -3.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4362, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.6886, -2.8121, -3.1792, -3.2678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4874, device='cuda:0', dtype=torch.float64)
tensor([-1.8762, -2.7177, -2.7950, -3.1806, -3.2799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8925, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.7199, -2.7973, -3.1618, -3.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0159, device='cuda:0', dtype=torch.float64)
tensor([-1.8859, -2.7228, -2.7996, -3.1818, -3.2530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6351, device='cuda:0', dtype=torch.float64)
tensor([-1.8901, -2.7231, -2.7938, -3.1778, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0528, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.7262, -2.7894, -3.1847, -3.2269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6147, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -2.7095, -2.7972, -3.1963, -3.2084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2158, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.7035, -2.8029, -3.2107, -3.2004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7537, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7158, -2.7827, -3.1744, -3.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2280, device='cuda:0', dtype=torch.float64)
tensor([-1.8631, -2.7194, -2.7709, -3.1673, -3.2014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7231, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.7005, -2.7806, -3.1862, -3.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1797, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.6889, -2.7848, -3.2065, -3.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5249, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.6925, -2.7791, -3.1972, -3.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1697, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.6987, -2.7791, -3.2006, -3.2127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5734, device='cuda:0', dtype=torch.float64)
tensor([-1.8621, -2.6986, -2.7838, -3.2073, -3.2204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3133, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.7154, -2.7788, -3.1979, -3.2389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5754, device='cuda:0', dtype=torch.float64)
tensor([-1.8792, -2.7360, -2.7636, -3.1691, -3.2557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3587, device='cuda:0', dtype=torch.float64)
tensor([-1.8792, -2.7382, -2.7618, -3.1657, -3.2629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4662, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.7245, -2.7730, -3.1741, -3.2578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6336, device='cuda:0', dtype=torch.float64)
tensor([-1.8734, -2.7266, -2.7685, -3.1682, -3.2508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1728, device='cuda:0', dtype=torch.float64)
tensor([-1.8864, -2.7348, -2.7628, -3.1693, -3.2546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7437, device='cuda:0', dtype=torch.float64)
tensor([-1.8810, -2.7208, -2.7713, -3.1600, -3.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2796, device='cuda:0', dtype=torch.float64)
tensor([-1.8643, -2.7044, -2.7856, -3.1792, -3.2342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6460, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6951, -2.7891, -3.1776, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2992, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.6963, -2.7912, -3.1730, -3.2304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3545, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.7024, -2.7916, -3.1784, -3.2295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2470, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.7190, -2.7867, -3.1776, -3.2298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1688, device='cuda:0', dtype=torch.float64)
tensor([-1.8753, -2.7369, -2.7760, -3.1820, -3.2286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.8854, -2.7421, -2.7719, -3.1926, -3.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3300, device='cuda:0', dtype=torch.float64)
tensor([-1.8864, -2.7356, -2.7708, -3.2025, -3.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1033, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.7163, -2.7777, -3.2081, -3.2044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1696, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.6969, -2.7891, -3.2010, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4184, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.6904, -2.7953, -3.1894, -3.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4171, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.6876, -2.7999, -3.1796, -3.2115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1098, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.6989, -2.8008, -3.1732, -3.2200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1088, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.7180, -2.7949, -3.1657, -3.2254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9655, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.7308, -2.7889, -3.1641, -3.2233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2353, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.7313, -2.7880, -3.1765, -3.2205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1870, device='cuda:0', dtype=torch.float64)
tensor([-1.8645, -2.7256, -2.7870, -3.1897, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4595, device='cuda:0', dtype=torch.float64)
tensor([-1.8672, -2.7204, -2.7775, -3.1809, -3.2250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0799, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.7096, -2.7700, -3.1713, -3.2331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4463, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.6860, -2.7793, -3.1813, -3.2261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4026, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.6643, -2.7947, -3.1976, -3.2193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4585, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.6637, -2.7949, -3.2003, -3.2205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1368, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.6720, -2.7908, -3.2033, -3.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6890, device='cuda:0', dtype=torch.float64)
tensor([-1.8696, -2.6805, -2.7855, -3.1848, -3.2265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3831, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -2.7083, -2.7660, -3.1583, -3.2443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1636, device='cuda:0', dtype=torch.float64)
tensor([-1.9101, -2.7336, -2.7464, -3.1432, -3.2614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6084, device='cuda:0', dtype=torch.float64)
tensor([-1.8988, -2.7287, -2.7506, -3.1458, -3.2569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2735, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.7135, -2.7657, -3.1695, -3.2476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3230, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.7020, -2.7715, -3.1806, -3.2418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3623, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.7012, -2.7704, -3.1793, -3.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2847, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.6893, -2.7812, -3.1712, -3.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1427, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6771, -2.7905, -3.1782, -3.2345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5309, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.6714, -2.7912, -3.1787, -3.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4100, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6644, -2.7990, -3.2033, -3.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2210, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6702, -2.8037, -3.2212, -3.2155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5251, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.7029, -2.7925, -3.2065, -3.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2207, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.7494, -2.7767, -3.1723, -3.2315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1094, device='cuda:0', dtype=torch.float64)
tensor([-1.8737, -2.7840, -2.7717, -3.1464, -3.2357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3968, device='cuda:0', dtype=torch.float64)
tensor([-1.8878, -2.8028, -2.7729, -3.1366, -3.2382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2552, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -2.8092, -2.7745, -3.1414, -3.2333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8988, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.8010, -2.7805, -3.1575, -3.2333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1101, device='cuda:0', dtype=torch.float64)
tensor([-1.8993, -2.7736, -2.7921, -3.1856, -3.2274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2506, device='cuda:0', dtype=torch.float64)
tensor([-1.8895, -2.7354, -2.7996, -3.1913, -3.2260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1926, device='cuda:0', dtype=torch.float64)
tensor([-1.8748, -2.6944, -2.8039, -3.1912, -3.2263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2556, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.6547, -2.8101, -3.2005, -3.2257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3037, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6341, -2.8067, -3.2079, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3776, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.6305, -2.8007, -3.2031, -3.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3189, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.6488, -2.7929, -3.2061, -3.2331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3970, device='cuda:0', dtype=torch.float64)
tensor([-1.8789, -2.6835, -2.7727, -3.1862, -3.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3564, device='cuda:0', dtype=torch.float64)
tensor([-1.8965, -2.7038, -2.7609, -3.1736, -3.2494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4652, device='cuda:0', dtype=torch.float64)
tensor([-1.8900, -2.6979, -2.7664, -3.1781, -3.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3064, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.6920, -2.7683, -3.1886, -3.2295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3582, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.6975, -2.7601, -3.1899, -3.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3843, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.7033, -2.7628, -3.2147, -3.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9762, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6934, -2.7850, -3.2213, -3.2035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3951, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.7013, -2.7926, -3.2224, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7912, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.7359, -2.7789, -3.1930, -3.2259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8956, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.7399, -2.7864, -3.1844, -3.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2943, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.7353, -2.7957, -3.1930, -3.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4480, device='cuda:0', dtype=torch.float64)
tensor([-1.8713, -2.7363, -2.7887, -3.1723, -3.2232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4557, device='cuda:0', dtype=torch.float64)
tensor([-1.8893, -2.7483, -2.7746, -3.1735, -3.2360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8688, device='cuda:0', dtype=torch.float64)
tensor([-1.8849, -2.7333, -2.7704, -3.1541, -3.2248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2561, device='cuda:0', dtype=torch.float64)
tensor([-1.8849, -2.7290, -2.7688, -3.1577, -3.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7128, device='cuda:0', dtype=torch.float64)
tensor([-1.8973, -2.7366, -2.7498, -3.1444, -3.2343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5328, device='cuda:0', dtype=torch.float64)
tensor([-1.8877, -2.7225, -2.7557, -3.1667, -3.2337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5728, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.6911, -2.7859, -3.2300, -3.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7499, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.6736, -2.7951, -3.2249, -3.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6626, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.6787, -2.7891, -3.2334, -3.2325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7432, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.6728, -2.7857, -3.2037, -3.2276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1809, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.6750, -2.7873, -3.2080, -3.2259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8537, device='cuda:0', dtype=torch.float64)
tensor([-1.8779, -2.6943, -2.7619, -3.1904, -3.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2167, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.7094, -2.7486, -3.1898, -3.2297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4924, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.7062, -2.7551, -3.1925, -3.2201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2010, device='cuda:0', dtype=torch.float64)
tensor([-1.8827, -2.7038, -2.7584, -3.1917, -3.2237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7137, device='cuda:0', dtype=torch.float64)
tensor([-1.8900, -2.7084, -2.7447, -3.1689, -3.2263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4050, device='cuda:0', dtype=torch.float64)
tensor([-1.8896, -2.7060, -2.7400, -3.1575, -3.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8182, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.6831, -2.7610, -3.1595, -3.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3260, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.6665, -2.7839, -3.1710, -3.2072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5665, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.6754, -2.7881, -3.1775, -3.2075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4253, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6797, -2.7998, -3.1834, -3.2017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5683, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.6905, -2.8081, -3.1961, -3.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6073, device='cuda:0', dtype=torch.float64)
tensor([-1.8738, -2.7187, -2.7969, -3.1872, -3.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4912, device='cuda:0', dtype=torch.float64)
tensor([-1.8933, -2.7402, -2.7798, -3.1607, -3.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3820, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7466, -2.7806, -3.1605, -3.2027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3429, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.7412, -2.7950, -3.1777, -3.1922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3540, device='cuda:0', dtype=torch.float64)
tensor([-1.8761, -2.7391, -2.8006, -3.1795, -3.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7188, device='cuda:0', dtype=torch.float64)
tensor([-1.8908, -2.7507, -2.7918, -3.1714, -3.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6141, device='cuda:0', dtype=torch.float64)
tensor([-1.8792, -2.7376, -2.7982, -3.1764, -3.2258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4010, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.7139, -2.8179, -3.2153, -3.2201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7357, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.7104, -2.8117, -3.2112, -3.2292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2445, device='cuda:0', dtype=torch.float64)
tensor([-1.8697, -2.7138, -2.8075, -3.2217, -3.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6682, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.7062, -2.8135, -3.2145, -3.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9725, device='cuda:0', dtype=torch.float64)
tensor([-1.8599, -2.6998, -2.8149, -3.2127, -3.2458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5496, device='cuda:0', dtype=torch.float64)
tensor([-1.8598, -2.7080, -2.8026, -3.1853, -3.2564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1144, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.7177, -2.7903, -3.1828, -3.2616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3503, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7164, -2.7860, -3.1837, -3.2524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9439, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7197, -2.7785, -3.1897, -3.2476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3677, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.7315, -2.7622, -3.1734, -3.2482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2988, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.7446, -2.7465, -3.1615, -3.2557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3061, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.7433, -2.7451, -3.1660, -3.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2878, device='cuda:0', dtype=torch.float64)
tensor([-1.8734, -2.7221, -2.7578, -3.1722, -3.2345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1503, device='cuda:0', dtype=torch.float64)
tensor([-1.8759, -2.7100, -2.7633, -3.1769, -3.2263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4374, device='cuda:0', dtype=torch.float64)
tensor([-1.8916, -2.7191, -2.7560, -3.1981, -3.2274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4135, device='cuda:0', dtype=torch.float64)
tensor([-1.8926, -2.7171, -2.7621, -3.1699, -3.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3461, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.7097, -2.7852, -3.1776, -3.2127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5734, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.7116, -2.7907, -3.1759, -3.2085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3135, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.7188, -2.7886, -3.1895, -3.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2200, device='cuda:0', dtype=torch.float64)
tensor([-1.8545, -2.7201, -2.7907, -3.2164, -3.2040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4756, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.7219, -2.7910, -3.2348, -3.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7238, device='cuda:0', dtype=torch.float64)
tensor([-1.8672, -2.7308, -2.7761, -3.2170, -3.2075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3089, device='cuda:0', dtype=torch.float64)
tensor([-1.8875, -2.7428, -2.7584, -3.1811, -3.2204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9665, device='cuda:0', dtype=torch.float64)
tensor([-1.8914, -2.7354, -2.7670, -3.1718, -3.2240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3427, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.7158, -2.7845, -3.1802, -3.2189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5873, device='cuda:0', dtype=torch.float64)
tensor([-1.8790, -2.7087, -2.7932, -3.1717, -3.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1045, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.6984, -2.8162, -3.1855, -3.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9405, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.6828, -2.8283, -3.2026, -3.2059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2640, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.6793, -2.8269, -3.2188, -3.2051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4687, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.6883, -2.8108, -3.2132, -3.2126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3852, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.6921, -2.7980, -3.2133, -3.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3945, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.6843, -2.8012, -3.2042, -3.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2514, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.6852, -2.8111, -3.1800, -3.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3273, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6957, -2.8141, -3.1433, -3.2079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3205, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.7097, -2.8211, -3.1303, -3.2214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2487, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.7175, -2.8365, -3.1297, -3.2266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3240, device='cuda:0', dtype=torch.float64)
tensor([-1.8904, -2.7301, -2.8340, -3.1382, -3.2350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5603, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.7518, -2.8145, -3.1569, -3.2503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4112, device='cuda:0', dtype=torch.float64)
tensor([-1.9001, -2.7438, -2.8054, -3.1563, -3.2481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1698, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.7239, -2.8104, -3.1651, -3.2376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4282, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.7128, -2.8057, -3.1641, -3.2315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0304, device='cuda:0', dtype=torch.float64)
tensor([-1.8657, -2.7060, -2.7998, -3.1675, -3.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2202, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.6997, -2.7966, -3.1735, -3.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3140, device='cuda:0', dtype=torch.float64)
tensor([-1.8658, -2.6920, -2.7944, -3.1778, -3.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1358, device='cuda:0', dtype=torch.float64)
tensor([-1.8672, -2.6891, -2.7944, -3.1887, -3.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3245, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.6929, -2.7752, -3.1731, -3.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4447, device='cuda:0', dtype=torch.float64)
tensor([-1.9060, -2.6994, -2.7594, -3.1602, -3.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3045, device='cuda:0', dtype=torch.float64)
tensor([-1.9084, -2.6903, -2.7530, -3.1583, -3.2348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2011, device='cuda:0', dtype=torch.float64)
tensor([-1.8975, -2.6805, -2.7582, -3.1671, -3.2289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1567, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.6776, -2.7587, -3.1670, -3.2285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0984, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.6836, -2.7588, -3.1769, -3.2301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3602, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.6847, -2.7666, -3.2019, -3.2243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2116, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.6876, -2.7742, -3.2243, -3.2157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2963, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6944, -2.7712, -3.2402, -3.2161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2081, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.7098, -2.7620, -3.2394, -3.2224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4263, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7130, -2.7620, -3.2249, -3.2185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0765, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.7205, -2.7701, -3.2119, -3.2110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3108, device='cuda:0', dtype=torch.float64)
tensor([-1.8761, -2.7356, -2.7766, -3.1838, -3.2107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3829, device='cuda:0', dtype=torch.float64)
tensor([-1.8906, -2.7610, -2.7818, -3.1540, -3.2196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3305, device='cuda:0', dtype=torch.float64)
tensor([-1.9001, -2.7814, -2.7869, -3.1528, -3.2263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9386, device='cuda:0', dtype=torch.float64)
tensor([-1.8846, -2.7694, -2.8124, -3.1372, -3.2145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7729, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.7675, -2.8179, -3.1351, -3.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9781, device='cuda:0', dtype=torch.float64)
tensor([-1.8973, -2.7636, -2.8063, -3.1231, -3.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6570, device='cuda:0', dtype=torch.float64)
tensor([-1.8869, -2.7369, -2.8122, -3.1290, -3.2269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9765, device='cuda:0', dtype=torch.float64)
tensor([-1.8599, -2.6877, -2.8303, -3.1556, -3.2050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4285, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.6625, -2.8346, -3.1683, -3.1973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8192, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.6744, -2.8153, -3.1721, -3.2029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5210, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.6869, -2.8040, -3.1683, -3.2021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5341, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.7016, -2.8033, -3.1929, -3.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9758, device='cuda:0', dtype=torch.float64)
tensor([-1.8577, -2.7236, -2.7880, -3.1624, -3.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4605, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.7389, -2.7784, -3.1606, -3.2311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8932, device='cuda:0', dtype=torch.float64)
tensor([-1.8658, -2.7198, -2.7898, -3.1502, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2216, device='cuda:0', dtype=torch.float64)
tensor([-1.8648, -2.6968, -2.8061, -3.1620, -3.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6155, device='cuda:0', dtype=torch.float64)
tensor([-1.8899, -2.6860, -2.7978, -3.1439, -3.2082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3920, device='cuda:0', dtype=torch.float64)
tensor([-1.9210, -2.6899, -2.7770, -3.1298, -3.2228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6369, device='cuda:0', dtype=torch.float64)
tensor([-1.9263, -2.6850, -2.7719, -3.1289, -3.2200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2636, device='cuda:0', dtype=torch.float64)
tensor([-1.9163, -2.6768, -2.7746, -3.1419, -3.2161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3913, device='cuda:0', dtype=torch.float64)
tensor([-1.9069, -2.6755, -2.7678, -3.1472, -3.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3231, device='cuda:0', dtype=torch.float64)
tensor([-1.8937, -2.6867, -2.7555, -3.1588, -3.2339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3660, device='cuda:0', dtype=torch.float64)
tensor([-1.8687, -2.6880, -2.7611, -3.1639, -3.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2045, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.6884, -2.7733, -3.1769, -3.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4775, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.6933, -2.7792, -3.1871, -3.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3226, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7063, -2.7787, -3.1888, -3.2505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5136, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.7119, -2.7754, -3.1913, -3.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7937, device='cuda:0', dtype=torch.float64)
tensor([-1.8665, -2.7288, -2.7650, -3.1812, -3.2458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4863, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.7366, -2.7647, -3.1720, -3.2391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5311, device='cuda:0', dtype=torch.float64)
tensor([-1.8905, -2.7502, -2.7671, -3.1643, -3.2362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1741, device='cuda:0', dtype=torch.float64)
tensor([-1.9043, -2.7624, -2.7692, -3.1518, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6005, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7449, -2.7888, -3.1601, -3.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5715, device='cuda:0', dtype=torch.float64)
tensor([-1.8687, -2.7117, -2.8197, -3.2004, -3.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4628, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.6922, -2.8307, -3.2220, -3.1914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6177, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.6839, -2.8244, -3.2538, -3.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9014, device='cuda:0', dtype=torch.float64)
tensor([-1.8606, -2.6766, -2.8199, -3.2130, -3.2060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2462, device='cuda:0', dtype=torch.float64)
tensor([-1.8599, -2.6712, -2.8185, -3.2170, -3.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6172, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.6747, -2.7979, -3.2075, -3.2261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4944, device='cuda:0', dtype=torch.float64)
tensor([-1.8980, -2.7017, -2.7816, -3.2109, -3.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8671, device='cuda:0', dtype=torch.float64)
tensor([-1.9006, -2.7146, -2.7804, -3.2149, -3.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6129, device='cuda:0', dtype=torch.float64)
tensor([-1.9061, -2.7279, -2.7848, -3.2167, -3.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8359, device='cuda:0', dtype=torch.float64)
tensor([-1.9272, -2.7515, -2.7734, -3.1842, -3.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3656, device='cuda:0', dtype=torch.float64)
tensor([-1.9317, -2.7601, -2.7684, -3.1620, -3.2350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7383, device='cuda:0', dtype=torch.float64)
tensor([-1.8923, -2.7229, -2.7873, -3.1725, -3.2119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2158, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.6783, -2.8188, -3.2005, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5364, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6564, -2.8287, -3.2020, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5858, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6528, -2.8235, -3.2121, -3.1944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6936, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.6649, -2.8005, -3.2059, -3.2011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5002, device='cuda:0', dtype=torch.float64)
tensor([-1.8884, -2.6893, -2.7742, -3.2095, -3.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5529, device='cuda:0', dtype=torch.float64)
tensor([-1.9181, -2.7132, -2.7490, -3.1971, -3.2212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3544, device='cuda:0', dtype=torch.float64)
tensor([-1.9324, -2.7295, -2.7343, -3.1687, -3.2279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3115, device='cuda:0', dtype=torch.float64)
tensor([-1.9318, -2.7377, -2.7317, -3.1544, -3.2278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5365, device='cuda:0', dtype=torch.float64)
tensor([-1.8988, -2.7209, -2.7580, -3.1436, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4818, device='cuda:0', dtype=torch.float64)
tensor([-1.8713, -2.7001, -2.7903, -3.1370, -3.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2881, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.6994, -2.8106, -3.1374, -3.1906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4469, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6961, -2.8263, -3.1459, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4288, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6966, -2.8262, -3.1490, -3.1901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4678, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7034, -2.8093, -3.1520, -3.1964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4854, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.7215, -2.7726, -3.1392, -3.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5830, device='cuda:0', dtype=torch.float64)
tensor([-1.8896, -2.7256, -2.7507, -3.1381, -3.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4387, device='cuda:0', dtype=torch.float64)
tensor([-1.8921, -2.7217, -2.7476, -3.1533, -3.2193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5264, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.7113, -2.7611, -3.1783, -3.2125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3718, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.7019, -2.7837, -3.1988, -3.2112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4128, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6957, -2.8079, -3.2110, -3.2078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4971, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7002, -2.8108, -3.1998, -3.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4689, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.7143, -2.7960, -3.1736, -3.2221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4919, device='cuda:0', dtype=torch.float64)
tensor([-1.9106, -2.7417, -2.7701, -3.1343, -3.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7954, device='cuda:0', dtype=torch.float64)
tensor([-1.9310, -2.7426, -2.7620, -3.1388, -3.2426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3592, device='cuda:0', dtype=torch.float64)
tensor([-1.9281, -2.7287, -2.7696, -3.1541, -3.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2091, device='cuda:0', dtype=torch.float64)
tensor([-1.9180, -2.7125, -2.7771, -3.1678, -3.2444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6569, device='cuda:0', dtype=torch.float64)
tensor([-1.9091, -2.7097, -2.7868, -3.1907, -3.2496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4460, device='cuda:0', dtype=torch.float64)
tensor([-1.8883, -2.7019, -2.8078, -3.1919, -3.2470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3882, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.6978, -2.8317, -3.2017, -3.2357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6313, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.6865, -2.8475, -3.1881, -3.2306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4017, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.6748, -2.8587, -3.1912, -3.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4463, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.6601, -2.8651, -3.1938, -3.2289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5417, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.6493, -2.8538, -3.2098, -3.2201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3825, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6641, -2.8189, -3.2061, -3.2228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3533, device='cuda:0', dtype=torch.float64)
tensor([-1.9015, -2.6980, -2.7691, -3.1844, -3.2418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4718, device='cuda:0', dtype=torch.float64)
tensor([-1.9210, -2.7212, -2.7408, -3.1743, -3.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4707, device='cuda:0', dtype=torch.float64)
tensor([-1.9191, -2.7299, -2.7397, -3.1753, -3.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1190, device='cuda:0', dtype=torch.float64)
tensor([-1.9099, -2.7357, -2.7425, -3.1787, -3.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4873, device='cuda:0', dtype=torch.float64)
tensor([-1.8957, -2.7486, -2.7478, -3.1722, -3.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2717, device='cuda:0', dtype=torch.float64)
tensor([-1.8821, -2.7557, -2.7637, -3.1683, -3.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0858, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.7589, -2.7784, -3.1684, -3.2122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4599, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.7530, -2.7927, -3.1707, -3.2080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1588, device='cuda:0', dtype=torch.float64)
tensor([-1.8710, -2.7373, -2.8003, -3.1769, -3.1980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3728, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.7152, -2.8008, -3.1644, -3.1927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5532, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.7021, -2.7917, -3.1585, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5907, device='cuda:0', dtype=torch.float64)
tensor([-1.8846, -2.6904, -2.7876, -3.1579, -3.1809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5313, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.6992, -2.7701, -3.1478, -3.1927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4445, device='cuda:0', dtype=torch.float64)
tensor([-1.9117, -2.7160, -2.7570, -3.1283, -3.2099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7856, device='cuda:0', dtype=torch.float64)
tensor([-1.8975, -2.7115, -2.7588, -3.1308, -3.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2737, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.6972, -2.7739, -3.1478, -3.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2260, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.6801, -2.7933, -3.1612, -3.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3455, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.6681, -2.8123, -3.1648, -3.2529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3972, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.6671, -2.8179, -3.1567, -3.2555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6042, device='cuda:0', dtype=torch.float64)
tensor([-1.8749, -2.6774, -2.8073, -3.1514, -3.2600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4159, device='cuda:0', dtype=torch.float64)
tensor([-1.8989, -2.6972, -2.7955, -3.1463, -3.2599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3376, device='cuda:0', dtype=torch.float64)
tensor([-1.9108, -2.7147, -2.7861, -3.1443, -3.2526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3394, device='cuda:0', dtype=torch.float64)
tensor([-1.9063, -2.7215, -2.7896, -3.1570, -3.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4172, device='cuda:0', dtype=torch.float64)
tensor([-1.8984, -2.7256, -2.7939, -3.1700, -3.2337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5861, device='cuda:0', dtype=torch.float64)
tensor([-1.8919, -2.7408, -2.7984, -3.1646, -3.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4385, device='cuda:0', dtype=torch.float64)
tensor([-1.8760, -2.7429, -2.8136, -3.1745, -3.2100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3758, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7234, -2.8339, -3.1825, -3.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4159, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7076, -2.8443, -3.1793, -3.1943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1991, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.7043, -2.8354, -3.1727, -3.2074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4428, device='cuda:0', dtype=torch.float64)
tensor([-1.8657, -2.7096, -2.8125, -3.1726, -3.2313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6326, device='cuda:0', dtype=torch.float64)
tensor([-1.8853, -2.7037, -2.8024, -3.1591, -3.2416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4317, device='cuda:0', dtype=torch.float64)
tensor([-1.9018, -2.6967, -2.7979, -3.1580, -3.2518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2369, device='cuda:0', dtype=torch.float64)
tensor([-1.9109, -2.6916, -2.7978, -3.1607, -3.2606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5737, device='cuda:0', dtype=torch.float64)
tensor([-1.9237, -2.7022, -2.7877, -3.1792, -3.2659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9200, device='cuda:0', dtype=torch.float64)
tensor([-1.9117, -2.7006, -2.7726, -3.1646, -3.2555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5203, device='cuda:0', dtype=torch.float64)
tensor([-1.9026, -2.7146, -2.7612, -3.1410, -3.2429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5747, device='cuda:0', dtype=torch.float64)
tensor([-1.9020, -2.7394, -2.7501, -3.1108, -3.2280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5707, device='cuda:0', dtype=torch.float64)
tensor([-1.8967, -2.7495, -2.7562, -3.0983, -3.2138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7713, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.7360, -2.7854, -3.1139, -3.1923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6341, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.7232, -2.8073, -3.1213, -3.1786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4208, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.7305, -2.8154, -3.1297, -3.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6231, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.7179, -2.8251, -3.1280, -3.1906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6252, device='cuda:0', dtype=torch.float64)
tensor([-1.8737, -2.7004, -2.8265, -3.1454, -3.1958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5347, device='cuda:0', dtype=torch.float64)
tensor([-1.8848, -2.6956, -2.8092, -3.1436, -3.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7332, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -2.7063, -2.7958, -3.1492, -3.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8217, device='cuda:0', dtype=torch.float64)
tensor([-1.8942, -2.7000, -2.8015, -3.1917, -3.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5564, device='cuda:0', dtype=torch.float64)
tensor([-1.8844, -2.6925, -2.8149, -3.2398, -3.2124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9596, device='cuda:0', dtype=torch.float64)
tensor([-1.8908, -2.7134, -2.8050, -3.2064, -3.2186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7409, device='cuda:0', dtype=torch.float64)
tensor([-1.9059, -2.7473, -2.8004, -3.2029, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9523, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7447, -2.8117, -3.1760, -3.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6331, device='cuda:0', dtype=torch.float64)
tensor([-1.8775, -2.7452, -2.8259, -3.1836, -3.2574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1257, device='cuda:0', dtype=torch.float64)
tensor([-1.8814, -2.7466, -2.8080, -3.1490, -3.2737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6172, device='cuda:0', dtype=torch.float64)
tensor([-1.8868, -2.7480, -2.7972, -3.1560, -3.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5654, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.7311, -2.8059, -3.1490, -3.2693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2915, device='cuda:0', dtype=torch.float64)
tensor([-1.8817, -2.7254, -2.8115, -3.1594, -3.2668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4948, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.7242, -2.8067, -3.1564, -3.2642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3963, device='cuda:0', dtype=torch.float64)
tensor([-1.9046, -2.7378, -2.8084, -3.1902, -3.2649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2589, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.7224, -2.8296, -3.2119, -3.2279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4966, device='cuda:0', dtype=torch.float64)
tensor([-1.8679, -2.7123, -2.8437, -3.2687, -3.2075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7353, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.7169, -2.8428, -3.2903, -3.2040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4714, device='cuda:0', dtype=torch.float64)
tensor([-1.8687, -2.7292, -2.8386, -3.3090, -3.2115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5567, device='cuda:0', dtype=torch.float64)
tensor([-1.8869, -2.7423, -2.8180, -3.2873, -3.2207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2417, device='cuda:0', dtype=torch.float64)
tensor([-1.8946, -2.7384, -2.7957, -3.2456, -3.2221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4164, device='cuda:0', dtype=torch.float64)
tensor([-1.8981, -2.7290, -2.7743, -3.2052, -3.2183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4553, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.7197, -2.7529, -3.1708, -3.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5167, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.7165, -2.7426, -3.1530, -3.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6189, device='cuda:0', dtype=torch.float64)
tensor([-1.8978, -2.7100, -2.7468, -3.1372, -3.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5623, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.6975, -2.7663, -3.1422, -3.1791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8643, device='cuda:0', dtype=torch.float64)
tensor([-1.9032, -2.7048, -2.7658, -3.1382, -3.1824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3563, device='cuda:0', dtype=torch.float64)
tensor([-1.9241, -2.7291, -2.7670, -3.1648, -3.2078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7233, device='cuda:0', dtype=torch.float64)
tensor([-1.9110, -2.7214, -2.7893, -3.1806, -3.1981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5820, device='cuda:0', dtype=torch.float64)
tensor([-1.8916, -2.7120, -2.8163, -3.2399, -3.1991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5264, device='cuda:0', dtype=torch.float64)
tensor([-1.8932, -2.7238, -2.7977, -3.1913, -3.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5640, device='cuda:0', dtype=torch.float64)
tensor([-1.8949, -2.7289, -2.7846, -3.1844, -3.2426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0952, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.7008, -2.7950, -3.1390, -3.2414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4855, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.6998, -2.8034, -3.1413, -3.2530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3203, device='cuda:0', dtype=torch.float64)
tensor([-1.8641, -2.7100, -2.7711, -3.0879, -3.2762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6101, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.6907, -2.7801, -3.1186, -3.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8618, device='cuda:0', dtype=torch.float64)
tensor([-1.8083, -2.6643, -2.8140, -3.1812, -3.2076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5145, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6700, -2.8194, -3.1814, -3.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3465, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.7175, -2.7930, -3.1259, -3.2099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3733, device='cuda:0', dtype=torch.float64)
tensor([-1.9048, -2.7268, -2.8005, -3.1152, -3.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0106, device='cuda:0', dtype=torch.float64)
tensor([-1.9059, -2.7213, -2.8324, -3.1601, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1648, device='cuda:0', dtype=torch.float64)
tensor([-1.9213, -2.7212, -2.8314, -3.1235, -3.1998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2392, device='cuda:0', dtype=torch.float64)
tensor([-1.9465, -2.7431, -2.8182, -3.1368, -3.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2527, device='cuda:0', dtype=torch.float64)
tensor([-1.9345, -2.7315, -2.8237, -3.1227, -3.2358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3166, device='cuda:0', dtype=torch.float64)
tensor([-1.9310, -2.7445, -2.8204, -3.1511, -3.2455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8723, device='cuda:0', dtype=torch.float64)
tensor([-1.9352, -2.7528, -2.7891, -3.1344, -3.2553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4323, device='cuda:0', dtype=torch.float64)
tensor([-1.9150, -2.7426, -2.7787, -3.1591, -3.2482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2063, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6854, -2.7957, -3.2008, -3.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6631, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6599, -2.8055, -3.2385, -3.1923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3636, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6777, -2.7844, -3.2050, -3.2040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7565, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6974, -2.7784, -3.1934, -3.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6111, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.7039, -2.8022, -3.2047, -3.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6535, device='cuda:0', dtype=torch.float64)
tensor([-1.8743, -2.7123, -2.8155, -3.2182, -3.2035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8681, device='cuda:0', dtype=torch.float64)
tensor([-1.9011, -2.7164, -2.8106, -3.2020, -3.2021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5124, device='cuda:0', dtype=torch.float64)
tensor([-1.9323, -2.7246, -2.8056, -3.1956, -3.2115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1387, device='cuda:0', dtype=torch.float64)
tensor([-1.9365, -2.6941, -2.8081, -3.1549, -3.1999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7396, device='cuda:0', dtype=torch.float64)
tensor([-1.9481, -2.6981, -2.7921, -3.1197, -3.2050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4044, device='cuda:0', dtype=torch.float64)
tensor([-1.9610, -2.7202, -2.7677, -3.0802, -3.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9552, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.7149, -2.7646, -3.0905, -3.2147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7567, device='cuda:0', dtype=torch.float64)
tensor([-1.9030, -2.6980, -2.7773, -3.1282, -3.1935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2671, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.6841, -2.8030, -3.2112, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7260, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6879, -2.8113, -3.2482, -3.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6220, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.7124, -2.8057, -3.2441, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6813, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.7312, -2.8010, -3.2115, -3.1962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6212, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -2.7361, -2.8024, -3.1964, -3.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7097, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.7387, -2.7956, -3.1555, -3.2225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5002, device='cuda:0', dtype=torch.float64)
tensor([-1.8884, -2.7334, -2.7982, -3.1514, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8291, device='cuda:0', dtype=torch.float64)
tensor([-1.8926, -2.7075, -2.8108, -3.1794, -3.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6883, device='cuda:0', dtype=torch.float64)
tensor([-1.9022, -2.6968, -2.8212, -3.1964, -3.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5938, device='cuda:0', dtype=torch.float64)
tensor([-1.9116, -2.7077, -2.8195, -3.1963, -3.2263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4485, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.7152, -2.8176, -3.2122, -3.2291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3750, device='cuda:0', dtype=torch.float64)
tensor([-1.8824, -2.7161, -2.8270, -3.2335, -3.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5739, device='cuda:0', dtype=torch.float64)
tensor([-1.8733, -2.7152, -2.8333, -3.2313, -3.2272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7209, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.7224, -2.8282, -3.2174, -3.2245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4782, device='cuda:0', dtype=torch.float64)
tensor([-1.9014, -2.7353, -2.8104, -3.1899, -3.2226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5655, device='cuda:0', dtype=torch.float64)
tensor([-1.9147, -2.7358, -2.7964, -3.1800, -3.2165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8591, device='cuda:0', dtype=torch.float64)
tensor([-1.9195, -2.7254, -2.7854, -3.1767, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4194, device='cuda:0', dtype=torch.float64)
tensor([-1.9268, -2.7213, -2.7659, -3.1662, -3.1860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7841, device='cuda:0', dtype=torch.float64)
tensor([-1.9476, -2.7329, -2.7411, -3.1363, -3.1971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7766, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.7306, -2.7417, -3.1159, -3.2082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7542, device='cuda:0', dtype=torch.float64)
tensor([-1.9185, -2.7144, -2.7603, -3.1376, -3.2049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6434, device='cuda:0', dtype=torch.float64)
tensor([-1.8910, -2.6927, -2.7778, -3.1670, -3.2096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2282, device='cuda:0', dtype=torch.float64)
tensor([-1.8575, -2.6764, -2.8115, -3.2017, -3.2104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5574, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6641, -2.8325, -3.2141, -3.2121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3290, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6616, -2.8296, -3.2095, -3.2123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6925, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.6892, -2.7986, -3.1721, -3.2253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3899, device='cuda:0', dtype=torch.float64)
tensor([-1.9115, -2.7379, -2.7661, -3.1568, -3.2551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9767, device='cuda:0', dtype=torch.float64)
tensor([-1.9286, -2.7482, -2.7583, -3.1415, -3.2569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4400, device='cuda:0', dtype=torch.float64)
tensor([-1.9231, -2.7454, -2.7675, -3.1695, -3.2627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8268, device='cuda:0', dtype=torch.float64)
tensor([-1.9262, -2.7418, -2.7820, -3.1631, -3.2631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4800, device='cuda:0', dtype=torch.float64)
tensor([-1.9353, -2.7436, -2.7927, -3.1585, -3.2650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5871, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.7180, -2.8139, -3.1611, -3.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5096, device='cuda:0', dtype=torch.float64)
tensor([-1.8892, -2.6836, -2.8330, -3.1921, -3.2409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5365, device='cuda:0', dtype=torch.float64)
tensor([-1.8773, -2.6742, -2.8333, -3.1694, -3.2309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3638, device='cuda:0', dtype=torch.float64)
tensor([-1.8818, -2.6765, -2.8232, -3.1254, -3.2233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7653, device='cuda:0', dtype=torch.float64)
tensor([-1.8778, -2.6808, -2.8304, -3.1257, -3.2075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6330, device='cuda:0', dtype=torch.float64)
tensor([-1.8738, -2.6898, -2.8392, -3.1575, -3.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9788, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -2.7167, -2.8287, -3.1424, -3.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4873, device='cuda:0', dtype=torch.float64)
tensor([-1.9026, -2.7470, -2.8193, -3.1448, -3.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7590, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.7322, -2.8214, -3.1453, -3.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3485, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.7214, -2.8241, -3.1540, -3.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6211, device='cuda:0', dtype=torch.float64)
tensor([-1.8959, -2.7251, -2.8006, -3.1408, -3.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4578, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.7376, -2.7706, -3.1356, -3.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6744, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.7258, -2.7689, -3.1484, -3.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7146, device='cuda:0', dtype=torch.float64)
tensor([-1.9307, -2.7004, -2.7851, -3.1924, -3.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8598, device='cuda:0', dtype=torch.float64)
tensor([-1.9198, -2.6835, -2.7887, -3.1843, -3.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3446, device='cuda:0', dtype=torch.float64)
tensor([-1.8981, -2.6737, -2.7990, -3.1927, -3.2173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7112, device='cuda:0', dtype=torch.float64)
tensor([-1.8693, -2.6604, -2.8072, -3.1596, -3.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4937, device='cuda:0', dtype=torch.float64)
tensor([-1.8720, -2.6789, -2.8004, -3.1279, -3.2262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7096, device='cuda:0', dtype=torch.float64)
tensor([-1.9015, -2.7248, -2.7762, -3.0706, -3.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4867, device='cuda:0', dtype=torch.float64)
tensor([-1.9215, -2.7549, -2.7676, -3.0561, -3.2588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5306, device='cuda:0', dtype=torch.float64)
tensor([-1.9187, -2.7609, -2.7746, -3.0932, -3.2560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4170, device='cuda:0', dtype=torch.float64)
tensor([-1.9107, -2.7601, -2.7792, -3.1464, -3.2591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9814, device='cuda:0', dtype=torch.float64)
tensor([-1.9112, -2.7581, -2.7707, -3.1649, -3.2747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3999, device='cuda:0', dtype=torch.float64)
tensor([-1.8993, -2.7558, -2.7687, -3.2024, -3.3030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0601, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.6984, -2.8014, -3.2455, -3.2788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3930, device='cuda:0', dtype=torch.float64)
tensor([-1.8156, -2.6745, -2.8357, -3.2904, -3.2630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2762, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6857, -2.8262, -3.2269, -3.2722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5099, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6822, -2.8441, -3.2204, -3.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7489, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.6911, -2.8653, -3.2398, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0731, device='cuda:0', dtype=torch.float64)
tensor([-1.8844, -2.7094, -2.8469, -3.2072, -3.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4094, device='cuda:0', dtype=torch.float64)
tensor([-1.9586, -2.7469, -2.8010, -3.1538, -3.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1298, device='cuda:0', dtype=torch.float64)
tensor([-1.9779, -2.7456, -2.7712, -3.0909, -3.1648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2475, device='cuda:0', dtype=torch.float64)
tensor([-1.9694, -2.7296, -2.7572, -3.0998, -3.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7334, device='cuda:0', dtype=torch.float64)
tensor([-1.9456, -2.7169, -2.7473, -3.0974, -3.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3493, device='cuda:0', dtype=torch.float64)
tensor([-1.9333, -2.7247, -2.7391, -3.0937, -3.1793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7820, device='cuda:0', dtype=torch.float64)
tensor([-1.9153, -2.7389, -2.7486, -3.1109, -3.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7420, device='cuda:0', dtype=torch.float64)
tensor([-1.8720, -2.7381, -2.7856, -3.1490, -3.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5005, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.7476, -2.8122, -3.2047, -3.1909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9418, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.7745, -2.7991, -3.1930, -3.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6435, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7666, -2.8022, -3.1932, -3.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8373, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.7166, -2.8011, -3.1862, -3.2033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3190, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.6888, -2.7912, -3.1866, -3.2012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8108, device='cuda:0', dtype=torch.float64)
tensor([-1.8986, -2.6860, -2.7630, -3.1479, -3.2061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6268, device='cuda:0', dtype=torch.float64)
tensor([-1.9213, -2.6980, -2.7512, -3.1327, -3.2072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9440, device='cuda:0', dtype=torch.float64)
tensor([-1.9284, -2.6974, -2.7661, -3.1496, -3.1983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2687, device='cuda:0', dtype=torch.float64)
tensor([-1.9421, -2.7069, -2.7779, -3.1618, -3.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5640, device='cuda:0', dtype=torch.float64)
tensor([-1.9447, -2.7208, -2.7859, -3.1437, -3.2334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2453, device='cuda:0', dtype=torch.float64)
tensor([-1.9209, -2.7185, -2.8017, -3.1352, -3.2613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3802, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.7008, -2.8165, -3.1438, -3.2746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7161, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.7074, -2.8379, -3.1758, -3.2765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5463, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7184, -2.8365, -3.1821, -3.2817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2956, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.7247, -2.8222, -3.1917, -3.2774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5956, device='cuda:0', dtype=torch.float64)
tensor([-1.8753, -2.7035, -2.8180, -3.1840, -3.2555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6761, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.6857, -2.8168, -3.1844, -3.2245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6349, device='cuda:0', dtype=torch.float64)
tensor([-1.8895, -2.6770, -2.8045, -3.1757, -3.2053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4404, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.6787, -2.7957, -3.1711, -3.1889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3161, device='cuda:0', dtype=torch.float64)
tensor([-1.8773, -2.6895, -2.7917, -3.1900, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7028, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.7153, -2.7726, -3.1761, -3.1846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6316, device='cuda:0', dtype=torch.float64)
tensor([-1.9098, -2.7366, -2.7685, -3.1879, -3.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7062, device='cuda:0', dtype=torch.float64)
tensor([-1.9069, -2.7345, -2.7830, -3.2300, -3.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3955, device='cuda:0', dtype=torch.float64)
tensor([-1.9142, -2.7382, -2.7972, -3.2572, -3.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6088, device='cuda:0', dtype=torch.float64)
tensor([-1.9342, -2.7621, -2.7977, -3.2538, -3.2113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7750, device='cuda:0', dtype=torch.float64)
tensor([-1.9598, -2.7903, -2.7850, -3.2390, -3.2366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4081, device='cuda:0', dtype=torch.float64)
tensor([-1.9526, -2.7805, -2.7895, -3.2083, -3.2438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4049, device='cuda:0', dtype=torch.float64)
tensor([-1.9114, -2.7415, -2.8101, -3.2002, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5775, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.7291, -2.8034, -3.1924, -3.2364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5788, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7136, -2.8034, -3.2312, -3.2359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9070, device='cuda:0', dtype=torch.float64)
tensor([-1.8077, -2.6914, -2.8214, -3.2023, -3.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4542, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6859, -2.8090, -3.1811, -3.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9215, device='cuda:0', dtype=torch.float64)
tensor([-1.8574, -2.6914, -2.7786, -3.1306, -3.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7231, device='cuda:0', dtype=torch.float64)
tensor([-1.8970, -2.6934, -2.7596, -3.1113, -3.2022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8355, device='cuda:0', dtype=torch.float64)
tensor([-1.9227, -2.6870, -2.7559, -3.1173, -3.1901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5329, device='cuda:0', dtype=torch.float64)
tensor([-1.9463, -2.6878, -2.7463, -3.1282, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5385, device='cuda:0', dtype=torch.float64)
tensor([-1.9579, -2.6953, -2.7460, -3.1416, -3.2033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5766, device='cuda:0', dtype=torch.float64)
tensor([-1.9513, -2.7024, -2.7534, -3.1667, -3.2203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1928, device='cuda:0', dtype=torch.float64)
tensor([-1.9379, -2.7135, -2.7493, -3.1862, -3.2375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8669, device='cuda:0', dtype=torch.float64)
tensor([-1.9083, -2.7133, -2.7697, -3.2052, -3.2494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7620, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7227, -2.7839, -3.2110, -3.2689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4374, device='cuda:0', dtype=torch.float64)
tensor([-1.9013, -2.7649, -2.7665, -3.1681, -3.2755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5409, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7861, -2.7775, -3.1720, -3.2729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7156, device='cuda:0', dtype=torch.float64)
tensor([-1.8814, -2.7637, -2.7922, -3.1288, -3.2459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9093, device='cuda:0', dtype=torch.float64)
tensor([-1.8891, -2.7521, -2.8126, -3.1245, -3.2361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2999, device='cuda:0', dtype=torch.float64)
tensor([-1.9193, -2.7450, -2.8118, -3.1030, -3.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4101, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.7391, -2.8186, -3.1226, -3.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2476, device='cuda:0', dtype=torch.float64)
tensor([-1.9113, -2.6939, -2.8474, -3.1409, -3.2286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7688, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.6701, -2.8923, -3.2242, -3.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5007, device='cuda:0', dtype=torch.float64)
tensor([-1.8808, -2.6708, -2.8794, -3.1884, -3.2236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4221, device='cuda:0', dtype=torch.float64)
tensor([-1.8871, -2.7042, -2.8651, -3.1864, -3.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2269, device='cuda:0', dtype=torch.float64)
tensor([-1.8758, -2.7074, -2.8620, -3.1577, -3.2130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4526, device='cuda:0', dtype=torch.float64)
tensor([-1.8925, -2.7429, -2.8518, -3.1571, -3.2221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0103, device='cuda:0', dtype=torch.float64)
tensor([-1.9303, -2.7804, -2.8102, -3.1069, -3.2268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5027, device='cuda:0', dtype=torch.float64)
tensor([-1.9631, -2.8080, -2.7731, -3.1154, -3.2320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6963, device='cuda:0', dtype=torch.float64)
tensor([-1.9582, -2.8014, -2.7555, -3.1295, -3.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3986, device='cuda:0', dtype=torch.float64)
tensor([-1.9447, -2.7730, -2.7482, -3.1733, -3.2200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3720, device='cuda:0', dtype=torch.float64)
tensor([-1.9218, -2.7284, -2.7523, -3.2183, -3.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6467, device='cuda:0', dtype=torch.float64)
tensor([-1.8976, -2.6997, -2.7718, -3.2595, -3.2201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8864, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6505, -2.8044, -3.2769, -3.1887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6841, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6261, -2.8229, -3.2693, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6659, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6396, -2.8224, -3.2309, -3.1448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5592, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.6829, -2.7906, -3.1900, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7149, device='cuda:0', dtype=torch.float64)
tensor([-1.9123, -2.7126, -2.7706, -3.1597, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6923, device='cuda:0', dtype=torch.float64)
tensor([-1.9490, -2.7495, -2.7643, -3.1404, -3.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6940, device='cuda:0', dtype=torch.float64)
tensor([-1.9852, -2.7948, -2.7512, -3.1184, -3.2161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5119, device='cuda:0', dtype=torch.float64)
tensor([-1.9989, -2.8207, -2.7470, -3.1262, -3.2518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8745, device='cuda:0', dtype=torch.float64)
tensor([-1.9653, -2.7943, -2.7884, -3.1583, -3.2520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6288, device='cuda:0', dtype=torch.float64)
tensor([-1.9251, -2.7519, -2.8216, -3.1865, -3.2540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6562, device='cuda:0', dtype=torch.float64)
tensor([-1.9055, -2.7267, -2.8284, -3.1811, -3.2619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5660, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.7002, -2.8370, -3.1651, -3.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6444, device='cuda:0', dtype=torch.float64)
tensor([-1.8601, -2.6859, -2.8331, -3.1585, -3.2629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7345, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.6790, -2.8342, -3.1770, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6298, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6715, -2.8452, -3.2118, -3.2137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6377, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.6788, -2.8335, -3.1986, -3.1945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7943, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.6873, -2.8178, -3.1939, -3.1846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5335, device='cuda:0', dtype=torch.float64)
tensor([-1.9118, -2.6983, -2.8095, -3.1974, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5549, device='cuda:0', dtype=torch.float64)
tensor([-1.9465, -2.7080, -2.8084, -3.1944, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4506, device='cuda:0', dtype=torch.float64)
tensor([-1.9737, -2.7201, -2.8117, -3.1648, -3.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3584, device='cuda:0', dtype=torch.float64)
tensor([-1.9732, -2.7276, -2.8274, -3.1463, -3.1922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4102, device='cuda:0', dtype=torch.float64)
tensor([-1.9601, -2.7429, -2.8446, -3.1269, -3.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6570, device='cuda:0', dtype=torch.float64)
tensor([-1.9286, -2.7606, -2.8577, -3.1133, -3.1884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6672, device='cuda:0', dtype=torch.float64)
tensor([-1.9063, -2.7764, -2.8547, -3.1081, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7223, device='cuda:0', dtype=torch.float64)
tensor([-1.8955, -2.7876, -2.8315, -3.1093, -3.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6762, device='cuda:0', dtype=torch.float64)
tensor([-1.8819, -2.7710, -2.8254, -3.1311, -3.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5668, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.7441, -2.8172, -3.1556, -3.2286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6302, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.7163, -2.8084, -3.1559, -3.2484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3053, device='cuda:0', dtype=torch.float64)
tensor([-1.8821, -2.6941, -2.8065, -3.1624, -3.2619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8063, device='cuda:0', dtype=torch.float64)
tensor([-1.8941, -2.6958, -2.7987, -3.1547, -3.2708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6126, device='cuda:0', dtype=torch.float64)
tensor([-1.9125, -2.7231, -2.7878, -3.1525, -3.2843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4675, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.7632, -2.7808, -3.1377, -3.2958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4453, device='cuda:0', dtype=torch.float64)
tensor([-1.9506, -2.7828, -2.7877, -3.1379, -3.2924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3599, device='cuda:0', dtype=torch.float64)
tensor([-1.9419, -2.7813, -2.8056, -3.1544, -3.2806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2417, device='cuda:0', dtype=torch.float64)
tensor([-1.9114, -2.7451, -2.8257, -3.1757, -3.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4164, device='cuda:0', dtype=torch.float64)
tensor([-1.8728, -2.7063, -2.8510, -3.2021, -3.2141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5246, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.6839, -2.8483, -3.2035, -3.1916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5279, device='cuda:0', dtype=torch.float64)
tensor([-1.8811, -2.6779, -2.8217, -3.1896, -3.1784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5606, device='cuda:0', dtype=torch.float64)
tensor([-1.8989, -2.6777, -2.7990, -3.1915, -3.1759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5047, device='cuda:0', dtype=torch.float64)
tensor([-1.9147, -2.6848, -2.7828, -3.2063, -3.1761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6238, device='cuda:0', dtype=torch.float64)
tensor([-1.9220, -2.6923, -2.7740, -3.2324, -3.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0079, device='cuda:0', dtype=torch.float64)
tensor([-1.9367, -2.7113, -2.7620, -3.2136, -3.2074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6906, device='cuda:0', dtype=torch.float64)
tensor([-1.9482, -2.7307, -2.7646, -3.1916, -3.2271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6600, device='cuda:0', dtype=torch.float64)
tensor([-1.9237, -2.7207, -2.7997, -3.2182, -3.2243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8794, device='cuda:0', dtype=torch.float64)
tensor([-1.9006, -2.7136, -2.8275, -3.1969, -3.2289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6840, device='cuda:0', dtype=torch.float64)
tensor([-1.8906, -2.7061, -2.8376, -3.1499, -3.2328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6320, device='cuda:0', dtype=torch.float64)
tensor([-1.8919, -2.7158, -2.8408, -3.1603, -3.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9637, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.7061, -2.8529, -3.1857, -3.2209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6765, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.7064, -2.8485, -3.1888, -3.2147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6335, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.7195, -2.8165, -3.1597, -3.2189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5659, device='cuda:0', dtype=torch.float64)
tensor([-1.8970, -2.7440, -2.7777, -3.1165, -3.2402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7717, device='cuda:0', dtype=torch.float64)
tensor([-1.9082, -2.7436, -2.7623, -3.0819, -3.2418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9174, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.7456, -2.7480, -3.0643, -3.2511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9539, device='cuda:0', dtype=torch.float64)
tensor([-1.9328, -2.7406, -2.7373, -3.0563, -3.2612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-1.9290, -2.7364, -2.7416, -3.0774, -3.2594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7029, device='cuda:0', dtype=torch.float64)
tensor([-1.9154, -2.7396, -2.7632, -3.1147, -3.2472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7755, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.7551, -2.7726, -3.1329, -3.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5277, device='cuda:0', dtype=torch.float64)
tensor([-1.9384, -2.7823, -2.7766, -3.1449, -3.2383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8115, device='cuda:0', dtype=torch.float64)
tensor([-1.9318, -2.8019, -2.7899, -3.1976, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6760, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.8117, -2.7925, -3.2218, -3.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4982, device='cuda:0', dtype=torch.float64)
tensor([-1.9208, -2.7976, -2.7998, -3.2378, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4462, device='cuda:0', dtype=torch.float64)
tensor([-1.9074, -2.7673, -2.8036, -3.2253, -3.1696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3753, device='cuda:0', dtype=torch.float64)
tensor([-1.8894, -2.7200, -2.8110, -3.2002, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7698, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.6761, -2.8243, -3.1639, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6825, device='cuda:0', dtype=torch.float64)
tensor([-1.8782, -2.6633, -2.8249, -3.1228, -3.1917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9163, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.6502, -2.8219, -3.1086, -3.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4034, device='cuda:0', dtype=torch.float64)
tensor([-1.9006, -2.6529, -2.8147, -3.1069, -3.2260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3678, device='cuda:0', dtype=torch.float64)
tensor([-1.9122, -2.6624, -2.8133, -3.1083, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5890, device='cuda:0', dtype=torch.float64)
tensor([-1.9159, -2.6683, -2.8128, -3.1221, -3.2482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9991, device='cuda:0', dtype=torch.float64)
tensor([-1.9255, -2.6877, -2.8110, -3.1307, -3.2569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3757, device='cuda:0', dtype=torch.float64)
tensor([-1.9349, -2.7248, -2.8087, -3.1585, -3.2651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6866, device='cuda:0', dtype=torch.float64)
tensor([-1.9390, -2.7592, -2.8060, -3.1845, -3.2730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5008, device='cuda:0', dtype=torch.float64)
tensor([-1.9281, -2.7814, -2.8190, -3.2148, -3.2752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4652, device='cuda:0', dtype=torch.float64)
tensor([-1.9089, -2.7964, -2.8249, -3.2413, -3.2719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5274, device='cuda:0', dtype=torch.float64)
tensor([-1.9024, -2.8022, -2.8171, -3.2474, -3.2699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4018, device='cuda:0', dtype=torch.float64)
tensor([-1.8961, -2.7919, -2.8047, -3.2273, -3.2644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6983, device='cuda:0', dtype=torch.float64)
tensor([-1.8750, -2.7639, -2.7987, -3.2237, -3.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5338, device='cuda:0', dtype=torch.float64)
tensor([-1.8696, -2.7497, -2.7938, -3.1939, -3.2380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7684, device='cuda:0', dtype=torch.float64)
tensor([-1.8927, -2.7613, -2.7612, -3.1236, -3.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7237, device='cuda:0', dtype=torch.float64)
tensor([-1.9076, -2.7563, -2.7360, -3.1109, -3.2135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2381, device='cuda:0', dtype=torch.float64)
tensor([-1.8939, -2.7326, -2.7469, -3.1795, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4711, device='cuda:0', dtype=torch.float64)
tensor([-1.9210, -2.7290, -2.7329, -3.1614, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7862, device='cuda:0', dtype=torch.float64)
tensor([-1.9613, -2.7466, -2.7189, -3.1681, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7266, device='cuda:0', dtype=torch.float64)
tensor([-1.9864, -2.7552, -2.7278, -3.1848, -3.1846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7652, device='cuda:0', dtype=torch.float64)
tensor([-1.9680, -2.7393, -2.7699, -3.2322, -3.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7202, device='cuda:0', dtype=torch.float64)
tensor([-1.9382, -2.7091, -2.7996, -3.2390, -3.1754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1764, device='cuda:0', dtype=torch.float64)
tensor([-1.9251, -2.7084, -2.8000, -3.1860, -3.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9087, device='cuda:0', dtype=torch.float64)
tensor([-1.9135, -2.7022, -2.7963, -3.1422, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6810, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -2.7101, -2.7915, -3.1169, -3.2207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5745, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.7101, -2.7974, -3.1246, -3.2358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6977, device='cuda:0', dtype=torch.float64)
tensor([-1.8935, -2.7180, -2.7899, -3.1361, -3.2415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4255, device='cuda:0', dtype=torch.float64)
tensor([-1.8851, -2.7215, -2.7995, -3.1666, -3.2590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8477, device='cuda:0', dtype=torch.float64)
tensor([-1.8785, -2.7194, -2.8207, -3.1734, -3.2713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6926, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.7235, -2.8453, -3.1944, -3.2757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7820, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -2.7399, -2.8481, -3.1624, -3.2888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5016, device='cuda:0', dtype=torch.float64)
tensor([-1.9343, -2.7653, -2.8377, -3.1311, -3.3074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9406, device='cuda:0', dtype=torch.float64)
tensor([-1.9399, -2.7698, -2.8498, -3.1312, -3.3004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8628, device='cuda:0', dtype=torch.float64)
tensor([-1.9287, -2.7699, -2.8622, -3.1595, -3.2789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3190, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.7580, -2.8804, -3.1916, -3.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6730, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.7587, -2.8877, -3.1961, -3.2367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5123, device='cuda:0', dtype=torch.float64)
tensor([-1.8856, -2.7465, -2.8823, -3.1792, -3.2218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9252, device='cuda:0', dtype=torch.float64)
tensor([-1.8705, -2.7413, -2.8782, -3.1749, -3.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9360, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.7409, -2.8581, -3.1631, -3.2020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7545, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.7262, -2.8555, -3.1765, -3.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8017, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.7093, -2.8586, -3.2044, -3.1837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8725, device='cuda:0', dtype=torch.float64)
tensor([-1.8946, -2.7065, -2.8403, -3.1823, -3.1811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5939, device='cuda:0', dtype=torch.float64)
tensor([-1.9367, -2.7452, -2.8039, -3.2076, -3.1891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7640, device='cuda:0', dtype=torch.float64)
tensor([-1.9558, -2.7797, -2.7692, -3.1927, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0147, device='cuda:0', dtype=torch.float64)
tensor([-1.9531, -2.7871, -2.7605, -3.1785, -3.1790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8748, device='cuda:0', dtype=torch.float64)
tensor([-1.9464, -2.7891, -2.7556, -3.1652, -3.1822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9364, device='cuda:0', dtype=torch.float64)
tensor([-1.9394, -2.7926, -2.7574, -3.1705, -3.2021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7875, device='cuda:0', dtype=torch.float64)
tensor([-1.9057, -2.7561, -2.7937, -3.1615, -3.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8302, device='cuda:0', dtype=torch.float64)
tensor([-1.8710, -2.7106, -2.8420, -3.2030, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8522, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.6847, -2.8724, -3.2195, -3.1709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7797, device='cuda:0', dtype=torch.float64)
tensor([-1.8768, -2.6765, -2.8674, -3.2081, -3.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8229, device='cuda:0', dtype=torch.float64)
tensor([-1.8854, -2.6616, -2.8538, -3.3545, -3.1864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8778, device='cuda:0', dtype=torch.float64)
tensor([-1.8844, -2.6519, -2.8373, -3.1975, -3.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9563, device='cuda:0', dtype=torch.float64)
tensor([-1.9132, -2.6830, -2.8100, -3.1699, -3.1915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9583, device='cuda:0', dtype=torch.float64)
tensor([-1.9482, -2.7225, -2.7802, -3.1454, -3.2166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2017, device='cuda:0', dtype=torch.float64)
tensor([-1.9492, -2.7524, -2.7780, -3.1547, -3.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6698, device='cuda:0', dtype=torch.float64)
tensor([-1.8977, -2.7059, -2.8220, -3.1898, -3.1545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2525, device='cuda:0', dtype=torch.float64)
tensor([-1.8920, -2.6826, -2.8420, -3.2308, -3.1519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3906, device='cuda:0', dtype=torch.float64)
tensor([-1.9213, -2.6961, -2.8076, -3.1600, -3.1722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8677, device='cuda:0', dtype=torch.float64)
tensor([-1.9489, -2.7212, -2.7798, -3.1286, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3085, device='cuda:0', dtype=torch.float64)
tensor([-1.9154, -2.6908, -2.7891, -3.1486, -3.2058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2327, device='cuda:0', dtype=torch.float64)
tensor([-1.9014, -2.6854, -2.7785, -3.1319, -3.2076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3399, device='cuda:0', dtype=torch.float64)
tensor([-1.9175, -2.7191, -2.7538, -3.0788, -3.2104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6116, device='cuda:0', dtype=torch.float64)
tensor([-1.9275, -2.7850, -2.7564, -3.1088, -3.2344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8182, device='cuda:0', dtype=torch.float64)
tensor([-1.9031, -2.7312, -2.7748, -3.1040, -3.2196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6497, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.7504, -2.8086, -3.2182, -3.2154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2258, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.7565, -2.8080, -3.1746, -3.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4167, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.7497, -2.8144, -3.2071, -3.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2533, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7099, -2.8291, -3.2343, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7911, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7075, -2.8248, -3.2722, -3.1979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4517, device='cuda:0', dtype=torch.float64)
tensor([-1.9449, -2.7232, -2.7731, -3.1707, -3.2265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5654, device='cuda:0', dtype=torch.float64)
tensor([-2.0176, -2.7394, -2.7402, -3.1374, -3.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5311, device='cuda:0', dtype=torch.float64)
tensor([-2.0357, -2.7051, -2.7466, -3.1537, -3.2297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2860, device='cuda:0', dtype=torch.float64)
tensor([-2.0171, -2.6791, -2.7827, -3.2331, -3.2112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2199, device='cuda:0', dtype=torch.float64)
tensor([-2.0158, -2.6752, -2.7937, -3.2338, -3.2074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4331, device='cuda:0', dtype=torch.float64)
tensor([-2.0225, -2.7105, -2.7829, -3.2101, -3.2384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9294, device='cuda:0', dtype=torch.float64)
tensor([-2.0061, -2.7428, -2.7727, -3.1980, -3.2677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9907, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.7490, -2.7920, -3.2189, -3.2538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2440, device='cuda:0', dtype=torch.float64)
tensor([-1.8753, -2.7277, -2.8221, -3.2427, -3.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9915, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6943, -2.8345, -3.2591, -3.2061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7990, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.7045, -2.8466, -3.3820, -3.2053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9587, device='cuda:0', dtype=torch.float64)
tensor([-1.7996, -2.6871, -2.8775, -3.2719, -3.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9765, device='cuda:0', dtype=torch.float64)
tensor([-1.8665, -2.7163, -2.8326, -3.1760, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9372, device='cuda:0', dtype=torch.float64)
tensor([-1.9721, -2.7651, -2.7765, -3.0978, -3.2353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8856, device='cuda:0', dtype=torch.float64)
tensor([-2.0096, -2.7518, -2.7723, -3.0558, -3.2092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7593, device='cuda:0', dtype=torch.float64)
tensor([-1.9840, -2.7259, -2.7962, -3.0443, -3.1733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7930, device='cuda:0', dtype=torch.float64)
tensor([-1.9566, -2.7000, -2.8256, -3.0695, -3.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1171, device='cuda:0', dtype=torch.float64)
tensor([-1.9704, -2.6985, -2.8186, -3.0681, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8307, device='cuda:0', dtype=torch.float64)
tensor([-1.9635, -2.7155, -2.8395, -3.0807, -3.2024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0068, device='cuda:0', dtype=torch.float64)
tensor([-1.9280, -2.7034, -2.8777, -3.0965, -3.2024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6636, device='cuda:0', dtype=torch.float64)
tensor([-1.8970, -2.6968, -2.9001, -3.1547, -3.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0198, device='cuda:0', dtype=torch.float64)
tensor([-1.8918, -2.7113, -2.9031, -3.1670, -3.2334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7790, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -2.7338, -2.9232, -3.1726, -3.2544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6851, device='cuda:0', dtype=torch.float64)
tensor([-1.8952, -2.7263, -2.9027, -3.1905, -3.2528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6995, device='cuda:0', dtype=torch.float64)
tensor([-1.9057, -2.7457, -2.8671, -3.1999, -3.2529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6496, device='cuda:0', dtype=torch.float64)
tensor([-1.9112, -2.7726, -2.8208, -3.1987, -3.2521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9800, device='cuda:0', dtype=torch.float64)
tensor([-1.9468, -2.8138, -2.7653, -3.1560, -3.2709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0912, device='cuda:0', dtype=torch.float64)
tensor([-1.9471, -2.8030, -2.7496, -3.1611, -3.2522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4359, device='cuda:0', dtype=torch.float64)
tensor([-1.9345, -2.7802, -2.7552, -3.1966, -3.2304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5594, device='cuda:0', dtype=torch.float64)
tensor([-1.9270, -2.7594, -2.7560, -3.1900, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6724, device='cuda:0', dtype=torch.float64)
tensor([-1.9253, -2.7411, -2.7594, -3.1589, -3.2159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7662, device='cuda:0', dtype=torch.float64)
tensor([-1.9313, -2.7281, -2.7636, -3.1385, -3.2271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8297, device='cuda:0', dtype=torch.float64)
tensor([-1.9156, -2.7073, -2.7865, -3.1430, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8625, device='cuda:0', dtype=torch.float64)
tensor([-1.8936, -2.7018, -2.8080, -3.1684, -3.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8834, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.7256, -2.8004, -3.1690, -3.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9655, device='cuda:0', dtype=torch.float64)
tensor([-1.9301, -2.7457, -2.7874, -3.1734, -3.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6699, device='cuda:0', dtype=torch.float64)
tensor([-1.9407, -2.7575, -2.7698, -3.1657, -3.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5131, device='cuda:0', dtype=torch.float64)
tensor([-1.9382, -2.7681, -2.7552, -3.1586, -3.2105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7898, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.7690, -2.7458, -3.1613, -3.2065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7986, device='cuda:0', dtype=torch.float64)
tensor([-1.9155, -2.7659, -2.7546, -3.1890, -3.2015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9511, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.7562, -2.7812, -3.2036, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8240, device='cuda:0', dtype=torch.float64)
tensor([-1.9061, -2.7564, -2.8039, -3.2067, -3.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9445, device='cuda:0', dtype=torch.float64)
tensor([-1.9325, -2.7423, -2.8211, -3.2217, -3.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0462, device='cuda:0', dtype=torch.float64)
tensor([-1.9359, -2.7086, -2.8433, -3.2139, -3.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7373, device='cuda:0', dtype=torch.float64)
tensor([-1.9600, -2.7038, -2.8413, -3.2136, -3.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7854, device='cuda:0', dtype=torch.float64)
tensor([-1.9698, -2.7151, -2.8344, -3.2245, -3.1959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6897, device='cuda:0', dtype=torch.float64)
tensor([-1.9719, -2.7207, -2.8292, -3.2337, -3.1850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9912, device='cuda:0', dtype=torch.float64)
tensor([-1.9686, -2.7261, -2.8240, -3.2361, -3.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5513, device='cuda:0', dtype=torch.float64)
tensor([-1.9439, -2.7149, -2.8392, -3.2564, -3.1973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1084, device='cuda:0', dtype=torch.float64)
tensor([-1.9324, -2.7096, -2.8515, -3.2399, -3.2306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7139, device='cuda:0', dtype=torch.float64)
tensor([-1.9154, -2.7025, -2.8775, -3.1957, -3.2565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2019, device='cuda:0', dtype=torch.float64)
tensor([-1.9196, -2.7176, -2.8723, -3.1498, -3.2860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0563, device='cuda:0', dtype=torch.float64)
tensor([-1.9348, -2.7436, -2.8595, -3.1252, -3.3137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4948, device='cuda:0', dtype=torch.float64)
tensor([-1.9329, -2.7626, -2.8595, -3.1392, -3.3126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6538, device='cuda:0', dtype=torch.float64)
tensor([-1.9390, -2.7823, -2.8649, -3.1799, -3.3059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9395, device='cuda:0', dtype=torch.float64)
tensor([-1.9579, -2.8107, -2.8499, -3.1959, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7673, device='cuda:0', dtype=torch.float64)
tensor([-1.9599, -2.8286, -2.8077, -3.2042, -3.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6941, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.8096, -2.7997, -3.1799, -3.2726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6662, device='cuda:0', dtype=torch.float64)
tensor([-1.9022, -2.7859, -2.8170, -3.1454, -3.2590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8174, device='cuda:0', dtype=torch.float64)
tensor([-1.9049, -2.7681, -2.8289, -3.1395, -3.2630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7445, device='cuda:0', dtype=torch.float64)
tensor([-1.9092, -2.7504, -2.8540, -3.1670, -3.2656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7876, device='cuda:0', dtype=torch.float64)
tensor([-1.8997, -2.7224, -2.8850, -3.0826, -3.2440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6465, device='cuda:0', dtype=torch.float64)
tensor([-1.8898, -2.7121, -2.9169, -3.1142, -3.2246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9504, device='cuda:0', dtype=torch.float64)
tensor([-1.8954, -2.7129, -2.9261, -3.1226, -3.2084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7955, device='cuda:0', dtype=torch.float64)
tensor([-1.9109, -2.7134, -2.9299, -3.1452, -3.2127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7947, device='cuda:0', dtype=torch.float64)
tensor([-1.8949, -2.6825, -2.9333, -3.1491, -3.1822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9934, device='cuda:0', dtype=torch.float64)
tensor([-1.8980, -2.6701, -2.9216, -3.1675, -3.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6369, device='cuda:0', dtype=torch.float64)
tensor([-1.9182, -2.6706, -2.8976, -3.1796, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4923, device='cuda:0', dtype=torch.float64)
tensor([-1.9555, -2.6928, -2.8715, -3.1781, -3.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6853, device='cuda:0', dtype=torch.float64)
tensor([-1.9983, -2.7373, -2.8299, -3.1539, -3.1948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8289, device='cuda:0', dtype=torch.float64)
tensor([-2.0209, -2.7775, -2.8071, -3.1568, -3.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9595, device='cuda:0', dtype=torch.float64)
tensor([-1.9967, -2.7696, -2.8114, -3.2106, -3.1945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7390, device='cuda:0', dtype=torch.float64)
tensor([-1.9735, -2.7588, -2.8156, -3.2449, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7764, device='cuda:0', dtype=torch.float64)
tensor([-1.9510, -2.7347, -2.8250, -3.2457, -3.1875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9140, device='cuda:0', dtype=torch.float64)
tensor([-1.9294, -2.7129, -2.8341, -3.2324, -3.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9550, device='cuda:0', dtype=torch.float64)
tensor([-1.9017, -2.6736, -2.8530, -3.2406, -3.2116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3959, device='cuda:0', dtype=torch.float64)
tensor([-1.8946, -2.6583, -2.8519, -3.2329, -3.2304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1424, device='cuda:0', dtype=torch.float64)
tensor([-1.9237, -2.6856, -2.8287, -3.1908, -3.2663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1176, device='cuda:0', dtype=torch.float64)
tensor([-1.9520, -2.7177, -2.8255, -3.1771, -3.2958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6338, device='cuda:0', dtype=torch.float64)
tensor([-1.9612, -2.7353, -2.8334, -3.1813, -3.3052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9861, device='cuda:0', dtype=torch.float64)
tensor([-1.9541, -2.7427, -2.8581, -3.1905, -3.2911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9367, device='cuda:0', dtype=torch.float64)
tensor([-1.9601, -2.7605, -2.8693, -3.1894, -3.2901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6077, device='cuda:0', dtype=torch.float64)
tensor([-1.9722, -2.7879, -2.8641, -3.2438, -3.2888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7672, device='cuda:0', dtype=torch.float64)
tensor([-1.9591, -2.7832, -2.8622, -3.3018, -3.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8044, device='cuda:0', dtype=torch.float64)
tensor([-1.9352, -2.7759, -2.8411, -3.2952, -3.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1807, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.7946, -2.7966, -3.2825, -3.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6896, device='cuda:0', dtype=torch.float64)
tensor([-1.9534, -2.8083, -2.7572, -3.2381, -3.2443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3244, device='cuda:0', dtype=torch.float64)
tensor([-1.9373, -2.8009, -2.7414, -3.2131, -3.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9227, device='cuda:0', dtype=torch.float64)
tensor([-1.9011, -2.7452, -2.7508, -3.2015, -3.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9119, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.7122, -2.7662, -3.1864, -3.2065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8938, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.7175, -2.7746, -3.1651, -3.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2285, device='cuda:0', dtype=torch.float64)
tensor([-1.9009, -2.7277, -2.7710, -3.1098, -3.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8070, device='cuda:0', dtype=torch.float64)
tensor([-1.9436, -2.7653, -2.7634, -3.0859, -3.1991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4919, device='cuda:0', dtype=torch.float64)
tensor([-1.9702, -2.8018, -2.7630, -3.0866, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6256, device='cuda:0', dtype=torch.float64)
tensor([-1.9671, -2.8132, -2.7836, -3.1206, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6798, device='cuda:0', dtype=torch.float64)
tensor([-1.9290, -2.7943, -2.8229, -3.1723, -3.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0181, device='cuda:0', dtype=torch.float64)
tensor([-1.9108, -2.7876, -2.8551, -3.1392, -3.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4786, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.7893, -2.8840, -3.1625, -3.1912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4815, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.7318, -2.9141, -3.1887, -3.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8239, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.7231, -2.9202, -3.2258, -3.1763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4417, device='cuda:0', dtype=torch.float64)
tensor([-1.9200, -2.7628, -2.8702, -3.1548, -3.1864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2692, device='cuda:0', dtype=torch.float64)
tensor([-1.9602, -2.7669, -2.8501, -3.1310, -3.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9714, device='cuda:0', dtype=torch.float64)
tensor([-1.9556, -2.7340, -2.8592, -3.2142, -3.2137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8313, device='cuda:0', dtype=torch.float64)
tensor([-1.9594, -2.7090, -2.8561, -3.1480, -3.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1889, device='cuda:0', dtype=torch.float64)
tensor([-1.9574, -2.6968, -2.8542, -3.0919, -3.2584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8770, device='cuda:0', dtype=torch.float64)
tensor([-1.9441, -2.7035, -2.8567, -3.1333, -3.2721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5939, device='cuda:0', dtype=torch.float64)
tensor([-1.9189, -2.7218, -2.8573, -3.1765, -3.2588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7890, device='cuda:0', dtype=torch.float64)
tensor([-1.9016, -2.7531, -2.8504, -3.2117, -3.2540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0469, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.8041, -2.8363, -3.2491, -3.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9678, device='cuda:0', dtype=torch.float64)
tensor([-1.9370, -2.8222, -2.8426, -3.2732, -3.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1809, device='cuda:0', dtype=torch.float64)
tensor([-1.9399, -2.8082, -2.8536, -3.2679, -3.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8981, device='cuda:0', dtype=torch.float64)
tensor([-1.9193, -2.7474, -2.8796, -3.2705, -3.2093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9567, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.6889, -2.9100, -3.2590, -3.2012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3302, device='cuda:0', dtype=torch.float64)
tensor([-1.9060, -2.6604, -2.9216, -3.2568, -3.2176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5301, device='cuda:0', dtype=torch.float64)
tensor([-1.9395, -2.6544, -2.9106, -3.2430, -3.2382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8078, device='cuda:0', dtype=torch.float64)
tensor([-1.9747, -2.6798, -2.8889, -3.2571, -3.2631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0990, device='cuda:0', dtype=torch.float64)
tensor([-2.0034, -2.7244, -2.8613, -3.2913, -3.2861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7808, device='cuda:0', dtype=torch.float64)
tensor([-2.0041, -2.7510, -2.8516, -3.3286, -3.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6105, device='cuda:0', dtype=torch.float64)
tensor([-1.9614, -2.7564, -2.8697, -3.4211, -3.2243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7564, device='cuda:0', dtype=torch.float64)
tensor([-1.9329, -2.7731, -2.8683, -3.4265, -3.2189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5510, device='cuda:0', dtype=torch.float64)
tensor([-1.9203, -2.7989, -2.8617, -3.3701, -3.2358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5840, device='cuda:0', dtype=torch.float64)
tensor([-1.9113, -2.7933, -2.8603, -3.2865, -3.2536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5457, device='cuda:0', dtype=torch.float64)
tensor([-1.8981, -2.7709, -2.8569, -3.2054, -3.2568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6118, device='cuda:0', dtype=torch.float64)
tensor([-1.8980, -2.7695, -2.8490, -3.1445, -3.2595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9044, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.7862, -2.8258, -3.0983, -3.2580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7974, device='cuda:0', dtype=torch.float64)
tensor([-1.9494, -2.8011, -2.8089, -3.0689, -3.2508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1893, device='cuda:0', dtype=torch.float64)
tensor([-1.9676, -2.8093, -2.8012, -3.0621, -3.2289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3794, device='cuda:0', dtype=torch.float64)
tensor([-1.9778, -2.8023, -2.8020, -3.0837, -3.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7910, device='cuda:0', dtype=torch.float64)
tensor([-1.9796, -2.7847, -2.8079, -3.1098, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7345, device='cuda:0', dtype=torch.float64)
tensor([-1.9545, -2.7429, -2.8250, -3.1632, -3.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4773, device='cuda:0', dtype=torch.float64)
tensor([-1.9221, -2.6902, -2.8415, -3.1992, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1151, device='cuda:0', dtype=torch.float64)
tensor([-1.9147, -2.6740, -2.8228, -3.1823, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5782, device='cuda:0', dtype=torch.float64)
tensor([-1.9063, -2.6700, -2.8213, -3.1670, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3962, device='cuda:0', dtype=torch.float64)
tensor([-1.9153, -2.6761, -2.8186, -3.1406, -3.1798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6730, device='cuda:0', dtype=torch.float64)
tensor([-1.9367, -2.6997, -2.8254, -3.1200, -3.1873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9261, device='cuda:0', dtype=torch.float64)
tensor([-1.9666, -2.7172, -2.8282, -3.1000, -3.1894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3290, device='cuda:0', dtype=torch.float64)
tensor([-1.9905, -2.7411, -2.8332, -3.1051, -3.1906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8861, device='cuda:0', dtype=torch.float64)
tensor([-2.0223, -2.7581, -2.8404, -3.1113, -3.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7932, device='cuda:0', dtype=torch.float64)
tensor([-2.0396, -2.7754, -2.8376, -3.0961, -3.2364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5564, device='cuda:0', dtype=torch.float64)
tensor([-2.0324, -2.7801, -2.8395, -3.1130, -3.2501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8761, device='cuda:0', dtype=torch.float64)
tensor([-2.0155, -2.7714, -2.8345, -3.1395, -3.2695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6616, device='cuda:0', dtype=torch.float64)
tensor([-1.9887, -2.7704, -2.8188, -3.1513, -3.2833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2913, device='cuda:0', dtype=torch.float64)
tensor([-1.9474, -2.7790, -2.8094, -3.1764, -3.2911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4197, device='cuda:0', dtype=torch.float64)
tensor([-1.9126, -2.7837, -2.8327, -3.2227, -3.3035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7575, device='cuda:0', dtype=torch.float64)
tensor([-1.8789, -2.7715, -2.8382, -3.2629, -3.2986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5657, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.7809, -2.8308, -3.2660, -3.3227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9289, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.7886, -2.8196, -3.2334, -3.3276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5467, device='cuda:0', dtype=torch.float64)
tensor([-1.8787, -2.7741, -2.8266, -3.1967, -3.3164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9323, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.7386, -2.8484, -3.1856, -3.2827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3611, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7131, -2.8730, -3.1984, -3.2504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4967, device='cuda:0', dtype=torch.float64)
tensor([-1.9005, -2.7068, -2.8792, -3.1878, -3.2434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6057, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.7180, -2.8895, -3.1795, -3.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1507, device='cuda:0', dtype=torch.float64)
tensor([-1.9927, -2.7257, -2.8857, -3.2086, -3.2488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7719, device='cuda:0', dtype=torch.float64)
tensor([-2.0047, -2.7253, -2.8771, -3.2516, -3.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6403, device='cuda:0', dtype=torch.float64)
tensor([-2.0237, -2.7286, -2.8421, -3.1998, -3.2446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7956, device='cuda:0', dtype=torch.float64)
tensor([-2.0335, -2.7472, -2.8073, -3.1900, -3.2651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8186, device='cuda:0', dtype=torch.float64)
tensor([-1.9968, -2.7448, -2.8119, -3.2212, -3.2677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6664, device='cuda:0', dtype=torch.float64)
tensor([-1.9519, -2.7384, -2.8314, -3.2070, -3.2616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8769, device='cuda:0', dtype=torch.float64)
tensor([-1.9155, -2.7331, -2.8509, -3.2533, -3.2622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9748, device='cuda:0', dtype=torch.float64)
tensor([-1.8944, -2.7310, -2.8614, -3.2530, -3.2597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0313, device='cuda:0', dtype=torch.float64)
tensor([-1.8668, -2.7150, -2.8812, -3.2690, -3.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7534, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.6743, -2.9066, -3.2931, -3.1967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0184, device='cuda:0', dtype=torch.float64)
tensor([-1.8129, -2.6722, -2.9164, -3.3318, -3.1569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6884, device='cuda:0', dtype=torch.float64)
tensor([-1.8701, -2.6768, -2.8556, -3.2291, -3.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7310, device='cuda:0', dtype=torch.float64)
tensor([-1.9585, -2.7025, -2.8003, -3.1566, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9339, device='cuda:0', dtype=torch.float64)
tensor([-2.0325, -2.7145, -2.7773, -3.1013, -3.1827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0488, device='cuda:0', dtype=torch.float64)
tensor([-2.0709, -2.7288, -2.7721, -3.0820, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9751, device='cuda:0', dtype=torch.float64)
tensor([-2.0974, -2.7335, -2.7692, -3.0479, -3.1949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9476, device='cuda:0', dtype=torch.float64)
tensor([-2.0993, -2.7388, -2.7835, -3.0478, -3.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8288, device='cuda:0', dtype=torch.float64)
tensor([-2.0686, -2.7400, -2.8098, -3.0717, -3.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9570, device='cuda:0', dtype=torch.float64)
tensor([-2.0284, -2.7503, -2.8359, -3.1059, -3.2054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8633, device='cuda:0', dtype=torch.float64)
tensor([-1.9773, -2.7606, -2.8512, -3.1441, -3.2056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1158, device='cuda:0', dtype=torch.float64)
tensor([-1.9478, -2.7584, -2.8525, -3.1114, -3.2076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9321, device='cuda:0', dtype=torch.float64)
tensor([-1.9139, -2.7551, -2.8595, -3.1241, -3.2143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8350, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.7268, -2.8824, -3.1593, -3.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8494, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.6957, -2.9011, -3.1623, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1691, device='cuda:0', dtype=torch.float64)
tensor([-1.8855, -2.6950, -2.9019, -3.1504, -3.2049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8712, device='cuda:0', dtype=torch.float64)
tensor([-1.9464, -2.7286, -2.8600, -3.1100, -3.2383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4609, device='cuda:0', dtype=torch.float64)
tensor([-2.0044, -2.7548, -2.8282, -3.0839, -3.2675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6176, device='cuda:0', dtype=torch.float64)
tensor([-2.0391, -2.7560, -2.8031, -3.0896, -3.2726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1231, device='cuda:0', dtype=torch.float64)
tensor([-2.0607, -2.7665, -2.7870, -3.1256, -3.2799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6311, device='cuda:0', dtype=torch.float64)
tensor([-2.0420, -2.7595, -2.7804, -3.1734, -3.2589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0029, device='cuda:0', dtype=torch.float64)
tensor([-1.9724, -2.7340, -2.8122, -3.2331, -3.2331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5392, device='cuda:0', dtype=torch.float64)
tensor([-1.9087, -2.7123, -2.8450, -3.2815, -3.2159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8614, device='cuda:0', dtype=torch.float64)
tensor([-1.8831, -2.7268, -2.8536, -3.3422, -3.2188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1734, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.7539, -2.8490, -3.4219, -3.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7334, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.7321, -2.8684, -3.2959, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6758, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.7580, -2.8580, -3.3067, -3.1834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9810, device='cuda:0', dtype=torch.float64)
tensor([-1.9356, -2.7863, -2.8145, -3.2662, -3.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9207, device='cuda:0', dtype=torch.float64)
tensor([-1.9708, -2.8038, -2.7937, -3.2608, -3.2010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7735, device='cuda:0', dtype=torch.float64)
tensor([-1.9851, -2.8025, -2.7825, -3.2527, -3.2188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7029, device='cuda:0', dtype=torch.float64)
tensor([-1.9717, -2.7768, -2.7972, -3.2005, -3.2168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6034, device='cuda:0', dtype=torch.float64)
tensor([-1.9700, -2.7659, -2.8146, -3.1846, -3.2248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8597, device='cuda:0', dtype=torch.float64)
tensor([-1.9728, -2.7589, -2.8323, -3.1767, -3.2410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6089, device='cuda:0', dtype=torch.float64)
tensor([-1.9873, -2.7700, -2.8458, -3.1635, -3.2772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7796, device='cuda:0', dtype=torch.float64)
tensor([-2.0040, -2.7769, -2.8613, -3.1744, -3.3095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4914, device='cuda:0', dtype=torch.float64)
tensor([-1.9733, -2.7375, -2.8574, -3.1900, -3.2651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4948, device='cuda:0', dtype=torch.float64)
tensor([-1.9451, -2.7235, -2.8651, -3.2438, -3.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9974, device='cuda:0', dtype=torch.float64)
tensor([-1.9395, -2.7210, -2.8261, -3.2357, -3.2743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6813, device='cuda:0', dtype=torch.float64)
tensor([-1.9637, -2.7485, -2.7811, -3.2377, -3.2937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9068, device='cuda:0', dtype=torch.float64)
tensor([-1.9717, -2.7559, -2.7752, -3.2051, -3.3001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5753, device='cuda:0', dtype=torch.float64)
tensor([-1.9701, -2.7692, -2.7926, -3.2916, -3.3001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8949, device='cuda:0', dtype=torch.float64)
tensor([-1.9750, -2.7828, -2.8200, -3.2523, -3.3055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9404, device='cuda:0', dtype=torch.float64)
tensor([-1.9838, -2.7927, -2.8339, -3.1306, -3.3186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1578, device='cuda:0', dtype=torch.float64)
tensor([-1.9981, -2.8426, -2.8573, -3.1568, -3.4240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5781, device='cuda:0', dtype=torch.float64)
tensor([-1.9903, -2.8575, -2.8737, -3.1568, -3.2929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7375, device='cuda:0', dtype=torch.float64)
tensor([-1.9875, -2.8425, -2.8983, -3.1928, -3.2434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9592, device='cuda:0', dtype=torch.float64)
tensor([-2.0064, -2.8553, -2.8815, -3.1700, -3.2362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8512, device='cuda:0', dtype=torch.float64)
tensor([-2.0203, -2.8528, -2.8760, -3.1284, -3.2650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9763, device='cuda:0', dtype=torch.float64)
tensor([-1.9803, -2.8074, -2.9015, -3.1235, -3.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0663, device='cuda:0', dtype=torch.float64)
tensor([-1.9064, -2.7694, -2.9395, -3.1873, -3.2182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0038, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.6836, -2.9520, -3.2371, -3.2140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9793, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.6669, -2.9080, -3.2107, -3.2213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2158, device='cuda:0', dtype=torch.float64)
tensor([-1.9219, -2.7050, -2.8524, -3.1611, -3.2434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1173, device='cuda:0', dtype=torch.float64)
tensor([-1.9792, -2.7510, -2.8038, -3.0779, -3.2660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5220, device='cuda:0', dtype=torch.float64)
tensor([-2.0201, -2.8022, -2.7811, -3.0582, -3.2874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1976, device='cuda:0', dtype=torch.float64)
tensor([-2.0404, -2.8319, -2.7805, -3.0438, -3.2955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0037, device='cuda:0', dtype=torch.float64)
tensor([-2.0005, -2.8259, -2.8327, -3.0467, -3.2581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0766, device='cuda:0', dtype=torch.float64)
tensor([-1.9438, -2.7996, -2.8911, -3.0994, -3.2212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2722, device='cuda:0', dtype=torch.float64)
tensor([-1.8775, -2.7733, -2.8631, -3.1757, -3.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1509, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.7436, -2.8561, -3.2125, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8951, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.7107, -2.8551, -3.2631, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7619, device='cuda:0', dtype=torch.float64)
tensor([-1.9129, -2.7122, -2.8497, -3.3017, -3.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9484, device='cuda:0', dtype=torch.float64)
tensor([-1.9416, -2.7106, -2.8339, -3.3729, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9712, device='cuda:0', dtype=torch.float64)
tensor([-1.9571, -2.6916, -2.8211, -3.3791, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8882, device='cuda:0', dtype=torch.float64)
tensor([-1.9724, -2.6907, -2.8081, -3.3651, -3.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1769, device='cuda:0', dtype=torch.float64)
tensor([-1.9898, -2.6755, -2.8303, -3.3303, -3.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9155, device='cuda:0', dtype=torch.float64)
tensor([-2.0201, -2.6983, -2.8326, -3.2385, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0187, device='cuda:0', dtype=torch.float64)
tensor([-2.0283, -2.7297, -2.8286, -3.1816, -3.1723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9161, device='cuda:0', dtype=torch.float64)
tensor([-2.0451, -2.7725, -2.7975, -3.1264, -3.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6379, device='cuda:0', dtype=torch.float64)
tensor([-2.0303, -2.7941, -2.7757, -3.0988, -3.2306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9297, device='cuda:0', dtype=torch.float64)
tensor([-2.0067, -2.7967, -2.7648, -3.0857, -3.2596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9712, device='cuda:0', dtype=torch.float64)
tensor([-1.9632, -2.7850, -2.7719, -3.1091, -3.2834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6047, device='cuda:0', dtype=torch.float64)
tensor([-1.9319, -2.7804, -2.7832, -3.1319, -3.2921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5935, device='cuda:0', dtype=torch.float64)
tensor([-1.8948, -2.7531, -2.8166, -3.1617, -3.2950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0094, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.7195, -2.8579, -3.1759, -3.2921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9496, device='cuda:0', dtype=torch.float64)
tensor([-1.8753, -2.6915, -2.8928, -3.2031, -3.2917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7044, device='cuda:0', dtype=torch.float64)
tensor([-1.9041, -2.7055, -2.9134, -3.2538, -3.2960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7171, device='cuda:0', dtype=torch.float64)
tensor([-1.9586, -2.7244, -2.8972, -3.2267, -3.3155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9768, device='cuda:0', dtype=torch.float64)
tensor([-2.0077, -2.7635, -2.8885, -3.2706, -3.3456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1439, device='cuda:0', dtype=torch.float64)
tensor([-2.0159, -2.7433, -2.8781, -3.2633, -3.2853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5259, device='cuda:0', dtype=torch.float64)
tensor([-2.0058, -2.7185, -2.8776, -3.3183, -3.2222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9788, device='cuda:0', dtype=torch.float64)
tensor([-2.0134, -2.7359, -2.8507, -3.2128, -3.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0275, device='cuda:0', dtype=torch.float64)
tensor([-2.0487, -2.7759, -2.8025, -3.1169, -3.2263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9284, device='cuda:0', dtype=torch.float64)
tensor([-2.0566, -2.7975, -2.7833, -3.0840, -3.2313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3929, device='cuda:0', dtype=torch.float64)
tensor([-2.0055, -2.7596, -2.8176, -3.1202, -3.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1997, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.7337, -2.8591, -3.1712, -3.1648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3118, device='cuda:0', dtype=torch.float64)
tensor([-1.9366, -2.7262, -2.8678, -3.1822, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8888, device='cuda:0', dtype=torch.float64)
tensor([-1.9539, -2.7449, -2.8860, -3.2587, -3.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6207, device='cuda:0', dtype=torch.float64)
tensor([-1.9803, -2.7708, -2.8868, -3.2662, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7638, device='cuda:0', dtype=torch.float64)
tensor([-2.0112, -2.8094, -2.8735, -3.3374, -3.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6557, device='cuda:0', dtype=torch.float64)
tensor([-2.0198, -2.8531, -2.8603, -3.3272, -3.2387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8280, device='cuda:0', dtype=torch.float64)
tensor([-1.9825, -2.8569, -2.8703, -3.3553, -3.2486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0151, device='cuda:0', dtype=torch.float64)
tensor([-1.9326, -2.8328, -2.8896, -3.2960, -3.2533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9052, device='cuda:0', dtype=torch.float64)
tensor([-1.8920, -2.7992, -2.9152, -3.2927, -3.2632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6564, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.7704, -2.9267, -3.2807, -3.2751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2060, device='cuda:0', dtype=torch.float64)
tensor([-1.9070, -2.7765, -2.9080, -3.2414, -3.2765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0194, device='cuda:0', dtype=torch.float64)
tensor([-1.9713, -2.7955, -2.8797, -3.2124, -3.2919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7745, device='cuda:0', dtype=torch.float64)
tensor([-2.0162, -2.7972, -2.8871, -3.2143, -3.3007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8507, device='cuda:0', dtype=torch.float64)
tensor([-2.0351, -2.7791, -2.9141, -3.2444, -3.3227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9341, device='cuda:0', dtype=torch.float64)
tensor([-2.0512, -2.7540, -2.9203, -3.2417, -3.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1168, device='cuda:0', dtype=torch.float64)
tensor([-2.0517, -2.7591, -2.9173, -3.5812, -3.4577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9472, device='cuda:0', dtype=torch.float64)
tensor([-2.0057, -2.7013, -2.9364, -3.2013, -3.3599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7732, device='cuda:0', dtype=torch.float64)
tensor([-1.9773, -2.6693, -2.9643, -3.2368, -3.3192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2315, device='cuda:0', dtype=torch.float64)
tensor([-1.9827, -2.6933, -2.9399, -3.1341, -3.2967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4277, device='cuda:0', dtype=torch.float64)
tensor([-2.0139, -2.7569, -2.9123, -3.0872, -3.2982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4903, device='cuda:0', dtype=torch.float64)
tensor([-2.0166, -2.7622, -2.9139, -3.0588, -3.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0420, device='cuda:0', dtype=torch.float64)
tensor([-2.0098, -2.7763, -2.9206, -3.0909, -3.1761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9212, device='cuda:0', dtype=torch.float64)
tensor([-2.0310, -2.8269, -2.9002, -3.1322, -3.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4412, device='cuda:0', dtype=torch.float64)
tensor([-2.0719, -2.9021, -2.8494, -3.0598, -3.1949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9495, device='cuda:0', dtype=torch.float64)
tensor([-2.0687, -2.9242, -2.8275, -3.0701, -3.2460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8380, device='cuda:0', dtype=torch.float64)
tensor([-2.0165, -2.8780, -2.8314, -3.1321, -3.2461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8346, device='cuda:0', dtype=torch.float64)
tensor([-1.9236, -2.7919, -2.8648, -3.2314, -3.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8794, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.7214, -2.8868, -3.3073, -3.2473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7527, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.6794, -2.8958, -3.3839, -3.2701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8635, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.6630, -2.8962, -3.3578, -3.2869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8198, device='cuda:0', dtype=torch.float64)
tensor([-1.8674, -2.6532, -2.8954, -3.3017, -3.2969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7282, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.6862, -2.8613, -3.2659, -3.3067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3495, device='cuda:0', dtype=torch.float64)
tensor([-1.9080, -2.7316, -2.8261, -3.3035, -3.3003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2828, device='cuda:0', dtype=torch.float64)
tensor([-1.9593, -2.7286, -2.7836, -3.2453, -3.3029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8470, device='cuda:0', dtype=torch.float64)
tensor([-2.0135, -2.7719, -2.7434, -3.1885, -3.3134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8270, device='cuda:0', dtype=torch.float64)
tensor([-2.0623, -2.8272, -2.7263, -3.1591, -3.3215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9195, device='cuda:0', dtype=torch.float64)
tensor([-2.0819, -2.8552, -2.7432, -3.1616, -3.3231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8021, device='cuda:0', dtype=torch.float64)
tensor([-2.0585, -2.8561, -2.7718, -3.1887, -3.2983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1663, device='cuda:0', dtype=torch.float64)
tensor([-1.9946, -2.8339, -2.8328, -3.2368, -3.2512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9057, device='cuda:0', dtype=torch.float64)
tensor([-1.9518, -2.8274, -2.8725, -3.2867, -3.2215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1354, device='cuda:0', dtype=torch.float64)
tensor([-1.9347, -2.8147, -2.9282, -3.3260, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9883, device='cuda:0', dtype=torch.float64)
tensor([-1.9151, -2.7907, -2.9908, -3.3254, -3.1791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3116, device='cuda:0', dtype=torch.float64)
tensor([-1.9179, -2.8027, -2.9568, -3.2911, -3.1710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6762, device='cuda:0', dtype=torch.float64)
tensor([-1.9248, -2.7933, -2.9179, -3.2647, -3.1577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8207, device='cuda:0', dtype=torch.float64)
tensor([-1.9430, -2.7660, -2.8796, -3.2492, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9484, device='cuda:0', dtype=torch.float64)
tensor([-1.9687, -2.7395, -2.8487, -3.2645, -3.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9816, device='cuda:0', dtype=torch.float64)
tensor([-2.0244, -2.7405, -2.8273, -3.2812, -3.1943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5146, device='cuda:0', dtype=torch.float64)
tensor([-2.1084, -2.7907, -2.8075, -3.3074, -3.2364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2109, device='cuda:0', dtype=torch.float64)
tensor([-2.1572, -2.8391, -2.8052, -3.1730, -3.3008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0139, device='cuda:0', dtype=torch.float64)
tensor([-2.1381, -2.8386, -2.8325, -3.0933, -3.3282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9371, device='cuda:0', dtype=torch.float64)
tensor([-2.0753, -2.8195, -2.8709, -3.1338, -3.3331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0098, device='cuda:0', dtype=torch.float64)
tensor([-2.0130, -2.7779, -2.8826, -3.1131, -3.3252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7771, device='cuda:0', dtype=torch.float64)
tensor([-1.9254, -2.7192, -2.9214, -3.1442, -3.3116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6958, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.6830, -2.9670, -3.1836, -3.3159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0219, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6766, -3.0118, -3.1992, -3.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9583, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.7017, -2.9840, -3.1862, -3.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9356, device='cuda:0', dtype=torch.float64)
tensor([-1.8968, -2.7377, -2.9385, -3.1759, -3.3318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1269, device='cuda:0', dtype=torch.float64)
tensor([-1.9416, -2.7904, -2.8919, -3.2121, -3.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7250, device='cuda:0', dtype=torch.float64)
tensor([-1.9803, -2.8239, -2.8680, -3.2622, -3.3117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0503, device='cuda:0', dtype=torch.float64)
tensor([-2.0289, -2.8403, -2.8499, -3.2068, -3.2938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0617, device='cuda:0', dtype=torch.float64)
tensor([-2.0385, -2.8270, -2.8527, -3.1333, -3.2584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8007, device='cuda:0', dtype=torch.float64)
tensor([-2.0436, -2.7943, -2.8697, -3.1063, -3.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0075, device='cuda:0', dtype=torch.float64)
tensor([-2.0521, -2.7653, -2.8776, -3.1173, -3.1979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7692, device='cuda:0', dtype=torch.float64)
tensor([-2.0336, -2.7388, -2.8974, -3.1498, -3.1911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9619, device='cuda:0', dtype=torch.float64)
tensor([-2.0480, -2.7271, -2.8950, -3.1701, -3.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9780, device='cuda:0', dtype=torch.float64)
tensor([-2.0750, -2.7097, -2.8769, -3.1499, -3.2362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0930, device='cuda:0', dtype=torch.float64)
tensor([-2.0584, -2.6868, -2.8683, -3.1620, -3.2609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3752, device='cuda:0', dtype=torch.float64)
tensor([-2.0146, -2.6823, -2.8667, -3.1962, -3.2672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9084, device='cuda:0', dtype=torch.float64)
tensor([-1.9727, -2.6906, -2.8727, -3.2551, -3.2775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6884, device='cuda:0', dtype=torch.float64)
tensor([-1.9658, -2.7304, -2.8707, -3.3009, -3.3089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5881, device='cuda:0', dtype=torch.float64)
tensor([-1.9808, -2.7957, -2.8601, -3.2683, -3.3011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5179, device='cuda:0', dtype=torch.float64)
tensor([-2.0141, -2.8743, -2.8419, -3.2532, -3.3140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7932, device='cuda:0', dtype=torch.float64)
tensor([-2.0254, -2.9289, -2.8287, -3.2546, -3.3257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0160, device='cuda:0', dtype=torch.float64)
tensor([-2.0053, -2.9341, -2.8262, -3.2447, -3.3185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8278, device='cuda:0', dtype=torch.float64)
tensor([-1.9850, -2.9054, -2.8331, -3.2351, -3.3038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9380, device='cuda:0', dtype=torch.float64)
tensor([-1.9613, -2.8645, -2.8513, -3.2562, -3.2783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8444, device='cuda:0', dtype=torch.float64)
tensor([-1.9571, -2.8231, -2.8582, -3.2552, -3.2562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7633, device='cuda:0', dtype=torch.float64)
tensor([-1.9676, -2.7997, -2.8583, -3.2426, -3.2360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0645, device='cuda:0', dtype=torch.float64)
tensor([-1.9911, -2.7760, -2.8659, -3.2142, -3.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4905, device='cuda:0', dtype=torch.float64)
tensor([-2.0117, -2.7606, -2.8624, -3.1852, -3.2170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8788, device='cuda:0', dtype=torch.float64)
tensor([-2.0013, -2.7239, -2.8694, -3.1928, -3.1996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9088, device='cuda:0', dtype=torch.float64)
tensor([-2.0073, -2.7033, -2.8752, -3.2177, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1464, device='cuda:0', dtype=torch.float64)
tensor([-1.9952, -2.7014, -2.8914, -3.4222, -3.1760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3363, device='cuda:0', dtype=torch.float64)
tensor([-2.0029, -2.6948, -2.8544, -3.2596, -3.1808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3498, device='cuda:0', dtype=torch.float64)
tensor([-2.0261, -2.7457, -2.8111, -3.1668, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2206, device='cuda:0', dtype=torch.float64)
tensor([-1.9879, -2.7506, -2.8187, -3.1401, -3.2542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6770, device='cuda:0', dtype=torch.float64)
tensor([-1.9615, -2.7268, -2.8697, -3.1537, -3.2886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3622, device='cuda:0', dtype=torch.float64)
tensor([-1.9641, -2.7617, -2.8691, -3.1224, -3.2975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1495, device='cuda:0', dtype=torch.float64)
tensor([-1.9722, -2.7918, -2.8874, -3.1614, -3.3142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1460, device='cuda:0', dtype=torch.float64)
tensor([-1.9601, -2.7829, -2.9233, -3.1672, -3.2924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7828, device='cuda:0', dtype=torch.float64)
tensor([-1.9472, -2.7686, -2.9724, -3.1891, -3.2771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7467, device='cuda:0', dtype=torch.float64)
tensor([-1.9416, -2.7953, -2.9561, -3.1730, -3.2736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7396, device='cuda:0', dtype=torch.float64)
tensor([-1.9807, -2.8463, -2.9354, -3.1854, -3.2955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0728, device='cuda:0', dtype=torch.float64)
tensor([-1.9950, -2.8448, -2.9214, -3.1482, -3.2805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1420, device='cuda:0', dtype=torch.float64)
tensor([-1.9958, -2.8463, -2.9467, -3.1847, -3.2373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7558, device='cuda:0', dtype=torch.float64)
tensor([-2.0142, -2.8285, -2.9329, -3.1834, -3.2219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0478, device='cuda:0', dtype=torch.float64)
tensor([-2.0345, -2.8285, -2.8847, -3.1780, -3.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0553, device='cuda:0', dtype=torch.float64)
tensor([-2.0778, -2.8755, -2.8620, -3.2686, -3.2693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7517, device='cuda:0', dtype=torch.float64)
tensor([-2.0471, -2.8546, -2.8513, -3.2182, -3.2513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7487, device='cuda:0', dtype=torch.float64)
tensor([-2.0374, -2.9935, -2.8926, -3.5200, -3.2806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5200, device='cuda:0', dtype=torch.float64)
tensor([-2.0597, -2.8637, -2.8198, -3.2643, -3.2628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5724, device='cuda:0', dtype=torch.float64)
tensor([-2.0849, -2.9074, -2.8326, -3.4464, -3.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4946, device='cuda:0', dtype=torch.float64)
tensor([-2.0270, -2.8299, -2.8145, -3.2897, -3.2061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7064, device='cuda:0', dtype=torch.float64)
tensor([-1.9943, -2.8462, -2.8764, -3.3685, -3.2198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7597, device='cuda:0', dtype=torch.float64)
tensor([-2.0350, -2.8237, -2.8348, -3.2529, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5870, device='cuda:0', dtype=torch.float64)
tensor([-2.0680, -2.8635, -2.9373, -3.2124, -3.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7741, device='cuda:0', dtype=torch.float64)
tensor([-1.9952, -2.7774, -2.8913, -3.1938, -3.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8396, device='cuda:0', dtype=torch.float64)
tensor([-1.9167, -2.7087, -2.9709, -3.2342, -3.2126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3564, device='cuda:0', dtype=torch.float64)
tensor([-1.8820, -2.6757, -2.9906, -3.2097, -3.2226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8651, device='cuda:0', dtype=torch.float64)
tensor([-1.8810, -2.6646, -2.9685, -3.1668, -3.2515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2632, device='cuda:0', dtype=torch.float64)
tensor([-1.9159, -2.7001, -2.9392, -3.1879, -3.3100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2262, device='cuda:0', dtype=torch.float64)
tensor([-1.9073, -2.6794, -2.9332, -3.1198, -3.3014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7941, device='cuda:0', dtype=torch.float64)
tensor([-1.9095, -2.6697, -2.9681, -3.1556, -3.2937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0279, device='cuda:0', dtype=torch.float64)
tensor([-1.9520, -2.7338, -3.0567, -3.2582, -3.3450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2069, device='cuda:0', dtype=torch.float64)
tensor([-2.0527, -2.7729, -2.9121, -3.1158, -3.3544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7184, device='cuda:0', dtype=torch.float64)
tensor([-2.1429, -2.8962, -2.9223, -3.1309, -3.4457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6430, device='cuda:0', dtype=torch.float64)
tensor([-2.1030, -2.8364, -2.9183, -3.1550, -3.3379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8790, device='cuda:0', dtype=torch.float64)
tensor([-2.0736, -2.8654, -2.9795, -3.2427, -3.3012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7576, device='cuda:0', dtype=torch.float64)
tensor([-2.0620, -2.8129, -2.9694, -3.2108, -3.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8465, device='cuda:0', dtype=torch.float64)
tensor([-2.0729, -2.8149, -2.9485, -3.2448, -3.3153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9271, device='cuda:0', dtype=torch.float64)
tensor([-2.0608, -2.8102, -2.8932, -3.2842, -3.3130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8036, device='cuda:0', dtype=torch.float64)
tensor([-2.0081, -2.7605, -2.9015, -3.3206, -3.2528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7963, device='cuda:0', dtype=torch.float64)
tensor([-1.9660, -2.7208, -2.9264, -3.3711, -3.2122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8161, device='cuda:0', dtype=torch.float64)
tensor([-1.9386, -2.7012, -2.9544, -3.4265, -3.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8532, device='cuda:0', dtype=torch.float64)
tensor([-1.9346, -2.7038, -2.9793, -3.4828, -3.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8057, device='cuda:0', dtype=torch.float64)
tensor([-1.9531, -2.7224, -2.9868, -3.4563, -3.1979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8474, device='cuda:0', dtype=torch.float64)
tensor([-1.9889, -2.7516, -2.9741, -3.3533, -3.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5114, device='cuda:0', dtype=torch.float64)
tensor([-2.0225, -2.7782, -2.9555, -3.2753, -3.2826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0700, device='cuda:0', dtype=torch.float64)
tensor([-2.0445, -2.7806, -2.9531, -3.2000, -3.3051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2238, device='cuda:0', dtype=torch.float64)
tensor([-2.0646, -2.7986, -2.9417, -3.1627, -3.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0318, device='cuda:0', dtype=torch.float64)
tensor([-2.0708, -2.8164, -2.9629, -3.1458, -3.3516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0850, device='cuda:0', dtype=torch.float64)
tensor([-2.0827, -2.8532, -2.9058, -3.1004, -3.3876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8142, device='cuda:0', dtype=torch.float64)
tensor([-2.1056, -2.8876, -2.8735, -3.0878, -3.4230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9123, device='cuda:0', dtype=torch.float64)
tensor([-2.0698, -2.8764, -2.8742, -3.1486, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1609, device='cuda:0', dtype=torch.float64)
tensor([-2.0071, -2.8329, -2.8907, -3.2396, -3.2910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0696, device='cuda:0', dtype=torch.float64)
tensor([-1.9622, -2.7991, -2.9019, -3.2841, -3.2492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2266, device='cuda:0', dtype=torch.float64)
tensor([-1.9609, -2.7924, -2.9010, -3.3372, -3.2415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2550, device='cuda:0', dtype=torch.float64)
tensor([-1.9546, -2.7871, -2.9208, -3.3201, -3.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7653, device='cuda:0', dtype=torch.float64)
tensor([-1.9620, -2.8114, -2.9503, -3.3335, -3.2625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2368, device='cuda:0', dtype=torch.float64)
tensor([-1.9855, -2.8619, -2.9678, -3.3971, -3.3022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0494, device='cuda:0', dtype=torch.float64)
tensor([-2.0363, -2.8600, -2.9443, -3.2631, -3.3295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1403, device='cuda:0', dtype=torch.float64)
tensor([-2.0972, -2.9020, -2.9060, -3.6978, -3.3965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0724, device='cuda:0', dtype=torch.float64)
tensor([-2.1027, -2.8716, -2.8941, -3.1580, -3.3840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0579, device='cuda:0', dtype=torch.float64)
tensor([-2.1265, -2.9425, -2.8871, -3.1584, -3.4017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9685, device='cuda:0', dtype=torch.float64)
tensor([-2.1240, -2.9774, -2.8669, -3.0705, -3.3756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4944, device='cuda:0', dtype=torch.float64)
tensor([-2.1262, -2.9118, -2.8488, -3.0510, -3.3609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7231, device='cuda:0', dtype=torch.float64)
tensor([-2.0916, -2.8393, -2.8739, -3.0980, -3.3231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2307, device='cuda:0', dtype=torch.float64)
tensor([-2.0339, -2.7819, -2.8951, -3.1971, -3.2825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6420, device='cuda:0', dtype=torch.float64)
tensor([-1.9625, -2.7210, -2.9222, -3.3375, -3.2561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0888, device='cuda:0', dtype=torch.float64)
tensor([-1.9127, -2.6980, -2.9313, -3.4345, -3.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7918, device='cuda:0', dtype=torch.float64)
tensor([-1.8885, -2.7060, -2.9325, -3.4447, -3.2469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0651, device='cuda:0', dtype=torch.float64)
tensor([-1.8965, -2.7709, -2.9180, -3.4255, -3.2771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8686, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.8041, -2.9100, -3.3967, -3.2858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9710, device='cuda:0', dtype=torch.float64)
tensor([-1.9258, -2.8056, -2.9180, -3.3751, -3.2635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9228, device='cuda:0', dtype=torch.float64)
tensor([-1.9631, -2.8054, -2.9226, -3.3456, -3.2771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1664, device='cuda:0', dtype=torch.float64)
tensor([-2.0258, -2.8139, -2.8797, -3.2810, -3.2763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6253, device='cuda:0', dtype=torch.float64)
tensor([-2.1027, -2.8510, -2.8493, -3.1961, -3.2988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9362, device='cuda:0', dtype=torch.float64)
tensor([-2.1489, -2.8596, -2.8508, -3.1244, -3.3185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9719, device='cuda:0', dtype=torch.float64)
tensor([-2.1440, -2.8322, -2.8690, -3.1260, -3.2709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7330, device='cuda:0', dtype=torch.float64)
tensor([-2.1063, -2.8206, -2.9257, -3.1857, -3.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2053, device='cuda:0', dtype=torch.float64)
tensor([-2.0829, -2.7824, -2.9055, -3.1119, -3.2372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9148, device='cuda:0', dtype=torch.float64)
tensor([-2.0744, -2.7974, -2.9223, -3.1276, -3.2678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1841, device='cuda:0', dtype=torch.float64)
tensor([-2.0546, -2.7643, -2.9580, -3.1543, -3.2845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2337, device='cuda:0', dtype=torch.float64)
tensor([-2.0791, -2.8048, -2.9931, -3.2017, -3.3834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6683, device='cuda:0', dtype=torch.float64)
tensor([-2.1032, -2.8574, -2.9865, -3.2349, -3.3191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8218, device='cuda:0', dtype=torch.float64)
tensor([-2.0932, -2.8695, -2.9549, -3.1954, -3.2995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9554, device='cuda:0', dtype=torch.float64)
tensor([-2.0457, -2.8567, -2.9612, -3.2379, -3.2928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2929, device='cuda:0', dtype=torch.float64)
tensor([-1.9890, -2.8718, -2.9937, -3.3299, -3.2650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1867, device='cuda:0', dtype=torch.float64)
tensor([-1.9918, -3.0101, -3.0232, -3.4090, -3.2741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7626, device='cuda:0', dtype=torch.float64)
tensor([-1.9948, -2.8930, -3.0228, -3.4312, -3.3452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0838, device='cuda:0', dtype=torch.float64)
tensor([-2.0250, -2.9454, -2.9851, -3.3033, -3.4152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6085, device='cuda:0', dtype=torch.float64)
tensor([-2.0627, -2.9801, -2.9379, -3.1908, -3.5022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3716, device='cuda:0', dtype=torch.float64)
tensor([-2.0335, -2.9088, -2.9189, -3.1408, -3.5049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0841, device='cuda:0', dtype=torch.float64)
tensor([-1.9868, -2.8012, -2.9058, -3.1510, -3.5272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8315, device='cuda:0', dtype=torch.float64)
tensor([-1.9571, -2.7317, -2.8864, -3.1847, -3.5272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3600, device='cuda:0', dtype=torch.float64)
tensor([-1.9762, -2.7055, -2.8383, -3.1954, -3.4304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2411, device='cuda:0', dtype=torch.float64)
tensor([-1.9951, -2.7257, -2.7918, -3.2135, -3.3856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8620, device='cuda:0', dtype=torch.float64)
tensor([-2.0220, -2.7475, -2.7748, -3.2335, -3.3514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9818, device='cuda:0', dtype=torch.float64)
tensor([-2.0366, -2.7536, -2.8011, -3.2968, -3.3250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7571, device='cuda:0', dtype=torch.float64)
tensor([-2.0578, -2.7719, -2.8358, -3.3550, -3.3011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9484, device='cuda:0', dtype=torch.float64)
tensor([-2.0481, -2.7759, -2.8774, -3.3977, -3.2773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3371, device='cuda:0', dtype=torch.float64)
tensor([-2.0590, -2.8361, -2.8927, -3.4091, -3.2902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4816, device='cuda:0', dtype=torch.float64)
tensor([-2.0086, -2.8025, -2.9190, -3.4069, -3.2895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2502, device='cuda:0', dtype=torch.float64)
tensor([-1.9442, -2.7415, -2.9713, -3.5442, -3.2703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1445, device='cuda:0', dtype=torch.float64)
tensor([-1.9530, -2.7456, -2.9979, -3.4123, -3.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8489, device='cuda:0', dtype=torch.float64)
tensor([-2.0081, -2.8164, -2.9474, -3.1800, -3.4426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9649, device='cuda:0', dtype=torch.float64)
tensor([-2.0956, -2.9284, -2.9386, -3.1714, -3.6156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8913, device='cuda:0', dtype=torch.float64)
tensor([-2.0985, -2.8829, -2.9276, -3.1046, -3.5206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1222, device='cuda:0', dtype=torch.float64)
tensor([-2.0857, -2.8920, -2.9712, -3.1812, -3.5933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5773, device='cuda:0', dtype=torch.float64)
tensor([-2.0890, -2.8618, -2.9343, -3.2177, -3.4137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9319, device='cuda:0', dtype=torch.float64)
tensor([-2.0923, -2.8438, -2.8971, -3.3062, -3.4246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8528, device='cuda:0', dtype=torch.float64)
tensor([-2.0838, -2.7978, -2.8853, -3.3873, -3.3849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5067, device='cuda:0', dtype=torch.float64)
tensor([-2.0303, -2.7146, -2.9139, -3.3905, -3.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2763, device='cuda:0', dtype=torch.float64)
tensor([-2.0365, -2.7189, -2.9761, -3.5375, -3.2834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3017, device='cuda:0', dtype=torch.float64)
tensor([-2.0563, -2.6657, -2.8827, -3.2885, -3.3000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5977, device='cuda:0', dtype=torch.float64)
tensor([-2.1020, -2.7209, -2.8496, -3.2513, -3.5000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0760, device='cuda:0', dtype=torch.float64)
tensor([-2.0706, -2.7291, -2.8541, -3.2353, -3.3151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2592, device='cuda:0', dtype=torch.float64)
tensor([-2.0442, -2.7745, -2.8929, -3.2693, -3.2762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2132, device='cuda:0', dtype=torch.float64)
tensor([-2.0420, -2.8276, -2.8772, -3.2910, -3.2459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4476, device='cuda:0', dtype=torch.float64)
tensor([-2.0691, -2.9141, -2.9113, -3.2456, -3.2551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1886, device='cuda:0', dtype=torch.float64)
tensor([-2.1114, -3.0089, -2.8631, -3.3285, -3.3146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2505, device='cuda:0', dtype=torch.float64)
tensor([-2.0787, -2.9802, -2.8160, -3.3440, -3.2714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1648, device='cuda:0', dtype=torch.float64)
tensor([-2.1066, -3.0624, -2.8564, -3.4984, -3.2626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9705, device='cuda:0', dtype=torch.float64)
tensor([-2.0698, -2.9362, -2.8444, -3.3333, -3.2560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9268, device='cuda:0', dtype=torch.float64)
tensor([-2.0768, -2.9900, -2.8556, -3.4307, -3.3540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3308, device='cuda:0', dtype=torch.float64)
tensor([-2.0268, -2.8257, -2.9161, -3.3430, -3.2459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3240, device='cuda:0', dtype=torch.float64)
tensor([-2.0193, -2.9884, -3.0133, -3.6052, -3.2657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0429, device='cuda:0', dtype=torch.float64)
tensor([-2.0768, -2.8600, -2.8814, -3.3089, -3.2941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9293, device='cuda:0', dtype=torch.float64)
tensor([-2.1786, -3.0103, -2.8669, -4.3037, -3.4029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6925, device='cuda:0', dtype=torch.float64)
tensor([-2.1460, -2.9180, -2.8942, -3.2523, -3.3153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2208, device='cuda:0', dtype=torch.float64)
tensor([-2.1703, -3.1167, -2.9975, -3.7144, -3.7257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.5705, device='cuda:0', dtype=torch.float64)
tensor([-2.2796, -3.6281, -3.0021, -5.0115, -3.6248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.7399, device='cuda:0', dtype=torch.float64)
tensor([-2.0334, -3.0512, -3.0738, -3.1205, -3.4603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9619, device='cuda:0', dtype=torch.float64)
tensor([-2.9796, -6.2198, -3.2630, -3.5942, -3.9337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.5271, device='cuda:0', dtype=torch.float64)
tensor([-13.6453, -47.2460, -15.1256, -80.9102, -24.9876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(61.8505, device='cuda:0', dtype=torch.float64)
tensor([-1099.5578, -1152.5996,  -410.7682,  -711.8453,  -828.8403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(313.7081, device='cuda:0', dtype=torch.float64)
tensor([-156.5768, -239.1471, -241.8018, -535.5633, -270.4752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(164.0766, device='cuda:0', dtype=torch.float64)
tensor([-206.0329, -276.8296, -331.8344, -630.4697, -358.1153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(145.5405, device='cuda:0', dtype=torch.float64)
tensor([ -83.8200, -106.6879, -116.8197, -170.4510, -250.4953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(67.7184, device='cuda:0', dtype=torch.float64)
tensor([ -86.8851, -102.7841,  -77.5415,  -85.2171, -201.7911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(48.7862, device='cuda:0', dtype=torch.float64)
tensor([ -99.1713, -130.8107,  -72.0150,  -86.0418, -165.1170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(47.5853, device='cuda:0', dtype=torch.float64)
tensor([-119.8261, -140.5953,  -68.2265,  -92.8910, -157.6922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(41.1866, device='cuda:0', dtype=torch.float64)
tensor([-109.8260, -128.8596,  -71.6286,  -90.3639, -170.4574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(39.8867, device='cuda:0', dtype=torch.float64)
tensor([ -78.6185, -105.2304,  -67.6311,  -81.8102, -164.9852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(35.7775, device='cuda:0', dtype=torch.float64)
tensor([ -56.8841,  -86.5367,  -62.2042,  -72.5800, -143.2460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(29.8081, device='cuda:0', dtype=torch.float64)
tensor([ -40.7607,  -66.7652,  -60.1442,  -60.3855, -118.5856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(23.8750, device='cuda:0', dtype=torch.float64)
tensor([-28.0883, -52.1449, -61.0359, -48.2219, -95.5895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.8155, device='cuda:0', dtype=torch.float64)
tensor([-24.3536, -45.4902, -60.3920, -41.3178, -75.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.8785, device='cuda:0', dtype=torch.float64)
tensor([-23.9029, -39.7191, -56.2315, -37.7330, -57.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.8810, device='cuda:0', dtype=torch.float64)
tensor([-19.4089, -35.1352, -49.6632, -33.9723, -43.2758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.4490, device='cuda:0', dtype=torch.float64)
tensor([-16.7688, -31.0566, -43.3992, -31.0085, -33.3346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6068, device='cuda:0', dtype=torch.float64)
tensor([-15.8774, -27.4062, -37.5734, -28.6679, -27.0484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.3582, device='cuda:0', dtype=torch.float64)
tensor([-15.2230, -24.4530, -32.8328, -26.9227, -23.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6039, device='cuda:0', dtype=torch.float64)
tensor([-14.1080, -22.6347, -29.1884, -25.7888, -20.2970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.1240, device='cuda:0', dtype=torch.float64)
tensor([-12.3294, -21.6912, -25.6596, -24.8913, -17.7720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.3825, device='cuda:0', dtype=torch.float64)
tensor([-10.3015, -21.2615, -22.4380, -23.9785, -15.6066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9602, device='cuda:0', dtype=torch.float64)
tensor([ -8.7515, -20.9766, -20.2956, -23.1985, -14.0189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.7476, device='cuda:0', dtype=torch.float64)
tensor([ -7.7164, -20.5931, -18.8485, -22.5941, -13.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6984, device='cuda:0', dtype=torch.float64)
tensor([ -6.9868, -19.8930, -17.7460, -22.1155, -13.1976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3891, device='cuda:0', dtype=torch.float64)
tensor([ -6.4365, -19.0231, -16.7507, -21.6284, -13.5032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6075, device='cuda:0', dtype=torch.float64)
tensor([ -5.9442, -18.1236, -15.6158, -20.9718, -13.5676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6187, device='cuda:0', dtype=torch.float64)
tensor([ -5.5112, -17.1956, -14.2905, -20.0822, -13.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.1809, device='cuda:0', dtype=torch.float64)
tensor([ -5.1021, -16.2184, -12.8861, -18.8972, -12.3943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.4468, device='cuda:0', dtype=torch.float64)
tensor([ -4.8307, -15.2164, -11.7133, -17.6363, -11.6465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5093, device='cuda:0', dtype=torch.float64)
tensor([ -4.7432, -14.2971, -10.8778, -16.4675, -11.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0573, device='cuda:0', dtype=torch.float64)
tensor([ -4.7460, -13.4882, -10.4074, -15.4511, -11.7837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7437, device='cuda:0', dtype=torch.float64)
tensor([ -4.7914, -12.9061, -10.2341, -14.6605, -12.3943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4437, device='cuda:0', dtype=torch.float64)
tensor([ -4.8276, -12.5627, -10.1955, -14.0418, -13.0574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4805, device='cuda:0', dtype=torch.float64)
tensor([ -4.8526, -12.3683, -10.1422, -13.5530, -13.6449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4422, device='cuda:0', dtype=torch.float64)
tensor([ -4.8815, -12.2484, -10.0136, -13.1265, -14.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4013, device='cuda:0', dtype=torch.float64)
tensor([ -4.9391, -12.1076,  -9.6880, -12.7125, -14.3344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2506, device='cuda:0', dtype=torch.float64)
tensor([ -5.0153, -11.8724,  -9.2098, -12.3148, -14.3680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9855, device='cuda:0', dtype=torch.float64)
tensor([ -5.1068, -11.5120,  -8.6544, -11.8990, -14.2427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7678, device='cuda:0', dtype=torch.float64)
tensor([ -5.1945, -11.0824,  -8.1098, -11.4897, -13.9881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2431, device='cuda:0', dtype=torch.float64)
tensor([ -5.2555, -10.6023,  -7.6532, -11.1114, -13.6623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2739, device='cuda:0', dtype=torch.float64)
tensor([ -5.2525, -10.1019,  -7.2533, -10.7496, -13.2747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3299, device='cuda:0', dtype=torch.float64)
tensor([ -5.1859,  -9.6280,  -6.9512, -10.4130, -12.8593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2908, device='cuda:0', dtype=torch.float64)
tensor([ -5.0687,  -9.1923,  -6.7235, -10.1254, -12.4488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0959, device='cuda:0', dtype=torch.float64)
tensor([ -4.9447,  -8.8326,  -6.5696,  -9.8854, -12.0266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7921, device='cuda:0', dtype=torch.float64)
tensor([ -4.8204,  -8.5843,  -6.4872,  -9.6739, -11.6345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8546, device='cuda:0', dtype=torch.float64)
tensor([ -4.6863,  -8.4066,  -6.4936,  -9.5021, -11.2704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5752, device='cuda:0', dtype=torch.float64)
tensor([ -4.5700,  -8.2596,  -6.5399,  -9.3522, -10.9147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5158, device='cuda:0', dtype=torch.float64)
tensor([ -4.4626,  -8.1540,  -6.6039,  -9.2294, -10.5738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4852, device='cuda:0', dtype=torch.float64)
tensor([ -4.3654,  -8.0786,  -6.6652,  -9.1350, -10.2492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6508, device='cuda:0', dtype=torch.float64)
tensor([-4.2905, -8.0108, -6.6960, -9.0352, -9.9284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6611, device='cuda:0', dtype=torch.float64)
tensor([-4.2407, -7.9596, -6.6783, -8.9261, -9.6287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6731, device='cuda:0', dtype=torch.float64)
tensor([-4.2125, -7.9151, -6.6152, -8.7892, -9.3540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4821, device='cuda:0', dtype=torch.float64)
tensor([-4.1968, -7.9039, -6.5304, -8.6606, -9.1092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2442, device='cuda:0', dtype=torch.float64)
tensor([-4.1960, -7.8958, -6.4410, -8.5343, -8.8948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1744, device='cuda:0', dtype=torch.float64)
tensor([-4.2113, -7.8809, -6.3507, -8.4166, -8.7231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0580, device='cuda:0', dtype=torch.float64)
tensor([-4.2342, -7.8763, -6.2693, -8.3024, -8.5977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9811, device='cuda:0', dtype=torch.float64)
tensor([-4.2611, -7.8463, -6.2026, -8.2020, -8.4957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9770, device='cuda:0', dtype=torch.float64)
tensor([-4.2951, -7.7838, -6.1464, -8.1083, -8.4265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2005, device='cuda:0', dtype=torch.float64)
tensor([-4.3232, -7.7136, -6.1238, -8.0258, -8.3784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0199, device='cuda:0', dtype=torch.float64)
tensor([-4.3445, -7.6315, -6.1213, -7.9554, -8.3640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0210, device='cuda:0', dtype=torch.float64)
tensor([-4.3459, -7.5783, -6.1465, -7.8898, -8.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0725, device='cuda:0', dtype=torch.float64)
tensor([-4.3354, -7.5124, -6.1875, -7.8267, -8.3928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0087, device='cuda:0', dtype=torch.float64)
tensor([-4.3045, -7.4547, -6.2321, -7.7852, -8.4115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9504, device='cuda:0', dtype=torch.float64)
tensor([-4.2685, -7.4058, -6.2590, -7.7549, -8.4247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9271, device='cuda:0', dtype=torch.float64)
tensor([-4.2176, -7.3566, -6.2701, -7.7569, -8.4257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8468, device='cuda:0', dtype=torch.float64)
tensor([-4.1703, -7.3111, -6.2734, -7.7702, -8.4172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9984, device='cuda:0', dtype=torch.float64)
tensor([-4.1272, -7.2782, -6.2628, -7.7906, -8.4084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0977, device='cuda:0', dtype=torch.float64)
tensor([-4.0943, -7.2344, -6.2320, -7.8334, -8.3772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8919, device='cuda:0', dtype=torch.float64)
tensor([-4.0543, -7.1915, -6.1831, -7.8939, -8.3227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8656, device='cuda:0', dtype=torch.float64)
tensor([-4.0213, -7.1356, -6.1376, -7.9421, -8.2594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7899, device='cuda:0', dtype=torch.float64)
tensor([-3.9988, -7.0679, -6.1070, -8.0083, -8.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9367, device='cuda:0', dtype=torch.float64)
tensor([-3.9838, -7.0039, -6.0751, -8.0506, -8.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9686, device='cuda:0', dtype=torch.float64)
tensor([-3.9809, -6.9468, -6.0332, -8.0522, -8.0664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6552, device='cuda:0', dtype=torch.float64)
tensor([-3.9720, -6.8865, -5.9898, -8.0329, -8.0017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6029, device='cuda:0', dtype=torch.float64)
tensor([-3.9710, -6.8273, -5.9480, -7.9802, -7.9407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7864, device='cuda:0', dtype=torch.float64)
tensor([-3.9789, -6.7730, -5.9092, -7.9187, -7.8935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8143, device='cuda:0', dtype=torch.float64)
tensor([-3.9774, -6.7280, -5.8758, -7.8440, -7.8607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7615, device='cuda:0', dtype=torch.float64)
tensor([-3.9792, -6.6856, -5.8605, -7.7536, -7.8441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7231, device='cuda:0', dtype=torch.float64)
tensor([-3.9740, -6.6652, -5.8577, -7.6727, -7.8374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6487, device='cuda:0', dtype=torch.float64)
tensor([-3.9632, -6.6351, -5.8637, -7.6068, -7.8320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5299, device='cuda:0', dtype=torch.float64)
tensor([-3.9448, -6.5888, -5.8677, -7.5591, -7.8239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5234, device='cuda:0', dtype=torch.float64)
tensor([-3.9227, -6.5493, -5.8704, -7.5328, -7.8108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6815, device='cuda:0', dtype=torch.float64)
tensor([-3.9100, -6.5092, -5.8663, -7.5029, -7.7941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6172, device='cuda:0', dtype=torch.float64)
tensor([-3.8943, -6.4892, -5.8482, -7.4757, -7.7725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6163, device='cuda:0', dtype=torch.float64)
tensor([-3.8733, -6.4896, -5.8247, -7.4499, -7.7464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4831, device='cuda:0', dtype=torch.float64)
tensor([-3.8529, -6.4907, -5.7971, -7.4355, -7.7195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6939, device='cuda:0', dtype=torch.float64)
tensor([-3.8401, -6.4868, -5.7583, -7.4002, -7.7028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6777, device='cuda:0', dtype=torch.float64)
tensor([-3.8355, -6.4794, -5.7224, -7.3579, -7.6854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6417, device='cuda:0', dtype=torch.float64)
tensor([-3.8327, -6.4814, -5.6764, -7.2993, -7.6623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5744, device='cuda:0', dtype=torch.float64)
tensor([-3.8289, -6.4704, -5.6390, -7.2555, -7.6336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6844, device='cuda:0', dtype=torch.float64)
tensor([-3.8353, -6.4670, -5.6149, -7.2120, -7.6077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7263, device='cuda:0', dtype=torch.float64)
tensor([-3.8382, -6.4622, -5.6069, -7.1663, -7.5804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6811, device='cuda:0', dtype=torch.float64)
tensor([-3.8370, -6.4569, -5.6053, -7.1266, -7.5552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5775, device='cuda:0', dtype=torch.float64)
tensor([-3.8365, -6.4462, -5.6118, -7.0940, -7.5345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4261, device='cuda:0', dtype=torch.float64)
tensor([-3.8413, -6.4276, -5.6176, -7.0714, -7.5175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4362, device='cuda:0', dtype=torch.float64)
tensor([-3.8407, -6.3927, -5.6266, -7.0549, -7.5016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9001, device='cuda:0', dtype=torch.float64)
tensor([-3.8342, -6.3523, -5.6490, -7.0621, -7.4783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5730, device='cuda:0', dtype=torch.float64)
tensor([-3.8317, -6.3113, -5.6746, -7.0813, -7.4465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4474, device='cuda:0', dtype=torch.float64)
tensor([-3.8249, -6.2734, -5.6867, -7.0838, -7.4083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6634, device='cuda:0', dtype=torch.float64)
tensor([-3.8076, -6.2523, -5.7006, -7.0918, -7.3687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5162, device='cuda:0', dtype=torch.float64)
tensor([-3.7825, -6.2301, -5.6892, -7.0806, -7.3291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7468, device='cuda:0', dtype=torch.float64)
tensor([-3.7679, -6.2024, -5.6548, -7.0375, -7.3031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4088, device='cuda:0', dtype=torch.float64)
tensor([-3.7496, -6.1933, -5.6057, -6.9780, -7.2730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6415, device='cuda:0', dtype=torch.float64)
tensor([-3.7297, -6.1843, -5.5632, -6.9230, -7.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5678, device='cuda:0', dtype=torch.float64)
tensor([-3.7180, -6.1735, -5.5297, -6.8639, -7.2262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5610, device='cuda:0', dtype=torch.float64)
tensor([-3.7048, -6.1614, -5.5104, -6.8298, -7.2183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6542, device='cuda:0', dtype=torch.float64)
tensor([-3.7006, -6.1571, -5.4961, -6.7931, -7.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4590, device='cuda:0', dtype=torch.float64)
tensor([-3.6902, -6.1589, -5.4848, -6.7698, -7.1939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5476, device='cuda:0', dtype=torch.float64)
tensor([-3.6825, -6.1614, -5.4756, -6.7437, -7.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4121, device='cuda:0', dtype=torch.float64)
tensor([-3.6812, -6.1516, -5.4731, -6.7282, -7.1565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4432, device='cuda:0', dtype=torch.float64)
tensor([-3.6775, -6.1472, -5.4750, -6.7211, -7.1414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5667, device='cuda:0', dtype=torch.float64)
tensor([-3.6722, -6.1471, -5.4860, -6.7279, -7.1195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5382, device='cuda:0', dtype=torch.float64)
tensor([-3.6683, -6.1308, -5.4978, -6.7530, -7.0923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7291, device='cuda:0', dtype=torch.float64)
tensor([-3.6719, -6.1341, -5.5058, -6.7866, -7.0512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4545, device='cuda:0', dtype=torch.float64)
tensor([-3.6802, -6.1350, -5.5098, -6.8174, -7.0195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5506, device='cuda:0', dtype=torch.float64)
tensor([-3.7043, -6.1380, -5.5064, -6.8334, -6.9987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6424, device='cuda:0', dtype=torch.float64)
tensor([-3.7204, -6.1386, -5.4892, -6.8119, -6.9755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5001, device='cuda:0', dtype=torch.float64)
tensor([-3.7333, -6.1172, -5.4723, -6.7829, -6.9608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9581, device='cuda:0', dtype=torch.float64)
tensor([-3.7502, -6.1022, -5.4484, -6.7417, -6.9515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5218, device='cuda:0', dtype=torch.float64)
tensor([-3.7646, -6.0707, -5.4378, -6.7119, -6.9413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8362, device='cuda:0', dtype=torch.float64)
tensor([-3.7836, -6.0463, -5.4133, -6.6577, -6.9316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5552, device='cuda:0', dtype=torch.float64)
tensor([-3.8144, -6.0131, -5.3904, -6.6085, -6.9227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3649, device='cuda:0', dtype=torch.float64)
tensor([-3.8293, -5.9701, -5.3719, -6.5575, -6.9154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5832, device='cuda:0', dtype=torch.float64)
tensor([-3.8415, -5.9317, -5.3531, -6.5191, -6.9129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5272, device='cuda:0', dtype=torch.float64)
tensor([-3.8330, -5.8804, -5.3334, -6.4821, -6.9020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3562, device='cuda:0', dtype=torch.float64)
tensor([-3.8142, -5.8296, -5.3131, -6.4486, -6.8973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4679, device='cuda:0', dtype=torch.float64)
tensor([-3.7953, -5.7745, -5.3011, -6.4336, -6.8925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4357, device='cuda:0', dtype=torch.float64)
tensor([-3.7717, -5.7065, -5.3129, -6.4425, -6.8966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5121, device='cuda:0', dtype=torch.float64)
tensor([-3.7397, -5.6606, -5.3205, -6.4488, -6.8920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5772, device='cuda:0', dtype=torch.float64)
tensor([-3.7089, -5.6252, -5.3253, -6.4597, -6.8804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6450, device='cuda:0', dtype=torch.float64)
tensor([-3.6765, -5.6029, -5.3382, -6.4739, -6.8632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5371, device='cuda:0', dtype=torch.float64)
tensor([-3.6498, -5.5989, -5.3365, -6.4791, -6.8538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3308, device='cuda:0', dtype=torch.float64)
tensor([-3.6374, -5.6028, -5.3266, -6.4741, -6.8431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6295, device='cuda:0', dtype=torch.float64)
tensor([-3.6206, -5.6142, -5.3274, -6.4636, -6.8360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4761, device='cuda:0', dtype=torch.float64)
tensor([-3.6061, -5.6345, -5.3281, -6.4282, -6.8322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5780, device='cuda:0', dtype=torch.float64)
tensor([-3.5904, -5.6415, -5.3331, -6.3896, -6.8277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5132, device='cuda:0', dtype=torch.float64)
tensor([-3.5756, -5.6428, -5.3328, -6.3676, -6.8241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2305, device='cuda:0', dtype=torch.float64)
tensor([-3.5653, -5.6441, -5.3353, -6.3570, -6.8196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6922, device='cuda:0', dtype=torch.float64)
tensor([-3.5574, -5.6574, -5.3306, -6.3497, -6.7939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7947, device='cuda:0', dtype=torch.float64)
tensor([-3.5523, -5.6556, -5.3269, -6.3519, -6.7602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4889, device='cuda:0', dtype=torch.float64)
tensor([-3.5510, -5.6478, -5.3323, -6.3472, -6.7364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6717, device='cuda:0', dtype=torch.float64)
tensor([-3.5646, -5.6243, -5.3312, -6.3413, -6.7262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5144, device='cuda:0', dtype=torch.float64)
tensor([-3.5780, -5.5873, -5.3198, -6.3582, -6.7163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5691, device='cuda:0', dtype=torch.float64)
tensor([-3.5942, -5.5412, -5.3118, -6.3797, -6.6989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7644, device='cuda:0', dtype=torch.float64)
tensor([-3.6219, -5.4921, -5.3066, -6.4012, -6.6780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4054, device='cuda:0', dtype=torch.float64)
tensor([-3.6469, -5.4617, -5.3052, -6.4254, -6.6669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5448, device='cuda:0', dtype=torch.float64)
tensor([-3.6717, -5.4275, -5.3038, -6.4367, -6.6620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3312, device='cuda:0', dtype=torch.float64)
tensor([-3.6909, -5.4104, -5.3017, -6.4338, -6.6663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5799, device='cuda:0', dtype=torch.float64)
tensor([-3.7117, -5.3983, -5.2909, -6.4186, -6.6703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4525, device='cuda:0', dtype=torch.float64)
tensor([-3.7222, -5.3889, -5.2801, -6.4182, -6.6741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6372, device='cuda:0', dtype=torch.float64)
tensor([-3.7252, -5.3851, -5.2687, -6.4262, -6.6738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5669, device='cuda:0', dtype=torch.float64)
tensor([-3.7191, -5.3833, -5.2511, -6.4259, -6.6717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7129, device='cuda:0', dtype=torch.float64)
tensor([-3.7108, -5.3860, -5.2386, -6.4032, -6.6707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3524, device='cuda:0', dtype=torch.float64)
tensor([-3.6981, -5.3983, -5.2246, -6.3825, -6.6733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5277, device='cuda:0', dtype=torch.float64)
tensor([-3.6820, -5.4168, -5.2135, -6.3616, -6.6743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4457, device='cuda:0', dtype=torch.float64)
tensor([-3.6711, -5.4489, -5.1998, -6.3295, -6.6838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4828, device='cuda:0', dtype=torch.float64)
tensor([-3.6585, -5.4585, -5.1945, -6.3000, -6.6885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2830, device='cuda:0', dtype=torch.float64)
tensor([-3.6346, -5.4625, -5.1887, -6.2790, -6.6877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4309, device='cuda:0', dtype=torch.float64)
tensor([-3.6109, -5.4577, -5.1859, -6.2748, -6.6809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2501, device='cuda:0', dtype=torch.float64)
tensor([-3.5922, -5.4463, -5.1829, -6.2721, -6.6732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4175, device='cuda:0', dtype=torch.float64)
tensor([-3.5638, -5.4126, -5.1948, -6.2927, -6.6591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3167, device='cuda:0', dtype=torch.float64)
tensor([-3.5315, -5.3747, -5.2141, -6.3069, -6.6502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4410, device='cuda:0', dtype=torch.float64)
tensor([-3.5050, -5.3349, -5.2342, -6.3309, -6.6338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4370, device='cuda:0', dtype=torch.float64)
tensor([-3.4851, -5.3110, -5.2462, -6.3409, -6.6222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7360, device='cuda:0', dtype=torch.float64)
tensor([-3.4748, -5.3084, -5.2542, -6.3338, -6.6098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5016, device='cuda:0', dtype=torch.float64)
tensor([-3.4697, -5.3105, -5.2555, -6.3191, -6.6008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3069, device='cuda:0', dtype=torch.float64)
tensor([-3.4740, -5.3004, -5.2455, -6.3019, -6.5949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7292, device='cuda:0', dtype=torch.float64)
tensor([-3.4732, -5.3111, -5.2262, -6.2883, -6.5915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5734, device='cuda:0', dtype=torch.float64)
tensor([-3.4776, -5.3133, -5.2119, -6.2813, -6.5859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4504, device='cuda:0', dtype=torch.float64)
tensor([-3.4757, -5.3177, -5.1944, -6.2773, -6.5726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5708, device='cuda:0', dtype=torch.float64)
tensor([-3.4703, -5.3023, -5.1872, -6.2758, -6.5546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6154, device='cuda:0', dtype=torch.float64)
tensor([-3.4566, -5.2773, -5.1881, -6.2829, -6.5453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5268, device='cuda:0', dtype=torch.float64)
tensor([-3.4487, -5.2492, -5.1884, -6.2901, -6.5373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6732, device='cuda:0', dtype=torch.float64)
tensor([-3.4492, -5.2270, -5.1843, -6.2929, -6.5192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5912, device='cuda:0', dtype=torch.float64)
tensor([-3.4433, -5.2132, -5.1687, -6.2785, -6.4994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5095, device='cuda:0', dtype=torch.float64)
tensor([-3.4452, -5.2029, -5.1518, -6.2714, -6.4788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6182, device='cuda:0', dtype=torch.float64)
tensor([-3.4518, -5.2078, -5.1314, -6.2551, -6.4467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5976, device='cuda:0', dtype=torch.float64)
tensor([-3.4539, -5.2130, -5.1164, -6.2447, -6.4175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6943, device='cuda:0', dtype=torch.float64)
tensor([-3.4567, -5.2366, -5.1096, -6.2457, -6.3956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4761, device='cuda:0', dtype=torch.float64)
tensor([-3.4601, -5.2689, -5.1067, -6.2324, -6.3883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6013, device='cuda:0', dtype=torch.float64)
tensor([-3.4696, -5.3106, -5.0984, -6.2213, -6.3787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5492, device='cuda:0', dtype=torch.float64)
tensor([-3.4736, -5.3377, -5.0857, -6.2171, -6.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4580, device='cuda:0', dtype=torch.float64)
tensor([-3.4740, -5.3518, -5.0704, -6.2008, -6.3760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5033, device='cuda:0', dtype=torch.float64)
tensor([-3.4708, -5.3587, -5.0658, -6.1940, -6.3752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3313, device='cuda:0', dtype=torch.float64)
tensor([-3.4634, -5.3548, -5.0613, -6.1956, -6.3848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4902, device='cuda:0', dtype=torch.float64)
tensor([-3.4691, -5.3490, -5.0536, -6.2067, -6.3951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3992, device='cuda:0', dtype=torch.float64)
tensor([-3.4783, -5.3397, -5.0477, -6.2111, -6.4016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3924, device='cuda:0', dtype=torch.float64)
tensor([-3.4938, -5.3264, -5.0395, -6.2120, -6.4068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6023, device='cuda:0', dtype=torch.float64)
tensor([-3.5119, -5.3199, -5.0337, -6.2249, -6.4063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4430, device='cuda:0', dtype=torch.float64)
tensor([-3.5236, -5.3115, -5.0206, -6.2246, -6.3997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5651, device='cuda:0', dtype=torch.float64)
tensor([-3.5359, -5.2973, -5.0046, -6.2157, -6.3839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7886, device='cuda:0', dtype=torch.float64)
tensor([-3.5499, -5.2837, -4.9940, -6.2047, -6.3531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5134, device='cuda:0', dtype=torch.float64)
tensor([-3.5719, -5.2754, -4.9859, -6.1822, -6.3268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5895, device='cuda:0', dtype=torch.float64)
tensor([-3.5954, -5.2613, -4.9745, -6.1582, -6.2977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5292, device='cuda:0', dtype=torch.float64)
tensor([-3.6267, -5.2432, -4.9719, -6.1493, -6.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4344, device='cuda:0', dtype=torch.float64)
tensor([-3.6576, -5.2271, -4.9723, -6.1306, -6.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5773, device='cuda:0', dtype=torch.float64)
tensor([-3.6709, -5.2241, -4.9818, -6.1212, -6.2539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6273, device='cuda:0', dtype=torch.float64)
tensor([-3.6699, -5.2155, -4.9926, -6.1159, -6.2413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4424, device='cuda:0', dtype=torch.float64)
tensor([-3.6631, -5.2071, -5.0058, -6.1284, -6.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4375, device='cuda:0', dtype=torch.float64)
tensor([-3.6551, -5.1880, -5.0272, -6.1390, -6.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4220, device='cuda:0', dtype=torch.float64)
tensor([-3.6524, -5.1741, -5.0394, -6.1456, -6.2124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6683, device='cuda:0', dtype=torch.float64)
tensor([-3.6438, -5.1620, -5.0589, -6.1370, -6.2067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6597, device='cuda:0', dtype=torch.float64)
tensor([-3.6354, -5.1609, -5.0756, -6.1171, -6.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6848, device='cuda:0', dtype=torch.float64)
tensor([-3.6354, -5.1736, -5.0819, -6.1012, -6.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4213, device='cuda:0', dtype=torch.float64)
tensor([-3.6380, -5.1819, -5.0878, -6.0739, -6.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3225, device='cuda:0', dtype=torch.float64)
tensor([-3.6354, -5.1897, -5.0935, -6.0429, -6.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3102, device='cuda:0', dtype=torch.float64)
tensor([-3.6321, -5.1974, -5.0957, -6.0166, -6.2059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5213, device='cuda:0', dtype=torch.float64)
tensor([-3.6332, -5.2266, -5.0986, -5.9919, -6.2168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4409, device='cuda:0', dtype=torch.float64)
tensor([-3.6353, -5.2521, -5.1002, -5.9733, -6.2342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4772, device='cuda:0', dtype=torch.float64)
tensor([-3.6204, -5.2772, -5.1017, -5.9698, -6.2336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3518, device='cuda:0', dtype=torch.float64)
tensor([-3.6164, -5.2961, -5.0954, -5.9728, -6.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2988, device='cuda:0', dtype=torch.float64)
tensor([-3.6130, -5.2953, -5.0815, -5.9837, -6.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7023, device='cuda:0', dtype=torch.float64)
tensor([-3.6207, -5.2996, -5.0690, -5.9997, -6.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2584, device='cuda:0', dtype=torch.float64)
tensor([-3.6213, -5.3008, -5.0609, -6.0123, -6.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5179, device='cuda:0', dtype=torch.float64)
tensor([-3.6270, -5.2849, -5.0479, -6.0319, -6.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7157, device='cuda:0', dtype=torch.float64)
tensor([-3.6301, -5.2756, -5.0326, -6.0343, -6.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7071, device='cuda:0', dtype=torch.float64)
tensor([-3.6246, -5.2652, -5.0258, -6.0263, -6.1570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4364, device='cuda:0', dtype=torch.float64)
tensor([-3.6143, -5.2562, -5.0168, -6.0178, -6.1462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9202, device='cuda:0', dtype=torch.float64)
tensor([-3.6124, -5.2675, -5.0070, -5.9824, -6.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3824, device='cuda:0', dtype=torch.float64)
tensor([-3.6041, -5.2727, -5.0021, -5.9684, -6.0996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4201, device='cuda:0', dtype=torch.float64)
tensor([-3.6085, -5.2747, -4.9938, -5.9560, -6.0674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5620, device='cuda:0', dtype=torch.float64)
tensor([-3.6201, -5.2820, -4.9814, -5.9407, -6.0367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4268, device='cuda:0', dtype=torch.float64)
tensor([-3.6273, -5.2780, -4.9740, -5.9323, -6.0088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6078, device='cuda:0', dtype=torch.float64)
tensor([-3.6427, -5.2755, -4.9713, -5.9245, -5.9969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5971, device='cuda:0', dtype=torch.float64)
tensor([-3.6632, -5.2624, -4.9729, -5.9254, -5.9854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5960, device='cuda:0', dtype=torch.float64)
tensor([-3.6802, -5.2464, -4.9709, -5.9140, -5.9763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3802, device='cuda:0', dtype=torch.float64)
tensor([-3.6894, -5.2210, -4.9733, -5.9018, -5.9699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4778, device='cuda:0', dtype=torch.float64)
tensor([-3.6942, -5.1931, -4.9783, -5.8857, -5.9656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4349, device='cuda:0', dtype=torch.float64)
tensor([-3.6987, -5.1729, -4.9835, -5.8569, -5.9706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6582, device='cuda:0', dtype=torch.float64)
tensor([-3.6968, -5.1671, -4.9955, -5.8525, -5.9793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5413, device='cuda:0', dtype=torch.float64)
tensor([-3.6914, -5.1701, -5.0114, -5.8518, -5.9845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6561, device='cuda:0', dtype=torch.float64)
tensor([-3.6807, -5.1766, -5.0301, -5.8515, -5.9962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6553, device='cuda:0', dtype=torch.float64)
tensor([-3.6702, -5.1747, -5.0485, -5.8500, -6.0139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6090, device='cuda:0', dtype=torch.float64)
tensor([-3.6487, -5.1861, -5.0592, -5.8194, -6.0205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4662, device='cuda:0', dtype=torch.float64)
tensor([-3.6282, -5.2088, -5.0707, -5.7759, -6.0388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3924, device='cuda:0', dtype=torch.float64)
tensor([-3.6125, -5.2330, -5.0814, -5.7389, -6.0493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5084, device='cuda:0', dtype=torch.float64)
tensor([-3.5985, -5.2547, -5.0915, -5.7061, -6.0619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5955, device='cuda:0', dtype=torch.float64)
tensor([-3.5835, -5.2735, -5.1069, -5.6955, -6.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5446, device='cuda:0', dtype=torch.float64)
tensor([-3.5724, -5.2732, -5.1228, -5.7035, -6.0987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3014, device='cuda:0', dtype=torch.float64)
tensor([-3.5688, -5.2652, -5.1331, -5.7004, -6.1118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4036, device='cuda:0', dtype=torch.float64)
tensor([-3.5662, -5.2551, -5.1340, -5.6832, -6.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4719, device='cuda:0', dtype=torch.float64)
tensor([-3.5660, -5.2449, -5.1235, -5.6879, -6.1175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4493, device='cuda:0', dtype=torch.float64)
tensor([-3.5528, -5.2334, -5.1134, -5.6877, -6.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5494, device='cuda:0', dtype=torch.float64)
tensor([-3.5505, -5.2367, -5.1043, -5.6971, -6.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5844, device='cuda:0', dtype=torch.float64)
tensor([-3.5465, -5.2441, -5.0909, -5.7245, -6.0677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4692, device='cuda:0', dtype=torch.float64)
tensor([-3.5283, -5.2483, -5.0819, -5.7598, -6.0497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5425, device='cuda:0', dtype=torch.float64)
tensor([-3.5088, -5.2415, -5.0715, -5.8105, -6.0439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5930, device='cuda:0', dtype=torch.float64)
tensor([-3.4906, -5.2155, -5.0656, -5.8788, -6.0372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3162, device='cuda:0', dtype=torch.float64)
tensor([-3.4741, -5.1886, -5.0590, -5.9489, -6.0296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4745, device='cuda:0', dtype=torch.float64)
tensor([-3.4660, -5.1592, -5.0479, -6.0234, -6.0192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7589, device='cuda:0', dtype=torch.float64)
tensor([-3.4634, -5.1475, -5.0456, -6.0922, -6.0183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4871, device='cuda:0', dtype=torch.float64)
tensor([-3.4622, -5.1496, -5.0343, -6.1321, -6.0194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4429, device='cuda:0', dtype=torch.float64)
tensor([-3.4643, -5.1561, -5.0210, -6.1360, -6.0298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6734, device='cuda:0', dtype=torch.float64)
tensor([-3.4747, -5.1702, -5.0179, -6.1242, -6.0360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5136, device='cuda:0', dtype=torch.float64)
tensor([-3.4854, -5.1830, -5.0131, -6.0959, -6.0388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3052, device='cuda:0', dtype=torch.float64)
tensor([-3.4907, -5.1911, -5.0027, -6.0759, -6.0320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5925, device='cuda:0', dtype=torch.float64)
tensor([-3.4955, -5.2092, -4.9943, -6.0447, -6.0137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5385, device='cuda:0', dtype=torch.float64)
tensor([-3.4987, -5.2212, -4.9954, -6.0128, -6.0016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3274, device='cuda:0', dtype=torch.float64)
tensor([-3.4996, -5.2240, -4.9903, -5.9775, -5.9912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5665, device='cuda:0', dtype=torch.float64)
tensor([-3.4999, -5.2154, -4.9829, -5.9494, -5.9801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7626, device='cuda:0', dtype=torch.float64)
tensor([-3.4972, -5.2091, -4.9699, -5.9347, -5.9678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5144, device='cuda:0', dtype=torch.float64)
tensor([-3.4876, -5.2010, -4.9559, -5.9235, -5.9518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7603, device='cuda:0', dtype=torch.float64)
tensor([-3.4782, -5.1842, -4.9442, -5.9192, -5.9486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4967, device='cuda:0', dtype=torch.float64)
tensor([-3.4611, -5.1589, -4.9344, -5.9255, -5.9414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5631, device='cuda:0', dtype=torch.float64)
tensor([-3.4544, -5.1331, -4.9322, -5.9325, -5.9368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4601, device='cuda:0', dtype=torch.float64)
tensor([-3.4477, -5.1208, -4.9302, -5.9252, -5.9412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6224, device='cuda:0', dtype=torch.float64)
tensor([-3.4455, -5.1126, -4.9315, -5.9258, -5.9588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4798, device='cuda:0', dtype=torch.float64)
tensor([-3.4457, -5.1129, -4.9415, -5.9197, -5.9776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4760, device='cuda:0', dtype=torch.float64)
tensor([-3.4489, -5.1200, -4.9516, -5.8978, -5.9993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6494, device='cuda:0', dtype=torch.float64)
tensor([-3.4616, -5.1289, -4.9575, -5.8745, -6.0211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6681, device='cuda:0', dtype=torch.float64)
tensor([-3.4769, -5.1443, -4.9680, -5.8494, -6.0572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5746, device='cuda:0', dtype=torch.float64)
tensor([-3.4994, -5.1661, -4.9744, -5.8158, -6.0940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3723, device='cuda:0', dtype=torch.float64)
tensor([-3.5222, -5.1811, -4.9773, -5.7884, -6.1291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5855, device='cuda:0', dtype=torch.float64)
tensor([-3.5407, -5.2003, -4.9781, -5.7703, -6.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5844, device='cuda:0', dtype=torch.float64)
tensor([-3.5653, -5.2112, -4.9849, -5.7759, -6.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5421, device='cuda:0', dtype=torch.float64)
tensor([-3.5943, -5.2161, -4.9864, -5.7893, -6.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3893, device='cuda:0', dtype=torch.float64)
tensor([-3.6281, -5.2177, -4.9870, -5.8115, -6.2499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3756, device='cuda:0', dtype=torch.float64)
tensor([-3.6579, -5.2166, -4.9902, -5.8483, -6.2582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4461, device='cuda:0', dtype=torch.float64)
tensor([-3.6787, -5.2157, -4.9903, -5.8852, -6.2521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2268, device='cuda:0', dtype=torch.float64)
tensor([-3.6929, -5.2227, -4.9866, -5.9176, -6.2427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4862, device='cuda:0', dtype=torch.float64)
tensor([-3.7122, -5.2353, -4.9838, -5.9555, -6.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2936, device='cuda:0', dtype=torch.float64)
tensor([-3.7196, -5.2371, -4.9854, -5.9903, -6.2340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3710, device='cuda:0', dtype=torch.float64)
tensor([-3.7206, -5.2317, -4.9853, -6.0179, -6.2206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2950, device='cuda:0', dtype=torch.float64)
tensor([-3.7201, -5.2373, -4.9844, -6.0251, -6.2057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4879, device='cuda:0', dtype=torch.float64)
tensor([-3.7196, -5.2385, -4.9881, -6.0357, -6.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6146, device='cuda:0', dtype=torch.float64)
tensor([-3.7101, -5.2329, -4.9942, -6.0394, -6.1333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8213, device='cuda:0', dtype=torch.float64)
tensor([-3.7009, -5.2204, -5.0108, -6.0635, -6.1067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3929, device='cuda:0', dtype=torch.float64)
tensor([-3.6899, -5.2034, -5.0284, -6.0738, -6.0844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3031, device='cuda:0', dtype=torch.float64)
tensor([-3.6860, -5.1866, -5.0456, -6.0726, -6.0684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5476, device='cuda:0', dtype=torch.float64)
tensor([-3.6691, -5.1491, -5.0611, -6.0715, -6.0464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4046, device='cuda:0', dtype=torch.float64)
tensor([-3.6497, -5.1067, -5.0796, -6.0920, -6.0284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5933, device='cuda:0', dtype=torch.float64)
tensor([-3.6284, -5.0672, -5.0999, -6.1064, -6.0064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8362, device='cuda:0', dtype=torch.float64)
tensor([-3.6356, -5.0444, -5.1021, -6.0992, -5.9893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6363, device='cuda:0', dtype=torch.float64)
tensor([-3.6434, -5.0254, -5.1105, -6.0991, -5.9641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4624, device='cuda:0', dtype=torch.float64)
tensor([-3.6471, -5.0049, -5.1242, -6.1006, -5.9447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5417, device='cuda:0', dtype=torch.float64)
tensor([-3.6526, -4.9985, -5.1330, -6.0844, -5.9283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7736, device='cuda:0', dtype=torch.float64)
tensor([-3.6575, -4.9964, -5.1490, -6.0601, -5.9194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4718, device='cuda:0', dtype=torch.float64)
tensor([-3.6613, -5.0033, -5.1673, -6.0255, -5.9193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4231, device='cuda:0', dtype=torch.float64)
tensor([-3.6642, -5.0150, -5.1765, -5.9822, -5.9231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5837, device='cuda:0', dtype=torch.float64)
tensor([-3.6706, -5.0200, -5.1907, -5.9495, -5.9244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6077, device='cuda:0', dtype=torch.float64)
tensor([-3.6768, -5.0351, -5.1995, -5.9080, -5.9364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7508, device='cuda:0', dtype=torch.float64)
tensor([-3.6793, -5.0498, -5.2003, -5.8551, -5.9497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6733, device='cuda:0', dtype=torch.float64)
tensor([-3.6942, -5.0582, -5.1916, -5.8199, -5.9653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5534, device='cuda:0', dtype=torch.float64)
tensor([-3.7187, -5.0703, -5.1749, -5.7862, -5.9789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5641, device='cuda:0', dtype=torch.float64)
tensor([-3.7334, -5.0886, -5.1624, -5.7377, -5.9904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5882, device='cuda:0', dtype=torch.float64)
tensor([-3.7548, -5.1060, -5.1493, -5.7132, -5.9987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4441, device='cuda:0', dtype=torch.float64)
tensor([-3.7732, -5.1313, -5.1407, -5.7014, -6.0130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4061, device='cuda:0', dtype=torch.float64)
tensor([-3.7798, -5.1495, -5.1337, -5.7114, -6.0276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7473, device='cuda:0', dtype=torch.float64)
tensor([-3.7763, -5.1658, -5.1339, -5.7404, -6.0444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5299, device='cuda:0', dtype=torch.float64)
tensor([-3.7648, -5.1886, -5.1407, -5.7776, -6.0567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3703, device='cuda:0', dtype=torch.float64)
tensor([-3.7586, -5.2092, -5.1506, -5.8104, -6.0779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4787, device='cuda:0', dtype=torch.float64)
tensor([-3.7413, -5.2145, -5.1594, -5.8545, -6.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4280, device='cuda:0', dtype=torch.float64)
tensor([-3.7205, -5.2134, -5.1618, -5.8881, -6.0955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4244, device='cuda:0', dtype=torch.float64)
tensor([-3.7102, -5.2139, -5.1536, -5.9100, -6.0909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8483, device='cuda:0', dtype=torch.float64)
tensor([-3.7114, -5.2219, -5.1412, -5.9108, -6.0800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5101, device='cuda:0', dtype=torch.float64)
tensor([-3.7243, -5.2446, -5.1237, -5.9071, -6.0873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5538, device='cuda:0', dtype=torch.float64)
tensor([-3.7360, -5.2703, -5.1093, -5.9140, -6.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5169, device='cuda:0', dtype=torch.float64)
tensor([-3.7453, -5.3026, -5.0950, -5.9166, -6.0867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5719, device='cuda:0', dtype=torch.float64)
tensor([-3.7632, -5.3222, -5.0787, -5.9056, -6.0741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4761, device='cuda:0', dtype=torch.float64)
tensor([-3.7751, -5.3258, -5.0654, -5.8969, -6.0581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6290, device='cuda:0', dtype=torch.float64)
tensor([-3.7843, -5.3247, -5.0650, -5.8992, -6.0564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5633, device='cuda:0', dtype=torch.float64)
tensor([-3.7757, -5.3156, -5.0753, -5.9047, -6.0599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4587, device='cuda:0', dtype=torch.float64)
tensor([-3.7755, -5.2951, -5.0890, -5.9284, -6.0601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7102, device='cuda:0', dtype=torch.float64)
tensor([-3.7877, -5.2930, -5.1076, -5.9398, -6.0555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5383, device='cuda:0', dtype=torch.float64)
tensor([-3.7979, -5.2837, -5.1304, -5.9608, -6.0643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([-3.8080, -5.2844, -5.1467, -5.9618, -6.0715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5731, device='cuda:0', dtype=torch.float64)
tensor([-3.8263, -5.2913, -5.1680, -5.9693, -6.0780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4137, device='cuda:0', dtype=torch.float64)
tensor([-3.8317, -5.2869, -5.1757, -5.9770, -6.0781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5095, device='cuda:0', dtype=torch.float64)
tensor([-3.8220, -5.2805, -5.1843, -6.0195, -6.0907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9051, device='cuda:0', dtype=torch.float64)
tensor([-3.8142, -5.2657, -5.1866, -6.0796, -6.1046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3944, device='cuda:0', dtype=torch.float64)
tensor([-3.7953, -5.2507, -5.1833, -6.1403, -6.1054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5147, device='cuda:0', dtype=torch.float64)
tensor([-3.7864, -5.2370, -5.1842, -6.2001, -6.1158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4201, device='cuda:0', dtype=torch.float64)
tensor([-3.7858, -5.2293, -5.1751, -6.2356, -6.1245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4421, device='cuda:0', dtype=torch.float64)
tensor([-3.7894, -5.2190, -5.1599, -6.2460, -6.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6868, device='cuda:0', dtype=torch.float64)
tensor([-3.8042, -5.2278, -5.1551, -6.2242, -6.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4913, device='cuda:0', dtype=torch.float64)
tensor([-3.8079, -5.2370, -5.1512, -6.1997, -6.1431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5001, device='cuda:0', dtype=torch.float64)
tensor([-3.8122, -5.2488, -5.1516, -6.1684, -6.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8075, device='cuda:0', dtype=torch.float64)
tensor([-3.8110, -5.2583, -5.1441, -6.1512, -6.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6737, device='cuda:0', dtype=torch.float64)
tensor([-3.8124, -5.2657, -5.1460, -6.1219, -6.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4588, device='cuda:0', dtype=torch.float64)
tensor([-3.8096, -5.2768, -5.1492, -6.1104, -6.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4024, device='cuda:0', dtype=torch.float64)
tensor([-3.8047, -5.2849, -5.1632, -6.0917, -6.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6282, device='cuda:0', dtype=torch.float64)
tensor([-3.8134, -5.2877, -5.1717, -6.0803, -6.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7549, device='cuda:0', dtype=torch.float64)
tensor([-3.8236, -5.2944, -5.1684, -6.0764, -6.1993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4071, device='cuda:0', dtype=torch.float64)
tensor([-3.8265, -5.2807, -5.1591, -6.0832, -6.1995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2747, device='cuda:0', dtype=torch.float64)
tensor([-3.8223, -5.2645, -5.1600, -6.0944, -6.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3635, device='cuda:0', dtype=torch.float64)
tensor([-3.8108, -5.2465, -5.1603, -6.1055, -6.1988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4548, device='cuda:0', dtype=torch.float64)
tensor([-3.8075, -5.2310, -5.1536, -6.1284, -6.2054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5012, device='cuda:0', dtype=torch.float64)
tensor([-3.8044, -5.2149, -5.1412, -6.1405, -6.2010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4241, device='cuda:0', dtype=torch.float64)
tensor([-3.8006, -5.1940, -5.1342, -6.1393, -6.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7829, device='cuda:0', dtype=torch.float64)
tensor([-3.8136, -5.1719, -5.1304, -6.1390, -6.2197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7000, device='cuda:0', dtype=torch.float64)
tensor([-3.8228, -5.1651, -5.1275, -6.1394, -6.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4960, device='cuda:0', dtype=torch.float64)
tensor([-3.8413, -5.1605, -5.1236, -6.1524, -6.2377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6924, device='cuda:0', dtype=torch.float64)
tensor([-3.8542, -5.1578, -5.1246, -6.1724, -6.2459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3908, device='cuda:0', dtype=torch.float64)
tensor([-3.8703, -5.1662, -5.1208, -6.1778, -6.2436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4482, device='cuda:0', dtype=torch.float64)
tensor([-3.8927, -5.1711, -5.1139, -6.1477, -6.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4017, device='cuda:0', dtype=torch.float64)
tensor([-3.9102, -5.1724, -5.1110, -6.0993, -6.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2261, device='cuda:0', dtype=torch.float64)
tensor([-3.9186, -5.1708, -5.1185, -6.0627, -6.2151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3213, device='cuda:0', dtype=torch.float64)
tensor([-3.9283, -5.1673, -5.1300, -6.0334, -6.2014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5513, device='cuda:0', dtype=torch.float64)
tensor([-3.9371, -5.1679, -5.1350, -5.9960, -6.1886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4125, device='cuda:0', dtype=torch.float64)
tensor([-3.9542, -5.1829, -5.1283, -5.9570, -6.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3409, device='cuda:0', dtype=torch.float64)
tensor([-3.9602, -5.1998, -5.1255, -5.9305, -6.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5510, device='cuda:0', dtype=torch.float64)
tensor([-3.9748, -5.2107, -5.1214, -5.9268, -6.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3130, device='cuda:0', dtype=torch.float64)
tensor([-3.9866, -5.2226, -5.1239, -5.9295, -6.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6146, device='cuda:0', dtype=torch.float64)
tensor([-4.0067, -5.2458, -5.1323, -5.9441, -6.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5994, device='cuda:0', dtype=torch.float64)
tensor([-4.0299, -5.2699, -5.1260, -5.9612, -6.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3997, device='cuda:0', dtype=torch.float64)
tensor([-4.0501, -5.3014, -5.1237, -5.9620, -6.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6391, device='cuda:0', dtype=torch.float64)
tensor([-4.0658, -5.3326, -5.1212, -5.9594, -6.1891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3166, device='cuda:0', dtype=torch.float64)
tensor([-4.0783, -5.3639, -5.1200, -5.9499, -6.1809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5295, device='cuda:0', dtype=torch.float64)
tensor([-4.0871, -5.3932, -5.1323, -5.9600, -6.1697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2878, device='cuda:0', dtype=torch.float64)
tensor([-4.0963, -5.4117, -5.1463, -5.9686, -6.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8058, device='cuda:0', dtype=torch.float64)
tensor([-4.1038, -5.4245, -5.1607, -5.9870, -6.1475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6411, device='cuda:0', dtype=torch.float64)
tensor([-4.1100, -5.4203, -5.1820, -5.9973, -6.1425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7232, device='cuda:0', dtype=torch.float64)
tensor([-4.1154, -5.4118, -5.1923, -5.9963, -6.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4971, device='cuda:0', dtype=torch.float64)
tensor([-4.1184, -5.4056, -5.2119, -5.9965, -6.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5950, device='cuda:0', dtype=torch.float64)
tensor([-4.1262, -5.3899, -5.2290, -5.9955, -6.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4738, device='cuda:0', dtype=torch.float64)
tensor([-4.1222, -5.3677, -5.2456, -5.9890, -6.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7232, device='cuda:0', dtype=torch.float64)
tensor([-4.1242, -5.3601, -5.2624, -5.9881, -6.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5796, device='cuda:0', dtype=torch.float64)
tensor([-4.1206, -5.3614, -5.2801, -5.9897, -6.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8440, device='cuda:0', dtype=torch.float64)
tensor([-4.1135, -5.3741, -5.2976, -5.9805, -6.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4073, device='cuda:0', dtype=torch.float64)
tensor([-4.1044, -5.3789, -5.3080, -5.9810, -6.1790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4844, device='cuda:0', dtype=torch.float64)
tensor([-4.0903, -5.3816, -5.3126, -5.9918, -6.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3294, device='cuda:0', dtype=torch.float64)
tensor([-4.0756, -5.3858, -5.3189, -5.9969, -6.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3244, device='cuda:0', dtype=torch.float64)
tensor([-4.0501, -5.3966, -5.3235, -5.9990, -6.1846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6710, device='cuda:0', dtype=torch.float64)
tensor([-4.0352, -5.4248, -5.3280, -6.0216, -6.2004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6843, device='cuda:0', dtype=torch.float64)
tensor([-4.0402, -5.4461, -5.3286, -6.0289, -6.2196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4546, device='cuda:0', dtype=torch.float64)
tensor([-4.0509, -5.4663, -5.3275, -6.0489, -6.2342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5698, device='cuda:0', dtype=torch.float64)
tensor([-4.0591, -5.4901, -5.3212, -6.0795, -6.2531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5674, device='cuda:0', dtype=torch.float64)
tensor([-4.0659, -5.5001, -5.3232, -6.1152, -6.2732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7726, device='cuda:0', dtype=torch.float64)
tensor([-4.0727, -5.5115, -5.3229, -6.1548, -6.2904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7328, device='cuda:0', dtype=torch.float64)
tensor([-4.0777, -5.5345, -5.3194, -6.1914, -6.3060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5227, device='cuda:0', dtype=torch.float64)
tensor([-4.0682, -5.5615, -5.3209, -6.2317, -6.3201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4985, device='cuda:0', dtype=torch.float64)
tensor([-4.0621, -5.5816, -5.3196, -6.2573, -6.3355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6906, device='cuda:0', dtype=torch.float64)
tensor([-4.0651, -5.5823, -5.3189, -6.2977, -6.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8098, device='cuda:0', dtype=torch.float64)
tensor([-4.0693, -5.5909, -5.3189, -6.3176, -6.3687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3679, device='cuda:0', dtype=torch.float64)
tensor([-4.0623, -5.5952, -5.3224, -6.3604, -6.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6499, device='cuda:0', dtype=torch.float64)
tensor([-4.0628, -5.5925, -5.3287, -6.3917, -6.3619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4132, device='cuda:0', dtype=torch.float64)
tensor([-4.0671, -5.6033, -5.3374, -6.4358, -6.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7770, device='cuda:0', dtype=torch.float64)
tensor([-4.0780, -5.6106, -5.3512, -6.4834, -6.3408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7096, device='cuda:0', dtype=torch.float64)
tensor([-4.0873, -5.6214, -5.3732, -6.5273, -6.3318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5189, device='cuda:0', dtype=torch.float64)
tensor([-4.1090, -5.6301, -5.3943, -6.5576, -6.3317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4398, device='cuda:0', dtype=torch.float64)
tensor([-4.1301, -5.6291, -5.4159, -6.5840, -6.3341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5681, device='cuda:0', dtype=torch.float64)
tensor([-4.1539, -5.6333, -5.4199, -6.6277, -6.3254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7283, device='cuda:0', dtype=torch.float64)
tensor([-4.1950, -5.6377, -5.4172, -6.6438, -6.3107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5583, device='cuda:0', dtype=torch.float64)
tensor([-4.2379, -5.6590, -5.4153, -6.6270, -6.3035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3858, device='cuda:0', dtype=torch.float64)
tensor([-4.2755, -5.6842, -5.4133, -6.6020, -6.2982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4706, device='cuda:0', dtype=torch.float64)
tensor([-4.2945, -5.7091, -5.4174, -6.5545, -6.2994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6574, device='cuda:0', dtype=torch.float64)
tensor([-4.3070, -5.7323, -5.4204, -6.4819, -6.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5003, device='cuda:0', dtype=torch.float64)
tensor([-4.3115, -5.7434, -5.4202, -6.4006, -6.3334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3691, device='cuda:0', dtype=torch.float64)
tensor([-4.3210, -5.7571, -5.4145, -6.3358, -6.3600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6037, device='cuda:0', dtype=torch.float64)
tensor([-4.3211, -5.7676, -5.4104, -6.2821, -6.3874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5912, device='cuda:0', dtype=torch.float64)
tensor([-4.2987, -5.7812, -5.4113, -6.2733, -6.4071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4737, device='cuda:0', dtype=torch.float64)
tensor([-4.2752, -5.7879, -5.4155, -6.2537, -6.4244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4084, device='cuda:0', dtype=torch.float64)
tensor([-4.2558, -5.7902, -5.4164, -6.2340, -6.4382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4751, device='cuda:0', dtype=torch.float64)
tensor([-4.2266, -5.7893, -5.4211, -6.2308, -6.4472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4765, device='cuda:0', dtype=torch.float64)
tensor([-4.2022, -5.7926, -5.4209, -6.2104, -6.4520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6961, device='cuda:0', dtype=torch.float64)
tensor([-4.1895, -5.8129, -5.4217, -6.2181, -6.4597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4908, device='cuda:0', dtype=torch.float64)
tensor([-4.1808, -5.8432, -5.4221, -6.2455, -6.4720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3752, device='cuda:0', dtype=torch.float64)
tensor([-4.1679, -5.8624, -5.4300, -6.2605, -6.4835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6389, device='cuda:0', dtype=torch.float64)
tensor([-4.1538, -5.8696, -5.4371, -6.2732, -6.4937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4892, device='cuda:0', dtype=torch.float64)
tensor([-4.1544, -5.8754, -5.4359, -6.2735, -6.5050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3550, device='cuda:0', dtype=torch.float64)
tensor([-4.1624, -5.8718, -5.4280, -6.2855, -6.5251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7520, device='cuda:0', dtype=torch.float64)
tensor([-4.1705, -5.8584, -5.4093, -6.2996, -6.5568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4822, device='cuda:0', dtype=torch.float64)
tensor([-4.1877, -5.8445, -5.3934, -6.3118, -6.5741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6829, device='cuda:0', dtype=torch.float64)
tensor([-4.2074, -5.8399, -5.3737, -6.3195, -6.5900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4385, device='cuda:0', dtype=torch.float64)
tensor([-4.2196, -5.8313, -5.3600, -6.3257, -6.6114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5039, device='cuda:0', dtype=torch.float64)
tensor([-4.2222, -5.8212, -5.3525, -6.3371, -6.6245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4672, device='cuda:0', dtype=torch.float64)
tensor([-4.2299, -5.8036, -5.3393, -6.3491, -6.6309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4645, device='cuda:0', dtype=torch.float64)
tensor([-4.2391, -5.8059, -5.3356, -6.3352, -6.6314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5036, device='cuda:0', dtype=torch.float64)
tensor([-4.2368, -5.7895, -5.3319, -6.3060, -6.6267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4534, device='cuda:0', dtype=torch.float64)
tensor([-4.2465, -5.7730, -5.3311, -6.2836, -6.6255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4890, device='cuda:0', dtype=torch.float64)
tensor([-4.2522, -5.7540, -5.3312, -6.2609, -6.6239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7623, device='cuda:0', dtype=torch.float64)
tensor([-4.2787, -5.7541, -5.3265, -6.2527, -6.6382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7507, device='cuda:0', dtype=torch.float64)
tensor([-4.3014, -5.7576, -5.3262, -6.2530, -6.6629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6071, device='cuda:0', dtype=torch.float64)
tensor([-4.3168, -5.7672, -5.3317, -6.2607, -6.6847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4499, device='cuda:0', dtype=torch.float64)
tensor([-4.3182, -5.7738, -5.3413, -6.2555, -6.6976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7833, device='cuda:0', dtype=torch.float64)
tensor([-4.3234, -5.7868, -5.3522, -6.2532, -6.7076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7093, device='cuda:0', dtype=torch.float64)
tensor([-4.3381, -5.7953, -5.3680, -6.2447, -6.7290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-4.3457, -5.8055, -5.3833, -6.2382, -6.7534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5669, device='cuda:0', dtype=torch.float64)
tensor([-4.3568, -5.8226, -5.3986, -6.2286, -6.7757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6726, device='cuda:0', dtype=torch.float64)
tensor([-4.3679, -5.8506, -5.4164, -6.2185, -6.7917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5070, device='cuda:0', dtype=torch.float64)
tensor([-4.3766, -5.8802, -5.4264, -6.2079, -6.8150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6989, device='cuda:0', dtype=torch.float64)
tensor([-4.3854, -5.8865, -5.4501, -6.2281, -6.8322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3432, device='cuda:0', dtype=torch.float64)
tensor([-4.4109, -5.8913, -5.4694, -6.2468, -6.8510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-4.4470, -5.8965, -5.4807, -6.2629, -6.8633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4615, device='cuda:0', dtype=torch.float64)
tensor([-4.4832, -5.9059, -5.4944, -6.2653, -6.8613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8192, device='cuda:0', dtype=torch.float64)
tensor([-4.5119, -5.8978, -5.5027, -6.2697, -6.8515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4410, device='cuda:0', dtype=torch.float64)
tensor([-4.5569, -5.8998, -5.5129, -6.2572, -6.8387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3817, device='cuda:0', dtype=torch.float64)
tensor([-4.5977, -5.9007, -5.5300, -6.2417, -6.8216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6053, device='cuda:0', dtype=torch.float64)
tensor([-4.6228, -5.9107, -5.5559, -6.2426, -6.8266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4388, device='cuda:0', dtype=torch.float64)
tensor([-4.6394, -5.9242, -5.5784, -6.2388, -6.8385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6291, device='cuda:0', dtype=torch.float64)
tensor([-4.6587, -5.9402, -5.5946, -6.2435, -6.8646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8809, device='cuda:0', dtype=torch.float64)
tensor([-4.6724, -5.9514, -5.6072, -6.2728, -6.8900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5940, device='cuda:0', dtype=torch.float64)
tensor([-4.6821, -5.9594, -5.6210, -6.2861, -6.9234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4259, device='cuda:0', dtype=torch.float64)
tensor([-4.6869, -5.9579, -5.6335, -6.2992, -6.9608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5047, device='cuda:0', dtype=torch.float64)
tensor([-4.6851, -5.9605, -5.6504, -6.2874, -6.9917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4343, device='cuda:0', dtype=torch.float64)
tensor([-4.6872, -5.9647, -5.6660, -6.2741, -7.0240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6081, device='cuda:0', dtype=torch.float64)
tensor([-4.6866, -5.9734, -5.6745, -6.2633, -7.0447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4643, device='cuda:0', dtype=torch.float64)
tensor([-4.6823, -5.9735, -5.6901, -6.2611, -7.0606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3940, device='cuda:0', dtype=torch.float64)
tensor([-4.6707, -5.9723, -5.7045, -6.2666, -7.0688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3297, device='cuda:0', dtype=torch.float64)
tensor([-4.6518, -5.9779, -5.7162, -6.2699, -7.0751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6511, device='cuda:0', dtype=torch.float64)
tensor([-4.6406, -5.9856, -5.7182, -6.2869, -7.0848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5254, device='cuda:0', dtype=torch.float64)
tensor([-4.6403, -6.0093, -5.7204, -6.3078, -7.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1509, device='cuda:0', dtype=torch.float64)
tensor([-4.6346, -6.0302, -5.7265, -6.3281, -7.1116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7924, device='cuda:0', dtype=torch.float64)
tensor([-4.6458, -6.0539, -5.7339, -6.3457, -7.1239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6291, device='cuda:0', dtype=torch.float64)
tensor([-4.6682, -6.0786, -5.7336, -6.3694, -7.1442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6440, device='cuda:0', dtype=torch.float64)
tensor([-4.6968, -6.1034, -5.7354, -6.3860, -7.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7294, device='cuda:0', dtype=torch.float64)
tensor([-4.7134, -6.1166, -5.7317, -6.3927, -7.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4052, device='cuda:0', dtype=torch.float64)
tensor([-4.7324, -6.1298, -5.7425, -6.4247, -7.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3923, device='cuda:0', dtype=torch.float64)
tensor([-4.7701, -6.1482, -5.7526, -6.4566, -7.2077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4752, device='cuda:0', dtype=torch.float64)
tensor([-4.8106, -6.1635, -5.7806, -6.4844, -7.2240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5694, device='cuda:0', dtype=torch.float64)
tensor([-4.8502, -6.1637, -5.8000, -6.5289, -7.2254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7119, device='cuda:0', dtype=torch.float64)
tensor([-4.8936, -6.1612, -5.8156, -6.5700, -7.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7429, device='cuda:0', dtype=torch.float64)
tensor([-4.9341, -6.1575, -5.8535, -6.6189, -7.2539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8946, device='cuda:0', dtype=torch.float64)
tensor([-4.9767, -6.1539, -5.8989, -6.6845, -7.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5296, device='cuda:0', dtype=torch.float64)
tensor([-5.0208, -6.1537, -5.9548, -6.7695, -7.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3948, device='cuda:0', dtype=torch.float64)
tensor([-5.0619, -6.1553, -6.0080, -6.8513, -7.3467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2890, device='cuda:0', dtype=torch.float64)
tensor([-5.0899, -6.1548, -6.0463, -6.9272, -7.3723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4736, device='cuda:0', dtype=torch.float64)
tensor([-5.1082, -6.1598, -6.0898, -6.9993, -7.4010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6221, device='cuda:0', dtype=torch.float64)
tensor([-5.1206, -6.1602, -6.1032, -7.0629, -7.4224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4728, device='cuda:0', dtype=torch.float64)
tensor([-5.1359, -6.1587, -6.0982, -7.0959, -7.4400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4238, device='cuda:0', dtype=torch.float64)
tensor([-5.1590, -6.1662, -6.0841, -7.1125, -7.4414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5281, device='cuda:0', dtype=torch.float64)
tensor([-5.1926, -6.1753, -6.0646, -7.1415, -7.4365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5561, device='cuda:0', dtype=torch.float64)
tensor([-5.2180, -6.1911, -6.0421, -7.1730, -7.4233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4699, device='cuda:0', dtype=torch.float64)
tensor([-5.2406, -6.2065, -6.0226, -7.2078, -7.4146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3742, device='cuda:0', dtype=torch.float64)
tensor([-5.2584, -6.2276, -6.0104, -7.2446, -7.4046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5411, device='cuda:0', dtype=torch.float64)
tensor([-5.2653, -6.2540, -6.0143, -7.2580, -7.4064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3847, device='cuda:0', dtype=torch.float64)
tensor([-5.2682, -6.2794, -6.0324, -7.2661, -7.4035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4390, device='cuda:0', dtype=torch.float64)
tensor([-5.2712, -6.3105, -6.0570, -7.2608, -7.4020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6078, device='cuda:0', dtype=torch.float64)
tensor([-5.2677, -6.3493, -6.0674, -7.2523, -7.3874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3273, device='cuda:0', dtype=torch.float64)
tensor([-5.2634, -6.3900, -6.0884, -7.2629, -7.3691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6658, device='cuda:0', dtype=torch.float64)
tensor([-5.2887, -6.4260, -6.1032, -7.2806, -7.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5089, device='cuda:0', dtype=torch.float64)
tensor([-5.3095, -6.4722, -6.1198, -7.2819, -7.3564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5001, device='cuda:0', dtype=torch.float64)
tensor([-5.3376, -6.5120, -6.1445, -7.2967, -7.3539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5892, device='cuda:0', dtype=torch.float64)
tensor([-5.3839, -6.5511, -6.1637, -7.3160, -7.3520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5627, device='cuda:0', dtype=torch.float64)
tensor([-5.4275, -6.5921, -6.1862, -7.3316, -7.3561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6114, device='cuda:0', dtype=torch.float64)
tensor([-5.4620, -6.6299, -6.2237, -7.3461, -7.3758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4314, device='cuda:0', dtype=torch.float64)
tensor([-5.4884, -6.6582, -6.2689, -7.3618, -7.4001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6237, device='cuda:0', dtype=torch.float64)
tensor([-5.5152, -6.6781, -6.3162, -7.3620, -7.4189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7345, device='cuda:0', dtype=torch.float64)
tensor([-5.5391, -6.6957, -6.3677, -7.3849, -7.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6047, device='cuda:0', dtype=torch.float64)
tensor([-5.5527, -6.7226, -6.4226, -7.4012, -7.4809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4231, device='cuda:0', dtype=torch.float64)
tensor([-5.5493, -6.7326, -6.4751, -7.4298, -7.5074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3621, device='cuda:0', dtype=torch.float64)
tensor([-5.5383, -6.7410, -6.5220, -7.4749, -7.5360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4219, device='cuda:0', dtype=torch.float64)
tensor([-5.5291, -6.7500, -6.5572, -7.5251, -7.5679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4204, device='cuda:0', dtype=torch.float64)
tensor([-5.5172, -6.7652, -6.5994, -7.5938, -7.6116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7471, device='cuda:0', dtype=torch.float64)
tensor([-5.5201, -6.7955, -6.6369, -7.6356, -7.6549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6655, device='cuda:0', dtype=torch.float64)
tensor([-5.5186, -6.8222, -6.6616, -7.6926, -7.6857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7344, device='cuda:0', dtype=torch.float64)
tensor([-5.5286, -6.8560, -6.6863, -7.7475, -7.7243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4448, device='cuda:0', dtype=torch.float64)
tensor([-5.5639, -6.8852, -6.7144, -7.7921, -7.7760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8523, device='cuda:0', dtype=torch.float64)
tensor([-5.6114, -6.9285, -6.7298, -7.8386, -7.8177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3123, device='cuda:0', dtype=torch.float64)
tensor([-5.6608, -6.9801, -6.7275, -7.8668, -7.8469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5326, device='cuda:0', dtype=torch.float64)
tensor([-5.7185, -7.0339, -6.7349, -7.8941, -7.8914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3721, device='cuda:0', dtype=torch.float64)
tensor([-5.7721, -7.0736, -6.7339, -7.9305, -7.9372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5042, device='cuda:0', dtype=torch.float64)
tensor([-5.8094, -7.1126, -6.7483, -7.9653, -7.9934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4556, device='cuda:0', dtype=torch.float64)
tensor([-5.8479, -7.1526, -6.7544, -8.0182, -8.0384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6444, device='cuda:0', dtype=torch.float64)
tensor([-5.8831, -7.2026, -6.7603, -8.0751, -8.0965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6013, device='cuda:0', dtype=torch.float64)
tensor([-5.9200, -7.2394, -6.7613, -8.1381, -8.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5014, device='cuda:0', dtype=torch.float64)
tensor([-5.9709, -7.2748, -6.7541, -8.2156, -8.2034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5018, device='cuda:0', dtype=torch.float64)
tensor([-6.0080, -7.3092, -6.7621, -8.2924, -8.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8623, device='cuda:0', dtype=torch.float64)
tensor([-6.0331, -7.3452, -6.7922, -8.3691, -8.3367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7009, device='cuda:0', dtype=torch.float64)
tensor([-6.0470, -7.3801, -6.8257, -8.4474, -8.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5080, device='cuda:0', dtype=torch.float64)
tensor([-6.0641, -7.4295, -6.8578, -8.5214, -8.4678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4282, device='cuda:0', dtype=torch.float64)
tensor([-6.0684, -7.4734, -6.9003, -8.5821, -8.5520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4157, device='cuda:0', dtype=torch.float64)
tensor([-6.0932, -7.5144, -6.9412, -8.6217, -8.6264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4503, device='cuda:0', dtype=torch.float64)
tensor([-6.1108, -7.5326, -7.0001, -8.6621, -8.6986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4288, device='cuda:0', dtype=torch.float64)
tensor([-6.1278, -7.5400, -7.0525, -8.6728, -8.7779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6689, device='cuda:0', dtype=torch.float64)
tensor([-6.1578, -7.5623, -7.1341, -8.6966, -8.8710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5052, device='cuda:0', dtype=torch.float64)
tensor([-6.1876, -7.5820, -7.2103, -8.7190, -8.9477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2249, device='cuda:0', dtype=torch.float64)
tensor([-6.2117, -7.5949, -7.2690, -8.7119, -8.9928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5192, device='cuda:0', dtype=torch.float64)
tensor([-6.2229, -7.6063, -7.2915, -8.6859, -9.0138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4689, device='cuda:0', dtype=torch.float64)
tensor([-6.2330, -7.5977, -7.3061, -8.6468, -9.0325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7110, device='cuda:0', dtype=torch.float64)
tensor([-6.2344, -7.6019, -7.3278, -8.5843, -9.0434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8617, device='cuda:0', dtype=torch.float64)
tensor([-6.2509, -7.6106, -7.3502, -8.5330, -9.0669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5545, device='cuda:0', dtype=torch.float64)
tensor([-6.2621, -7.6434, -7.3787, -8.4967, -9.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6918, device='cuda:0', dtype=torch.float64)
tensor([-6.2900, -7.6861, -7.4257, -8.4771, -9.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7162, device='cuda:0', dtype=torch.float64)
tensor([-6.3372, -7.7328, -7.4742, -8.4513, -9.2613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5279, device='cuda:0', dtype=torch.float64)
tensor([-6.4054, -7.7619, -7.5274, -8.4420, -9.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6897, device='cuda:0', dtype=torch.float64)
tensor([-6.4998, -7.7900, -7.5553, -8.4182, -9.3623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5955, device='cuda:0', dtype=torch.float64)
tensor([-6.5846, -7.8086, -7.5847, -8.4025, -9.3918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6314, device='cuda:0', dtype=torch.float64)
tensor([-6.6663, -7.8265, -7.6119, -8.3890, -9.4072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3915, device='cuda:0', dtype=torch.float64)
tensor([-6.7551, -7.8531, -7.6668, -8.3580, -9.4271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6390, device='cuda:0', dtype=torch.float64)
tensor([-6.8762, -7.8901, -7.7209, -8.3599, -9.4678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5363, device='cuda:0', dtype=torch.float64)
tensor([-7.0028, -7.9474, -7.7981, -8.3537, -9.4977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4872, device='cuda:0', dtype=torch.float64)
tensor([-7.1443, -8.0077, -7.8932, -8.3661, -9.5460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7969, device='cuda:0', dtype=torch.float64)
tensor([-7.2800, -8.0679, -8.0503, -8.4121, -9.6333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6705, device='cuda:0', dtype=torch.float64)
tensor([-7.4390, -8.1455, -8.2490, -8.4550, -9.7415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5440, device='cuda:0', dtype=torch.float64)
tensor([-7.6203, -8.2372, -8.4598, -8.5151, -9.8668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5224, device='cuda:0', dtype=torch.float64)
tensor([-7.7958, -8.3508, -8.6455, -8.5965, -9.9850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4323, device='cuda:0', dtype=torch.float64)
tensor([ -7.9193,  -8.4381,  -8.8323,  -8.6747, -10.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6238, device='cuda:0', dtype=torch.float64)
tensor([ -8.0389,  -8.5253,  -9.0431,  -8.7570, -10.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6851, device='cuda:0', dtype=torch.float64)
tensor([ -8.1664,  -8.6037,  -9.2508,  -8.8433, -10.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4242, device='cuda:0', dtype=torch.float64)
tensor([ -8.2978,  -8.6800,  -9.4601,  -8.9340, -10.4736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7698, device='cuda:0', dtype=torch.float64)
tensor([ -8.3909,  -8.7886,  -9.6463,  -9.0398, -10.5838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4230, device='cuda:0', dtype=torch.float64)
tensor([ -8.5023,  -8.8953,  -9.8548,  -9.1343, -10.6956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8318, device='cuda:0', dtype=torch.float64)
tensor([ -8.5914,  -9.0132, -10.0209,  -9.2461, -10.7933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4373, device='cuda:0', dtype=torch.float64)
tensor([ -8.6254,  -9.1322, -10.0932,  -9.3588, -10.8717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4709, device='cuda:0', dtype=torch.float64)
tensor([ -8.6371,  -9.2285, -10.1838,  -9.4692, -10.9550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4689, device='cuda:0', dtype=torch.float64)
tensor([ -8.7108,  -9.3238, -10.3072,  -9.5892, -11.0405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6489, device='cuda:0', dtype=torch.float64)
tensor([ -8.7790,  -9.4011, -10.4453,  -9.7025, -11.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6037, device='cuda:0', dtype=torch.float64)
tensor([ -8.8590,  -9.4752, -10.5693,  -9.8084, -11.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3701, device='cuda:0', dtype=torch.float64)
tensor([ -8.9475,  -9.5575, -10.7371,  -9.9362, -11.3456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7796, device='cuda:0', dtype=torch.float64)
tensor([ -8.9839,  -9.6415, -10.8955, -10.0907, -11.4481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3575, device='cuda:0', dtype=torch.float64)
tensor([ -8.9797,  -9.7288, -11.0380, -10.2183, -11.5529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4005, device='cuda:0', dtype=torch.float64)
tensor([ -8.9924,  -9.8545, -11.1973, -10.3437, -11.6771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5658, device='cuda:0', dtype=torch.float64)
tensor([ -9.0038,  -9.9985, -11.3522, -10.4928, -11.8146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6614, device='cuda:0', dtype=torch.float64)
tensor([ -8.9582, -10.1431, -11.5597, -10.6571, -11.9729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2142, device='cuda:0', dtype=torch.float64)
tensor([ -8.9405, -10.2859, -11.7632, -10.8027, -12.1320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3414, device='cuda:0', dtype=torch.float64)
tensor([ -8.9244, -10.4014, -11.9719, -10.9737, -12.2868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5001, device='cuda:0', dtype=torch.float64)
tensor([ -8.9336, -10.5404, -12.1635, -11.1815, -12.4861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4027, device='cuda:0', dtype=torch.float64)
tensor([ -8.9425, -10.6786, -12.2772, -11.4028, -12.6902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4412, device='cuda:0', dtype=torch.float64)
tensor([ -8.9701, -10.8249, -12.3606, -11.6250, -12.8861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6211, device='cuda:0', dtype=torch.float64)
tensor([ -8.9814, -10.9990, -12.4408, -11.8794, -13.1004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3766, device='cuda:0', dtype=torch.float64)
tensor([ -9.0309, -11.1604, -12.5979, -12.1130, -13.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5411, device='cuda:0', dtype=torch.float64)
tensor([ -9.0829, -11.3301, -12.7138, -12.3317, -13.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7481, device='cuda:0', dtype=torch.float64)
tensor([ -9.1081, -11.4779, -12.7878, -12.5203, -13.7220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7474, device='cuda:0', dtype=torch.float64)
tensor([ -9.1234, -11.6180, -12.8934, -12.6562, -13.8951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5268, device='cuda:0', dtype=torch.float64)
tensor([ -9.1491, -11.7234, -12.9454, -12.7511, -13.9989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7135, device='cuda:0', dtype=torch.float64)
tensor([ -9.2065, -11.8317, -12.9722, -12.8426, -14.0668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5995, device='cuda:0', dtype=torch.float64)
tensor([ -9.2531, -11.9271, -12.9970, -12.9087, -14.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6366, device='cuda:0', dtype=torch.float64)
tensor([ -9.3204, -11.9920, -13.0221, -12.9829, -14.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9827, device='cuda:0', dtype=torch.float64)
tensor([ -9.3588, -12.0751, -13.0241, -13.0448, -14.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4554, device='cuda:0', dtype=torch.float64)
tensor([ -9.4045, -12.0863, -13.0278, -13.0780, -14.2056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9405, device='cuda:0', dtype=torch.float64)
tensor([ -9.4639, -12.1533, -13.0935, -13.1293, -14.2258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3955, device='cuda:0', dtype=torch.float64)
tensor([ -9.5018, -12.1869, -13.2124, -13.1429, -14.2313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7986, device='cuda:0', dtype=torch.float64)
tensor([ -9.5282, -12.2444, -13.3202, -13.1684, -14.2443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4394, device='cuda:0', dtype=torch.float64)
tensor([ -9.5657, -12.3078, -13.4697, -13.2464, -14.3171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4619, device='cuda:0', dtype=torch.float64)
tensor([ -9.6288, -12.4007, -13.6522, -13.3252, -14.4111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8129, device='cuda:0', dtype=torch.float64)
tensor([ -9.6961, -12.4838, -13.8273, -13.4260, -14.5216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4909, device='cuda:0', dtype=torch.float64)
tensor([ -9.7883, -12.5711, -14.0253, -13.5584, -14.6735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5575, device='cuda:0', dtype=torch.float64)
tensor([ -9.9026, -12.6711, -14.1345, -13.7352, -14.8269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5999, device='cuda:0', dtype=torch.float64)
tensor([-10.0049, -12.7971, -14.1901, -13.9044, -14.9746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5958, device='cuda:0', dtype=torch.float64)
tensor([-10.1149, -12.9182, -14.2258, -14.0660, -15.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4628, device='cuda:0', dtype=torch.float64)
tensor([-10.2107, -13.0473, -14.2735, -14.1982, -15.2201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3435, device='cuda:0', dtype=torch.float64)
tensor([-10.3089, -13.1577, -14.3954, -14.3504, -15.3907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8434, device='cuda:0', dtype=torch.float64)
tensor([-10.4134, -13.1984, -14.4449, -14.4990, -15.4770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4173, device='cuda:0', dtype=torch.float64)
tensor([-10.5649, -13.2567, -14.4500, -14.6701, -15.5883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5258, device='cuda:0', dtype=torch.float64)
tensor([-10.7252, -13.3388, -14.5426, -14.8027, -15.7067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5793, device='cuda:0', dtype=torch.float64)
tensor([-10.8757, -13.4630, -14.6094, -14.9486, -15.8434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4583, device='cuda:0', dtype=torch.float64)
tensor([-10.9932, -13.5668, -14.6670, -15.1061, -15.9855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7018, device='cuda:0', dtype=torch.float64)
tensor([-11.0812, -13.6789, -14.7954, -15.2663, -16.1759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4792, device='cuda:0', dtype=torch.float64)
tensor([-11.1821, -13.7904, -14.9625, -15.4256, -16.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5553, device='cuda:0', dtype=torch.float64)
tensor([-11.2975, -13.9233, -15.1058, -15.5475, -16.5820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6642, device='cuda:0', dtype=torch.float64)
tensor([-11.4204, -14.0699, -15.2039, -15.6440, -16.8156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5191, device='cuda:0', dtype=torch.float64)
tensor([-11.5088, -14.2160, -15.3178, -15.7689, -16.9864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5907, device='cuda:0', dtype=torch.float64)
tensor([-11.5850, -14.3843, -15.4084, -15.8680, -17.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6189, device='cuda:0', dtype=torch.float64)
tensor([-11.6773, -14.5225, -15.4938, -15.9071, -17.3297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5165, device='cuda:0', dtype=torch.float64)
tensor([-11.8050, -14.6447, -15.6369, -15.9993, -17.4935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5014, device='cuda:0', dtype=torch.float64)
tensor([-11.9409, -14.7765, -15.7820, -16.0824, -17.6527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4552, device='cuda:0', dtype=torch.float64)
tensor([-12.0661, -14.8918, -15.9021, -16.1829, -17.7831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5338, device='cuda:0', dtype=torch.float64)
tensor([-12.1744, -14.9709, -15.9267, -16.2340, -17.8261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2503, device='cuda:0', dtype=torch.float64)
tensor([-12.2800, -15.0894, -15.9905, -16.3051, -17.9099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7153, device='cuda:0', dtype=torch.float64)
tensor([-12.3519, -15.1911, -16.0094, -16.3726, -17.9497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9147, device='cuda:0', dtype=torch.float64)
tensor([-12.4199, -15.2255, -16.1063, -16.3821, -18.0069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5846, device='cuda:0', dtype=torch.float64)
tensor([-12.4458, -15.2291, -16.2482, -16.4300, -18.0994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6785, device='cuda:0', dtype=torch.float64)
tensor([-12.4951, -15.2552, -16.4524, -16.5360, -18.2641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5715, device='cuda:0', dtype=torch.float64)
tensor([-12.5322, -15.3153, -16.6362, -16.6481, -18.4445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7245, device='cuda:0', dtype=torch.float64)
tensor([-12.5581, -15.4185, -16.8727, -16.7403, -18.6687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8386, device='cuda:0', dtype=torch.float64)
tensor([-12.6023, -15.5385, -17.0809, -16.7861, -18.9265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3918, device='cuda:0', dtype=torch.float64)
tensor([-12.6605, -15.6460, -17.2357, -16.7938, -19.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3383, device='cuda:0', dtype=torch.float64)
tensor([-12.6965, -15.6958, -17.4049, -16.8047, -19.4296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5933, device='cuda:0', dtype=torch.float64)
tensor([-12.7536, -15.7467, -17.5671, -16.8124, -19.6337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4989, device='cuda:0', dtype=torch.float64)
tensor([-12.8179, -15.8050, -17.7688, -16.8480, -19.8010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3701, device='cuda:0', dtype=torch.float64)
tensor([-12.8834, -15.8621, -17.9262, -16.8444, -19.8713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3992, device='cuda:0', dtype=torch.float64)
tensor([-12.9624, -15.9691, -18.0884, -16.8805, -19.9573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6224, device='cuda:0', dtype=torch.float64)
tensor([-13.0067, -16.0933, -18.2320, -16.9364, -20.0735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3921, device='cuda:0', dtype=torch.float64)
tensor([-13.0817, -16.2518, -18.4138, -17.0346, -20.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5735, device='cuda:0', dtype=torch.float64)
tensor([-13.1540, -16.4156, -18.5998, -17.1131, -20.2686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3872, device='cuda:0', dtype=torch.float64)
tensor([-13.2295, -16.5955, -18.8060, -17.2181, -20.4219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5207, device='cuda:0', dtype=torch.float64)
tensor([-13.3322, -16.7595, -18.9956, -17.3332, -20.5228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4877, device='cuda:0', dtype=torch.float64)
tensor([-13.4381, -16.8558, -19.1219, -17.4024, -20.5435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7543, device='cuda:0', dtype=torch.float64)
tensor([-13.5852, -16.9434, -19.2182, -17.5441, -20.5606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5363, device='cuda:0', dtype=torch.float64)
tensor([-13.7498, -17.0276, -19.3111, -17.6511, -20.5587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7012, device='cuda:0', dtype=torch.float64)
tensor([-13.9185, -17.1212, -19.3422, -17.7149, -20.5461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4847, device='cuda:0', dtype=torch.float64)
tensor([-14.0489, -17.2818, -19.4034, -17.8009, -20.5988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6822, device='cuda:0', dtype=torch.float64)
tensor([-14.1466, -17.4815, -19.4977, -17.8780, -20.7337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8574, device='cuda:0', dtype=torch.float64)
tensor([-14.2855, -17.6492, -19.6175, -17.9372, -20.8308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6607, device='cuda:0', dtype=torch.float64)
tensor([-14.4016, -17.7838, -19.7915, -17.9585, -20.9246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5928, device='cuda:0', dtype=torch.float64)
tensor([-14.5538, -17.9191, -20.0019, -17.9923, -21.0411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4634, device='cuda:0', dtype=torch.float64)
tensor([-14.6685, -18.0318, -20.2506, -17.9857, -21.1514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4565, device='cuda:0', dtype=torch.float64)
tensor([-14.8196, -18.1474, -20.5354, -17.8888, -21.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8194, device='cuda:0', dtype=torch.float64)
tensor([-14.9394, -18.2239, -20.6763, -17.8227, -21.1903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4027, device='cuda:0', dtype=torch.float64)
tensor([-15.0199, -18.3432, -20.7908, -17.8126, -21.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5614, device='cuda:0', dtype=torch.float64)
tensor([-15.0819, -18.4633, -20.8706, -17.7777, -21.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3950, device='cuda:0', dtype=torch.float64)
tensor([-15.1463, -18.6206, -20.9550, -17.7386, -21.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5517, device='cuda:0', dtype=torch.float64)
tensor([-15.2297, -18.7153, -21.0693, -17.6633, -21.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7930, device='cuda:0', dtype=torch.float64)
tensor([-15.3583, -18.8389, -21.2357, -17.6504, -21.1359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6335, device='cuda:0', dtype=torch.float64)
tensor([-15.4879, -18.9133, -21.3784, -17.6713, -21.1461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7108, device='cuda:0', dtype=torch.float64)
tensor([-15.6470, -19.0154, -21.4742, -17.7555, -21.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4161, device='cuda:0', dtype=torch.float64)
tensor([-15.8279, -19.1551, -21.6034, -17.8519, -21.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7506, device='cuda:0', dtype=torch.float64)
tensor([-16.0057, -19.3584, -21.6931, -17.9627, -21.2551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6155, device='cuda:0', dtype=torch.float64)
tensor([-16.1103, -19.4777, -21.7753, -18.0661, -21.3032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5472, device='cuda:0', dtype=torch.float64)
tensor([-16.1892, -19.6235, -21.8393, -18.1550, -21.3590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5781, device='cuda:0', dtype=torch.float64)
tensor([-16.2526, -19.7545, -21.8927, -18.2064, -21.4061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5926, device='cuda:0', dtype=torch.float64)
tensor([-16.3277, -19.8929, -21.9626, -18.2506, -21.4882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9220, device='cuda:0', dtype=torch.float64)
tensor([-16.3806, -20.0095, -22.0305, -18.2635, -21.5781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4676, device='cuda:0', dtype=torch.float64)
tensor([-16.4394, -20.0369, -22.0341, -18.2491, -21.6308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5193, device='cuda:0', dtype=torch.float64)
tensor([-16.4703, -20.0809, -22.0855, -18.2236, -21.6917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5499, device='cuda:0', dtype=torch.float64)
tensor([-16.5533, -20.1835, -22.1017, -18.2218, -21.7164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6193, device='cuda:0', dtype=torch.float64)
tensor([-16.6683, -20.2938, -22.1014, -18.2808, -21.7285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5159, device='cuda:0', dtype=torch.float64)
tensor([-16.7712, -20.4466, -22.1540, -18.3357, -21.7872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7781, device='cuda:0', dtype=torch.float64)
tensor([-16.8864, -20.5566, -22.1536, -18.3582, -21.8407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4506, device='cuda:0', dtype=torch.float64)
tensor([-17.0391, -20.6679, -22.1876, -18.4070, -21.9066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5444, device='cuda:0', dtype=torch.float64)
tensor([-17.1637, -20.8583, -22.3358, -18.4831, -22.0651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6643, device='cuda:0', dtype=torch.float64)
tensor([-17.2629, -21.1075, -22.4112, -18.5425, -22.1894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4009, device='cuda:0', dtype=torch.float64)
tensor([-17.3609, -21.3116, -22.4530, -18.6153, -22.2701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5846, device='cuda:0', dtype=torch.float64)
tensor([-17.4281, -21.4619, -22.5433, -18.6804, -22.3475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6266, device='cuda:0', dtype=torch.float64)
tensor([-17.4503, -21.6455, -22.5829, -18.7303, -22.4385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6071, device='cuda:0', dtype=torch.float64)
tensor([-17.4251, -21.6560, -22.5294, -18.6513, -22.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6203, device='cuda:0', dtype=torch.float64)
tensor([-17.3517, -21.6337, -22.5434, -18.6209, -22.3481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3912, device='cuda:0', dtype=torch.float64)
tensor([-17.3324, -21.5655, -22.4851, -18.6192, -22.3190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5589, device='cuda:0', dtype=torch.float64)
tensor([-17.3283, -21.4908, -22.4344, -18.6486, -22.2712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3907, device='cuda:0', dtype=torch.float64)
tensor([-17.3396, -21.4485, -22.4211, -18.6663, -22.2085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5314, device='cuda:0', dtype=torch.float64)
tensor([-17.3458, -21.4334, -22.4697, -18.6959, -22.1676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6616, device='cuda:0', dtype=torch.float64)
tensor([-17.3866, -21.5105, -22.5957, -18.7841, -22.1980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7329, device='cuda:0', dtype=torch.float64)
tensor([-17.4973, -21.7107, -22.7305, -18.8677, -22.2881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3418, device='cuda:0', dtype=torch.float64)
tensor([-17.5986, -21.9562, -22.8902, -18.9721, -22.4619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8718, device='cuda:0', dtype=torch.float64)
tensor([-17.6241, -22.1273, -23.1619, -19.0876, -22.7379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5645, device='cuda:0', dtype=torch.float64)
tensor([-17.6120, -22.3559, -23.4140, -19.2344, -23.0599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5760, device='cuda:0', dtype=torch.float64)
tensor([-17.6453, -22.5208, -23.6164, -19.3654, -23.2706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4886, device='cuda:0', dtype=torch.float64)
tensor([-17.6518, -22.8309, -23.7933, -19.5963, -23.4923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8003, device='cuda:0', dtype=torch.float64)
tensor([-17.6289, -23.1124, -23.9067, -19.8099, -23.7259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3800, device='cuda:0', dtype=torch.float64)
tensor([-17.6719, -23.4553, -24.0840, -20.0003, -23.9943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6631, device='cuda:0', dtype=torch.float64)
tensor([-17.7184, -23.8083, -24.3186, -20.2531, -24.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3990, device='cuda:0', dtype=torch.float64)
tensor([-17.7613, -24.1130, -24.5896, -20.5131, -24.5026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5005, device='cuda:0', dtype=torch.float64)
tensor([-17.7902, -24.4547, -24.8865, -20.7339, -24.7906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7163, device='cuda:0', dtype=torch.float64)
tensor([-17.8579, -24.8889, -25.1447, -21.0374, -25.1075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4945, device='cuda:0', dtype=torch.float64)
tensor([-17.9594, -25.2950, -25.3240, -21.3031, -25.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5145, device='cuda:0', dtype=torch.float64)
tensor([-18.0876, -25.6718, -25.4695, -21.5492, -25.6461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6536, device='cuda:0', dtype=torch.float64)
tensor([-18.2030, -26.0109, -25.5760, -21.7178, -25.8357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3537, device='cuda:0', dtype=torch.float64)
tensor([-18.3043, -26.2245, -25.6644, -21.8339, -25.9729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6629, device='cuda:0', dtype=torch.float64)
tensor([-18.3596, -26.3538, -25.7606, -21.9202, -26.1032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7928, device='cuda:0', dtype=torch.float64)
tensor([-18.3759, -26.4096, -25.8748, -21.9830, -26.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7577, device='cuda:0', dtype=torch.float64)
tensor([-18.3442, -26.4044, -25.9360, -22.0423, -26.2359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6869, device='cuda:0', dtype=torch.float64)
tensor([-18.3921, -26.5261, -26.0349, -22.1613, -26.3954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7037, device='cuda:0', dtype=torch.float64)
tensor([-18.5318, -26.6207, -26.1409, -22.2811, -26.6169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4018, device='cuda:0', dtype=torch.float64)
tensor([-18.7094, -26.7572, -26.2903, -22.4115, -26.8237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5933, device='cuda:0', dtype=torch.float64)
tensor([-18.8810, -26.9383, -26.4319, -22.5888, -27.0354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5759, device='cuda:0', dtype=torch.float64)
tensor([-19.0454, -27.1368, -26.5456, -22.7566, -27.2612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5085, device='cuda:0', dtype=torch.float64)
tensor([-19.2577, -27.2884, -26.7244, -22.9109, -27.4587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7308, device='cuda:0', dtype=torch.float64)
tensor([-19.4766, -27.4932, -26.9350, -23.0905, -27.6532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9623, device='cuda:0', dtype=torch.float64)
tensor([-19.6372, -27.6908, -27.0512, -23.3245, -27.8311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4710, device='cuda:0', dtype=torch.float64)
tensor([-19.7533, -27.8592, -27.1697, -23.5302, -27.9704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5193, device='cuda:0', dtype=torch.float64)
tensor([-19.9414, -28.0409, -27.2775, -23.6609, -28.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3074, device='cuda:0', dtype=torch.float64)
tensor([-20.1360, -28.2437, -27.3439, -23.7709, -28.2603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5128, device='cuda:0', dtype=torch.float64)
tensor([-20.3860, -28.4764, -27.3796, -23.8386, -28.3326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6101, device='cuda:0', dtype=torch.float64)
tensor([-20.5648, -28.7595, -27.4206, -23.9149, -28.4661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4379, device='cuda:0', dtype=torch.float64)
tensor([-20.7087, -29.0925, -27.4749, -24.0068, -28.6637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5079, device='cuda:0', dtype=torch.float64)
tensor([-20.8992, -29.4636, -27.5622, -24.1278, -28.8932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7453, device='cuda:0', dtype=torch.float64)
tensor([-21.0588, -29.7338, -27.5391, -24.2852, -29.0910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6569, device='cuda:0', dtype=torch.float64)
tensor([-21.2536, -30.0333, -27.5101, -24.4587, -29.3569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4789, device='cuda:0', dtype=torch.float64)
tensor([-21.4354, -30.2540, -27.5083, -24.5841, -29.5908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3356, device='cuda:0', dtype=torch.float64)
tensor([-21.6554, -30.4617, -27.5543, -24.7314, -29.8460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5795, device='cuda:0', dtype=torch.float64)
tensor([-21.8471, -30.8246, -27.5840, -24.9157, -30.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6734, device='cuda:0', dtype=torch.float64)
tensor([-21.9874, -31.1820, -27.5874, -25.0876, -30.4610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7045, device='cuda:0', dtype=torch.float64)
tensor([-22.1257, -31.4489, -27.5853, -25.1882, -30.6380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4953, device='cuda:0', dtype=torch.float64)
tensor([-22.3081, -31.7512, -27.6365, -25.3656, -30.8268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3481, device='cuda:0', dtype=torch.float64)
tensor([-22.4099, -32.0398, -27.6998, -25.4861, -30.9766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7137, device='cuda:0', dtype=torch.float64)
tensor([-22.4656, -32.3632, -27.7331, -25.6276, -31.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3363, device='cuda:0', dtype=torch.float64)
tensor([-22.5111, -32.7128, -27.7205, -25.7662, -31.2918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7924, device='cuda:0', dtype=torch.float64)
tensor([-22.5999, -33.1330, -27.7129, -25.8968, -31.4885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6467, device='cuda:0', dtype=torch.float64)
tensor([-22.6632, -33.5133, -27.7547, -26.0286, -31.6760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4829, device='cuda:0', dtype=torch.float64)
tensor([-22.7182, -33.9692, -27.8743, -26.1801, -31.8948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6811, device='cuda:0', dtype=torch.float64)
tensor([-22.8227, -34.3894, -28.0165, -26.2260, -32.0657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8054, device='cuda:0', dtype=torch.float64)
tensor([-22.8740, -34.7406, -28.1624, -26.3321, -32.2418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7733, device='cuda:0', dtype=torch.float64)
tensor([-22.9398, -35.0606, -28.3157, -26.4737, -32.3835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3585, device='cuda:0', dtype=torch.float64)
tensor([-23.0019, -35.3284, -28.4683, -26.6427, -32.5850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5571, device='cuda:0', dtype=torch.float64)
tensor([-23.0134, -35.5995, -28.6063, -26.7657, -32.7912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5569, device='cuda:0', dtype=torch.float64)
tensor([-22.9628, -35.7932, -28.7897, -26.7642, -32.9214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6623, device='cuda:0', dtype=torch.float64)
tensor([-22.8701, -35.9282, -28.9960, -26.8197, -33.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4469, device='cuda:0', dtype=torch.float64)
tensor([-22.7800, -36.0274, -29.1181, -26.8680, -33.4052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5907, device='cuda:0', dtype=torch.float64)
tensor([-22.6592, -36.0194, -29.2636, -26.8579, -33.5888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5891, device='cuda:0', dtype=torch.float64)
tensor([-22.5464, -35.9800, -29.4030, -26.7915, -33.7689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7864, device='cuda:0', dtype=torch.float64)
tensor([-22.5137, -35.9629, -29.5030, -26.7509, -33.8932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3303, device='cuda:0', dtype=torch.float64)
tensor([-22.4950, -35.8990, -29.6518, -26.7098, -33.9737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6061, device='cuda:0', dtype=torch.float64)
tensor([-22.4819, -35.8887, -29.8580, -26.7094, -34.0778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6593, device='cuda:0', dtype=torch.float64)
tensor([-22.4407, -35.9087, -30.2239, -26.7107, -34.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7296, device='cuda:0', dtype=torch.float64)
tensor([-22.3733, -35.8367, -30.5789, -26.7772, -34.3366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6557, device='cuda:0', dtype=torch.float64)
tensor([-22.3252, -35.8429, -30.9224, -26.9017, -34.5187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7681, device='cuda:0', dtype=torch.float64)
tensor([-22.2863, -35.8116, -31.2755, -26.9732, -34.6897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7081, device='cuda:0', dtype=torch.float64)
tensor([-22.2288, -35.8575, -31.6389, -27.1018, -34.9422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3848, device='cuda:0', dtype=torch.float64)
tensor([-22.1698, -35.8495, -31.9255, -27.1764, -35.1749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6299, device='cuda:0', dtype=torch.float64)
tensor([-22.1448, -35.8084, -32.1599, -27.2099, -35.3802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6725, device='cuda:0', dtype=torch.float64)
tensor([-22.0305, -35.7314, -32.3705, -27.2256, -35.5628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6358, device='cuda:0', dtype=torch.float64)
tensor([-21.9273, -35.5972, -32.4977, -27.2785, -35.6288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6182, device='cuda:0', dtype=torch.float64)
tensor([-21.7824, -35.5132, -32.5634, -27.2190, -35.5999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5830, device='cuda:0', dtype=torch.float64)
tensor([-21.6409, -35.3101, -32.5756, -27.1241, -35.4592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7403, device='cuda:0', dtype=torch.float64)
tensor([-21.5953, -35.1784, -32.6525, -27.1305, -35.3726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6645, device='cuda:0', dtype=torch.float64)
tensor([-21.4963, -34.9532, -32.7424, -27.0552, -35.2542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4932, device='cuda:0', dtype=torch.float64)
tensor([-21.3977, -34.7669, -32.9009, -27.0963, -35.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5102, device='cuda:0', dtype=torch.float64)
tensor([-21.3080, -34.6671, -33.0263, -27.1297, -35.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5106, device='cuda:0', dtype=torch.float64)
tensor([-21.2482, -34.6300, -33.1613, -27.1698, -35.2473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7974, device='cuda:0', dtype=torch.float64)
tensor([-21.2476, -34.7183, -33.3249, -27.2532, -35.4947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6816, device='cuda:0', dtype=torch.float64)
tensor([-21.2659, -34.7444, -33.3769, -27.2520, -35.7120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7472, device='cuda:0', dtype=torch.float64)
tensor([-21.2787, -34.5780, -33.4873, -27.1909, -35.8970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6947, device='cuda:0', dtype=torch.float64)
tensor([-21.2994, -34.3787, -33.4834, -27.1503, -36.0106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6976, device='cuda:0', dtype=torch.float64)
tensor([-21.3492, -34.2790, -33.4867, -27.1994, -36.1798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6678, device='cuda:0', dtype=torch.float64)
tensor([-21.3755, -34.0785, -33.4581, -27.2210, -36.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5245, device='cuda:0', dtype=torch.float64)
tensor([-21.3394, -33.6808, -33.3436, -27.1562, -36.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5270, device='cuda:0', dtype=torch.float64)
tensor([-21.2423, -33.3093, -33.2521, -27.0718, -36.0197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6203, device='cuda:0', dtype=torch.float64)
tensor([-21.1558, -32.8674, -33.0672, -26.9552, -35.8059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5368, device='cuda:0', dtype=torch.float64)
tensor([-21.1437, -32.5404, -32.9307, -26.9068, -35.6162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6169, device='cuda:0', dtype=torch.float64)
tensor([-21.2018, -32.3306, -32.8708, -26.8647, -35.5090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6900, device='cuda:0', dtype=torch.float64)
tensor([-21.2046, -32.0884, -32.8511, -26.7586, -35.3206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4104, device='cuda:0', dtype=torch.float64)
tensor([-21.2288, -31.8223, -32.8675, -26.7045, -35.0667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8621, device='cuda:0', dtype=torch.float64)
tensor([-21.3554, -31.6692, -32.8133, -26.7164, -34.8706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5163, device='cuda:0', dtype=torch.float64)
tensor([-21.4152, -31.4247, -32.7046, -26.6911, -34.6084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5044, device='cuda:0', dtype=torch.float64)
tensor([-21.5135, -31.2330, -32.6824, -26.7001, -34.3397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5086, device='cuda:0', dtype=torch.float64)
tensor([-21.6332, -31.1010, -32.6861, -26.7410, -34.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4143, device='cuda:0', dtype=torch.float64)
tensor([-21.7159, -31.0003, -32.7124, -26.7265, -33.9426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4112, device='cuda:0', dtype=torch.float64)
tensor([-21.8812, -30.9703, -32.7781, -26.7204, -33.7592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9347, device='cuda:0', dtype=torch.float64)
tensor([-22.0835, -30.9897, -32.8356, -26.7201, -33.5664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3372, device='cuda:0', dtype=torch.float64)
tensor([-22.2359, -31.0460, -32.9515, -26.6957, -33.4822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8464, device='cuda:0', dtype=torch.float64)
tensor([-22.3356, -31.1603, -33.0137, -26.6704, -33.4349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4888, device='cuda:0', dtype=torch.float64)
tensor([-22.4980, -31.3155, -33.1274, -26.6075, -33.2938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6585, device='cuda:0', dtype=torch.float64)
tensor([-22.5970, -31.3773, -33.1589, -26.5080, -33.0649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7360, device='cuda:0', dtype=torch.float64)
tensor([-22.7244, -31.5627, -33.2844, -26.4740, -32.9654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6351, device='cuda:0', dtype=torch.float64)
tensor([-22.8375, -31.6928, -33.4007, -26.4486, -32.8797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6533, device='cuda:0', dtype=torch.float64)
tensor([-22.9396, -31.8801, -33.5542, -26.4787, -32.8311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4832, device='cuda:0', dtype=torch.float64)
tensor([-22.9897, -32.0142, -33.6745, -26.4941, -32.7884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7219, device='cuda:0', dtype=torch.float64)
tensor([-23.0767, -32.1139, -33.8000, -26.5352, -32.7246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4029, device='cuda:0', dtype=torch.float64)
tensor([-23.1642, -32.1847, -33.9585, -26.4930, -32.6437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5962, device='cuda:0', dtype=torch.float64)
tensor([-23.2000, -32.1711, -34.1373, -26.3880, -32.5416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6588, device='cuda:0', dtype=torch.float64)
tensor([-23.2313, -32.1824, -34.2545, -26.2837, -32.4908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5299, device='cuda:0', dtype=torch.float64)
tensor([-23.2129, -32.1018, -34.3638, -26.2137, -32.3992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5637, device='cuda:0', dtype=torch.float64)
tensor([-23.2168, -32.0911, -34.5243, -26.2264, -32.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6637, device='cuda:0', dtype=torch.float64)
tensor([-23.2261, -32.1349, -34.7526, -26.1943, -32.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5495, device='cuda:0', dtype=torch.float64)
tensor([-23.3102, -32.1682, -34.9100, -26.1792, -32.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6604, device='cuda:0', dtype=torch.float64)
tensor([-23.4156, -32.2012, -35.0511, -26.2028, -32.2946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6730, device='cuda:0', dtype=torch.float64)
tensor([-23.5215, -32.2609, -35.1192, -26.2636, -32.3046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3934, device='cuda:0', dtype=torch.float64)
tensor([-23.6298, -32.3818, -35.1185, -26.3166, -32.3293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6452, device='cuda:0', dtype=torch.float64)
tensor([-23.7813, -32.4896, -35.0959, -26.4260, -32.3608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7355, device='cuda:0', dtype=torch.float64)
tensor([-23.9820, -32.7954, -35.1880, -26.6604, -32.5387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8399, device='cuda:0', dtype=torch.float64)
tensor([-24.1942, -33.0759, -35.4108, -26.9750, -32.7913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5611, device='cuda:0', dtype=torch.float64)
tensor([-24.3750, -33.3341, -35.6097, -27.2991, -33.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8078, device='cuda:0', dtype=torch.float64)
tensor([-24.6211, -33.6751, -35.8278, -27.6641, -33.5047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6209, device='cuda:0', dtype=torch.float64)
tensor([-24.8068, -34.0000, -35.9317, -27.9215, -33.8663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5064, device='cuda:0', dtype=torch.float64)
tensor([-24.9961, -34.2964, -35.9961, -28.1616, -34.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7706, device='cuda:0', dtype=torch.float64)
tensor([-25.2056, -34.6127, -36.1341, -28.3649, -34.5318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5688, device='cuda:0', dtype=torch.float64)
tensor([-25.3843, -34.9043, -36.3043, -28.5933, -34.9006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5045, device='cuda:0', dtype=torch.float64)
tensor([-25.5536, -35.1789, -36.5343, -28.8405, -35.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5050, device='cuda:0', dtype=torch.float64)
tensor([-25.7340, -35.5779, -36.7408, -29.1235, -35.7133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7032, device='cuda:0', dtype=torch.float64)
tensor([-25.7916, -35.8229, -36.8985, -29.2779, -36.0530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5461, device='cuda:0', dtype=torch.float64)
tensor([-25.8523, -36.0613, -37.0168, -29.4780, -36.3952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6216, device='cuda:0', dtype=torch.float64)
tensor([-25.8663, -36.3415, -37.1684, -29.5956, -36.6568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4970, device='cuda:0', dtype=torch.float64)
tensor([-25.8733, -36.6079, -37.2908, -29.7560, -36.9443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5630, device='cuda:0', dtype=torch.float64)
tensor([-25.9227, -36.8603, -37.4279, -29.9007, -37.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6314, device='cuda:0', dtype=torch.float64)
tensor([-25.9510, -37.1389, -37.6571, -30.0792, -37.4369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4842, device='cuda:0', dtype=torch.float64)
tensor([-25.9712, -37.3380, -37.8249, -30.2672, -37.7076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8185, device='cuda:0', dtype=torch.float64)
tensor([-25.9619, -37.3566, -37.9126, -30.3727, -37.8553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5454, device='cuda:0', dtype=torch.float64)
tensor([-25.9147, -37.3855, -37.9337, -30.4870, -37.9382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4899, device='cuda:0', dtype=torch.float64)
tensor([-25.8831, -37.4314, -37.9333, -30.6310, -38.0419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3132, device='cuda:0', dtype=torch.float64)
tensor([-25.9400, -37.5802, -38.0041, -30.8644, -38.2769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2106, device='cuda:0', dtype=torch.float64)
tensor([-25.9781, -37.7247, -38.0544, -31.0543, -38.4520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3449, device='cuda:0', dtype=torch.float64)
tensor([-26.1275, -38.0825, -38.0843, -31.3005, -38.7509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5828, device='cuda:0', dtype=torch.float64)
tensor([-26.3050, -38.3816, -38.1387, -31.5812, -39.0354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8718, device='cuda:0', dtype=torch.float64)
tensor([-26.4363, -38.7114, -38.1587, -31.9256, -39.3882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6013, device='cuda:0', dtype=torch.float64)
tensor([-26.6352, -39.1078, -38.1620, -32.2674, -39.7096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4220, device='cuda:0', dtype=torch.float64)
tensor([-26.8529, -39.5755, -38.1986, -32.6027, -40.0923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8152, device='cuda:0', dtype=torch.float64)
tensor([-27.0119, -39.8097, -38.0650, -32.7692, -40.2367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5753, device='cuda:0', dtype=torch.float64)
tensor([-27.2192, -40.1482, -37.9634, -33.0054, -40.4587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5743, device='cuda:0', dtype=torch.float64)
tensor([-27.3918, -40.4198, -37.8663, -33.2770, -40.7045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8530, device='cuda:0', dtype=torch.float64)
tensor([-27.5127, -40.7190, -37.7766, -33.5974, -41.0380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5159, device='cuda:0', dtype=torch.float64)
tensor([-27.6098, -41.0071, -37.7419, -33.8869, -41.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6822, device='cuda:0', dtype=torch.float64)
tensor([-27.7243, -41.1863, -37.6750, -34.1496, -41.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5900, device='cuda:0', dtype=torch.float64)
tensor([-27.8104, -41.4096, -37.6390, -34.4075, -41.6091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6253, device='cuda:0', dtype=torch.float64)
tensor([-27.8564, -41.5986, -37.6587, -34.6163, -41.7429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5016, device='cuda:0', dtype=torch.float64)
tensor([-27.8956, -41.8797, -37.7063, -34.7162, -41.8065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7857, device='cuda:0', dtype=torch.float64)
tensor([-27.8574, -42.0110, -37.7772, -34.7084, -41.7258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7869, device='cuda:0', dtype=torch.float64)
tensor([-27.7355, -42.1067, -37.7479, -34.6540, -41.6445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6030, device='cuda:0', dtype=torch.float64)
tensor([-27.6494, -42.1091, -37.6453, -34.4852, -41.5239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5357, device='cuda:0', dtype=torch.float64)
tensor([-27.5621, -42.1061, -37.6190, -34.3168, -41.4041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5102, device='cuda:0', dtype=torch.float64)
tensor([-27.4370, -42.0253, -37.5198, -34.1520, -41.2616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5642, device='cuda:0', dtype=torch.float64)
tensor([-27.3938, -41.9724, -37.4296, -34.0883, -41.2142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6422, device='cuda:0', dtype=torch.float64)
tensor([-27.3762, -41.9860, -37.3302, -34.0114, -41.1126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3817, device='cuda:0', dtype=torch.float64)
tensor([-27.4401, -42.0560, -37.2315, -33.9567, -41.0455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6349, device='cuda:0', dtype=torch.float64)
tensor([-27.5398, -42.2537, -37.1597, -34.0119, -41.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5858, device='cuda:0', dtype=torch.float64)
tensor([-27.6339, -42.4450, -37.0684, -34.0792, -41.2628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6108, device='cuda:0', dtype=torch.float64)
tensor([-27.6921, -42.6412, -37.1168, -34.2190, -41.4915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3795, device='cuda:0', dtype=torch.float64)
tensor([-27.7823, -42.9238, -37.2488, -34.3608, -41.8069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5006, device='cuda:0', dtype=torch.float64)
tensor([-27.9576, -43.2546, -37.4168, -34.5554, -42.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7118, device='cuda:0', dtype=torch.float64)
tensor([-28.1428, -43.4830, -37.5450, -34.7105, -42.2297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4847, device='cuda:0', dtype=torch.float64)
tensor([-28.3445, -43.7251, -37.6883, -34.8838, -42.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2076, device='cuda:0', dtype=torch.float64)
tensor([-28.5028, -44.0113, -37.8651, -35.0699, -42.5188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4024, device='cuda:0', dtype=torch.float64)
tensor([-28.6354, -44.2493, -38.0408, -35.2501, -42.7399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5586, device='cuda:0', dtype=torch.float64)
tensor([-28.7968, -44.6211, -38.2478, -35.5645, -43.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5393, device='cuda:0', dtype=torch.float64)
tensor([-28.9987, -45.0805, -38.4738, -35.9332, -43.5886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7709, device='cuda:0', dtype=torch.float64)
tensor([-29.2552, -45.4804, -38.6810, -36.3934, -43.9389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5288, device='cuda:0', dtype=torch.float64)
tensor([-29.4678, -45.8467, -38.8700, -36.8213, -44.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5648, device='cuda:0', dtype=torch.float64)
tensor([-29.7125, -46.2273, -39.0052, -37.2961, -44.7338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6434, device='cuda:0', dtype=torch.float64)
tensor([-29.8799, -46.5599, -39.1189, -37.7608, -45.1455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5179, device='cuda:0', dtype=torch.float64)
tensor([-30.0450, -46.7644, -39.2379, -38.1774, -45.4230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4843, device='cuda:0', dtype=torch.float64)
tensor([-30.1139, -46.9147, -39.4205, -38.4962, -45.6663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4311, device='cuda:0', dtype=torch.float64)
tensor([-30.0852, -46.9774, -39.6107, -38.7190, -45.7791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5504, device='cuda:0', dtype=torch.float64)
tensor([-30.0475, -46.9759, -39.7471, -38.8731, -45.8189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6435, device='cuda:0', dtype=torch.float64)
tensor([-29.9233, -46.9764, -39.9475, -38.9736, -45.8978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6177, device='cuda:0', dtype=torch.float64)
tensor([-29.8002, -47.0165, -40.1254, -39.1452, -46.0454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6304, device='cuda:0', dtype=torch.float64)
tensor([-29.7297, -46.9720, -40.3078, -39.2756, -46.0807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5042, device='cuda:0', dtype=torch.float64)
tensor([-29.6821, -47.0150, -40.4675, -39.3756, -46.0806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6174, device='cuda:0', dtype=torch.float64)
tensor([-29.5944, -47.1012, -40.5368, -39.4398, -46.0708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6065, device='cuda:0', dtype=torch.float64)
tensor([-29.5058, -47.0737, -40.5025, -39.4546, -45.9457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4746, device='cuda:0', dtype=torch.float64)
tensor([-29.4814, -47.0962, -40.5132, -39.5083, -45.8362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3517, device='cuda:0', dtype=torch.float64)
tensor([-29.4842, -47.1747, -40.5033, -39.6233, -45.7837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6200, device='cuda:0', dtype=torch.float64)
tensor([-29.5444, -47.2762, -40.4921, -39.6962, -45.7455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3558, device='cuda:0', dtype=torch.float64)
tensor([-29.5997, -47.4037, -40.5106, -39.7777, -45.7877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7365, device='cuda:0', dtype=torch.float64)
tensor([-29.6626, -47.5207, -40.6079, -39.7837, -45.7916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5317, device='cuda:0', dtype=torch.float64)
tensor([-29.7605, -47.6584, -40.5976, -39.8222, -45.7826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7309, device='cuda:0', dtype=torch.float64)
tensor([-29.9026, -47.9560, -40.6199, -40.0385, -45.8626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5449, device='cuda:0', dtype=torch.float64)
tensor([-30.0811, -48.3622, -40.6644, -40.2462, -46.0335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6249, device='cuda:0', dtype=torch.float64)
tensor([-30.2211, -48.7747, -40.7783, -40.4572, -46.2948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6000, device='cuda:0', dtype=torch.float64)
tensor([-30.3571, -49.0635, -40.8375, -40.6104, -46.4883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3593, device='cuda:0', dtype=torch.float64)
tensor([-30.4860, -49.3420, -40.8504, -40.8403, -46.6429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8795, device='cuda:0', dtype=torch.float64)
tensor([-30.5694, -49.5496, -40.9151, -41.0400, -46.7870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5463, device='cuda:0', dtype=torch.float64)
tensor([-30.6729, -49.7845, -40.9511, -41.3128, -46.9984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7891, device='cuda:0', dtype=torch.float64)
tensor([-30.7315, -49.8128, -40.8701, -41.5477, -47.0178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5546, device='cuda:0', dtype=torch.float64)
tensor([-30.7566, -49.7328, -40.8545, -41.6782, -46.9958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7491, device='cuda:0', dtype=torch.float64)
tensor([-30.8204, -49.7317, -40.9235, -41.9391, -47.1164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5758, device='cuda:0', dtype=torch.float64)
tensor([-31.0063, -49.6933, -41.0587, -42.2616, -47.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5768, device='cuda:0', dtype=torch.float64)
tensor([-31.0982, -49.4617, -41.2013, -42.3846, -47.1955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4899, device='cuda:0', dtype=torch.float64)
tensor([-31.2073, -49.3100, -41.3287, -42.5088, -47.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5790, device='cuda:0', dtype=torch.float64)
tensor([-31.3414, -49.1762, -41.4634, -42.5905, -47.3013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4898, device='cuda:0', dtype=torch.float64)
tensor([-31.4546, -49.0510, -41.6057, -42.6102, -47.2800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5008, device='cuda:0', dtype=torch.float64)
tensor([-31.5013, -48.9374, -41.7420, -42.5416, -47.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4228, device='cuda:0', dtype=torch.float64)
tensor([-31.5548, -48.7054, -41.8078, -42.4030, -47.1520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4317, device='cuda:0', dtype=torch.float64)
tensor([-31.6023, -48.4890, -41.8928, -42.2399, -47.0570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7268, device='cuda:0', dtype=torch.float64)
tensor([-31.6266, -48.2431, -41.9853, -42.0707, -46.9377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6245, device='cuda:0', dtype=torch.float64)
tensor([-31.6609, -48.1125, -42.0919, -41.9480, -46.8852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5458, device='cuda:0', dtype=torch.float64)
tensor([-31.7183, -48.0581, -42.2272, -41.8710, -46.9119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7102, device='cuda:0', dtype=torch.float64)
tensor([-31.8256, -48.2016, -42.4748, -41.9687, -47.1242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5980, device='cuda:0', dtype=torch.float64)
tensor([-31.8544, -48.2937, -42.7482, -41.9928, -47.3462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4599, device='cuda:0', dtype=torch.float64)
tensor([-31.8576, -48.3186, -42.9173, -41.9307, -47.5413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5989, device='cuda:0', dtype=torch.float64)
tensor([-31.8805, -48.4011, -43.0370, -41.8252, -47.7138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5100, device='cuda:0', dtype=torch.float64)
tensor([-31.8608, -48.4025, -43.0978, -41.6602, -47.7639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5803, device='cuda:0', dtype=torch.float64)
tensor([-31.7355, -48.3135, -43.1845, -41.4834, -47.8341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8256, device='cuda:0', dtype=torch.float64)
tensor([-31.6247, -48.3359, -43.3285, -41.3244, -47.8696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6546, device='cuda:0', dtype=torch.float64)
tensor([-31.5833, -48.3300, -43.4777, -41.2198, -47.9047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7996, device='cuda:0', dtype=torch.float64)
tensor([-31.7128, -48.4230, -43.5030, -41.3087, -47.9948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4005, device='cuda:0', dtype=torch.float64)
tensor([-31.7577, -48.4406, -43.4884, -41.3729, -48.0753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5213, device='cuda:0', dtype=torch.float64)
tensor([-31.7949, -48.4430, -43.3983, -41.3618, -48.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6217, device='cuda:0', dtype=torch.float64)
tensor([-31.8628, -48.5828, -43.4101, -41.3760, -48.2336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4532, device='cuda:0', dtype=torch.float64)
tensor([-31.9370, -48.7658, -43.4896, -41.4279, -48.4946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5274, device='cuda:0', dtype=torch.float64)
tensor([-32.0174, -48.8250, -43.5414, -41.3746, -48.6200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7428, device='cuda:0', dtype=torch.float64)
tensor([-32.0549, -48.8568, -43.6035, -41.2204, -48.5334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7111, device='cuda:0', dtype=torch.float64)
tensor([-32.1445, -48.9200, -43.6697, -41.1568, -48.6100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5622, device='cuda:0', dtype=torch.float64)
tensor([-32.2732, -49.1183, -43.8081, -41.0887, -48.7569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5442, device='cuda:0', dtype=torch.float64)
tensor([-32.4386, -49.2814, -43.9458, -41.0411, -48.8607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5361, device='cuda:0', dtype=torch.float64)
tensor([-32.6007, -49.4372, -44.0810, -40.9908, -49.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5182, device='cuda:0', dtype=torch.float64)
tensor([-32.7462, -49.6258, -44.2630, -40.9450, -49.3962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8393, device='cuda:0', dtype=torch.float64)
tensor([-32.8955, -49.9024, -44.4354, -41.0244, -49.7531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4940, device='cuda:0', dtype=torch.float64)
tensor([-33.0118, -50.1782, -44.5595, -41.0759, -50.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5127, device='cuda:0', dtype=torch.float64)
tensor([-33.1749, -50.4909, -44.6528, -41.2601, -50.4629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6144, device='cuda:0', dtype=torch.float64)
tensor([-33.3703, -50.7634, -44.7283, -41.4399, -50.7190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4498, device='cuda:0', dtype=torch.float64)
tensor([-33.5472, -51.0642, -44.8368, -41.6344, -51.0060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7096, device='cuda:0', dtype=torch.float64)
tensor([-33.7256, -51.4768, -45.0625, -41.9343, -51.4383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3535, device='cuda:0', dtype=torch.float64)
tensor([-33.8682, -51.8319, -45.2272, -42.0777, -51.7767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4854, device='cuda:0', dtype=torch.float64)
tensor([-34.0208, -52.2527, -45.4226, -42.2463, -52.1217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6013, device='cuda:0', dtype=torch.float64)
tensor([-34.2289, -52.7386, -45.6744, -42.4065, -52.4931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6216, device='cuda:0', dtype=torch.float64)
tensor([-34.3122, -53.0687, -45.9019, -42.4661, -52.7780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5435, device='cuda:0', dtype=torch.float64)
tensor([-34.4064, -53.3012, -46.0133, -42.5415, -53.0006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5340, device='cuda:0', dtype=torch.float64)
tensor([-34.4971, -53.5295, -46.1471, -42.6240, -53.1412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5330, device='cuda:0', dtype=torch.float64)
tensor([-34.4967, -53.7136, -46.3391, -42.6210, -53.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5698, device='cuda:0', dtype=torch.float64)
tensor([-34.4563, -53.6738, -46.5011, -42.5006, -53.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4495, device='cuda:0', dtype=torch.float64)
tensor([-34.4437, -53.6272, -46.6753, -42.4424, -53.0808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7415, device='cuda:0', dtype=torch.float64)
tensor([-34.2956, -53.4390, -46.9148, -42.2457, -52.8966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3076, device='cuda:0', dtype=torch.float64)
tensor([-34.1753, -53.3454, -47.0856, -42.1590, -52.8178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5307, device='cuda:0', dtype=torch.float64)
tensor([-34.1532, -53.2052, -47.1875, -42.0795, -52.6862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7641, device='cuda:0', dtype=torch.float64)
tensor([-34.0027, -52.9436, -47.1925, -41.9574, -52.4976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4450, device='cuda:0', dtype=torch.float64)
tensor([-33.9276, -52.7104, -47.1939, -41.8917, -52.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9665, device='cuda:0', dtype=torch.float64)
tensor([-33.8852, -52.6555, -47.2940, -42.0309, -52.4172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6431, device='cuda:0', dtype=torch.float64)
tensor([-33.8970, -52.5959, -47.3795, -42.1494, -52.4982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4894, device='cuda:0', dtype=torch.float64)
tensor([-33.9532, -52.6044, -47.4952, -42.1707, -52.5385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6754, device='cuda:0', dtype=torch.float64)
tensor([-34.0772, -52.6882, -47.6790, -42.2982, -52.6775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6161, device='cuda:0', dtype=torch.float64)
tensor([-34.1497, -52.6563, -47.7898, -42.4307, -52.7304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4523, device='cuda:0', dtype=torch.float64)
tensor([-34.1721, -52.5975, -47.9761, -42.5965, -52.7047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6627, device='cuda:0', dtype=torch.float64)
tensor([-34.1776, -52.5388, -48.1801, -42.6880, -52.6204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7631, device='cuda:0', dtype=torch.float64)
tensor([-34.1512, -52.3875, -48.3204, -42.7850, -52.5132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3697, device='cuda:0', dtype=torch.float64)
tensor([-34.0928, -52.2405, -48.4561, -42.9170, -52.4306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5883, device='cuda:0', dtype=torch.float64)
tensor([-34.0397, -52.1244, -48.6480, -43.0161, -52.4416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4210, device='cuda:0', dtype=torch.float64)
tensor([-34.0176, -52.0413, -48.8376, -43.1234, -52.4110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5958, device='cuda:0', dtype=torch.float64)
tensor([-34.0273, -52.0656, -49.1070, -43.2521, -52.4279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5707, device='cuda:0', dtype=torch.float64)
tensor([-34.0317, -52.0932, -49.3050, -43.4567, -52.5237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3347, device='cuda:0', dtype=torch.float64)
tensor([-34.0854, -52.1247, -49.4653, -43.6125, -52.6275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5005, device='cuda:0', dtype=torch.float64)
tensor([-34.1218, -52.2181, -49.6417, -43.8894, -52.7202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5483, device='cuda:0', dtype=torch.float64)
tensor([-34.1310, -52.1605, -49.7313, -44.0297, -52.6717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3863, device='cuda:0', dtype=torch.float64)
tensor([-34.1915, -52.1952, -49.8015, -44.1849, -52.6965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5856, device='cuda:0', dtype=torch.float64)
tensor([-34.2684, -52.0414, -49.7932, -44.2556, -52.5410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6777, device='cuda:0', dtype=torch.float64)
tensor([-34.3103, -51.9686, -49.8821, -44.3108, -52.4283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4012, device='cuda:0', dtype=torch.float64)
tensor([-34.3618, -51.9171, -49.9620, -44.4503, -52.3412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4814, device='cuda:0', dtype=torch.float64)
tensor([-34.4174, -51.8791, -50.0197, -44.5423, -52.2727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6032, device='cuda:0', dtype=torch.float64)
tensor([-34.4742, -51.8634, -50.0219, -44.6462, -52.1891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5716, device='cuda:0', dtype=torch.float64)
tensor([-34.4848, -51.7651, -50.0166, -44.6610, -52.0393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5508, device='cuda:0', dtype=torch.float64)
tensor([-34.5197, -51.6708, -50.0101, -44.7217, -51.8912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4096, device='cuda:0', dtype=torch.float64)
tensor([-34.5492, -51.5748, -49.9421, -44.8024, -51.7502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6132, device='cuda:0', dtype=torch.float64)
tensor([-34.6479, -51.6167, -49.8653, -44.9322, -51.7720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7031, device='cuda:0', dtype=torch.float64)
tensor([-34.7414, -51.6071, -49.7623, -45.1096, -51.7538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7244, device='cuda:0', dtype=torch.float64)
tensor([-34.8388, -51.4691, -49.6214, -45.2499, -51.6662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8228, device='cuda:0', dtype=torch.float64)
tensor([-34.9131, -51.3876, -49.4992, -45.4204, -51.5881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4122, device='cuda:0', dtype=torch.float64)
tensor([-34.9556, -51.2757, -49.4098, -45.5825, -51.4404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6205, device='cuda:0', dtype=torch.float64)
tensor([-34.9575, -51.1856, -49.3256, -45.7454, -51.3591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5159, device='cuda:0', dtype=torch.float64)
tensor([-34.9362, -51.1194, -49.2891, -45.9405, -51.3285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3356, device='cuda:0', dtype=torch.float64)
tensor([-34.9644, -51.1648, -49.2787, -46.2199, -51.4709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6674, device='cuda:0', dtype=torch.float64)
tensor([-35.0352, -51.2591, -49.3917, -46.5775, -51.6747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3407, device='cuda:0', dtype=torch.float64)
tensor([-35.0814, -51.2555, -49.4516, -46.8745, -51.7702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7162, device='cuda:0', dtype=torch.float64)
tensor([-35.1252, -51.1433, -49.5533, -47.0757, -51.7229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5858, device='cuda:0', dtype=torch.float64)
tensor([-35.1114, -51.0009, -49.6543, -47.2036, -51.7203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7685, device='cuda:0', dtype=torch.float64)
tensor([-35.2057, -50.8346, -49.7718, -47.4227, -51.6957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3332, device='cuda:0', dtype=torch.float64)
tensor([-35.2500, -50.6477, -49.9139, -47.5619, -51.6789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2379, device='cuda:0', dtype=torch.float64)
tensor([-35.2836, -50.4529, -50.0054, -47.6535, -51.6719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5304, device='cuda:0', dtype=torch.float64)
tensor([-35.2701, -50.2693, -50.0547, -47.6862, -51.5984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7053, device='cuda:0', dtype=torch.float64)
tensor([-35.2843, -50.1300, -50.0786, -47.7311, -51.4470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5068, device='cuda:0', dtype=torch.float64)
tensor([-35.2424, -49.9439, -50.0208, -47.6449, -51.2379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4141, device='cuda:0', dtype=torch.float64)
tensor([-35.1475, -49.6908, -49.9188, -47.5611, -50.8997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4315, device='cuda:0', dtype=torch.float64)
tensor([-35.1297, -49.6008, -49.8788, -47.6119, -50.6681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4214, device='cuda:0', dtype=torch.float64)
tensor([-35.0823, -49.5195, -49.7927, -47.5752, -50.4167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6713, device='cuda:0', dtype=torch.float64)
tensor([-35.0916, -49.5640, -49.7939, -47.5820, -50.3089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6751, device='cuda:0', dtype=torch.float64)
tensor([-35.0464, -49.4683, -49.7403, -47.5459, -50.1288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7654, device='cuda:0', dtype=torch.float64)
tensor([-35.0549, -49.4541, -49.6652, -47.4177, -50.0166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6090, device='cuda:0', dtype=torch.float64)
tensor([-35.0517, -49.4556, -49.5583, -47.3489, -49.9390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4335, device='cuda:0', dtype=torch.float64)
tensor([-35.1023, -49.4313, -49.4790, -47.2703, -49.8111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4913, device='cuda:0', dtype=torch.float64)
tensor([-35.2208, -49.4933, -49.4805, -47.2563, -49.7879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3278, device='cuda:0', dtype=torch.float64)
tensor([-35.2890, -49.6195, -49.5357, -47.3371, -49.8600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4601, device='cuda:0', dtype=torch.float64)
tensor([-35.3634, -49.7228, -49.6918, -47.4608, -49.9428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3991, device='cuda:0', dtype=torch.float64)
tensor([-35.4750, -49.8385, -49.8069, -47.5948, -49.9783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5292, device='cuda:0', dtype=torch.float64)
tensor([-35.6063, -50.0929, -49.9897, -47.7782, -50.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5337, device='cuda:0', dtype=torch.float64)
tensor([-35.7757, -50.4321, -50.1138, -48.0321, -50.4377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5041, device='cuda:0', dtype=torch.float64)
tensor([-35.9460, -50.7473, -50.1269, -48.0785, -50.6149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6071, device='cuda:0', dtype=torch.float64)
tensor([-36.0056, -51.0014, -50.1434, -48.1570, -50.7222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4932, device='cuda:0', dtype=torch.float64)
tensor([-35.9699, -51.0535, -50.0653, -48.1670, -50.6909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4339, device='cuda:0', dtype=torch.float64)
tensor([-35.9218, -51.0716, -49.9783, -48.1321, -50.6742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4900, device='cuda:0', dtype=torch.float64)
tensor([-35.8617, -51.0518, -49.8769, -48.1180, -50.6770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3543, device='cuda:0', dtype=torch.float64)
tensor([-35.7599, -51.0055, -49.7475, -48.1318, -50.6563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4671, device='cuda:0', dtype=torch.float64)
tensor([-35.6707, -51.0028, -49.6011, -48.1008, -50.6741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4743, device='cuda:0', dtype=torch.float64)
tensor([-35.5822, -50.9989, -49.5019, -48.0855, -50.6628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6999, device='cuda:0', dtype=torch.float64)
tensor([-35.4986, -51.0107, -49.4997, -48.1539, -50.6798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6376, device='cuda:0', dtype=torch.float64)
tensor([-35.3695, -51.0758, -49.5097, -48.2162, -50.6551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4000, device='cuda:0', dtype=torch.float64)
tensor([-35.2824, -51.1805, -49.5451, -48.3201, -50.6267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6046, device='cuda:0', dtype=torch.float64)
tensor([-35.2504, -51.2646, -49.5519, -48.4171, -50.6352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3494, device='cuda:0', dtype=torch.float64)
tensor([-35.2064, -51.4435, -49.6552, -48.6084, -50.6919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3861, device='cuda:0', dtype=torch.float64)
tensor([-35.2113, -51.7756, -49.7634, -48.7618, -50.8329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5377, device='cuda:0', dtype=torch.float64)
tensor([-35.1924, -52.1103, -49.9364, -48.9915, -51.0027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5989, device='cuda:0', dtype=torch.float64)
tensor([-35.1099, -52.4589, -50.1487, -49.1741, -51.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6422, device='cuda:0', dtype=torch.float64)
tensor([-35.1349, -52.8457, -50.4089, -49.4122, -51.3230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5195, device='cuda:0', dtype=torch.float64)
tensor([-35.1361, -53.1046, -50.5929, -49.5968, -51.4098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4818, device='cuda:0', dtype=torch.float64)
tensor([-35.1387, -53.4819, -50.8041, -49.7619, -51.5865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5676, device='cuda:0', dtype=torch.float64)
tensor([-35.1147, -53.7645, -51.0169, -49.8972, -51.7096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5071, device='cuda:0', dtype=torch.float64)
tensor([-35.1260, -54.0644, -51.2421, -49.9838, -51.8062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5248, device='cuda:0', dtype=torch.float64)
tensor([-35.1406, -54.2918, -51.4700, -50.0691, -51.9130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4820, device='cuda:0', dtype=torch.float64)
tensor([-35.1950, -54.5250, -51.6977, -50.2012, -52.0362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5067, device='cuda:0', dtype=torch.float64)
tensor([-35.2921, -54.7980, -51.9303, -50.4190, -52.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3427, device='cuda:0', dtype=torch.float64)
tensor([-35.3611, -54.9049, -52.1189, -50.6327, -52.2797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4776, device='cuda:0', dtype=torch.float64)
tensor([-35.3615, -54.9482, -52.2948, -50.6737, -52.2463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6226, device='cuda:0', dtype=torch.float64)
tensor([-35.4128, -55.1734, -52.4913, -50.8525, -52.3520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3631, device='cuda:0', dtype=torch.float64)
tensor([-35.4531, -55.3062, -52.6601, -50.9741, -52.4371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5508, device='cuda:0', dtype=torch.float64)
tensor([-35.5762, -55.3790, -52.7998, -51.1432, -52.4909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3442, device='cuda:0', dtype=torch.float64)
tensor([-35.6712, -55.4691, -52.8675, -51.3652, -52.5591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5394, device='cuda:0', dtype=torch.float64)
tensor([-35.8013, -55.5276, -52.8470, -51.6014, -52.5414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5786, device='cuda:0', dtype=torch.float64)
tensor([-35.8672, -55.5199, -52.7987, -51.7121, -52.4844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5872, device='cuda:0', dtype=torch.float64)
tensor([-35.9658, -55.6295, -52.8433, -51.8148, -52.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6893, device='cuda:0', dtype=torch.float64)
tensor([-36.0777, -55.8485, -52.9678, -52.0331, -52.4824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5547, device='cuda:0', dtype=torch.float64)
tensor([-36.2085, -56.0526, -53.0560, -52.1729, -52.6613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2613, device='cuda:0', dtype=torch.float64)
tensor([-36.3646, -56.2161, -53.0936, -52.2442, -52.7038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3152, device='cuda:0', dtype=torch.float64)
tensor([-36.5174, -56.3661, -53.1594, -52.3249, -52.7549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6241, device='cuda:0', dtype=torch.float64)
tensor([-36.6685, -56.5013, -53.2459, -52.3737, -52.8201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4090, device='cuda:0', dtype=torch.float64)
tensor([-36.7867, -56.5721, -53.2895, -52.3231, -52.8341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6263, device='cuda:0', dtype=torch.float64)
tensor([-36.9778, -56.7210, -53.4188, -52.3065, -52.8844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4426, device='cuda:0', dtype=torch.float64)
tensor([-37.1235, -56.8161, -53.5366, -52.2712, -52.9406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2485, device='cuda:0', dtype=torch.float64)
tensor([-37.2438, -56.8271, -53.5560, -52.2519, -52.9507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3448, device='cuda:0', dtype=torch.float64)
tensor([-37.3747, -56.9542, -53.6117, -52.3387, -53.1164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3831, device='cuda:0', dtype=torch.float64)
tensor([-37.4498, -57.0290, -53.6571, -52.3645, -53.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7834, device='cuda:0', dtype=torch.float64)
tensor([-37.4756, -56.9040, -53.6696, -52.3840, -53.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5628, device='cuda:0', dtype=torch.float64)
tensor([-37.5671, -56.8049, -53.6586, -52.5122, -53.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5803, device='cuda:0', dtype=torch.float64)
tensor([-37.6392, -56.6680, -53.6152, -52.5143, -53.2111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4049, device='cuda:0', dtype=torch.float64)
tensor([-37.7162, -56.5807, -53.5653, -52.5630, -53.2516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5247, device='cuda:0', dtype=torch.float64)
tensor([-37.8127, -56.5198, -53.5792, -52.5400, -53.2830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5405, device='cuda:0', dtype=torch.float64)
tensor([-37.9447, -56.4224, -53.6116, -52.5489, -53.3064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4531, device='cuda:0', dtype=torch.float64)
tensor([-38.0394, -56.4138, -53.6613, -52.5995, -53.4630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7029, device='cuda:0', dtype=torch.float64)
tensor([-38.1888, -56.3734, -53.7326, -52.7965, -53.5905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3130, device='cuda:0', dtype=torch.float64)
tensor([-38.3268, -56.3088, -53.7113, -52.8517, -53.6100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5239, device='cuda:0', dtype=torch.float64)
tensor([-38.4513, -56.1932, -53.6946, -52.8478, -53.7888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6334, device='cuda:0', dtype=torch.float64)
tensor([-38.5630, -56.1557, -53.6913, -52.8768, -53.9100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5558, device='cuda:0', dtype=torch.float64)
tensor([-38.7998, -56.2732, -53.7532, -53.0051, -54.1272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3520, device='cuda:0', dtype=torch.float64)
tensor([-38.9925, -56.3785, -53.8350, -53.2255, -54.3338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5111, device='cuda:0', dtype=torch.float64)
tensor([-39.1269, -56.3095, -53.8774, -53.4177, -54.4247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4594, device='cuda:0', dtype=torch.float64)
tensor([-39.2619, -56.2097, -53.9199, -53.5594, -54.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3234, device='cuda:0', dtype=torch.float64)
tensor([-39.4014, -56.2191, -54.0332, -53.7708, -54.6158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3622, device='cuda:0', dtype=torch.float64)
tensor([-39.5357, -56.2080, -54.1048, -54.0099, -54.7287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5060, device='cuda:0', dtype=torch.float64)
tensor([-39.6481, -56.2643, -54.2618, -54.2130, -54.8237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5647, device='cuda:0', dtype=torch.float64)
tensor([-39.8098, -56.3982, -54.4134, -54.4192, -55.0325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2995, device='cuda:0', dtype=torch.float64)
tensor([-40.0597, -56.6302, -54.5985, -54.7069, -55.2759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1853, device='cuda:0', dtype=torch.float64)
tensor([-40.4025, -56.9359, -54.8565, -55.0351, -55.5529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2760, device='cuda:0', dtype=torch.float64)
tensor([-40.7025, -57.2397, -55.0349, -55.2919, -55.8258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4615, device='cuda:0', dtype=torch.float64)
tensor([-41.0212, -57.5451, -55.1445, -55.4711, -56.0405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5439, device='cuda:0', dtype=torch.float64)
tensor([-41.3354, -57.9038, -55.2921, -55.6053, -56.2981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4791, device='cuda:0', dtype=torch.float64)
tensor([-41.6213, -58.2154, -55.4415, -55.6401, -56.4439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4045, device='cuda:0', dtype=torch.float64)
tensor([-41.8118, -58.4687, -55.5211, -55.6974, -56.4992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4178, device='cuda:0', dtype=torch.float64)
tensor([-42.0655, -58.7781, -55.5587, -55.6991, -56.6674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2211, device='cuda:0', dtype=torch.float64)
tensor([-42.2402, -59.0755, -55.5777, -55.7228, -56.7835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6207, device='cuda:0', dtype=torch.float64)
tensor([-42.4804, -59.5672, -55.7755, -55.9387, -57.0624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5577, device='cuda:0', dtype=torch.float64)
tensor([-42.6592, -59.9934, -55.8971, -56.0724, -57.2270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3317, device='cuda:0', dtype=torch.float64)
tensor([-42.8119, -60.4099, -56.0442, -56.1457, -57.4702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5393, device='cuda:0', dtype=torch.float64)
tensor([-42.9321, -60.8791, -56.2422, -56.2801, -57.7646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2852, device='cuda:0', dtype=torch.float64)
tensor([-43.0533, -61.3498, -56.4668, -56.4799, -58.0949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4462, device='cuda:0', dtype=torch.float64)
tensor([-43.1748, -61.8049, -56.7402, -56.6602, -58.4716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5101, device='cuda:0', dtype=torch.float64)
tensor([-43.3435, -62.2535, -56.9384, -56.9175, -58.8186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3576, device='cuda:0', dtype=torch.float64)
tensor([-43.5366, -62.7355, -57.1441, -57.1764, -59.1251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6421, device='cuda:0', dtype=torch.float64)
tensor([-43.6351, -63.0779, -57.2643, -57.3177, -59.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6288, device='cuda:0', dtype=torch.float64)
tensor([-43.6518, -63.2907, -57.2961, -57.3568, -59.4562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7246, device='cuda:0', dtype=torch.float64)
tensor([-43.7102, -63.5176, -57.3601, -57.4298, -59.5667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3127, device='cuda:0', dtype=torch.float64)
tensor([-43.7018, -63.7097, -57.4663, -57.4782, -59.5990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3600, device='cuda:0', dtype=torch.float64)
tensor([-43.6897, -63.8277, -57.5563, -57.5105, -59.6458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4947, device='cuda:0', dtype=torch.float64)
tensor([-43.7245, -63.9244, -57.6618, -57.4783, -59.7113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4784, device='cuda:0', dtype=torch.float64)
tensor([-43.7422, -63.9179, -57.6903, -57.4210, -59.6777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4713, device='cuda:0', dtype=torch.float64)
tensor([-43.7663, -63.9495, -57.6589, -57.3423, -59.6611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4779, device='cuda:0', dtype=torch.float64)
tensor([-43.7011, -63.8379, -57.5546, -57.1866, -59.5934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4681, device='cuda:0', dtype=torch.float64)
tensor([-43.6337, -63.7842, -57.4752, -57.1083, -59.6098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4473, device='cuda:0', dtype=torch.float64)
tensor([-43.6473, -63.8216, -57.4350, -57.0829, -59.6193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3587, device='cuda:0', dtype=torch.float64)
tensor([-43.5888, -63.8578, -57.4169, -57.0380, -59.6628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5333, device='cuda:0', dtype=torch.float64)
tensor([-43.6028, -63.9086, -57.4180, -57.0975, -59.7496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7461, device='cuda:0', dtype=torch.float64)
tensor([-43.7385, -64.0657, -57.5122, -57.1931, -59.8400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3381, device='cuda:0', dtype=torch.float64)
tensor([-43.7904, -64.2157, -57.5744, -57.2654, -59.8561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5452, device='cuda:0', dtype=torch.float64)
tensor([-43.7361, -64.3627, -57.6562, -57.2760, -59.9002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4683, device='cuda:0', dtype=torch.float64)
tensor([-43.6559, -64.4368, -57.7740, -57.2848, -59.9587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2614, device='cuda:0', dtype=torch.float64)
tensor([-43.5787, -64.5100, -57.8625, -57.2675, -60.0467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5339, device='cuda:0', dtype=torch.float64)
tensor([-43.5913, -64.6907, -57.9491, -57.2914, -60.2447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5245, device='cuda:0', dtype=torch.float64)
tensor([-43.6482, -64.9246, -58.0292, -57.3286, -60.4509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6248, device='cuda:0', dtype=torch.float64)
tensor([-43.7280, -65.2052, -58.1780, -57.4351, -60.6156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2650, device='cuda:0', dtype=torch.float64)
tensor([-43.8419, -65.4684, -58.3434, -57.5472, -60.7214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6253, device='cuda:0', dtype=torch.float64)
tensor([-43.9529, -65.7689, -58.4997, -57.5854, -60.8636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4052, device='cuda:0', dtype=torch.float64)
tensor([-44.1491, -66.0755, -58.5682, -57.5799, -60.9345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5255, device='cuda:0', dtype=torch.float64)
tensor([-44.4005, -66.5232, -58.7583, -57.6786, -61.0981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3993, device='cuda:0', dtype=torch.float64)
tensor([-44.7335, -67.0954, -59.0105, -57.8116, -61.3967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3556, device='cuda:0', dtype=torch.float64)
tensor([-45.0256, -67.6696, -59.2200, -57.8971, -61.6859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4656, device='cuda:0', dtype=torch.float64)
tensor([-45.3514, -68.0232, -59.3446, -57.9292, -61.8312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5552, device='cuda:0', dtype=torch.float64)
tensor([-45.6146, -68.3745, -59.4859, -58.0040, -62.0737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4072, device='cuda:0', dtype=torch.float64)
tensor([-45.8542, -68.6304, -59.5919, -58.0740, -62.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3726, device='cuda:0', dtype=torch.float64)
tensor([-46.1024, -68.8887, -59.6629, -58.1976, -62.3181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4985, device='cuda:0', dtype=torch.float64)
tensor([-46.4083, -69.2234, -59.7939, -58.3870, -62.5946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3486, device='cuda:0', dtype=torch.float64)
tensor([-46.6704, -69.5675, -59.9674, -58.6063, -62.8883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3440, device='cuda:0', dtype=torch.float64)
tensor([-46.8706, -69.8748, -60.1140, -58.8421, -63.0949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2984, device='cuda:0', dtype=torch.float64)
tensor([-47.0187, -70.1268, -60.2506, -59.0647, -63.2703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2458, device='cuda:0', dtype=torch.float64)
tensor([-47.1336, -70.3262, -60.3225, -59.2029, -63.4317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3918, device='cuda:0', dtype=torch.float64)
tensor([-47.2308, -70.3614, -60.2572, -59.2680, -63.4897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4989, device='cuda:0', dtype=torch.float64)
tensor([-47.2548, -70.3872, -60.2020, -59.3240, -63.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3475, device='cuda:0', dtype=torch.float64)
tensor([-47.2952, -70.4711, -60.1441, -59.3737, -63.5878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4804, device='cuda:0', dtype=torch.float64)
tensor([-47.3463, -70.5772, -60.0656, -59.4070, -63.6088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2964, device='cuda:0', dtype=torch.float64)
tensor([-47.5224, -70.7780, -60.0185, -59.4895, -63.7037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3716, device='cuda:0', dtype=torch.float64)
tensor([-47.6869, -71.1107, -59.9531, -59.4612, -63.8665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1787, device='cuda:0', dtype=torch.float64)
tensor([-47.8966, -71.5221, -59.9457, -59.4955, -64.1185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2876, device='cuda:0', dtype=torch.float64)
tensor([-48.1232, -71.9230, -59.9248, -59.5278, -64.3543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4465, device='cuda:0', dtype=torch.float64)
tensor([-48.3757, -72.4181, -60.0536, -59.6361, -64.6941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4573, device='cuda:0', dtype=torch.float64)
tensor([-48.6818, -72.8496, -60.1284, -59.7267, -64.9348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2739, device='cuda:0', dtype=torch.float64)
tensor([-48.9104, -73.2519, -60.1925, -59.8420, -65.2270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3931, device='cuda:0', dtype=torch.float64)
tensor([-49.1894, -73.6759, -60.3128, -59.9648, -65.5676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3478, device='cuda:0', dtype=torch.float64)
tensor([-49.4219, -74.1132, -60.3766, -60.0368, -65.8793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5855, device='cuda:0', dtype=torch.float64)
tensor([-49.5893, -74.3838, -60.3457, -60.1298, -66.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2978, device='cuda:0', dtype=torch.float64)
tensor([-49.7026, -74.5733, -60.2721, -60.2188, -66.4827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4805, device='cuda:0', dtype=torch.float64)
tensor([-49.8128, -74.8086, -60.2819, -60.3524, -66.8108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3656, device='cuda:0', dtype=torch.float64)
tensor([-49.9600, -75.0913, -60.3481, -60.5205, -67.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5359, device='cuda:0', dtype=torch.float64)
tensor([-50.0513, -75.2612, -60.3992, -60.7189, -67.5028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1936, device='cuda:0', dtype=torch.float64)
tensor([-50.1203, -75.3718, -60.4142, -60.9247, -67.7744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2628, device='cuda:0', dtype=torch.float64)
tensor([-50.1126, -75.3688, -60.4157, -61.1491, -67.9957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3091, device='cuda:0', dtype=torch.float64)
tensor([-50.1405, -75.4074, -60.4418, -61.4478, -68.2525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4863, device='cuda:0', dtype=torch.float64)
tensor([-50.1769, -75.2765, -60.4623, -61.7267, -68.3675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4432, device='cuda:0', dtype=torch.float64)
tensor([-50.3022, -75.2944, -60.5756, -61.9962, -68.5625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4127, device='cuda:0', dtype=torch.float64)
tensor([-50.3846, -75.2570, -60.6440, -62.1828, -68.7175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4367, device='cuda:0', dtype=torch.float64)
tensor([-50.4939, -75.2835, -60.7719, -62.3411, -68.9447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4059, device='cuda:0', dtype=torch.float64)
tensor([-50.5238, -75.2071, -60.8245, -62.3967, -69.0817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4257, device='cuda:0', dtype=torch.float64)
tensor([-50.4925, -75.1367, -60.9090, -62.4547, -69.2232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3860, device='cuda:0', dtype=torch.float64)
tensor([-50.4670, -75.1692, -61.1239, -62.6094, -69.5123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1535, device='cuda:0', dtype=torch.float64)
tensor([-50.2972, -75.1102, -61.2857, -62.7021, -69.6975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5175, device='cuda:0', dtype=torch.float64)
tensor([-50.1759, -75.1419, -61.4437, -62.8465, -69.9652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4521, device='cuda:0', dtype=torch.float64)
tensor([-50.1700, -75.0805, -61.5494, -63.0313, -70.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2752, device='cuda:0', dtype=torch.float64)
tensor([-50.1820, -75.0206, -61.6254, -63.1572, -70.4091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4095, device='cuda:0', dtype=torch.float64)
tensor([-50.1439, -74.9108, -61.6474, -63.2316, -70.5242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4598, device='cuda:0', dtype=torch.float64)
tensor([-50.1158, -74.8180, -61.6852, -63.3059, -70.6170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3149, device='cuda:0', dtype=torch.float64)
tensor([-50.1172, -74.8078, -61.7627, -63.4235, -70.8023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3896, device='cuda:0', dtype=torch.float64)
tensor([-50.1497, -74.8429, -61.8625, -63.4624, -70.9462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3197, device='cuda:0', dtype=torch.float64)
tensor([-50.1678, -74.8141, -61.9200, -63.4710, -71.0444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3080, device='cuda:0', dtype=torch.float64)
tensor([-50.2080, -74.9300, -62.0441, -63.6198, -71.2381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3556, device='cuda:0', dtype=torch.float64)
tensor([-50.2848, -75.0355, -62.0885, -63.7002, -71.4174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3099, device='cuda:0', dtype=torch.float64)
tensor([-50.3895, -75.2121, -62.2008, -63.8388, -71.6223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3199, device='cuda:0', dtype=torch.float64)
tensor([-50.5386, -75.4520, -62.3589, -63.9138, -71.9305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4592, device='cuda:0', dtype=torch.float64)
tensor([-50.7181, -75.6783, -62.5744, -63.9331, -72.2704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3931, device='cuda:0', dtype=torch.float64)
tensor([-50.8991, -75.7877, -62.7432, -63.8304, -72.4036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4763, device='cuda:0', dtype=torch.float64)
tensor([-51.0152, -75.8410, -62.9042, -63.6350, -72.4731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5724, device='cuda:0', dtype=torch.float64)
tensor([-51.2347, -75.9635, -63.1268, -63.4425, -72.5822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2886, device='cuda:0', dtype=torch.float64)
tensor([-51.4440, -75.9223, -63.3199, -63.1942, -72.5783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2519, device='cuda:0', dtype=torch.float64)
tensor([-51.6652, -75.9576, -63.5658, -63.0801, -72.6344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2064, device='cuda:0', dtype=torch.float64)
tensor([-51.8517, -76.0907, -63.8671, -63.0655, -72.8153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4300, device='cuda:0', dtype=torch.float64)
tensor([-51.9003, -76.1259, -64.0663, -63.1171, -72.9714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3621, device='cuda:0', dtype=torch.float64)
tensor([-51.9690, -76.1602, -64.3309, -63.1635, -73.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2852, device='cuda:0', dtype=torch.float64)
tensor([-52.1416, -76.2915, -64.6410, -63.2787, -73.4207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2270, device='cuda:0', dtype=torch.float64)
tensor([-52.3004, -76.3862, -64.9170, -63.4425, -73.6694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4115, device='cuda:0', dtype=torch.float64)
tensor([-52.3899, -76.4550, -65.1729, -63.6392, -73.9082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2451, device='cuda:0', dtype=torch.float64)
tensor([-52.5026, -76.4261, -65.3656, -63.7584, -73.9346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3634, device='cuda:0', dtype=torch.float64)
tensor([-52.5752, -76.3376, -65.4530, -63.7051, -73.9030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4091, device='cuda:0', dtype=torch.float64)
tensor([-52.7080, -76.3183, -65.5959, -63.7046, -73.9411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2550, device='cuda:0', dtype=torch.float64)
tensor([-52.9217, -76.3466, -65.8280, -63.7076, -74.0819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2430, device='cuda:0', dtype=torch.float64)
tensor([-53.0609, -76.3243, -66.0203, -63.6805, -74.1295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4641, device='cuda:0', dtype=torch.float64)
tensor([-53.2574, -76.3971, -66.2841, -63.7015, -74.2816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3707, device='cuda:0', dtype=torch.float64)
tensor([-53.3738, -76.4154, -66.5188, -63.7784, -74.4405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2881, device='cuda:0', dtype=torch.float64)
tensor([-53.4637, -76.5133, -66.7895, -63.8343, -74.6958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2133, device='cuda:0', dtype=torch.float64)
tensor([-53.5856, -76.6607, -67.0834, -63.9330, -74.9348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2634, device='cuda:0', dtype=torch.float64)
tensor([-53.7037, -76.7757, -67.3252, -64.1133, -75.1359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2111, device='cuda:0', dtype=torch.float64)
tensor([-53.7752, -76.7378, -67.4195, -64.1595, -75.1973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5676, device='cuda:0', dtype=torch.float64)
tensor([-53.8486, -76.7836, -67.6021, -64.1123, -75.3928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2686, device='cuda:0', dtype=torch.float64)
tensor([-53.9117, -76.9272, -67.8109, -64.2134, -75.7028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1296, device='cuda:0', dtype=torch.float64)
tensor([-53.9367, -77.0439, -67.9982, -64.2735, -75.9553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2369, device='cuda:0', dtype=torch.float64)
tensor([-54.0128, -77.1776, -68.1342, -64.3628, -76.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3662, device='cuda:0', dtype=torch.float64)
tensor([-54.0342, -77.1830, -68.2358, -64.4826, -76.3561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3742, device='cuda:0', dtype=torch.float64)
tensor([-54.0551, -77.2945, -68.3773, -64.5250, -76.5672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3957, device='cuda:0', dtype=torch.float64)
tensor([-54.1064, -77.5700, -68.6272, -64.6896, -76.9839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4088, device='cuda:0', dtype=torch.float64)
tensor([-54.1634, -77.7970, -68.8080, -64.9833, -77.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4737, device='cuda:0', dtype=torch.float64)
tensor([-54.1837, -77.8737, -68.8540, -65.3101, -77.6374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5360, device='cuda:0', dtype=torch.float64)
tensor([-54.3009, -78.0921, -68.8899, -65.6385, -77.9316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5025, device='cuda:0', dtype=torch.float64)
tensor([-54.5224, -78.4637, -69.0094, -65.9982, -78.2990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4145, device='cuda:0', dtype=torch.float64)
tensor([-54.7077, -78.7362, -69.0394, -66.2426, -78.5872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3907, device='cuda:0', dtype=torch.float64)
tensor([-54.9003, -78.9630, -69.0543, -66.5344, -78.7951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4849, device='cuda:0', dtype=torch.float64)
tensor([-55.0505, -79.0936, -69.0593, -66.7276, -78.9350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4006, device='cuda:0', dtype=torch.float64)
tensor([-55.1956, -79.2913, -69.0868, -66.9623, -79.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2607, device='cuda:0', dtype=torch.float64)
tensor([-55.4440, -79.4947, -69.1316, -67.2932, -79.3769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2277, device='cuda:0', dtype=torch.float64)
tensor([-55.6613, -79.6455, -69.0749, -67.5213, -79.4633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4319, device='cuda:0', dtype=torch.float64)
tensor([-55.9232, -79.7601, -68.9747, -67.7447, -79.4317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3828, device='cuda:0', dtype=torch.float64)
tensor([-56.1525, -79.7632, -68.8750, -67.8938, -79.3546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4446, device='cuda:0', dtype=torch.float64)
tensor([-56.4700, -79.9130, -68.8617, -68.1997, -79.3801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3029, device='cuda:0', dtype=torch.float64)
tensor([-56.6902, -79.9178, -68.7359, -68.4831, -79.2511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3839, device='cuda:0', dtype=torch.float64)
tensor([-56.9108, -80.0804, -68.6701, -68.8947, -79.2784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3451, device='cuda:0', dtype=torch.float64)
tensor([-57.1012, -80.1993, -68.6078, -69.3189, -79.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2745, device='cuda:0', dtype=torch.float64)
tensor([-57.3070, -80.4715, -68.6032, -69.8520, -79.2100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2375, device='cuda:0', dtype=torch.float64)
tensor([-57.5629, -80.7711, -68.6322, -70.4011, -79.2600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2225, device='cuda:0', dtype=torch.float64)
tensor([-57.9193, -81.1933, -68.7022, -70.9020, -79.4149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2758, device='cuda:0', dtype=torch.float64)
tensor([-58.2939, -81.5878, -68.7702, -71.4037, -79.6278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4390, device='cuda:0', dtype=torch.float64)
tensor([-58.6355, -81.9697, -68.8655, -71.8853, -79.9129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3018, device='cuda:0', dtype=torch.float64)
tensor([-59.0248, -82.4957, -69.0835, -72.4785, -80.3322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2428, device='cuda:0', dtype=torch.float64)
tensor([-59.4541, -83.0375, -69.3237, -73.0844, -80.8558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2238, device='cuda:0', dtype=torch.float64)
tensor([-59.8607, -83.4053, -69.5066, -73.6189, -81.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2998, device='cuda:0', dtype=torch.float64)
tensor([-60.2120, -83.7401, -69.6725, -74.1178, -81.6785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2134, device='cuda:0', dtype=torch.float64)
tensor([-60.4754, -83.9750, -69.7867, -74.4890, -82.0114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2384, device='cuda:0', dtype=torch.float64)
tensor([-60.7781, -84.2640, -69.9637, -74.7694, -82.3910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3420, device='cuda:0', dtype=torch.float64)
tensor([-61.0709, -84.5618, -70.1679, -74.9057, -82.7535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4348, device='cuda:0', dtype=torch.float64)
tensor([-61.3208, -84.9264, -70.4262, -75.1368, -83.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2824, device='cuda:0', dtype=torch.float64)
tensor([-61.6366, -85.3550, -70.7135, -75.4640, -83.6162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2121, device='cuda:0', dtype=torch.float64)
tensor([-61.9461, -85.7666, -71.0048, -75.7940, -84.0393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2277, device='cuda:0', dtype=torch.float64)
tensor([-62.2631, -86.1599, -71.3038, -76.0970, -84.4089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1116, device='cuda:0', dtype=torch.float64)
tensor([-62.4724, -86.4887, -71.5937, -76.3212, -84.7489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0461, device='cuda:0', dtype=torch.float64)
tensor([-62.6819, -86.7670, -71.7891, -76.4806, -85.0052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1892, device='cuda:0', dtype=torch.float64)
tensor([-62.7943, -86.9460, -71.8861, -76.5068, -85.0984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2897, device='cuda:0', dtype=torch.float64)
tensor([-62.8095, -87.0666, -71.9976, -76.5508, -85.2636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5483, device='cuda:0', dtype=torch.float64)
tensor([-62.7979, -87.0293, -71.9428, -76.5201, -85.1716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3131, device='cuda:0', dtype=torch.float64)
tensor([-62.7620, -87.0381, -71.9377, -76.5012, -85.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3783, device='cuda:0', dtype=torch.float64)
tensor([-62.7138, -87.0084, -71.9954, -76.4843, -85.0053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4247, device='cuda:0', dtype=torch.float64)
tensor([-62.7252, -87.0824, -72.0262, -76.4584, -85.0331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5031, device='cuda:0', dtype=torch.float64)
tensor([-63.0368, -87.3081, -72.1095, -76.4720, -85.0352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2071, device='cuda:0', dtype=torch.float64)
tensor([-63.2903, -87.4027, -72.1706, -76.4093, -84.9766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2593, device='cuda:0', dtype=torch.float64)
tensor([-63.5954, -87.5637, -72.2486, -76.3249, -84.9127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1766, device='cuda:0', dtype=torch.float64)
tensor([-63.9620, -87.7068, -72.3565, -76.2542, -84.9062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3287, device='cuda:0', dtype=torch.float64)
tensor([-64.2210, -87.7979, -72.4264, -76.2026, -84.8789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2729, device='cuda:0', dtype=torch.float64)
tensor([-64.4392, -87.9964, -72.5676, -76.2167, -84.9725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4208, device='cuda:0', dtype=torch.float64)
tensor([-64.6762, -88.1745, -72.6459, -76.2958, -84.9612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0063, device='cuda:0', dtype=torch.float64)
tensor([-64.9327, -88.3500, -72.7708, -76.4538, -85.0352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3040, device='cuda:0', dtype=torch.float64)
tensor([-65.0983, -88.4099, -72.8132, -76.5163, -84.9907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2908, device='cuda:0', dtype=torch.float64)
tensor([-65.2627, -88.3662, -72.8230, -76.3546, -84.8096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1097, device='cuda:0', dtype=torch.float64)
tensor([-65.3220, -88.2813, -72.8248, -76.2176, -84.6614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1620, device='cuda:0', dtype=torch.float64)
tensor([-65.4291, -88.3954, -72.8567, -76.1916, -84.7418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1817, device='cuda:0', dtype=torch.float64)
tensor([-65.4800, -88.3745, -72.8286, -76.1449, -84.6991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3688, device='cuda:0', dtype=torch.float64)
tensor([-65.5484, -88.4377, -72.8928, -76.1952, -84.7511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3395, device='cuda:0', dtype=torch.float64)
tensor([-65.6222, -88.5240, -72.9392, -76.3230, -84.8982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0792, device='cuda:0', dtype=torch.float64)
tensor([-65.6531, -88.5798, -72.9254, -76.4467, -84.9914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1036, device='cuda:0', dtype=torch.float64)
tensor([-65.5913, -88.5827, -72.9269, -76.5686, -85.0789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2982, device='cuda:0', dtype=torch.float64)
tensor([-65.5277, -88.5555, -72.8987, -76.7187, -85.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2026, device='cuda:0', dtype=torch.float64)
tensor([-65.3860, -88.5644, -72.8875, -76.8647, -85.4265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2283, device='cuda:0', dtype=torch.float64)
tensor([-65.1721, -88.5352, -72.8891, -76.9473, -85.6390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1966, device='cuda:0', dtype=torch.float64)
tensor([-64.8411, -88.4795, -72.9372, -76.9347, -85.8596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2068, device='cuda:0', dtype=torch.float64)
tensor([-64.6121, -88.4303, -72.9899, -76.9729, -85.9710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4577, device='cuda:0', dtype=torch.float64)
tensor([-64.4646, -88.4271, -73.0992, -76.9541, -86.0516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2232, device='cuda:0', dtype=torch.float64)
tensor([-64.3247, -88.4195, -73.2030, -76.7487, -86.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2678, device='cuda:0', dtype=torch.float64)
tensor([-64.2467, -88.5407, -73.3651, -76.6350, -86.3494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2534, device='cuda:0', dtype=torch.float64)
tensor([-64.1426, -88.5825, -73.4162, -76.3897, -86.4519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2575, device='cuda:0', dtype=torch.float64)
tensor([-64.0156, -88.5663, -73.5076, -76.1704, -86.4947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2545, device='cuda:0', dtype=torch.float64)
tensor([-63.8072, -88.4958, -73.5480, -75.9130, -86.4900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3171, device='cuda:0', dtype=torch.float64)
tensor([-63.6722, -88.5493, -73.5785, -75.7253, -86.5506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0675, device='cuda:0', dtype=torch.float64)
tensor([-63.6312, -88.6709, -73.6703, -75.6281, -86.7210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2298, device='cuda:0', dtype=torch.float64)
tensor([-63.5581, -88.7638, -73.6951, -75.4453, -86.8566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2157, device='cuda:0', dtype=torch.float64)
tensor([-63.5245, -88.9707, -73.7562, -75.3688, -87.1462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2220, device='cuda:0', dtype=torch.float64)
tensor([-63.4809, -89.1226, -73.7388, -75.2568, -87.3315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2826, device='cuda:0', dtype=torch.float64)
tensor([-63.5397, -89.3981, -73.7624, -75.3564, -87.5445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1930, device='cuda:0', dtype=torch.float64)
tensor([-63.6403, -89.7272, -73.8002, -75.5178, -87.7760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1402, device='cuda:0', dtype=torch.float64)
tensor([-63.7959, -90.0652, -73.8769, -75.7241, -88.0903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2377, device='cuda:0', dtype=torch.float64)
tensor([-63.9391, -90.3615, -73.9338, -75.8306, -88.2759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1709, device='cuda:0', dtype=torch.float64)
tensor([-64.1283, -90.7451, -73.9948, -76.0470, -88.4477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4107, device='cuda:0', dtype=torch.float64)
tensor([-64.3556, -91.1232, -74.1062, -76.4082, -88.6985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1115, device='cuda:0', dtype=torch.float64)
tensor([-64.6152, -91.5077, -74.2566, -76.7674, -88.8926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2096, device='cuda:0', dtype=torch.float64)
tensor([-64.8859, -91.9581, -74.5108, -77.1031, -89.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2115, device='cuda:0', dtype=torch.float64)
tensor([-65.1121, -92.4294, -74.7935, -77.5227, -89.5209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3490, device='cuda:0', dtype=torch.float64)
tensor([-65.2093, -92.7996, -75.0486, -77.9535, -89.8857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1031, device='cuda:0', dtype=torch.float64)
tensor([-65.3065, -93.1137, -75.3273, -78.3499, -90.1260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2597, device='cuda:0', dtype=torch.float64)
tensor([-65.4613, -93.4740, -75.6825, -78.8129, -90.3855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2989, device='cuda:0', dtype=torch.float64)
tensor([-65.5735, -93.6702, -75.9583, -79.1138, -90.4827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2101, device='cuda:0', dtype=torch.float64)
tensor([-65.6729, -93.9016, -76.2883, -79.3221, -90.6634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1659, device='cuda:0', dtype=torch.float64)
tensor([-65.7659, -94.0561, -76.5451, -79.5441, -90.7743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4477, device='cuda:0', dtype=torch.float64)
tensor([-65.9501, -94.1852, -76.7212, -79.7890, -90.7070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1397, device='cuda:0', dtype=torch.float64)
tensor([-66.2124, -94.3856, -77.0011, -80.1508, -90.6994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2366, device='cuda:0', dtype=torch.float64)
tensor([-66.4210, -94.7047, -77.2801, -80.4613, -90.8661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2150, device='cuda:0', dtype=torch.float64)
tensor([-66.6133, -95.0318, -77.5831, -80.7505, -91.1098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1854, device='cuda:0', dtype=torch.float64)
tensor([-66.7984, -95.3703, -77.8730, -81.1109, -91.4453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1013, device='cuda:0', dtype=torch.float64)
tensor([-66.9709, -95.7115, -78.1528, -81.4866, -91.7996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1889, device='cuda:0', dtype=torch.float64)
tensor([-67.1322, -96.1075, -78.5107, -81.8659, -92.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0598, device='cuda:0', dtype=torch.float64)
tensor([-67.3400, -96.5554, -78.8884, -82.3623, -92.8277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2411, device='cuda:0', dtype=torch.float64)
tensor([-67.6600, -97.0774, -79.2742, -82.9370, -93.3895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2459, device='cuda:0', dtype=torch.float64)
tensor([-67.9843, -97.4767, -79.6431, -83.4303, -93.8996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1074, device='cuda:0', dtype=torch.float64)
tensor([-68.2719, -97.8557, -79.9763, -83.9199, -94.3366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3248, device='cuda:0', dtype=torch.float64)
tensor([-68.6314, -98.3458, -80.3305, -84.4511, -94.8417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2779, device='cuda:0', dtype=torch.float64)
tensor([-68.9688, -98.7019, -80.6191, -85.0663, -95.3000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3224, device='cuda:0', dtype=torch.float64)
tensor([-69.3353, -99.0692, -80.9316, -85.7246, -95.7525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3388, device='cuda:0', dtype=torch.float64)
tensor([-69.6433, -99.4921, -81.2646, -86.2756, -96.3154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2475, device='cuda:0', dtype=torch.float64)
tensor([-69.9615, -99.9646, -81.5673, -86.8580, -96.8663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1565, device='cuda:0', dtype=torch.float64)
tensor([ -70.3077, -100.3620,  -81.8311,  -87.3421,  -97.3519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2670, device='cuda:0', dtype=torch.float64)
tensor([ -70.6029, -100.5437,  -81.9358,  -87.7330,  -97.5437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1272, device='cuda:0', dtype=torch.float64)
tensor([ -70.8581, -100.7362,  -81.9405,  -88.0693,  -97.7386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1613, device='cuda:0', dtype=torch.float64)
tensor([ -71.2083, -101.0292,  -82.0553,  -88.4834,  -98.0826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1873, device='cuda:0', dtype=torch.float64)
tensor([ -71.6220, -101.3928,  -82.1732,  -88.8297,  -98.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3254, device='cuda:0', dtype=torch.float64)
tensor([ -71.9942, -101.6447,  -82.1908,  -89.1298,  -98.6349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0388, device='cuda:0', dtype=torch.float64)
tensor([ -72.3727, -101.8045,  -82.2065,  -89.4068,  -98.8020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0168, device='cuda:0', dtype=torch.float64)
tensor([ -72.7072, -101.9927,  -82.2344,  -89.7376,  -99.0212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([ -73.0112, -102.2813,  -82.3209,  -90.1398,  -99.2948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2064, device='cuda:0', dtype=torch.float64)
tensor([ -73.3392, -102.5452,  -82.4087,  -90.5783,  -99.6102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2178, device='cuda:0', dtype=torch.float64)
tensor([ -73.6942, -102.9259,  -82.5579,  -90.9875, -100.0287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1230, device='cuda:0', dtype=torch.float64)
tensor([ -74.0051, -103.3210,  -82.6835,  -91.3723, -100.4626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1808, device='cuda:0', dtype=torch.float64)
tensor([ -74.2584, -103.7213,  -82.8189,  -91.6833, -100.9376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0780, device='cuda:0', dtype=torch.float64)
tensor([ -74.5892, -104.1906,  -83.1018,  -92.1591, -101.5130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1948, device='cuda:0', dtype=torch.float64)
tensor([ -75.0065, -104.7795,  -83.4251,  -92.7568, -102.1055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2266, device='cuda:0', dtype=torch.float64)
tensor([ -75.4060, -105.2266,  -83.7039,  -93.0756, -102.5225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0766, device='cuda:0', dtype=torch.float64)
tensor([ -75.8076, -105.7681,  -84.0026,  -93.4011, -102.9290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1961, device='cuda:0', dtype=torch.float64)
tensor([ -76.3156, -106.3916,  -84.3933,  -94.0385, -103.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0823, device='cuda:0', dtype=torch.float64)
tensor([ -76.7996, -107.0350,  -84.7841,  -94.5258, -103.9019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0432, device='cuda:0', dtype=torch.float64)
tensor([ -77.3494, -107.7740,  -85.2609,  -95.1089, -104.5404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1661, device='cuda:0', dtype=torch.float64)
tensor([ -77.8638, -108.4527,  -85.6525,  -95.5971, -105.0578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0300, device='cuda:0', dtype=torch.float64)
tensor([ -78.3817, -109.0109,  -85.9686,  -95.8981, -105.4107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2674, device='cuda:0', dtype=torch.float64)
tensor([ -78.8341, -109.5317,  -86.2113,  -96.0964, -105.8347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([ -79.2633, -109.9808,  -86.3896,  -96.2386, -106.1103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1058, device='cuda:0', dtype=torch.float64)
tensor([ -79.7584, -110.4691,  -86.5468,  -96.4084, -106.4456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1696, device='cuda:0', dtype=torch.float64)
tensor([ -80.1969, -110.9103,  -86.7050,  -96.6428, -106.6852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0705, device='cuda:0', dtype=torch.float64)
tensor([ -80.5827, -111.4146,  -86.8647,  -96.9982, -107.0494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1459, device='cuda:0', dtype=torch.float64)
tensor([ -80.8908, -111.9278,  -86.9917,  -97.3839, -107.4469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0916, device='cuda:0', dtype=torch.float64)
tensor([ -81.2952, -112.6085,  -87.1865,  -97.8615, -107.9936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2060, device='cuda:0', dtype=torch.float64)
tensor([ -81.7406, -113.3089,  -87.4155,  -98.4653, -108.5236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0229, device='cuda:0', dtype=torch.float64)
tensor([ -82.1484, -113.9287,  -87.6686,  -99.0130, -108.9996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0894, device='cuda:0', dtype=torch.float64)
tensor([ -82.4792, -114.5744,  -87.8658,  -99.4770, -109.4631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1790, device='cuda:0', dtype=torch.float64)
tensor([ -82.9082, -115.2659,  -88.1110, -100.0171, -110.0136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2594, device='cuda:0', dtype=torch.float64)
tensor([ -83.3870, -116.0481,  -88.4257, -100.5010, -110.6716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2177, device='cuda:0', dtype=torch.float64)
tensor([ -83.9011, -116.8135,  -88.6915, -100.9668, -111.3037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0526, device='cuda:0', dtype=torch.float64)
tensor([ -84.3942, -117.6211,  -88.9351, -101.3789, -111.9405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1657, device='cuda:0', dtype=torch.float64)
tensor([ -84.8543, -118.4808,  -89.2251, -101.7950, -112.6407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1783, device='cuda:0', dtype=torch.float64)
tensor([ -85.4408, -119.4338,  -89.5848, -102.2506, -113.5262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1090, device='cuda:0', dtype=torch.float64)
tensor([ -85.9906, -120.3575,  -90.0180, -102.6722, -114.3570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0837, device='cuda:0', dtype=torch.float64)
tensor([ -86.5008, -121.2245,  -90.3606, -103.0959, -115.1333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1673, device='cuda:0', dtype=torch.float64)
tensor([ -87.0109, -121.9932,  -90.6660, -103.5649, -115.7737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9263, device='cuda:0', dtype=torch.float64)
tensor([ -87.4046, -122.7232,  -90.8896, -104.0075, -116.3839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1053, device='cuda:0', dtype=torch.float64)
tensor([ -87.6980, -123.3630,  -91.0873, -104.2530, -116.8491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0782, device='cuda:0', dtype=torch.float64)
tensor([ -88.0653, -124.1079,  -91.3399, -104.6196, -117.5094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0596, device='cuda:0', dtype=torch.float64)
tensor([ -88.3602, -124.7518,  -91.5395, -105.0319, -118.1810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1158, device='cuda:0', dtype=torch.float64)
tensor([ -88.6862, -125.3216,  -91.7116, -105.4190, -118.7697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1372, device='cuda:0', dtype=torch.float64)
tensor([ -89.1418, -126.1125,  -91.9703, -105.9237, -119.5411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0671, device='cuda:0', dtype=torch.float64)
tensor([ -89.5387, -126.8603,  -92.2358, -106.4230, -120.3505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([ -90.0645, -127.7101,  -92.5684, -107.0651, -121.2436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0942, device='cuda:0', dtype=torch.float64)
tensor([ -90.5692, -128.5473,  -92.9093, -107.6937, -122.0995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0246, device='cuda:0', dtype=torch.float64)
tensor([ -91.0108, -129.2878,  -93.1215, -108.1442, -122.8597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0499, device='cuda:0', dtype=torch.float64)
tensor([ -91.3962, -130.0087,  -93.2948, -108.5244, -123.6111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0635, device='cuda:0', dtype=torch.float64)
tensor([ -91.7063, -130.6378,  -93.4608, -108.7748, -124.3444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1514, device='cuda:0', dtype=torch.float64)
tensor([ -91.9970, -131.2604,  -93.6533, -109.0502, -125.1628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9783, device='cuda:0', dtype=torch.float64)
tensor([ -92.3525, -131.8299,  -93.9495, -109.3605, -125.9471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2059, device='cuda:0', dtype=torch.float64)
tensor([ -92.7475, -132.4551,  -94.2791, -109.9217, -126.8255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0070, device='cuda:0', dtype=torch.float64)
tensor([ -93.1317, -133.1157,  -94.6019, -110.5220, -127.6301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9093, device='cuda:0', dtype=torch.float64)
tensor([ -93.5082, -133.7054,  -94.9121, -111.0484, -128.3411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0295, device='cuda:0', dtype=torch.float64)
tensor([ -93.9445, -134.3671,  -95.2260, -111.6102, -129.1045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0289, device='cuda:0', dtype=torch.float64)
tensor([ -94.3356, -134.9119,  -95.4837, -112.1129, -129.7728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0931, device='cuda:0', dtype=torch.float64)
tensor([ -94.7462, -135.4396,  -95.7019, -112.6742, -130.4420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1221, device='cuda:0', dtype=torch.float64)
tensor([ -95.1672, -136.0085,  -95.9278, -113.3135, -131.1937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1764, device='cuda:0', dtype=torch.float64)
tensor([ -95.6434, -136.7853,  -96.1745, -113.9766, -132.0071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0238, device='cuda:0', dtype=torch.float64)
tensor([ -96.1468, -137.5939,  -96.4291, -114.6498, -132.8543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9930, device='cuda:0', dtype=torch.float64)
tensor([ -96.6866, -138.4348,  -96.7011, -115.5141, -133.7156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9733, device='cuda:0', dtype=torch.float64)
tensor([ -97.2364, -139.3391,  -96.9848, -116.4067, -134.6603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9601, device='cuda:0', dtype=torch.float64)
tensor([ -97.7895, -140.1440,  -97.2668, -117.1900, -135.4714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9267, device='cuda:0', dtype=torch.float64)
tensor([ -98.4611, -141.0076,  -97.5585, -118.1614, -136.3161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9722, device='cuda:0', dtype=torch.float64)
tensor([ -99.1656, -141.9033,  -97.9059, -119.1344, -137.1780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0424, device='cuda:0', dtype=torch.float64)
tensor([ -99.9404, -142.8988,  -98.2225, -120.4244, -138.2602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8438, device='cuda:0', dtype=torch.float64)
tensor([-100.8016, -144.0013,  -98.5344, -121.8378, -139.3871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0050, device='cuda:0', dtype=torch.float64)
tensor([-101.7311, -145.1936,  -98.9218, -123.2159, -140.6445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9601, device='cuda:0', dtype=torch.float64)
tensor([-102.7321, -146.4900,  -99.3589, -124.6370, -142.0153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9388, device='cuda:0', dtype=torch.float64)
tensor([-103.5962, -147.6193,  -99.6882, -125.6796, -143.0805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9324, device='cuda:0', dtype=torch.float64)
tensor([-104.4803, -148.7057, -100.0120, -126.6151, -144.1815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0184, device='cuda:0', dtype=torch.float64)
tensor([-105.2457, -149.6357, -100.1803, -127.4790, -145.1783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8479, device='cuda:0', dtype=torch.float64)
tensor([-106.0269, -150.5313, -100.3322, -128.4123, -146.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8892, device='cuda:0', dtype=torch.float64)
tensor([-106.7496, -151.3696, -100.4826, -129.2160, -147.1874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0365, device='cuda:0', dtype=torch.float64)
tensor([-107.3795, -152.2790, -100.6253, -129.8499, -148.1283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9310, device='cuda:0', dtype=torch.float64)
tensor([-108.0259, -153.0992, -100.8219, -130.5070, -149.0256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0306, device='cuda:0', dtype=torch.float64)
tensor([-108.6529, -153.9224, -101.0037, -131.1897, -149.8988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9850, device='cuda:0', dtype=torch.float64)
tensor([-109.3522, -154.7818, -101.2885, -132.1094, -150.8410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9240, device='cuda:0', dtype=torch.float64)
tensor([-110.0126, -155.5878, -101.5330, -132.9899, -151.7935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9659, device='cuda:0', dtype=torch.float64)
tensor([-110.5870, -156.3495, -101.7730, -133.7419, -152.7305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9351, device='cuda:0', dtype=torch.float64)
tensor([-111.1532, -157.1636, -102.0489, -134.5316, -153.7853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9930, device='cuda:0', dtype=torch.float64)
tensor([-111.7216, -157.9121, -102.3924, -135.3397, -154.7366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0354, device='cuda:0', dtype=torch.float64)
tensor([-112.3372, -158.8047, -102.7524, -136.3704, -155.9375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0271, device='cuda:0', dtype=torch.float64)
tensor([-112.8721, -159.6695, -103.0845, -137.3888, -157.2152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9178, device='cuda:0', dtype=torch.float64)
tensor([-113.2928, -160.4622, -103.4318, -138.2692, -158.3796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8279, device='cuda:0', dtype=torch.float64)
tensor([-113.6779, -161.2310, -103.7571, -139.0363, -159.4647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9645, device='cuda:0', dtype=torch.float64)
tensor([-114.0979, -161.9855, -104.0977, -139.8784, -160.5616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9010, device='cuda:0', dtype=torch.float64)
tensor([-114.5525, -162.7771, -104.4151, -140.8329, -161.7241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8423, device='cuda:0', dtype=torch.float64)
tensor([-115.1036, -163.7045, -104.7894, -141.9325, -163.0706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8153, device='cuda:0', dtype=torch.float64)
tensor([-115.6415, -164.6333, -105.1049, -143.0297, -164.3516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9238, device='cuda:0', dtype=torch.float64)
tensor([-116.1198, -165.4491, -105.3927, -144.1521, -165.5513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0254, device='cuda:0', dtype=torch.float64)
tensor([-116.7699, -166.3743, -105.7521, -145.4327, -167.0018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9486, device='cuda:0', dtype=torch.float64)
tensor([-117.4086, -167.1943, -106.1140, -146.6055, -168.3132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9592, device='cuda:0', dtype=torch.float64)
tensor([-117.9583, -168.1059, -106.4066, -147.5966, -169.5308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8401, device='cuda:0', dtype=torch.float64)
tensor([-118.5839, -168.9960, -106.8068, -148.5912, -170.7586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7861, device='cuda:0', dtype=torch.float64)
tensor([-119.1238, -169.8578, -107.2740, -149.4468, -171.8878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8029, device='cuda:0', dtype=torch.float64)
tensor([-119.6410, -170.8268, -107.7579, -150.3379, -173.1240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8986, device='cuda:0', dtype=torch.float64)
tensor([-120.1252, -171.8368, -108.2299, -151.2308, -174.3629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8215, device='cuda:0', dtype=torch.float64)
tensor([-120.6806, -172.9133, -108.7697, -152.3064, -175.7045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8735, device='cuda:0', dtype=torch.float64)
tensor([-121.4059, -174.0848, -109.3920, -153.6004, -177.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6574, device='cuda:0', dtype=torch.float64)
tensor([-122.2106, -175.2105, -110.0422, -154.9346, -178.9922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7401, device='cuda:0', dtype=torch.float64)
tensor([-122.9773, -176.3024, -110.6393, -156.1085, -180.5696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6904, device='cuda:0', dtype=torch.float64)
tensor([-123.7097, -177.2779, -111.2444, -157.1963, -181.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7647, device='cuda:0', dtype=torch.float64)
tensor([-124.5135, -178.2123, -111.8682, -158.3574, -183.3414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-125.4282, -179.0941, -112.4292, -159.5901, -184.6868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8374, device='cuda:0', dtype=torch.float64)
tensor([-126.3257, -179.9815, -113.0646, -160.8319, -186.0818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7497, device='cuda:0', dtype=torch.float64)
tensor([-127.1351, -180.8105, -113.6698, -161.9963, -187.4260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6951, device='cuda:0', dtype=torch.float64)
tensor([-127.9233, -181.7048, -114.2421, -163.1678, -188.8615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8201, device='cuda:0', dtype=torch.float64)
tensor([-128.8121, -182.5855, -114.8586, -164.4782, -190.4129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7632, device='cuda:0', dtype=torch.float64)
tensor([-129.7323, -183.4728, -115.4635, -165.7586, -191.9924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7203, device='cuda:0', dtype=torch.float64)
tensor([-130.6213, -184.3007, -116.0771, -166.9635, -193.4995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6997, device='cuda:0', dtype=torch.float64)
tensor([-131.7538, -185.2761, -116.7710, -168.4439, -195.3569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6665, device='cuda:0', dtype=torch.float64)
tensor([-132.7609, -186.1967, -117.4256, -169.7347, -197.0028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7159, device='cuda:0', dtype=torch.float64)
tensor([-133.5930, -187.0517, -118.0069, -170.6895, -198.3657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6878, device='cuda:0', dtype=torch.float64)
tensor([-134.2856, -187.8932, -118.5460, -171.4339, -199.6143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8633, device='cuda:0', dtype=torch.float64)
tensor([-135.0895, -188.7848, -119.1519, -172.4292, -201.0699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6585, device='cuda:0', dtype=torch.float64)
tensor([-136.0109, -189.7444, -119.7847, -173.6630, -202.7478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7258, device='cuda:0', dtype=torch.float64)
tensor([-137.0258, -190.7606, -120.5306, -175.1042, -204.6231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6728, device='cuda:0', dtype=torch.float64)
tensor([-138.0838, -191.7501, -121.3719, -176.6451, -206.6079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6645, device='cuda:0', dtype=torch.float64)
tensor([-139.0416, -192.7155, -122.2111, -178.0782, -208.5515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7222, device='cuda:0', dtype=torch.float64)
tensor([-139.8637, -193.6245, -123.0310, -179.3649, -210.3845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6082, device='cuda:0', dtype=torch.float64)
tensor([-140.6109, -194.6286, -123.8019, -180.5814, -212.2682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6844, device='cuda:0', dtype=torch.float64)
tensor([-141.2759, -195.6695, -124.6358, -181.7245, -214.1198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7750, device='cuda:0', dtype=torch.float64)
tensor([-142.0372, -196.7601, -125.5273, -183.0839, -216.1152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6410, device='cuda:0', dtype=torch.float64)
tensor([-142.8273, -197.9022, -126.5557, -184.5381, -218.2445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5950, device='cuda:0', dtype=torch.float64)
tensor([-143.6983, -199.1186, -127.6618, -185.9692, -220.3136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5620, device='cuda:0', dtype=torch.float64)
tensor([-144.4943, -200.1911, -128.7173, -187.2680, -222.1610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6721, device='cuda:0', dtype=torch.float64)
tensor([-145.3154, -201.3289, -129.7789, -188.5860, -223.9839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5169, device='cuda:0', dtype=torch.float64)
tensor([-146.1275, -202.4921, -130.8919, -189.8868, -225.7470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6216, device='cuda:0', dtype=torch.float64)
tensor([-147.1559, -203.8723, -132.1961, -191.4978, -227.7631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5856, device='cuda:0', dtype=torch.float64)
tensor([-148.1834, -205.2809, -133.6763, -193.1473, -229.7788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5129, device='cuda:0', dtype=torch.float64)
tensor([-149.1095, -206.7107, -135.0954, -194.6134, -231.6851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5715, device='cuda:0', dtype=torch.float64)
tensor([-149.9606, -208.0670, -136.5970, -196.0759, -233.5522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6201, device='cuda:0', dtype=torch.float64)
tensor([-150.7995, -209.5845, -138.1756, -197.3912, -235.4035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5212, device='cuda:0', dtype=torch.float64)
tensor([-151.6453, -211.0637, -139.7079, -198.6362, -237.1330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5456, device='cuda:0', dtype=torch.float64)
tensor([-152.4765, -212.4028, -141.3673, -199.8364, -238.7537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5005, device='cuda:0', dtype=torch.float64)
tensor([-153.3709, -213.6880, -143.0275, -201.0885, -240.3063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5413, device='cuda:0', dtype=torch.float64)
tensor([-154.1109, -214.9357, -144.6581, -202.1396, -241.7549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4326, device='cuda:0', dtype=torch.float64)
tensor([-154.8606, -216.1493, -146.2327, -203.1332, -243.0815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4868, device='cuda:0', dtype=torch.float64)
tensor([-155.4369, -217.1210, -147.6452, -203.8488, -244.1151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4133, device='cuda:0', dtype=torch.float64)
tensor([-155.9049, -217.8455, -149.0028, -204.3172, -244.9628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5262, device='cuda:0', dtype=torch.float64)
tensor([-156.6868, -218.8512, -150.4914, -205.2048, -246.1107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4660, device='cuda:0', dtype=torch.float64)
tensor([-157.4251, -219.7874, -151.9582, -205.9808, -247.2102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-158.0716, -220.6104, -153.1679, -206.5876, -248.1051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4094, device='cuda:0', dtype=torch.float64)
tensor([-158.6893, -221.3957, -154.3759, -207.1585, -248.9513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3815, device='cuda:0', dtype=torch.float64)
tensor([-159.2558, -222.2133, -155.5084, -207.7395, -249.8102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4212, device='cuda:0', dtype=torch.float64)
tensor([-159.8878, -223.0279, -156.5838, -208.3561, -250.5938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3320, device='cuda:0', dtype=torch.float64)
tensor([-160.4646, -223.6809, -157.5826, -208.8690, -251.2175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3946, device='cuda:0', dtype=torch.float64)
tensor([-161.0614, -224.3367, -158.5490, -209.4377, -251.8453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4247, device='cuda:0', dtype=torch.float64)
tensor([-161.8022, -225.1318, -159.5280, -210.1280, -252.6005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3985, device='cuda:0', dtype=torch.float64)
tensor([-162.4348, -225.6388, -160.5413, -210.6554, -253.1811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4172, device='cuda:0', dtype=torch.float64)
tensor([-163.2143, -226.2921, -161.6122, -211.4224, -253.8379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3489, device='cuda:0', dtype=torch.float64)
tensor([-163.8802, -226.8055, -162.6752, -212.0758, -254.3933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4195, device='cuda:0', dtype=torch.float64)
tensor([-164.5410, -227.3279, -163.8590, -212.7365, -254.9544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4253, device='cuda:0', dtype=torch.float64)
tensor([-165.1538, -227.7666, -165.2072, -213.3269, -255.4689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3611, device='cuda:0', dtype=torch.float64)
tensor([-165.7329, -228.2352, -166.5390, -213.9124, -255.9529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3216, device='cuda:0', dtype=torch.float64)
tensor([-166.2783, -228.6968, -167.8215, -214.3748, -256.3979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2915, device='cuda:0', dtype=torch.float64)
tensor([-166.7858, -229.0632, -169.0813, -214.8131, -256.7829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3125, device='cuda:0', dtype=torch.float64)
tensor([-167.3162, -229.6103, -170.2225, -215.2149, -257.2401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3219, device='cuda:0', dtype=torch.float64)
tensor([-167.8970, -230.1878, -171.3960, -215.5732, -257.7623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2895, device='cuda:0', dtype=torch.float64)
tensor([-168.4063, -230.6943, -172.6418, -215.7798, -258.1776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3035, device='cuda:0', dtype=torch.float64)
tensor([-168.9004, -231.2940, -173.7804, -215.9120, -258.6025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2901, device='cuda:0', dtype=torch.float64)
tensor([-169.3937, -231.8864, -174.7789, -216.0216, -258.9771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2916, device='cuda:0', dtype=torch.float64)
tensor([-169.8472, -232.5120, -175.7562, -216.0423, -259.3862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2774, device='cuda:0', dtype=torch.float64)
tensor([-170.3387, -233.1283, -176.6285, -216.0737, -259.7715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3001, device='cuda:0', dtype=torch.float64)
tensor([-170.9880, -233.8743, -177.4886, -216.1801, -260.2571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2176, device='cuda:0', dtype=torch.float64)
tensor([-171.5646, -234.5642, -178.1845, -216.1898, -260.6438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2324, device='cuda:0', dtype=torch.float64)
tensor([-172.0827, -235.0367, -178.7099, -216.0861, -260.8562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2651, device='cuda:0', dtype=torch.float64)
tensor([-172.7151, -235.6193, -179.1114, -216.0347, -261.1286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2267, device='cuda:0', dtype=torch.float64)
tensor([-173.3272, -236.1104, -179.4242, -215.9799, -261.3819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3051, device='cuda:0', dtype=torch.float64)
tensor([-173.9015, -236.5418, -179.9063, -215.9593, -261.6510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2558, device='cuda:0', dtype=torch.float64)
tensor([-174.4854, -236.9979, -180.3669, -215.8967, -261.9752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2626, device='cuda:0', dtype=torch.float64)
tensor([-174.9795, -237.3911, -180.8471, -215.7217, -262.2194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2281, device='cuda:0', dtype=torch.float64)
tensor([-175.3846, -237.6328, -181.2635, -215.5055, -262.4002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2379, device='cuda:0', dtype=torch.float64)
tensor([-175.7279, -237.9067, -181.6849, -215.2598, -262.6066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2484, device='cuda:0', dtype=torch.float64)
tensor([-176.1469, -238.2112, -182.0322, -215.0769, -262.8914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2174, device='cuda:0', dtype=torch.float64)
tensor([-176.5635, -238.5644, -182.3473, -214.8835, -263.1982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2231, device='cuda:0', dtype=torch.float64)
tensor([-177.1379, -239.1497, -182.4974, -214.8126, -263.5814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2093, device='cuda:0', dtype=torch.float64)
tensor([-177.4632, -239.3975, -182.6310, -214.5725, -263.7059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2320, device='cuda:0', dtype=torch.float64)
tensor([-177.7477, -239.5504, -182.7237, -214.3631, -263.7332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1967, device='cuda:0', dtype=torch.float64)
tensor([-177.9531, -239.5065, -182.8759, -214.1882, -263.7652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2149, device='cuda:0', dtype=torch.float64)
tensor([-178.1374, -239.3828, -183.1247, -214.0142, -263.7958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2074, device='cuda:0', dtype=torch.float64)
tensor([-178.3172, -239.2920, -183.4582, -213.8391, -263.8807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2087, device='cuda:0', dtype=torch.float64)
tensor([-178.5245, -239.1770, -183.7876, -213.7002, -264.0146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2360, device='cuda:0', dtype=torch.float64)
tensor([-178.7293, -239.0889, -184.1040, -213.5381, -264.1810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2194, device='cuda:0', dtype=torch.float64)
tensor([-178.9873, -238.9718, -184.3688, -213.4593, -264.3485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2011, device='cuda:0', dtype=torch.float64)
tensor([-179.3272, -238.9835, -184.6614, -213.4204, -264.5603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1813, device='cuda:0', dtype=torch.float64)
tensor([-179.5883, -238.9341, -184.9617, -213.3444, -264.7087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1989, device='cuda:0', dtype=torch.float64)
tensor([-179.8614, -239.0033, -185.1699, -213.2982, -264.8515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1839, device='cuda:0', dtype=torch.float64)
tensor([-180.0072, -238.9956, -185.3758, -213.1635, -264.8968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1724, device='cuda:0', dtype=torch.float64)
tensor([-180.1637, -238.9605, -185.6439, -213.0679, -264.9854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2114, device='cuda:0', dtype=torch.float64)
tensor([-180.4103, -239.0001, -185.8339, -212.9969, -265.0965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1742, device='cuda:0', dtype=torch.float64)
tensor([-180.6214, -238.9834, -186.0536, -212.8753, -265.1488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1856, device='cuda:0', dtype=torch.float64)
tensor([-180.9533, -239.1116, -186.2060, -212.8053, -265.2715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1521, device='cuda:0', dtype=torch.float64)
tensor([-181.2962, -239.3136, -186.3124, -212.7193, -265.3876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1809, device='cuda:0', dtype=torch.float64)
tensor([-181.5865, -239.4679, -186.4770, -212.6542, -265.4922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1881, device='cuda:0', dtype=torch.float64)
tensor([-181.7947, -239.4547, -186.6046, -212.5694, -265.4861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2289, device='cuda:0', dtype=torch.float64)
tensor([-181.9643, -239.4881, -186.6668, -212.3886, -265.4183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1599, device='cuda:0', dtype=torch.float64)
tensor([-182.0218, -239.3983, -186.7682, -212.1672, -265.2565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1837, device='cuda:0', dtype=torch.float64)
tensor([-182.1551, -239.3339, -186.8620, -212.0294, -265.1703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1843, device='cuda:0', dtype=torch.float64)
tensor([-182.2836, -239.2852, -186.9682, -211.8651, -265.1239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1685, device='cuda:0', dtype=torch.float64)
tensor([-182.4454, -239.3673, -187.0616, -211.7317, -265.1482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1968, device='cuda:0', dtype=torch.float64)
tensor([-182.6579, -239.5170, -187.1527, -211.6182, -265.1993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1930, device='cuda:0', dtype=torch.float64)
tensor([-182.9135, -239.6905, -187.2705, -211.6033, -265.2514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1559, device='cuda:0', dtype=torch.float64)
tensor([-183.2090, -239.8728, -187.3568, -211.6816, -265.3104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1758, device='cuda:0', dtype=torch.float64)
tensor([-183.5189, -240.1149, -187.4032, -211.7571, -265.3726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1448, device='cuda:0', dtype=torch.float64)
tensor([-183.9150, -240.4462, -187.3578, -211.8595, -265.4513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1545, device='cuda:0', dtype=torch.float64)
tensor([-184.2406, -240.6213, -187.3191, -211.9758, -265.4666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1564, device='cuda:0', dtype=torch.float64)
tensor([-184.3940, -240.5085, -187.3008, -212.0528, -265.3775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1556, device='cuda:0', dtype=torch.float64)
tensor([-184.5981, -240.5063, -187.2615, -212.1655, -265.2960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1716, device='cuda:0', dtype=torch.float64)
tensor([-184.7079, -240.3752, -187.3279, -212.2262, -265.1728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1921, device='cuda:0', dtype=torch.float64)
tensor([-184.8282, -240.3173, -187.3747, -212.2921, -265.0557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1569, device='cuda:0', dtype=torch.float64)
tensor([-184.8748, -240.2123, -187.4552, -212.2658, -264.8955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1420, device='cuda:0', dtype=torch.float64)
tensor([-184.8790, -240.0313, -187.5813, -212.2152, -264.7394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1499, device='cuda:0', dtype=torch.float64)
tensor([-184.9570, -239.9779, -187.6554, -212.1786, -264.6085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1634, device='cuda:0', dtype=torch.float64)
tensor([-184.9895, -239.9260, -187.7734, -212.1359, -264.4869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1634, device='cuda:0', dtype=torch.float64)
tensor([-185.0241, -239.9021, -187.8935, -212.1208, -264.3492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1574, device='cuda:0', dtype=torch.float64)
tensor([-185.0522, -239.8682, -188.0990, -212.0774, -264.2168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1401, device='cuda:0', dtype=torch.float64)
tensor([-185.0579, -239.7522, -188.2824, -212.0220, -264.0740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1601, device='cuda:0', dtype=torch.float64)
tensor([-185.0508, -239.5857, -188.4390, -211.9982, -263.9130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1538, device='cuda:0', dtype=torch.float64)
tensor([-184.9595, -239.3003, -188.6793, -211.9321, -263.7248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1417, device='cuda:0', dtype=torch.float64)
tensor([-184.7423, -238.9258, -188.8887, -211.8135, -263.4227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1322, device='cuda:0', dtype=torch.float64)
tensor([-184.5592, -238.5891, -189.1146, -211.6960, -263.1584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1358, device='cuda:0', dtype=torch.float64)
tensor([-184.3529, -238.2314, -189.3386, -211.5720, -262.8533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1337, device='cuda:0', dtype=torch.float64)
tensor([-184.1682, -237.8968, -189.5649, -211.4643, -262.5846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1372, device='cuda:0', dtype=torch.float64)
tensor([-183.9913, -237.5214, -189.7835, -211.3549, -262.3254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1470, device='cuda:0', dtype=torch.float64)
tensor([-183.9196, -237.2846, -189.9335, -211.2521, -262.0833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1377, device='cuda:0', dtype=torch.float64)
tensor([-183.7876, -236.9308, -190.1761, -211.1890, -261.8434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1589, device='cuda:0', dtype=torch.float64)
tensor([-183.5987, -236.5501, -190.4592, -211.0741, -261.5538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1095, device='cuda:0', dtype=torch.float64)
tensor([-183.4242, -236.1322, -190.7480, -210.9631, -261.2730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1399, device='cuda:0', dtype=torch.float64)
tensor([-183.3484, -235.8590, -190.9026, -210.8090, -260.9565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1334, device='cuda:0', dtype=torch.float64)
tensor([-183.3420, -235.6150, -191.0544, -210.7063, -260.6788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1505, device='cuda:0', dtype=torch.float64)
tensor([-183.4049, -235.5216, -191.1282, -210.5452, -260.3954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1510, device='cuda:0', dtype=torch.float64)
tensor([-183.4690, -235.4379, -191.1300, -210.3886, -260.1037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1614, device='cuda:0', dtype=torch.float64)
tensor([-183.6320, -235.4685, -191.0250, -210.2677, -259.8315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1260, device='cuda:0', dtype=torch.float64)
tensor([-183.6530, -235.3339, -190.9497, -210.1666, -259.5327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1427, device='cuda:0', dtype=torch.float64)
tensor([-183.7875, -235.2901, -190.8015, -210.1156, -259.2795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1304, device='cuda:0', dtype=torch.float64)
tensor([-184.0241, -235.3827, -190.6025, -210.0915, -259.0718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1360, device='cuda:0', dtype=torch.float64)
tensor([-184.2072, -235.4570, -190.5028, -210.0145, -258.8903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1551, device='cuda:0', dtype=torch.float64)
tensor([-184.3103, -235.4326, -190.4647, -209.9267, -258.6978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1385, device='cuda:0', dtype=torch.float64)
tensor([-184.4655, -235.4444, -190.3659, -209.8402, -258.4965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1560, device='cuda:0', dtype=torch.float64)
tensor([-184.4779, -235.2857, -190.2824, -209.7064, -258.2108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1173, device='cuda:0', dtype=torch.float64)
tensor([-184.4673, -235.0309, -190.2604, -209.6011, -257.9407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1204, device='cuda:0', dtype=torch.float64)
tensor([-184.4639, -234.7889, -190.2637, -209.4859, -257.6906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1278, device='cuda:0', dtype=torch.float64)
tensor([-184.4925, -234.5277, -190.3135, -209.3859, -257.4477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1562, device='cuda:0', dtype=torch.float64)
tensor([-184.5598, -234.2828, -190.4147, -209.3175, -257.2395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1377, device='cuda:0', dtype=torch.float64)
tensor([-184.6481, -234.1369, -190.4998, -209.3092, -257.0172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1152, device='cuda:0', dtype=torch.float64)
tensor([-184.6887, -233.8951, -190.6212, -209.3319, -256.8098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1496, device='cuda:0', dtype=torch.float64)
tensor([-184.7006, -233.5714, -190.7576, -209.3902, -256.6078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1425, device='cuda:0', dtype=torch.float64)
tensor([-184.6428, -233.2385, -190.9533, -209.4242, -256.3965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1456, device='cuda:0', dtype=torch.float64)
tensor([-184.7101, -233.1194, -191.0984, -209.4379, -256.1882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1198, device='cuda:0', dtype=torch.float64)
tensor([-184.8539, -233.0921, -191.1794, -209.4541, -255.9642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1247, device='cuda:0', dtype=torch.float64)
tensor([-185.0770, -233.1778, -191.1790, -209.4570, -255.7541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1063, device='cuda:0', dtype=torch.float64)
tensor([-185.1964, -233.1013, -191.2379, -209.4719, -255.5302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1217, device='cuda:0', dtype=torch.float64)
tensor([-185.4043, -233.1026, -191.2399, -209.5425, -255.3101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1227, device='cuda:0', dtype=torch.float64)
tensor([-185.5599, -233.0682, -191.2591, -209.5578, -255.0750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1104, device='cuda:0', dtype=torch.float64)
tensor([-185.7429, -233.1030, -191.2116, -209.5308, -254.8212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1289, device='cuda:0', dtype=torch.float64)
tensor([-185.9151, -233.1090, -191.1680, -209.5253, -254.5596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1149, device='cuda:0', dtype=torch.float64)
tensor([-186.0187, -233.0181, -191.1633, -209.5194, -254.3149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1275, device='cuda:0', dtype=torch.float64)
tensor([-186.1124, -232.9210, -191.1621, -209.4558, -254.0848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1081, device='cuda:0', dtype=torch.float64)
tensor([-186.2073, -232.8613, -191.1639, -209.3668, -253.8525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1149, device='cuda:0', dtype=torch.float64)
tensor([-186.2756, -232.7852, -191.2058, -209.2768, -253.6377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1439, device='cuda:0', dtype=torch.float64)
tensor([-186.2843, -232.5955, -191.2566, -209.2376, -253.4131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1205, device='cuda:0', dtype=torch.float64)
tensor([-186.4153, -232.5441, -191.2768, -209.2604, -253.2161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1290, device='cuda:0', dtype=torch.float64)
tensor([-186.5351, -232.5038, -191.3456, -209.3004, -253.0254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1209, device='cuda:0', dtype=torch.float64)
tensor([-186.5503, -232.3797, -191.4297, -209.3336, -252.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1119, device='cuda:0', dtype=torch.float64)
tensor([-186.5425, -232.2359, -191.5133, -209.3429, -252.6004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1136, device='cuda:0', dtype=torch.float64)
tensor([-186.5712, -232.1701, -191.5818, -209.3751, -252.4101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1333, device='cuda:0', dtype=torch.float64)
tensor([-186.6753, -232.1646, -191.6248, -209.4361, -252.2272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1148, device='cuda:0', dtype=torch.float64)
tensor([-186.8054, -232.1748, -191.6963, -209.5414, -252.0689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1033, device='cuda:0', dtype=torch.float64)
tensor([-186.8546, -232.1467, -191.7636, -209.6023, -251.8404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1120, device='cuda:0', dtype=torch.float64)
tensor([-186.8848, -232.0863, -191.7965, -209.6867, -251.5928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0819, device='cuda:0', dtype=torch.float64)
tensor([-186.8838, -231.9844, -191.8363, -209.7797, -251.3450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1229, device='cuda:0', dtype=torch.float64)
tensor([-186.7170, -231.6896, -191.9466, -209.8679, -251.0659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0966, device='cuda:0', dtype=torch.float64)
tensor([-186.5309, -231.3632, -192.0848, -209.9546, -250.8018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1225, device='cuda:0', dtype=torch.float64)
tensor([-186.3957, -231.1304, -192.1470, -210.0076, -250.4959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0970, device='cuda:0', dtype=torch.float64)
tensor([-186.2756, -230.9539, -192.1896, -210.0156, -250.1967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1166, device='cuda:0', dtype=torch.float64)
tensor([-186.1483, -230.7632, -192.2340, -210.0081, -249.9356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1034, device='cuda:0', dtype=torch.float64)
tensor([-186.1585, -230.7458, -192.1987, -209.9782, -249.6744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0884, device='cuda:0', dtype=torch.float64)
tensor([-186.0736, -230.5788, -192.2286, -209.9989, -249.4387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1106, device='cuda:0', dtype=torch.float64)
tensor([-185.9185, -230.2629, -192.3338, -210.0484, -249.2042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0977, device='cuda:0', dtype=torch.float64)
tensor([-185.7918, -229.9987, -192.4179, -210.0459, -249.0107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1029, device='cuda:0', dtype=torch.float64)
tensor([-185.7219, -229.7808, -192.4948, -210.0413, -248.8765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0945, device='cuda:0', dtype=torch.float64)
tensor([-185.6904, -229.6221, -192.5669, -210.0556, -248.7607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1403, device='cuda:0', dtype=torch.float64)
tensor([-185.7486, -229.5352, -192.6574, -210.0438, -248.6606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1027, device='cuda:0', dtype=torch.float64)
tensor([-185.7555, -229.3378, -192.7716, -210.1077, -248.5262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1038, device='cuda:0', dtype=torch.float64)
tensor([-185.7257, -229.1259, -192.9176, -210.1619, -248.3970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0846, device='cuda:0', dtype=torch.float64)
tensor([-185.7133, -228.9153, -193.0535, -210.2232, -248.2717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1154, device='cuda:0', dtype=torch.float64)
tensor([-185.6058, -228.6140, -193.2509, -210.2752, -248.0645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0862, device='cuda:0', dtype=torch.float64)
tensor([-185.5158, -228.3656, -193.4242, -210.3114, -247.8463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1240, device='cuda:0', dtype=torch.float64)
tensor([-185.5023, -228.2397, -193.5485, -210.3290, -247.6609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0966, device='cuda:0', dtype=torch.float64)
tensor([-185.4889, -228.1142, -193.6377, -210.3294, -247.4391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1023, device='cuda:0', dtype=torch.float64)
tensor([-185.5072, -228.0464, -193.7155, -210.3370, -247.2203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1116, device='cuda:0', dtype=torch.float64)
tensor([-185.5274, -227.9630, -193.8050, -210.3654, -247.0305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0993, device='cuda:0', dtype=torch.float64)
tensor([-185.4827, -227.8168, -193.8655, -210.4036, -246.8270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1080, device='cuda:0', dtype=torch.float64)
tensor([-185.3773, -227.5943, -193.9643, -210.4312, -246.6375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0995, device='cuda:0', dtype=torch.float64)
tensor([-185.2152, -227.2514, -194.1273, -210.4794, -246.4061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0957, device='cuda:0', dtype=torch.float64)
tensor([-185.0778, -226.9299, -194.2793, -210.5352, -246.1865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1230, device='cuda:0', dtype=torch.float64)
tensor([-185.0351, -226.7414, -194.3379, -210.5815, -245.9498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0949, device='cuda:0', dtype=torch.float64)
tensor([-184.9489, -226.5124, -194.4156, -210.6289, -245.7092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0949, device='cuda:0', dtype=torch.float64)
tensor([-185.0461, -226.5399, -194.4036, -210.6387, -245.5331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0986, device='cuda:0', dtype=torch.float64)
tensor([-185.0549, -226.4645, -194.4172, -210.6789, -245.3247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0914, device='cuda:0', dtype=torch.float64)
tensor([-185.0825, -226.4154, -194.4507, -210.7227, -245.1325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0931, device='cuda:0', dtype=torch.float64)
tensor([-185.2547, -226.5441, -194.3745, -210.7848, -245.0153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1034, device='cuda:0', dtype=torch.float64)
tensor([-185.3861, -226.6018, -194.3383, -210.8599, -244.8999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1059, device='cuda:0', dtype=torch.float64)
tensor([-185.4836, -226.6085, -194.3740, -211.0134, -244.8029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1024, device='cuda:0', dtype=torch.float64)
tensor([-185.5730, -226.5893, -194.4187, -211.1192, -244.7072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0844, device='cuda:0', dtype=torch.float64)
tensor([-185.6650, -226.6157, -194.4532, -211.1779, -244.6120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0893, device='cuda:0', dtype=torch.float64)
tensor([-185.7765, -226.6859, -194.4435, -211.2188, -244.5089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1002, device='cuda:0', dtype=torch.float64)
tensor([-185.8028, -226.6928, -194.5011, -211.1949, -244.3768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1071, device='cuda:0', dtype=torch.float64)
tensor([-185.8776, -226.7682, -194.4968, -211.1518, -244.2369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0829, device='cuda:0', dtype=torch.float64)
tensor([-186.0000, -226.8903, -194.4741, -211.1183, -244.0927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0902, device='cuda:0', dtype=torch.float64)
tensor([-185.9741, -226.8107, -194.5366, -211.1145, -243.9181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0988, device='cuda:0', dtype=torch.float64)
tensor([-185.9414, -226.6998, -194.6109, -211.1102, -243.7347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0904, device='cuda:0', dtype=torch.float64)
tensor([-185.8636, -226.5002, -194.7034, -211.1243, -243.5585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0937, device='cuda:0', dtype=torch.float64)
tensor([-185.7794, -226.3113, -194.7974, -211.0953, -243.3883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0930, device='cuda:0', dtype=torch.float64)
tensor([-185.6214, -225.9896, -194.8960, -211.1207, -243.2203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0774, device='cuda:0', dtype=torch.float64)
tensor([-185.4903, -225.6604, -195.0028, -211.1863, -243.0599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0980, device='cuda:0', dtype=torch.float64)
tensor([-185.3089, -225.2668, -195.1472, -211.2569, -242.8987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1133, device='cuda:0', dtype=torch.float64)
tensor([-185.0879, -224.8426, -195.3288, -211.3242, -242.7420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0812, device='cuda:0', dtype=torch.float64)
tensor([-184.9086, -224.4996, -195.4918, -211.3667, -242.5770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0710, device='cuda:0', dtype=torch.float64)
tensor([-184.7976, -224.2293, -195.5969, -211.4149, -242.3776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1039, device='cuda:0', dtype=torch.float64)
tensor([-184.6816, -224.0001, -195.7288, -211.4479, -242.2299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0795, device='cuda:0', dtype=torch.float64)
tensor([-184.5816, -223.7644, -195.8464, -211.4221, -242.0728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0666, device='cuda:0', dtype=torch.float64)
tensor([-184.5018, -223.5702, -195.9518, -211.4128, -241.9434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0839, device='cuda:0', dtype=torch.float64)
tensor([-184.4638, -223.4735, -196.0670, -211.3410, -241.8492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0779, device='cuda:0', dtype=torch.float64)
tensor([-184.4357, -223.4207, -196.1055, -211.2678, -241.7128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0716, device='cuda:0', dtype=torch.float64)
tensor([-184.4086, -223.3896, -196.1633, -211.1746, -241.5991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0843, device='cuda:0', dtype=torch.float64)
tensor([-184.3964, -223.3496, -196.2284, -211.1182, -241.4966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0753, device='cuda:0', dtype=torch.float64)
tensor([-184.3774, -223.2736, -196.3170, -211.0823, -241.4165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0856, device='cuda:0', dtype=torch.float64)
tensor([-184.4214, -223.2752, -196.3116, -211.0522, -241.2884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0882, device='cuda:0', dtype=torch.float64)
tensor([-184.4967, -223.3423, -196.3006, -211.0442, -241.1857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-184.5916, -223.4278, -196.2718, -211.0506, -241.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0975, device='cuda:0', dtype=torch.float64)
tensor([-184.7224, -223.5144, -196.2577, -211.0796, -241.0375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0939, device='cuda:0', dtype=torch.float64)
tensor([-184.7798, -223.4805, -196.2898, -211.1475, -240.9686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0898, device='cuda:0', dtype=torch.float64)
tensor([-184.8645, -223.4902, -196.3384, -211.2058, -240.9539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-184.9183, -223.4465, -196.3749, -211.2651, -240.9243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0764, device='cuda:0', dtype=torch.float64)
tensor([-184.9625, -223.4086, -196.3902, -211.3122, -240.8776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-184.9824, -223.3414, -196.4130, -211.3394, -240.8373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0771, device='cuda:0', dtype=torch.float64)
tensor([-185.0468, -223.3695, -196.3749, -211.2834, -240.7805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0943, device='cuda:0', dtype=torch.float64)
tensor([-185.0212, -223.1984, -196.4122, -211.3289, -240.7266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-185.0249, -223.1000, -196.4150, -211.3408, -240.6740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0754, device='cuda:0', dtype=torch.float64)
tensor([-185.0595, -223.0302, -196.3853, -211.3429, -240.6147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0768, device='cuda:0', dtype=torch.float64)
tensor([-185.0613, -222.9388, -196.3763, -211.3511, -240.5381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1005, device='cuda:0', dtype=torch.float64)
tensor([-185.0933, -222.8633, -196.3531, -211.3902, -240.4548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0727, device='cuda:0', dtype=torch.float64)
tensor([-185.1485, -222.7812, -196.3107, -211.4286, -240.3403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0889, device='cuda:0', dtype=torch.float64)
tensor([-185.2199, -222.7494, -196.2281, -211.4336, -240.1917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0775, device='cuda:0', dtype=torch.float64)
tensor([-185.3220, -222.8308, -196.0856, -211.4075, -239.9606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1042, device='cuda:0', dtype=torch.float64)
tensor([-185.4273, -222.9652, -195.9727, -211.3528, -239.7281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0779, device='cuda:0', dtype=torch.float64)
tensor([-185.5431, -223.0613, -195.8988, -211.3469, -239.5505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0991, device='cuda:0', dtype=torch.float64)
tensor([-185.6261, -223.0998, -195.8571, -211.3424, -239.3476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0828, device='cuda:0', dtype=torch.float64)
tensor([-185.6171, -223.0358, -195.8926, -211.3451, -239.1615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0801, device='cuda:0', dtype=torch.float64)
tensor([-185.5480, -222.9426, -195.9904, -211.2985, -238.9719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0932, device='cuda:0', dtype=torch.float64)
tensor([-185.4953, -222.8555, -196.0786, -211.2633, -238.7829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-185.3865, -222.7215, -196.1817, -211.2084, -238.5670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0793, device='cuda:0', dtype=torch.float64)
tensor([-185.2029, -222.4867, -196.3222, -211.1721, -238.3431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-185.0146, -222.2271, -196.4407, -211.1451, -238.1275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0777, device='cuda:0', dtype=torch.float64)
tensor([-184.8369, -221.9918, -196.5195, -211.1411, -237.9060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0897, device='cuda:0', dtype=torch.float64)
tensor([-184.6459, -221.7416, -196.6409, -211.1390, -237.6858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0796, device='cuda:0', dtype=torch.float64)
tensor([-184.4351, -221.4567, -196.8070, -211.1133, -237.4884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1005, device='cuda:0', dtype=torch.float64)
tensor([-184.3167, -221.3244, -196.9127, -211.0659, -237.2970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0831, device='cuda:0', dtype=torch.float64)
tensor([-184.1905, -221.1617, -197.0031, -211.0524, -237.0675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0759, device='cuda:0', dtype=torch.float64)
tensor([-184.0364, -220.9772, -197.1591, -211.0522, -236.8344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0668, device='cuda:0', dtype=torch.float64)
tensor([-183.8926, -220.7881, -197.3153, -211.0467, -236.6209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0741, device='cuda:0', dtype=torch.float64)
tensor([-183.7318, -220.5470, -197.5135, -211.0925, -236.4328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0737, device='cuda:0', dtype=torch.float64)
tensor([-183.6196, -220.3675, -197.6914, -211.1297, -236.2632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0733, device='cuda:0', dtype=torch.float64)
tensor([-183.5543, -220.2948, -197.8147, -211.1069, -236.1109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0855, device='cuda:0', dtype=torch.float64)
tensor([-183.5891, -220.3262, -197.8576, -211.1161, -235.9545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-183.6570, -220.4046, -197.8634, -211.1229, -235.8128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0741, device='cuda:0', dtype=torch.float64)
tensor([-183.7441, -220.5055, -197.8522, -211.1231, -235.6800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-183.8606, -220.6323, -197.8296, -211.1160, -235.5660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-183.9453, -220.7010, -197.8266, -211.1159, -235.4408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0776, device='cuda:0', dtype=torch.float64)
tensor([-184.0809, -220.8611, -197.7678, -211.0900, -235.3127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0805, device='cuda:0', dtype=torch.float64)
tensor([-184.2253, -221.0382, -197.7031, -211.0814, -235.1651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-184.3440, -221.1807, -197.6709, -211.0546, -234.9994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0745, device='cuda:0', dtype=torch.float64)
tensor([-184.4688, -221.3549, -197.6296, -211.0211, -234.8423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0670, device='cuda:0', dtype=torch.float64)
tensor([-184.5346, -221.4506, -197.6116, -210.9871, -234.6780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0792, device='cuda:0', dtype=torch.float64)
tensor([-184.5821, -221.5190, -197.6019, -210.9710, -234.5006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0720, device='cuda:0', dtype=torch.float64)
tensor([-184.6130, -221.6024, -197.6113, -210.9583, -234.3270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0796, device='cuda:0', dtype=torch.float64)
tensor([-184.6272, -221.6656, -197.6304, -210.9209, -234.1347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0694, device='cuda:0', dtype=torch.float64)
tensor([-184.5727, -221.6284, -197.6812, -210.8933, -233.9280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1113, device='cuda:0', dtype=torch.float64)
tensor([-184.6864, -221.7997, -197.6732, -210.8453, -233.7944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-184.7793, -221.9486, -197.6775, -210.7700, -233.6593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0814, device='cuda:0', dtype=torch.float64)
tensor([-184.7105, -221.8464, -197.7607, -210.7631, -233.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0873, device='cuda:0', dtype=torch.float64)
tensor([-184.7141, -221.8429, -197.8030, -210.7431, -233.2868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0744, device='cuda:0', dtype=torch.float64)
tensor([-184.6576, -221.7329, -197.8518, -210.7959, -233.0826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-184.5270, -221.5316, -197.9296, -210.8463, -232.8708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0869, device='cuda:0', dtype=torch.float64)
tensor([-184.4532, -221.4231, -197.9593, -210.8909, -232.6457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-184.3670, -221.2699, -198.0005, -210.9279, -232.4374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0707, device='cuda:0', dtype=torch.float64)
tensor([-184.2519, -221.0304, -198.0629, -210.9787, -232.2496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-184.1183, -220.7238, -198.1574, -211.0576, -232.1030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0602, device='cuda:0', dtype=torch.float64)
tensor([-184.0468, -220.5289, -198.2154, -211.1183, -231.9603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-183.9396, -220.2451, -198.3130, -211.1853, -231.8431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0582, device='cuda:0', dtype=torch.float64)
tensor([-183.8634, -220.0015, -198.3837, -211.2465, -231.7455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-183.7423, -219.6896, -198.4860, -211.3314, -231.6619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0698, device='cuda:0', dtype=torch.float64)
tensor([-183.5892, -219.3039, -198.6145, -211.3780, -231.5768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0663, device='cuda:0', dtype=torch.float64)
tensor([-183.4314, -218.9298, -198.7486, -211.4196, -231.4648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0724, device='cuda:0', dtype=torch.float64)
tensor([-183.3030, -218.5886, -198.8760, -211.4635, -231.3501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0759, device='cuda:0', dtype=torch.float64)
tensor([-183.1980, -218.2821, -198.9997, -211.4846, -231.2277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0708, device='cuda:0', dtype=torch.float64)
tensor([-183.0946, -217.9800, -199.1409, -211.4902, -231.1043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-182.9888, -217.6934, -199.2838, -211.4595, -230.9800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0636, device='cuda:0', dtype=torch.float64)
tensor([-182.9763, -217.5385, -199.3545, -211.4112, -230.8871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-182.9986, -217.4688, -199.3721, -211.2915, -230.7693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-183.0407, -217.4221, -199.3786, -211.1932, -230.6326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0713, device='cuda:0', dtype=torch.float64)
tensor([-183.0250, -217.3082, -199.4231, -211.1080, -230.4893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0691, device='cuda:0', dtype=torch.float64)
tensor([-183.0681, -217.3015, -199.4481, -210.9926, -230.3756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0585, device='cuda:0', dtype=torch.float64)
tensor([-183.0851, -217.2568, -199.4724, -210.8942, -230.2687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0791, device='cuda:0', dtype=torch.float64)
tensor([-183.0765, -217.1818, -199.4963, -210.8559, -230.1451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-183.0340, -217.0730, -199.5577, -210.8279, -230.0311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-182.9775, -216.9201, -199.6318, -210.8286, -229.9539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-182.8615, -216.7225, -199.7478, -210.8446, -229.8497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0572, device='cuda:0', dtype=torch.float64)
tensor([-182.7920, -216.5865, -199.8247, -210.8149, -229.7565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0670, device='cuda:0', dtype=torch.float64)
tensor([-182.7730, -216.5321, -199.8614, -210.7283, -229.6766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0749, device='cuda:0', dtype=torch.float64)
tensor([-182.7940, -216.5560, -199.8416, -210.6121, -229.5563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-182.7094, -216.4436, -199.8801, -210.5427, -229.4064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0660, device='cuda:0', dtype=torch.float64)
tensor([-182.6234, -216.3315, -199.9126, -210.5241, -229.2230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-182.5869, -216.2742, -199.9218, -210.5359, -229.0973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-182.5467, -216.2204, -199.9357, -210.5723, -228.9751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0594, device='cuda:0', dtype=torch.float64)
tensor([-182.5200, -216.1940, -199.9500, -210.6083, -228.8825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-182.5116, -216.2295, -199.9316, -210.5508, -228.7672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0715, device='cuda:0', dtype=torch.float64)
tensor([-182.5162, -216.2781, -199.9062, -210.5329, -228.6416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0523, device='cuda:0', dtype=torch.float64)
tensor([-182.5324, -216.3101, -199.8655, -210.5667, -228.4902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-182.5899, -216.4012, -199.8211, -210.5813, -228.3241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0636, device='cuda:0', dtype=torch.float64)
tensor([-182.5837, -216.4319, -199.8089, -210.5723, -228.1504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-182.5963, -216.4716, -199.7991, -210.5917, -227.9991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0678, device='cuda:0', dtype=torch.float64)
tensor([-182.6190, -216.5197, -199.8012, -210.5893, -227.8738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0603, device='cuda:0', dtype=torch.float64)
tensor([-182.6784, -216.5936, -199.7854, -210.6313, -227.7708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-182.7674, -216.6755, -199.7634, -210.6866, -227.6775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-182.8387, -216.7325, -199.7255, -210.7695, -227.5750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-182.8908, -216.7657, -199.6860, -210.8274, -227.4761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0733, device='cuda:0', dtype=torch.float64)
tensor([-182.8515, -216.6834, -199.6958, -210.8660, -227.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-182.8283, -216.6203, -199.7108, -210.8984, -227.2653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0626, device='cuda:0', dtype=torch.float64)
tensor([-182.7369, -216.4683, -199.7369, -210.9179, -227.1639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-182.6991, -216.3933, -199.7316, -210.8794, -227.0677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-182.6200, -216.2478, -199.7487, -210.8669, -226.9952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-182.5160, -216.1279, -199.7746, -210.7887, -226.9050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-182.4842, -216.0826, -199.7778, -210.6728, -226.8483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-182.3841, -215.9235, -199.8134, -210.6354, -226.7681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-182.3126, -215.8321, -199.8384, -210.6013, -226.6643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-182.1880, -215.6551, -199.8731, -210.6318, -226.5630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-182.0080, -215.4028, -199.9490, -210.6875, -226.4667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0703, device='cuda:0', dtype=torch.float64)
tensor([-181.8324, -215.1494, -200.0290, -210.7648, -226.3655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0696, device='cuda:0', dtype=torch.float64)
tensor([-181.6897, -214.9558, -200.1041, -210.7806, -226.2499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0589, device='cuda:0', dtype=torch.float64)
tensor([-181.5821, -214.7970, -200.1712, -210.7829, -226.1398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0799, device='cuda:0', dtype=torch.float64)
tensor([-181.3946, -214.5298, -200.2906, -210.8312, -226.0487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-181.2138, -214.2870, -200.3989, -210.8792, -225.9456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-181.0605, -214.0633, -200.4914, -210.9300, -225.8737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-180.9200, -213.8419, -200.5648, -210.9993, -225.7586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-180.7300, -213.5532, -200.6981, -211.0840, -225.6489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0641, device='cuda:0', dtype=torch.float64)
tensor([-180.5875, -213.3277, -200.8000, -211.2007, -225.5409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-180.4813, -213.1631, -200.8756, -211.2759, -225.4232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-180.3876, -213.0223, -200.9400, -211.3154, -225.3121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-180.3842, -212.9768, -200.9408, -211.3414, -225.2280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0887, device='cuda:0', dtype=torch.float64)
tensor([-180.4345, -212.9908, -200.9069, -211.3633, -225.1477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0607, device='cuda:0', dtype=torch.float64)
tensor([-180.6196, -213.1530, -200.7798, -211.3703, -225.1026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0866, device='cuda:0', dtype=torch.float64)
tensor([-180.8284, -213.3693, -200.6621, -211.3366, -225.0464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-181.0726, -213.6810, -200.4765, -211.2801, -224.9526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0679, device='cuda:0', dtype=torch.float64)
tensor([-181.3307, -214.0096, -200.3128, -211.2678, -224.8652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0744, device='cuda:0', dtype=torch.float64)
tensor([-181.5462, -214.2483, -200.1775, -211.3078, -224.7704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-181.7557, -214.4579, -200.0580, -211.3670, -224.6808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0524, device='cuda:0', dtype=torch.float64)
tensor([-181.9827, -214.6913, -199.9413, -211.3702, -224.6125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-182.1716, -214.8766, -199.8539, -211.3962, -224.5450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-182.3581, -215.0560, -199.7604, -211.4327, -224.5020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0537, device='cuda:0', dtype=torch.float64)
tensor([-182.5162, -215.2356, -199.6768, -211.4235, -224.4305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-182.6297, -215.3755, -199.6245, -211.4011, -224.3542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-182.7218, -215.4498, -199.5942, -211.3616, -224.2978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0660, device='cuda:0', dtype=torch.float64)
tensor([-182.7580, -215.4669, -199.6042, -211.3148, -224.2463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-182.7071, -215.3884, -199.6595, -211.2193, -224.1949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-182.6274, -215.2821, -199.7166, -211.1303, -224.1572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0941, device='cuda:0', dtype=torch.float64)
tensor([-182.5265, -215.1057, -199.7871, -211.1062, -224.1131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-182.4654, -214.9722, -199.8185, -211.0768, -224.0461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0523, device='cuda:0', dtype=torch.float64)
tensor([-182.4442, -214.8924, -199.8303, -211.0518, -223.9764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0654, device='cuda:0', dtype=torch.float64)
tensor([-182.4053, -214.7782, -199.8717, -211.0343, -223.8998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-182.3406, -214.6320, -199.9222, -211.0025, -223.8014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-182.2591, -214.4757, -199.9787, -210.9345, -223.6849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0613, device='cuda:0', dtype=torch.float64)
tensor([-182.0363, -214.1421, -200.1109, -210.9123, -223.5633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-181.8095, -213.7802, -200.2424, -210.9418, -223.4640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0853, device='cuda:0', dtype=torch.float64)
tensor([-181.5483, -213.3949, -200.3997, -210.9541, -223.3277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-181.3783, -213.1253, -200.5081, -210.9231, -223.1954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-181.2273, -212.8853, -200.6203, -210.8639, -223.0676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-181.0422, -212.5790, -200.7656, -210.8345, -222.9640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-180.8932, -212.3194, -200.8878, -210.7534, -222.8720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-180.8003, -212.1265, -200.9845, -210.6328, -222.7743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-180.7638, -212.0040, -201.0525, -210.5002, -222.7181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1084, device='cuda:0', dtype=torch.float64)
tensor([-180.7085, -211.8763, -201.1188, -210.3736, -222.6429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-180.6517, -211.7486, -201.1857, -210.2618, -222.5657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-180.6103, -211.6351, -201.2411, -210.1434, -222.4940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-180.6488, -211.6280, -201.2349, -210.0067, -222.4295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-180.7048, -211.6582, -201.2271, -209.8618, -222.3802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0759, device='cuda:0', dtype=torch.float64)
tensor([-180.8351, -211.7887, -201.1529, -209.7346, -222.3362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0696, device='cuda:0', dtype=torch.float64)
tensor([-180.9281, -211.9163, -201.1079, -209.5970, -222.2495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-180.9400, -211.9427, -201.0979, -209.4739, -222.1553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-180.9594, -211.9961, -201.0714, -209.3255, -222.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-180.9317, -211.9927, -201.0761, -209.2113, -221.9125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-180.9052, -211.9697, -201.0910, -209.1262, -221.8113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0636, device='cuda:0', dtype=torch.float64)
tensor([-180.8651, -211.8849, -201.1384, -209.0594, -221.7204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-180.8345, -211.8270, -201.1713, -209.0171, -221.6099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-180.7788, -211.7491, -201.2407, -208.9809, -221.4752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-180.7676, -211.7330, -201.2843, -208.9448, -221.3222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-180.7678, -211.7258, -201.3113, -208.9637, -221.1679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0557, device='cuda:0', dtype=torch.float64)
tensor([-180.7727, -211.7256, -201.3226, -208.9993, -220.9905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-180.8046, -211.7341, -201.3395, -209.0463, -220.8536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-180.8595, -211.7686, -201.3326, -209.0910, -220.7229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-180.9366, -211.7646, -201.3156, -209.1516, -220.6138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-180.9160, -211.6534, -201.3386, -209.2283, -220.4974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-180.8492, -211.4579, -201.4025, -209.3482, -220.4379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0535, device='cuda:0', dtype=torch.float64)
tensor([-180.7376, -211.2382, -201.4911, -209.4544, -220.3624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0575, device='cuda:0', dtype=torch.float64)
tensor([-180.6430, -211.0787, -201.5578, -209.5560, -220.2595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-180.4609, -210.8238, -201.6836, -209.6725, -220.1481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0624, device='cuda:0', dtype=torch.float64)
tensor([-180.3244, -210.6102, -201.7768, -209.7709, -220.0584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-180.2609, -210.5314, -201.8206, -209.8050, -219.9574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-180.2516, -210.5224, -201.8343, -209.8044, -219.8720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-180.2789, -210.5437, -201.8051, -209.7582, -219.7953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0850, device='cuda:0', dtype=torch.float64)
tensor([-180.2842, -210.5232, -201.8073, -209.7014, -219.7307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-180.2693, -210.4884, -201.8099, -209.6245, -219.6570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-180.2830, -210.4907, -201.7741, -209.5166, -219.5670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0605, device='cuda:0', dtype=torch.float64)
tensor([-180.2827, -210.4457, -201.7703, -209.4253, -219.4989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-180.3107, -210.4305, -201.7668, -209.3487, -219.4465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-180.3295, -210.4098, -201.7395, -209.2638, -219.3913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-180.2369, -210.2433, -201.7702, -209.2938, -219.3189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0603, device='cuda:0', dtype=torch.float64)
tensor([-180.1282, -210.0584, -201.8079, -209.3364, -219.2361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0567, device='cuda:0', dtype=torch.float64)
tensor([-180.0309, -209.8883, -201.8446, -209.4077, -219.1707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-179.9549, -209.7128, -201.8957, -209.4261, -219.1259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-179.8921, -209.5695, -201.9433, -209.4600, -219.0498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0449, device='cuda:0', dtype=torch.float64)
tensor([-179.8693, -209.4914, -201.9617, -209.4751, -218.9844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0654, device='cuda:0', dtype=torch.float64)
tensor([-179.8637, -209.4277, -201.9803, -209.4800, -218.9106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0570, device='cuda:0', dtype=torch.float64)
tensor([-179.8476, -209.3317, -202.0221, -209.5444, -218.8341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-179.8183, -209.2191, -202.0778, -209.6694, -218.7310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-179.7530, -209.0758, -202.1472, -209.7754, -218.6234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0676, device='cuda:0', dtype=torch.float64)
tensor([-179.7800, -209.0238, -202.1560, -209.8726, -218.5455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-179.8165, -208.9787, -202.1557, -209.9597, -218.4977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-179.8933, -209.0167, -202.1075, -209.9824, -218.4474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-179.9674, -209.0534, -202.0611, -209.9959, -218.3842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-180.0324, -209.0681, -202.0221, -209.9960, -218.3392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-180.0846, -209.0650, -201.9817, -209.9668, -218.2732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-180.1596, -209.0851, -201.9233, -209.9237, -218.1961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-180.2355, -209.1101, -201.8649, -209.9210, -218.1266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-180.3322, -209.1661, -201.7733, -209.8600, -218.0539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-180.4209, -209.2040, -201.6948, -209.7955, -218.0030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-180.4974, -209.2046, -201.6386, -209.7406, -217.9525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-180.5732, -209.2012, -201.5882, -209.7319, -217.9098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-180.6312, -209.1885, -201.5578, -209.7390, -217.8782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-180.7273, -209.2329, -201.5072, -209.7452, -217.8462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-180.8734, -209.3414, -201.4169, -209.7504, -217.8238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-180.9747, -209.3817, -201.3622, -209.7951, -217.8065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-181.1363, -209.4784, -201.2701, -209.8279, -217.7961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-181.2821, -209.5405, -201.1885, -209.8684, -217.7823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-181.3045, -209.4745, -201.1838, -209.9051, -217.7402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-181.3448, -209.4006, -201.1920, -209.9296, -217.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-181.3085, -209.2277, -201.2595, -209.9847, -217.6906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-181.2362, -209.0601, -201.3462, -210.0036, -217.6504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-181.2368, -208.9537, -201.4030, -210.0161, -217.6228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-181.1774, -208.7751, -201.4980, -210.1122, -217.5687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0647, device='cuda:0', dtype=torch.float64)
tensor([-181.0092, -208.4939, -201.6765, -210.2239, -217.5066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-180.8471, -208.2217, -201.8585, -210.3581, -217.4288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0747, device='cuda:0', dtype=torch.float64)
tensor([-180.7602, -208.0335, -201.9898, -210.5100, -217.3428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0654, device='cuda:0', dtype=torch.float64)
tensor([-180.6469, -207.8213, -202.1507, -210.6672, -217.2318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0508, device='cuda:0', dtype=torch.float64)
tensor([-180.6044, -207.6962, -202.2685, -210.7673, -217.1643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-180.6197, -207.6451, -202.3317, -210.8539, -217.1006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0646, device='cuda:0', dtype=torch.float64)
tensor([-180.6537, -207.6371, -202.3687, -210.9435, -217.0268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-180.7014, -207.6682, -202.3921, -211.0324, -216.9340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-180.7309, -207.6698, -202.4341, -211.0817, -216.8718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-180.7489, -207.6523, -202.4754, -211.0724, -216.8365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-180.7549, -207.6358, -202.5327, -211.0298, -216.8181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0677, device='cuda:0', dtype=torch.float64)
tensor([-180.7476, -207.6263, -202.5561, -210.8696, -216.7564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0555, device='cuda:0', dtype=torch.float64)
tensor([-180.8181, -207.6981, -202.4997, -210.7328, -216.6799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-180.9027, -207.7907, -202.4290, -210.5817, -216.6046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-181.0108, -207.9121, -202.3493, -210.4048, -216.5449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-181.1920, -208.1068, -202.2316, -210.2305, -216.5006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0660, device='cuda:0', dtype=torch.float64)
tensor([-181.4339, -208.3756, -202.0889, -210.0150, -216.4711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-181.5886, -208.5376, -202.0041, -209.8047, -216.4388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-181.6937, -208.6322, -201.9636, -209.6372, -216.4006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-181.8242, -208.7579, -201.9177, -209.4409, -216.3864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0538, device='cuda:0', dtype=torch.float64)
tensor([-181.9680, -208.8469, -201.8630, -209.2728, -216.3832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0514, device='cuda:0', dtype=torch.float64)
tensor([-182.0829, -208.8724, -201.8202, -209.1540, -216.3868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-182.1734, -208.9223, -201.7780, -208.9896, -216.3365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-182.2190, -208.9006, -201.7526, -208.8848, -216.2954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-182.2105, -208.8232, -201.7359, -208.8500, -216.2468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-182.1432, -208.6611, -201.7473, -208.8521, -216.1947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-182.0524, -208.4552, -201.7790, -208.8832, -216.1054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-181.9310, -208.1943, -201.8406, -208.9370, -216.0340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0619, device='cuda:0', dtype=torch.float64)
tensor([-181.7811, -207.9091, -201.9221, -208.9981, -215.9402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-181.6776, -207.6869, -201.9967, -209.0577, -215.8583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-181.5059, -207.3856, -202.1233, -209.1489, -215.7659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-181.2956, -207.0792, -202.2648, -209.2341, -215.6293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-181.1391, -206.8852, -202.3686, -209.3125, -215.4916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-181.0283, -206.7341, -202.4474, -209.3732, -215.3679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-180.9354, -206.6167, -202.5088, -209.3865, -215.2532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-180.8217, -206.4881, -202.5953, -209.3725, -215.1520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-180.6978, -206.3629, -202.6885, -209.3443, -215.0352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-180.5832, -206.2237, -202.8010, -209.3238, -214.9500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-180.5308, -206.1554, -202.8602, -209.2797, -214.8854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-180.5038, -206.1023, -202.8943, -209.2089, -214.8235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-180.5053, -206.0730, -202.9166, -209.1642, -214.7827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0617, device='cuda:0', dtype=torch.float64)
tensor([-180.5607, -206.0785, -202.9084, -209.1116, -214.7708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-180.5806, -206.0464, -202.9300, -209.0619, -214.7632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-180.6490, -206.0399, -202.9319, -208.9958, -214.7939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-180.7784, -206.0650, -202.9013, -208.9146, -214.8497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-180.9093, -206.0882, -202.8721, -208.8407, -214.9235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0605, device='cuda:0', dtype=torch.float64)
tensor([-181.0710, -206.1592, -202.8180, -208.7086, -215.0047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-181.1625, -206.1663, -202.8003, -208.5881, -215.0463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0566, device='cuda:0', dtype=torch.float64)
tensor([-181.2603, -206.2052, -202.7590, -208.4797, -215.0413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-181.3819, -206.2673, -202.6999, -208.3760, -215.0386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-181.5212, -206.3325, -202.6376, -208.3177, -215.0546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-181.6232, -206.3745, -202.5888, -208.2910, -215.0390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-181.6641, -206.3665, -202.5548, -208.2789, -214.9820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-181.6999, -206.3821, -202.5154, -208.2437, -214.9129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-181.7243, -206.3884, -202.4833, -208.1857, -214.8380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-181.7363, -206.3787, -202.4598, -208.1242, -214.7546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-181.6910, -206.3097, -202.4767, -208.0964, -214.6596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-181.6413, -206.2554, -202.4981, -208.0646, -214.5727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-181.6256, -206.2393, -202.4871, -208.0237, -214.4776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-181.5735, -206.1819, -202.5080, -208.0125, -214.4003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-181.5360, -206.1383, -202.5152, -208.0440, -214.3176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-181.4811, -206.0826, -202.5245, -208.0900, -214.2229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-181.4264, -206.0296, -202.5458, -208.1037, -214.1522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-181.3863, -206.0090, -202.5691, -208.0990, -214.0953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0537, device='cuda:0', dtype=torch.float64)
tensor([-181.3459, -205.9833, -202.5787, -208.0858, -214.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-181.3117, -205.9402, -202.5971, -208.0884, -213.9355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-181.2427, -205.8438, -202.6380, -208.0769, -213.8485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-181.2275, -205.7778, -202.6660, -208.0490, -213.7848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-181.2113, -205.7237, -202.6683, -208.0220, -213.6931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-181.1396, -205.6039, -202.7015, -208.0568, -213.5914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-181.1329, -205.5419, -202.6808, -208.0537, -213.5018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-181.1388, -205.4922, -202.6517, -208.0357, -213.4238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-181.1429, -205.4470, -202.6212, -208.0630, -213.3389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0857, device='cuda:0', dtype=torch.float64)
tensor([-181.1870, -205.4242, -202.5955, -208.0018, -213.2937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-181.2707, -205.4437, -202.5384, -207.9311, -213.2699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-181.3693, -205.4508, -202.4936, -207.8793, -213.2834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-181.4729, -205.4330, -202.4602, -207.8127, -213.3269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-181.5127, -205.3571, -202.4737, -207.8392, -213.3439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-181.5434, -205.2893, -202.4808, -207.8718, -213.3505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-181.6262, -205.2670, -202.4496, -207.8771, -213.3675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0582, device='cuda:0', dtype=torch.float64)
tensor([-181.7052, -205.2411, -202.4161, -207.8966, -213.3683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-181.7845, -205.2222, -202.3816, -207.9233, -213.3704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0508, device='cuda:0', dtype=torch.float64)
tensor([-181.9398, -205.2631, -202.2998, -207.8871, -213.4015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-182.0564, -205.2916, -202.2318, -207.8466, -213.4004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-182.2017, -205.3551, -202.1419, -207.7847, -213.4027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0704, device='cuda:0', dtype=torch.float64)
tensor([-182.3032, -205.3652, -202.0738, -207.7755, -213.3762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-182.3429, -205.3277, -202.0605, -207.7898, -213.3586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-182.3669, -205.2790, -202.0446, -207.8016, -213.3247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-182.4255, -205.2640, -202.0272, -207.7930, -213.3226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-182.4313, -205.2126, -202.0480, -207.7342, -213.3111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-182.4461, -205.1526, -202.0749, -207.7046, -213.3214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-182.4473, -205.0734, -202.1133, -207.6909, -213.3179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-182.4350, -204.9978, -202.1567, -207.7111, -213.3003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0635, device='cuda:0', dtype=torch.float64)
tensor([-182.3932, -204.8889, -202.2222, -207.7741, -213.2784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-182.3506, -204.7846, -202.3062, -207.8325, -213.2764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-182.2987, -204.6776, -202.4060, -207.9308, -213.2649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-182.2179, -204.5652, -202.5084, -208.0043, -213.2420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-182.1389, -204.4678, -202.5849, -208.0158, -213.2098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-182.1018, -204.4175, -202.6394, -208.0186, -213.1885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-182.0967, -204.4045, -202.6645, -207.9813, -213.1704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-182.0866, -204.3694, -202.6953, -207.9239, -213.1628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-182.1055, -204.3552, -202.7048, -207.9021, -213.1525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0576, device='cuda:0', dtype=torch.float64)
tensor([-182.1433, -204.3419, -202.7239, -207.8700, -213.1651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-182.1711, -204.3191, -202.7434, -207.8388, -213.1485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-182.2035, -204.3372, -202.7560, -207.8217, -213.1224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-182.2302, -204.3562, -202.7566, -207.7992, -213.0801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-182.2383, -204.3530, -202.7743, -207.7582, -213.0493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-182.3269, -204.4193, -202.7397, -207.6959, -213.0379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-182.4401, -204.4976, -202.6931, -207.6188, -213.0461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-182.5729, -204.5835, -202.6344, -207.5750, -213.0531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-182.6512, -204.6236, -202.5989, -207.5259, -213.0456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-182.7457, -204.6657, -202.5601, -207.4822, -213.0549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0572, device='cuda:0', dtype=torch.float64)
tensor([-182.8362, -204.6822, -202.5458, -207.4596, -213.0626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-182.8818, -204.6727, -202.5347, -207.4300, -213.0431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-182.9543, -204.6901, -202.4927, -207.4187, -213.0150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-182.9786, -204.6593, -202.4732, -207.4013, -212.9552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-183.0106, -204.6473, -202.4381, -207.3509, -212.8962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-183.0250, -204.6265, -202.3958, -207.2903, -212.8127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-183.0329, -204.5946, -202.3529, -207.2189, -212.7265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-183.0974, -204.5890, -202.2779, -207.1840, -212.6587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-183.1755, -204.5971, -202.2027, -207.1643, -212.6043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-183.2587, -204.6068, -202.1306, -207.1206, -212.5623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-183.3127, -204.5806, -202.0954, -207.0925, -212.5320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-183.3493, -204.5384, -202.0813, -207.0907, -212.5022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-183.3872, -204.5026, -202.0692, -207.1034, -212.4898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-183.4199, -204.4644, -202.0702, -207.1477, -212.4848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-183.3578, -204.3614, -202.1273, -207.1738, -212.4525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-183.3123, -204.2608, -202.1817, -207.1623, -212.4381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-183.3542, -204.2549, -202.1819, -207.1606, -212.4427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-183.3866, -204.2195, -202.2061, -207.2243, -212.4644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-183.4490, -204.1979, -202.2221, -207.2882, -212.4984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-183.5074, -204.1951, -202.2319, -207.3308, -212.5172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-183.5537, -204.1728, -202.2568, -207.4075, -212.5402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-183.6003, -204.1481, -202.2839, -207.4742, -212.5666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-183.6216, -204.0882, -202.3381, -207.5314, -212.5944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-183.7028, -204.0762, -202.3599, -207.5789, -212.6544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-183.7329, -204.0180, -202.4031, -207.6312, -212.6917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-183.6987, -203.9296, -202.4577, -207.6760, -212.6720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-183.7033, -203.9025, -202.4856, -207.6838, -212.6552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-183.7359, -203.9052, -202.4929, -207.6560, -212.6703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-183.7670, -203.8997, -202.5031, -207.6027, -212.6877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-183.8197, -203.9291, -202.4814, -207.5056, -212.7019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-183.8449, -203.9363, -202.4734, -207.4041, -212.7151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-183.8559, -203.9121, -202.4891, -207.3640, -212.7393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-183.8972, -203.9385, -202.4735, -207.2990, -212.7509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-183.9819, -203.9932, -202.4493, -207.2435, -212.7893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-184.1304, -204.1018, -202.4026, -207.1571, -212.8671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-184.2867, -204.2204, -202.3507, -207.0713, -212.9134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-184.4190, -204.3325, -202.3005, -206.9490, -212.9501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-184.4734, -204.3829, -202.2714, -206.8817, -212.9362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-184.4438, -204.3709, -202.2864, -206.8259, -212.9032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-184.4287, -204.3610, -202.2917, -206.8027, -212.8655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-184.3849, -204.3056, -202.3211, -206.8171, -212.8316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-184.3596, -204.2605, -202.3366, -206.8198, -212.7932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-184.2801, -204.1781, -202.3769, -206.8367, -212.7269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-184.1723, -204.0715, -202.4106, -206.8269, -212.6217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-184.0258, -203.9415, -202.4743, -206.8379, -212.5243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-183.8271, -203.7667, -202.5633, -206.8639, -212.3965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-183.6268, -203.5693, -202.6777, -206.9289, -212.2911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-183.4183, -203.3666, -202.8059, -206.9875, -212.1824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-183.1812, -203.1279, -202.9685, -207.0154, -212.0841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-182.9897, -202.9263, -203.1054, -207.0370, -211.9995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-182.8501, -202.7500, -203.2200, -207.0546, -211.9364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-182.7708, -202.6063, -203.3043, -207.0645, -211.9130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-182.7058, -202.4749, -203.3747, -207.0502, -211.9052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-182.6384, -202.3615, -203.4307, -207.0433, -211.8586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-182.6063, -202.2766, -203.4695, -207.0395, -211.8342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-182.5886, -202.2265, -203.4767, -206.9995, -211.8004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-182.6023, -202.1980, -203.4656, -206.9610, -211.7861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-182.6777, -202.2050, -203.4145, -206.9181, -211.8009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-182.6925, -202.1633, -203.4010, -206.8804, -211.7747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-182.7463, -202.1630, -203.3669, -206.8237, -211.7816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-182.8538, -202.2043, -203.3091, -206.7692, -211.8260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-183.0547, -202.3322, -203.1848, -206.6522, -211.9101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-183.2595, -202.4745, -203.0449, -206.5467, -211.9728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-183.5462, -202.6815, -202.8630, -206.4377, -212.0660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-183.8111, -202.8782, -202.6965, -206.3662, -212.1374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-184.0170, -203.0465, -202.5542, -206.3311, -212.1695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-184.2520, -203.2193, -202.4125, -206.3231, -212.2273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-184.4831, -203.3957, -202.2768, -206.3468, -212.2607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-184.6699, -203.5441, -202.1585, -206.3692, -212.2727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-184.8275, -203.6707, -202.0554, -206.3958, -212.2666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-184.8748, -203.6890, -202.0061, -206.4179, -212.2299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-184.8380, -203.6355, -202.0097, -206.4912, -212.1693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-184.7552, -203.5494, -202.0310, -206.5138, -212.1017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-184.6625, -203.4421, -202.0750, -206.5177, -212.0645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-184.5126, -203.2842, -202.1690, -206.5198, -212.0224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-184.3923, -203.1584, -202.2439, -206.5287, -211.9817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-184.3344, -203.0705, -202.2889, -206.5162, -211.9571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-184.2887, -202.9874, -202.3396, -206.5310, -211.9550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-184.2128, -202.8924, -202.4080, -206.5503, -211.9383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-184.1325, -202.7856, -202.4908, -206.5843, -211.9294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-184.1272, -202.7454, -202.5389, -206.6491, -211.9509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0535, device='cuda:0', dtype=torch.float64)
tensor([-184.1227, -202.7232, -202.5812, -206.7044, -211.9636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-184.1463, -202.7209, -202.6078, -206.7803, -211.9696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-184.1731, -202.7107, -202.6468, -206.8274, -212.0001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-184.1703, -202.6856, -202.6761, -206.8883, -211.9899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-184.1614, -202.6392, -202.7064, -206.9363, -211.9795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-184.2320, -202.6461, -202.6986, -206.9414, -212.0160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-184.2719, -202.6308, -202.7014, -206.9356, -212.0175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-184.3200, -202.6316, -202.7024, -206.8966, -212.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-184.3630, -202.6274, -202.6974, -206.8235, -212.0458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-184.4036, -202.6280, -202.6804, -206.7721, -212.0365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-184.4569, -202.6278, -202.6769, -206.7622, -212.0360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-184.5442, -202.6673, -202.6417, -206.7717, -212.0254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-184.6237, -202.7221, -202.5928, -206.7581, -212.0010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-184.7155, -202.8031, -202.5235, -206.7377, -211.9766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-184.8130, -202.8732, -202.4486, -206.6962, -211.9609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-184.9119, -202.9254, -202.3845, -206.6383, -211.9671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-185.0002, -202.9776, -202.3063, -206.5654, -211.9525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-185.0196, -202.9671, -202.2811, -206.4868, -211.9309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-184.9919, -202.9202, -202.2710, -206.4048, -211.8758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-185.0333, -202.9228, -202.2297, -206.3171, -211.8624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-185.1247, -202.9329, -202.1840, -206.2873, -211.8782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-185.2208, -202.9470, -202.1398, -206.2567, -211.9085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-185.2866, -202.9430, -202.1010, -206.1967, -211.9252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-185.3506, -202.9429, -202.0705, -206.1296, -211.9444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-185.4253, -202.9243, -202.0387, -206.1082, -211.9556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-185.4699, -202.8959, -202.0174, -206.0700, -211.9429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-185.5274, -202.8855, -201.9834, -205.9984, -211.9424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-185.5240, -202.8304, -201.9905, -205.9475, -211.9181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-185.4794, -202.7514, -202.0187, -205.9132, -211.8834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-185.4674, -202.6918, -202.0483, -205.9022, -211.8665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-185.4470, -202.6238, -202.0922, -205.9306, -211.8421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-185.4124, -202.5446, -202.1474, -205.9360, -211.8265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-185.3616, -202.4752, -202.1991, -205.9218, -211.7976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-185.3568, -202.4422, -202.2404, -205.8360, -211.8089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-185.3426, -202.4189, -202.2701, -205.7595, -211.7957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-185.3438, -202.4043, -202.2964, -205.7249, -211.7870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-185.3692, -202.4222, -202.3033, -205.6840, -211.7862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-185.3992, -202.4429, -202.2961, -205.6289, -211.7752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-185.4173, -202.4634, -202.2735, -205.6031, -211.7342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-185.3542, -202.4206, -202.2739, -205.6092, -211.6523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-185.3078, -202.3883, -202.2759, -205.6487, -211.5820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-185.2583, -202.3840, -202.2621, -205.6845, -211.4925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-185.1785, -202.3608, -202.2594, -205.7324, -211.3707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-185.1200, -202.3429, -202.2560, -205.7850, -211.2700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-185.0648, -202.3207, -202.2682, -205.8652, -211.1751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-185.0188, -202.2933, -202.2813, -205.9294, -211.0982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-184.9544, -202.2299, -202.3192, -206.0057, -211.0241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-184.8414, -202.1337, -202.3861, -206.0885, -210.9166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-184.7723, -202.0545, -202.4325, -206.1004, -210.8456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-184.7416, -202.0015, -202.4554, -206.0853, -210.7924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-184.7709, -201.9762, -202.4637, -206.0748, -210.8003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-184.8453, -201.9654, -202.4522, -206.0412, -210.8403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-184.9575, -201.9925, -202.4156, -206.0013, -210.9049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-185.0873, -202.0449, -202.3700, -205.9469, -210.9942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-185.2528, -202.1277, -202.2948, -205.8505, -211.0863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-185.4359, -202.2371, -202.2086, -205.7719, -211.1829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-185.6135, -202.3503, -202.1255, -205.7156, -211.2701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-185.7496, -202.4360, -202.0584, -205.6325, -211.3317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-185.8622, -202.4989, -202.0041, -205.5592, -211.3766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-186.0620, -202.6382, -201.9010, -205.4647, -211.4416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-186.2519, -202.7702, -201.7975, -205.3928, -211.4938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-186.3902, -202.8785, -201.7109, -205.3315, -211.5060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-186.4525, -202.9457, -201.6698, -205.2859, -211.4860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-186.4527, -202.9776, -201.6528, -205.2301, -211.4314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-186.4242, -202.9856, -201.6478, -205.1746, -211.3678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-186.3843, -202.9593, -201.6624, -205.1550, -211.3227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-186.2691, -202.8534, -201.7244, -205.1590, -211.2521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-186.1015, -202.7049, -201.8056, -205.1274, -211.1526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-185.8769, -202.4982, -201.9390, -205.0895, -211.0702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-185.7249, -202.3380, -202.0484, -205.0459, -211.0291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-185.5916, -202.1935, -202.1605, -205.0593, -210.9888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-185.4509, -202.0371, -202.2807, -205.0565, -210.9583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-185.3555, -201.9160, -202.3697, -205.0699, -210.9279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-185.2916, -201.8134, -202.4418, -205.1077, -210.9077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-185.2705, -201.7430, -202.4936, -205.1507, -210.9154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-185.2001, -201.6432, -202.5630, -205.1976, -210.8751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-185.1779, -201.5715, -202.5934, -205.1629, -210.8569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-185.1193, -201.4684, -202.6545, -205.1539, -210.8229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-185.0814, -201.3849, -202.6927, -205.1383, -210.7870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-185.0725, -201.3352, -202.7016, -205.1243, -210.7592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-185.0854, -201.3206, -202.6796, -205.1170, -210.7184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-185.1535, -201.3449, -202.6395, -205.1321, -210.7265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-185.3258, -201.4306, -202.5463, -205.1468, -210.7923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-185.5096, -201.5224, -202.4542, -205.1739, -210.8649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-185.6737, -201.6169, -202.3587, -205.2407, -210.8877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-185.8191, -201.7021, -202.2831, -205.3184, -210.9159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-185.9351, -201.7697, -202.2166, -205.3934, -210.9188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-186.0797, -201.8688, -202.1317, -205.4229, -210.9355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-186.2417, -201.9701, -202.0451, -205.4348, -210.9710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-186.3826, -202.0446, -201.9810, -205.4412, -211.0121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-186.4716, -202.0762, -201.9416, -205.4443, -211.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-186.4876, -202.0521, -201.9415, -205.4323, -211.0237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-186.5403, -202.0557, -201.9295, -205.4278, -211.0428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-186.5333, -202.0112, -201.9517, -205.3952, -211.0425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-186.5611, -201.9940, -201.9601, -205.3396, -211.0700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-186.5503, -201.9516, -201.9760, -205.3088, -211.0556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-186.5490, -201.9161, -201.9851, -205.2474, -211.0514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-186.4932, -201.8219, -202.0243, -205.2194, -211.0131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-186.3987, -201.7014, -202.0801, -205.1650, -210.9479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-186.3031, -201.5857, -202.1364, -205.1400, -210.8676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-186.2382, -201.5005, -202.1779, -205.0821, -210.8165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-186.2051, -201.4477, -202.2053, -205.0296, -210.7928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-186.1382, -201.3750, -202.2462, -204.9747, -210.7424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-186.0525, -201.3055, -202.2860, -204.9141, -210.6691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-185.9932, -201.2793, -202.2962, -204.8322, -210.5987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-185.9029, -201.2553, -202.3082, -204.7429, -210.5006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-185.8149, -201.2494, -202.3045, -204.6601, -210.3833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-185.8006, -201.2838, -202.2722, -204.5615, -210.3287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-185.7762, -201.2874, -202.2650, -204.4938, -210.2877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-185.7770, -201.3047, -202.2723, -204.4975, -210.2597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-185.8088, -201.3585, -202.2591, -204.4898, -210.2451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-185.9213, -201.4599, -202.1989, -204.4952, -210.2707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-186.0143, -201.5421, -202.1548, -204.5073, -210.2928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-186.1208, -201.6072, -202.1346, -204.5767, -210.3451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-186.2038, -201.6777, -202.1161, -204.6283, -210.3825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-186.3148, -201.7703, -202.0818, -204.6594, -210.4360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-186.4350, -201.8647, -202.0470, -204.6725, -210.5017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-186.5628, -201.9504, -202.0099, -204.7360, -210.5628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-186.6473, -201.9939, -202.0092, -204.8096, -210.6132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-186.7264, -202.0389, -202.0055, -204.8927, -210.6469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-186.8289, -202.0773, -201.9934, -204.9366, -210.7156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-186.8829, -202.0681, -202.0128, -204.9897, -210.7633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-186.9508, -202.0537, -202.0201, -205.0504, -210.8074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-186.9292, -201.9920, -202.0731, -205.0959, -210.8073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-186.8697, -201.8918, -202.1540, -205.1425, -210.7928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-186.8375, -201.8102, -202.2244, -205.1881, -210.7840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-186.7801, -201.7022, -202.3082, -205.2273, -210.7614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-186.7206, -201.5813, -202.4045, -205.3222, -210.7274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-186.6496, -201.4655, -202.5150, -205.4122, -210.7028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-186.6048, -201.3797, -202.6077, -205.4742, -210.6972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-186.5540, -201.2816, -202.6970, -205.4943, -210.6717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-186.5018, -201.2072, -202.7478, -205.4528, -210.6256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-186.4675, -201.1353, -202.7943, -205.4720, -210.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-186.4059, -201.0467, -202.8558, -205.4486, -210.5282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-186.4305, -201.0368, -202.8562, -205.4102, -210.5226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-186.4738, -201.0518, -202.8573, -205.4288, -210.5228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-186.4603, -201.0256, -202.8928, -205.4505, -210.4988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-186.4246, -200.9794, -202.9441, -205.4613, -210.4741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-186.4217, -200.9622, -202.9673, -205.4451, -210.4716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-186.4051, -200.9378, -202.9984, -205.4338, -210.4661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-186.4598, -200.9631, -202.9683, -205.3768, -210.4920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-186.5416, -201.0147, -202.9146, -205.2920, -210.5336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-186.6303, -201.0721, -202.8514, -205.2294, -210.5622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-186.7406, -201.1498, -202.7724, -205.1572, -210.6010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0535, device='cuda:0', dtype=torch.float64)
tensor([-186.8700, -201.2491, -202.6662, -205.0576, -210.6229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-186.9724, -201.3337, -202.5714, -204.9575, -210.6184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-187.1125, -201.4491, -202.4523, -204.8518, -210.6211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-187.1924, -201.5152, -202.3723, -204.7344, -210.6022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-187.2616, -201.5760, -202.2841, -204.6038, -210.5720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-187.3399, -201.6342, -202.1977, -204.4830, -210.5311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-187.4266, -201.7008, -202.1203, -204.4093, -210.4992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-187.5051, -201.7557, -202.0494, -204.3384, -210.4652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-187.5630, -201.7968, -201.9905, -204.2658, -210.4276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-187.6075, -201.8050, -201.9475, -204.2114, -210.4010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-187.6443, -201.8002, -201.9241, -204.1785, -210.3962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-187.6174, -201.7532, -201.9352, -204.1660, -210.3632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-187.6090, -201.7125, -201.9493, -204.1996, -210.3535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-187.5691, -201.6345, -201.9993, -204.2814, -210.3397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-187.5527, -201.5841, -202.0243, -204.3670, -210.3138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-187.4955, -201.5154, -202.0756, -204.4555, -210.2780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-187.4471, -201.4736, -202.1185, -204.5473, -210.2438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-187.4468, -201.4683, -202.1431, -204.6608, -210.2393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-187.4002, -201.4480, -202.1901, -204.7699, -210.2242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-187.3215, -201.4127, -202.2523, -204.8968, -210.1918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-187.2177, -201.3824, -202.3161, -205.0078, -210.1290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-187.1623, -201.3512, -202.3633, -205.0764, -210.1058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-187.0759, -201.3047, -202.4156, -205.1114, -210.0695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-187.0981, -201.3371, -202.4145, -205.1533, -210.0988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-187.1179, -201.3614, -202.4192, -205.1582, -210.1385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-187.1561, -201.3736, -202.4350, -205.1665, -210.2005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-187.2374, -201.4026, -202.4309, -205.1602, -210.2797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-187.3181, -201.4272, -202.4255, -205.1096, -210.3680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-187.4231, -201.4434, -202.4127, -205.0312, -210.4738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-187.5327, -201.4698, -202.3889, -204.9440, -210.5686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-187.6249, -201.4821, -202.3746, -204.8372, -210.6567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-187.7095, -201.4949, -202.3626, -204.7100, -210.7477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-187.8257, -201.5388, -202.3310, -204.5699, -210.8438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-187.8746, -201.5382, -202.3212, -204.4165, -210.8806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-187.9949, -201.5913, -202.2728, -204.2445, -210.9512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-188.0471, -201.5946, -202.2655, -204.0819, -210.9949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-188.0592, -201.5901, -202.2659, -203.9391, -210.9977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-187.9964, -201.5320, -202.3106, -203.8126, -210.9813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-187.8850, -201.4455, -202.3545, -203.6888, -210.9123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-187.7151, -201.3064, -202.4279, -203.5863, -210.8063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-187.5669, -201.1889, -202.4947, -203.5178, -210.7131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-187.4244, -201.0670, -202.5591, -203.4683, -210.6138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-187.3326, -200.9634, -202.6024, -203.4231, -210.5413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-187.2039, -200.8265, -202.6617, -203.3696, -210.4500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-187.0756, -200.6891, -202.7128, -203.3253, -210.3429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-186.9341, -200.5512, -202.7704, -203.2848, -210.2346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-186.7965, -200.4207, -202.8295, -203.2899, -210.1165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-186.6978, -200.3155, -202.8693, -203.2932, -210.0147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-186.5652, -200.1922, -202.9325, -203.3163, -209.9021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-186.4557, -200.1028, -202.9725, -203.3447, -209.7764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-186.4219, -200.0654, -202.9813, -203.3629, -209.6979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-186.4700, -200.0618, -202.9614, -203.4035, -209.6827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-186.5539, -200.0814, -202.9224, -203.4374, -209.7049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-186.6342, -200.1065, -202.8810, -203.4513, -209.7233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-186.6878, -200.0960, -202.8734, -203.4815, -209.7468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-186.7735, -200.1129, -202.8441, -203.5092, -209.7978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-186.9057, -200.1614, -202.7931, -203.5322, -209.8774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-187.0654, -200.2261, -202.7343, -203.5796, -209.9690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-187.2410, -200.3217, -202.6555, -203.6385, -210.0504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-187.4481, -200.4242, -202.5775, -203.7100, -210.1571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-187.6389, -200.5056, -202.5201, -203.7894, -210.2483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-187.8269, -200.5781, -202.4590, -203.8446, -210.3322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-187.9820, -200.6216, -202.4162, -203.9032, -210.3916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-188.1307, -200.6757, -202.3634, -203.9414, -210.4455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-188.2702, -200.7317, -202.3196, -203.9875, -210.5012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-188.3584, -200.7707, -202.2827, -204.0186, -210.5183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-188.4307, -200.8212, -202.2443, -204.0716, -210.5192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-188.4999, -200.8880, -202.2020, -204.1226, -210.5243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-188.5507, -200.9399, -202.1801, -204.1836, -210.5375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-188.5758, -200.9788, -202.1610, -204.2245, -210.5355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-188.5157, -200.9693, -202.1700, -204.2381, -210.4872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-188.3693, -200.9220, -202.2082, -204.2470, -210.3754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-188.2628, -200.9011, -202.2281, -204.2569, -210.2879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-188.1645, -200.9081, -202.2178, -204.2182, -210.1920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-188.0822, -200.9172, -202.2136, -204.1921, -210.1105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-187.9464, -200.8987, -202.2242, -204.1211, -210.0003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-187.7994, -200.8833, -202.2391, -204.0671, -209.8785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-187.6981, -200.9052, -202.2243, -204.0474, -209.7612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-187.6263, -200.9581, -202.1905, -204.0158, -209.6623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-187.5666, -201.0063, -202.1657, -203.9860, -209.5813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-187.5588, -201.0579, -202.1275, -203.9548, -209.5443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-187.5542, -201.0891, -202.0847, -203.8754, -209.5135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-187.5217, -201.0957, -202.0699, -203.7982, -209.4689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-187.5210, -201.0907, -202.0571, -203.7173, -209.4721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-187.4954, -201.0975, -202.0366, -203.6070, -209.4501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-187.4696, -201.0895, -202.0270, -203.4959, -209.4305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-187.4935, -201.0989, -201.9957, -203.3714, -209.4434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-187.5251, -201.1059, -201.9708, -203.2891, -209.4712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-187.5961, -201.1326, -201.9387, -203.2487, -209.5221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-187.6466, -201.1289, -201.9309, -203.2264, -209.5654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-187.6865, -201.1287, -201.9300, -203.2215, -209.6026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-187.7214, -201.1209, -201.9416, -203.2375, -209.6440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-187.7815, -201.1207, -201.9422, -203.2661, -209.6945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-187.8024, -201.0811, -201.9694, -203.3239, -209.7261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-187.8022, -201.0322, -202.0180, -203.4011, -209.7558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-187.7728, -200.9284, -202.1044, -203.5208, -209.7798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-187.7876, -200.8399, -202.1841, -203.6431, -209.8403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-187.8332, -200.7620, -202.2492, -203.7715, -209.9089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-187.8789, -200.6896, -202.3228, -203.9373, -209.9764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-187.8878, -200.6086, -202.4123, -204.0911, -210.0274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-187.9232, -200.5455, -202.4867, -204.2472, -210.0841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-187.9718, -200.5105, -202.5306, -204.3639, -210.1281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-188.0327, -200.5156, -202.5326, -204.4425, -210.1494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-188.1378, -200.5677, -202.4858, -204.4963, -210.1794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-188.2254, -200.6163, -202.4355, -204.5068, -210.2116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-188.2751, -200.6337, -202.4041, -204.5175, -210.2170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-188.3324, -200.6531, -202.3773, -204.5459, -210.2231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-188.3625, -200.6512, -202.3524, -204.5216, -210.2291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-188.3724, -200.6493, -202.3308, -204.4878, -210.2286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-188.3414, -200.6338, -202.3212, -204.4333, -210.2013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-188.2949, -200.6239, -202.3049, -204.3569, -210.1597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-188.2464, -200.6280, -202.2643, -204.2554, -210.0939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-188.1761, -200.6082, -202.2344, -204.1655, -210.0117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-188.0819, -200.5811, -202.2118, -204.0816, -209.9001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-187.9617, -200.5115, -202.2256, -204.0182, -209.7950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-187.8970, -200.4859, -202.2037, -203.9352, -209.7170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-187.8078, -200.4461, -202.2013, -203.8760, -209.6217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-187.7366, -200.3917, -202.2025, -203.8257, -209.5385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-187.7095, -200.3591, -202.1853, -203.7696, -209.4849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-187.6766, -200.2982, -202.2033, -203.7509, -209.4491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-187.6286, -200.2025, -202.2565, -203.7747, -209.4140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-187.6294, -200.1720, -202.2604, -203.7667, -209.3940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-187.6175, -200.1527, -202.2702, -203.7778, -209.3604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-187.6370, -200.1512, -202.2699, -203.8139, -209.3527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-187.6663, -200.1396, -202.2791, -203.8652, -209.3612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-187.6705, -200.1170, -202.3039, -203.9177, -209.3696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-187.6633, -200.0868, -202.3284, -203.9170, -209.3866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-187.6864, -200.0791, -202.3352, -203.9173, -209.4194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-187.7287, -200.0760, -202.3400, -203.9192, -209.4845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-187.7655, -200.0711, -202.3473, -203.9289, -209.5460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-187.8220, -200.0919, -202.3229, -203.9015, -209.5926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-187.8361, -200.0917, -202.3043, -203.8414, -209.6063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-187.8684, -200.1133, -202.2603, -203.7571, -209.6289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-187.9625, -200.1876, -202.1772, -203.6648, -209.6741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-188.0701, -200.2622, -202.1002, -203.6199, -209.7190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-188.1623, -200.3089, -202.0432, -203.5853, -209.7520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-188.2020, -200.3151, -202.0062, -203.5378, -209.7583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-188.2409, -200.3279, -201.9675, -203.4977, -209.7610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-188.3035, -200.3413, -201.9256, -203.4792, -209.7788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-188.3602, -200.3516, -201.8883, -203.4716, -209.7888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-188.4326, -200.3379, -201.8845, -203.5173, -209.8279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-188.4909, -200.3276, -201.8692, -203.5398, -209.8531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-188.5312, -200.3202, -201.8596, -203.5745, -209.8650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-188.5267, -200.2928, -201.8676, -203.6297, -209.8333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-188.5237, -200.2686, -201.8795, -203.6662, -209.8185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-188.4604, -200.2180, -201.9169, -203.6927, -209.7797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-188.3890, -200.1624, -201.9614, -203.7406, -209.7302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-188.3358, -200.1138, -202.0045, -203.8125, -209.6789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-188.2846, -200.0704, -202.0373, -203.8406, -209.6370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-188.2662, -200.0358, -202.0676, -203.8948, -209.6117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-188.2429, -199.9887, -202.1110, -203.9754, -209.5859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-188.2763, -199.9897, -202.1220, -204.0524, -209.5941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-188.3577, -200.0117, -202.1127, -204.1211, -209.6346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-188.4489, -200.0322, -202.1077, -204.1874, -209.6932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-188.5648, -200.0567, -202.0825, -204.1957, -209.7828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-188.6686, -200.0808, -202.0645, -204.2123, -209.8615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-188.7087, -200.0725, -202.0537, -204.1695, -209.8998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-188.7362, -200.0506, -202.0647, -204.1538, -209.9392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-188.7351, -200.0050, -202.0895, -204.1466, -209.9514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-188.7017, -199.9591, -202.1152, -204.1206, -209.9376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-188.6624, -199.9107, -202.1580, -204.1386, -209.9256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-188.6190, -199.8556, -202.2120, -204.1463, -209.9254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-188.5792, -199.8079, -202.2537, -204.1445, -209.9151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-188.5344, -199.7597, -202.2848, -204.0873, -209.9134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-188.5704, -199.7604, -202.2801, -204.0466, -209.9452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-188.5498, -199.7547, -202.2782, -203.9787, -209.9381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-188.5504, -199.7707, -202.2635, -203.9222, -209.9419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-188.5832, -199.8067, -202.2312, -203.8581, -209.9633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-188.6113, -199.8167, -202.2168, -203.8031, -209.9858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-188.6477, -199.8243, -202.2131, -203.7602, -210.0123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-188.6572, -199.8406, -202.1926, -203.6592, -210.0190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-188.6683, -199.8511, -202.1674, -203.5514, -210.0130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-188.6633, -199.8465, -202.1385, -203.4428, -209.9798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-188.6279, -199.8589, -202.0988, -203.3276, -209.9045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-188.6000, -199.8675, -202.0581, -203.2068, -209.8305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-188.5629, -199.8648, -202.0217, -203.0790, -209.7415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-188.5311, -199.8670, -201.9817, -202.9538, -209.6649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-188.5186, -199.8761, -201.9361, -202.8270, -209.6063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-188.4787, -199.8810, -201.9025, -202.6879, -209.5481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-188.4791, -199.8979, -201.8696, -202.6094, -209.5101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-188.4646, -199.8844, -201.8665, -202.5519, -209.4790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-188.4739, -199.8846, -201.8582, -202.5109, -209.4663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-188.4934, -199.8848, -201.8519, -202.5030, -209.4500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-188.4987, -199.8861, -201.8328, -202.4826, -209.4145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-188.4813, -199.8754, -201.8321, -202.4903, -209.3589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-188.5204, -199.8889, -201.8046, -202.5059, -209.3397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-188.5460, -199.9091, -201.7797, -202.4929, -209.3156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-188.5327, -199.9047, -201.7819, -202.5342, -209.2580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-188.5324, -199.9102, -201.7799, -202.5886, -209.2075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-188.5302, -199.9008, -201.7832, -202.6502, -209.1560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-188.5137, -199.8824, -201.7919, -202.7196, -209.0888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-188.5163, -199.8681, -201.8097, -202.8064, -209.0450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-188.5010, -199.8602, -201.8258, -202.8763, -208.9914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-188.4878, -199.8601, -201.8334, -202.9256, -208.9339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-188.5037, -199.8719, -201.8221, -202.9525, -208.8854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-188.5712, -199.8965, -201.7862, -202.9446, -208.8831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-188.6390, -199.9004, -201.7695, -202.9209, -208.9069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-188.7247, -199.9059, -201.7488, -202.9010, -208.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-188.8139, -199.8983, -201.7433, -202.8999, -208.9930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-188.8910, -199.8817, -201.7406, -202.8914, -209.0400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-188.9576, -199.8675, -201.7290, -202.8711, -209.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-189.0207, -199.8804, -201.7028, -202.8290, -209.1022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-189.1050, -199.9225, -201.6573, -202.7959, -209.1337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-189.1980, -199.9675, -201.6055, -202.7512, -209.1739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-189.2886, -199.9982, -201.5540, -202.6741, -209.2187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-189.3986, -200.0166, -201.5069, -202.6143, -209.2778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-189.5048, -200.0471, -201.4627, -202.5758, -209.3339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-189.5975, -200.0685, -201.4390, -202.5795, -209.3883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-189.6509, -200.0556, -201.4364, -202.5636, -209.4208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-189.7212, -200.0545, -201.4305, -202.5510, -209.4657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-189.7343, -200.0406, -201.4365, -202.5300, -209.4735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-189.7178, -199.9981, -201.4617, -202.5085, -209.4686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-189.7138, -199.9941, -201.4706, -202.5084, -209.4630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-189.7050, -199.9921, -201.4852, -202.5244, -209.4534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-189.6689, -199.9794, -201.5126, -202.5508, -209.4252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-189.6490, -199.9791, -201.5258, -202.5867, -209.3869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-189.6658, -200.0186, -201.5165, -202.6201, -209.3772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-189.6968, -200.0576, -201.5139, -202.6922, -209.3762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-189.7277, -200.0788, -201.5260, -202.7853, -209.3801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-189.7494, -200.1073, -201.5369, -202.8794, -209.3768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-189.7583, -200.1238, -201.5688, -203.0210, -209.3668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-189.6986, -200.0978, -201.6340, -203.1559, -209.3213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-189.6560, -200.0898, -201.6839, -203.2833, -209.2647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-189.6170, -200.0922, -201.7182, -203.3598, -209.2124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-189.5924, -200.1121, -201.7363, -203.4131, -209.1633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-189.6355, -200.1630, -201.7313, -203.4591, -209.1631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-189.6846, -200.2300, -201.7195, -203.5207, -209.1609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-189.6430, -200.2695, -201.7220, -203.5597, -209.0903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-189.5505, -200.2726, -201.7461, -203.5680, -208.9945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-189.4730, -200.2724, -201.7643, -203.5679, -208.9057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-189.4258, -200.2800, -201.7685, -203.5390, -208.8448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-189.3382, -200.2728, -201.7823, -203.4932, -208.7627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-189.2818, -200.2663, -201.7749, -203.3965, -208.7106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-189.2168, -200.2634, -201.7614, -203.2736, -208.6498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-189.1581, -200.2464, -201.7523, -203.1480, -208.5938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-189.1278, -200.2330, -201.7289, -203.0060, -208.5583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-189.1258, -200.2335, -201.7006, -202.8927, -208.5418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-189.1782, -200.2306, -201.6818, -202.8038, -208.5710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-189.2636, -200.2140, -201.6754, -202.7635, -208.6273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-189.3756, -200.1966, -201.6539, -202.7017, -208.7003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-189.5073, -200.1895, -201.6100, -202.6124, -208.7789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-189.5574, -200.1455, -201.6088, -202.5519, -208.8125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-189.5912, -200.0857, -201.6199, -202.4787, -208.8586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-189.6418, -200.0389, -201.6313, -202.4379, -208.9153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-189.7029, -200.0011, -201.6370, -202.3869, -208.9897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-189.7038, -199.9276, -201.6825, -202.3569, -209.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-189.7064, -199.8458, -201.7473, -202.3570, -209.0909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-189.7290, -199.7747, -201.8104, -202.3794, -209.1529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-189.7529, -199.6907, -201.8822, -202.4110, -209.2110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-189.8158, -199.6287, -201.9336, -202.4603, -209.2825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-189.8440, -199.5634, -201.9864, -202.4931, -209.3275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-189.8675, -199.5055, -202.0382, -202.5488, -209.3601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-189.8671, -199.4478, -202.0813, -202.5732, -209.3608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-189.8647, -199.4081, -202.1129, -202.5730, -209.3620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-189.8886, -199.4101, -202.1199, -202.5797, -209.3726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-189.8725, -199.4078, -202.1391, -202.5753, -209.3522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-189.8501, -199.3941, -202.1672, -202.5839, -209.3250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-189.8060, -199.3926, -202.1880, -202.5872, -209.2745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-189.7833, -199.3917, -202.1936, -202.5801, -209.2307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-189.7999, -199.4226, -202.1802, -202.5886, -209.2023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-189.8394, -199.4629, -202.1450, -202.5797, -209.1859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-189.9076, -199.5129, -202.0955, -202.5878, -209.1827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-190.0042, -199.5850, -202.0206, -202.5883, -209.1886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-190.1138, -199.6687, -201.9291, -202.5622, -209.2107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-190.2235, -199.7576, -201.8372, -202.5077, -209.2423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-190.3253, -199.8496, -201.7459, -202.4393, -209.2742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-190.4102, -199.9416, -201.6680, -202.3896, -209.2949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-190.4043, -199.9706, -201.6511, -202.3490, -209.2780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-190.3527, -199.9663, -201.6669, -202.3201, -209.2401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-190.2801, -199.9405, -201.7014, -202.3125, -209.1972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-190.2038, -199.9007, -201.7369, -202.2906, -209.1528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-190.1273, -199.8740, -201.7676, -202.2566, -209.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-190.0500, -199.8370, -201.8133, -202.2473, -209.0687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-189.9337, -199.7858, -201.8703, -202.2192, -209.0010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-189.8058, -199.7462, -201.9207, -202.1761, -208.9303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-189.6844, -199.7084, -201.9700, -202.1433, -208.8609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-189.5385, -199.6563, -202.0301, -202.1157, -208.7658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-189.3741, -199.6051, -202.0864, -202.0772, -208.6461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-189.2727, -199.5779, -202.1244, -202.0541, -208.5696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-189.2253, -199.5529, -202.1484, -202.0282, -208.5321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-189.1894, -199.5320, -202.1640, -201.9873, -208.4956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-189.2018, -199.5130, -202.1570, -201.9449, -208.4708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-189.2451, -199.5008, -202.1490, -201.9361, -208.4560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-189.2996, -199.4878, -202.1471, -201.9498, -208.4517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-189.3981, -199.4858, -202.1387, -201.9900, -208.4957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-189.4938, -199.4847, -202.1206, -202.0221, -208.5215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-189.6023, -199.4832, -202.1088, -202.0875, -208.5474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-189.6830, -199.4589, -202.1207, -202.1697, -208.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-189.8248, -199.4529, -202.1028, -202.2379, -208.6032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-189.9824, -199.4752, -202.0576, -202.2818, -208.6485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-190.1110, -199.4711, -202.0328, -202.3244, -208.6921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-190.2717, -199.4644, -202.0138, -202.4016, -208.7694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-190.3757, -199.4325, -202.0205, -202.4709, -208.8083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-190.4925, -199.4040, -202.0264, -202.5422, -208.8632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-190.5541, -199.3496, -202.0629, -202.6049, -208.8993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-190.5988, -199.3175, -202.0861, -202.6454, -208.9216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-190.5844, -199.2680, -202.1263, -202.6595, -208.9059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-190.5575, -199.2382, -202.1425, -202.6390, -208.8747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-190.5070, -199.1970, -202.1580, -202.5979, -208.8184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-190.4345, -199.1659, -202.1730, -202.5429, -208.7446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-190.3705, -199.1315, -202.1878, -202.4961, -208.6831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-190.3237, -199.1069, -202.1926, -202.4307, -208.6414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-190.3231, -199.1014, -202.1757, -202.3698, -208.6333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-190.3141, -199.0833, -202.1664, -202.3190, -208.6178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-190.3584, -199.0694, -202.1595, -202.3093, -208.6427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-190.3722, -199.0344, -202.1710, -202.3031, -208.6517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-190.4033, -199.0202, -202.1675, -202.2941, -208.6660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-190.4867, -199.0277, -202.1507, -202.3166, -208.7128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-190.5321, -199.0188, -202.1539, -202.3480, -208.7323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-190.5842, -199.0234, -202.1447, -202.3855, -208.7470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-190.6597, -199.0520, -202.1112, -202.3926, -208.7777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-190.7556, -199.0884, -202.0704, -202.4119, -208.8196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-190.8549, -199.1334, -202.0255, -202.4490, -208.8482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-190.9173, -199.1616, -201.9992, -202.4792, -208.8584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-190.9800, -199.1867, -201.9845, -202.5323, -208.8792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-191.0435, -199.2211, -201.9700, -202.5987, -208.9161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-191.1192, -199.2540, -201.9560, -202.6741, -208.9576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-191.1369, -199.2636, -201.9728, -202.7444, -208.9732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-191.2054, -199.3239, -201.9520, -202.8194, -209.0075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-191.2770, -199.3871, -201.9303, -202.8989, -209.0413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-191.3124, -199.4208, -201.9238, -202.9731, -209.0502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.3128, -199.4393, -201.9206, -203.0161, -209.0382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-191.3274, -199.4864, -201.8893, -203.0195, -209.0251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-191.3420, -199.5056, -201.8845, -203.0694, -209.0108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-191.3429, -199.5142, -201.8877, -203.1030, -209.0007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-191.3083, -199.4978, -201.9045, -203.1055, -208.9823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-191.3193, -199.5158, -201.8867, -203.0897, -208.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-191.3627, -199.5399, -201.8572, -203.0650, -208.9903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-191.3464, -199.5199, -201.8635, -203.0418, -208.9833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-191.3541, -199.5075, -201.8622, -203.0303, -208.9891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-191.3271, -199.4616, -201.8878, -203.0299, -208.9749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-191.2577, -199.4036, -201.9186, -203.0075, -208.9280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-191.2205, -199.3801, -201.9184, -202.9631, -208.9048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-191.2227, -199.3731, -201.9017, -202.9279, -208.8955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-191.2285, -199.3825, -201.8762, -202.8825, -208.8887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-191.2027, -199.3601, -201.8722, -202.8380, -208.8640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-191.1835, -199.3378, -201.8634, -202.7928, -208.8377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-191.1835, -199.3244, -201.8487, -202.7617, -208.8109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-191.1490, -199.2909, -201.8520, -202.7192, -208.7719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-191.1414, -199.2664, -201.8386, -202.6776, -208.7427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-191.1082, -199.2313, -201.8370, -202.6331, -208.6965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-191.0526, -199.2051, -201.8280, -202.5638, -208.6337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-191.0008, -199.1756, -201.8196, -202.4863, -208.5847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-190.9680, -199.1593, -201.8016, -202.4038, -208.5489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-190.9481, -199.1456, -201.7797, -202.3301, -208.5182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-190.9696, -199.1348, -201.7645, -202.3015, -208.5292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-190.9465, -199.1220, -201.7659, -202.2755, -208.5179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-190.9113, -199.1010, -201.7837, -202.2639, -208.4978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-190.8896, -199.0842, -201.8061, -202.2877, -208.4897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-190.8173, -199.0689, -201.8317, -202.2890, -208.4435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-190.7388, -199.0412, -201.8596, -202.2825, -208.3891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-190.6823, -199.0315, -201.8775, -202.2808, -208.3593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-190.6432, -199.0203, -201.8871, -202.2672, -208.3382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-190.5922, -198.9909, -201.9066, -202.2475, -208.3112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-190.5806, -198.9708, -201.9182, -202.2369, -208.3157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-190.5542, -198.9311, -201.9378, -202.2240, -208.3116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-190.5708, -198.9196, -201.9375, -202.2356, -208.3159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-190.6604, -198.9596, -201.8971, -202.2585, -208.3632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-190.7580, -198.9912, -201.8645, -202.2911, -208.4226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-190.8847, -199.0400, -201.8241, -202.3268, -208.4963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-191.0828, -199.0971, -201.7769, -202.3971, -208.6189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-191.2422, -199.1345, -201.7340, -202.4243, -208.7118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-191.3419, -199.1453, -201.7050, -202.4399, -208.7490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-191.4108, -199.1590, -201.6789, -202.4353, -208.7770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-191.4785, -199.1832, -201.6496, -202.4164, -208.8078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-191.5006, -199.1805, -201.6313, -202.3811, -208.7999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-191.4925, -199.1505, -201.6412, -202.3769, -208.7796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-191.4496, -199.1058, -201.6638, -202.3635, -208.7421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-191.3617, -199.0354, -201.7134, -202.3662, -208.6762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-191.2847, -198.9878, -201.7573, -202.3854, -208.6105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-191.2324, -198.9612, -201.7851, -202.3904, -208.5650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-191.1868, -198.9500, -201.7878, -202.3573, -208.5176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-191.0735, -198.9060, -201.8099, -202.2861, -208.4194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-190.9769, -198.8780, -201.8207, -202.2219, -208.3310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-190.8348, -198.8320, -201.8539, -202.1487, -208.2146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-190.7463, -198.7964, -201.8805, -202.0923, -208.1493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-190.6910, -198.7715, -201.9018, -202.0655, -208.1070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-190.6383, -198.7431, -201.9230, -202.0401, -208.0573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-190.6248, -198.7312, -201.9213, -202.0056, -208.0367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-190.6469, -198.7399, -201.9095, -201.9930, -208.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-190.7044, -198.7648, -201.8824, -201.9727, -208.0647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-190.7384, -198.7798, -201.8634, -201.9459, -208.0865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-190.7380, -198.7775, -201.8600, -201.9082, -208.0932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-190.8048, -198.8142, -201.8290, -201.9016, -208.1386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-190.8207, -198.8330, -201.8268, -201.8996, -208.1588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-190.8505, -198.8422, -201.8288, -201.8915, -208.2036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-190.9664, -198.8867, -201.8036, -201.9164, -208.3034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-191.0810, -198.9300, -201.7785, -201.9529, -208.3899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-191.1851, -198.9633, -201.7578, -201.9904, -208.4647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-191.2768, -199.0054, -201.7293, -202.0089, -208.5361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-191.3557, -199.0358, -201.7237, -202.0622, -208.6031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-191.4481, -199.0691, -201.7178, -202.1287, -208.6815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-191.5495, -199.1248, -201.6973, -202.1838, -208.7551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-191.5464, -199.1502, -201.6989, -202.1921, -208.7478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-191.5807, -199.2127, -201.6800, -202.2078, -208.7569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-191.5137, -199.2106, -201.7083, -202.2162, -208.6961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-191.4296, -199.2044, -201.7347, -202.2396, -208.6142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-191.3301, -199.2008, -201.7602, -202.2389, -208.5278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-191.2691, -199.2163, -201.7718, -202.2386, -208.4636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-191.2202, -199.2254, -201.7846, -202.2423, -208.3980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-191.2199, -199.2475, -201.7871, -202.2615, -208.3621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-191.1708, -199.2338, -201.8189, -202.2766, -208.3021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-191.1670, -199.2203, -201.8416, -202.3082, -208.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.1808, -199.2124, -201.8505, -202.3377, -208.2473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-191.1897, -199.2055, -201.8672, -202.3759, -208.2176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-191.2112, -199.2205, -201.8686, -202.4035, -208.1895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-191.2326, -199.2334, -201.8676, -202.4369, -208.1693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-191.2677, -199.2546, -201.8569, -202.4600, -208.1614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-191.3043, -199.2715, -201.8401, -202.4612, -208.1541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-191.3758, -199.2982, -201.8251, -202.4768, -208.1756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-191.4291, -199.3180, -201.8173, -202.4857, -208.1975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-191.4546, -199.3053, -201.8314, -202.5034, -208.2059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-191.4406, -199.2554, -201.8631, -202.5174, -208.1940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-191.4750, -199.2117, -201.8821, -202.5472, -208.2155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-191.5124, -199.1661, -201.8995, -202.5553, -208.2507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-191.5366, -199.1227, -201.9048, -202.5387, -208.2633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-191.6283, -199.0891, -201.8991, -202.5549, -208.3171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-191.7069, -199.0663, -201.8794, -202.5391, -208.3667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-191.7852, -199.0391, -201.8662, -202.5482, -208.4063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-191.8749, -199.0395, -201.8402, -202.5608, -208.4469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-191.8940, -199.0151, -201.8418, -202.5577, -208.4446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-191.8520, -198.9651, -201.8708, -202.5472, -208.4074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-191.8186, -198.9154, -201.8990, -202.5404, -208.3720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-191.7582, -198.8738, -201.9220, -202.5050, -208.3158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-191.7134, -198.8491, -201.9374, -202.4758, -208.2662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-191.6710, -198.8341, -201.9465, -202.4573, -208.2060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-191.6313, -198.8110, -201.9593, -202.4376, -208.1573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-191.5785, -198.7736, -201.9854, -202.4211, -208.1025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-191.5123, -198.7309, -202.0264, -202.4263, -208.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-191.4684, -198.7172, -202.0506, -202.4250, -207.9656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-191.4379, -198.7125, -202.0601, -202.3934, -207.9216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-191.4242, -198.7362, -202.0527, -202.3661, -207.8889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-191.4477, -198.7778, -202.0241, -202.3327, -207.8787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-191.4411, -198.8014, -202.0162, -202.3040, -207.8526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-191.4489, -198.8295, -201.9963, -202.2521, -207.8465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-191.4541, -198.8400, -201.9878, -202.2203, -207.8404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-191.4397, -198.8476, -201.9868, -202.1946, -207.8308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-191.4476, -198.8505, -201.9866, -202.1760, -207.8305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-191.4474, -198.8541, -201.9847, -202.1541, -207.8230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-191.4678, -198.8805, -201.9591, -202.1282, -207.8214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-191.4721, -198.9003, -201.9297, -202.0667, -207.8125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-191.5197, -198.9485, -201.8862, -202.0193, -207.8314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-191.5680, -198.9883, -201.8398, -201.9778, -207.8446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-191.6073, -199.0064, -201.8090, -201.9390, -207.8557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-191.6157, -199.0092, -201.7893, -201.9045, -207.8397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-191.6394, -199.0082, -201.7765, -201.9043, -207.8215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-191.6318, -198.9863, -201.7798, -201.9056, -207.7940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-191.6054, -198.9528, -201.7988, -201.9302, -207.7558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-191.5486, -198.8821, -201.8519, -201.9721, -207.7023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-191.4846, -198.7983, -201.9179, -202.0339, -207.6379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-191.4037, -198.7193, -201.9810, -202.0637, -207.5698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-191.4181, -198.6768, -202.0293, -202.1480, -207.5661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-191.4934, -198.6771, -202.0459, -202.2339, -207.6018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-191.5702, -198.6785, -202.0667, -202.3304, -207.6415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-191.6331, -198.6904, -202.0701, -202.3913, -207.6688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-191.6588, -198.6952, -202.0763, -202.4118, -207.6736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-191.6572, -198.6777, -202.0948, -202.4104, -207.6613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-191.6252, -198.6454, -202.1120, -202.3893, -207.6249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-191.5778, -198.5975, -202.1430, -202.3831, -207.5756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-191.5143, -198.5680, -202.1631, -202.3500, -207.5340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.4604, -198.5461, -202.1756, -202.3237, -207.4919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-191.4152, -198.5244, -202.1858, -202.3041, -207.4522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-191.4123, -198.5209, -202.1956, -202.3269, -207.4401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-191.4496, -198.5373, -202.1852, -202.3503, -207.4581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-191.4726, -198.5544, -202.1891, -202.3852, -207.4755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-191.5206, -198.5934, -202.1805, -202.4347, -207.4976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-191.5942, -198.6557, -202.1505, -202.4742, -207.5306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-191.6862, -198.7177, -202.1171, -202.5226, -207.5743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-191.8010, -198.7904, -202.0678, -202.5568, -207.6353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.8992, -198.8682, -202.0086, -202.5681, -207.6825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-192.0102, -198.9433, -201.9554, -202.5930, -207.7503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-192.1058, -199.0167, -201.9193, -202.6371, -207.8053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.2151, -199.0862, -201.8978, -202.7131, -207.8793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.3375, -199.1409, -201.8870, -202.8065, -207.9666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.4825, -199.2001, -201.8687, -202.9039, -208.0637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.6153, -199.2577, -201.8567, -203.0038, -208.1507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-192.6602, -199.2712, -201.8637, -203.0409, -208.1901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-192.7112, -199.2765, -201.8818, -203.1008, -208.2285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-192.7255, -199.2796, -201.8879, -203.1208, -208.2357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-192.7262, -199.2777, -201.8750, -203.0884, -208.2350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-192.7107, -199.2723, -201.8493, -203.0171, -208.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-192.6618, -199.2581, -201.8321, -202.9302, -208.1942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-192.6049, -199.2278, -201.8246, -202.8532, -208.1533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-192.5056, -199.1933, -201.8201, -202.7703, -208.0679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-192.3728, -199.1470, -201.8303, -202.6868, -207.9683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.2084, -199.0893, -201.8420, -202.5818, -207.8546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.0456, -199.0342, -201.8546, -202.4851, -207.7324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-191.8848, -198.9838, -201.8649, -202.3859, -207.6073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-191.7723, -198.9350, -201.8743, -202.3091, -207.5171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-191.6796, -198.9140, -201.8681, -202.2211, -207.4448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-191.6266, -198.9124, -201.8409, -202.1181, -207.3999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-191.6029, -198.9160, -201.8135, -202.0345, -207.3727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-191.5852, -198.9139, -201.7979, -201.9681, -207.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-191.5567, -198.9079, -201.7830, -201.8924, -207.3371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-191.5587, -198.9185, -201.7670, -201.8428, -207.3483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-191.6249, -198.9571, -201.7314, -201.8207, -207.3999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-191.6870, -198.9954, -201.6989, -201.7999, -207.4487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-191.7952, -199.0361, -201.6613, -201.8139, -207.5234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-191.9446, -199.0851, -201.6284, -201.8640, -207.6271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-192.0651, -199.1170, -201.6034, -201.8957, -207.7130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-192.1620, -199.1544, -201.5791, -201.9148, -207.7844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.2615, -199.1881, -201.5564, -201.9586, -207.8499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-192.3344, -199.2268, -201.5252, -201.9763, -207.8932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-192.3609, -199.2229, -201.5323, -202.0180, -207.9090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-192.3668, -199.2079, -201.5435, -202.0299, -207.9103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.4041, -199.2272, -201.5262, -202.0637, -207.9109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.4421, -199.2608, -201.5000, -202.0959, -207.9086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-192.4889, -199.3152, -201.4446, -202.0759, -207.9047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-192.5322, -199.3845, -201.3732, -202.0344, -207.8887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-192.5955, -199.4580, -201.2899, -201.9807, -207.8947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.6615, -199.5203, -201.2083, -201.9215, -207.9121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-192.7219, -199.5784, -201.1224, -201.8487, -207.9339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-192.7576, -199.6329, -201.0530, -201.7764, -207.9419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-192.7376, -199.6418, -201.0167, -201.7054, -207.9273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.7100, -199.6208, -201.0060, -201.6732, -207.9110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-192.6620, -199.5695, -201.0181, -201.6507, -207.8838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-192.6150, -199.5248, -201.0288, -201.6300, -207.8577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.5851, -199.4508, -201.0634, -201.6503, -207.8422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-192.5584, -199.3390, -201.1286, -201.6911, -207.8398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-192.5802, -199.2668, -201.1730, -201.7532, -207.8674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.6240, -199.2066, -201.2055, -201.8090, -207.9065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-192.6004, -199.1235, -201.2583, -201.8235, -207.9062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-192.5134, -198.9954, -201.3578, -201.8582, -207.8596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.4597, -198.8775, -201.4600, -201.9308, -207.8325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-192.4342, -198.7910, -201.5374, -202.0108, -207.8233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-192.4281, -198.7324, -201.5960, -202.0789, -207.8404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.3807, -198.6761, -201.6452, -202.1048, -207.8300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-192.3205, -198.6166, -201.6952, -202.1242, -207.8042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.2814, -198.5826, -201.7248, -202.1258, -207.7984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-192.2196, -198.5529, -201.7338, -202.0914, -207.7659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-192.1323, -198.5140, -201.7549, -202.0506, -207.7175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-192.0533, -198.4814, -201.7741, -202.0117, -207.6810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-191.9641, -198.4682, -201.7789, -201.9596, -207.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.8567, -198.4487, -201.7866, -201.8871, -207.5790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-191.7896, -198.4651, -201.7675, -201.8133, -207.5456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-191.6724, -198.4494, -201.7695, -201.7124, -207.4723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-191.6083, -198.4646, -201.7466, -201.6208, -207.4268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-191.5212, -198.4650, -201.7455, -201.5374, -207.3673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-191.4368, -198.4689, -201.7485, -201.4636, -207.3026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-191.3903, -198.4958, -201.7290, -201.3994, -207.2550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-191.3751, -198.5358, -201.7022, -201.3489, -207.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-191.3738, -198.5874, -201.6672, -201.2996, -207.1945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-191.4074, -198.6503, -201.6236, -201.2651, -207.1852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-191.4027, -198.7249, -201.5783, -201.2089, -207.1510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-191.4515, -198.8030, -201.5240, -201.1726, -207.1499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-191.5341, -198.8799, -201.4690, -201.1584, -207.1681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-191.6509, -198.9651, -201.4028, -201.1462, -207.2129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-191.7959, -199.0556, -201.3289, -201.1340, -207.2748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.9753, -199.1449, -201.2588, -201.1585, -207.3546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-192.1406, -199.2293, -201.1875, -201.1780, -207.4204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-192.3039, -199.2963, -201.1303, -201.2165, -207.4933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-192.4677, -199.3486, -201.0834, -201.2656, -207.5669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-192.5819, -199.3741, -201.0690, -201.3431, -207.6047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-192.6737, -199.3609, -201.0868, -201.4565, -207.6337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.7480, -199.3255, -201.1172, -201.5641, -207.6588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-192.7980, -199.2902, -201.1500, -201.6462, -207.6773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.8404, -199.2488, -201.1862, -201.7329, -207.6908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-192.8289, -199.1850, -201.2496, -201.8156, -207.6755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-192.7665, -199.0814, -201.3435, -201.9034, -207.6286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.7205, -198.9987, -201.4196, -201.9681, -207.6051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-192.6834, -198.8995, -201.5032, -202.0484, -207.5744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-192.7217, -198.8341, -201.5569, -202.1538, -207.5848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-192.7082, -198.7528, -201.6287, -202.2464, -207.5576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-192.6294, -198.6552, -201.7127, -202.3043, -207.4796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-192.6133, -198.5856, -201.7670, -202.3586, -207.4447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-192.6080, -198.5254, -201.8090, -202.4115, -207.4072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.6200, -198.5047, -201.8261, -202.4515, -207.3801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.6416, -198.4792, -201.8438, -202.4999, -207.3531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-192.6522, -198.4764, -201.8417, -202.5233, -207.3131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.7044, -198.4961, -201.8107, -202.5546, -207.2998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-192.7264, -198.5004, -201.7850, -202.5577, -207.2675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-192.7305, -198.5098, -201.7467, -202.5299, -207.2251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.7516, -198.5325, -201.6994, -202.4999, -207.1879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.7897, -198.5679, -201.6389, -202.4700, -207.1588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-192.8463, -198.6447, -201.5485, -202.4151, -207.1515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.9456, -198.7446, -201.4368, -202.3715, -207.1731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-193.0845, -198.8621, -201.3087, -202.3291, -207.2323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.1989, -198.9640, -201.2003, -202.2794, -207.2798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-193.3517, -199.0927, -201.0754, -202.2464, -207.3500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-193.4734, -199.2075, -200.9719, -202.2253, -207.3914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-193.6079, -199.3150, -200.8652, -202.1875, -207.4433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-193.7814, -199.4349, -200.7548, -202.1684, -207.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.9210, -199.5248, -200.6786, -202.1754, -207.6001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.0683, -199.6103, -200.6064, -202.1871, -207.6742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-194.1696, -199.6428, -200.5825, -202.2247, -207.7325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-194.1662, -199.6429, -200.5847, -202.2265, -207.7242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.1518, -199.6328, -200.5932, -202.2377, -207.7039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-194.0351, -199.5647, -200.6442, -202.2242, -207.6315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.8933, -199.4602, -200.7333, -202.2482, -207.5401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-193.6795, -199.3169, -200.8507, -202.2712, -207.3985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-193.4228, -199.1560, -200.9856, -202.2975, -207.2191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.1761, -199.0154, -201.1014, -202.2992, -207.0427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.9537, -198.8886, -201.2036, -202.2884, -206.8819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-192.7625, -198.7549, -201.3077, -202.2839, -206.7486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.5425, -198.6074, -201.4207, -202.2670, -206.5927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-192.3974, -198.5173, -201.4911, -202.2414, -206.4927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.2807, -198.4573, -201.5452, -202.2196, -206.4140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.1557, -198.3954, -201.5990, -202.1950, -206.3282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-192.0893, -198.3349, -201.6425, -202.1833, -206.2902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-192.0109, -198.2567, -201.6978, -202.1690, -206.2527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-191.9781, -198.2124, -201.7211, -202.1514, -206.2453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-191.9895, -198.1991, -201.7217, -202.1516, -206.2651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-191.9921, -198.1945, -201.7155, -202.1431, -206.2736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-192.0533, -198.2203, -201.6861, -202.1397, -206.3363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-192.1126, -198.2412, -201.6600, -202.1282, -206.3941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-192.1878, -198.2804, -201.6165, -202.0869, -206.4596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-192.2445, -198.2988, -201.5890, -202.0535, -206.5011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-192.3381, -198.3435, -201.5461, -202.0281, -206.5599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-192.4491, -198.4212, -201.4853, -202.0012, -206.6323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.5380, -198.4881, -201.4327, -201.9765, -206.6886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.6250, -198.5384, -201.3927, -201.9609, -206.7439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-192.6948, -198.5666, -201.3648, -201.9541, -206.7870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-192.7977, -198.6123, -201.3260, -201.9604, -206.8490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-192.8930, -198.6762, -201.2817, -201.9645, -206.9109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-192.9303, -198.7077, -201.2716, -201.9829, -206.9407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-192.9140, -198.7368, -201.2578, -201.9549, -206.9418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.9370, -198.7665, -201.2304, -201.9222, -206.9773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-192.9353, -198.7790, -201.2152, -201.9161, -206.9810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-192.9881, -198.8137, -201.1780, -201.9206, -207.0254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.9946, -198.8311, -201.1450, -201.8949, -207.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.9169, -198.8128, -201.1338, -201.8365, -206.9794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-192.8486, -198.7781, -201.1318, -201.7947, -206.9291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-192.7162, -198.7343, -201.1430, -201.7118, -206.8364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-192.6512, -198.7092, -201.1488, -201.6848, -206.7955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-192.5489, -198.6621, -201.1666, -201.6464, -206.7313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-192.4536, -198.6244, -201.1742, -201.6056, -206.6599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.3753, -198.5973, -201.1797, -201.5706, -206.6185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.3183, -198.5717, -201.1865, -201.5562, -206.5967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.3313, -198.5784, -201.1661, -201.5573, -206.6174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-192.3954, -198.5954, -201.1420, -201.5921, -206.6728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-192.4254, -198.5865, -201.1394, -201.6219, -206.6955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-192.4242, -198.5661, -201.1388, -201.6249, -206.6980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-192.4400, -198.5523, -201.1381, -201.6337, -206.7151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.4572, -198.5501, -201.1376, -201.6476, -206.7358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.4677, -198.5440, -201.1339, -201.6300, -206.7706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-192.5016, -198.5463, -201.1271, -201.6280, -206.8108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.5799, -198.5852, -201.0906, -201.6231, -206.8718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-192.6592, -198.6264, -201.0534, -201.6008, -206.9341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-192.7371, -198.6716, -201.0243, -201.5900, -206.9968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-192.7587, -198.6856, -201.0306, -201.5801, -207.0214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-192.7399, -198.6621, -201.0526, -201.5487, -207.0251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.6834, -198.6183, -201.0857, -201.5041, -207.0072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.6010, -198.5545, -201.1239, -201.4434, -206.9593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.4616, -198.4706, -201.1823, -201.3691, -206.8731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-192.4073, -198.4287, -201.2004, -201.3092, -206.8439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.4354, -198.4162, -201.1894, -201.2741, -206.8640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.4714, -198.4187, -201.1654, -201.2346, -206.8817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-192.4764, -198.4105, -201.1495, -201.1875, -206.8701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.4367, -198.3797, -201.1463, -201.1244, -206.8228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.3448, -198.3416, -201.1558, -201.0425, -206.7324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-192.2496, -198.2920, -201.1842, -200.9946, -206.6441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-192.1901, -198.2231, -201.2194, -200.9762, -206.5764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-192.1278, -198.1560, -201.2553, -200.9665, -206.5101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-192.0913, -198.0958, -201.2913, -200.9662, -206.4626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-192.1395, -198.0879, -201.2770, -200.9701, -206.4596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-192.2311, -198.0984, -201.2624, -201.0128, -206.4864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.3001, -198.0991, -201.2569, -201.0607, -206.4968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-192.3609, -198.0978, -201.2592, -201.1249, -206.4930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-192.4727, -198.1017, -201.2585, -201.2086, -206.5270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-192.5979, -198.1227, -201.2530, -201.3073, -206.5688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-192.7067, -198.1431, -201.2510, -201.3958, -206.6075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.8088, -198.1602, -201.2569, -201.4884, -206.6505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-192.9611, -198.2111, -201.2389, -201.5899, -206.7301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-193.0337, -198.2237, -201.2500, -201.6668, -206.7459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.0911, -198.2315, -201.2655, -201.7347, -206.7577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-193.1052, -198.2070, -201.2954, -201.7811, -206.7387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.0791, -198.1841, -201.3248, -201.8153, -206.6825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.0198, -198.1637, -201.3586, -201.8451, -206.6147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-192.9539, -198.1574, -201.3780, -201.8607, -206.5323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-192.9159, -198.1663, -201.3820, -201.8600, -206.4797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.8897, -198.1791, -201.3764, -201.8668, -206.4335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.8759, -198.2120, -201.3596, -201.8738, -206.3981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.8523, -198.2344, -201.3566, -201.8952, -206.3576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.8247, -198.2748, -201.3249, -201.8628, -206.3250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.8182, -198.3091, -201.3001, -201.8606, -206.2981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-192.8042, -198.3294, -201.2801, -201.8633, -206.2780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.8378, -198.3701, -201.2448, -201.8875, -206.2857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.8326, -198.3859, -201.2299, -201.9030, -206.2690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.8133, -198.3627, -201.2300, -201.9042, -206.2550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-192.7803, -198.3357, -201.2368, -201.8992, -206.2332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.7828, -198.3093, -201.2454, -201.9154, -206.2450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.7886, -198.2866, -201.2510, -201.9353, -206.2640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-192.7640, -198.2568, -201.2633, -201.9431, -206.2653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.6926, -198.2165, -201.2855, -201.9185, -206.2271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-192.5679, -198.1691, -201.3129, -201.8397, -206.1657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.3881, -198.1222, -201.3425, -201.7292, -206.0572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-192.2162, -198.0820, -201.3633, -201.6100, -205.9496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.0884, -198.0859, -201.3589, -201.4886, -205.8724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.0029, -198.1077, -201.3487, -201.3930, -205.8213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-191.9294, -198.1120, -201.3452, -201.3142, -205.7639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.9267, -198.1348, -201.3302, -201.2822, -205.7430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-191.9374, -198.1421, -201.3237, -201.2659, -205.7341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.0524, -198.1912, -201.2803, -201.2859, -205.8106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.1906, -198.2658, -201.2146, -201.2911, -205.8999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-192.3525, -198.3554, -201.1283, -201.2776, -206.0014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.4696, -198.4227, -201.0592, -201.2574, -206.0704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.5506, -198.4726, -201.0057, -201.2287, -206.1141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.6949, -198.5662, -200.9264, -201.2242, -206.1975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.8094, -198.6385, -200.8689, -201.2173, -206.2656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-192.8881, -198.6799, -200.8305, -201.2104, -206.3088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-192.8867, -198.6947, -200.8120, -201.1825, -206.2924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.8790, -198.6998, -200.8084, -201.1628, -206.2883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-192.8877, -198.7422, -200.7786, -201.1235, -206.2899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.8770, -198.7751, -200.7527, -201.0675, -206.2887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-192.8316, -198.8015, -200.7408, -201.0209, -206.2614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.7827, -198.8093, -200.7410, -200.9872, -206.2408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-192.7833, -198.8356, -200.7306, -200.9753, -206.2580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-192.8380, -198.8705, -200.7137, -200.9838, -206.3167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.7964, -198.8703, -200.7190, -200.9547, -206.3029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-192.7487, -198.8513, -200.7384, -200.9340, -206.2851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.7368, -198.8349, -200.7590, -200.9561, -206.2942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.7183, -198.8059, -200.7892, -201.0005, -206.2883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-192.7307, -198.7859, -200.8170, -201.0591, -206.3108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-192.7699, -198.7728, -200.8398, -201.1355, -206.3534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.8630, -198.7774, -200.8485, -201.2327, -206.4338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.8931, -198.7702, -200.8668, -201.3014, -206.4714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-192.8523, -198.7339, -200.9071, -201.3407, -206.4531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-192.7951, -198.6802, -200.9551, -201.3838, -206.4146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.7004, -198.6196, -201.0071, -201.4218, -206.3304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-192.6051, -198.5795, -201.0541, -201.4610, -206.2443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-192.5975, -198.5725, -201.0770, -201.5310, -206.2134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-192.5234, -198.5547, -201.1020, -201.5478, -206.1353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.4657, -198.5547, -201.1099, -201.5570, -206.0666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.3703, -198.5210, -201.1411, -201.5603, -205.9686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.3355, -198.5534, -201.1293, -201.5467, -205.9124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-192.3647, -198.6230, -201.0920, -201.5459, -205.9032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.4090, -198.6800, -201.0692, -201.5734, -205.9086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-192.4743, -198.7350, -201.0471, -201.6239, -205.9248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-192.5322, -198.7750, -201.0321, -201.6696, -205.9370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.6104, -198.8114, -201.0171, -201.7279, -205.9663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.6658, -198.8257, -201.0231, -201.7950, -205.9837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.7045, -198.8555, -201.0200, -201.8369, -205.9867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-192.7966, -198.8980, -201.0203, -201.9234, -206.0322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.9090, -198.9353, -201.0264, -202.0254, -206.0970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-193.0748, -198.9836, -201.0174, -202.1399, -206.1990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.2379, -199.0341, -201.0079, -202.2584, -206.2961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.3740, -199.0799, -200.9881, -202.3425, -206.3866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.4397, -199.0797, -200.9928, -202.4022, -206.4320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.4834, -199.0642, -200.9987, -202.4394, -206.4655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-193.5168, -199.0576, -201.0025, -202.4666, -206.4898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-193.4290, -198.9939, -201.0462, -202.4429, -206.4319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-193.3195, -198.9402, -201.0778, -202.3844, -206.3535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-193.2123, -198.8787, -201.1140, -202.3234, -206.2898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-193.1060, -198.8457, -201.1336, -202.2465, -206.2104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-192.9271, -198.8020, -201.1539, -202.1163, -206.0670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.7220, -198.7366, -201.1906, -201.9794, -205.9235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-192.6338, -198.7314, -201.1795, -201.8558, -205.8692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-192.4906, -198.7005, -201.2000, -201.7458, -205.7723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.3453, -198.6631, -201.2237, -201.6563, -205.6643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.2827, -198.6469, -201.2340, -201.6076, -205.6210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.2571, -198.6451, -201.2367, -201.5883, -205.5981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-192.2913, -198.6675, -201.2151, -201.5816, -205.6253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.3405, -198.6855, -201.1911, -201.5880, -205.6590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-192.3634, -198.6922, -201.1645, -201.5666, -205.6707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.4460, -198.7195, -201.1148, -201.5547, -205.7270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-192.5302, -198.7396, -201.0706, -201.5481, -205.7881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.5766, -198.7602, -201.0299, -201.5244, -205.8268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.6353, -198.7687, -200.9918, -201.5021, -205.8884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.6638, -198.8044, -200.9359, -201.4476, -205.9193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-192.6198, -198.8079, -200.9046, -201.3739, -205.8890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-192.5969, -198.8277, -200.8628, -201.3159, -205.8682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-192.6387, -198.8644, -200.8201, -201.2926, -205.8890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-192.6463, -198.8691, -200.8037, -201.2915, -205.8696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.6803, -198.8790, -200.7832, -201.2931, -205.8850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.6917, -198.8923, -200.7557, -201.2734, -205.8926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.6975, -198.9007, -200.7287, -201.2409, -205.8924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-192.7148, -198.8804, -200.7327, -201.2575, -205.9003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.6884, -198.8517, -200.7457, -201.2585, -205.8817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-192.6857, -198.8242, -200.7659, -201.2843, -205.8845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.6503, -198.7772, -200.7922, -201.2864, -205.8568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.5606, -198.7003, -200.8444, -201.2872, -205.7778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-192.4499, -198.5973, -200.9112, -201.2821, -205.6893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.3791, -198.5236, -200.9662, -201.2950, -205.6289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.3494, -198.4620, -201.0115, -201.3241, -205.5979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-192.4084, -198.4450, -201.0212, -201.3706, -205.6372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.4720, -198.4318, -201.0253, -201.4194, -205.6756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-192.5088, -198.4270, -201.0211, -201.4488, -205.6871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.6148, -198.4363, -201.0121, -201.5180, -205.7448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.6889, -198.4354, -201.0149, -201.5869, -205.7729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.7755, -198.4377, -201.0172, -201.6682, -205.8228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.8865, -198.4603, -201.0137, -201.7618, -205.8924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.9305, -198.4616, -201.0179, -201.8149, -205.9108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.0164, -198.4698, -201.0108, -201.8768, -205.9477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.0657, -198.4620, -201.0141, -201.9284, -205.9611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.1320, -198.4591, -201.0093, -201.9767, -205.9957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-193.1884, -198.4550, -201.0004, -201.9974, -206.0352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.2653, -198.4912, -200.9675, -202.0059, -206.0885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.3580, -198.5296, -200.9335, -202.0224, -206.1521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.4679, -198.5736, -200.8902, -202.0375, -206.2278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-193.5660, -198.6202, -200.8432, -202.0303, -206.2940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.6410, -198.6571, -200.8018, -202.0180, -206.3501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-193.6767, -198.6883, -200.7641, -201.9873, -206.3698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-193.6607, -198.6977, -200.7461, -201.9479, -206.3386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.6502, -198.7272, -200.7198, -201.9062, -206.3111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-193.6264, -198.7661, -200.6795, -201.8276, -206.2758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-193.5422, -198.8098, -200.6403, -201.7044, -206.1980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.4659, -198.8404, -200.6124, -201.6049, -206.1244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-193.4119, -198.8855, -200.5760, -201.5229, -206.0717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-193.3447, -198.9080, -200.5539, -201.4397, -206.0179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-193.2233, -198.8990, -200.5628, -201.3630, -205.9234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-193.0628, -198.8380, -200.6101, -201.3155, -205.8073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.8469, -198.7535, -200.6649, -201.2314, -205.6538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-192.6672, -198.6631, -200.7208, -201.1703, -205.5351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.5274, -198.5896, -200.7644, -201.1218, -205.4364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-192.4142, -198.5330, -200.7915, -201.0620, -205.3671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-192.3463, -198.4897, -200.8059, -201.0185, -205.3367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.3294, -198.4490, -200.8104, -200.9946, -205.3436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.3596, -198.4277, -200.8001, -200.9835, -205.3915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.4471, -198.4216, -200.7842, -200.9982, -205.4779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.5172, -198.4144, -200.7803, -201.0152, -205.5488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-192.6093, -198.4183, -200.7752, -201.0563, -205.6289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.7907, -198.4437, -200.7599, -201.1550, -205.7745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.9561, -198.4737, -200.7449, -201.2419, -205.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.0618, -198.5016, -200.7326, -201.2884, -205.9786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.1312, -198.5215, -200.7326, -201.3297, -206.0385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-193.2205, -198.5583, -200.7138, -201.3581, -206.1077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-193.3050, -198.6097, -200.6871, -201.3807, -206.1719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.3907, -198.6461, -200.6734, -201.4201, -206.2477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.4579, -198.6687, -200.6643, -201.4607, -206.3144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-193.4564, -198.6648, -200.6784, -201.4808, -206.3310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-193.4300, -198.6598, -200.6927, -201.4681, -206.3181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.3967, -198.6511, -200.7048, -201.4439, -206.2942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.3366, -198.6443, -200.7120, -201.3946, -206.2545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.2376, -198.6437, -200.7069, -201.3063, -206.1756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.1390, -198.6319, -200.7116, -201.2251, -206.0990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-193.0874, -198.6402, -200.6958, -201.1528, -206.0525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.0618, -198.6418, -200.6833, -201.1049, -206.0309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.9976, -198.6269, -200.6880, -201.0548, -205.9718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-192.8675, -198.5810, -200.7226, -200.9986, -205.8540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-192.8481, -198.5911, -200.7204, -200.9833, -205.8089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.8549, -198.6101, -200.6990, -200.9652, -205.7741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.8458, -198.6308, -200.6759, -200.9372, -205.7378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-192.8602, -198.6591, -200.6526, -200.9254, -205.7220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.8465, -198.6637, -200.6441, -200.9148, -205.6813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.7603, -198.6439, -200.6596, -200.8851, -205.5915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.6805, -198.6091, -200.6859, -200.8797, -205.5119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.5689, -198.5547, -200.7265, -200.8685, -205.4070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.4797, -198.5011, -200.7688, -200.8765, -205.3275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.4538, -198.4757, -200.7889, -200.8986, -205.3061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.5051, -198.4886, -200.7875, -200.9574, -205.3434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-192.5893, -198.5005, -200.7728, -201.0286, -205.3896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.6740, -198.4769, -200.7797, -201.1376, -205.4292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-192.8545, -198.4881, -200.7648, -201.2833, -205.5418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.0267, -198.5106, -200.7388, -201.4138, -205.6577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.2088, -198.5416, -200.7147, -201.5611, -205.7791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.3685, -198.5866, -200.6862, -201.6742, -205.8916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-193.5435, -198.6539, -200.6475, -201.7853, -206.0082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-193.7049, -198.7240, -200.6059, -201.8819, -206.1259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-193.8304, -198.7911, -200.5626, -201.9393, -206.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.9481, -198.8751, -200.5015, -201.9750, -206.2991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.0178, -198.9408, -200.4451, -201.9750, -206.3422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-194.0227, -198.9879, -200.4057, -201.9345, -206.3392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-193.9977, -199.0247, -200.3790, -201.8867, -206.3129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.8925, -199.0387, -200.3754, -201.8107, -206.2239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.7837, -199.0445, -200.3761, -201.7272, -206.1355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-193.7271, -199.0492, -200.3834, -201.6895, -206.0876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.6712, -199.0550, -200.3882, -201.6476, -206.0445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.6555, -199.0611, -200.3941, -201.6358, -206.0440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-193.6499, -199.0642, -200.4137, -201.6499, -206.0475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.6349, -199.0316, -200.4637, -201.7005, -206.0533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.6175, -198.9790, -200.5224, -201.7642, -206.0701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-193.6224, -198.9088, -200.5909, -201.8596, -206.0893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.6113, -198.8598, -200.6441, -201.9183, -206.0850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.5986, -198.8055, -200.6850, -201.9634, -206.0781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.5534, -198.7451, -200.7324, -201.9918, -206.0291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.5008, -198.7059, -200.7536, -201.9759, -205.9769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.4392, -198.6482, -200.7866, -201.9677, -205.9222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.4227, -198.6016, -200.8126, -201.9847, -205.9094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.3245, -198.5267, -200.8580, -201.9555, -205.8243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-193.2329, -198.4556, -200.9067, -201.9263, -205.7428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.1767, -198.4085, -200.9349, -201.8974, -205.6869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-193.0805, -198.3623, -200.9786, -201.8574, -205.5928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-193.0279, -198.3408, -201.0110, -201.8402, -205.5422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.0543, -198.3468, -201.0154, -201.8443, -205.5534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-193.1163, -198.3598, -201.0149, -201.8611, -205.5932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-193.2032, -198.3689, -201.0045, -201.8830, -205.6528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.3844, -198.4034, -200.9758, -201.9717, -205.7727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.5732, -198.4395, -200.9421, -202.0483, -205.9043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.7058, -198.4528, -200.9224, -202.0991, -205.9875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.8250, -198.4828, -200.8909, -202.1383, -206.0654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-193.9017, -198.5191, -200.8491, -202.1371, -206.1200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-193.9599, -198.5641, -200.8053, -202.1140, -206.1566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-193.9360, -198.6241, -200.7547, -202.0234, -206.1179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.8461, -198.6460, -200.7230, -201.9097, -206.0328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.7482, -198.6946, -200.6668, -201.7631, -205.9278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.6325, -198.7280, -200.6162, -201.5954, -205.8140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-193.5444, -198.7621, -200.5657, -201.4423, -205.7093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.4379, -198.7713, -200.5375, -201.3009, -205.6005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-193.4321, -198.8102, -200.4911, -201.2117, -205.5741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.4295, -198.8499, -200.4439, -201.1273, -205.5493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.3971, -198.8643, -200.4011, -201.0248, -205.5057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.4143, -198.8828, -200.3630, -200.9670, -205.4945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.4509, -198.8905, -200.3365, -200.9465, -205.5066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.5328, -198.9153, -200.2993, -200.9475, -205.5503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.6170, -198.9382, -200.2557, -200.9345, -205.6006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-193.6733, -198.9243, -200.2405, -200.9446, -205.6239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.7521, -198.9172, -200.2256, -200.9690, -205.6760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.8535, -198.9073, -200.2192, -201.0245, -205.7389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.8722, -198.8654, -200.2376, -201.0611, -205.7385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.8747, -198.8340, -200.2462, -201.0701, -205.7326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.8900, -198.8040, -200.2545, -201.0841, -205.7327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.8921, -198.7473, -200.2818, -201.1060, -205.7231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.8994, -198.6830, -200.3160, -201.1478, -205.7112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.9689, -198.6625, -200.3226, -201.1997, -205.7392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.0847, -198.6941, -200.2923, -201.2392, -205.8015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.1415, -198.7241, -200.2569, -201.2305, -205.8201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.1448, -198.7196, -200.2438, -201.2143, -205.7994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.1388, -198.7042, -200.2417, -201.2170, -205.7723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.0585, -198.6575, -200.2628, -201.2160, -205.6770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.0104, -198.6462, -200.2585, -201.2081, -205.5949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-193.9746, -198.6452, -200.2507, -201.1985, -205.5218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-193.9461, -198.6542, -200.2378, -201.1790, -205.4672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.8456, -198.6390, -200.2417, -201.1442, -205.3518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.7664, -198.6221, -200.2553, -201.1399, -205.2568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.6596, -198.5948, -200.2777, -201.1230, -205.1389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-193.5638, -198.5761, -200.3004, -201.1155, -205.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.4401, -198.5407, -200.3251, -201.1026, -204.8967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-193.3104, -198.5018, -200.3493, -201.0836, -204.7584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.2174, -198.4836, -200.3564, -201.0810, -204.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.1304, -198.4885, -200.3487, -201.0584, -204.5484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.0221, -198.4951, -200.3512, -201.0308, -204.4377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.8917, -198.5092, -200.3449, -200.9593, -204.3287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.7339, -198.5002, -200.3542, -200.8846, -204.1999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-192.5788, -198.4687, -200.3720, -200.7963, -204.0818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.5215, -198.4631, -200.3652, -200.7580, -204.0383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.6135, -198.5079, -200.3153, -200.7675, -204.1092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.7656, -198.5618, -200.2629, -200.8210, -204.2186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-192.9276, -198.6178, -200.2073, -200.8774, -204.3473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.1256, -198.6780, -200.1472, -200.9458, -204.5157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.4278, -198.7842, -200.0580, -201.0485, -204.7561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.6555, -198.8605, -200.0070, -201.1448, -204.9371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-193.9535, -198.9645, -199.9404, -201.2694, -205.1590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-194.2678, -199.0664, -199.8685, -201.3859, -205.4062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.4929, -199.1452, -199.8123, -201.4574, -205.5876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.6896, -199.2080, -199.7725, -201.5252, -205.7541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.8604, -199.2819, -199.7166, -201.5584, -205.8967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.9841, -199.3300, -199.6884, -201.5882, -206.0070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.1322, -199.3704, -199.6542, -201.6305, -206.1479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-195.2178, -199.3997, -199.6444, -201.6634, -206.2350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.2493, -199.4032, -199.6660, -201.7116, -206.2781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.2232, -199.3830, -199.7064, -201.7528, -206.2690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-195.0849, -199.3396, -199.7507, -201.7176, -206.1700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-194.9377, -199.3084, -199.7862, -201.6804, -206.0510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.7112, -199.2355, -199.8391, -201.5962, -205.8741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-194.4614, -199.1474, -199.9010, -201.5053, -205.6695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.2659, -199.0918, -199.9466, -201.4271, -205.5024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-194.1062, -199.0606, -199.9784, -201.3601, -205.3604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.9621, -199.0457, -199.9967, -201.2965, -205.2254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.8432, -199.0373, -200.0128, -201.2563, -205.1056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-193.7669, -199.0439, -200.0223, -201.2404, -205.0126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-193.6813, -199.0363, -200.0423, -201.2242, -204.9150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-193.6553, -199.0650, -200.0310, -201.2094, -204.8654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.5728, -199.0581, -200.0442, -201.1796, -204.7787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.4755, -199.0269, -200.0724, -201.1563, -204.6868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.4474, -199.0003, -200.0945, -201.1746, -204.6555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.4103, -198.9649, -200.1219, -201.1873, -204.6250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-193.3456, -198.9199, -200.1628, -201.1765, -204.5952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.3016, -198.8645, -200.2096, -201.1824, -204.5684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.2886, -198.8180, -200.2423, -201.1912, -204.5574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.3059, -198.7790, -200.2665, -201.2100, -204.5772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.3334, -198.7172, -200.3098, -201.2633, -204.6079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.3769, -198.6510, -200.3565, -201.3393, -204.6383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-193.4746, -198.6199, -200.3698, -201.3954, -204.7131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.5169, -198.5655, -200.4079, -201.4348, -204.7516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-193.5826, -198.5365, -200.4372, -201.4863, -204.8060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.6896, -198.5478, -200.4427, -201.5377, -204.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.7899, -198.5678, -200.4360, -201.5610, -204.9826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.8913, -198.5984, -200.4239, -201.5765, -205.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.9377, -198.6034, -200.4247, -201.5779, -205.1126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.0400, -198.6234, -200.4129, -201.6093, -205.1920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.1060, -198.6464, -200.3978, -201.6087, -205.2381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.1428, -198.6758, -200.3666, -201.5627, -205.2622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-194.1912, -198.7038, -200.3323, -201.5187, -205.2938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.2412, -198.7248, -200.3131, -201.4958, -205.3461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.3268, -198.7642, -200.2788, -201.4856, -205.4216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.4445, -198.8158, -200.2413, -201.4959, -205.5181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.5419, -198.8796, -200.1918, -201.4707, -205.6043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.5969, -198.9197, -200.1565, -201.4411, -205.6555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.5624, -198.9246, -200.1437, -201.3923, -205.6290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.5360, -198.9213, -200.1413, -201.3708, -205.5951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-194.3889, -198.8760, -200.1639, -201.2973, -205.4812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.2257, -198.8232, -200.1911, -201.2141, -205.3515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.1498, -198.7975, -200.1977, -201.1723, -205.2870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.1220, -198.7965, -200.1914, -201.1428, -205.2703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-194.0771, -198.7918, -200.1869, -201.1165, -205.2314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.1174, -198.7960, -200.1701, -201.1499, -205.2615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-194.2307, -198.8217, -200.1448, -201.2097, -205.3455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.3388, -198.8427, -200.1183, -201.2686, -205.4252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.3717, -198.8269, -200.1166, -201.3148, -205.4461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.4194, -198.8078, -200.1125, -201.3828, -205.4613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.4421, -198.7789, -200.1227, -201.4475, -205.4591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.4066, -198.7378, -200.1452, -201.4777, -205.4222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.3562, -198.6909, -200.1728, -201.5023, -205.3652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.3006, -198.6393, -200.1990, -201.5256, -205.3012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.2543, -198.6104, -200.2018, -201.5135, -205.2494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-194.2031, -198.5778, -200.2111, -201.5045, -205.1990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.1167, -198.5383, -200.2238, -201.4645, -205.1172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-194.0305, -198.4955, -200.2293, -201.4201, -205.0427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.9533, -198.4773, -200.2254, -201.3704, -204.9779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.9356, -198.4701, -200.2310, -201.3715, -204.9467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-193.8995, -198.4611, -200.2361, -201.3589, -204.9006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.8989, -198.4562, -200.2356, -201.3688, -204.8805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.9675, -198.4911, -200.2062, -201.3839, -204.9163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.9897, -198.5037, -200.1814, -201.3528, -204.9172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-194.0216, -198.5173, -200.1644, -201.3383, -204.9341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-194.0105, -198.5162, -200.1636, -201.3189, -204.9101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.0597, -198.5328, -200.1397, -201.3185, -204.9463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.1362, -198.5643, -200.1013, -201.3173, -204.9924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.1893, -198.5819, -200.0792, -201.3143, -205.0215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.2041, -198.6116, -200.0568, -201.2798, -205.0167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-194.1978, -198.6038, -200.0546, -201.2555, -204.9986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-194.1234, -198.5798, -200.0639, -201.2034, -204.9328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.0899, -198.5813, -200.0653, -201.1720, -204.8958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.0790, -198.5665, -200.0781, -201.1820, -204.8719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.0825, -198.5820, -200.0680, -201.1672, -204.8412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.1121, -198.6256, -200.0401, -201.1468, -204.8368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.1746, -198.6658, -200.0191, -201.1599, -204.8685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.2095, -198.7102, -200.0024, -201.1597, -204.8689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.1293, -198.6797, -200.0364, -201.1500, -204.7941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.0296, -198.6453, -200.0744, -201.1429, -204.7099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-193.9206, -198.6162, -200.1079, -201.1291, -204.6041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.8273, -198.5905, -200.1355, -201.1233, -204.5030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.7506, -198.5622, -200.1549, -201.1111, -204.4351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-193.7437, -198.5684, -200.1457, -201.1244, -204.4094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.7309, -198.5765, -200.1379, -201.1313, -204.3774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.7956, -198.6136, -200.1086, -201.1733, -204.4025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.8510, -198.6457, -200.0853, -201.2084, -204.4303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.9843, -198.6911, -200.0435, -201.2717, -204.5286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-194.0628, -198.7123, -200.0285, -201.3230, -204.5838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.1324, -198.7325, -200.0107, -201.3643, -204.6295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.1926, -198.7465, -200.0025, -201.4304, -204.6646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-194.1038, -198.7150, -200.0321, -201.4245, -204.5779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.0405, -198.6771, -200.0666, -201.4406, -204.5111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.0017, -198.6555, -200.0748, -201.4326, -204.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.9386, -198.5933, -200.1140, -201.4606, -204.4362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-193.9135, -198.5253, -200.1538, -201.5105, -204.4324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.8928, -198.4795, -200.1711, -201.5177, -204.4324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.8829, -198.4176, -200.2001, -201.5506, -204.4401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-193.8959, -198.3949, -200.2157, -201.5773, -204.4607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.8811, -198.3756, -200.2214, -201.5778, -204.4700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.8958, -198.3713, -200.2119, -201.5880, -204.4933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-193.9658, -198.3834, -200.1735, -201.6097, -204.5663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.9783, -198.3891, -200.1479, -201.5977, -204.5956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.0033, -198.4095, -200.0998, -201.5631, -204.6416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-194.0113, -198.4379, -200.0511, -201.5141, -204.6681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.0197, -198.4765, -200.0066, -201.4626, -204.6981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.0157, -198.5190, -199.9658, -201.3955, -204.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.9840, -198.5521, -199.9391, -201.3215, -204.7003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.8824, -198.5530, -199.9487, -201.2551, -204.6186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.7047, -198.5249, -199.9812, -201.1699, -204.4697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.5255, -198.4819, -200.0304, -201.1016, -204.3185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.3099, -198.4186, -200.0888, -201.0083, -204.1443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.1422, -198.3634, -200.1475, -200.9477, -203.9931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-192.9972, -198.3265, -200.1844, -200.8805, -203.8632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-192.9630, -198.3322, -200.1923, -200.8597, -203.8145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.0649, -198.3907, -200.1417, -200.8580, -203.8786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.1971, -198.4390, -200.0993, -200.8867, -203.9559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.2682, -198.4587, -200.0731, -200.8754, -203.9917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.3418, -198.4672, -200.0607, -200.8856, -204.0370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.4145, -198.4866, -200.0407, -200.8867, -204.0822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.4619, -198.4993, -200.0265, -200.8689, -204.1109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.5122, -198.5321, -199.9907, -200.8267, -204.1450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-193.6120, -198.5773, -199.9498, -200.8228, -204.2073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.6242, -198.6169, -199.9125, -200.7570, -204.2003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.6938, -198.6659, -199.8659, -200.7211, -204.2338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.7575, -198.7134, -199.8203, -200.6856, -204.2676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.8138, -198.7218, -199.8018, -200.6848, -204.2958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.8228, -198.6980, -199.8141, -200.6941, -204.2908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.7957, -198.6414, -199.8533, -200.7161, -204.2559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-193.7574, -198.5815, -199.8914, -200.7362, -204.2119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.6622, -198.5140, -199.9354, -200.7140, -204.1281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.5547, -198.4510, -199.9803, -200.6868, -204.0375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-193.4380, -198.4001, -200.0157, -200.6390, -203.9480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-193.3373, -198.3568, -200.0463, -200.6022, -203.8682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.3345, -198.3563, -200.0540, -200.6022, -203.8503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-193.4117, -198.3822, -200.0400, -200.6348, -203.8898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.4079, -198.3629, -200.0526, -200.6552, -203.8622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.4260, -198.3387, -200.0659, -200.7031, -203.8541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.4808, -198.3461, -200.0558, -200.7369, -203.8714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-193.5775, -198.3676, -200.0293, -200.7841, -203.9119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.7252, -198.4039, -199.9896, -200.8529, -204.0038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-193.9052, -198.4544, -199.9449, -200.9400, -204.1202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.1377, -198.5236, -199.8949, -201.0586, -204.2782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.3457, -198.6054, -199.8358, -201.1448, -204.4144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.4721, -198.6689, -199.7793, -201.1899, -204.4918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.5438, -198.7232, -199.7214, -201.1885, -204.5200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-194.5635, -198.7652, -199.6829, -201.1808, -204.5047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-194.5436, -198.8180, -199.6473, -201.1456, -204.4557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.4700, -198.8607, -199.6295, -201.0909, -204.3801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.4022, -198.8983, -199.6072, -201.0259, -204.3123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.2415, -198.8917, -199.6195, -200.9396, -204.1855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.1270, -198.8898, -199.6305, -200.8964, -204.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.0337, -198.8960, -199.6279, -200.8477, -204.0248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-193.9497, -198.9001, -199.6284, -200.7964, -203.9710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.9045, -198.8791, -199.6381, -200.7907, -203.9485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-193.9104, -198.8648, -199.6350, -200.7981, -203.9669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.0454, -198.8825, -199.6048, -200.8614, -204.0855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.2417, -198.9345, -199.5494, -200.9351, -204.2501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-194.4380, -198.9877, -199.4965, -201.0101, -204.4140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.6450, -199.0492, -199.4381, -201.0815, -204.5884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.8235, -199.0976, -199.3999, -201.1622, -204.7414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.9229, -199.1074, -199.3885, -201.2164, -204.8296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.9529, -199.0931, -199.4027, -201.2642, -204.8509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.0356, -199.0907, -199.4123, -201.3423, -204.9089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-195.0745, -199.0768, -199.4258, -201.3865, -204.9387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-195.0620, -199.0362, -199.4584, -201.4308, -204.9348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.0073, -198.9829, -199.4916, -201.4399, -204.9070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.9858, -198.9219, -199.5316, -201.4898, -204.9007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.9744, -198.8903, -199.5463, -201.5069, -204.9040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-194.8034, -198.8353, -199.5977, -201.4462, -204.7828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.6289, -198.7737, -199.6565, -201.4022, -204.6487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.4237, -198.7170, -199.7150, -201.3350, -204.4986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.2500, -198.6825, -199.7663, -201.2756, -204.3679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.1009, -198.6661, -199.8048, -201.2179, -204.2484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.0297, -198.6690, -199.8206, -201.1854, -204.1912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.9113, -198.6543, -199.8449, -201.1294, -204.0898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-193.7813, -198.6660, -199.8580, -201.0463, -203.9769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.6897, -198.6822, -199.8589, -200.9796, -203.8953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.6099, -198.7052, -199.8477, -200.9048, -203.8339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.5495, -198.7079, -199.8452, -200.8586, -203.7853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.5502, -198.7043, -199.8540, -200.8775, -203.7874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.5924, -198.7140, -199.8507, -200.9009, -203.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.6868, -198.7395, -199.8300, -200.9453, -203.8901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.7814, -198.7529, -199.8167, -200.9929, -203.9560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-193.9301, -198.7939, -199.7870, -201.0495, -204.0747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-193.9918, -198.7935, -199.7835, -201.0861, -204.1204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-194.1268, -198.8078, -199.7682, -201.1576, -204.2117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.3229, -198.8246, -199.7387, -201.2606, -204.3494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.5401, -198.8606, -199.6949, -201.3551, -204.5137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.7213, -198.9062, -199.6389, -201.3986, -204.6533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.8595, -198.9736, -199.5704, -201.3928, -204.7654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-195.0271, -199.0647, -199.4958, -201.4044, -204.9000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.0798, -199.1054, -199.4588, -201.3876, -204.9329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.0251, -199.1065, -199.4342, -201.3172, -204.8767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.9362, -199.0930, -199.4118, -201.2282, -204.7950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-194.8326, -199.0737, -199.3942, -201.1492, -204.6936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-194.7745, -199.0563, -199.3719, -201.1062, -204.6175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-194.6470, -199.0270, -199.3588, -201.0148, -204.4941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-194.5723, -199.0268, -199.3345, -200.9462, -204.4102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.4883, -199.0171, -199.3163, -200.8760, -204.3231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-194.3622, -199.0026, -199.3100, -200.7803, -204.1963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.2604, -198.9737, -199.3145, -200.7179, -204.0915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.1572, -198.9332, -199.3351, -200.6788, -203.9917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.9827, -198.8860, -199.3690, -200.5985, -203.8466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.8784, -198.8520, -199.3959, -200.5671, -203.7459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-193.8097, -198.8326, -199.4104, -200.5486, -203.6699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.8186, -198.8273, -199.4130, -200.5751, -203.6518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.8524, -198.8122, -199.4239, -200.6421, -203.6483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.9634, -198.8317, -199.4079, -200.7329, -203.7026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-194.1306, -198.8830, -199.3632, -200.8212, -203.8061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-194.3419, -198.9402, -199.3119, -200.9472, -203.9468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-194.5486, -198.9916, -199.2767, -201.0841, -204.0828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.7241, -199.0250, -199.2473, -201.1981, -204.1977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-194.7795, -199.0282, -199.2360, -201.2421, -204.2251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.7844, -199.0080, -199.2476, -201.2773, -204.2083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.8237, -199.0039, -199.2426, -201.3151, -204.2184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.8077, -198.9872, -199.2524, -201.3281, -204.1919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-194.8022, -198.9696, -199.2590, -201.3369, -204.1733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-194.7742, -198.9391, -199.2687, -201.3216, -204.1517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.7520, -198.9113, -199.2769, -201.3032, -204.1371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.7002, -198.8676, -199.2755, -201.2529, -204.1091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.7391, -198.8387, -199.2670, -201.2640, -204.1431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.8068, -198.8136, -199.2590, -201.2978, -204.1943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.8327, -198.7825, -199.2678, -201.3238, -204.2130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.8933, -198.7577, -199.2778, -201.3593, -204.2593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-195.0169, -198.7361, -199.2863, -201.4356, -204.3598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-195.0475, -198.6882, -199.3123, -201.4604, -204.3895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.0682, -198.6389, -199.3337, -201.4820, -204.4147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.0254, -198.5656, -199.3678, -201.4775, -204.3892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.9665, -198.5082, -199.3904, -201.4395, -204.3538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.9116, -198.4575, -199.4085, -201.4028, -204.3200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.7520, -198.3938, -199.4587, -201.3241, -204.1896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.5079, -198.2994, -199.5182, -201.2015, -203.9994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.2876, -198.2673, -199.5402, -201.0360, -203.8264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.1085, -198.2490, -199.5527, -200.8859, -203.6837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.9953, -198.2578, -199.5468, -200.7604, -203.5835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.9050, -198.2823, -199.5324, -200.6300, -203.5102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-193.8686, -198.3387, -199.4897, -200.5160, -203.4777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.9749, -198.4143, -199.4239, -200.4868, -203.5657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.0729, -198.4710, -199.3692, -200.4731, -203.6505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.1064, -198.4923, -199.3322, -200.4433, -203.6901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.1207, -198.5168, -199.3041, -200.4128, -203.7021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.2104, -198.5698, -199.2500, -200.4057, -203.7720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.2732, -198.6221, -199.2035, -200.3900, -203.8217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-194.4286, -198.7018, -199.1328, -200.4062, -203.9337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.5945, -198.7744, -199.0715, -200.4450, -204.0564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.8476, -198.8657, -198.9872, -200.5240, -204.2413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-195.0528, -198.9344, -198.9260, -200.6112, -204.3870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.2528, -198.9866, -198.8760, -200.7255, -204.5292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-195.4315, -199.0605, -198.8250, -200.8125, -204.6528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.5991, -199.1241, -198.7832, -200.9047, -204.7569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.6730, -199.1608, -198.7630, -200.9555, -204.7935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.6199, -199.1817, -198.7498, -200.9173, -204.7436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.4972, -199.1749, -198.7600, -200.8670, -204.6407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-195.2837, -199.1506, -198.8059, -200.7889, -204.4641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.9718, -199.1036, -198.8784, -200.6764, -204.2099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.6646, -199.0362, -198.9642, -200.5686, -203.9637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-194.3780, -198.9699, -199.0523, -200.4669, -203.7336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.1608, -198.8550, -199.1478, -200.4338, -203.5673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.9013, -198.7236, -199.2566, -200.3840, -203.3676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-193.7223, -198.6447, -199.3417, -200.3603, -203.2218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.5700, -198.5645, -199.4259, -200.3455, -203.0903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.4733, -198.5087, -199.4943, -200.3447, -203.0034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.3662, -198.4582, -199.5668, -200.3308, -202.9049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.2670, -198.3802, -199.6496, -200.3456, -202.8115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.2560, -198.3321, -199.6948, -200.3845, -202.7877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.3573, -198.3196, -199.6965, -200.4652, -202.8532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-193.5162, -198.3260, -199.6772, -200.5618, -202.9576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.6809, -198.3236, -199.6615, -200.6779, -203.0589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.8570, -198.3300, -199.6267, -200.7740, -203.1818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.0858, -198.3556, -199.5679, -200.8763, -203.3405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.2907, -198.3980, -199.5182, -200.9688, -203.4805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.4584, -198.4396, -199.4748, -201.0408, -203.5826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.5188, -198.4306, -199.4716, -201.0854, -203.6100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.6168, -198.4297, -199.4694, -201.1634, -203.6682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.7180, -198.4472, -199.4561, -201.2250, -203.7365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-194.8186, -198.4806, -199.4435, -201.2931, -203.8022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.8737, -198.5131, -199.4249, -201.3175, -203.8321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.9274, -198.5368, -199.4072, -201.3357, -203.8575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.9656, -198.5715, -199.3839, -201.3235, -203.8660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-194.9882, -198.6086, -199.3468, -201.2845, -203.8677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.0592, -198.6657, -199.2890, -201.2502, -203.9066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-195.0481, -198.7000, -199.2463, -201.1811, -203.8838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-195.0120, -198.7269, -199.2139, -201.0994, -203.8431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.8644, -198.7121, -199.2162, -200.9810, -203.7239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-194.7225, -198.7000, -199.2215, -200.8750, -203.6155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.5682, -198.7090, -199.2219, -200.7358, -203.5095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.4285, -198.7413, -199.2049, -200.5829, -203.4165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-194.3304, -198.7848, -199.1690, -200.4306, -203.3587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.3358, -198.8428, -199.1140, -200.3379, -203.3611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.3506, -198.8913, -199.0631, -200.2650, -203.3714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.2919, -198.9013, -199.0472, -200.1825, -203.3248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.2443, -198.8955, -199.0539, -200.1438, -203.2861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.2745, -198.9118, -199.0436, -200.1533, -203.3058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.2686, -198.8775, -199.0580, -200.1648, -203.3016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.2753, -198.8386, -199.0660, -200.1892, -203.3041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.2498, -198.7762, -199.0897, -200.2066, -203.2911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.2506, -198.6801, -199.1330, -200.2794, -203.2925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.2603, -198.6029, -199.1580, -200.3212, -203.3075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.2505, -198.5278, -199.1780, -200.3374, -203.3134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.1823, -198.4589, -199.1922, -200.2970, -203.2844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.2012, -198.4154, -199.2004, -200.3268, -203.3142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.2153, -198.4026, -199.2011, -200.3398, -203.3393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.2443, -198.3942, -199.1940, -200.3642, -203.3845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.2410, -198.3948, -199.1840, -200.3651, -203.4049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.2738, -198.3971, -199.1650, -200.3840, -203.4614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.2973, -198.3999, -199.1505, -200.4009, -203.5006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.3083, -198.4116, -199.1357, -200.4010, -203.5290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-194.2577, -198.4035, -199.1463, -200.3797, -203.4951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.2227, -198.4132, -199.1540, -200.3714, -203.4766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.1917, -198.4031, -199.1712, -200.3968, -203.4552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.1349, -198.4042, -199.1838, -200.3962, -203.4161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.1677, -198.4428, -199.1700, -200.4264, -203.4431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.2279, -198.4910, -199.1551, -200.4751, -203.4937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.2652, -198.5256, -199.1600, -200.5315, -203.5238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.2583, -198.5358, -199.1820, -200.5727, -203.5171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.2527, -198.5693, -199.1867, -200.5910, -203.5023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.2374, -198.5993, -199.1942, -200.6074, -203.4673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.2744, -198.6315, -199.1815, -200.6425, -203.4794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.2800, -198.6582, -199.1671, -200.6517, -203.4675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.2336, -198.6615, -199.1711, -200.6410, -203.4185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.2532, -198.7021, -199.1401, -200.6407, -203.4176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.3456, -198.7702, -199.0824, -200.6591, -203.4768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.4369, -198.8377, -199.0229, -200.6713, -203.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-194.5086, -198.8844, -198.9685, -200.6839, -203.5630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.6808, -198.9370, -198.8898, -200.7418, -203.6786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.8781, -198.9762, -198.8396, -200.8639, -203.8088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.0858, -199.0296, -198.7939, -201.0101, -203.9415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-195.2986, -199.0584, -198.7662, -201.1829, -204.0722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-195.4239, -199.0439, -198.7697, -201.3373, -204.1403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.5569, -199.0448, -198.7518, -201.4769, -204.2151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.6538, -199.0315, -198.7415, -201.5909, -204.2666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.7608, -199.0320, -198.7051, -201.6542, -204.3361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.7967, -199.0170, -198.6850, -201.6835, -204.3578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-195.7697, -198.9908, -198.6779, -201.6847, -204.3213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-195.7294, -198.9637, -198.6832, -201.6799, -204.2767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.6179, -198.9237, -198.7051, -201.6349, -204.1743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.4630, -198.8638, -198.7344, -201.5582, -204.0446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.3197, -198.8145, -198.7636, -201.4890, -203.9184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.1867, -198.7705, -198.7937, -201.4273, -203.7966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.0302, -198.7240, -198.8296, -201.3426, -203.6545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.8573, -198.6880, -198.8478, -201.2201, -203.5081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.6244, -198.6783, -198.8693, -201.0366, -203.3164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.4268, -198.6606, -198.8850, -200.8731, -203.1586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-194.3097, -198.6472, -198.8907, -200.7627, -203.0578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.2129, -198.6377, -198.8946, -200.6625, -202.9742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.1392, -198.6455, -198.8911, -200.5707, -202.9092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.1250, -198.6629, -198.8854, -200.5212, -202.8857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.0744, -198.6741, -198.8704, -200.4330, -202.8511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.1672, -198.7202, -198.8069, -200.3999, -202.9311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.2984, -198.7326, -198.7499, -200.4131, -203.0362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.4323, -198.7213, -198.7025, -200.4395, -203.1448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.6295, -198.7144, -198.6519, -200.4955, -203.3107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.8309, -198.7131, -198.6110, -200.5694, -203.4921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.9952, -198.7265, -198.5786, -200.6239, -203.6389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.0895, -198.7323, -198.5712, -200.6633, -203.7263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-195.0987, -198.7180, -198.5774, -200.6573, -203.7426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.0970, -198.6795, -198.5993, -200.6741, -203.7390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-195.0266, -198.6257, -198.6372, -200.6733, -203.6711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.9378, -198.5528, -198.6855, -200.6761, -203.5815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.8436, -198.4734, -198.7279, -200.6799, -203.4852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.7909, -198.4212, -198.7726, -200.7121, -203.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.7080, -198.3652, -198.8068, -200.7135, -203.3297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.6756, -198.3371, -198.8211, -200.7073, -203.2816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.7005, -198.3266, -198.8315, -200.7494, -203.2737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.6292, -198.3092, -198.8525, -200.7335, -203.1998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.6392, -198.3179, -198.8587, -200.7627, -203.1836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-194.6021, -198.3332, -198.8660, -200.7533, -203.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.6364, -198.3551, -198.8539, -200.7812, -203.1239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.6890, -198.3838, -198.8386, -200.8094, -203.1359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.6539, -198.3862, -198.8334, -200.7772, -203.0868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.6223, -198.3791, -198.8348, -200.7602, -203.0440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.6212, -198.4007, -198.8106, -200.7341, -203.0290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.5112, -198.4185, -198.8016, -200.6297, -202.9307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.4624, -198.4255, -198.7931, -200.5726, -202.8875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.3644, -198.4251, -198.7727, -200.4693, -202.8128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.2682, -198.4373, -198.7476, -200.3611, -202.7379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.2080, -198.4569, -198.7236, -200.2825, -202.6876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.0603, -198.4544, -198.7304, -200.1942, -202.5617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.9060, -198.4596, -198.7309, -200.0858, -202.4398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-193.7864, -198.4662, -198.7208, -199.9953, -202.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-193.7641, -198.4820, -198.6808, -199.9425, -202.3204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.7584, -198.4943, -198.6392, -199.9039, -202.3106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.7669, -198.4892, -198.6024, -199.8877, -202.3145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.7317, -198.4796, -198.5850, -199.8517, -202.2817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.6652, -198.4340, -198.5914, -199.8214, -202.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.6485, -198.3913, -198.5942, -199.8256, -202.1991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.6730, -198.3512, -198.6038, -199.8822, -202.2105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.7296, -198.3283, -198.6082, -199.9501, -202.2412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.7487, -198.3302, -198.6064, -199.9670, -202.2455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-193.8038, -198.3426, -198.5988, -200.0082, -202.2690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-193.8879, -198.3579, -198.5824, -200.0575, -202.3183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.0045, -198.3837, -198.5664, -200.1408, -202.3862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.0599, -198.3882, -198.5997, -200.2365, -202.3986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.1883, -198.4275, -198.5963, -200.3498, -202.4721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.3357, -198.4699, -198.5986, -200.4689, -202.5626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.5219, -198.5151, -198.5900, -200.6054, -202.6824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.6995, -198.5588, -198.5796, -200.7304, -202.8010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.9206, -198.6373, -198.5457, -200.8431, -202.9693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-195.2202, -198.7275, -198.4941, -200.9855, -203.1944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-195.3884, -198.7718, -198.4795, -201.0766, -203.3319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.4779, -198.8101, -198.4779, -201.1198, -203.3898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.5087, -198.8506, -198.4739, -201.1104, -203.4084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.4943, -198.8458, -198.4857, -201.1014, -203.4018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.4550, -198.8451, -198.4860, -201.0674, -203.3709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.2887, -198.8019, -198.5168, -200.9920, -203.2439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-195.0906, -198.7634, -198.5472, -200.8973, -203.0874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.9701, -198.7459, -198.5608, -200.8446, -202.9966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.8790, -198.7408, -198.5676, -200.7940, -202.9283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.7288, -198.7158, -198.5914, -200.7095, -202.8201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.4969, -198.6576, -198.6300, -200.5793, -202.6611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.3250, -198.6144, -198.6564, -200.4806, -202.5499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.1936, -198.6146, -198.6470, -200.3695, -202.4713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.0661, -198.6065, -198.6439, -200.2604, -202.3943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.8927, -198.5897, -198.6667, -200.1401, -202.2779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.7954, -198.5901, -198.6758, -200.0617, -202.2225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.7662, -198.5628, -198.6858, -200.0448, -202.2158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.7889, -198.5442, -198.6872, -200.0609, -202.2391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-193.7892, -198.5322, -198.6888, -200.0607, -202.2512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.9115, -198.5310, -198.6832, -200.1530, -202.3336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.0895, -198.5332, -198.6584, -200.2613, -202.4655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.2500, -198.5413, -198.6355, -200.3589, -202.5855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.3616, -198.5373, -198.6315, -200.4376, -202.6740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.4441, -198.5571, -198.6062, -200.4580, -202.7457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.5079, -198.6283, -198.5667, -200.4398, -202.8038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.6225, -198.6884, -198.5127, -200.4515, -202.8937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.6494, -198.6871, -198.5057, -200.4557, -202.9091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.5612, -198.6600, -198.5260, -200.4092, -202.8323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-194.4512, -198.6481, -198.5513, -200.3395, -202.7350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.3928, -198.6299, -198.5654, -200.3084, -202.6775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-194.3354, -198.6108, -198.5867, -200.2786, -202.6225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.2901, -198.5888, -198.6052, -200.2561, -202.5855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.2818, -198.5520, -198.6266, -200.2681, -202.5768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.2653, -198.5272, -198.6488, -200.2693, -202.5660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.2615, -198.5113, -198.6498, -200.2599, -202.5535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.2669, -198.4949, -198.6393, -200.2326, -202.5497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.2617, -198.4918, -198.6279, -200.1862, -202.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.2685, -198.4682, -198.6255, -200.1781, -202.5528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.2827, -198.4485, -198.6370, -200.1935, -202.5529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.3226, -198.4124, -198.6504, -200.2402, -202.5664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-194.3016, -198.3879, -198.6725, -200.2537, -202.5360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.2110, -198.3413, -198.6997, -200.2093, -202.4596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.1368, -198.3025, -198.7159, -200.1683, -202.3994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-194.1087, -198.2762, -198.7122, -200.1328, -202.3675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-194.1020, -198.2654, -198.7043, -200.1045, -202.3517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-194.2028, -198.2696, -198.6663, -200.1389, -202.4074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.2499, -198.2661, -198.6422, -200.1469, -202.4222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.3239, -198.2562, -198.6273, -200.1856, -202.4535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.3475, -198.2557, -198.6215, -200.1835, -202.4380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.3671, -198.2412, -198.6220, -200.1900, -202.4092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.3345, -198.2185, -198.6426, -200.1801, -202.3325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.3157, -198.2118, -198.6561, -200.1671, -202.2681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.3646, -198.2103, -198.6450, -200.1888, -202.2634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.3475, -198.1998, -198.6610, -200.1884, -202.2092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.3754, -198.2171, -198.6551, -200.2008, -202.1813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.4601, -198.2453, -198.6337, -200.2488, -202.2086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.5921, -198.2501, -198.6018, -200.3438, -202.2751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-194.7347, -198.2516, -198.5703, -200.4529, -202.3530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.8894, -198.2704, -198.5258, -200.5512, -202.4411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-195.0140, -198.2786, -198.5010, -200.6509, -202.5073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.0542, -198.2685, -198.4899, -200.7042, -202.5088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.9970, -198.2287, -198.5146, -200.7268, -202.4424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.9531, -198.2077, -198.5310, -200.7369, -202.3887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.9262, -198.1896, -198.5470, -200.7624, -202.3481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.8765, -198.1710, -198.5525, -200.7453, -202.3077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-194.7938, -198.1472, -198.5709, -200.7187, -202.2465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.7918, -198.1300, -198.5689, -200.7287, -202.2502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.7595, -198.0908, -198.5864, -200.7340, -202.2350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.7936, -198.0500, -198.5827, -200.7611, -202.2657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.8794, -198.0545, -198.5506, -200.7848, -202.3354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.9122, -198.0478, -198.5372, -200.7910, -202.3657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.0495, -198.0634, -198.4980, -200.8522, -202.4639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.0859, -198.0701, -198.4903, -200.8703, -202.4966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.0599, -198.0779, -198.5120, -200.8805, -202.4727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-195.0365, -198.0884, -198.5236, -200.8748, -202.4541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.0547, -198.1151, -198.5157, -200.8931, -202.4650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.0505, -198.1289, -198.5010, -200.8866, -202.4732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.9886, -198.1145, -198.5042, -200.8565, -202.4311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.0037, -198.1117, -198.4830, -200.8632, -202.4539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.9765, -198.1207, -198.4795, -200.8538, -202.4454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.9861, -198.1527, -198.4541, -200.8396, -202.4643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.8853, -198.1829, -198.4511, -200.7597, -202.3926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.8938, -198.2245, -198.4238, -200.7375, -202.3983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.9182, -198.3026, -198.3787, -200.7023, -202.4209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.8756, -198.3802, -198.3462, -200.6125, -202.4005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.8951, -198.4632, -198.2984, -200.5570, -202.4148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.8008, -198.5134, -198.2773, -200.4481, -202.3567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.6764, -198.5437, -198.2770, -200.3503, -202.2806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.5446, -198.5895, -198.2783, -200.2420, -202.1837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.3620, -198.5951, -198.3170, -200.1376, -202.0481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.2669, -198.6210, -198.3221, -200.0540, -201.9860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.1692, -198.6216, -198.3380, -199.9938, -201.9260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.2976, -198.6792, -198.2884, -200.0380, -202.0261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.5508, -198.7536, -198.2089, -200.1446, -202.2161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.7801, -198.8188, -198.1390, -200.2298, -202.3954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.8648, -198.8632, -198.1169, -200.2573, -202.4614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.8948, -198.8633, -198.1350, -200.3010, -202.4788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-194.9199, -198.8587, -198.1517, -200.3357, -202.4917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.9482, -198.8506, -198.1590, -200.3600, -202.5107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.9416, -198.8313, -198.1657, -200.3598, -202.4997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.8922, -198.7922, -198.1893, -200.3483, -202.4616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.8525, -198.7245, -198.2276, -200.3661, -202.4296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.8329, -198.6620, -198.2667, -200.4008, -202.4084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.7744, -198.5771, -198.3222, -200.4344, -202.3584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.7327, -198.5027, -198.3737, -200.4658, -202.3157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.6802, -198.4365, -198.4255, -200.4778, -202.2704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.7099, -198.3836, -198.4624, -200.5342, -202.2757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.7469, -198.3513, -198.4912, -200.5893, -202.2863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.7945, -198.3289, -198.5119, -200.6404, -202.2996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.7860, -198.3025, -198.5378, -200.6360, -202.2746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.8160, -198.2675, -198.5709, -200.6695, -202.2622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.8555, -198.2458, -198.5808, -200.6789, -202.2688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.9057, -198.2269, -198.5824, -200.6923, -202.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.7960, -198.1922, -198.6211, -200.6168, -202.1964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.6442, -198.1557, -198.6685, -200.5155, -202.0788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.6025, -198.1403, -198.6842, -200.4708, -202.0525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.5975, -198.1298, -198.6788, -200.4241, -202.0692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.5475, -198.1267, -198.6758, -200.3511, -202.0449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.5260, -198.1526, -198.6403, -200.2550, -202.0405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-194.5770, -198.1965, -198.5865, -200.1989, -202.0830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-194.6431, -198.2431, -198.5234, -200.1487, -202.1353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.7773, -198.3126, -198.4379, -200.1198, -202.2441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.9593, -198.3824, -198.3440, -200.1116, -202.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-195.0403, -198.4303, -198.2804, -200.0674, -202.4484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.1064, -198.4653, -198.2346, -200.0397, -202.4940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.1274, -198.4752, -198.2118, -200.0267, -202.5010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.2320, -198.5218, -198.1604, -200.0441, -202.5713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-195.2070, -198.5350, -198.1433, -200.0009, -202.5531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-195.2438, -198.5342, -198.1296, -200.0197, -202.5848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.3308, -198.5304, -198.1085, -200.0770, -202.6492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-195.4894, -198.5536, -198.0573, -200.1478, -202.7648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-195.5005, -198.5341, -198.0462, -200.1685, -202.7651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.4767, -198.5227, -198.0369, -200.1609, -202.7451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-195.4944, -198.4829, -198.0296, -200.2104, -202.7487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.5702, -198.4671, -198.0102, -200.2772, -202.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.5093, -198.4072, -198.0260, -200.2915, -202.7372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.3611, -198.3386, -198.0646, -200.2660, -202.6010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.2123, -198.2936, -198.0919, -200.2188, -202.4643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.1410, -198.2764, -198.1086, -200.2104, -202.3908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.0973, -198.2961, -198.1054, -200.1851, -202.3380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.9761, -198.3125, -198.1280, -200.1471, -202.2260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-194.8409, -198.3478, -198.1502, -200.0921, -202.0950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.7243, -198.3712, -198.1693, -200.0459, -201.9820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.6496, -198.3731, -198.2020, -200.0484, -201.9012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.6560, -198.4161, -198.1945, -200.0701, -201.8734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.6879, -198.4477, -198.1850, -200.1104, -201.8713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.7223, -198.4793, -198.1674, -200.1433, -201.8717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-194.8297, -198.5166, -198.1349, -200.2117, -201.9403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.8672, -198.5073, -198.1355, -200.2660, -201.9513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.8827, -198.4902, -198.1576, -200.3214, -201.9468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.9426, -198.4882, -198.1459, -200.3645, -201.9796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-195.0682, -198.5084, -198.1009, -200.4255, -202.0670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.1558, -198.5621, -198.0488, -200.4386, -202.1272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.2390, -198.5924, -198.0057, -200.4617, -202.1849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.3075, -198.6297, -197.9688, -200.4795, -202.2293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.2251, -198.6206, -197.9903, -200.4431, -202.1624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-195.1035, -198.5965, -198.0114, -200.3731, -202.0727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.9717, -198.5606, -198.0479, -200.3146, -201.9751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.8292, -198.5294, -198.0802, -200.2356, -201.8744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.6779, -198.5194, -198.1064, -200.1362, -201.7799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.5749, -198.4896, -198.1374, -200.0756, -201.7176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.4776, -198.4539, -198.1546, -200.0001, -201.6663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.4468, -198.4444, -198.1515, -199.9551, -201.6588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.3367, -198.3803, -198.2064, -199.9216, -201.5904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.3459, -198.3318, -198.2179, -199.9435, -201.6215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.3918, -198.2891, -198.2188, -199.9876, -201.6707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.5112, -198.2624, -198.1967, -200.0717, -201.7662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.7619, -198.3009, -198.1190, -200.1937, -201.9527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.9402, -198.3342, -198.0703, -200.2756, -202.0869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-195.0606, -198.3847, -198.0233, -200.2940, -202.1872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.2488, -198.4556, -197.9629, -200.3439, -202.3316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-195.3524, -198.5068, -197.9267, -200.3632, -202.4176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-195.4186, -198.5367, -197.9082, -200.3797, -202.4705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.4306, -198.5475, -197.9040, -200.3807, -202.4869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-195.3819, -198.5386, -197.9237, -200.3677, -202.4627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.2814, -198.5085, -197.9518, -200.3276, -202.3996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-195.2032, -198.4580, -197.9937, -200.3328, -202.3456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.1391, -198.4059, -198.0331, -200.3489, -202.2928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-195.0098, -198.3404, -198.0777, -200.3134, -202.1966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.8985, -198.2514, -198.1394, -200.3250, -202.1077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.7754, -198.1585, -198.2110, -200.3174, -202.0238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.6341, -198.0807, -198.2908, -200.3171, -201.9195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.4920, -198.0224, -198.3652, -200.3027, -201.8148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.4938, -197.9794, -198.3840, -200.3404, -201.8208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.4539, -197.9366, -198.4099, -200.3439, -201.7982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.3790, -197.9193, -198.4374, -200.3082, -201.7493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.2879, -197.9048, -198.4703, -200.2625, -201.6919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.1053, -197.9045, -198.5167, -200.1517, -201.5637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-193.9493, -197.9431, -198.5530, -200.0442, -201.4488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.9051, -197.9639, -198.5612, -200.0033, -201.4190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-193.9196, -197.9717, -198.5356, -199.9774, -201.4326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.9845, -198.0236, -198.4667, -199.9372, -201.4869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.0340, -198.0459, -198.4113, -199.9076, -201.5337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.1130, -198.0690, -198.3467, -199.8895, -201.6149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.2367, -198.1016, -198.2589, -199.8804, -201.7250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.5090, -198.1448, -198.1334, -199.9543, -201.9427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.6762, -198.1813, -198.0524, -199.9992, -202.0766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.8495, -198.2430, -197.9572, -200.0208, -202.2087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.0462, -198.3204, -197.8718, -200.0586, -202.3618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.1495, -198.3652, -197.8204, -200.0653, -202.4535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-195.1522, -198.3873, -197.8094, -200.0477, -202.4660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.2177, -198.4196, -197.7890, -200.0691, -202.5187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-195.2718, -198.4494, -197.7695, -200.0689, -202.5635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-195.3063, -198.4657, -197.7605, -200.0785, -202.5868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.3399, -198.4672, -197.7669, -200.1068, -202.6205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.2745, -198.4270, -197.8159, -200.1259, -202.5662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.1424, -198.3758, -197.8866, -200.1281, -202.4565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.0321, -198.3499, -197.9381, -200.1179, -202.3545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.9805, -198.3680, -197.9488, -200.0973, -202.2946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-195.0445, -198.3839, -197.9254, -200.1289, -202.3232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.0392, -198.3706, -197.9284, -200.1451, -202.2980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.9601, -198.3528, -197.9695, -200.1512, -202.2149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.8103, -198.3302, -198.0152, -200.1052, -202.0952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.7349, -198.3267, -198.0387, -200.0847, -202.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.7249, -198.3269, -198.0580, -200.1126, -202.0273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.7940, -198.3204, -198.0643, -200.1866, -202.0590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.8811, -198.3267, -198.0715, -200.2931, -202.0909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.9144, -198.3418, -198.0763, -200.3373, -202.0875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-194.8905, -198.3261, -198.1029, -200.3462, -202.0372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.8534, -198.3230, -198.1333, -200.3344, -201.9904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.7788, -198.2953, -198.1904, -200.3207, -201.9131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.6919, -198.2506, -198.2630, -200.3182, -201.8228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.5599, -198.2000, -198.3382, -200.2924, -201.6992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.5129, -198.1761, -198.3737, -200.2932, -201.6436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.5056, -198.1532, -198.4158, -200.3440, -201.6124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.4472, -198.1046, -198.4802, -200.3932, -201.5373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.4709, -198.1095, -198.4967, -200.4433, -201.5231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.5418, -198.1216, -198.4943, -200.5168, -201.5462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.6176, -198.1262, -198.4965, -200.5882, -201.5721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-194.7439, -198.1679, -198.4517, -200.6461, -201.6464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-194.8631, -198.2174, -198.3947, -200.6790, -201.7145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.9226, -198.2628, -198.3580, -200.6972, -201.7388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.9828, -198.3105, -198.3114, -200.6948, -201.7702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.0867, -198.3668, -198.2318, -200.6792, -201.8447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-195.1700, -198.3736, -198.1742, -200.6758, -201.9107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-195.2092, -198.3646, -198.1362, -200.6679, -201.9360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.2098, -198.3396, -198.1068, -200.6517, -201.9297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.1477, -198.3060, -198.0818, -200.5835, -201.8862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-195.0448, -198.2656, -198.0706, -200.4917, -201.8120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.8349, -198.1883, -198.1147, -200.3667, -201.6490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.6098, -198.1175, -198.1504, -200.2194, -201.4777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.3909, -198.0540, -198.1878, -200.0840, -201.3096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.2000, -198.0038, -198.2254, -199.9592, -201.1495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-194.0404, -197.9632, -198.2477, -199.8367, -201.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-193.8867, -197.9387, -198.2642, -199.7142, -200.8884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.7825, -197.9121, -198.2826, -199.6495, -200.7915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-193.6656, -197.8753, -198.2973, -199.5673, -200.6897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.5701, -197.8137, -198.3329, -199.5347, -200.6049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-193.5850, -197.7574, -198.3344, -199.5672, -200.5990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.6384, -197.7201, -198.3043, -199.5894, -200.6349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.7201, -197.7060, -198.2661, -199.6065, -200.6984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.7845, -197.6860, -198.2288, -199.6061, -200.7560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.9756, -197.6923, -198.1439, -199.6673, -200.9017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.2409, -197.7358, -198.0304, -199.7512, -201.0984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.5467, -197.7700, -197.9190, -199.8699, -201.3102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.9259, -197.8025, -197.8091, -200.0481, -201.5772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-195.1441, -197.8324, -197.7534, -200.1391, -201.7243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.3563, -197.9136, -197.6627, -200.1738, -201.8728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.4728, -197.9941, -197.5902, -200.1631, -201.9562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-195.5266, -198.0510, -197.5331, -200.1234, -201.9908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.6011, -198.0836, -197.4879, -200.1314, -202.0379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-195.6610, -198.1011, -197.4547, -200.1450, -202.0695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.6450, -198.1052, -197.4370, -200.1225, -202.0451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.4793, -198.0871, -197.4682, -200.0521, -201.8930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-195.2708, -198.0880, -197.4988, -199.9328, -201.7140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.1477, -198.0987, -197.5135, -199.8765, -201.6032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.0939, -198.1335, -197.4937, -199.8405, -201.5523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.9456, -198.1673, -197.4951, -199.7247, -201.4408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-194.7688, -198.1744, -197.5266, -199.6164, -201.3017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.6085, -198.1862, -197.5547, -199.5065, -201.1757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.5134, -198.2006, -197.5663, -199.4541, -201.1050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.4193, -198.1648, -197.6029, -199.4341, -201.0334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-194.4788, -198.1572, -197.5836, -199.4804, -201.0765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.6199, -198.1679, -197.5252, -199.5498, -201.1849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.8385, -198.1887, -197.4502, -199.6809, -201.3473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.0828, -198.2301, -197.3540, -199.7973, -201.5185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-195.3980, -198.2924, -197.2259, -199.9119, -201.7508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-195.7049, -198.3608, -197.0895, -200.0006, -201.9890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.9210, -198.4221, -196.9937, -200.0416, -202.1587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.0542, -198.5021, -196.8846, -199.9968, -202.2790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-196.1675, -198.5573, -196.8003, -199.9603, -202.3769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-196.2047, -198.5932, -196.7550, -199.9219, -202.4142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.2346, -198.6215, -196.7127, -199.8678, -202.4429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-196.2496, -198.6220, -196.7037, -199.8559, -202.4627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.2920, -198.6219, -196.6915, -199.8660, -202.4870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.1233, -198.5960, -196.7346, -199.7833, -202.3538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.8985, -198.5563, -196.8008, -199.6708, -202.1718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.6463, -198.5028, -196.8771, -199.5427, -201.9696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.4033, -198.4387, -196.9656, -199.4292, -201.7609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.1200, -198.3337, -197.0824, -199.3207, -201.5243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.9663, -198.2278, -197.1717, -199.2856, -201.3923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.8605, -198.1158, -197.2554, -199.2879, -201.3005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.7615, -198.0216, -197.3216, -199.2621, -201.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.4638, -197.9021, -197.4450, -199.1485, -200.9832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.3460, -197.8282, -197.4964, -199.1014, -200.8940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.3011, -197.7653, -197.5144, -199.0905, -200.8612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.3178, -197.7440, -197.5084, -199.1030, -200.8829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.3864, -197.7449, -197.4751, -199.1300, -200.9424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.5553, -197.7650, -197.4053, -199.2038, -201.0774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-194.7103, -197.7835, -197.3511, -199.2820, -201.1993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.8411, -197.7958, -197.3071, -199.3472, -201.3046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-195.0251, -197.8441, -197.2377, -199.4196, -201.4384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.2361, -197.9002, -197.1861, -199.5373, -201.5900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.4431, -197.9623, -197.1440, -199.6767, -201.7195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.5782, -197.9924, -197.1188, -199.7783, -201.8076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.7238, -198.0349, -197.1042, -199.9045, -201.9096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-195.8063, -198.0418, -197.1171, -200.0152, -201.9659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.8387, -198.0055, -197.1646, -200.1276, -201.9797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.9470, -197.9944, -197.1919, -200.2681, -202.0565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.9887, -197.9487, -197.2607, -200.4064, -202.0807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-195.9407, -197.8557, -197.3514, -200.5035, -202.0325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-195.8496, -197.7476, -197.4405, -200.5595, -201.9536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-195.7099, -197.6575, -197.5266, -200.5753, -201.8278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.5825, -197.5888, -197.5949, -200.5690, -201.7156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.3643, -197.5130, -197.6932, -200.5194, -201.5241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.2377, -197.4781, -197.7475, -200.4790, -201.4056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.0803, -197.4658, -197.7714, -200.3713, -201.2719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.8430, -197.4353, -197.8204, -200.2274, -201.0867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-194.7716, -197.4614, -197.8061, -200.1372, -201.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.7087, -197.4435, -197.8153, -200.0773, -200.9825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.7291, -197.4667, -197.7810, -200.0307, -200.9891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.8378, -197.5387, -197.7131, -200.0112, -201.0521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.9306, -197.6035, -197.6363, -199.9654, -201.1224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.0659, -197.6895, -197.5264, -199.9198, -201.2385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.2048, -197.7834, -197.4342, -199.8890, -201.3467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.2939, -197.8629, -197.3605, -199.8407, -201.4203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.3637, -197.9271, -197.2920, -199.7836, -201.4895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.4034, -197.9931, -197.2369, -199.7145, -201.5235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-195.3987, -198.0404, -197.2027, -199.6405, -201.5159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.3664, -198.0558, -197.1966, -199.5920, -201.4860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.2927, -198.0583, -197.1957, -199.5290, -201.4248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.1358, -198.0410, -197.2183, -199.4311, -201.3027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.9897, -198.0114, -197.2400, -199.3408, -201.1928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.8986, -198.0128, -197.2358, -199.2600, -201.1166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.7830, -198.0037, -197.2416, -199.1573, -201.0221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-194.7238, -198.0147, -197.2353, -199.0858, -200.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.6492, -198.0081, -197.2473, -199.0303, -200.9105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.6298, -198.0183, -197.2478, -198.9989, -200.8899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-194.6774, -198.0235, -197.2284, -199.0004, -200.9139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.7218, -198.0365, -197.2100, -199.0032, -200.9346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.8078, -198.0385, -197.1759, -199.0271, -201.0027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.9370, -198.0262, -197.1466, -199.1012, -201.0897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.1054, -198.0185, -197.1057, -199.2020, -201.1994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.2882, -198.0137, -197.0503, -199.2992, -201.3211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-195.4856, -198.0178, -196.9999, -199.4271, -201.4582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.6897, -197.9744, -196.9669, -199.5814, -201.6045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.8549, -197.9252, -196.9614, -199.7311, -201.7205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-195.9386, -197.8831, -196.9687, -199.8099, -201.7811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.9955, -197.8353, -196.9852, -199.8828, -201.8184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-196.0665, -197.8174, -196.9806, -199.9348, -201.8654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-196.0584, -197.8113, -196.9864, -199.9304, -201.8485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.9733, -197.7919, -197.0129, -199.8931, -201.7670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.8031, -197.7476, -197.0477, -199.8046, -201.6263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-195.4542, -197.6648, -197.1463, -199.6539, -201.3415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.0556, -197.5966, -197.2596, -199.4682, -201.0090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.7302, -197.5550, -197.3588, -199.3037, -200.7494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.4106, -197.5063, -197.4663, -199.1543, -200.4998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.1271, -197.4814, -197.5580, -199.0072, -200.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-193.8729, -197.4454, -197.6481, -198.8819, -200.0968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.7201, -197.3973, -197.7097, -198.8213, -199.9819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.6938, -197.3638, -197.7187, -198.8274, -199.9609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-193.8210, -197.3778, -197.6635, -198.9014, -200.0498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.9669, -197.3979, -197.5914, -198.9819, -200.1467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.2438, -197.4599, -197.4721, -199.1232, -200.3397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.5475, -197.5387, -197.3360, -199.2599, -200.5514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-194.8661, -197.6228, -197.1954, -199.3900, -200.7884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.1706, -197.7057, -197.0786, -199.5272, -201.0237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.4107, -197.7811, -196.9903, -199.6283, -201.2022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.4662, -197.7949, -196.9744, -199.6516, -201.2511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.5015, -197.7951, -196.9713, -199.6819, -201.2877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-195.5393, -197.8180, -196.9558, -199.6869, -201.3128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-195.5836, -197.8250, -196.9547, -199.7274, -201.3533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-195.5429, -197.8291, -196.9716, -199.7202, -201.3335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-195.5058, -197.8468, -196.9845, -199.7169, -201.3163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.4825, -197.8503, -197.0001, -199.7173, -201.3117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.4241, -197.8603, -197.0282, -199.7131, -201.2702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.3685, -197.8829, -197.0502, -199.6995, -201.2304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-195.2766, -197.8818, -197.0903, -199.6785, -201.1637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.2049, -197.8864, -197.1259, -199.6660, -201.1062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-195.0582, -197.8692, -197.1786, -199.6150, -200.9986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.9307, -197.8369, -197.2287, -199.5620, -200.9056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.8764, -197.8210, -197.2512, -199.5368, -200.8709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.8304, -197.7977, -197.2813, -199.5378, -200.8381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.8231, -197.7588, -197.2867, -199.5434, -200.8446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.7332, -197.6832, -197.3237, -199.5324, -200.7910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.6718, -197.6077, -197.3562, -199.5349, -200.7583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.6213, -197.5684, -197.3743, -199.5181, -200.7382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-194.5729, -197.5166, -197.3855, -199.4997, -200.7229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.4689, -197.4672, -197.4014, -199.4388, -200.6809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-194.3564, -197.4051, -197.4217, -199.3830, -200.6376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.2046, -197.3258, -197.4772, -199.3344, -200.5599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.0215, -197.2660, -197.5276, -199.2505, -200.4550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.9310, -197.2177, -197.5542, -199.2261, -200.4179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-193.8565, -197.1798, -197.5844, -199.2005, -200.3921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-193.8158, -197.1550, -197.6100, -199.1978, -200.3901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.7613, -197.1471, -197.6325, -199.1757, -200.3730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-193.7456, -197.1590, -197.6353, -199.1521, -200.3800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.7109, -197.1490, -197.6448, -199.1182, -200.3756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.6832, -197.1648, -197.6369, -199.0716, -200.3804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-193.6654, -197.1968, -197.6271, -199.0401, -200.3841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.6638, -197.2353, -197.6140, -199.0154, -200.4084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.6747, -197.2879, -197.5957, -199.0010, -200.4282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.7327, -197.3377, -197.5627, -199.0109, -200.4691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.8852, -197.4247, -197.4835, -199.0487, -200.5765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.1248, -197.5302, -197.3760, -199.1305, -200.7475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.3300, -197.6068, -197.2894, -199.2175, -200.8947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.5917, -197.6752, -197.1963, -199.3466, -201.0770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.7951, -197.7417, -197.1284, -199.4537, -201.2097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-195.0090, -197.8100, -197.0645, -199.5679, -201.3475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.2303, -197.8871, -196.9924, -199.6794, -201.4950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-195.4072, -197.9422, -196.9478, -199.7946, -201.6104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.4909, -197.9931, -196.9180, -199.8513, -201.6534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-195.4381, -197.9840, -196.9314, -199.8525, -201.6034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.3419, -197.9777, -196.9605, -199.8393, -201.5180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.2872, -197.9877, -196.9892, -199.8561, -201.4532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.1729, -197.9955, -197.0213, -199.8199, -201.3497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.0437, -198.0034, -197.0561, -199.7635, -201.2344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.8659, -197.9466, -197.1169, -199.7079, -201.0721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.7242, -197.9202, -197.1702, -199.6638, -200.9363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.6510, -197.9480, -197.1619, -199.5842, -200.8582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.5689, -197.9604, -197.1491, -199.4832, -200.7730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.4782, -197.9826, -197.1213, -199.3518, -200.6912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.4882, -198.0133, -197.0562, -199.2590, -200.7052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.4672, -198.0182, -197.0006, -199.1616, -200.6971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.4803, -197.9993, -196.9500, -199.1127, -200.7146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.3855, -197.9663, -196.9543, -199.0397, -200.6466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.2655, -197.9149, -196.9678, -198.9592, -200.5613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-194.2347, -197.8819, -196.9676, -198.9516, -200.5365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.2198, -197.8344, -196.9631, -198.9578, -200.5295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.2915, -197.8068, -196.9309, -199.0072, -200.5812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.4312, -197.7913, -196.8825, -199.0916, -200.6836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.6047, -197.7898, -196.8142, -199.1726, -200.8076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.8325, -197.8059, -196.7271, -199.2631, -200.9796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.0946, -197.8495, -196.6365, -199.3646, -201.1698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-195.2096, -197.8829, -196.6071, -199.4020, -201.2537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-195.2629, -197.9171, -196.5819, -199.3891, -201.2948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.3330, -197.9513, -196.5638, -199.4053, -201.3293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.2287, -197.9312, -196.6099, -199.3474, -201.2307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-195.1246, -197.8931, -196.6666, -199.3159, -201.1345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.0906, -197.8914, -196.6971, -199.3196, -201.0875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.0405, -197.8756, -196.7446, -199.3186, -201.0081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-195.0258, -197.8600, -196.7763, -199.3377, -200.9527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.0010, -197.8152, -196.8216, -199.3736, -200.8843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.9293, -197.7508, -196.8586, -199.3699, -200.7780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.8834, -197.6947, -196.8883, -199.3787, -200.6900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.8342, -197.6011, -196.9353, -199.4034, -200.6095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.7731, -197.5237, -197.0046, -199.4448, -200.5255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-194.7883, -197.4766, -197.0297, -199.5014, -200.5178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.8228, -197.4187, -197.0601, -199.5875, -200.5269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.9032, -197.3883, -197.0430, -199.6590, -200.5761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-195.0376, -197.3763, -197.0023, -199.7554, -200.6731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.1312, -197.3472, -196.9690, -199.8217, -200.7416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-195.1739, -197.3422, -196.9436, -199.8349, -200.7814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.1432, -197.3556, -196.9142, -199.7725, -200.7646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-195.0793, -197.3952, -196.8731, -199.6573, -200.7289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.9762, -197.4370, -196.8421, -199.5154, -200.6712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.8798, -197.4852, -196.8112, -199.3670, -200.6227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.9405, -197.5519, -196.7282, -199.3018, -200.6975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.0809, -197.6257, -196.6273, -199.2803, -200.8311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-195.1823, -197.7031, -196.5408, -199.2483, -200.9321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-195.3028, -197.7745, -196.4612, -199.2364, -201.0505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.3657, -197.8122, -196.4014, -199.1892, -201.1307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.4996, -197.8761, -196.3128, -199.1719, -201.2657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.6498, -197.9269, -196.2379, -199.1995, -201.3963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.7539, -197.9445, -196.1892, -199.2221, -201.4892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-195.6563, -197.9125, -196.2037, -199.1508, -201.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-195.4919, -197.8873, -196.2419, -199.0528, -201.3174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.3365, -197.8510, -196.2941, -198.9874, -201.1852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.1814, -197.7976, -196.3668, -198.9403, -201.0560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.0122, -197.7701, -196.4513, -198.8902, -200.9245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.8076, -197.7341, -196.5509, -198.8244, -200.7738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.6587, -197.7219, -196.6157, -198.7587, -200.6761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.4723, -197.6788, -196.7048, -198.6821, -200.5433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.3537, -197.6514, -196.7651, -198.6294, -200.4562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.3726, -197.6618, -196.7640, -198.6273, -200.4766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.4570, -197.6672, -196.7457, -198.6846, -200.5438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.5802, -197.6617, -196.7246, -198.7928, -200.6389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.6865, -197.6578, -196.7154, -198.8906, -200.7125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.8362, -197.6735, -196.6780, -198.9844, -200.8193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.0413, -197.6838, -196.6490, -199.1385, -200.9596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.1623, -197.6587, -196.6507, -199.2572, -201.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-195.2754, -197.6096, -196.6724, -199.4022, -201.0924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-195.2715, -197.5145, -196.7502, -199.5283, -201.0585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-195.2748, -197.4345, -196.8087, -199.6342, -201.0297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.3613, -197.3956, -196.8150, -199.7305, -201.0784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.3941, -197.3717, -196.8450, -199.8181, -201.0747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.3779, -197.3621, -196.8615, -199.8444, -201.0419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.3171, -197.3561, -196.8760, -199.8194, -200.9905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.1886, -197.3456, -196.8913, -199.7318, -200.8938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.0720, -197.3300, -196.9089, -199.6624, -200.8054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.9888, -197.3209, -196.9191, -199.6090, -200.7490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.9847, -197.3206, -196.9025, -199.5794, -200.7519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-195.0244, -197.3378, -196.8673, -199.5648, -200.7958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.0387, -197.3685, -196.8226, -199.5093, -200.8312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.0760, -197.3914, -196.7781, -199.4790, -200.8781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.1251, -197.4196, -196.7167, -199.4435, -200.9349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.1702, -197.4381, -196.6684, -199.4349, -200.9810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-195.3066, -197.4736, -196.5806, -199.4532, -201.1107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.4052, -197.5158, -196.5048, -199.4536, -201.2127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.4588, -197.5549, -196.4570, -199.4584, -201.2869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.4435, -197.6028, -196.4232, -199.4186, -201.3054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-195.4574, -197.6748, -196.3881, -199.4098, -201.3322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.3875, -197.7111, -196.3956, -199.3973, -201.2851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.3305, -197.7195, -196.4172, -199.4018, -201.2450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.1819, -197.7085, -196.4829, -199.3769, -201.1336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.9777, -197.6813, -196.5677, -199.3146, -200.9892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.8459, -197.6808, -196.6140, -199.2622, -200.9002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.7209, -197.6955, -196.6867, -199.2393, -200.8027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.6550, -197.7052, -196.7263, -199.2343, -200.7497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.5163, -197.6779, -196.7927, -199.1912, -200.6381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-194.4111, -197.6622, -196.8375, -199.1548, -200.5500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.3142, -197.6350, -196.8829, -199.1269, -200.4631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.2845, -197.6413, -196.8915, -199.1204, -200.4223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.4116, -197.6758, -196.8451, -199.1772, -200.5040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.4414, -197.6841, -196.8344, -199.1919, -200.5084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.5126, -197.6959, -196.8015, -199.2199, -200.5543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.4926, -197.6787, -196.8052, -199.2051, -200.5344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.5105, -197.6711, -196.7998, -199.2207, -200.5457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.6071, -197.6659, -196.7816, -199.2853, -200.6210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.7400, -197.6918, -196.7338, -199.3396, -200.7221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.8484, -197.7022, -196.6972, -199.3968, -200.8004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.8868, -197.7093, -196.6734, -199.4122, -200.8239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.8785, -197.6942, -196.6602, -199.4051, -200.8098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.8660, -197.6706, -196.6723, -199.4249, -200.7882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.0312, -197.6718, -196.6269, -199.5418, -200.8872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-195.1690, -197.6812, -196.5789, -199.6245, -200.9777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.3080, -197.6870, -196.5233, -199.6915, -201.0733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.4226, -197.7053, -196.4763, -199.7452, -201.1442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.5338, -197.7351, -196.4393, -199.8095, -201.1989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-195.4817, -197.7626, -196.4388, -199.7818, -201.1306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-195.3511, -197.7890, -196.4609, -199.7079, -201.0089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.2095, -197.7849, -196.4932, -199.6352, -200.8798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.9775, -197.7513, -196.5804, -199.5593, -200.6727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.9078, -197.7505, -196.6102, -199.5503, -200.5972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-194.7983, -197.7350, -196.6610, -199.5352, -200.4955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.7065, -197.6968, -196.7164, -199.5385, -200.4017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.6864, -197.6408, -196.7631, -199.6017, -200.3609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.6988, -197.6322, -196.7684, -199.6401, -200.3535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.8038, -197.6173, -196.7476, -199.7419, -200.4009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-194.8915, -197.6322, -196.7055, -199.7975, -200.4465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.9508, -197.5945, -196.6906, -199.8689, -200.4713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.9728, -197.5722, -196.6739, -199.8880, -200.4789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-195.0385, -197.5673, -196.6362, -199.9211, -200.5183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-195.1039, -197.5542, -196.5955, -199.9487, -200.5595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.9993, -197.5100, -196.6262, -199.9005, -200.4662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.9966, -197.4977, -196.6390, -199.9142, -200.4448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.8715, -197.4777, -196.6639, -199.8318, -200.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.8543, -197.4880, -196.6358, -199.7793, -200.3468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.9142, -197.5189, -196.5829, -199.7660, -200.4107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.9509, -197.5182, -196.5266, -199.7322, -200.4743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.9602, -197.5383, -196.4581, -199.6635, -200.5219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.9462, -197.5573, -196.4372, -199.6268, -200.5309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.8348, -197.5993, -196.4125, -199.4835, -200.4739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.7911, -197.6756, -196.3772, -199.3831, -200.4623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.7928, -197.7977, -196.3181, -199.2849, -200.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.8409, -197.9276, -196.2534, -199.2186, -200.5275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.8571, -198.0420, -196.2054, -199.1498, -200.5501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.8569, -198.1411, -196.1618, -199.0655, -200.5603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.9647, -198.2638, -196.0884, -199.0272, -200.6589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.1480, -198.3717, -195.9903, -199.0244, -200.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.2756, -198.4259, -195.9313, -199.0439, -200.9291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-195.3091, -198.4284, -195.9193, -199.0467, -200.9613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.3375, -198.4064, -195.9162, -199.0611, -200.9780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.4139, -198.3942, -195.9152, -199.1325, -201.0239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.3948, -198.3569, -195.9251, -199.1326, -201.0106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-195.3520, -198.3055, -195.9602, -199.1467, -200.9659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.1824, -198.1644, -196.0553, -199.1459, -200.8253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.0345, -198.0029, -196.1469, -199.1633, -200.7015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.8095, -197.8417, -196.2463, -199.1202, -200.5197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.5235, -197.6955, -196.3650, -199.0402, -200.2887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.3537, -197.5915, -196.4504, -199.0023, -200.1477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.2668, -197.4947, -196.5283, -199.0200, -200.0743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.1654, -197.3845, -196.6081, -199.0310, -199.9925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.0912, -197.2729, -196.6752, -199.0469, -199.9344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-193.9991, -197.1795, -196.7230, -199.0144, -199.8743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-193.9268, -197.0830, -196.7715, -198.9993, -199.8317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-193.8978, -197.0096, -196.7970, -198.9888, -199.8319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.8306, -196.9256, -196.8341, -198.9606, -199.8008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.8264, -196.8945, -196.8276, -198.9198, -199.8183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-193.8087, -196.9061, -196.8021, -198.8380, -199.8270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.7930, -196.9475, -196.7575, -198.7392, -199.8418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.8064, -196.9971, -196.7126, -198.6680, -199.8625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.8378, -197.0498, -196.6597, -198.6072, -199.8997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-193.8098, -197.0912, -196.6373, -198.5265, -199.8854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-193.7116, -197.1363, -196.6304, -198.3967, -199.8248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.8091, -197.2007, -196.5556, -198.3622, -199.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.8483, -197.2235, -196.5236, -198.3402, -199.9596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.9064, -197.2815, -196.4808, -198.3246, -200.0150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.0367, -197.3545, -196.4149, -198.3417, -200.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.1983, -197.4355, -196.3495, -198.3968, -200.2538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-194.3269, -197.5385, -196.2729, -198.3986, -200.3624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.4670, -197.6650, -196.1800, -198.3811, -200.4812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.5762, -197.7605, -196.1208, -198.3888, -200.5638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.7930, -197.8697, -196.0392, -198.4578, -200.7313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.8960, -197.9206, -196.0225, -198.4974, -200.8082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.8860, -197.9254, -196.0521, -198.5070, -200.7981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.8060, -197.8965, -196.0923, -198.4761, -200.7462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.6903, -197.8763, -196.1285, -198.4154, -200.6704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.4283, -197.7994, -196.2198, -198.2997, -200.4792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.1309, -197.7184, -196.3496, -198.1981, -200.2451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.8182, -197.6246, -196.5064, -198.1111, -199.9828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.5160, -197.5114, -196.6686, -198.0403, -199.7282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.2316, -197.4032, -196.8210, -197.9708, -199.4963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.0425, -197.3241, -196.9364, -197.9366, -199.3420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.9988, -197.2765, -196.9937, -197.9793, -199.2778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.0349, -197.2157, -197.0135, -198.0622, -199.2876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-193.0336, -197.1597, -197.0318, -198.0981, -199.2828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.0371, -197.1175, -197.0283, -198.1066, -199.2893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-193.0519, -197.0832, -197.0172, -198.1177, -199.3024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.1678, -197.0756, -196.9771, -198.1809, -199.3834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.2896, -197.0517, -196.9483, -198.2708, -199.4699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.4141, -197.0270, -196.9096, -198.3518, -199.5636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.6725, -197.0478, -196.8120, -198.4815, -199.7636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.7948, -197.0672, -196.7559, -198.5297, -199.8511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.9573, -197.0979, -196.6878, -198.5965, -199.9655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.1743, -197.1516, -196.6030, -198.6795, -200.1273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.4734, -197.2095, -196.5119, -198.8241, -200.3553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.6600, -197.2360, -196.4715, -198.9401, -200.4806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.7599, -197.2538, -196.4555, -199.0126, -200.5210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.8027, -197.2395, -196.4532, -199.0537, -200.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.8192, -197.2078, -196.4774, -199.1132, -200.5034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-194.8776, -197.2020, -196.4796, -199.1759, -200.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.9370, -197.2174, -196.4778, -199.2345, -200.5452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.9536, -197.2220, -196.4780, -199.2594, -200.5323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-195.0134, -197.2487, -196.4480, -199.2816, -200.5482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.9374, -197.2725, -196.4319, -199.1851, -200.4691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.9424, -197.3189, -196.3964, -199.1409, -200.4516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.9731, -197.3607, -196.3644, -199.1392, -200.4454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.9876, -197.4046, -196.3307, -199.1224, -200.4207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.9896, -197.4487, -196.2854, -199.0709, -200.3813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.8765, -197.4591, -196.2787, -198.9494, -200.2735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.8003, -197.4885, -196.2568, -198.8432, -200.2014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.7791, -197.5320, -196.2173, -198.7623, -200.1830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.7273, -197.5641, -196.1856, -198.6796, -200.1395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.6816, -197.6057, -196.1565, -198.6021, -200.0879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.6391, -197.6247, -196.1447, -198.5443, -200.0406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.5935, -197.6299, -196.1365, -198.4902, -200.0022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.5758, -197.6351, -196.1210, -198.4514, -199.9931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.5961, -197.6371, -196.0914, -198.4310, -200.0133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.7139, -197.6592, -196.0210, -198.4422, -200.1129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.9295, -197.6866, -195.9405, -198.5412, -200.3008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.1065, -197.7045, -195.8709, -198.6174, -200.4680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.1865, -197.6889, -195.8337, -198.6382, -200.5575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-195.2292, -197.6593, -195.8070, -198.6237, -200.6111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.1628, -197.6110, -195.8086, -198.5700, -200.5736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.0612, -197.5529, -195.8298, -198.5077, -200.4942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.0237, -197.5195, -195.8273, -198.4741, -200.4692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.8753, -197.4260, -195.8856, -198.4254, -200.3455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-194.6697, -197.3124, -195.9737, -198.3631, -200.1796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.4234, -197.2006, -196.0784, -198.2891, -199.9777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.0896, -197.0830, -196.2069, -198.1512, -199.7099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.7596, -196.9321, -196.3665, -198.0523, -199.4367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-193.5579, -196.8397, -196.4524, -197.9702, -199.2670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.5828, -196.8334, -196.4448, -197.9904, -199.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.7055, -196.8296, -196.4060, -198.0693, -199.3779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.8238, -196.8539, -196.3445, -198.1093, -199.4632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.9318, -196.8751, -196.2953, -198.1465, -199.5469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.9355, -196.8799, -196.2862, -198.1394, -199.5467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.9857, -196.9224, -196.2639, -198.1631, -199.5761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.0270, -196.9504, -196.2316, -198.1674, -199.6082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.1170, -196.9923, -196.1824, -198.1846, -199.6652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.2229, -197.0736, -196.1145, -198.1974, -199.7410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.4339, -197.1915, -196.0013, -198.2400, -199.8992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.5563, -197.3082, -195.9342, -198.2527, -199.9725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.6204, -197.4110, -195.8868, -198.2462, -199.9983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.5881, -197.4874, -195.8799, -198.2165, -199.9400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.6268, -197.5623, -195.8695, -198.2460, -199.9347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.7755, -197.6402, -195.8191, -198.3212, -200.0148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.8854, -197.6770, -195.7829, -198.3840, -200.0680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.8640, -197.6748, -195.7948, -198.3967, -200.0242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.7706, -197.6236, -195.8391, -198.3695, -199.9338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.7908, -197.5876, -195.8557, -198.4135, -199.9224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.8568, -197.5827, -195.8412, -198.4518, -199.9575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.9135, -197.5565, -195.8363, -198.4906, -199.9920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.9026, -197.5316, -195.8385, -198.4785, -199.9929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.7153, -197.4657, -195.9059, -198.3981, -199.8731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.5636, -197.3939, -195.9630, -198.3486, -199.7894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.4495, -197.3334, -195.9925, -198.2989, -199.7406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.2872, -197.2796, -196.0128, -198.1753, -199.6693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.1966, -197.2326, -196.0201, -198.0964, -199.6374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.1702, -197.1679, -196.0096, -198.0904, -199.6522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.0565, -197.0621, -196.0265, -198.0384, -199.5985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.8812, -196.9573, -196.0641, -197.9444, -199.5039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.7925, -196.8368, -196.0756, -197.9075, -199.4715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.7959, -196.7432, -196.0636, -197.9261, -199.4995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.7763, -196.6540, -196.0727, -197.9371, -199.4868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.7767, -196.6135, -196.0552, -197.9182, -199.5032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.9022, -196.6187, -195.9902, -197.9563, -199.6028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.0635, -196.6411, -195.9164, -198.0179, -199.7178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.2496, -196.6685, -195.8395, -198.0846, -199.8665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.3756, -196.6828, -195.7893, -198.1231, -199.9728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.5018, -196.6851, -195.7500, -198.1802, -200.0678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.5698, -196.6893, -195.7254, -198.2087, -200.1157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.5793, -196.6902, -195.7171, -198.2096, -200.1185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.6554, -196.7270, -195.6893, -198.2534, -200.1700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.6914, -196.7566, -195.6629, -198.2649, -200.1763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.6942, -196.7964, -195.6453, -198.2652, -200.1518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.5101, -196.7872, -195.6992, -198.1931, -199.9661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.2716, -196.7694, -195.7796, -198.0950, -199.7394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.1774, -196.7665, -195.8170, -198.0659, -199.6259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.1451, -196.7697, -195.8440, -198.0817, -199.5523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.2274, -196.8161, -195.8157, -198.1318, -199.5765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.1904, -196.8194, -195.8491, -198.1616, -199.5024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.1774, -196.8327, -195.8572, -198.1891, -199.4634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.1195, -196.8113, -195.8936, -198.2210, -199.3815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.1415, -196.8322, -195.8783, -198.2525, -199.3699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.2307, -196.8775, -195.8381, -198.3143, -199.4147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.4079, -196.9308, -195.7506, -198.3879, -199.5368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.5396, -196.9549, -195.6809, -198.4264, -199.6325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-194.6838, -196.9736, -195.5977, -198.4592, -199.7547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.8095, -197.0054, -195.5031, -198.4516, -199.8748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.9339, -197.0134, -195.4281, -198.4545, -199.9892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.0567, -197.0094, -195.3559, -198.4677, -200.1002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.0159, -196.9768, -195.3530, -198.4333, -200.0894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.9389, -196.9314, -195.3680, -198.3864, -200.0440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.7742, -196.8410, -195.4294, -198.3349, -199.9253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.4789, -196.7339, -195.5361, -198.2070, -199.7057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.2088, -196.6440, -195.6504, -198.1036, -199.4998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.0404, -196.5825, -195.7310, -198.0491, -199.3728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.9214, -196.5330, -195.7769, -198.0019, -199.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.8868, -196.5179, -195.7833, -197.9845, -199.2784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.9494, -196.5621, -195.7348, -197.9906, -199.3352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.0826, -196.6648, -195.6379, -197.9935, -199.4501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.3204, -196.7893, -195.5051, -198.0456, -199.6460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.5952, -196.9153, -195.3889, -198.1578, -199.8557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.8698, -197.0370, -195.2752, -198.2810, -200.0721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-195.1103, -197.1418, -195.1763, -198.3953, -200.2477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.1907, -197.1932, -195.1605, -198.4795, -200.2806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-195.2340, -197.2112, -195.1663, -198.5512, -200.2859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.2474, -197.2357, -195.1761, -198.5930, -200.2642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-195.2084, -197.2614, -195.1938, -198.5986, -200.2093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-195.0648, -197.2638, -195.2471, -198.5557, -200.0686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.0075, -197.2821, -195.2649, -198.5461, -200.0072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.9036, -197.2471, -195.3231, -198.5597, -199.8929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.7784, -197.1947, -195.3870, -198.5538, -199.7828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.5895, -197.1054, -195.4743, -198.5188, -199.6264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.4031, -196.9732, -195.5612, -198.4951, -199.4743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.2203, -196.8543, -195.6474, -198.4693, -199.3239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.9733, -196.7018, -195.7695, -198.4387, -199.1305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.8004, -196.5915, -195.8601, -198.4193, -198.9841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.6701, -196.5048, -195.9219, -198.4040, -198.8793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.5520, -196.3774, -195.9996, -198.4193, -198.7859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.5170, -196.3194, -196.0343, -198.4573, -198.7550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.5465, -196.3215, -196.0121, -198.4832, -198.7837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.5976, -196.3254, -195.9901, -198.5230, -198.8320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.6565, -196.3495, -195.9505, -198.5417, -198.8879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-193.5978, -196.3235, -195.9644, -198.5038, -198.8635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.5867, -196.3324, -195.9470, -198.4687, -198.8690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.5737, -196.3522, -195.9219, -198.4195, -198.8938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-193.6566, -196.4198, -195.8666, -198.4268, -198.9815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.8371, -196.5049, -195.7814, -198.4812, -199.1453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.0055, -196.5971, -195.6972, -198.5168, -199.2958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.1808, -196.6835, -195.6197, -198.5554, -199.4469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.3428, -196.7563, -195.5427, -198.5878, -199.5913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.4222, -196.8103, -195.5043, -198.5818, -199.6759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.5721, -196.9061, -195.4615, -198.6342, -199.8017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.5769, -196.9833, -195.4590, -198.5977, -199.8235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.5317, -197.0327, -195.4803, -198.5382, -199.8091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-194.4497, -197.0796, -195.5126, -198.4560, -199.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.3443, -197.0796, -195.5598, -198.3816, -199.6975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.2431, -197.0756, -195.6128, -198.3155, -199.6197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.0965, -197.0314, -195.6923, -198.2331, -199.5021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.0098, -196.9982, -195.7266, -198.1725, -199.4489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.0225, -197.0132, -195.7028, -198.1252, -199.4901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.0141, -197.0072, -195.6792, -198.0442, -199.5277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.0330, -197.0113, -195.6631, -198.0055, -199.5735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.9896, -196.9949, -195.6695, -197.9353, -199.5816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.8198, -196.9482, -195.7181, -197.7915, -199.4953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-193.7273, -196.9182, -195.7467, -197.6956, -199.4608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.6738, -196.8869, -195.7546, -197.6125, -199.4537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.6292, -196.8447, -195.7702, -197.5591, -199.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.6314, -196.8539, -195.7383, -197.4802, -199.4648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.5762, -196.8466, -195.7361, -197.3848, -199.4249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.5304, -196.8250, -195.7337, -197.3005, -199.3943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.4370, -196.8039, -195.7602, -197.2179, -199.3226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.4179, -196.7931, -195.7573, -197.1739, -199.3165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.3983, -196.7874, -195.7620, -197.1546, -199.2930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.4581, -196.8061, -195.7370, -197.1804, -199.3262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.5203, -196.8077, -195.7312, -197.2365, -199.3465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-193.6437, -196.8094, -195.6958, -197.3269, -199.4262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.7219, -196.7810, -195.6955, -197.4300, -199.4661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.8237, -196.7776, -195.6846, -197.5430, -199.5131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.9880, -196.7687, -195.6583, -197.6949, -199.5984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.0259, -196.7141, -195.6905, -197.8067, -199.5900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.0006, -196.6269, -195.7573, -197.9044, -199.5301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.0491, -196.5479, -195.7931, -198.0390, -199.5394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.1102, -196.5013, -195.8088, -198.1437, -199.5638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.1618, -196.4475, -195.8171, -198.2442, -199.5914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.2009, -196.3581, -195.8375, -198.3493, -199.6088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.2106, -196.2859, -195.8499, -198.4174, -199.6036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.1275, -196.2185, -195.8696, -198.4015, -199.5249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.0764, -196.1449, -195.9043, -198.4340, -199.4506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.0584, -196.1011, -195.9249, -198.4646, -199.4126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.0556, -196.0817, -195.9253, -198.4877, -199.3996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-194.1210, -196.1050, -195.8857, -198.5095, -199.4463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.1996, -196.1429, -195.8303, -198.5275, -199.5108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-194.2990, -196.1853, -195.7719, -198.5617, -199.5886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.2624, -196.2236, -195.7350, -198.4925, -199.5667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.1004, -196.2274, -195.7548, -198.3786, -199.4393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.9246, -196.2279, -195.7728, -198.2609, -199.2968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.7706, -196.2495, -195.7634, -198.1239, -199.1910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.6850, -196.3013, -195.7252, -198.0118, -199.1362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.6166, -196.3556, -195.6727, -197.8988, -199.0941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.5711, -196.4100, -195.6199, -197.8098, -199.0661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.5367, -196.4531, -195.5740, -197.7321, -199.0466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.4100, -196.4486, -195.5754, -197.6219, -198.9472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.3096, -196.4027, -195.6106, -197.5848, -198.8500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.2775, -196.3671, -195.6231, -197.5929, -198.7955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.2483, -196.3305, -195.6403, -197.6178, -198.7247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-193.2249, -196.3131, -195.6503, -197.6324, -198.6659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.2712, -196.3496, -195.6184, -197.6653, -198.6598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.4628, -196.4336, -195.5340, -197.7783, -198.7777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-193.6190, -196.4858, -195.4747, -197.8850, -198.8674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-193.8212, -196.5512, -195.3888, -197.9983, -198.9910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.0210, -196.6329, -195.2890, -198.0826, -199.1200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.2365, -196.6935, -195.1879, -198.1612, -199.2649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.3999, -196.7481, -195.0924, -198.1880, -199.3850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.3219, -196.7138, -195.0920, -198.1221, -199.3243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.1374, -196.6461, -195.1652, -198.0505, -199.1703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.9472, -196.5862, -195.2563, -197.9932, -199.0087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.7281, -196.5133, -195.3730, -197.9252, -198.8285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.5988, -196.4461, -195.4424, -197.8845, -198.7132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.5568, -196.3844, -195.4873, -197.8915, -198.6638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.4815, -196.3043, -195.5440, -197.8876, -198.5997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.2955, -196.2090, -195.6444, -197.8302, -198.4508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.0036, -196.0715, -195.7868, -197.7182, -198.2232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.7529, -195.9491, -195.9038, -197.6074, -198.0404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-192.5813, -195.8647, -195.9815, -197.5308, -197.9320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.4084, -195.7707, -196.0677, -197.4617, -197.8130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.2706, -195.6944, -196.1322, -197.3979, -197.7167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.1662, -195.6353, -196.1787, -197.3539, -197.6414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.1575, -195.6197, -196.1753, -197.3454, -197.6464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-192.1335, -195.5839, -196.2063, -197.3649, -197.6234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.1899, -195.6153, -196.1701, -197.3789, -197.6852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.3209, -195.6385, -196.1266, -197.4682, -197.7952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-192.5573, -195.7094, -196.0271, -197.5943, -197.9837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.8555, -195.8070, -195.8909, -197.7255, -198.2298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.1440, -195.9231, -195.7652, -197.8498, -198.4526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.4386, -196.0416, -195.6379, -197.9726, -198.6820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.7253, -196.1376, -195.5273, -198.1060, -198.9054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.0320, -196.2114, -195.4167, -198.2513, -199.1302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.2637, -196.2397, -195.3470, -198.3826, -199.2885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.5493, -196.3066, -195.2593, -198.5326, -199.4803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-194.7785, -196.3370, -195.2068, -198.6684, -199.6292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.9857, -196.3769, -195.1651, -198.7902, -199.7688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.0690, -196.4141, -195.1513, -198.8303, -199.8182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.2177, -196.4761, -195.1126, -198.9010, -199.9064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.3652, -196.5536, -195.0640, -198.9550, -200.0090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.4974, -196.6486, -195.0062, -198.9778, -200.1132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.5894, -196.7128, -194.9715, -198.9962, -200.1882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.5581, -196.7547, -194.9676, -198.9546, -200.1611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.4361, -196.7649, -194.9807, -198.8508, -200.0739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.2943, -196.7502, -195.0110, -198.7532, -199.9716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.0215, -196.7018, -195.0716, -198.5803, -199.7708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.5977, -196.6381, -195.1674, -198.3131, -199.4562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.1103, -196.5381, -195.2978, -198.0199, -199.0874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.6893, -196.4625, -195.3983, -197.7331, -198.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.3542, -196.3882, -195.4879, -197.5110, -198.5545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.0932, -196.3138, -195.5626, -197.3340, -198.3710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.9260, -196.2564, -195.5916, -197.1915, -198.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.6928, -196.1761, -195.6433, -197.0194, -198.1210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-192.5439, -196.1272, -195.6591, -196.8860, -198.0339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.5170, -196.0822, -195.6300, -196.8390, -198.0595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.4387, -196.0567, -195.5944, -196.7258, -198.0606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.4863, -196.0768, -195.5074, -196.6653, -198.1621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-192.5963, -196.1123, -195.4075, -196.6632, -198.3031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.7329, -196.1420, -195.3152, -196.7078, -198.4528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.7767, -196.1458, -195.2702, -196.7063, -198.5285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.9678, -196.2082, -195.1741, -196.7928, -198.6969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.1451, -196.2865, -195.0595, -196.8416, -198.8706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.4178, -196.3565, -194.9318, -196.9682, -199.1101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.7093, -196.3947, -194.8320, -197.1496, -199.3553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.9357, -196.4313, -194.7670, -197.3023, -199.5426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.0247, -196.4223, -194.7518, -197.3849, -199.6258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.0165, -196.3828, -194.7814, -197.4336, -199.6283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.8603, -196.2862, -194.8904, -197.4627, -199.5045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.7413, -196.1807, -195.0003, -197.5157, -199.4144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-193.5639, -196.0853, -195.1273, -197.5255, -199.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.3692, -195.9902, -195.2478, -197.5112, -199.1093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.1900, -195.9069, -195.3467, -197.4888, -198.9634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-193.0614, -195.8397, -195.4048, -197.4545, -198.8641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.0375, -195.7982, -195.4357, -197.4808, -198.8388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.2291, -195.8214, -195.3915, -197.6223, -198.9746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.3328, -195.8242, -195.3894, -197.7196, -199.0271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.3881, -195.8337, -195.3911, -197.7729, -199.0366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.4245, -195.8686, -195.4022, -197.8150, -199.0206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.3388, -195.8562, -195.4541, -197.7853, -198.9134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-193.2666, -195.8767, -195.4746, -197.7194, -198.8134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.3243, -195.9340, -195.4504, -197.7294, -198.8090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-193.4305, -195.9839, -195.4228, -197.7749, -198.8462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.5585, -196.0353, -195.3934, -197.8541, -198.8985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.6590, -196.0715, -195.3742, -197.9249, -198.9273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-193.7763, -196.1161, -195.3195, -197.9676, -198.9902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-193.8608, -196.1084, -195.3098, -198.0390, -199.0238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.8878, -196.0842, -195.3113, -198.0714, -199.0286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.9208, -196.0460, -195.3115, -198.0992, -199.0426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.9388, -196.0083, -195.3133, -198.1214, -199.0579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.9084, -195.9697, -195.3217, -198.1106, -199.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.7308, -195.9265, -195.3582, -197.9904, -198.9139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.6567, -195.9128, -195.3490, -197.9181, -198.8679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.6421, -195.9128, -195.3065, -197.8596, -198.8752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-193.7038, -195.9391, -195.2370, -197.8430, -198.9401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.7806, -195.9788, -195.1461, -197.8151, -199.0215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-193.8162, -195.9992, -195.0889, -197.7934, -199.0665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.8518, -196.0205, -195.0291, -197.7684, -199.1014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.7815, -196.0169, -195.0008, -197.6890, -199.0591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-193.6888, -195.9951, -195.0049, -197.6301, -198.9874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.6884, -195.9797, -194.9890, -197.6284, -198.9699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.8072, -195.9921, -194.9507, -197.7119, -199.0366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.0096, -196.0755, -194.8521, -197.7883, -199.1759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.1052, -196.1268, -194.7962, -197.8279, -199.2165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.1314, -196.1474, -194.7625, -197.8283, -199.2130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.1998, -196.1689, -194.7106, -197.8377, -199.2456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-194.1934, -196.1649, -194.6890, -197.8185, -199.2141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.1833, -196.1589, -194.6853, -197.8159, -199.1789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.1723, -196.1652, -194.6788, -197.8113, -199.1461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.1125, -196.1246, -194.7099, -197.8067, -199.0683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.0613, -196.0556, -194.7637, -197.8413, -198.9910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.0011, -196.0071, -194.8061, -197.8414, -198.9121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.9878, -196.0284, -194.8035, -197.8194, -198.8853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.0280, -196.0579, -194.7858, -197.8242, -198.9044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.0116, -196.0899, -194.7669, -197.7795, -198.9046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.9927, -196.1124, -194.7527, -197.7282, -198.8958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.9284, -196.1085, -194.7618, -197.6691, -198.8448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.0164, -196.1201, -194.7177, -197.6983, -198.9137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.9388, -196.0683, -194.7613, -197.7000, -198.8321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-193.8392, -196.0050, -194.8057, -197.6808, -198.7433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.7772, -195.9860, -194.8274, -197.6650, -198.6878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-193.7530, -195.9871, -194.8246, -197.6434, -198.6739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-193.6609, -195.9633, -194.8539, -197.6095, -198.6229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.4755, -195.9031, -194.9111, -197.5170, -198.4961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.2646, -195.8678, -194.9598, -197.3713, -198.3498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-193.0923, -195.8439, -195.0142, -197.2829, -198.2286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.0624, -195.8316, -195.0095, -197.2638, -198.2103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.8507, -195.7712, -195.0823, -197.1641, -198.0514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-192.6810, -195.7098, -195.1100, -197.0577, -197.9437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.4498, -195.6581, -195.1625, -196.9023, -197.7863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.3027, -195.5964, -195.1972, -196.8162, -197.6950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-192.0765, -195.4974, -195.2777, -196.6987, -197.5467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-191.8797, -195.4239, -195.3296, -196.5715, -197.4163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-191.8503, -195.3838, -195.2992, -196.5391, -197.4179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.7954, -195.3255, -195.2950, -196.4974, -197.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-191.8232, -195.2905, -195.2417, -196.4868, -197.4626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.9387, -195.2790, -195.1725, -196.5461, -197.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.0823, -195.2810, -195.0922, -196.6180, -197.7160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.3668, -195.3140, -194.9480, -196.7400, -197.9621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.4643, -195.3197, -194.8789, -196.7590, -198.0572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.6588, -195.3535, -194.7849, -196.8381, -198.2194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.8116, -195.4039, -194.7087, -196.9033, -198.3547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.9111, -195.4409, -194.6596, -196.9418, -198.4531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.9454, -195.4759, -194.6288, -196.9375, -198.5038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.0265, -195.5247, -194.5825, -196.9562, -198.5861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.0600, -195.5795, -194.5479, -196.9418, -198.6302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.0450, -195.6246, -194.5531, -196.9267, -198.6190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.1249, -195.7089, -194.5103, -196.9415, -198.6666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.2628, -195.8090, -194.4495, -196.9859, -198.7736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.4109, -195.9149, -194.3967, -197.0448, -198.8911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.4991, -196.0213, -194.3529, -197.0497, -198.9721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.6732, -196.1282, -194.2760, -197.0892, -199.1250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.7648, -196.1488, -194.2560, -197.1310, -199.2208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.8706, -196.1665, -194.2226, -197.1631, -199.3159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.0796, -196.2189, -194.1489, -197.2335, -199.4895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.3009, -196.2363, -194.1146, -197.3634, -199.6725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.4363, -196.2184, -194.1104, -197.4618, -199.7932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.4882, -196.1771, -194.1471, -197.5373, -199.8548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-194.5752, -196.1575, -194.1460, -197.6102, -199.9566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.4342, -196.0680, -194.2309, -197.6051, -199.8708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.2200, -195.9746, -194.3311, -197.5477, -199.7164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.8775, -195.8259, -194.4737, -197.4144, -199.4816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.5644, -195.6875, -194.6117, -197.2901, -199.2667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.1951, -195.5902, -194.7427, -197.1010, -199.0052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.7609, -195.4916, -194.8919, -196.8748, -198.6947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-192.4161, -195.4100, -195.0199, -196.7086, -198.4440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.1801, -195.3921, -195.0884, -196.5579, -198.2767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.0547, -195.3756, -195.1408, -196.5054, -198.1895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.0101, -195.3585, -195.1614, -196.4948, -198.1693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.0498, -195.3973, -195.1365, -196.5089, -198.2057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-192.1498, -195.4291, -195.1145, -196.5980, -198.2662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.3560, -195.5067, -195.0553, -196.7488, -198.3998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-192.6195, -195.5905, -194.9680, -196.9305, -198.5704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.7450, -195.5925, -194.9311, -197.0359, -198.6426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.8329, -195.5796, -194.9001, -197.1009, -198.6971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.9220, -195.5651, -194.8774, -197.1744, -198.7501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.8761, -195.5189, -194.9007, -197.1730, -198.7039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-192.6921, -195.4594, -194.9517, -197.0848, -198.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-192.7261, -195.4850, -194.9117, -197.0736, -198.5845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-192.7547, -195.4894, -194.8796, -197.0711, -198.6014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.7925, -195.5126, -194.8317, -197.0579, -198.6286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.9140, -195.5431, -194.7587, -197.0800, -198.7243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.0579, -195.5807, -194.6934, -197.1430, -198.8269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.0644, -195.5796, -194.6741, -197.1409, -198.8114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.0228, -195.5326, -194.7028, -197.1630, -198.7428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.9640, -195.4698, -194.7474, -197.1874, -198.6491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.8924, -195.4038, -194.7963, -197.2001, -198.5482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-192.7300, -195.3251, -194.8681, -197.1523, -198.3900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.6959, -195.2525, -194.8974, -197.1626, -198.3425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-192.6801, -195.1745, -194.9168, -197.1746, -198.3052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.6781, -195.1071, -194.9477, -197.2057, -198.2677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.5570, -195.0072, -195.0230, -197.1879, -198.1341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-192.4721, -194.9368, -195.0673, -197.1637, -198.0368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.4374, -194.9058, -195.0769, -197.1441, -197.9852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.4481, -194.8721, -195.0691, -197.1397, -197.9736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.5808, -194.9158, -195.0163, -197.1863, -198.0384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.5380, -194.9444, -195.0078, -197.1348, -197.9680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.4854, -194.9682, -195.0075, -197.0821, -197.8879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.4742, -194.9959, -195.0057, -197.0524, -197.8235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.3830, -195.0034, -195.0295, -196.9756, -197.7056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.3804, -195.0614, -194.9950, -196.9036, -197.6735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.4882, -195.1260, -194.9334, -196.9028, -197.7254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.5693, -195.2078, -194.8679, -196.8728, -197.7660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.6539, -195.2790, -194.8187, -196.8699, -197.8140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.6956, -195.3272, -194.7974, -196.8747, -197.8401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.8265, -195.3825, -194.7487, -196.9371, -197.9342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.7616, -195.3564, -194.7902, -196.9383, -197.8809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.5903, -195.2925, -194.8431, -196.8663, -197.7680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.5289, -195.2781, -194.8419, -196.8168, -197.7462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.4963, -195.2781, -194.8128, -196.7619, -197.7640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.3452, -195.2858, -194.8173, -196.6255, -197.6864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-192.0680, -195.2578, -194.8698, -196.4272, -197.5123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.0007, -195.2741, -194.8565, -196.3528, -197.4770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.0299, -195.3112, -194.8086, -196.3314, -197.5333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-191.9306, -195.3104, -194.8158, -196.2510, -197.4787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-191.8500, -195.2890, -194.8130, -196.1755, -197.4560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.9198, -195.2935, -194.7585, -196.1843, -197.5437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-191.9664, -195.3108, -194.7096, -196.1657, -197.6040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.0107, -195.3131, -194.6712, -196.1504, -197.6878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.1156, -195.3912, -194.5850, -196.1308, -197.7990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.1462, -195.4667, -194.5404, -196.0895, -197.8453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.3066, -195.5535, -194.4531, -196.1405, -197.9710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.3861, -195.6235, -194.4001, -196.1512, -198.0393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.5097, -195.6806, -194.3403, -196.2047, -198.1500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.6504, -195.7311, -194.2727, -196.2634, -198.2580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.6869, -195.7549, -194.2486, -196.2895, -198.2766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.8292, -195.7932, -194.1801, -196.3672, -198.3582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.9079, -195.8252, -194.1334, -196.4111, -198.3810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.8301, -195.8069, -194.1566, -196.3947, -198.2881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.6643, -195.7493, -194.2234, -196.3365, -198.1329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.3700, -195.6325, -194.3435, -196.2431, -197.8867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.1233, -195.5329, -194.4606, -196.1847, -197.6660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-191.9154, -195.4839, -194.5459, -196.1152, -197.4757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.6833, -195.4536, -194.6244, -196.0062, -197.2917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-191.5533, -195.4456, -194.6780, -195.9664, -197.1780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-191.5785, -195.4610, -194.6571, -195.9998, -197.1876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-191.5744, -195.4245, -194.6507, -196.0119, -197.1853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-191.6351, -195.3847, -194.6336, -196.0708, -197.2051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-191.7830, -195.3799, -194.5935, -196.1920, -197.2718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-191.8979, -195.3866, -194.5459, -196.2586, -197.3334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.1109, -195.4181, -194.4405, -196.3551, -197.4931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-192.4047, -195.4978, -194.2917, -196.4818, -197.7356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.7554, -195.5895, -194.1407, -196.6519, -198.0194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.0890, -195.6507, -194.0162, -196.8339, -198.3002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.3373, -195.7010, -193.9035, -196.9407, -198.5304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.5494, -195.7486, -193.8049, -197.0232, -198.7431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.6837, -195.8023, -193.7364, -197.0720, -198.8880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.7505, -195.8186, -193.6989, -197.1037, -198.9672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.6055, -195.7764, -193.7403, -197.0511, -198.8886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.4844, -195.7433, -193.7897, -197.0143, -198.8212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.2358, -195.6501, -193.9021, -196.9335, -198.6346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.0977, -195.5810, -193.9839, -196.9098, -198.5159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.6835, -195.4554, -194.1577, -196.7353, -198.2010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.3136, -195.3426, -194.3075, -196.5583, -197.9291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-191.8454, -195.2225, -194.4884, -196.3093, -197.5796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-191.4320, -195.0968, -194.6949, -196.1221, -197.2542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-191.0089, -194.9634, -194.9408, -195.9522, -196.8837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-190.7137, -194.8632, -195.1374, -195.8537, -196.6212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-190.4305, -194.7719, -195.3072, -195.7325, -196.3937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-190.3094, -194.7189, -195.4065, -195.7034, -196.2694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-190.3127, -194.7055, -195.4188, -195.7078, -196.2577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-190.4513, -194.7294, -195.3517, -195.7791, -196.3436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-190.6775, -194.7864, -195.2414, -195.8992, -196.5030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-190.8742, -194.8365, -195.1506, -196.0037, -196.6444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-191.1888, -194.8985, -195.0069, -196.1756, -196.8929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-191.5567, -194.9669, -194.8494, -196.3760, -197.1913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-191.9472, -195.0333, -194.6938, -196.5976, -197.5077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.3089, -195.1120, -194.5388, -196.7705, -197.8145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.6485, -195.2011, -194.4157, -196.9412, -198.1004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.8528, -195.2587, -194.3420, -197.0297, -198.2748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.0787, -195.3501, -194.2466, -197.1062, -198.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.1254, -195.3866, -194.2280, -197.1194, -198.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.1891, -195.4553, -194.1757, -197.1122, -198.5877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-193.1156, -195.4618, -194.2023, -197.0718, -198.5148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.1005, -195.4953, -194.2116, -197.0581, -198.4909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.0121, -195.5118, -194.2407, -196.9899, -198.4178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.0303, -195.5514, -194.2214, -196.9623, -198.4398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-192.9344, -195.5458, -194.2524, -196.9032, -198.3677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-192.7563, -195.5008, -194.3307, -196.8179, -198.2295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-192.5455, -195.4506, -194.4143, -196.7057, -198.0645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.2657, -195.3567, -194.5383, -196.5681, -197.8300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-191.9970, -195.2521, -194.6710, -196.4497, -197.6121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-191.9241, -195.1749, -194.7293, -196.4355, -197.5405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.0008, -195.1571, -194.7352, -196.5011, -197.5747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.0183, -195.1192, -194.7601, -196.5214, -197.5684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.0077, -195.0583, -194.7723, -196.4836, -197.5588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.0582, -195.0389, -194.7414, -196.4516, -197.5948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-192.0985, -195.0115, -194.7423, -196.4507, -197.5972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.1514, -194.9716, -194.7203, -196.4291, -197.6183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-192.1440, -194.8809, -194.7503, -196.4108, -197.5927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.9054, -194.7808, -194.8367, -196.2569, -197.4155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-191.7395, -194.7276, -194.8746, -196.0970, -197.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-191.6046, -194.6907, -194.9203, -195.9723, -197.1724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-191.5018, -194.6476, -194.9571, -195.8706, -197.0719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-191.4459, -194.6256, -194.9590, -195.7984, -197.0016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.4752, -194.6361, -194.9087, -195.7583, -197.0030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.5667, -194.6479, -194.8574, -195.8034, -197.0382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.6826, -194.6725, -194.7849, -195.8517, -197.1114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-191.8882, -194.7229, -194.6700, -195.9399, -197.2437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.1605, -194.8032, -194.5301, -196.0508, -197.4275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.5282, -194.9086, -194.3576, -196.2101, -197.6774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.8978, -195.0188, -194.2049, -196.3823, -197.9172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.2250, -195.0872, -194.0920, -196.5600, -198.1160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.6398, -195.1724, -193.9519, -196.7826, -198.3977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.0499, -195.2453, -193.8117, -196.9821, -198.6949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.4032, -195.3297, -193.6887, -197.1406, -198.9511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.5351, -195.3766, -193.6087, -197.1628, -199.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.4788, -195.3763, -193.5835, -197.1007, -198.9616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-194.4257, -195.3690, -193.5712, -197.0635, -198.8913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.2660, -195.3250, -193.5886, -196.9718, -198.7501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.9426, -195.2773, -193.6473, -196.7854, -198.4841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.6680, -195.2110, -193.7021, -196.6266, -198.2552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.4382, -195.1789, -193.7344, -196.4660, -198.0879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.2383, -195.1685, -193.7715, -196.3190, -197.9248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.9911, -195.1647, -193.8257, -196.1376, -197.7192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.9333, -195.1712, -193.8341, -196.0858, -197.6372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.9375, -195.1989, -193.8139, -196.0486, -197.5980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.9039, -195.2295, -193.7964, -195.9789, -197.5425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.8531, -195.2422, -193.7826, -195.9043, -197.4699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-192.7835, -195.2166, -193.8130, -195.8753, -197.3752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.8101, -195.1872, -193.8045, -195.9063, -197.3693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.8605, -195.1637, -193.7935, -195.9631, -197.3883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-192.9237, -195.1388, -193.7652, -196.0191, -197.4289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.9830, -195.0642, -193.7770, -196.1382, -197.4806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-192.8899, -194.9717, -193.8314, -196.1644, -197.4346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-192.8497, -194.8697, -193.8808, -196.2321, -197.4228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.7984, -194.7683, -193.9241, -196.2741, -197.4010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.7572, -194.6899, -193.9722, -196.3344, -197.3890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.7349, -194.6445, -194.0185, -196.3966, -197.3701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-192.7160, -194.5962, -194.0538, -196.4536, -197.3656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.6848, -194.5519, -194.1046, -196.5132, -197.3314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.6082, -194.4976, -194.1772, -196.5574, -197.2368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-192.6087, -194.4865, -194.1997, -196.6030, -197.2184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.5282, -194.4590, -194.2366, -196.5797, -197.1544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.4344, -194.4275, -194.2824, -196.5356, -197.0773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-192.3682, -194.4085, -194.3193, -196.5098, -197.0189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.3021, -194.3954, -194.3601, -196.4809, -196.9646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.3674, -194.4411, -194.3166, -196.4775, -197.0040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.4053, -194.5092, -194.2576, -196.4265, -197.0159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.5572, -194.5920, -194.1644, -196.4460, -197.1248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.6849, -194.6667, -194.0594, -196.4325, -197.2366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.7339, -194.7366, -193.9647, -196.3498, -197.3124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-192.9182, -194.8244, -193.8278, -196.3500, -197.5010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.9476, -194.8838, -193.7290, -196.2386, -197.5789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-192.9081, -194.9237, -193.6733, -196.1133, -197.5950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.9962, -194.9863, -193.5660, -196.0481, -197.7147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.1810, -195.0436, -193.4419, -196.0681, -197.9032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.1836, -195.0491, -193.4079, -196.0284, -197.9230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.1718, -195.0827, -193.3518, -195.9498, -197.9788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.1920, -195.1198, -193.2994, -195.9141, -198.0366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.1544, -195.1264, -193.2721, -195.8586, -198.0568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.2271, -195.1469, -193.2035, -195.8441, -198.1691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.3234, -195.1927, -193.1508, -195.8643, -198.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.4582, -195.2294, -193.1041, -195.9298, -198.3624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.6461, -195.2342, -193.0635, -196.0538, -198.5198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-193.7598, -195.2342, -193.0560, -196.1584, -198.6191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.7574, -195.1870, -193.1040, -196.2345, -198.6153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.6529, -195.0973, -193.1938, -196.2772, -198.5334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.3733, -194.9803, -193.3363, -196.2213, -198.3119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.0793, -194.8801, -193.4804, -196.1391, -198.0871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.9004, -194.8012, -193.5737, -196.1006, -197.9541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.7891, -194.7082, -193.6462, -196.1091, -197.8625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.7805, -194.6547, -193.6816, -196.1559, -197.8438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.7978, -194.6209, -193.6761, -196.1656, -197.8611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.8246, -194.5927, -193.6836, -196.2084, -197.8792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-192.8344, -194.5899, -193.6936, -196.2316, -197.8661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.8268, -194.5946, -193.7104, -196.2420, -197.8354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.7834, -194.6220, -193.6988, -196.1792, -197.8149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.7421, -194.6558, -193.7096, -196.1511, -197.7765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.6673, -194.6687, -193.7495, -196.1419, -197.7059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.7426, -194.7171, -193.7356, -196.2043, -197.7519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-192.8831, -194.8044, -193.6753, -196.2689, -197.8559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.0258, -194.8817, -193.6011, -196.2975, -197.9730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.0952, -194.9056, -193.5521, -196.2851, -198.0462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.1341, -194.8904, -193.5151, -196.2589, -198.1110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.1168, -194.8722, -193.4920, -196.2085, -198.1295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.0408, -194.8380, -193.4839, -196.1100, -198.0934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.9370, -194.7813, -193.5234, -196.0366, -198.0168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.7212, -194.6825, -193.6342, -195.9505, -197.8477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.6209, -194.6107, -193.7194, -195.9480, -197.7588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.4419, -194.5205, -193.8311, -195.8917, -197.6105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-192.1789, -194.4287, -193.9596, -195.7820, -197.4058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-191.9281, -194.3734, -194.0607, -195.6486, -197.2106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-191.7300, -194.3152, -194.1598, -195.5750, -197.0269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-191.6368, -194.3204, -194.2129, -195.5409, -196.9073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.5840, -194.3168, -194.2487, -195.5300, -196.8346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-191.5953, -194.3584, -194.2573, -195.5435, -196.8010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-191.6389, -194.4213, -194.2375, -195.5568, -196.8115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-191.6553, -194.4730, -194.2312, -195.5628, -196.8082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-191.7438, -194.5165, -194.2024, -195.6253, -196.8671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.9273, -194.5830, -194.1636, -195.7742, -196.9908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-191.9878, -194.6172, -194.1412, -195.8207, -197.0495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.9718, -194.6032, -194.1689, -195.8391, -197.0389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.1209, -194.6272, -194.1196, -195.9435, -197.1633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.3786, -194.6679, -194.0203, -196.1139, -197.3569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-192.6779, -194.7160, -193.8942, -196.2802, -197.5978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.9929, -194.7636, -193.7843, -196.4717, -197.8434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.1939, -194.7884, -193.7253, -196.6035, -197.9973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.2601, -194.7684, -193.7064, -196.6552, -198.0505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.2821, -194.7394, -193.6883, -196.6746, -198.0662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-193.2826, -194.7249, -193.6536, -196.6687, -198.0777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.0870, -194.6615, -193.6805, -196.5597, -197.9455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.7674, -194.5959, -193.7338, -196.3535, -197.7328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.5015, -194.5621, -193.7490, -196.1350, -197.5665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.3168, -194.5420, -193.7406, -195.9487, -197.4514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.0975, -194.5308, -193.7502, -195.7480, -197.3043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-191.9048, -194.5193, -193.7448, -195.5529, -197.1766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-191.8191, -194.5704, -193.6857, -195.3967, -197.1450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-191.7487, -194.6121, -193.6294, -195.2708, -197.1075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-191.8556, -194.6795, -193.5343, -195.2840, -197.1905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.1538, -194.8176, -193.3650, -195.4040, -197.3965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.4835, -194.9641, -193.1906, -195.5424, -197.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.7349, -195.1000, -193.0283, -195.6064, -197.8235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.9797, -195.2353, -192.8646, -195.6478, -198.0240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.2545, -195.3365, -192.7227, -195.7464, -198.2349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.5702, -195.4447, -192.6162, -195.9271, -198.4492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.7272, -195.4895, -192.5560, -196.0119, -198.5555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.7389, -195.5167, -192.5446, -196.0282, -198.5321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.6337, -195.4948, -192.5748, -195.9963, -198.4247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-193.3982, -195.4653, -192.6485, -195.9003, -198.2287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.1881, -195.4254, -192.7402, -195.8331, -198.0274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.0908, -195.4144, -192.7704, -195.7905, -197.9297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-192.8620, -195.3383, -192.8624, -195.6981, -197.7384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.5180, -195.2418, -192.9846, -195.5184, -197.4662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.2452, -195.1604, -193.0996, -195.4049, -197.2266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.0213, -195.0828, -193.2107, -195.3399, -197.0231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.7336, -194.9792, -193.3355, -195.2152, -196.7961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.5074, -194.8820, -193.3908, -195.0737, -196.6550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-191.4173, -194.7710, -193.4218, -195.0498, -196.6106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-191.4342, -194.6830, -193.4076, -195.0739, -196.6594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-191.4770, -194.6344, -193.4051, -195.1293, -196.7096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-191.5448, -194.5952, -193.3837, -195.1896, -196.7891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-191.5489, -194.5368, -193.3984, -195.2321, -196.8083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.6166, -194.4870, -193.3789, -195.2827, -196.8874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-191.7772, -194.4277, -193.3506, -195.4212, -197.0260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-192.0281, -194.3793, -193.2987, -195.6108, -197.2046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.2806, -194.3381, -193.2479, -195.8006, -197.3903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.4360, -194.3100, -193.2156, -195.9035, -197.5095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.5996, -194.2946, -193.1798, -196.0129, -197.6382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.7819, -194.3057, -193.1288, -196.1214, -197.7670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.8434, -194.2956, -193.1290, -196.1880, -197.7976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.0055, -194.3210, -193.1011, -196.3097, -197.8875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.9852, -194.3543, -193.0947, -196.2771, -197.8406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.8601, -194.3640, -193.1230, -196.2005, -197.7131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.7140, -194.3958, -193.1474, -196.0894, -197.5636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.5414, -194.4224, -193.1872, -195.9721, -197.4086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.4797, -194.4600, -193.1814, -195.8993, -197.3412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-192.4214, -194.5194, -193.1492, -195.7907, -197.2935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.4285, -194.5758, -193.1175, -195.7603, -197.2863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.4364, -194.6055, -193.1026, -195.7492, -197.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.4719, -194.6288, -193.0827, -195.7534, -197.2987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.4847, -194.6498, -193.0609, -195.7382, -197.2993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.3900, -194.6582, -193.0495, -195.6272, -197.2277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.1996, -194.6213, -193.0978, -195.4933, -197.0623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-191.8974, -194.5470, -193.1859, -195.2867, -196.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-191.5999, -194.4744, -193.2845, -195.0982, -196.5416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-191.3849, -194.4091, -193.3546, -194.9569, -196.3647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-191.1736, -194.3361, -193.4454, -194.8453, -196.1875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-191.0178, -194.2797, -193.4942, -194.7409, -196.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-190.9367, -194.2578, -193.5000, -194.6537, -195.9955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.0027, -194.2813, -193.4290, -194.6276, -196.0498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-191.1139, -194.3208, -193.3504, -194.6278, -196.1391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-191.3901, -194.3826, -193.2476, -194.7948, -196.3160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.7448, -194.4615, -193.0853, -194.9786, -196.5983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.1655, -194.5365, -192.9551, -195.2654, -196.8954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.6563, -194.6331, -192.8008, -195.5783, -197.2640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.9414, -194.6684, -192.7500, -195.8016, -197.4607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.1468, -194.7026, -192.7159, -195.9641, -197.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.0666, -194.7131, -192.7321, -195.9170, -197.5299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.8844, -194.6889, -192.7719, -195.8089, -197.3928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.6257, -194.6214, -192.8498, -195.6655, -197.1999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.3883, -194.5813, -192.9161, -195.5213, -197.0142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.2426, -194.5702, -192.9533, -195.4251, -196.9172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-192.0278, -194.5263, -192.9950, -195.2748, -196.7970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-191.8988, -194.4852, -193.0180, -195.1890, -196.7482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.9127, -194.4685, -192.9808, -195.1725, -196.8175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-191.9316, -194.4357, -192.9302, -195.1362, -196.9277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-191.9906, -194.4031, -192.8565, -195.1171, -197.0846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.0098, -194.3477, -192.8344, -195.1113, -197.1895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.0077, -194.2820, -192.8498, -195.1346, -197.2462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.0512, -194.2188, -192.8633, -195.1957, -197.3267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.2079, -194.1788, -192.8526, -195.3271, -197.4564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.2710, -194.1429, -192.8680, -195.4103, -197.4924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.1647, -194.0931, -192.9375, -195.3975, -197.3867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.0299, -194.0360, -193.0264, -195.3780, -197.2447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-191.9131, -194.0020, -193.1079, -195.3623, -197.1022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-191.7984, -194.0061, -193.1678, -195.3100, -196.9518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-191.5936, -194.0003, -193.2620, -195.2138, -196.7476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.3304, -194.0122, -193.3546, -195.0606, -196.5259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-191.0627, -194.0138, -193.4647, -194.9202, -196.3097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-190.8541, -194.0285, -193.5467, -194.8053, -196.1205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-190.7664, -194.0705, -193.5819, -194.7453, -196.0136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-190.7850, -194.1274, -193.5802, -194.7521, -195.9711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-190.7292, -194.1372, -193.6031, -194.7218, -195.8818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-190.7379, -194.1536, -193.5818, -194.7083, -195.8767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-190.8126, -194.1722, -193.5361, -194.7397, -195.9218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-191.0398, -194.2076, -193.4724, -194.9063, -196.0570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-191.3556, -194.2428, -193.3590, -195.0958, -196.2869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.7499, -194.3018, -193.1975, -195.2919, -196.6022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.1327, -194.3688, -193.0560, -195.4906, -196.9166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.4738, -194.3988, -192.9573, -195.6901, -197.2012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.7300, -194.4112, -192.8958, -195.8572, -197.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.7082, -194.3232, -192.9545, -195.9285, -197.3888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.8020, -194.2561, -192.9996, -196.0786, -197.4091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.9057, -194.2207, -192.9965, -196.1640, -197.4615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.8211, -194.1174, -193.0683, -196.1790, -197.3547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.7201, -193.9875, -193.1723, -196.2263, -197.2218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.6748, -193.8512, -193.2502, -196.2857, -197.1456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.7104, -193.7707, -193.2908, -196.3520, -197.1153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.6739, -193.6747, -193.3250, -196.3494, -197.0584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.6457, -193.6052, -193.3618, -196.3604, -196.9969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.4487, -193.5339, -193.4000, -196.2220, -196.8326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.4117, -193.5319, -193.3580, -196.1313, -196.7983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.4331, -193.5924, -193.2489, -196.0106, -196.8493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-192.5805, -193.6695, -193.1302, -196.0040, -196.9673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.6521, -193.7261, -193.0314, -195.9452, -197.0439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.7219, -193.7645, -192.9650, -195.9314, -197.1023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.7530, -193.7918, -192.8940, -195.8749, -197.1287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.8767, -193.8695, -192.7423, -195.8056, -197.2465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.0022, -193.9388, -192.6131, -195.7637, -197.3517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.1872, -194.0272, -192.4480, -195.7348, -197.5005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.2034, -194.0429, -192.3341, -195.6147, -197.5439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.1205, -194.0053, -192.2421, -195.4196, -197.5355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.9527, -193.9127, -192.2179, -195.2379, -197.4557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-192.8490, -193.8254, -192.1834, -195.0961, -197.4207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-192.7152, -193.7284, -192.1799, -194.9546, -197.3359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.5975, -193.6237, -192.1963, -194.8533, -197.2586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.6115, -193.5481, -192.1783, -194.8366, -197.2598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-192.3838, -193.4174, -192.2477, -194.7098, -197.0908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.1854, -193.3360, -192.2952, -194.5919, -196.9425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.9327, -193.2195, -192.3858, -194.4901, -196.7264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-191.7018, -193.0993, -192.4848, -194.4185, -196.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-191.3253, -192.9567, -192.6303, -194.2597, -196.2106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.0373, -192.8389, -192.7530, -194.1581, -195.9601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-190.7998, -192.7758, -192.8440, -194.0531, -195.7496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-190.6965, -192.7235, -192.8776, -194.0095, -195.6364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-190.6664, -192.6667, -192.8864, -194.0181, -195.5836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-190.7835, -192.6448, -192.8396, -194.1080, -195.6541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-190.9170, -192.6534, -192.7779, -194.1889, -195.7397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-191.0408, -192.6914, -192.7202, -194.2605, -195.8107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-191.1186, -192.7115, -192.7018, -194.3367, -195.8396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-191.2795, -192.7152, -192.6977, -194.5180, -195.9274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-191.5659, -192.7664, -192.6484, -194.7597, -196.1142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-191.7273, -192.7869, -192.6414, -194.9238, -196.2130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-191.8268, -192.8692, -192.5906, -194.9756, -196.2922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.9403, -192.9048, -192.5507, -195.0687, -196.3931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.0465, -192.9459, -192.5003, -195.1285, -196.4983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.2291, -192.9992, -192.4311, -195.2230, -196.6620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.3161, -193.0420, -192.3963, -195.2606, -196.7470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.3005, -193.0594, -192.3686, -195.2006, -196.7794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.0991, -193.0447, -192.3907, -195.0455, -196.6959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-191.9593, -193.0214, -192.3926, -194.9097, -196.6631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-191.6310, -192.9585, -192.4653, -194.6880, -196.5006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-191.1918, -192.9350, -192.5489, -194.3556, -196.2514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-190.7652, -192.9131, -192.6506, -194.0337, -196.0044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-190.4545, -192.8672, -192.7335, -193.7936, -195.8357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.2191, -192.8315, -192.8078, -193.6150, -195.7042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-190.1492, -192.8574, -192.8150, -193.5178, -195.6783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-190.0476, -192.8801, -192.8521, -193.4254, -195.6004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-189.9788, -192.9150, -192.8783, -193.3677, -195.5312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-189.9106, -192.9242, -192.9453, -193.3668, -195.4340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.8725, -192.9505, -193.0292, -193.4377, -195.3460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-189.8926, -192.9829, -193.0636, -193.5147, -195.3134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-190.0382, -193.0244, -193.0304, -193.6537, -195.3725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-190.2554, -193.0997, -192.9461, -193.8056, -195.5028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-190.3655, -193.1534, -192.9016, -193.8886, -195.5760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-190.4727, -193.1748, -192.8950, -194.0181, -195.6114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-190.5749, -193.1933, -192.8786, -194.1262, -195.6588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-190.6203, -193.1678, -192.9161, -194.2502, -195.6411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-190.7362, -193.1639, -192.9220, -194.4087, -195.6538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-190.9369, -193.1940, -192.8893, -194.6024, -195.7328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-191.1132, -193.2081, -192.9007, -194.8122, -195.7668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-191.1325, -193.2005, -192.9496, -194.9071, -195.7239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-191.1911, -193.2068, -192.9685, -195.0033, -195.7232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.2604, -193.2112, -192.9696, -195.0841, -195.7489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-191.2592, -193.2003, -193.0113, -195.1311, -195.7304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-191.3144, -193.2031, -193.0000, -195.1749, -195.7810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.4678, -193.2315, -192.9041, -195.2138, -195.9525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-191.5521, -193.2802, -192.8344, -195.2043, -196.0640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-191.7262, -193.3645, -192.6983, -195.2056, -196.2438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-191.9549, -193.4497, -192.5489, -195.2428, -196.4555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.1966, -193.5311, -192.4106, -195.3091, -196.6793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.4403, -193.6221, -192.2559, -195.3673, -196.9180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-192.5513, -193.6794, -192.1434, -195.3506, -197.0653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.5649, -193.7350, -192.0522, -195.2675, -197.1249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.3715, -193.7333, -192.0312, -195.0882, -197.0224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.2594, -193.7384, -192.0118, -194.9863, -196.9568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.2143, -193.7798, -191.9653, -194.9150, -196.9372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.0110, -193.7635, -191.9829, -194.7644, -196.7944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.7864, -193.7340, -192.0091, -194.5899, -196.6414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-191.5703, -193.6652, -192.0666, -194.4517, -196.4733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-191.3080, -193.6007, -192.1065, -194.2509, -196.3115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-191.0521, -193.5344, -192.1776, -194.0849, -196.1321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.8633, -193.4991, -192.2191, -193.9391, -195.9924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-190.6429, -193.4500, -192.2786, -193.7768, -195.8380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-190.5131, -193.4565, -192.2939, -193.6433, -195.7522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-190.4837, -193.4820, -192.2736, -193.5628, -195.7380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.4411, -193.4809, -192.2747, -193.4996, -195.7146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-190.4795, -193.4885, -192.2449, -193.5067, -195.7557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-190.5404, -193.5233, -192.2031, -193.4991, -195.8097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.6315, -193.5603, -192.1461, -193.4966, -195.9016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-190.8616, -193.6060, -192.0213, -193.5609, -196.0953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-191.0153, -193.6406, -191.9265, -193.5862, -196.2231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-191.2120, -193.6676, -191.8268, -193.6567, -196.3970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-191.3019, -193.6748, -191.7898, -193.6913, -196.4856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.4342, -193.6976, -191.7400, -193.7570, -196.5904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.6103, -193.7092, -191.7211, -193.9176, -196.6914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.7452, -193.7001, -191.7396, -194.0995, -196.7496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-191.8754, -193.6654, -191.7818, -194.3004, -196.7851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-191.9399, -193.6152, -191.8447, -194.4655, -196.7731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.0580, -193.5598, -191.8903, -194.6601, -196.8002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.1272, -193.5091, -191.9412, -194.8179, -196.7952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.1179, -193.4677, -191.9705, -194.8705, -196.7566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.0842, -193.3882, -192.0162, -194.9227, -196.7111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.1423, -193.3390, -192.0090, -194.9905, -196.7620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.2219, -193.2956, -191.9935, -195.0573, -196.8107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.4031, -193.2856, -191.9215, -195.1438, -196.9372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.6463, -193.2897, -191.8174, -195.2329, -197.1160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.7991, -193.3103, -191.7036, -195.2136, -197.2478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.7174, -193.2671, -191.6754, -195.0884, -197.1857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.7387, -193.2402, -191.6150, -195.0298, -197.2038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.5300, -193.1667, -191.6266, -194.8494, -197.0582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.2850, -193.0555, -191.7046, -194.7263, -196.8565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-191.8877, -192.9440, -191.8349, -194.5125, -196.5406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-191.3458, -192.8187, -192.0214, -194.1916, -196.1088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.8470, -192.7280, -192.1978, -193.8707, -195.7102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.3646, -192.6181, -192.3967, -193.5756, -195.3246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.9970, -192.5109, -192.5833, -193.3852, -195.0114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.6914, -192.4128, -192.7267, -193.1995, -194.7871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-189.5102, -192.3338, -192.8397, -193.1204, -194.6040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.4519, -192.3266, -192.8704, -193.0740, -194.5270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.4371, -192.3514, -192.8754, -193.0482, -194.4721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-189.4403, -192.3643, -192.8950, -193.0607, -194.4359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-189.6427, -192.3929, -192.8374, -193.2093, -194.5537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-189.8608, -192.4346, -192.7665, -193.3690, -194.6983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.1480, -192.5015, -192.6722, -193.5837, -194.8855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-190.3387, -192.5720, -192.5755, -193.6783, -195.0362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-190.7820, -192.6816, -192.3802, -193.9026, -195.3555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.2947, -192.8071, -192.1765, -194.1635, -195.7266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-191.6732, -192.8979, -192.0367, -194.3487, -196.0002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.1250, -192.9962, -191.8747, -194.5650, -196.3394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.4053, -193.0632, -191.7597, -194.6768, -196.5698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.4730, -193.0641, -191.7358, -194.7101, -196.6449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.5632, -193.1054, -191.6475, -194.6805, -196.7558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.5743, -193.1155, -191.5867, -194.6165, -196.8165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.3626, -193.0765, -191.5819, -194.4211, -196.7350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.0642, -193.0123, -191.6255, -194.2095, -196.5813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-191.9400, -192.9913, -191.6126, -194.0794, -196.5584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-191.8188, -192.9956, -191.6165, -193.9672, -196.4967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.6330, -192.9956, -191.6472, -193.8217, -196.3824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-191.4489, -192.9730, -191.6800, -193.6679, -196.2698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.3185, -192.9558, -191.7127, -193.5654, -196.1787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-191.1740, -192.9516, -191.7475, -193.4466, -196.0649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.0226, -192.9718, -191.7832, -193.3203, -195.9345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-190.9060, -192.9738, -191.8127, -193.2316, -195.8230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-190.7699, -192.9321, -191.8789, -193.1670, -195.6811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-190.5956, -192.8973, -191.9702, -193.0962, -195.5041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-190.2140, -192.8145, -192.1424, -192.9130, -195.1765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.8263, -192.7124, -192.3592, -192.7656, -194.8437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-189.6627, -192.6566, -192.4847, -192.7406, -194.6779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-189.6225, -192.6029, -192.5450, -192.7595, -194.6202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-189.7086, -192.5328, -192.5797, -192.8946, -194.6339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.7938, -192.5055, -192.5775, -192.9695, -194.6643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-189.9279, -192.5117, -192.5610, -193.0682, -194.7259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-190.1356, -192.5483, -192.5027, -193.1867, -194.8527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-190.3402, -192.5749, -192.4578, -193.3180, -194.9629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-190.4337, -192.5971, -192.4105, -193.3193, -195.0320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.6580, -192.6105, -192.3272, -193.4282, -195.2049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-190.7803, -192.6321, -192.2618, -193.4487, -195.3184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-190.9676, -192.7042, -192.1277, -193.4367, -195.5188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.2913, -192.7883, -191.9737, -193.5357, -195.8121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.5201, -192.8710, -191.8427, -193.5746, -196.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.6772, -192.9315, -191.7230, -193.5712, -196.2113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.8257, -193.0072, -191.5977, -193.5507, -196.3896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.0680, -193.0700, -191.4838, -193.6162, -196.6286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.1532, -193.0981, -191.4430, -193.6385, -196.7458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-191.9888, -193.0699, -191.4990, -193.5753, -196.6576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-191.6883, -193.0231, -191.5752, -193.4099, -196.4843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-191.3861, -192.9725, -191.6440, -193.2440, -196.3166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.1745, -192.9274, -191.7210, -193.1788, -196.1803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.8749, -192.8505, -191.8288, -193.0484, -195.9930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-190.3950, -192.7198, -192.0053, -192.8265, -195.6897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-189.9949, -192.5932, -192.1920, -192.6756, -195.4172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.7103, -192.4909, -192.3224, -192.5797, -195.2527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-189.5764, -192.4026, -192.3981, -192.5783, -195.1989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-189.5158, -192.3492, -192.4555, -192.6222, -195.1641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.5672, -192.3184, -192.4575, -192.7114, -195.2288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-189.6964, -192.3380, -192.3878, -192.7756, -195.3577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-189.9120, -192.3962, -192.2826, -192.8804, -195.5410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.1704, -192.4641, -192.1643, -193.0111, -195.7484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-190.5300, -192.5622, -191.9933, -193.1743, -196.0384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-190.8101, -192.6563, -191.8662, -193.3181, -196.2536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-191.1484, -192.7613, -191.7292, -193.5097, -196.5064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-191.4854, -192.8936, -191.5806, -193.6710, -196.7542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-191.8240, -192.9758, -191.4659, -193.8876, -196.9873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.9863, -192.9995, -191.4084, -194.0140, -197.0763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.0253, -192.9952, -191.3775, -194.0751, -197.0775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-191.9471, -192.9479, -191.3941, -194.0947, -197.0047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-191.7504, -192.9004, -191.4075, -194.0044, -196.8470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-191.5976, -192.8488, -191.4215, -193.9504, -196.7259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.4547, -192.8041, -191.4580, -193.9113, -196.5814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-191.1499, -192.7018, -191.5620, -193.7877, -196.3297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-190.8262, -192.5849, -191.6779, -193.6506, -196.0610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-190.5992, -192.5263, -191.7512, -193.5490, -195.8589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-190.5002, -192.4895, -191.7909, -193.5266, -195.7377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.3412, -192.4446, -191.8670, -193.4734, -195.5453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-190.3352, -192.4718, -191.8709, -193.4631, -195.4856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-190.2941, -192.4811, -191.9130, -193.4608, -195.3884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-190.3532, -192.5510, -191.9005, -193.4952, -195.3633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-190.4309, -192.6387, -191.8612, -193.5161, -195.3866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-190.4730, -192.6935, -191.8388, -193.5095, -195.3874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-190.3240, -192.6955, -191.8950, -193.4045, -195.2410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-190.1169, -192.6177, -191.9881, -193.2930, -195.0816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-189.8850, -192.5295, -192.0861, -193.1581, -194.8918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-189.7217, -192.4735, -192.1312, -193.0273, -194.7789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.6736, -192.4371, -192.1300, -192.9579, -194.7415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-189.6974, -192.4223, -192.1004, -192.9380, -194.7493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-189.5920, -192.3714, -192.1357, -192.8694, -194.6861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.5167, -192.3286, -192.1380, -192.8126, -194.6611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-189.4810, -192.3051, -192.0809, -192.7447, -194.6999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-189.3490, -192.2781, -192.0596, -192.6139, -194.6850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-189.2846, -192.2783, -192.0520, -192.5644, -194.6658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.2673, -192.3002, -192.0260, -192.5430, -194.6437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-189.2145, -192.2959, -192.0508, -192.5457, -194.5611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-189.2278, -192.2681, -192.0552, -192.6059, -194.5492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.3499, -192.2801, -192.0151, -192.7183, -194.5848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-189.7395, -192.3800, -191.8457, -192.9232, -194.8222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-190.0324, -192.4426, -191.7431, -193.1144, -194.9762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-190.3044, -192.5002, -191.6618, -193.2933, -195.1025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-190.5299, -192.5433, -191.6014, -193.4373, -195.2033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-190.8055, -192.5465, -191.5294, -193.6365, -195.3449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-191.0686, -192.5185, -191.4556, -193.8213, -195.4895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.2086, -192.4683, -191.4361, -193.9515, -195.5395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-191.1784, -192.4066, -191.4264, -193.9441, -195.4982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-191.1866, -192.3693, -191.3953, -193.9400, -195.4841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-191.1317, -192.3483, -191.3829, -193.9106, -195.4249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-191.1997, -192.3471, -191.3333, -193.9457, -195.4575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-191.1441, -192.3298, -191.3288, -193.9140, -195.3956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-191.0462, -192.3368, -191.3157, -193.8103, -195.3052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.0218, -192.3841, -191.2831, -193.7630, -195.2665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.9579, -192.4095, -191.3018, -193.7473, -195.1830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-190.9148, -192.4590, -191.3301, -193.7549, -195.1002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-190.7773, -192.4675, -191.3749, -193.7035, -194.9889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-190.7832, -192.5517, -191.3434, -193.6696, -194.9936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-190.6677, -192.5915, -191.3326, -193.5303, -194.9418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-190.5793, -192.6337, -191.2708, -193.3334, -194.9520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-190.4426, -192.6196, -191.2581, -193.1592, -194.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-190.4665, -192.6237, -191.2070, -193.1072, -195.0430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-190.4542, -192.5998, -191.1883, -193.0613, -195.1100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-190.3355, -192.5505, -191.2167, -192.9608, -195.0882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.1465, -192.5002, -191.2540, -192.7968, -195.0388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-189.9858, -192.4192, -191.3442, -192.7234, -194.9605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.7405, -192.3203, -191.4947, -192.6437, -194.7788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-189.5573, -192.2219, -191.6291, -192.6246, -194.6372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-189.4578, -192.1547, -191.7053, -192.6251, -194.5752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.3172, -192.0975, -191.8233, -192.6306, -194.4720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-189.2488, -192.0588, -191.9284, -192.6980, -194.3794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-189.2378, -192.0276, -191.9926, -192.7747, -194.3450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-189.2616, -192.0428, -192.0343, -192.8717, -194.3041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.4111, -192.1234, -191.9823, -192.9705, -194.3951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-189.6043, -192.2069, -191.9144, -193.0852, -194.5019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-189.8553, -192.2900, -191.8137, -193.2236, -194.6419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-190.0169, -192.3488, -191.7360, -193.2989, -194.7287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-190.1386, -192.3711, -191.6985, -193.3936, -194.7949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-190.2292, -192.4019, -191.6445, -193.4358, -194.8537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-190.2834, -192.4484, -191.5755, -193.4217, -194.8796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-190.3188, -192.4694, -191.5202, -193.3976, -194.8670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.2118, -192.4129, -191.5269, -193.3147, -194.7531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-190.0075, -192.2682, -191.5740, -193.1983, -194.5932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-189.7540, -192.1376, -191.6091, -193.0063, -194.4269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-189.4288, -192.0113, -191.6876, -192.7820, -194.2128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-189.1054, -191.8921, -191.7805, -192.5695, -193.9843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-188.8322, -191.7922, -191.8440, -192.3593, -193.8062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.6940, -191.6860, -191.8555, -192.2371, -193.7395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-188.7012, -191.6338, -191.8025, -192.2077, -193.7743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-188.8352, -191.5908, -191.7052, -192.2674, -193.9017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.1703, -191.6400, -191.5177, -192.3941, -194.1530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-189.5402, -191.6721, -191.3409, -192.5758, -194.4126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-189.9929, -191.7084, -191.1587, -192.8049, -194.7360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-190.3612, -191.7464, -191.0121, -192.9780, -194.9934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-190.6353, -191.7523, -190.9289, -193.1303, -195.1723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.8937, -191.7711, -190.8737, -193.2900, -195.3389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-190.8715, -191.7635, -190.8854, -193.2611, -195.3094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.8469, -191.7515, -190.9227, -193.2811, -195.2462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-190.8762, -191.7806, -190.9285, -193.3127, -195.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.8854, -191.7839, -190.9316, -193.3248, -195.2191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-190.7465, -191.7351, -190.9856, -193.2694, -195.1321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-190.6334, -191.6735, -191.0317, -193.2384, -195.0777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-190.4105, -191.6156, -191.0943, -193.1269, -194.9444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-190.2278, -191.5702, -191.1336, -193.0339, -194.8271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-189.9878, -191.5346, -191.1900, -192.9049, -194.6908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-189.6813, -191.4950, -191.2873, -192.7533, -194.4748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-189.3564, -191.4381, -191.4354, -192.6390, -194.2031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-189.0071, -191.3958, -191.5987, -192.4915, -193.9118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-188.6076, -191.3474, -191.7996, -192.3138, -193.5850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-188.2269, -191.3194, -191.9647, -192.0893, -193.3135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.9020, -191.2943, -192.1449, -191.9216, -193.0293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-187.7464, -191.2919, -192.2638, -191.8626, -192.8676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-187.5448, -191.2711, -192.3901, -191.7596, -192.6907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-187.5021, -191.2426, -192.4792, -191.8194, -192.5940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-187.5208, -191.2180, -192.5362, -191.9155, -192.5463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-187.6785, -191.1623, -192.5352, -192.1245, -192.6078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-188.0195, -191.1336, -192.4178, -192.4035, -192.8417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-188.4567, -191.1499, -192.2313, -192.7085, -193.1570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-189.0002, -191.1793, -191.9986, -193.0664, -193.5553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-189.4425, -191.2270, -191.7928, -193.3101, -193.8946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.9022, -191.2574, -191.5773, -193.5410, -194.2913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-190.2358, -191.2901, -191.4307, -193.7143, -194.5751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-190.4094, -191.3632, -191.3201, -193.7645, -194.7404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-190.5884, -191.4423, -191.2228, -193.8437, -194.8879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-190.7639, -191.5103, -191.1287, -193.9148, -195.0323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.8897, -191.5783, -191.0661, -193.9732, -195.1165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-190.8671, -191.6246, -191.0579, -193.9480, -195.0964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-190.9473, -191.7107, -191.0240, -193.9904, -195.1324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-191.1237, -191.8111, -190.9337, -194.0639, -195.2393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-191.1854, -191.8918, -190.8441, -194.0133, -195.2996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-191.1449, -191.9456, -190.7707, -193.8680, -195.3012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-190.9652, -191.9602, -190.7718, -193.7006, -195.1595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-190.5874, -191.9239, -190.8308, -193.4013, -194.8986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-190.1884, -191.8802, -190.9322, -193.1226, -194.6133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-189.8243, -191.8165, -191.0695, -192.9209, -194.3337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-189.4510, -191.7471, -191.2118, -192.7122, -194.0689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-189.0344, -191.6702, -191.3781, -192.4780, -193.7636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-188.8222, -191.6536, -191.4569, -192.3589, -193.5854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-188.7217, -191.6786, -191.4943, -192.3271, -193.4877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.6270, -191.7068, -191.5281, -192.2929, -193.3929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-188.6017, -191.7080, -191.5527, -192.3383, -193.3465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-188.6936, -191.7522, -191.5138, -192.4423, -193.3749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.7204, -191.7414, -191.5214, -192.5333, -193.3481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-188.6024, -191.6732, -191.5544, -192.4952, -193.2675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.6155, -191.6442, -191.5156, -192.5099, -193.2931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-188.6288, -191.5766, -191.5028, -192.5710, -193.2970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-188.7483, -191.5173, -191.4490, -192.7039, -193.3759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-188.8290, -191.4355, -191.4315, -192.8285, -193.3930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.9230, -191.3816, -191.3773, -192.9102, -193.4668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-188.9906, -191.3196, -191.3355, -192.9790, -193.5252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-189.0884, -191.2675, -191.2996, -193.0703, -193.5960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.2430, -191.1945, -191.2679, -193.2309, -193.6817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-189.4198, -191.1378, -191.2171, -193.3825, -193.7737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-189.4910, -191.0557, -191.2454, -193.5142, -193.7560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-189.5487, -191.0164, -191.2622, -193.6199, -193.7405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-189.5187, -190.9865, -191.2664, -193.6041, -193.7072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-189.4407, -190.9586, -191.2883, -193.5579, -193.6429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-189.4576, -190.9971, -191.2158, -193.4958, -193.6790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-189.5634, -191.0680, -191.1220, -193.4972, -193.7877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-189.7026, -191.1228, -191.0232, -193.5368, -193.9272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.9104, -191.1873, -190.9061, -193.6135, -194.1244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-189.9890, -191.2324, -190.8194, -193.5920, -194.2374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-189.9651, -191.2208, -190.7849, -193.5456, -194.2916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-189.8731, -191.1873, -190.8215, -193.5329, -194.2564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-189.6864, -191.1681, -190.8602, -193.4038, -194.1674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-189.5526, -191.1274, -190.8857, -193.3075, -194.1107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-189.5277, -191.1288, -190.8820, -193.2836, -194.0997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-189.5398, -191.1424, -190.8539, -193.2734, -194.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-189.5395, -191.1457, -190.8584, -193.2843, -194.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.5946, -191.1499, -190.8844, -193.3814, -194.0771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-189.6035, -191.1154, -190.8926, -193.4123, -194.0688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-189.6601, -191.0183, -190.8815, -193.4760, -194.1114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-189.6369, -190.8877, -190.8986, -193.4833, -194.1234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.5516, -190.8059, -190.9007, -193.3900, -194.1062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-189.4397, -190.7395, -190.9094, -193.2841, -194.0519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-189.4447, -190.7567, -190.8517, -193.2018, -194.0890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-189.4159, -190.7659, -190.7954, -193.0969, -194.0931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-189.3428, -190.7330, -190.7828, -193.0235, -194.0265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-189.3899, -190.7619, -190.7258, -193.0167, -194.0360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-189.2617, -190.7976, -190.7035, -192.8738, -193.9536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-189.1557, -190.8440, -190.6433, -192.7021, -193.9080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-189.0773, -190.9104, -190.5752, -192.5311, -193.8799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-188.9809, -190.9655, -190.5391, -192.3794, -193.8060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-188.9419, -191.0257, -190.5052, -192.2775, -193.7731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-188.8117, -191.0279, -190.5219, -192.1473, -193.6767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-188.7408, -191.0394, -190.5592, -192.1078, -193.5946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-188.6212, -191.0292, -190.6239, -192.0561, -193.4858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-188.4922, -191.0150, -190.6901, -191.9897, -193.3828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-188.3880, -190.9601, -190.7711, -191.9682, -193.2961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-188.2968, -190.8890, -190.8451, -191.9521, -193.2284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.1543, -190.7901, -190.9391, -191.9019, -193.1340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.0663, -190.7179, -191.0191, -191.8973, -193.0779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-187.9080, -190.6146, -191.1236, -191.8518, -192.9739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-187.8132, -190.5146, -191.2099, -191.8667, -192.8980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-187.6838, -190.4057, -191.3143, -191.8629, -192.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-187.4605, -190.2998, -191.4514, -191.7834, -192.6143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-187.5104, -190.2500, -191.4393, -191.8337, -192.6358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-187.6107, -190.2487, -191.3818, -191.8663, -192.6992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.6776, -190.2529, -191.3289, -191.8561, -192.7394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-187.6822, -190.2633, -191.3029, -191.7990, -192.7489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.7866, -190.3265, -191.1784, -191.7255, -192.8641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-187.9442, -190.4213, -191.0236, -191.6558, -193.0190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.1876, -190.5227, -190.8695, -191.6944, -193.2128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-188.5158, -190.6461, -190.6951, -191.7855, -193.4530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-188.7048, -190.7441, -190.5975, -191.8313, -193.5584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.9714, -190.8738, -190.4724, -191.9317, -193.7223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-189.1854, -190.9941, -190.3697, -192.0065, -193.8442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-189.2490, -191.0976, -190.3041, -191.9802, -193.8909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-189.3070, -191.2186, -190.1864, -191.8725, -193.9581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-189.2839, -191.2981, -190.1228, -191.7594, -193.9366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-189.2723, -191.4070, -190.0404, -191.6214, -193.9270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-189.2368, -191.4622, -189.9687, -191.4917, -193.9223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-189.1736, -191.4759, -189.9309, -191.3973, -193.8819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.1172, -191.4820, -189.9220, -191.3430, -193.8359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-189.0204, -191.4295, -189.9746, -191.3392, -193.7452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-188.9366, -191.3744, -190.0340, -191.3619, -193.6624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.7721, -191.2848, -190.1256, -191.3538, -193.5186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-188.7856, -191.2255, -190.1481, -191.4474, -193.5217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-188.8012, -191.1706, -190.1560, -191.5205, -193.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-188.8215, -191.1153, -190.1764, -191.6196, -193.5207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-188.9183, -191.0803, -190.2013, -191.8017, -193.5277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-188.9499, -190.9683, -190.2539, -191.9410, -193.5142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-188.9512, -190.8690, -190.2763, -192.0009, -193.5362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-188.9951, -190.7612, -190.3045, -192.1097, -193.5659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-189.0335, -190.6450, -190.3558, -192.2494, -193.5541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-189.1255, -190.5619, -190.3889, -192.4105, -193.5904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-189.1310, -190.4891, -190.4212, -192.4818, -193.5938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-189.0374, -190.4308, -190.4535, -192.4594, -193.5524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-188.9357, -190.3776, -190.4966, -192.4453, -193.4800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-188.8665, -190.3320, -190.5572, -192.4875, -193.4094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.6313, -190.2668, -190.6753, -192.4328, -193.1923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.3055, -190.1994, -190.8241, -192.3219, -192.9057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-188.0946, -190.1676, -190.9552, -192.2928, -192.6553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-187.9691, -190.1852, -191.0179, -192.2620, -192.4999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-187.8236, -190.2354, -191.0036, -192.1147, -192.3808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-187.7300, -190.3166, -190.9464, -191.9575, -192.3187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-187.5918, -190.4122, -190.8945, -191.7588, -192.2271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-187.3813, -190.5061, -190.8485, -191.4761, -192.1171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-187.2371, -190.6041, -190.7920, -191.2371, -192.0543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-187.0994, -190.7030, -190.6981, -190.9508, -192.0313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-187.0376, -190.8198, -190.6038, -190.7306, -192.0370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-187.1192, -190.9214, -190.4379, -190.5872, -192.1859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-187.0920, -190.9759, -190.3692, -190.4465, -192.2304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-187.2430, -191.0615, -190.2384, -190.4378, -192.4081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-187.3998, -191.1509, -190.1142, -190.4528, -192.5866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-187.6342, -191.2304, -189.9551, -190.5087, -192.8421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-187.8360, -191.2818, -189.8475, -190.5879, -193.0420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-187.9718, -191.3403, -189.7352, -190.5804, -193.2085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-188.1692, -191.4234, -189.6043, -190.6087, -193.4192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-188.3321, -191.4587, -189.5213, -190.6723, -193.5618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.4764, -191.4920, -189.4427, -190.7200, -193.6737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.5486, -191.5084, -189.3845, -190.7065, -193.7487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-188.7390, -191.5148, -189.3203, -190.8046, -193.8818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-188.6794, -191.4531, -189.3804, -190.8131, -193.8273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-188.6680, -191.4033, -189.4365, -190.8652, -193.7911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.6209, -191.3105, -189.5319, -190.9423, -193.6918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-188.5215, -191.1929, -189.6518, -190.9992, -193.5476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-188.3841, -191.0670, -189.7585, -191.0177, -193.3779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.2944, -190.9381, -189.8648, -191.0829, -193.2245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-188.1810, -190.7884, -189.9926, -191.1548, -193.0473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.0516, -190.6135, -190.1530, -191.2589, -192.8199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-187.8183, -190.4622, -190.3154, -191.2327, -192.5650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.5923, -190.3297, -190.4510, -191.1856, -192.3306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-187.3538, -190.2142, -190.5978, -191.1383, -192.0779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-187.1602, -190.1331, -190.6945, -191.0558, -191.8964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-187.1041, -190.0538, -190.7466, -191.0876, -191.8248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-187.1792, -189.9876, -190.7504, -191.2033, -191.8506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-187.2565, -189.9320, -190.7616, -191.3253, -191.8721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-187.5159, -189.8683, -190.6831, -191.5347, -192.0439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-187.7906, -189.8588, -190.5950, -191.7367, -192.2357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-187.9140, -189.8319, -190.4967, -191.7559, -192.3891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.0310, -189.7646, -190.4299, -191.8002, -192.5380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-187.9858, -189.7091, -190.3933, -191.7048, -192.5873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-187.9102, -189.6358, -190.4047, -191.6354, -192.5695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-187.9336, -189.5569, -190.3911, -191.6435, -192.6148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-188.0343, -189.5047, -190.3396, -191.6698, -192.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-188.2142, -189.4806, -190.2688, -191.7540, -192.8302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-188.3413, -189.4678, -190.2084, -191.7985, -192.9044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.2790, -189.4471, -190.2163, -191.7514, -192.8241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.1893, -189.4689, -190.2156, -191.6594, -192.7450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-188.0445, -189.5073, -190.2326, -191.5407, -192.6096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-188.0948, -189.5911, -190.1731, -191.5160, -192.6370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.0810, -189.6252, -190.1674, -191.5084, -192.6014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-188.0251, -189.6492, -190.1828, -191.4927, -192.5122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.1287, -189.6881, -190.1633, -191.5860, -192.5279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-188.2538, -189.7269, -190.1508, -191.6965, -192.5576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-188.4524, -189.7786, -190.1158, -191.8498, -192.6549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.6940, -189.8851, -190.0322, -191.9822, -192.8205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-188.8993, -189.9744, -189.9925, -192.1397, -192.9221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-188.9645, -190.0648, -189.9870, -192.1982, -192.9245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-188.9707, -190.1472, -189.9969, -192.2155, -192.8908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-188.8277, -190.1725, -190.0748, -192.1789, -192.7433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-188.6287, -190.1761, -190.2030, -192.1374, -192.5241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-188.4634, -190.2028, -190.2886, -192.0628, -192.3637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-188.1539, -190.1923, -190.4592, -191.9425, -192.0644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.9338, -190.1687, -190.5646, -191.8372, -191.8668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-187.8141, -190.1465, -190.5983, -191.7532, -191.7914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-187.7455, -190.0945, -190.6231, -191.7298, -191.7480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-187.6929, -190.0146, -190.6436, -191.7337, -191.7034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-187.6337, -189.9233, -190.6700, -191.7305, -191.6575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-187.6790, -189.8527, -190.6541, -191.7919, -191.6853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-187.7276, -189.7832, -190.6455, -191.8661, -191.7204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-187.8707, -189.7381, -190.5957, -191.9804, -191.8221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-188.0484, -189.6998, -190.5432, -192.1315, -191.9493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.2066, -189.6721, -190.4792, -192.2431, -192.0700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-188.3723, -189.6162, -190.4285, -192.3727, -192.1914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-188.4038, -189.5636, -190.4152, -192.4005, -192.2295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-188.6189, -189.5758, -190.2776, -192.4551, -192.4443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.7605, -189.5766, -190.1861, -192.4812, -192.5987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-188.8372, -189.6091, -190.0615, -192.3887, -192.7419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-188.8451, -189.6519, -189.9285, -192.2289, -192.8488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-188.7795, -189.7089, -189.8287, -192.0556, -192.8509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-188.5705, -189.7334, -189.7688, -191.8022, -192.7640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-188.2585, -189.7344, -189.7744, -191.5258, -192.5850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-188.0586, -189.7891, -189.7119, -191.2623, -192.5076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-187.9230, -189.8474, -189.6251, -191.0391, -192.4844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-187.9781, -189.9091, -189.5013, -190.9685, -192.5678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-188.0731, -189.9186, -189.4271, -191.0075, -192.6404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-188.2083, -189.9119, -189.3709, -191.1027, -192.6991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-188.2850, -189.8913, -189.3459, -191.1752, -192.6961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-188.4344, -189.9004, -189.3061, -191.3016, -192.7427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-188.5641, -189.9058, -189.2794, -191.4068, -192.7645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-188.6200, -189.8594, -189.2753, -191.4568, -192.7521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-188.5119, -189.8108, -189.3363, -191.4349, -192.5911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-188.5947, -189.8341, -189.3326, -191.5213, -192.5603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-188.5587, -189.8336, -189.3449, -191.4927, -192.4829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-188.4212, -189.7798, -189.3989, -191.4191, -192.3660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-188.2967, -189.7495, -189.3952, -191.2859, -192.2931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-188.2085, -189.7655, -189.3379, -191.1075, -192.2671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-188.2386, -189.7685, -189.2497, -191.0159, -192.3517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-188.2430, -189.7524, -189.1777, -190.9053, -192.4341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-188.3420, -189.7484, -189.0976, -190.9026, -192.5482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-188.3128, -189.7295, -189.0556, -190.8127, -192.5811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-188.2517, -189.7392, -189.0217, -190.7052, -192.5836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-188.1267, -189.7410, -189.0210, -190.5676, -192.5423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-188.0373, -189.7669, -189.0273, -190.4592, -192.5014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-187.9086, -189.7912, -189.0729, -190.3680, -192.4056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-187.7156, -189.7998, -189.1764, -190.2822, -192.2351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-187.5689, -189.8020, -189.2660, -190.2242, -192.0922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-187.4212, -189.7882, -189.3776, -190.1940, -191.9259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.3510, -189.7898, -189.4708, -190.2270, -191.7867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-187.3218, -189.8560, -189.5010, -190.2114, -191.7126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-187.2348, -189.9255, -189.5524, -190.1620, -191.5788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-187.1577, -189.9508, -189.5867, -190.1155, -191.4678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-187.0753, -189.9762, -189.6250, -190.0681, -191.3485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-187.0382, -190.0023, -189.6069, -190.0143, -191.3036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.0518, -190.0154, -189.5787, -190.0111, -191.3013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-187.1542, -190.0008, -189.5229, -190.0866, -191.3494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-187.2911, -189.9672, -189.4205, -190.1459, -191.4582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-187.3582, -189.9308, -189.3445, -190.1506, -191.5252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-187.3752, -189.8601, -189.3062, -190.1546, -191.5389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-187.3403, -189.7734, -189.3333, -190.1741, -191.4847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-187.1377, -189.6873, -189.4024, -190.0379, -191.3388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-186.9031, -189.5983, -189.4459, -189.8482, -191.2272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-186.7595, -189.5202, -189.4473, -189.7130, -191.1870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-186.6716, -189.4704, -189.4476, -189.6460, -191.1386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.7862, -189.4996, -189.3527, -189.6709, -191.2311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-187.0447, -189.5141, -189.2459, -189.8518, -191.4058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-187.1629, -189.5090, -189.2011, -189.9413, -191.4731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-187.2578, -189.5043, -189.1866, -190.0424, -191.5172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-187.5157, -189.5167, -189.0940, -190.2153, -191.7050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-187.7623, -189.5517, -189.0036, -190.3820, -191.8845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-187.9870, -189.5449, -188.9391, -190.5605, -192.0418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-187.9913, -189.5458, -188.9083, -190.5292, -192.0748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.0663, -189.5890, -188.8153, -190.4768, -192.1863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.1573, -189.5842, -188.7710, -190.5101, -192.2698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-188.1702, -189.5941, -188.7639, -190.5132, -192.3003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-188.1262, -189.5779, -188.7841, -190.4958, -192.2887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-188.1420, -189.5950, -188.7344, -190.4402, -192.3708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-188.0641, -189.6226, -188.7076, -190.3223, -192.3904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-187.8338, -189.6145, -188.7505, -190.1414, -192.2813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-187.7015, -189.5913, -188.7826, -190.0494, -192.1961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.5332, -189.5398, -188.8444, -189.9583, -192.0566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-187.3343, -189.4828, -188.9272, -189.8709, -191.8821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-187.0255, -189.4321, -189.0676, -189.7278, -191.5991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-186.7046, -189.3543, -189.2432, -189.6246, -191.2763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-186.4981, -189.3055, -189.3891, -189.5984, -191.0219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-186.3275, -189.2490, -189.5700, -189.6601, -190.7468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-186.1454, -189.1633, -189.7311, -189.6908, -190.4879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-185.9465, -189.1012, -189.8502, -189.6356, -190.2701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-185.8855, -189.0813, -189.8667, -189.5983, -190.1887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-185.8657, -188.9993, -189.8723, -189.6102, -190.1597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-185.9167, -188.8759, -189.8698, -189.7034, -190.1544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-185.9864, -188.7801, -189.8506, -189.7962, -190.1490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-186.1700, -188.7116, -189.7688, -189.9368, -190.2324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-186.3170, -188.6651, -189.6949, -190.0318, -190.2876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-186.4469, -188.6086, -189.6477, -190.1411, -190.3251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-186.4814, -188.5704, -189.6582, -190.2279, -190.2531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-186.5216, -188.5614, -189.6395, -190.2758, -190.2351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-186.6073, -188.5413, -189.5914, -190.3422, -190.2611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.7761, -188.5347, -189.4717, -190.4021, -190.3920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-186.8947, -188.5033, -189.3890, -190.4439, -190.4997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-187.1041, -188.5136, -189.2247, -190.4674, -190.7011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-187.2854, -188.5560, -189.0556, -190.4520, -190.8852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-187.2982, -188.6032, -188.9369, -190.3228, -190.9835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-187.0846, -188.5981, -188.9436, -190.1257, -190.8699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-187.0249, -188.6207, -188.8734, -189.9983, -190.8657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-186.8804, -188.6816, -188.8695, -189.8638, -190.7645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-186.8140, -188.7314, -188.8394, -189.7864, -190.7099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-186.8523, -188.7573, -188.7695, -189.7582, -190.7456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-186.6647, -188.7017, -188.7937, -189.6188, -190.6215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-186.5377, -188.6819, -188.7811, -189.4842, -190.5763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-186.3690, -188.6691, -188.7818, -189.3184, -190.5091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-186.2873, -188.6590, -188.7573, -189.2153, -190.5091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-186.1741, -188.6475, -188.7571, -189.1212, -190.4542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.2154, -188.6447, -188.6753, -189.0894, -190.5287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-186.2560, -188.6559, -188.6089, -189.0672, -190.5840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-186.2335, -188.6826, -188.5555, -188.9954, -190.6131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-186.2272, -188.6765, -188.5463, -189.0092, -190.6149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-186.3043, -188.6610, -188.5111, -189.0794, -190.6692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-186.5208, -188.6321, -188.4302, -189.2236, -190.8409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.6840, -188.5958, -188.3657, -189.3254, -190.9669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-186.7987, -188.5859, -188.2862, -189.3420, -191.0797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-186.6361, -188.5588, -188.3036, -189.2189, -190.9861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-186.4939, -188.5370, -188.3304, -189.1485, -190.8744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-186.4855, -188.5327, -188.3248, -189.1828, -190.8368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-186.6107, -188.5529, -188.2615, -189.2692, -190.9220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-186.6960, -188.5751, -188.2003, -189.3014, -190.9865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-186.7509, -188.6078, -188.1623, -189.3288, -190.9996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.6921, -188.6144, -188.1981, -189.3413, -190.9113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-186.6472, -188.6383, -188.2165, -189.3408, -190.8162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-186.6367, -188.6944, -188.2152, -189.3427, -190.7534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-186.5729, -188.7123, -188.2581, -189.3580, -190.6266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.6018, -188.7667, -188.2758, -189.4462, -190.5590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-186.6823, -188.7951, -188.2930, -189.5936, -190.5346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-186.7899, -188.8112, -188.2989, -189.7536, -190.5221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-186.9949, -188.8132, -188.3013, -190.0130, -190.5719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-187.1224, -188.7715, -188.3484, -190.2551, -190.5652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-187.0929, -188.7404, -188.4047, -190.3405, -190.5139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-187.0655, -188.7251, -188.4571, -190.4232, -190.4701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.0139, -188.7213, -188.5160, -190.4710, -190.4229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.0252, -188.7646, -188.5098, -190.4935, -190.4414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-187.1293, -188.7911, -188.4714, -190.5696, -190.5288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.9533, -188.7877, -188.5051, -190.4508, -190.4250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-186.7121, -188.7607, -188.5226, -190.2413, -190.3240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-186.4373, -188.6691, -188.5891, -190.0658, -190.1774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-186.2998, -188.6367, -188.5818, -189.9286, -190.1538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-186.3515, -188.6463, -188.5227, -189.9104, -190.2479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.2633, -188.6737, -188.4814, -189.7589, -190.2731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-186.2994, -188.6689, -188.4335, -189.7334, -190.3395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-186.2660, -188.6595, -188.4114, -189.6535, -190.3453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-186.1667, -188.6468, -188.3948, -189.4959, -190.3403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-186.0685, -188.6133, -188.4108, -189.3772, -190.3165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-185.9867, -188.5351, -188.4527, -189.3206, -190.2657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-185.8429, -188.4699, -188.4890, -189.1914, -190.1854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-185.8314, -188.4594, -188.4728, -189.1370, -190.2025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-185.8639, -188.4410, -188.4643, -189.1385, -190.2170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-185.8624, -188.4377, -188.4334, -189.0691, -190.2505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-185.9463, -188.4874, -188.3473, -189.0190, -190.3449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.0113, -188.5095, -188.2614, -188.9481, -190.4202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-186.0728, -188.4958, -188.2089, -188.9184, -190.4611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-186.0506, -188.5011, -188.1860, -188.8406, -190.4429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-186.0153, -188.4881, -188.2040, -188.8109, -190.3695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-186.0374, -188.5403, -188.1544, -188.7559, -190.3845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-185.9414, -188.5876, -188.1624, -188.6513, -190.2773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-185.8689, -188.6391, -188.1745, -188.5721, -190.1855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-185.7042, -188.6399, -188.2572, -188.4867, -189.9785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-185.7088, -188.6461, -188.3000, -188.5341, -189.8778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-185.7363, -188.6371, -188.3454, -188.6200, -189.7814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-185.8269, -188.6296, -188.3594, -188.7354, -189.7610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-185.9723, -188.5776, -188.3600, -188.8981, -189.8025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.1345, -188.5026, -188.3683, -189.0969, -189.8643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-186.2997, -188.4094, -188.3802, -189.2942, -189.9271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-186.2925, -188.3167, -188.4270, -189.3478, -189.8936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-186.4068, -188.2223, -188.4321, -189.4642, -189.9476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-186.5821, -188.1781, -188.3690, -189.5432, -190.0844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.7183, -188.1256, -188.2944, -189.5738, -190.2124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-186.8270, -188.0960, -188.2000, -189.5580, -190.3527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-186.9281, -188.1018, -188.0996, -189.5217, -190.4872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-186.9287, -188.0902, -188.0434, -189.4425, -190.5618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-186.8219, -188.0353, -188.0632, -189.3663, -190.5249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-186.7423, -188.0157, -188.0652, -189.3065, -190.4755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-186.6562, -188.0477, -188.0256, -189.1769, -190.4567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-186.4752, -188.0688, -188.0441, -189.0440, -190.3395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-186.4488, -188.0807, -188.0404, -189.0453, -190.2813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-186.4311, -188.0842, -188.0823, -189.1209, -190.1877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-186.3586, -188.0948, -188.1027, -189.1190, -190.1116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-186.3759, -188.1369, -188.0960, -189.1654, -190.1013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-186.4915, -188.1668, -188.0554, -189.2622, -190.1539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-186.6552, -188.2353, -187.9831, -189.3512, -190.2773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.8236, -188.2973, -187.8905, -189.4172, -190.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-186.7172, -188.2708, -187.9383, -189.4013, -190.3916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.6648, -188.2498, -187.9407, -189.3635, -190.4162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-186.5432, -188.2618, -187.9469, -189.2685, -190.3628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-186.3481, -188.2670, -187.9695, -189.1178, -190.2861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-186.1877, -188.3107, -187.9650, -188.9525, -190.2324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.0382, -188.3494, -187.9536, -188.7858, -190.1788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-186.0932, -188.3848, -187.8944, -188.7892, -190.2332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.1687, -188.3928, -187.8667, -188.8550, -190.2945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.2327, -188.3622, -187.8520, -188.9403, -190.3232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-186.2469, -188.2801, -187.8714, -189.0519, -190.3010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-186.2856, -188.2263, -187.8684, -189.1381, -190.2980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-186.2825, -188.1781, -187.8619, -189.1647, -190.2982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.2507, -188.1330, -187.8391, -189.1243, -190.3096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-186.1728, -188.0290, -187.8658, -189.1124, -190.2459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.0419, -187.8842, -187.9513, -189.1156, -190.1060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-185.9997, -187.7400, -188.0027, -189.1577, -190.0093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-185.9745, -187.6142, -188.0219, -189.1766, -189.9593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-185.9497, -187.5016, -188.0309, -189.1891, -189.9354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-185.9092, -187.3699, -188.0550, -189.1968, -189.9005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-185.8488, -187.2409, -188.0808, -189.1846, -189.8402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-185.8887, -187.1718, -188.0683, -189.2260, -189.8423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-185.7699, -187.0971, -188.1154, -189.2001, -189.7160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-185.5316, -187.0149, -188.2197, -189.1282, -189.4881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-185.3476, -186.9352, -188.3281, -189.1090, -189.2812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-185.0963, -186.8879, -188.4036, -188.9775, -189.0940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-185.0038, -186.9038, -188.4122, -188.9299, -189.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-185.0906, -186.9311, -188.3720, -188.9826, -189.0418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-185.1320, -186.9743, -188.3014, -188.9468, -189.0996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-185.1688, -187.0122, -188.2349, -188.9058, -189.1699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-185.4220, -187.0809, -188.0940, -188.9892, -189.3670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-185.6799, -187.1361, -187.9648, -189.0912, -189.5664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-185.8770, -187.1742, -187.8576, -189.1607, -189.7535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-185.9844, -187.2161, -187.7672, -189.1704, -189.8774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-186.1737, -187.2793, -187.6520, -189.2133, -190.0883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-186.4079, -187.3411, -187.5535, -189.3191, -190.2969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.6497, -187.3458, -187.4742, -189.4553, -190.5003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-186.6354, -187.3377, -187.4676, -189.4470, -190.5132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-186.7409, -187.3691, -187.4262, -189.4973, -190.5933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.7422, -187.4314, -187.3919, -189.4572, -190.6321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-186.7498, -187.4687, -187.3892, -189.4754, -190.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-186.6621, -187.4788, -187.4093, -189.4289, -190.5859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-186.3708, -187.4587, -187.4712, -189.2299, -190.3996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-186.1212, -187.4849, -187.4941, -189.0184, -190.2513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-185.9280, -187.5569, -187.4975, -188.8273, -190.1167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-185.8050, -187.6292, -187.4996, -188.7091, -189.9854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-185.6383, -187.6106, -187.5877, -188.6594, -189.7455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-185.4646, -187.5976, -187.6916, -188.6223, -189.4884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-185.4300, -187.5910, -187.7279, -188.6595, -189.3720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-185.2990, -187.4872, -187.8472, -188.7118, -189.1626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-185.2097, -187.3662, -187.9281, -188.7546, -189.0137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-185.2677, -187.3014, -187.9446, -188.8649, -188.9717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-185.2585, -187.2564, -187.9278, -188.8544, -188.9624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-185.2591, -187.1447, -187.9924, -188.9680, -188.8832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-185.2407, -187.0368, -188.0538, -189.0502, -188.8101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-185.2603, -186.9799, -188.0319, -189.0628, -188.8386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-185.2353, -186.9321, -187.9649, -188.9717, -188.8831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-185.1317, -186.9130, -187.9020, -188.8170, -188.8739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-185.0932, -186.9175, -187.8048, -188.6898, -188.9223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-185.1244, -186.9124, -187.6876, -188.6035, -189.0178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-185.1958, -186.9064, -187.5251, -188.5012, -189.1948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-185.3830, -186.9561, -187.2974, -188.4145, -189.4860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-185.6191, -187.0521, -187.0344, -188.3074, -189.8299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-185.7902, -187.1448, -186.8143, -188.1898, -190.1035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-185.8972, -187.2447, -186.6254, -188.0476, -190.3133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-186.0185, -187.3452, -186.4661, -187.9592, -190.4688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-186.1570, -187.4421, -186.3047, -187.8755, -190.6211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-186.2956, -187.5509, -186.1399, -187.7719, -190.7855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-186.1987, -187.6341, -186.0780, -187.5849, -190.7466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-186.1035, -187.7125, -186.0480, -187.4426, -190.6905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-185.9669, -187.7588, -186.0585, -187.3129, -190.5739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-185.6466, -187.7270, -186.1749, -187.1510, -190.2826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-185.3089, -187.6682, -186.3001, -186.9807, -189.9951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-185.1092, -187.6069, -186.4118, -186.9402, -189.7714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-184.9739, -187.5443, -186.5094, -186.9583, -189.5566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-184.8963, -187.5138, -186.5619, -186.9731, -189.4096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-184.9153, -187.5047, -186.5633, -187.0276, -189.3667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-184.9585, -187.4709, -186.5470, -187.0927, -189.3867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-185.1177, -187.4193, -186.4983, -187.2575, -189.4623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-185.2241, -187.3523, -186.4692, -187.3906, -189.5048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-185.3803, -187.2786, -186.4362, -187.5728, -189.5571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-185.5919, -187.1996, -186.3950, -187.7931, -189.6248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-185.7056, -187.0790, -186.3898, -187.9563, -189.6418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-185.7918, -186.9490, -186.4137, -188.1222, -189.6421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-185.8539, -186.8685, -186.4226, -188.2481, -189.6004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-185.8964, -186.7835, -186.4951, -188.4296, -189.4821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-185.7332, -186.6520, -186.6817, -188.5641, -189.1714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-185.4718, -186.5047, -186.9204, -188.6594, -188.7749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-185.1414, -186.3764, -187.1720, -188.6827, -188.3556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-184.7974, -186.2761, -187.3767, -188.6286, -188.0029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-184.6200, -186.1901, -187.5117, -188.6438, -187.7976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-184.3524, -186.0979, -187.6343, -188.5498, -187.6003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-184.1766, -186.0149, -187.7312, -188.5216, -187.4562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-183.9652, -185.9088, -187.8548, -188.4816, -187.2777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-183.8499, -185.8489, -187.9041, -188.4466, -187.2311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-183.6491, -185.7935, -187.9867, -188.3599, -187.1081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-183.5646, -185.7402, -188.0207, -188.3347, -187.0549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-183.5913, -185.7173, -188.0086, -188.3779, -187.0619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-183.5752, -185.7165, -187.9867, -188.3727, -187.0767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-183.5012, -185.7457, -187.9082, -188.2392, -187.1407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-183.5158, -185.7874, -187.7878, -188.1522, -187.2725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-183.4807, -185.8345, -187.6958, -188.0399, -187.3486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-183.5689, -185.8741, -187.5550, -188.0049, -187.5254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-183.6079, -185.9758, -187.4026, -187.8822, -187.7071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-183.6374, -186.0750, -187.2559, -187.7495, -187.8469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-183.7854, -186.2008, -187.0577, -187.6750, -188.0557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-184.0626, -186.3451, -186.8244, -187.6871, -188.3269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-184.3135, -186.5017, -186.6220, -187.6884, -188.5696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-184.5968, -186.6457, -186.4097, -187.7032, -188.8807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-184.9341, -186.7630, -186.2130, -187.7958, -189.1752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-185.3073, -186.8521, -186.0530, -187.9763, -189.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-185.6970, -186.9382, -185.8857, -188.1528, -189.7233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-185.9218, -186.9429, -185.8048, -188.2739, -189.8634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-186.0589, -186.9520, -185.7839, -188.3878, -189.9025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-186.1120, -186.9070, -185.8032, -188.4712, -189.9004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-186.1391, -186.8081, -185.8568, -188.5984, -189.8581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-186.1927, -186.7383, -185.8671, -188.6850, -189.8625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-186.1238, -186.6837, -185.8940, -188.6754, -189.7657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.0032, -186.5738, -185.9801, -188.6946, -189.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-185.7367, -186.5036, -186.0974, -188.6132, -189.2877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-185.3785, -186.4469, -186.2360, -188.4670, -188.9719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-185.0187, -186.3954, -186.3893, -188.3220, -188.6584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-184.6893, -186.3538, -186.5271, -188.1762, -188.3818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-184.4122, -186.3570, -186.6425, -188.0428, -188.1339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-184.2231, -186.3974, -186.7149, -187.9366, -187.9598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-184.1197, -186.4444, -186.7484, -187.8708, -187.8694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-184.0130, -186.4598, -186.7749, -187.7989, -187.7928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-183.9475, -186.4727, -186.8005, -187.7674, -187.7027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-183.9408, -186.5112, -186.8057, -187.7698, -187.6640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-184.0943, -186.5282, -186.7356, -187.8650, -187.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-184.2933, -186.5052, -186.6596, -188.0131, -187.8843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-184.3575, -186.4797, -186.6078, -188.0451, -187.9676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-184.3754, -186.4679, -186.5296, -187.9918, -188.0724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-184.2761, -186.4802, -186.4737, -187.8372, -188.1028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-184.1097, -186.4471, -186.4399, -187.6429, -188.0646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-183.9685, -186.4113, -186.3955, -187.4577, -188.0530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-183.8159, -186.3287, -186.4109, -187.3316, -187.9844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-183.7722, -186.3076, -186.3585, -187.2324, -188.0326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-183.7673, -186.2779, -186.3059, -187.1795, -188.0933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-183.8554, -186.1716, -186.2821, -187.2698, -188.1491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-183.8971, -186.0501, -186.2733, -187.3365, -188.1542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-184.0189, -185.9604, -186.2269, -187.4254, -188.2038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-184.2322, -185.8834, -186.1394, -187.5526, -188.3208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-184.4082, -185.8692, -186.0220, -187.6004, -188.4726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-184.4424, -185.8655, -185.9392, -187.5563, -188.5520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-184.4230, -185.8742, -185.8671, -187.4630, -188.6024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-184.3564, -185.8727, -185.8222, -187.3548, -188.5975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-184.2131, -185.8917, -185.7977, -187.1876, -188.5224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-184.1483, -185.8968, -185.7816, -187.1165, -188.4432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-184.0706, -185.8822, -185.7729, -187.0434, -188.3636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-183.9411, -185.8881, -185.7522, -186.9082, -188.2962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-183.9156, -185.9069, -185.6951, -186.8365, -188.3077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-183.7613, -185.9037, -185.6887, -186.7093, -188.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-183.7652, -185.8640, -185.6697, -186.7357, -188.1724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-183.7674, -185.8494, -185.6476, -186.7475, -188.1330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-183.7995, -185.8390, -185.6033, -186.7625, -188.1451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-183.8932, -185.8506, -185.5232, -186.7951, -188.2124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-184.0195, -185.8145, -185.4555, -186.8669, -188.2878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-184.1284, -185.7615, -185.4226, -186.9750, -188.3377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-184.2537, -185.7318, -185.4055, -187.1090, -188.3700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-184.2570, -185.7473, -185.3892, -187.1254, -188.3366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-184.1468, -185.7378, -185.4226, -187.0853, -188.2209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-183.9523, -185.7463, -185.4576, -186.9627, -188.0727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-183.7614, -185.7541, -185.4764, -186.8216, -187.9342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-183.6151, -185.7085, -185.5419, -186.7921, -187.7316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-183.5964, -185.6871, -185.5700, -186.8480, -187.6250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-183.6696, -185.7002, -185.5519, -186.9298, -187.5913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-183.7170, -185.6930, -185.5700, -187.0332, -187.5126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-183.6922, -185.7321, -185.5822, -187.0513, -187.4193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-183.7272, -185.7565, -185.5676, -187.0927, -187.3771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-183.8356, -185.7604, -185.5418, -187.1825, -187.3707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-183.8821, -185.7237, -185.5442, -187.2440, -187.3228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-183.8567, -185.6743, -185.5905, -187.2849, -187.1873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-183.8707, -185.6161, -185.6432, -187.3832, -187.0514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-183.9594, -185.5779, -185.6676, -187.5146, -186.9823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-184.0387, -185.6010, -185.6421, -187.5754, -186.9634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-184.0574, -185.5752, -185.6634, -187.6285, -186.9083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-183.9735, -185.5416, -185.6842, -187.5949, -186.8292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-183.8591, -185.4553, -185.7770, -187.6276, -186.6712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-183.7659, -185.3897, -185.8643, -187.6664, -186.5253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-183.5075, -185.3289, -185.9920, -187.5918, -186.2939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-183.1734, -185.2912, -186.1288, -187.4351, -185.9947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-182.8712, -185.3350, -186.1979, -187.2032, -185.7866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-182.7240, -185.3844, -186.2052, -187.0530, -185.6841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-182.6572, -185.4210, -186.1799, -186.9510, -185.6436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-182.5957, -185.4793, -186.1759, -186.8704, -185.5684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-182.4571, -185.5477, -186.1959, -186.7296, -185.4593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-182.3222, -185.5625, -186.2065, -186.5961, -185.3782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-182.2561, -185.5361, -186.1914, -186.5172, -185.3538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-182.2058, -185.4565, -186.2145, -186.5059, -185.3110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-182.2654, -185.3717, -186.2542, -186.6287, -185.2800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-182.3845, -185.2939, -186.2325, -186.7564, -185.3570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-182.5130, -185.2102, -186.2293, -186.9073, -185.4275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-182.5515, -185.1673, -186.2351, -186.9615, -185.4704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-182.5239, -185.1766, -186.2283, -186.9183, -185.4948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-182.5112, -185.1736, -186.2291, -186.9153, -185.5015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-182.4598, -185.2104, -186.1984, -186.8425, -185.4997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-182.5961, -185.1950, -186.1142, -186.9099, -185.6364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-182.7179, -185.1926, -186.0422, -186.9695, -185.7385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-182.8971, -185.2098, -185.9285, -187.0386, -185.9016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-183.1190, -185.2342, -185.7839, -187.1043, -186.0990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-183.3164, -185.1984, -185.6810, -187.1822, -186.2876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-183.6360, -185.1126, -185.6046, -187.4039, -186.5273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-183.9057, -185.0775, -185.5213, -187.5651, -186.7413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-184.0131, -185.0700, -185.4559, -187.5897, -186.8736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-184.2079, -185.1083, -185.3237, -187.6196, -187.1209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-184.4313, -185.1774, -185.1877, -187.6748, -187.3792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-184.5559, -185.2563, -185.0942, -187.6975, -187.5043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-184.5063, -185.2604, -185.0929, -187.6754, -187.4749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-184.2755, -185.2230, -185.1402, -187.5465, -187.3288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-183.8902, -185.1384, -185.2546, -187.3587, -187.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-183.7281, -185.0539, -185.3505, -187.3427, -186.8830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-183.6051, -185.0083, -185.3711, -187.2760, -186.8042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-183.5125, -184.9412, -185.4415, -187.2921, -186.6518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-183.2262, -184.8826, -185.5720, -187.1968, -186.3696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-182.9180, -184.8414, -185.6993, -187.0656, -186.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-182.5688, -184.8305, -185.8060, -186.8526, -185.8180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-182.2603, -184.7999, -185.9464, -186.7155, -185.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-182.0783, -184.7837, -186.0399, -186.6349, -185.3594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-181.9874, -184.7777, -186.1188, -186.6269, -185.2205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-181.9060, -184.7674, -186.1785, -186.6009, -185.1320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-181.8879, -184.7743, -186.1817, -186.5683, -185.1113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-181.8822, -184.7740, -186.1758, -186.5420, -185.1168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-182.0712, -184.7873, -186.0788, -186.6165, -185.2684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-182.3432, -184.8741, -185.8910, -186.6641, -185.5055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-182.5748, -184.8922, -185.7634, -186.7474, -185.6929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-182.8231, -184.8922, -185.6457, -186.8558, -185.8903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-183.0457, -184.8594, -185.5793, -187.0032, -186.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-183.1307, -184.7831, -185.5591, -187.0815, -186.1184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-183.2325, -184.6810, -185.5573, -187.2083, -186.1926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-183.3380, -184.6453, -185.5055, -187.2791, -186.3317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-183.2407, -184.6209, -185.4899, -187.1973, -186.3305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-183.0318, -184.6217, -185.5149, -187.0549, -186.2504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-182.8424, -184.5924, -185.5931, -186.9982, -186.1019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-182.6455, -184.5604, -185.6747, -186.9348, -185.9639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-182.4787, -184.5518, -185.7128, -186.8500, -185.8799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-182.3444, -184.5923, -185.6994, -186.7316, -185.8708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-182.2038, -184.6453, -185.6411, -186.5546, -185.9077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-182.0206, -184.6636, -185.6360, -186.3852, -185.8723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-181.9302, -184.6660, -185.6090, -186.2780, -185.8984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-181.8873, -184.6817, -185.5636, -186.1916, -185.9534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-182.0341, -184.7173, -185.4517, -186.2215, -186.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-182.2364, -184.7454, -185.2924, -186.2526, -186.3826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-182.3168, -184.7811, -185.1637, -186.1974, -186.5546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-182.1177, -184.8325, -185.1045, -185.9338, -186.5545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-181.8327, -184.8717, -185.0778, -185.6161, -186.4861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-181.3634, -184.9145, -185.1328, -185.1910, -186.2750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-181.0014, -184.9387, -185.1557, -184.8257, -186.1409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-180.6987, -184.9504, -185.1766, -184.5145, -186.0654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-180.5453, -184.9597, -185.1610, -184.3223, -186.0476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-180.6119, -184.9519, -185.0767, -184.3197, -186.1061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-180.6850, -184.9339, -184.9978, -184.3570, -186.1179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-180.8474, -184.8782, -184.9180, -184.5020, -186.1364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-181.1738, -184.8139, -184.7840, -184.7487, -186.2590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-181.4662, -184.7218, -184.7083, -185.0274, -186.2712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-181.8429, -184.6492, -184.6183, -185.3512, -186.3325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-182.1466, -184.5660, -184.5659, -185.6258, -186.3515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-182.6818, -184.4739, -184.4919, -186.0646, -186.5069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-183.0262, -184.3667, -184.4742, -186.3677, -186.5823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-183.2867, -184.1777, -184.5268, -186.6800, -186.5554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-183.6302, -184.0135, -184.5919, -187.0737, -186.5874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-183.8944, -183.8513, -184.6777, -187.4165, -186.6057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-183.8033, -183.6581, -184.8341, -187.5423, -186.4182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-183.7612, -183.4241, -184.9794, -187.6938, -186.2758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-183.6689, -183.2847, -185.0705, -187.7411, -186.1527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-183.4883, -183.0922, -185.2663, -187.8281, -185.8824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-183.2733, -182.9607, -185.3951, -187.8139, -185.6570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-183.0589, -182.9452, -185.4065, -187.6752, -185.5198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-182.9140, -183.0230, -185.3558, -187.5252, -185.4501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-182.6874, -183.1647, -185.2353, -187.2225, -185.4124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-182.4814, -183.3276, -185.1084, -186.9227, -185.4003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-182.3733, -183.4717, -184.9716, -186.6820, -185.4383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-182.1678, -183.6227, -184.8488, -186.3643, -185.3952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-182.0714, -183.7878, -184.7055, -186.1139, -185.4502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-181.9838, -183.9681, -184.5527, -185.8512, -185.5693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-182.0226, -184.0926, -184.3854, -185.6907, -185.7892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-182.0062, -184.1402, -184.2911, -185.5717, -185.8845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-182.0330, -184.1914, -184.2086, -185.5058, -185.9649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-181.9893, -184.2088, -184.1762, -185.4310, -185.9592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-181.9654, -184.2578, -184.1391, -185.3554, -185.9716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-182.0171, -184.3129, -184.0796, -185.3276, -186.0275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-182.1053, -184.3484, -184.0427, -185.3733, -186.0506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-182.1732, -184.3714, -184.0106, -185.3998, -186.0499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-182.3503, -184.3590, -183.9642, -185.5194, -186.1114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-182.6269, -184.3668, -183.8916, -185.6955, -186.2267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-182.9383, -184.3899, -183.8265, -185.9140, -186.3401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-183.1380, -184.4139, -183.7769, -186.0456, -186.3866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-183.1115, -184.4198, -183.7762, -186.0286, -186.2817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-183.0390, -184.4242, -183.7648, -185.9556, -186.1867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-182.9983, -184.4091, -183.7745, -185.9419, -186.0743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-182.9506, -184.3821, -183.8034, -185.9527, -185.9357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-182.9305, -184.3130, -183.8878, -186.0560, -185.7517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-182.6573, -184.3029, -183.9787, -185.9369, -185.5026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-182.4372, -184.3557, -184.0111, -185.7829, -185.3298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-182.1758, -184.4107, -184.0047, -185.5436, -185.2317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-182.1267, -184.4946, -183.9170, -185.4100, -185.2846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-182.1126, -184.5899, -183.8598, -185.3403, -185.2910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-182.0253, -184.6413, -183.8257, -185.2271, -185.2687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-181.9808, -184.6837, -183.7753, -185.1341, -185.2874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-181.9689, -184.6729, -183.7527, -185.1104, -185.2816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-182.1144, -184.6334, -183.6995, -185.2137, -185.4003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-182.0932, -184.5889, -183.6975, -185.1961, -185.4210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-182.0436, -184.5563, -183.6984, -185.1475, -185.4123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-181.9830, -184.5161, -183.6954, -185.0832, -185.4062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-181.7554, -184.4447, -183.7350, -184.9145, -185.3009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-181.4498, -184.3783, -183.8066, -184.7007, -185.1337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-181.0884, -184.3047, -183.9232, -184.4728, -184.8984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-180.8038, -184.2514, -183.9989, -184.2863, -184.7278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-180.6735, -184.1710, -184.0604, -184.2464, -184.6219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-180.5872, -184.0710, -184.0984, -184.2244, -184.5607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-180.6479, -183.9508, -184.1034, -184.3233, -184.5611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-180.6659, -183.7947, -184.1355, -184.4118, -184.5413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-180.7249, -183.6566, -184.1200, -184.4769, -184.5887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-180.8499, -183.4995, -184.1383, -184.6442, -184.6105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-180.8593, -183.3588, -184.1999, -184.7420, -184.5763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-180.8545, -183.2231, -184.2594, -184.8190, -184.5660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-180.9600, -183.1276, -184.2755, -184.9447, -184.6166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-181.1235, -183.0311, -184.2887, -185.1334, -184.6713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-181.2552, -182.9504, -184.3174, -185.3020, -184.6809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-181.4283, -182.9088, -184.2986, -185.4577, -184.7553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-181.5517, -182.8779, -184.2716, -185.5614, -184.8053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-181.6194, -182.9080, -184.2321, -185.5921, -184.8219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-181.6707, -182.9171, -184.2331, -185.6632, -184.7694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-181.6790, -182.9227, -184.2412, -185.7051, -184.7054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-181.5891, -182.9314, -184.2588, -185.6747, -184.5933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-181.5721, -182.9798, -184.2304, -185.6593, -184.5707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-181.4960, -183.0502, -184.1948, -185.5770, -184.5321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-181.4921, -183.1083, -184.1219, -185.5204, -184.5797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-181.6470, -183.1543, -184.0251, -185.5708, -184.7110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-181.8852, -183.2263, -183.8978, -185.6530, -184.9189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-182.1630, -183.3313, -183.7398, -185.7306, -185.1988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-182.3601, -183.3913, -183.6262, -185.7867, -185.4129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-182.5445, -183.4533, -183.5058, -185.8183, -185.6435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-182.6773, -183.5612, -183.3460, -185.7365, -185.8760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-182.6093, -183.6732, -183.2069, -185.5012, -185.9995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-182.5345, -183.7179, -183.1320, -185.3384, -186.0552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-182.4774, -183.7300, -183.1079, -185.2508, -186.0251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-182.4143, -183.6787, -183.1351, -185.2361, -185.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-182.2338, -183.6386, -183.1874, -185.1419, -185.8341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-181.9527, -183.5781, -183.2784, -184.9948, -185.6203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-181.6509, -183.5277, -183.3853, -184.8475, -185.3576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-181.4760, -183.4820, -183.4682, -184.7859, -185.1455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-181.3884, -183.4346, -183.5406, -184.7917, -184.9532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-181.1960, -183.4088, -183.6126, -184.6887, -184.7514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-181.0884, -183.3383, -183.7225, -184.7030, -184.5195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-180.9625, -183.2619, -183.8431, -184.7141, -184.2857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-180.8838, -183.1930, -183.9792, -184.7848, -184.0490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-180.6694, -183.1642, -184.1239, -184.7287, -183.7596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-180.4605, -183.1841, -184.2562, -184.6614, -183.5016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-180.3382, -183.2315, -184.3311, -184.6026, -183.3430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-180.1680, -183.2238, -184.4542, -184.5587, -183.1247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-180.1421, -183.2517, -184.4470, -184.5147, -183.1032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-180.0460, -183.2602, -184.4285, -184.4070, -183.0945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-180.0553, -183.2369, -184.3672, -184.3798, -183.1646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-180.1160, -183.2767, -184.2388, -184.3232, -183.3287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-180.1233, -183.3102, -184.1053, -184.2169, -183.5158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-180.2585, -183.3677, -183.9367, -184.1923, -183.7553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-180.4298, -183.4890, -183.7142, -184.1223, -184.0597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-180.7615, -183.6746, -183.4346, -184.1312, -184.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-180.9761, -183.8115, -183.2323, -184.1060, -184.7850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-181.1759, -183.9265, -183.0574, -184.0909, -185.0588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-181.4320, -184.1020, -182.8481, -184.0721, -185.3934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-181.5682, -184.1850, -182.7579, -184.0977, -185.5524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-181.7612, -184.2561, -182.6692, -184.1840, -185.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-181.9349, -184.2904, -182.5919, -184.2721, -185.8862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-182.1947, -184.2908, -182.5136, -184.4511, -186.0656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-182.4921, -184.2593, -182.4517, -184.6791, -186.2252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-182.8336, -184.1747, -182.4558, -185.0259, -186.3369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-183.2292, -184.1001, -182.4580, -185.4044, -186.4995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-183.5311, -184.0623, -182.4532, -185.6585, -186.6400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-183.7329, -184.0301, -182.4704, -185.8404, -186.7048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-183.7742, -183.9839, -182.5094, -185.9150, -186.6504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-183.7702, -183.9400, -182.5315, -185.9263, -186.5661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-183.6434, -183.8817, -182.5971, -185.8816, -186.4038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-183.3536, -183.8010, -182.6788, -185.7225, -186.1596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-182.9138, -183.6951, -182.8112, -185.4908, -185.7885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-182.4658, -183.5630, -182.9776, -185.2983, -185.3888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-182.0049, -183.3623, -183.1968, -185.1598, -184.9146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-181.5786, -183.1410, -183.4415, -185.0903, -184.4325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-181.1774, -182.9362, -183.6676, -185.0242, -183.9776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-180.8299, -182.7581, -183.8511, -184.9588, -183.6211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-180.6459, -182.6762, -183.9184, -184.9075, -183.4762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-180.4112, -182.5707, -184.0117, -184.8339, -183.2683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-180.3306, -182.4843, -184.0832, -184.8754, -183.1268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-180.1382, -182.4106, -184.1484, -184.7944, -182.9616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-180.0671, -182.3337, -184.1903, -184.7973, -182.8454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-180.0101, -182.2198, -184.2425, -184.8216, -182.7548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-180.1090, -182.1617, -184.1730, -184.8573, -182.8719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-180.1647, -182.1126, -184.1154, -184.8630, -182.9652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-180.0477, -182.0816, -184.1066, -184.7507, -182.9408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-179.9097, -182.1275, -184.0096, -184.5245, -183.0443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-179.7513, -182.1553, -183.9422, -184.3033, -183.1012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-179.5681, -182.2302, -183.8613, -184.0317, -183.1789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-179.4908, -182.3121, -183.7535, -183.8305, -183.3113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-179.5363, -182.4236, -183.5624, -183.6641, -183.5968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-179.6595, -182.5095, -183.3754, -183.5836, -183.8946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-179.7838, -182.5548, -183.2532, -183.5793, -184.0919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-179.9092, -182.5835, -183.1580, -183.6026, -184.2571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-180.1650, -182.6045, -183.0457, -183.7310, -184.4597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-180.4291, -182.6702, -182.9073, -183.8282, -184.7001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-180.7384, -182.7443, -182.7663, -183.9614, -184.9059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-181.1061, -182.7601, -182.6764, -184.2168, -185.0976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-181.2699, -182.8276, -182.5845, -184.2582, -185.2506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-181.5338, -182.9142, -182.4576, -184.3419, -185.4517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-181.8696, -182.9744, -182.3633, -184.5355, -185.6175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-182.0948, -183.0205, -182.2990, -184.6670, -185.6843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-182.1925, -183.0310, -182.2995, -184.7711, -185.6211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-182.2707, -183.0044, -182.3482, -184.9223, -185.4948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-182.3124, -182.9445, -182.4284, -185.0688, -185.3113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-182.3627, -182.9040, -182.4819, -185.1797, -185.1540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-182.3162, -182.8327, -182.5678, -185.2420, -184.9076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-182.2748, -182.7178, -182.6962, -185.3598, -184.6502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-182.1239, -182.5911, -182.8259, -185.3882, -184.3927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-181.8975, -182.4475, -182.9820, -185.3859, -184.0831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-181.5355, -182.3468, -183.0936, -185.2174, -183.8079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-181.2241, -182.2409, -183.1792, -185.0586, -183.5708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-181.0197, -182.1530, -183.1972, -184.9124, -183.4523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-180.6700, -182.0841, -183.2357, -184.6563, -183.2479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-180.3710, -182.0206, -183.2465, -184.4071, -183.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-180.1717, -181.9407, -183.2720, -184.2597, -183.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-179.9990, -181.9100, -183.2646, -184.0934, -182.9754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-179.7648, -181.8952, -183.2687, -183.8946, -182.8902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-179.6515, -181.9075, -183.2107, -183.7392, -182.9151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-179.4827, -181.9301, -183.1643, -183.5478, -182.9229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-179.3583, -181.9832, -183.1074, -183.3681, -182.9315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-179.1499, -182.0685, -183.0423, -183.0828, -182.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-179.1304, -182.1183, -182.9466, -182.9623, -182.9817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-179.1064, -182.1579, -182.8477, -182.8209, -183.0533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-179.1864, -182.1859, -182.7489, -182.7781, -183.1725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-179.3569, -182.1974, -182.6357, -182.8132, -183.3412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-179.5782, -182.2021, -182.5277, -182.9113, -183.5510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-179.8923, -182.1768, -182.4293, -183.1110, -183.7573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-180.0752, -182.1707, -182.3743, -183.2277, -183.8905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-180.2068, -182.1624, -182.3363, -183.3148, -184.0146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-180.3459, -182.1504, -182.2919, -183.4006, -184.1797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-180.5034, -182.1427, -182.2517, -183.5189, -184.3417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-180.6456, -182.1271, -182.2195, -183.6284, -184.4841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-180.6661, -182.1084, -182.2104, -183.6587, -184.5357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-180.5662, -182.0492, -182.2440, -183.6249, -184.4922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-180.5184, -181.9913, -182.2685, -183.6281, -184.4716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-180.4214, -181.8986, -182.3191, -183.6262, -184.4036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-180.3996, -181.8311, -182.3343, -183.6369, -184.3811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-180.4119, -181.7269, -182.3597, -183.6989, -184.3185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-180.4996, -181.6500, -182.3604, -183.8040, -184.3127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-180.3842, -181.5089, -182.4485, -183.8328, -184.0898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-180.0701, -181.4357, -182.5430, -183.6790, -183.8122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-179.6543, -181.3784, -182.6488, -183.4427, -183.4977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-179.2469, -181.3546, -182.7404, -183.1808, -183.2157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-179.0260, -181.3648, -182.7707, -183.0106, -183.0829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-178.7573, -181.3708, -182.8158, -182.7910, -182.9523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-178.4598, -181.3628, -182.8906, -182.5781, -182.7611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-178.2558, -181.3194, -182.9573, -182.4576, -182.5902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-178.0611, -181.2693, -183.0419, -182.3673, -182.3999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-178.0169, -181.2697, -183.0340, -182.3181, -182.3218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-178.0483, -181.2193, -183.0320, -182.3585, -182.2523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-178.0989, -181.1623, -183.0253, -182.4166, -182.2063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-178.2565, -181.1374, -182.9552, -182.4956, -182.2878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-178.2450, -181.0944, -182.9572, -182.4892, -182.2203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-178.4794, -181.1416, -182.8126, -182.5494, -182.3925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-178.6958, -181.2203, -182.6763, -182.5984, -182.5436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-178.9824, -181.3040, -182.5219, -182.6928, -182.7561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-179.3297, -181.4170, -182.3369, -182.8081, -183.0399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-179.5597, -181.5328, -182.1850, -182.8403, -183.2847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-179.9317, -181.6193, -182.0207, -183.0036, -183.5755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-180.1616, -181.6837, -181.9152, -183.1042, -183.7493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-180.2954, -181.6980, -181.8732, -183.1969, -183.7785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-180.5526, -181.7011, -181.7916, -183.3627, -183.9047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-180.6503, -181.7288, -181.7312, -183.4050, -184.0088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-180.7954, -181.7200, -181.6838, -183.4996, -184.1290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-180.7552, -181.7186, -181.6409, -183.4375, -184.1863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-180.5957, -181.6420, -181.6830, -183.3825, -184.0987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-180.5135, -181.5742, -181.7148, -183.3805, -184.0417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-180.3797, -181.5556, -181.6892, -183.2774, -184.0426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-180.4114, -181.4814, -181.6940, -183.3562, -184.0109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-180.2115, -181.4098, -181.7350, -183.2710, -183.8737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-180.0632, -181.3442, -181.7638, -183.2141, -183.7291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-179.8469, -181.2693, -181.8177, -183.1267, -183.4969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-179.5407, -181.2168, -181.8877, -182.9687, -183.2504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-179.1813, -181.1833, -181.9827, -182.7830, -182.9429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-178.9401, -181.1678, -182.0383, -182.6458, -182.7445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-178.6944, -181.1530, -182.1000, -182.5105, -182.5427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-178.4244, -181.1472, -182.1901, -182.3840, -182.2973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-178.1221, -181.1095, -182.3168, -182.2668, -182.0113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-177.9534, -181.0798, -182.4113, -182.2285, -181.8303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-177.8722, -181.0780, -182.4655, -182.2276, -181.7030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-177.7959, -181.1069, -182.4910, -182.1891, -181.6088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-177.8672, -181.1438, -182.4460, -182.2064, -181.6592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-177.9509, -181.1689, -182.4357, -182.2721, -181.6622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-178.2045, -181.1199, -182.4142, -182.5119, -181.7201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-178.4803, -181.0917, -182.3942, -182.7746, -181.7771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-178.8281, -181.0863, -182.3419, -183.0609, -181.9060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-179.1388, -181.1040, -182.2858, -183.2988, -182.0293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-179.2720, -181.1188, -182.2857, -183.4307, -182.0263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-179.4602, -181.1221, -182.2182, -183.5515, -182.1480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-179.6973, -181.1425, -182.0907, -183.6483, -182.3409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-179.5842, -181.1179, -182.0388, -183.5218, -182.3147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-179.3822, -181.0812, -181.9965, -183.3357, -182.2711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-179.2348, -181.0406, -181.9394, -183.1677, -182.2801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-179.1730, -181.0393, -181.8424, -183.0239, -182.3940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-179.1563, -180.9867, -181.7641, -182.9396, -182.4962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-179.1277, -180.9085, -181.7570, -182.9265, -182.4742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-179.1671, -180.8211, -181.7774, -183.0132, -182.4217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-179.2048, -180.7607, -181.7799, -183.0727, -182.3922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-179.1853, -180.7043, -181.7507, -183.0469, -182.3886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-179.0346, -180.6313, -181.7475, -182.9468, -182.2678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-178.9123, -180.5580, -181.7424, -182.8570, -182.1560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-178.7862, -180.4817, -181.7396, -182.7498, -182.0338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-178.6189, -180.4455, -181.6979, -182.5621, -181.9466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-178.4987, -180.4412, -181.6369, -182.3875, -181.9100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-178.3946, -180.4907, -181.5746, -182.2203, -181.8412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-178.4131, -180.4923, -181.5211, -182.1699, -181.7729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-178.4939, -180.4401, -181.5049, -182.2314, -181.6815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-178.6783, -180.3623, -181.4759, -182.3591, -181.6868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-178.9625, -180.2639, -181.4507, -182.5758, -181.7243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-179.1337, -180.1733, -181.4381, -182.7019, -181.7224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-179.0547, -180.0537, -181.5043, -182.7063, -181.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-179.0585, -180.0403, -181.4953, -182.6884, -181.4700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-179.0246, -180.0205, -181.4772, -182.6174, -181.4324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-178.9857, -180.0379, -181.4333, -182.5136, -181.4308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-178.8989, -180.0316, -181.3707, -182.3515, -181.4615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-178.9052, -180.0266, -181.3048, -182.2674, -181.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-178.9425, -180.0609, -181.1962, -182.1606, -181.6323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-178.9223, -180.0944, -181.0795, -182.0074, -181.7428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-178.8926, -180.0969, -181.0029, -181.8935, -181.7818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-178.9002, -180.0742, -180.9406, -181.8325, -181.8008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-178.9676, -180.0596, -180.8663, -181.8115, -181.8598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-179.0597, -179.9723, -180.8643, -181.8967, -181.8338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-179.1966, -179.9483, -180.8252, -181.9789, -181.8641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-179.4651, -179.8749, -180.8099, -182.2027, -181.9025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-179.5975, -179.7865, -180.8540, -182.3617, -181.8281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-179.7010, -179.7465, -180.8535, -182.4484, -181.7869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-179.7611, -179.6864, -180.8606, -182.5084, -181.7355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-179.8507, -179.6615, -180.8799, -182.6004, -181.7043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-179.8087, -179.6103, -180.9188, -182.6045, -181.6357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-179.5641, -179.6042, -180.9544, -182.4312, -181.5123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-179.2688, -179.5982, -180.9928, -182.2237, -181.3954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-178.7705, -179.6012, -181.0796, -181.8940, -181.1359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-178.3207, -179.6525, -181.1531, -181.5660, -180.9031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-177.9648, -179.7366, -181.1943, -181.2805, -180.7463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-177.7034, -179.8225, -181.2092, -181.0494, -180.6591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-177.6532, -179.8400, -181.2366, -181.0424, -180.6000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-177.6477, -179.8737, -181.2520, -181.0622, -180.5527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-177.5205, -179.8495, -181.3476, -181.0646, -180.3680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-177.6395, -179.8160, -181.3710, -181.2226, -180.2972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-177.9310, -179.7897, -181.2814, -181.4263, -180.4640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-178.2195, -179.7950, -181.1548, -181.5836, -180.6910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-178.7385, -179.8232, -180.9446, -181.8591, -181.1307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-179.2594, -179.8313, -180.7710, -182.1695, -181.5218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-179.7300, -179.8493, -180.6288, -182.4467, -181.8682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-179.9722, -179.8795, -180.5203, -182.5652, -182.0725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-180.0509, -179.9564, -180.4016, -182.5242, -182.2325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-180.0994, -180.0858, -180.2570, -182.4251, -182.4165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-180.0892, -180.1139, -180.2166, -182.3955, -182.4030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-180.1040, -180.1429, -180.1728, -182.3869, -182.4099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-179.9300, -180.1716, -180.1566, -182.2594, -182.3201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-179.7874, -180.1845, -180.1365, -182.1456, -182.2195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-179.6539, -180.1450, -180.1815, -182.1244, -182.0073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-179.5067, -180.1205, -180.2557, -182.1147, -181.7724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-179.3340, -180.1057, -180.3374, -182.0785, -181.4730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-179.1748, -180.0745, -180.4338, -182.0631, -181.1662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-179.1164, -180.0192, -180.5292, -182.1398, -180.8984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-179.0883, -179.9293, -180.6229, -182.2440, -180.6768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-179.0360, -179.8708, -180.6621, -182.2735, -180.5522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-179.0145, -179.7927, -180.6813, -182.3230, -180.4842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-179.1697, -179.6767, -180.6924, -182.5438, -180.5285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-179.3686, -179.5283, -180.7351, -182.8354, -180.5670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-179.4062, -179.4083, -180.7345, -182.9259, -180.6337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-179.2707, -179.3337, -180.7007, -182.8268, -180.6974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-179.0995, -179.2550, -180.7200, -182.7492, -180.6562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-179.0738, -179.1821, -180.7090, -182.7499, -180.7333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-178.9048, -179.1264, -180.7160, -182.6513, -180.7026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-178.7417, -179.1259, -180.6794, -182.5083, -180.6937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-178.5188, -179.1449, -180.6489, -182.3069, -180.6142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-178.3674, -179.1700, -180.5998, -182.1323, -180.6012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-178.3443, -179.2043, -180.5088, -182.0139, -180.6824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-178.3976, -179.2520, -180.3855, -181.9249, -180.8236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-178.6351, -179.3829, -180.1779, -181.8889, -181.1364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-178.7339, -179.5277, -179.9960, -181.7555, -181.3587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-178.7982, -179.6917, -179.8287, -181.6140, -181.5556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-178.8631, -179.8484, -179.7003, -181.5105, -181.6762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-178.8698, -179.9067, -179.6580, -181.4641, -181.6252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-178.8983, -179.9483, -179.6053, -181.4321, -181.6278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-178.9758, -179.9676, -179.5728, -181.4777, -181.6040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-179.0153, -179.9267, -179.5924, -181.5592, -181.5054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-178.7733, -179.8551, -179.6426, -181.4353, -181.2978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-178.4546, -179.7665, -179.7536, -181.3047, -180.9694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-178.2932, -179.6272, -179.9039, -181.3671, -180.6398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-178.1302, -179.4377, -180.0784, -181.4649, -180.2728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-178.0161, -179.3214, -180.1791, -181.5211, -180.0018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-177.8805, -179.2041, -180.2472, -181.5078, -179.8349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-177.8622, -179.0571, -180.2939, -181.5791, -179.7235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-177.9752, -178.9430, -180.2950, -181.7109, -179.7410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-178.1127, -178.8807, -180.2241, -181.7848, -179.8570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-178.3262, -178.8238, -180.1466, -181.9094, -180.0181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-178.4158, -178.7848, -180.1027, -181.9670, -180.0626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-178.5114, -178.7459, -180.0561, -182.0279, -180.1232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-178.4070, -178.7323, -180.0008, -181.9186, -180.1228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-178.3784, -178.6926, -179.9259, -181.8504, -180.2237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-178.2760, -178.7051, -179.8443, -181.7060, -180.3179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-178.0819, -178.7054, -179.7996, -181.5200, -180.3252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-177.9666, -178.7515, -179.7174, -181.3367, -180.4163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-177.9295, -178.8161, -179.6027, -181.1779, -180.5546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-177.8234, -178.8496, -179.5423, -181.0145, -180.5884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-177.7725, -178.8922, -179.4516, -180.8602, -180.6778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-177.7526, -178.8876, -179.3955, -180.7746, -180.6919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-177.7905, -178.8837, -179.3068, -180.6884, -180.7789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-177.9379, -178.8396, -179.2529, -180.7528, -180.7833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-178.0347, -178.7558, -179.2334, -180.8209, -180.7137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-178.1095, -178.6510, -179.2558, -180.9217, -180.6082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-178.1178, -178.5411, -179.3076, -181.0106, -180.4172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-178.1433, -178.3632, -179.4227, -181.1900, -180.1138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-178.1820, -178.2159, -179.5307, -181.3733, -179.8566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-178.2463, -178.0606, -179.6413, -181.5672, -179.6249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-178.1458, -177.9672, -179.7380, -181.6129, -179.3768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-178.0085, -177.9150, -179.8159, -181.5997, -179.1600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-177.8075, -177.8677, -179.8878, -181.5141, -178.9476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-177.5228, -177.8756, -179.9483, -181.3389, -178.7231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-177.3536, -177.9329, -179.9493, -181.1870, -178.6330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-177.1467, -177.9845, -179.9504, -180.9970, -178.5529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-177.0149, -178.0275, -179.9234, -180.8377, -178.5286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-176.9415, -178.0952, -179.8917, -180.7242, -178.5459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-176.8570, -178.1703, -179.7995, -180.5404, -178.6531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-177.0170, -178.2400, -179.6337, -180.5154, -178.9333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-177.1039, -178.3228, -179.5022, -180.4527, -179.1244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-177.1461, -178.4025, -179.3824, -180.3723, -179.2920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-177.2308, -178.4811, -179.2666, -180.3294, -179.4740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-177.2128, -178.5250, -179.2099, -180.2606, -179.5602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-177.2300, -178.5551, -179.1416, -180.2141, -179.7038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-177.4115, -178.5757, -179.0521, -180.2935, -179.9083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-177.6292, -178.5611, -179.0064, -180.4497, -180.0574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-177.8673, -178.5631, -178.9479, -180.5943, -180.2220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-178.0784, -178.5364, -178.9092, -180.7370, -180.3129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-178.2119, -178.5032, -178.8838, -180.8283, -180.3941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-178.3473, -178.4609, -178.8830, -180.9473, -180.3981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-178.5083, -178.4093, -178.8891, -181.0906, -180.3984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-178.5297, -178.3248, -178.9318, -181.1818, -180.3237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-178.6616, -178.1814, -178.9976, -181.3872, -180.2444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-178.6657, -178.0264, -179.0869, -181.5024, -180.0783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-178.5815, -177.8844, -179.1747, -181.5425, -179.8303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-178.4662, -177.7250, -179.2918, -181.5871, -179.5348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-178.2479, -177.5514, -179.4230, -181.5561, -179.2047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-177.9664, -177.4168, -179.5447, -181.4623, -178.8662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-177.6998, -177.3542, -179.5933, -181.3073, -178.6763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-177.2626, -177.2511, -179.6794, -181.0475, -178.3682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-176.8568, -177.1407, -179.7936, -180.8583, -178.0243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-176.5568, -177.0652, -179.8709, -180.7134, -177.8056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-176.4031, -177.0092, -179.8950, -180.6515, -177.6975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-176.2942, -176.9875, -179.8969, -180.5940, -177.6124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-176.3124, -176.9885, -179.8343, -180.5818, -177.6679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-176.4114, -177.0327, -179.6699, -180.5187, -177.9290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-176.6416, -177.0566, -179.5084, -180.5676, -178.2468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-176.8875, -177.1173, -179.3302, -180.6017, -178.6112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-177.0158, -177.1571, -179.2133, -180.5961, -178.8444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-177.0195, -177.2799, -179.0512, -180.4283, -179.0956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-177.0415, -177.3837, -178.9343, -180.3210, -179.2662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-177.0706, -177.5333, -178.7872, -180.1815, -179.5244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-177.0294, -177.6921, -178.6570, -180.0014, -179.7389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-176.8839, -177.8312, -178.5759, -179.7800, -179.8617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-176.7434, -177.9776, -178.5110, -179.5837, -179.9504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-176.5843, -178.0918, -178.4520, -179.3811, -179.9914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-176.4385, -178.1757, -178.4457, -179.2348, -179.9820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-176.4691, -178.1491, -178.4515, -179.2935, -179.9465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-176.4421, -178.1115, -178.4650, -179.3028, -179.8710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-176.3054, -178.0316, -178.5224, -179.2648, -179.7170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-176.2383, -177.9742, -178.5286, -179.2221, -179.6400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-176.1821, -177.9017, -178.5479, -179.2067, -179.5459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-176.1664, -177.7893, -178.5824, -179.2539, -179.4228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-176.2825, -177.6760, -178.6010, -179.3964, -179.3412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-176.4612, -177.5915, -178.5875, -179.5589, -179.3436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-176.5199, -177.4609, -178.6325, -179.6939, -179.2229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-176.5291, -177.3066, -178.7148, -179.8354, -179.0591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-176.6341, -177.1772, -178.7791, -180.0335, -178.9625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-176.7166, -177.0274, -178.8677, -180.2357, -178.8276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-176.7945, -176.8746, -178.9685, -180.4500, -178.6750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-176.6958, -176.7435, -179.0967, -180.5405, -178.4426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-176.3890, -176.6611, -179.2290, -180.4478, -178.1172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-176.0934, -176.6611, -179.2652, -180.2711, -177.9928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-175.8784, -176.6500, -179.3446, -180.2066, -177.8266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-175.7598, -176.6330, -179.4139, -180.2046, -177.6958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-175.6231, -176.5962, -179.5202, -180.2228, -177.5270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-175.5152, -176.5515, -179.5815, -180.2232, -177.4459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-175.4264, -176.5195, -179.6045, -180.2143, -177.4404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-175.3899, -176.4766, -179.5891, -180.2206, -177.5067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-175.4925, -176.4282, -179.5381, -180.3109, -177.6610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-175.5550, -176.3811, -179.4801, -180.3663, -177.8254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-175.4412, -176.4437, -179.3247, -180.1473, -178.0950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-175.2573, -176.4892, -179.2036, -179.9040, -178.3023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-175.1635, -176.5072, -179.1044, -179.7651, -178.4877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-175.0151, -176.5065, -179.0248, -179.5958, -178.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-175.0489, -176.5302, -178.8974, -179.5235, -178.8854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-175.0482, -176.5937, -178.7699, -179.4057, -179.1051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-174.9850, -176.6292, -178.6966, -179.3018, -179.2097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-175.0011, -176.6540, -178.6157, -179.2644, -179.3425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-175.0390, -176.6550, -178.5384, -179.2466, -179.4650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-175.1856, -176.6265, -178.4655, -179.3254, -179.5895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-175.4789, -176.5296, -178.4190, -179.5594, -179.6380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-175.6403, -176.4476, -178.3768, -179.6835, -179.6703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-176.2351, -176.4861, -178.2015, -179.9896, -179.9904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-176.8095, -176.5689, -178.0194, -180.2534, -180.3254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-177.1970, -176.6001, -177.9072, -180.4359, -180.4811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-177.6038, -176.6301, -177.8043, -180.6423, -180.6425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-177.7178, -176.5826, -177.7799, -180.7176, -180.5432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-177.7851, -176.5533, -177.7424, -180.7482, -180.4166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-177.8114, -176.5469, -177.7012, -180.7481, -180.3038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-177.6521, -176.5446, -177.6729, -180.6196, -180.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-177.2900, -176.5380, -177.6674, -180.3665, -179.7728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-176.8418, -176.5641, -177.6534, -180.0256, -179.4650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-176.4525, -176.5680, -177.6828, -179.7704, -179.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-176.1342, -176.6218, -177.6500, -179.4833, -178.8905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-175.8139, -176.6204, -177.6728, -179.2419, -178.5970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-175.5872, -176.5725, -177.7311, -179.1334, -178.2895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-175.3351, -176.5456, -177.7981, -179.0021, -178.0032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-175.1791, -176.5227, -177.8593, -178.9395, -177.7934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-175.0342, -176.4657, -177.9483, -178.9271, -177.5460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-174.8397, -176.3745, -178.0764, -178.9213, -177.2112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-174.6993, -176.2912, -178.1561, -178.9057, -176.9640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-174.6131, -176.2562, -178.1933, -178.8654, -176.8028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-174.3612, -176.2509, -178.2325, -178.6841, -176.6252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-174.1543, -176.2783, -178.2652, -178.5139, -176.4729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-174.0347, -176.2770, -178.3043, -178.4230, -176.3487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-174.0239, -176.2042, -178.3902, -178.4979, -176.1481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-174.0273, -176.1021, -178.4621, -178.5756, -175.9482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-174.1910, -176.0355, -178.4374, -178.7017, -175.9484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-174.3170, -175.9685, -178.4074, -178.7974, -175.9614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-174.2445, -175.8966, -178.4074, -178.7443, -175.9193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-174.1857, -175.8460, -178.3893, -178.6959, -175.9403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-174.0858, -175.8232, -178.3523, -178.5879, -175.9908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-174.0275, -175.7590, -178.3584, -178.5730, -175.9618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-174.0588, -175.7191, -178.2983, -178.5671, -176.0384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-174.1467, -175.6538, -178.1774, -178.5649, -176.1923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-174.3361, -175.5998, -178.0493, -178.6427, -176.4088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-174.6166, -175.5718, -177.9145, -178.7899, -176.6597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-174.8805, -175.5184, -177.8316, -178.9686, -176.8902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-175.2454, -175.5195, -177.7067, -179.1630, -177.2162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-175.5142, -175.5267, -177.6219, -179.3084, -177.4525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-175.7824, -175.5196, -177.5557, -179.4651, -177.6558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-176.0451, -175.5111, -177.4925, -179.6163, -177.8549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-176.3504, -175.5371, -177.4139, -179.7869, -178.1130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-176.3324, -175.5825, -177.3677, -179.7516, -178.1836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-176.3317, -175.5630, -177.3707, -179.7834, -178.1961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-176.1643, -175.5186, -177.4163, -179.7301, -178.1056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-175.8941, -175.4699, -177.4752, -179.6028, -177.9049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-175.4847, -175.4742, -177.5280, -179.3564, -177.6556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-175.0719, -175.4718, -177.6161, -179.1436, -177.3795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-174.5507, -175.4952, -177.7491, -178.8797, -177.0342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-174.0208, -175.4931, -177.9378, -178.6470, -176.6595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-173.5817, -175.5033, -178.1193, -178.4658, -176.3449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-173.1735, -175.5289, -178.2522, -178.2510, -176.1415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-172.8527, -175.5769, -178.3469, -178.0613, -176.0273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-172.6972, -175.6083, -178.3843, -177.9576, -176.0179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-172.7987, -175.6529, -178.2917, -177.9538, -176.2889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-172.7908, -175.7631, -178.1940, -177.8120, -176.5635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-172.9636, -175.9061, -178.0169, -177.7535, -176.9910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-173.1913, -176.0098, -177.8541, -177.7812, -177.3496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-173.6089, -176.1079, -177.6565, -177.9637, -177.7464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-174.0510, -176.1402, -177.5341, -178.2548, -177.9955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-174.4382, -176.1600, -177.4377, -178.5112, -178.1951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-174.9489, -176.1839, -177.3188, -178.8509, -178.4406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-175.5153, -176.1645, -177.2226, -179.2612, -178.6280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-176.0447, -176.1299, -177.1608, -179.6651, -178.7266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-176.4719, -176.0678, -177.1382, -180.0160, -178.7803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-176.7896, -176.0112, -177.1070, -180.2681, -178.7961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-176.9497, -175.9587, -177.0762, -180.3824, -178.7812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-177.0917, -175.9172, -177.0620, -180.4884, -178.7429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-177.2196, -175.8682, -177.0641, -180.5958, -178.6797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-177.0267, -175.7608, -177.1279, -180.5233, -178.3489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-176.4949, -175.6370, -177.2331, -180.2301, -177.8103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-175.7270, -175.5264, -177.3630, -179.7838, -177.1631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-174.9062, -175.3994, -177.5788, -179.3754, -176.4274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-174.1728, -175.2836, -177.8653, -179.0824, -175.6708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-173.6236, -175.1663, -178.1584, -178.9362, -175.0337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-173.2118, -175.0363, -178.4143, -178.8607, -174.5596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-172.9396, -174.9479, -178.5315, -178.7570, -174.3204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-172.7422, -174.8776, -178.6253, -178.7052, -174.1475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-172.6725, -174.8244, -178.6730, -178.7067, -174.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-172.6637, -174.7682, -178.6394, -178.6994, -174.1545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-172.6563, -174.7262, -178.5809, -178.6661, -174.2704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-172.8165, -174.6893, -178.4888, -178.7347, -174.4674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-172.9507, -174.6537, -178.4239, -178.7980, -174.6015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-173.0939, -174.6212, -178.3616, -178.8784, -174.7126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-173.3801, -174.6230, -178.2190, -178.9901, -174.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-173.6024, -174.6702, -178.0558, -179.0193, -175.2449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-173.8398, -174.6892, -177.8996, -179.0678, -175.4741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-174.1921, -174.7352, -177.7065, -179.1612, -175.8061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-174.4073, -174.7226, -177.5645, -179.2060, -176.0145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-174.5984, -174.7668, -177.3893, -179.1945, -176.2922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-175.0092, -174.8218, -177.1928, -179.3289, -176.6865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-175.4069, -174.8967, -176.9954, -179.4454, -177.0473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-175.5817, -174.9998, -176.8134, -179.3899, -177.3144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-175.6637, -175.0723, -176.6522, -179.2840, -177.4981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-175.5676, -175.1054, -176.5401, -179.0926, -177.5412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-175.4605, -175.0794, -176.4912, -178.9653, -177.4836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-175.3145, -175.0383, -176.4617, -178.8324, -177.3767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-174.9609, -174.9907, -176.4644, -178.5689, -177.1751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-174.7300, -174.9572, -176.4528, -178.3750, -177.0261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-174.5946, -174.9039, -176.4533, -178.2718, -176.8661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-174.4335, -174.8556, -176.4567, -178.1461, -176.7256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-174.1606, -174.8114, -176.4532, -177.9294, -176.5750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-173.7812, -174.7517, -176.5046, -177.6774, -176.2963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-173.4058, -174.6974, -176.5366, -177.4044, -176.0587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-172.9602, -174.6989, -176.5694, -177.0647, -175.8581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-172.5743, -174.7103, -176.5948, -176.7584, -175.7261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-172.2888, -174.7159, -176.5940, -176.5079, -175.5984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-172.0698, -174.6761, -176.6069, -176.3459, -175.4017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-172.0027, -174.6217, -176.5884, -176.2903, -175.2671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-171.9769, -174.5397, -176.5804, -176.2868, -175.1699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-171.8856, -174.4982, -176.5676, -176.1970, -175.0920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-171.9614, -174.4371, -176.5261, -176.2388, -175.1106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-172.1476, -174.3897, -176.4495, -176.3291, -175.2267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-172.3573, -174.3274, -176.3864, -176.4496, -175.3266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-172.6078, -174.2482, -176.3308, -176.5991, -175.3896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-173.0533, -174.1646, -176.2368, -176.8565, -175.5310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-173.3216, -174.0628, -176.2099, -177.0349, -175.5475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-173.5619, -173.9836, -176.1960, -177.2051, -175.5670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-173.8907, -173.9061, -176.1728, -177.4461, -175.6074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-174.2995, -173.8682, -176.1126, -177.6971, -175.7405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-174.5516, -173.8209, -176.0890, -177.8655, -175.7842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-174.7344, -173.8064, -176.0382, -177.9435, -175.8713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-174.6923, -173.7986, -175.9975, -177.8634, -175.8693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-174.5237, -173.8028, -175.9659, -177.7163, -175.8796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-174.2844, -173.8399, -175.9098, -177.4753, -175.9395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-173.8968, -173.8673, -175.8811, -177.1444, -175.9005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-173.4860, -173.8595, -175.8952, -176.8358, -175.7904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-173.0878, -173.8394, -175.9327, -176.5524, -175.6662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-172.7319, -173.8067, -176.0032, -176.3429, -175.4468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-172.4683, -173.7741, -176.0600, -176.1933, -175.2534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-172.2425, -173.7333, -176.1195, -176.0787, -175.0172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-172.0452, -173.6564, -176.2198, -176.0362, -174.7305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-171.9692, -173.6074, -176.2760, -176.0340, -174.5434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-172.0384, -173.6198, -176.2417, -176.0542, -174.5525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-172.1497, -173.6322, -176.1656, -176.0745, -174.6128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-172.0256, -173.6622, -176.1239, -175.9297, -174.6248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-171.8748, -173.6573, -176.1040, -175.7880, -174.6168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-171.6447, -173.6578, -176.0935, -175.5777, -174.6195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-171.5802, -173.6706, -176.0366, -175.4592, -174.6699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-171.5533, -173.6828, -175.9714, -175.3638, -174.7357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-171.6309, -173.6423, -175.9307, -175.3904, -174.6996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-171.7290, -173.5932, -175.9010, -175.4540, -174.6304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-171.8851, -173.4962, -175.8976, -175.5977, -174.4720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-171.9296, -173.4033, -175.9412, -175.6791, -174.1992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-172.0518, -173.2951, -175.9770, -175.8275, -173.9720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-172.2233, -173.1484, -176.0669, -176.0720, -173.6787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-172.3712, -173.0397, -176.1099, -176.2384, -173.4961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-172.6067, -172.9226, -176.1498, -176.4749, -173.3376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-172.9707, -172.8541, -176.1512, -176.7666, -173.2908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-173.3167, -172.8415, -176.1068, -176.9832, -173.3063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-173.5780, -172.7689, -176.1136, -177.1930, -173.2482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-173.7030, -172.7329, -176.0955, -177.2828, -173.2172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-173.6836, -172.7535, -176.0350, -177.2157, -173.2259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-173.5033, -172.8060, -175.9546, -176.9954, -173.2304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-173.2761, -172.8650, -175.8321, -176.7058, -173.3432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-172.9253, -172.8686, -175.8032, -176.4313, -173.3161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-172.6528, -172.8812, -175.7489, -176.1958, -173.3554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-172.4976, -172.9139, -175.7099, -176.0599, -173.3964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-172.3399, -172.9009, -175.6827, -175.9563, -173.3811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-172.2528, -172.8857, -175.6403, -175.8954, -173.3978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-172.0877, -172.8645, -175.5981, -175.7779, -173.3567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-172.0279, -172.9247, -175.4445, -175.6121, -173.5149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-172.0769, -172.9763, -175.2857, -175.5244, -173.6860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-172.2493, -173.0058, -175.1428, -175.5576, -173.8946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-172.3532, -173.0491, -174.9944, -175.5299, -174.0915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-172.3234, -173.1262, -174.8688, -175.4147, -174.1656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-172.1406, -173.1954, -174.7787, -175.2214, -174.1652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-172.0444, -173.2070, -174.6994, -175.1217, -174.1938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-172.0031, -173.1840, -174.6395, -175.0861, -174.1801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-171.9958, -173.1583, -174.5783, -175.0674, -174.2027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-172.0241, -173.1017, -174.5360, -175.0971, -174.2123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-172.0100, -173.0168, -174.5355, -175.1296, -174.1418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-172.1693, -172.9710, -174.4642, -175.2036, -174.2413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-172.2704, -172.9824, -174.3763, -175.1969, -174.3744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-172.4586, -173.0408, -174.2552, -175.2160, -174.5820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-172.6580, -173.1674, -174.0941, -175.1897, -174.8975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-172.8319, -173.2395, -173.9717, -175.1965, -175.1174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-172.7887, -173.2966, -173.9086, -175.0774, -175.1117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-172.6963, -173.3329, -173.8598, -174.9272, -175.0067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-172.6723, -173.3301, -173.8401, -174.8716, -174.8771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-172.7076, -173.3019, -173.8390, -174.8846, -174.7325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-172.7373, -173.2416, -173.8530, -174.9350, -174.5331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-172.9807, -173.1726, -173.8535, -175.1476, -174.4364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-173.3293, -173.0833, -173.8593, -175.4509, -174.3722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-173.6631, -172.9911, -173.8685, -175.7420, -174.3360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-173.8973, -172.9381, -173.8590, -175.9178, -174.3022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-174.0890, -172.8881, -173.8535, -176.0642, -174.2268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-174.1806, -172.8594, -173.8346, -176.1128, -174.1545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-174.1750, -172.7705, -173.8602, -176.1419, -173.9787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-174.0778, -172.6498, -173.8945, -176.1302, -173.7751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-173.8536, -172.5876, -173.9047, -176.0019, -173.5520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-173.6496, -172.5326, -173.9170, -175.8986, -173.3639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-173.5340, -172.4981, -173.8895, -175.8133, -173.3528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-173.2758, -172.4831, -173.8539, -175.5962, -173.3590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-173.0155, -172.4589, -173.8213, -175.3775, -173.3883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-172.8203, -172.3220, -173.8316, -175.2700, -173.3939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-172.6091, -172.1963, -173.8405, -175.1536, -173.4229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-172.4685, -172.0238, -173.8910, -175.1455, -173.3396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-172.3702, -171.8727, -173.9250, -175.1551, -173.2696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-172.3974, -171.7121, -173.9678, -175.2639, -173.1626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-172.2270, -171.5822, -174.0215, -175.2342, -173.0312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-172.0141, -171.4683, -174.0896, -175.1904, -172.8877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-171.7753, -171.3716, -174.1851, -175.1463, -172.6876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-171.6154, -171.3277, -174.2106, -175.0739, -172.6764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-171.5035, -171.3211, -174.2116, -175.0117, -172.6826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-171.2271, -171.2930, -174.2599, -174.8761, -172.6289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-171.0357, -171.2925, -174.2862, -174.7791, -172.6539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-170.6244, -171.3228, -174.3238, -174.5136, -172.6302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-170.2577, -171.3321, -174.3708, -174.2859, -172.5219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-170.0054, -171.3516, -174.4038, -174.1290, -172.4782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-169.7427, -171.3922, -174.4077, -173.9152, -172.5016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-169.8574, -171.4476, -174.2802, -173.8834, -172.7511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-170.1151, -171.4912, -174.1318, -173.9572, -173.0683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-170.4968, -171.5458, -173.9570, -174.0995, -173.4546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-171.0252, -171.5792, -173.7910, -174.3791, -173.8140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-171.4552, -171.6149, -173.6757, -174.6114, -174.0433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-171.8524, -171.6304, -173.5811, -174.8426, -174.1439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-172.2493, -171.6209, -173.5321, -175.1065, -174.2015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-172.5746, -171.5322, -173.5659, -175.4051, -174.1106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-172.7175, -171.4258, -173.6395, -175.6072, -173.8747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-172.8985, -171.3246, -173.7097, -175.8276, -173.7152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-172.8628, -171.2080, -173.8141, -175.9222, -173.4374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-172.8140, -171.0805, -173.9029, -175.9898, -173.1617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-172.8178, -170.9758, -173.9839, -176.0897, -172.9356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-172.6413, -170.8957, -174.0424, -176.0360, -172.6747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-172.4624, -170.8163, -174.0870, -175.9686, -172.4559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-172.3402, -170.7633, -174.0924, -175.9061, -172.3414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-172.1079, -170.7388, -174.0643, -175.7183, -172.2335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-172.0490, -170.7204, -173.9932, -175.6234, -172.2361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-171.8768, -170.6886, -173.9358, -175.4613, -172.1799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-171.6284, -170.6619, -173.9054, -175.2603, -172.0476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-171.6007, -170.6355, -173.9008, -175.2442, -171.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-171.5238, -170.6372, -173.8665, -175.1608, -171.7899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-171.3439, -170.6495, -173.8309, -174.9936, -171.6494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-171.2614, -170.7142, -173.7579, -174.8477, -171.5835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-171.2159, -170.7672, -173.6746, -174.7175, -171.5699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-171.0827, -170.8253, -173.6132, -174.5415, -171.5058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-170.7048, -170.8519, -173.6014, -174.2195, -171.3331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-170.4729, -170.8829, -173.5742, -173.9945, -171.2055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-170.2273, -170.9107, -173.5369, -173.7532, -171.1082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-170.0283, -170.9078, -173.4965, -173.5591, -171.0514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-169.8425, -170.8581, -173.4545, -173.3866, -171.0517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-169.7650, -170.8099, -173.4126, -173.2897, -171.0754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-169.8759, -170.7306, -173.3454, -173.3289, -171.1329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-170.0746, -170.5902, -173.3214, -173.4935, -171.1480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-170.1195, -170.4670, -173.3360, -173.5702, -171.0807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-170.2052, -170.3468, -173.3674, -173.7114, -170.9970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-170.1176, -170.2392, -173.4080, -173.7187, -170.8712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-170.0136, -170.1387, -173.4291, -173.6921, -170.7805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-169.7200, -170.0147, -173.5440, -173.6028, -170.4806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-169.5772, -169.9749, -173.5258, -173.4822, -170.4536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-169.5684, -170.0064, -173.4208, -173.3706, -170.5522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-169.5932, -170.0334, -173.3346, -173.3179, -170.6752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-169.7283, -170.0575, -173.2433, -173.3458, -170.8028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-169.9372, -170.0455, -173.1436, -173.4241, -170.9535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-170.0906, -170.0115, -173.0728, -173.4886, -171.0317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-170.1749, -169.9550, -173.0458, -173.5529, -171.0330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-170.3365, -169.8808, -173.0206, -173.6733, -171.0028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-170.3469, -169.8896, -172.9693, -173.6646, -170.9852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-170.5810, -169.9169, -172.8829, -173.7875, -171.1077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-170.7181, -169.9598, -172.7886, -173.8224, -171.2490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-170.9382, -169.9294, -172.7363, -173.9786, -171.3149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-171.0632, -169.8659, -172.7253, -174.1032, -171.3126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-171.2881, -169.8237, -172.7069, -174.2878, -171.3889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-171.4338, -169.7903, -172.6709, -174.3888, -171.4628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-171.4498, -169.7924, -172.5872, -174.3427, -171.5591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-171.4777, -169.8160, -172.4981, -174.2821, -171.6181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-171.5055, -169.8760, -172.3695, -174.1695, -171.7311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-171.3976, -169.9636, -172.2408, -173.9500, -171.8602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-171.2649, -170.0549, -172.1166, -173.7286, -171.9779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-170.8817, -170.1425, -172.0250, -173.3411, -172.0377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-170.3861, -170.2260, -171.9793, -172.9052, -172.0062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-169.9185, -170.2763, -171.9817, -172.5202, -171.9115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-169.5478, -170.3131, -171.9932, -172.2246, -171.8178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-169.2422, -170.3001, -172.0198, -171.9974, -171.6806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-169.0219, -170.2709, -172.0476, -171.8333, -171.5572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-168.8974, -170.1894, -172.1036, -171.7903, -171.3590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-168.6361, -170.1309, -172.2096, -171.6804, -171.1143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-168.5564, -170.0592, -172.2718, -171.7033, -170.9417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-168.3008, -170.0042, -172.3647, -171.5931, -170.7163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-168.0255, -169.9435, -172.4561, -171.4678, -170.5020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-167.6931, -169.7905, -172.6206, -171.4121, -170.1516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-167.3018, -169.6498, -172.8016, -171.3017, -169.7821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-166.9721, -169.4818, -173.0156, -171.2841, -169.3613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-166.8172, -169.3345, -173.1572, -171.3362, -169.0364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-166.7624, -169.1743, -173.2756, -171.4608, -168.7006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-166.9549, -169.0172, -173.2995, -171.7036, -168.6036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-167.2468, -168.8547, -173.3308, -172.0298, -168.5737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-167.5542, -168.7065, -173.3839, -172.3772, -168.5521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-167.9176, -168.5946, -173.4084, -172.7134, -168.5943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-168.2890, -168.5187, -173.4285, -173.0438, -168.6844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-168.5265, -168.4698, -173.4675, -173.2761, -168.7630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-168.9044, -168.4754, -173.4199, -173.5277, -168.9905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-169.1961, -168.4971, -173.3864, -173.7316, -169.1386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-169.4155, -168.5549, -173.3375, -173.8591, -169.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-169.7218, -168.6060, -173.3184, -174.0661, -169.4496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-170.0244, -168.6734, -173.2715, -174.2505, -169.6206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-170.2528, -168.7673, -173.2171, -174.3714, -169.7681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-170.4060, -168.8659, -173.1814, -174.4554, -169.8759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-170.6959, -169.0240, -173.0750, -174.5670, -170.1968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-170.9305, -169.2052, -172.9614, -174.6366, -170.5245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-171.0114, -169.3440, -172.8973, -174.6328, -170.6991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-170.8952, -169.4579, -172.8378, -174.4952, -170.7806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-170.8240, -169.5912, -172.7720, -174.3769, -170.8583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-170.7244, -169.6929, -172.7395, -174.2770, -170.8679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-170.6675, -169.7884, -172.6913, -174.1913, -170.9244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-170.5830, -169.8436, -172.6592, -174.1146, -170.9902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-170.5049, -169.8804, -172.6232, -174.0397, -171.0572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-170.2536, -169.9243, -172.6088, -173.8503, -171.0220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-170.1043, -169.9781, -172.5423, -173.6905, -171.0323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-169.8906, -170.0208, -172.4852, -173.4889, -171.0187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-169.5491, -170.0537, -172.4770, -173.2472, -170.9370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-169.3331, -170.1301, -172.4259, -173.0529, -170.9923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-169.3229, -170.1874, -172.3453, -172.9989, -171.1192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-169.4262, -170.1903, -172.2545, -173.0287, -171.2550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-169.5927, -170.1612, -172.1799, -173.1286, -171.3717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-169.9058, -170.0764, -172.1260, -173.3769, -171.4429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-170.2620, -169.9636, -172.1161, -173.6984, -171.4908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-170.6366, -169.8840, -172.0961, -174.0049, -171.6065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-170.8170, -169.8065, -172.1001, -174.1898, -171.6371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-170.9603, -169.7383, -172.0807, -174.3307, -171.6753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-170.9330, -169.6529, -172.0556, -174.3320, -171.6354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-170.9323, -169.5440, -172.0755, -174.3927, -171.5017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-170.8448, -169.4350, -172.1145, -174.4071, -171.2987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-170.6562, -169.3650, -172.1694, -174.3496, -171.0629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-170.5370, -169.3614, -172.1888, -174.2854, -170.8820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-170.5032, -169.3302, -172.2190, -174.3028, -170.7205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-170.3781, -169.3247, -172.2134, -174.2168, -170.6512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-170.1856, -169.3376, -172.2096, -174.0674, -170.5381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-170.1319, -169.3492, -172.1778, -174.0033, -170.5023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-170.1434, -169.3300, -172.1391, -173.9997, -170.5022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-169.9309, -169.2898, -172.1499, -173.8902, -170.3478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-169.7573, -169.2463, -172.1533, -173.7901, -170.2377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-169.4720, -169.1892, -172.1559, -173.5889, -170.1168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-169.3322, -169.0958, -172.1847, -173.5277, -169.9860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-169.1040, -169.0202, -172.2051, -173.3828, -169.8502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-168.9333, -168.9106, -172.2495, -173.3213, -169.7218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-168.8565, -168.7998, -172.2670, -173.3147, -169.6411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-168.6900, -168.6846, -172.2989, -173.2540, -169.5635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-168.3781, -168.5674, -172.3805, -173.1232, -169.3734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-168.0740, -168.5034, -172.4274, -172.9436, -169.2685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-167.9530, -168.3948, -172.4687, -172.9130, -169.2224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-167.7869, -168.2890, -172.5305, -172.8770, -169.0935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-167.8421, -168.2049, -172.5119, -172.9401, -169.1483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-168.0492, -168.1453, -172.4575, -173.0709, -169.2636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-168.2549, -168.1043, -172.3765, -173.1652, -169.3966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-168.4794, -168.0879, -172.2927, -173.2620, -169.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-168.6353, -168.1219, -172.1996, -173.2892, -169.7190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-168.7744, -168.1404, -172.1354, -173.3214, -169.8008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-168.7804, -168.1695, -172.0847, -173.2688, -169.8411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-168.8185, -168.1912, -172.0275, -173.2277, -169.8232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-168.8700, -168.2078, -171.9633, -173.1959, -169.7990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-168.7926, -168.1993, -171.9486, -173.1167, -169.7067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-168.6671, -168.1672, -171.9638, -173.0272, -169.5415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-168.4250, -168.1487, -171.9935, -172.8579, -169.3290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-168.1649, -168.1459, -172.0164, -172.6616, -169.1163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-168.0927, -168.1336, -171.9927, -172.5643, -168.9725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-168.1521, -168.1134, -171.9721, -172.5873, -168.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-168.3420, -168.1402, -171.9102, -172.6601, -168.9170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-168.4897, -168.2052, -171.8016, -172.6508, -169.0084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-168.4250, -168.2347, -171.7479, -172.5403, -168.9733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-168.3291, -168.2262, -171.7387, -172.4423, -168.8777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-168.2459, -168.1887, -171.7502, -172.3996, -168.7666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-168.2240, -168.1173, -171.7679, -172.4182, -168.6618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-168.3134, -168.0894, -171.7204, -172.4484, -168.7069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-168.2477, -168.0190, -171.7310, -172.4360, -168.6722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-168.1313, -167.9422, -171.7606, -172.4022, -168.5916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-168.1519, -167.8976, -171.7361, -172.4103, -168.6445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-168.0958, -167.8317, -171.7301, -172.3858, -168.6388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-168.0178, -167.8346, -171.6450, -172.2431, -168.7417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-167.8706, -167.8299, -171.5920, -172.0685, -168.8142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-167.8533, -167.8740, -171.4762, -171.9298, -169.0226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-167.6710, -167.8953, -171.4095, -171.7138, -169.0725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-167.5283, -167.8626, -171.3786, -171.5747, -169.0122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-167.4224, -167.8718, -171.2960, -171.3936, -169.0473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-167.4116, -167.8216, -171.2290, -171.3173, -168.9571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-167.4402, -167.7575, -171.1709, -171.2992, -168.8523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-167.3203, -167.7462, -171.1156, -171.1401, -168.7654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-167.2537, -167.7076, -171.0521, -171.0087, -168.6474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-167.3101, -167.6998, -170.9211, -170.9021, -168.7278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-167.4901, -167.7132, -170.7664, -170.8647, -168.8985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-167.7489, -167.6967, -170.6179, -170.9016, -169.0538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-168.0643, -167.6903, -170.4726, -170.9872, -169.2324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-168.4168, -167.6479, -170.3703, -171.1418, -169.3501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-168.7134, -167.5320, -170.3255, -171.3226, -169.3682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-168.8034, -167.4129, -170.3309, -171.3880, -169.2631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-168.7932, -167.2583, -170.3786, -171.4390, -169.0002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-168.8302, -167.1620, -170.3795, -171.4816, -168.8685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-168.9351, -167.0784, -170.3642, -171.5616, -168.8229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-169.0818, -166.9518, -170.4110, -171.7323, -168.6287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-169.0908, -166.8202, -170.4822, -171.8331, -168.3793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-169.0779, -166.7440, -170.5154, -171.8859, -168.1761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-168.9174, -166.6442, -170.5593, -171.8452, -167.9021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-168.7390, -166.5977, -170.5600, -171.7365, -167.7066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-168.5075, -166.5137, -170.5846, -171.6298, -167.4830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-168.3851, -166.4556, -170.6114, -171.5943, -167.2784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-168.2893, -166.4303, -170.5880, -171.5223, -167.1843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-168.3252, -166.4138, -170.5840, -171.5695, -167.1036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-168.3678, -166.4208, -170.5539, -171.5959, -167.1217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-168.3198, -166.4322, -170.5493, -171.5865, -167.0649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-168.3939, -166.4446, -170.5114, -171.6346, -167.1148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-168.3700, -166.5052, -170.4071, -171.5405, -167.2823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-168.3294, -166.5774, -170.3249, -171.4545, -167.4425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-168.2196, -166.7406, -170.1629, -171.2128, -167.6995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-168.2017, -166.8805, -170.0251, -171.0585, -167.9901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-168.2681, -166.9497, -169.9152, -171.0191, -168.2277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-168.4253, -166.9744, -169.8367, -171.0859, -168.4301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-168.2991, -166.9626, -169.8058, -170.9924, -168.4845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-168.0875, -166.9466, -169.7648, -170.8149, -168.5481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-167.7586, -166.9079, -169.7629, -170.5795, -168.5051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-167.4282, -166.8687, -169.7596, -170.3425, -168.4300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-167.3363, -166.7630, -169.7719, -170.3378, -168.3662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-167.3452, -166.6738, -169.7601, -170.3750, -168.3591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-167.3426, -166.5880, -169.7304, -170.3805, -168.3081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-167.4386, -166.5235, -169.6483, -170.4120, -168.3746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-167.4659, -166.4348, -169.5891, -170.4114, -168.3527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-167.3446, -166.3747, -169.5413, -170.3278, -168.3374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-167.1385, -166.2931, -169.5097, -170.1921, -168.2576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-166.8468, -166.1662, -169.5293, -170.0412, -168.0529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-166.7990, -166.0989, -169.4808, -169.9969, -168.0233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-166.6794, -166.0438, -169.4495, -169.9217, -167.9414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-166.3656, -165.9760, -169.4714, -169.7612, -167.6924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-166.1409, -165.9263, -169.5160, -169.6841, -167.4521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-166.0022, -165.8502, -169.5643, -169.6795, -167.2072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-165.8411, -165.7873, -169.6113, -169.6605, -167.0095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-165.8072, -165.7122, -169.6610, -169.7365, -166.8110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-165.9233, -165.6208, -169.6842, -169.9183, -166.7120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-165.9524, -165.5673, -169.6925, -169.9983, -166.6119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-166.1365, -165.5124, -169.6600, -170.1387, -166.6166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-166.5175, -165.4598, -169.6201, -170.4198, -166.6512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-166.9768, -165.4743, -169.5201, -170.6788, -166.8451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-167.3429, -165.5549, -169.3894, -170.8228, -167.0820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-167.6272, -165.6516, -169.2540, -170.8893, -167.2699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-167.9588, -165.7463, -169.1294, -170.9938, -167.5005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-167.9722, -165.7533, -169.0806, -170.9629, -167.4881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-168.0763, -165.7851, -169.0176, -170.9875, -167.5236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-167.9800, -165.8339, -168.9425, -170.8604, -167.5671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-167.9725, -165.9030, -168.8592, -170.7887, -167.6719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-167.9073, -165.9185, -168.8128, -170.7125, -167.6941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-167.6692, -165.9416, -168.7443, -170.4695, -167.7424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-167.3106, -165.9840, -168.6707, -170.1249, -167.8011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-167.1251, -165.9804, -168.6392, -169.9528, -167.7684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-166.9284, -165.9283, -168.6417, -169.7998, -167.6473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-166.8543, -165.8483, -168.6582, -169.7507, -167.4916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-166.6545, -165.7750, -168.6719, -169.5958, -167.3286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-166.5083, -165.6487, -168.7040, -169.5066, -167.1312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-166.3547, -165.5178, -168.7342, -169.4178, -166.9178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-166.1380, -165.3397, -168.8161, -169.3656, -166.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-165.9915, -165.1941, -168.9007, -169.3753, -166.3241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-165.7322, -165.0601, -168.9774, -169.2746, -166.0204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-165.6256, -164.9466, -169.0699, -169.3088, -165.6900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-165.4725, -164.8539, -169.1413, -169.2852, -165.3569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-165.2696, -164.7581, -169.2426, -169.2603, -165.0302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-165.0686, -164.6602, -169.3180, -169.2169, -164.7868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-165.0573, -164.5631, -169.3680, -169.2832, -164.6776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-165.0672, -164.5132, -169.3810, -169.3248, -164.6360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-165.2176, -164.4646, -169.3568, -169.4446, -164.6790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-165.4117, -164.4178, -169.2841, -169.5346, -164.8063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-165.5495, -164.4168, -169.1853, -169.5466, -165.0129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-165.6824, -164.4354, -169.0579, -169.5148, -165.2943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-165.8336, -164.4569, -168.9355, -169.4970, -165.5679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-166.1135, -164.5172, -168.8086, -169.5772, -165.9185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-166.4602, -164.6009, -168.6660, -169.6871, -166.3558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-166.6312, -164.6471, -168.5588, -169.7141, -166.6719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-166.8280, -164.6563, -168.4978, -169.8194, -166.8991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-166.8288, -164.6699, -168.4579, -169.7978, -167.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-166.9181, -164.6897, -168.3991, -169.8213, -167.1954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-167.0969, -164.7218, -168.3208, -169.9081, -167.4158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-167.3212, -164.7511, -168.2542, -170.0274, -167.6119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-167.6086, -164.7591, -168.2093, -170.2075, -167.7885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-167.7170, -164.7039, -168.1966, -170.2942, -167.7491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-167.7906, -164.6874, -168.1512, -170.3059, -167.7506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-167.7023, -164.6700, -168.0972, -170.1971, -167.7590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-167.6899, -164.6369, -168.0734, -170.1767, -167.7597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-167.6296, -164.5963, -168.0569, -170.1326, -167.7161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-167.4294, -164.4805, -168.0909, -170.0481, -167.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-167.3229, -164.3690, -168.1073, -169.9975, -167.2622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-167.0582, -164.2651, -168.1058, -169.8293, -167.0596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-166.7588, -164.1567, -168.1112, -169.6593, -166.8062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-166.2998, -164.0881, -168.0959, -169.3391, -166.5521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-165.7709, -164.0241, -168.1292, -169.0059, -166.2212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-165.2705, -164.0326, -168.1396, -168.6596, -166.0434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-164.7915, -164.0351, -168.1691, -168.3248, -165.8232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-164.5300, -164.0179, -168.1787, -168.1410, -165.6831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-164.5498, -163.9441, -168.1852, -168.1868, -165.5987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-164.5203, -163.8765, -168.1979, -168.1966, -165.5333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-164.4881, -163.8004, -168.2170, -168.2091, -165.4550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-164.5801, -163.7531, -168.1797, -168.2601, -165.4819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-164.8073, -163.6435, -168.1785, -168.4566, -165.4797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-165.1564, -163.4553, -168.2156, -168.7857, -165.3654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-165.3477, -163.2446, -168.2969, -169.0428, -165.1978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-165.5116, -163.0857, -168.3291, -169.2368, -165.1533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-165.9053, -162.9513, -168.3320, -169.5557, -165.2707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-166.2917, -162.8778, -168.3017, -169.8264, -165.4900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-166.6654, -162.8606, -168.2355, -170.0280, -165.8139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-166.9913, -162.8988, -168.1325, -170.1506, -166.1883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-166.9960, -162.9821, -168.0231, -170.0611, -166.5525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-166.8874, -163.0591, -167.9371, -169.9261, -166.8028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-166.5772, -163.1082, -167.9016, -169.7112, -166.9384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-166.1276, -163.1263, -167.8962, -169.4398, -166.9583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-165.5179, -163.1648, -167.9076, -169.0643, -166.9203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-164.9505, -163.1876, -167.9238, -168.7114, -166.8873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-164.5049, -163.1872, -167.9451, -168.4506, -166.7857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-164.0453, -163.1439, -168.0002, -168.1991, -166.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-163.6026, -163.1154, -168.0673, -167.9589, -166.5124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-163.2848, -163.0987, -168.1185, -167.8010, -166.4190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-162.9798, -163.0832, -168.1695, -167.6609, -166.3372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-162.7453, -163.0779, -168.1900, -167.5338, -166.3022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-162.5763, -163.0093, -168.2320, -167.4992, -166.1362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-162.5312, -162.9601, -168.2339, -167.5036, -166.0221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-162.4972, -162.8848, -168.2226, -167.5166, -165.8602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-162.6445, -162.7994, -168.1720, -167.6237, -165.7373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-162.8102, -162.6920, -168.1427, -167.7559, -165.5982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-162.9465, -162.5995, -168.0968, -167.8581, -165.4291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-163.1466, -162.5370, -168.0270, -167.9705, -165.3163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-163.4995, -162.4615, -167.9453, -168.1811, -165.2084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-163.7795, -162.4089, -167.8600, -168.3110, -165.1210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-163.8024, -162.3507, -167.8277, -168.2907, -164.9591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-163.8481, -162.3325, -167.7531, -168.2424, -164.9226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-163.9096, -162.3346, -167.6775, -168.1926, -164.8851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-163.9020, -162.3651, -167.6018, -168.0940, -164.8611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-163.9534, -162.4513, -167.4789, -167.9813, -164.9434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-163.9373, -162.5464, -167.3519, -167.8165, -165.0339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-164.1313, -162.5780, -167.2558, -167.8570, -165.0874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-164.3276, -162.6183, -167.1505, -167.8758, -165.1705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-164.4239, -162.6399, -167.0644, -167.8621, -165.2009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-164.6544, -162.6539, -166.9805, -167.9577, -165.2457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-164.6032, -162.6012, -166.9562, -167.9156, -165.1115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-164.4681, -162.5429, -166.9357, -167.8209, -164.9673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-164.2526, -162.4981, -166.8749, -167.6285, -164.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-164.0182, -162.4640, -166.8172, -167.4278, -164.8526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-163.7931, -162.4494, -166.7598, -167.2244, -164.8096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-163.4654, -162.4577, -166.7071, -166.9229, -164.7430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-163.1357, -162.4405, -166.7069, -166.6620, -164.5958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-162.8936, -162.3794, -166.7260, -166.4925, -164.3943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-162.5475, -162.3819, -166.7082, -166.1699, -164.2271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-162.5285, -162.3382, -166.6372, -166.0697, -164.0510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-162.5951, -162.2954, -166.5808, -166.0683, -163.8262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-162.8959, -162.2456, -166.4703, -166.1956, -163.7578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-163.3278, -162.1892, -166.3597, -166.4208, -163.7022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-163.6807, -162.1174, -166.2886, -166.6245, -163.5931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-163.9662, -162.0022, -166.2592, -166.8261, -163.4144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-164.2703, -161.8760, -166.2396, -167.0463, -163.2401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-164.5490, -161.7339, -166.2385, -167.2718, -163.0936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-164.7691, -161.5888, -166.2455, -167.4536, -162.9932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-165.0380, -161.4306, -166.2355, -167.6251, -162.9660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-165.3658, -161.2832, -166.2337, -167.8605, -163.0008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-165.4404, -161.1158, -166.2804, -167.9852, -162.9061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-165.4545, -160.9560, -166.3286, -168.0733, -162.8113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-165.3694, -160.8874, -166.2975, -167.9999, -162.8164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-165.3691, -160.7947, -166.2694, -167.9782, -162.9249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-165.2314, -160.7216, -166.2532, -167.8808, -162.9824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-164.8489, -160.6146, -166.2702, -167.6743, -162.9397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-164.3631, -160.5305, -166.2719, -167.3751, -162.9485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-163.8319, -160.4756, -166.2365, -167.0111, -163.0046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-163.3805, -160.4692, -166.1690, -166.6608, -163.1616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-163.2106, -160.4844, -166.0761, -166.4709, -163.3972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-162.9615, -160.5168, -165.9948, -166.2318, -163.6144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-162.7451, -160.5485, -165.9411, -166.0483, -163.7763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-162.6242, -160.5518, -165.8944, -165.9414, -163.9394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-162.6111, -160.5515, -165.8647, -165.9406, -164.0428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-162.4377, -160.5965, -165.8346, -165.8097, -164.1417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-162.3885, -160.6557, -165.8038, -165.7602, -164.2551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-162.3867, -160.6643, -165.7858, -165.7530, -164.3007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-162.3148, -160.6621, -165.7602, -165.6761, -164.2981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-162.2363, -160.6311, -165.7497, -165.6149, -164.2260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-162.2561, -160.5815, -165.7592, -165.6553, -164.1321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-162.3044, -160.4744, -165.7946, -165.7499, -163.8643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-162.2753, -160.3474, -165.8571, -165.8175, -163.5195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-162.3302, -160.1803, -165.9440, -165.9786, -163.1215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-162.6116, -160.0333, -166.0061, -166.2570, -162.8077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-162.6838, -159.9474, -166.0511, -166.3865, -162.5736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-162.7478, -159.8966, -166.0668, -166.4782, -162.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-162.6509, -159.8843, -166.0630, -166.4398, -162.2311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-162.3936, -159.8715, -166.1016, -166.3370, -161.9171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-162.2554, -159.8936, -166.1018, -166.2731, -161.6884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-162.2350, -159.8965, -166.0957, -166.2891, -161.4827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-162.0731, -159.9210, -166.0629, -166.1487, -161.3012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-161.8679, -159.9756, -166.0208, -165.9653, -161.1110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-161.7024, -160.0246, -165.9542, -165.7841, -160.9848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-161.5292, -160.0819, -165.8641, -165.5717, -160.9192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-161.5298, -160.1249, -165.7664, -165.4817, -160.9166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-161.7684, -160.1692, -165.6152, -165.5035, -161.0829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-162.0823, -160.2178, -165.4328, -165.5297, -161.3400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-162.4267, -160.2833, -165.2368, -165.5739, -161.6708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-162.5433, -160.3286, -165.0937, -165.5168, -161.8926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-162.5895, -160.3440, -164.9829, -165.4448, -162.0956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-162.7310, -160.3581, -164.8724, -165.4521, -162.3328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-162.5307, -160.3701, -164.8192, -165.2854, -162.4207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-162.3208, -160.3441, -164.7858, -165.1417, -162.5008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-162.1891, -160.2967, -164.7759, -165.0978, -162.4865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-162.1549, -160.2412, -164.7613, -165.1304, -162.4424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-162.1214, -160.1635, -164.7840, -165.1977, -162.3210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-161.8656, -160.0490, -164.8317, -165.1484, -162.0599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-161.6293, -159.9049, -164.9105, -165.1602, -161.7444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-161.3319, -159.7633, -165.0033, -165.1327, -161.4417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-161.1982, -159.5994, -165.1068, -165.2469, -161.1482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-161.0193, -159.4599, -165.1792, -165.2857, -160.9474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-160.8861, -159.3041, -165.2487, -165.3538, -160.7870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-160.7043, -159.1554, -165.3130, -165.3903, -160.6749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-160.5348, -159.0391, -165.3990, -165.4325, -160.5108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-160.4114, -158.9757, -165.4163, -165.4271, -160.4752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-160.4926, -158.9448, -165.3605, -165.4836, -160.5456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-160.7058, -158.9375, -165.2785, -165.5722, -160.6780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-160.9142, -158.9424, -165.1912, -165.6441, -160.7762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-161.0994, -158.9672, -165.0824, -165.6709, -160.9451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-161.3322, -159.0258, -164.9876, -165.7435, -161.2072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-161.4187, -159.1068, -164.8739, -165.6910, -161.4789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-161.6486, -159.1903, -164.7333, -165.6972, -161.8771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-162.0861, -159.2549, -164.6221, -165.8740, -162.2594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-162.5543, -159.2990, -164.5335, -166.0752, -162.5809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-162.7999, -159.2984, -164.4868, -166.1675, -162.7535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-162.9333, -159.2856, -164.4717, -166.2096, -162.8028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-162.9098, -159.2583, -164.4640, -166.1631, -162.7272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-162.8335, -159.2265, -164.4658, -166.0861, -162.5929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-162.6456, -159.1687, -164.4999, -165.9793, -162.3598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-162.5365, -159.1268, -164.4882, -165.8704, -162.2516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-162.0108, -159.0761, -164.5254, -165.5315, -161.9370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-161.2514, -159.0106, -164.6090, -165.1018, -161.5712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-160.5153, -159.0108, -164.6660, -164.6277, -161.3303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-159.8691, -159.0750, -164.6864, -164.1636, -161.3276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-159.3215, -159.1514, -164.7104, -163.7452, -161.3317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-159.1183, -159.1891, -164.7187, -163.6008, -161.3471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-158.9505, -159.1277, -164.7810, -163.5609, -161.2118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-158.8786, -159.0918, -164.7906, -163.5237, -161.0591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-158.8946, -159.0622, -164.7566, -163.5153, -160.9824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-158.9614, -159.0010, -164.6846, -163.5222, -160.8993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-159.0994, -158.9418, -164.6120, -163.5910, -160.8001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-159.3847, -158.8581, -164.5229, -163.7639, -160.7165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-159.5487, -158.7794, -164.4697, -163.8660, -160.6212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-159.8543, -158.6986, -164.4091, -164.0579, -160.5540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-160.2803, -158.6298, -164.3194, -164.3040, -160.5674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-160.7972, -158.5792, -164.2400, -164.6257, -160.6218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-161.1932, -158.5227, -164.1834, -164.8825, -160.6742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-161.3894, -158.4341, -164.1757, -165.0553, -160.5746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-162.0293, -158.3915, -164.1590, -165.5056, -160.6616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-162.4890, -158.4074, -164.0906, -165.7763, -160.8160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-162.7284, -158.4015, -164.0225, -165.8824, -160.8675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-162.7460, -158.4016, -163.9395, -165.8299, -160.8879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-162.8236, -158.4016, -163.8485, -165.8180, -160.9992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-162.8329, -158.4414, -163.7216, -165.7408, -161.1651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-162.4410, -158.4349, -163.6252, -165.4322, -161.0716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-162.1254, -158.4374, -163.5450, -165.1839, -160.9907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-161.9172, -158.4073, -163.4854, -165.0341, -160.9406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-161.7690, -158.3741, -163.4329, -164.9309, -160.8715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-161.6594, -158.3621, -163.3830, -164.8443, -160.7753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-161.4820, -158.3227, -163.3654, -164.7441, -160.6715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-161.4480, -158.2774, -163.3385, -164.7357, -160.6830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-161.2696, -158.2463, -163.2930, -164.6028, -160.7322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-161.2079, -158.2365, -163.2412, -164.5328, -160.7969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-161.1539, -158.2293, -163.2084, -164.4984, -160.8230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-161.1857, -158.2510, -163.1358, -164.5004, -160.8860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-161.2029, -158.2697, -163.0466, -164.4739, -160.9267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-161.2553, -158.2568, -163.0008, -164.5055, -160.7983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-161.4218, -158.2310, -162.9332, -164.6067, -160.8160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-161.4300, -158.1939, -162.8658, -164.6027, -160.8020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-161.5167, -158.2065, -162.7531, -164.5893, -160.9126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-161.4192, -158.2446, -162.6460, -164.4419, -161.0334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-161.5396, -158.3312, -162.5244, -164.4214, -161.3052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-161.5901, -158.3850, -162.4327, -164.3700, -161.4611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-161.7516, -158.4483, -162.3482, -164.3750, -161.5369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-161.7315, -158.4984, -162.2735, -164.2654, -161.5854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-161.8234, -158.5516, -162.1941, -164.2468, -161.6916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-161.9220, -158.5427, -162.1562, -164.2823, -161.7797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-161.9433, -158.4619, -162.1920, -164.3356, -161.6597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-161.6353, -158.3353, -162.2582, -164.2005, -161.3227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-161.0758, -158.1941, -162.3622, -163.9499, -160.8795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-160.4837, -158.0812, -162.4679, -163.6663, -160.4119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-159.9834, -158.0055, -162.5489, -163.3963, -160.0559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-159.3816, -157.9334, -162.6367, -163.0522, -159.6903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-158.8702, -157.8268, -162.7576, -162.8174, -159.2820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-158.3967, -157.7955, -162.8343, -162.5704, -159.0362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-157.8472, -157.7503, -162.9373, -162.3076, -158.7604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-157.3407, -157.7128, -163.0576, -162.0933, -158.4258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-156.8957, -157.6569, -163.1819, -161.9201, -158.1403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-156.4278, -157.5788, -163.3646, -161.7961, -157.7941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-156.0612, -157.4614, -163.5216, -161.7104, -157.5396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-155.8421, -157.3206, -163.6704, -161.7324, -157.2821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-155.8199, -157.2346, -163.7309, -161.8135, -157.1428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-156.0627, -157.1128, -163.7183, -162.0147, -157.1276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-156.3858, -157.0146, -163.6152, -162.1548, -157.2861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-156.8117, -156.9282, -163.5590, -162.4115, -157.4093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-157.3348, -156.8389, -163.5162, -162.7401, -157.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-157.9037, -156.7409, -163.4871, -163.0960, -157.6713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-158.5427, -156.6930, -163.4472, -163.4622, -157.8474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-159.2499, -156.6740, -163.3836, -163.8577, -158.1016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-160.0205, -156.6686, -163.2993, -164.2522, -158.4129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-160.4141, -156.6791, -163.2213, -164.4169, -158.6033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-160.7322, -156.6989, -163.1108, -164.5045, -158.8584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-160.6924, -156.6775, -163.0469, -164.4257, -158.9239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-160.5107, -156.6770, -162.9625, -164.2399, -158.9964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-160.0944, -156.6793, -162.8636, -163.8917, -159.0437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-159.6560, -156.6940, -162.7831, -163.5505, -159.1541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-159.0379, -156.7040, -162.7430, -163.1164, -159.1344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-158.5970, -156.7201, -162.7154, -162.8146, -159.1698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-158.1936, -156.7299, -162.7043, -162.5482, -159.1732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-157.8070, -156.7314, -162.6822, -162.2734, -159.1978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-157.4487, -156.7388, -162.6398, -161.9991, -159.2245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-157.3896, -156.6737, -162.6028, -161.9613, -159.1938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-157.6239, -156.5980, -162.5273, -162.1023, -159.2073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-157.8938, -156.5268, -162.4395, -162.2590, -159.2528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-158.0157, -156.4790, -162.3382, -162.2786, -159.3014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-158.3346, -156.4806, -162.1754, -162.3636, -159.4953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-158.8633, -156.4902, -162.0000, -162.5592, -159.6631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-159.1309, -156.4642, -161.8972, -162.6435, -159.6578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-159.2633, -156.3881, -161.8460, -162.6903, -159.4722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-159.3618, -156.3164, -161.7925, -162.7103, -159.3261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-159.4687, -156.3182, -161.7015, -162.7043, -159.3141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-159.4119, -156.3522, -161.6061, -162.5888, -159.3476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-159.0215, -156.3143, -161.5846, -162.3289, -159.1540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-158.7172, -156.2362, -161.6008, -162.1543, -158.8489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-158.2572, -156.1279, -161.6296, -161.8865, -158.4743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-157.7826, -156.0174, -161.6878, -161.6324, -158.0556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-157.6001, -155.9206, -161.7204, -161.5340, -157.7800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-157.1625, -155.8504, -161.7371, -161.2408, -157.5245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-156.9562, -155.8010, -161.7354, -161.0980, -157.3157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-156.8130, -155.7652, -161.7438, -160.9944, -157.0735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-156.7300, -155.7383, -161.7502, -160.9360, -156.8426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-156.7201, -155.7401, -161.7454, -160.9193, -156.6496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-156.7670, -155.7199, -161.7398, -160.9525, -156.5235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-157.1018, -155.7160, -161.6349, -161.0691, -156.5428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-157.6866, -155.7212, -161.4612, -161.2720, -156.6995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-158.1552, -155.7248, -161.2939, -161.4066, -156.8060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-158.6800, -155.6485, -161.2569, -161.7161, -156.6981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-159.1339, -155.6021, -161.2162, -161.9558, -156.6655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-159.4449, -155.5635, -161.1261, -162.0688, -156.7793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-159.6384, -155.5334, -161.0107, -162.0672, -156.9556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-159.8411, -155.5057, -160.8979, -162.1000, -157.1754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-160.1928, -155.5083, -160.7954, -162.2271, -157.4240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-160.5351, -155.4983, -160.7244, -162.3771, -157.6830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-160.5901, -155.4230, -160.6899, -162.3920, -157.7425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-160.3972, -155.3716, -160.6496, -162.2470, -157.7033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-160.1322, -155.3028, -160.5863, -162.0376, -157.6980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-159.8510, -155.2548, -160.5179, -161.8459, -157.7943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-159.4751, -155.1757, -160.5066, -161.6570, -157.7864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-159.0658, -155.0634, -160.5359, -161.4924, -157.7414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-158.4362, -154.9548, -160.6039, -161.2140, -157.6701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-157.9981, -154.8799, -160.6812, -161.0707, -157.6307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-157.9260, -154.7893, -160.7492, -161.1416, -157.6320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-157.8594, -154.7118, -160.7954, -161.1786, -157.6221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-157.8695, -154.6345, -160.8168, -161.2602, -157.6251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-158.0001, -154.5345, -160.8384, -161.4237, -157.6376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-158.0730, -154.4579, -160.8693, -161.5566, -157.6164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-157.9882, -154.3446, -160.9288, -161.6207, -157.4592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-157.7659, -154.2576, -160.9792, -161.5969, -157.2651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-157.4651, -154.1941, -161.0068, -161.5040, -157.1466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-157.2137, -154.1400, -161.0138, -161.4255, -157.1081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-156.8774, -154.1058, -160.9993, -161.2523, -157.0516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-156.5282, -154.0544, -161.0007, -161.0902, -156.9950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-156.1688, -153.9907, -161.0526, -160.9587, -156.7914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-155.8734, -153.9134, -161.1181, -160.8847, -156.5334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-155.4578, -153.8655, -161.1809, -160.7171, -156.2923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-155.1179, -153.8465, -161.2340, -160.5569, -156.1030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-154.9271, -153.8772, -161.2010, -160.4067, -156.0671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-154.9797, -153.9345, -161.0783, -160.3498, -156.2146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-155.3011, -153.9543, -160.9944, -160.5324, -156.2130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-155.5889, -153.9899, -160.9112, -160.6683, -156.2697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-155.9001, -154.0440, -160.7935, -160.7850, -156.4185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-156.5101, -154.0992, -160.6578, -161.0719, -156.7056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-156.8665, -154.1332, -160.5782, -161.2511, -156.8521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-157.0839, -154.1214, -160.5227, -161.3499, -156.9317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-157.1042, -154.0803, -160.5065, -161.3677, -156.9454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-157.2146, -154.0697, -160.4750, -161.4292, -156.9935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-157.1745, -154.0638, -160.4307, -161.3797, -157.0150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-157.2504, -154.0489, -160.3782, -161.3959, -157.0755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-157.3247, -154.0636, -160.2756, -161.3758, -157.1788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-157.4020, -154.0879, -160.1788, -161.3512, -157.3022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-157.2418, -154.1005, -160.0717, -161.1665, -157.3558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-156.9726, -154.1076, -160.0085, -160.9458, -157.3310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-156.6443, -154.0596, -159.9921, -160.7410, -157.1887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-156.4681, -154.0072, -159.9815, -160.6494, -157.1684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-156.3286, -153.9269, -160.0121, -160.6173, -157.0604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-156.0439, -153.7907, -160.0869, -160.5139, -156.8061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-155.9066, -153.6601, -160.1384, -160.4817, -156.5925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-155.8482, -153.6054, -160.1122, -160.4335, -156.5935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-155.6695, -153.5149, -160.1305, -160.3292, -156.4432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-155.5459, -153.4204, -160.1362, -160.2650, -156.3508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-155.4485, -153.3605, -160.1253, -160.2054, -156.2167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-155.4489, -153.3047, -160.0958, -160.1991, -156.0956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-155.5842, -153.3120, -159.9971, -160.2003, -156.1465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-155.6083, -153.3197, -159.9250, -160.1557, -156.2070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-155.6966, -153.3046, -159.8848, -160.1745, -156.1912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-155.7246, -153.3255, -159.8036, -160.1058, -156.1963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-155.8114, -153.3143, -159.7560, -160.1346, -156.1568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-155.8333, -153.2980, -159.7160, -160.1307, -156.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-155.7239, -153.2891, -159.6945, -160.0547, -155.7886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-155.5322, -153.3094, -159.6511, -159.9078, -155.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-155.3000, -153.2889, -159.6648, -159.7897, -155.3989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-155.0786, -153.2482, -159.6870, -159.6928, -155.1773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-154.8907, -153.2041, -159.6738, -159.5945, -155.0911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-154.9118, -153.1490, -159.6586, -159.6448, -155.0239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-154.8771, -153.1417, -159.5838, -159.5883, -155.1055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-154.9806, -153.1280, -159.4917, -159.6113, -155.2068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-155.1189, -153.0956, -159.4034, -159.6830, -155.3331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-155.3054, -153.0894, -159.3062, -159.7558, -155.4719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-155.3531, -153.0745, -159.2004, -159.7160, -155.6567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-155.3082, -153.0630, -159.0823, -159.5827, -155.8350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-155.1976, -153.0428, -159.0021, -159.4352, -155.9085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-155.1988, -153.0139, -158.9494, -159.3915, -155.9001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-155.2900, -152.9955, -158.9071, -159.4115, -155.9264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-155.4497, -152.9506, -158.8885, -159.5011, -155.8539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-155.5417, -152.8806, -158.8917, -159.5735, -155.6651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-155.6406, -152.8222, -158.9024, -159.6767, -155.4951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-155.8215, -152.7480, -158.9454, -159.8620, -155.3656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-155.8221, -152.6943, -158.9608, -159.8918, -155.2484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-155.6232, -152.6337, -158.9600, -159.8222, -155.2214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-155.2492, -152.5302, -158.9875, -159.6657, -155.0967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-154.7735, -152.4644, -158.9834, -159.3852, -155.0608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-154.2021, -152.4264, -158.9975, -159.0546, -154.9943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-153.6005, -152.3950, -159.0191, -158.6958, -154.9496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-152.8316, -152.3361, -159.0662, -158.2476, -154.8387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-152.3161, -152.2989, -159.0722, -157.9166, -154.8103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-151.9614, -152.2657, -159.0616, -157.6765, -154.7687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-151.7160, -152.2113, -159.0426, -157.5153, -154.6782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-151.4669, -152.1598, -159.0218, -157.3466, -154.5832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-151.2867, -152.1041, -159.0278, -157.2479, -154.4631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-151.3328, -152.0229, -158.9867, -157.2730, -154.3594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-151.6021, -151.8823, -158.9673, -157.4759, -154.1568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-151.8965, -151.7263, -158.9692, -157.7259, -153.9662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-152.1850, -151.6112, -158.9639, -157.9422, -153.8094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-152.4249, -151.4926, -159.0126, -158.1700, -153.5937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-152.6464, -151.4206, -159.0574, -158.3487, -153.4091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-152.8472, -151.3461, -159.1262, -158.5443, -153.2376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-152.9525, -151.3047, -159.1803, -158.6496, -153.0225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-153.2621, -151.2889, -159.2189, -158.8754, -152.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-153.4063, -151.2624, -159.2773, -159.0133, -152.7826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-153.4214, -151.2454, -159.2445, -158.9784, -152.7677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-153.5064, -151.2492, -159.1075, -158.9070, -152.9340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-153.7447, -151.2658, -158.9172, -158.8917, -153.2437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-154.0777, -151.2952, -158.7649, -158.9671, -153.5115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-154.4786, -151.3498, -158.6178, -159.0984, -153.7749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-154.8819, -151.4193, -158.4761, -159.2145, -154.0042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-155.0595, -151.4880, -158.3091, -159.1810, -154.2101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-155.0989, -151.5733, -158.1388, -159.0575, -154.3554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-155.0419, -151.6561, -157.9712, -158.8782, -154.4493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-154.7886, -151.6815, -157.8648, -158.6236, -154.3553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-154.1831, -151.6624, -157.7950, -158.1700, -154.1456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-153.6305, -151.6504, -157.7597, -157.7549, -153.9130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-153.2017, -151.6069, -157.7501, -157.4340, -153.6755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-152.8244, -151.5840, -157.7550, -157.1745, -153.4025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-152.5333, -151.5584, -157.7665, -156.9616, -153.1403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-152.3261, -151.5792, -157.7313, -156.7239, -153.0271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-152.1986, -151.5859, -157.6474, -156.4996, -153.0117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-152.1872, -151.5626, -157.5711, -156.3763, -152.9642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-152.0919, -151.4838, -157.5083, -156.2349, -152.8231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-152.1819, -151.3684, -157.4558, -156.2152, -152.5991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-152.3836, -151.2617, -157.3953, -156.2803, -152.4321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-152.6711, -151.1706, -157.3234, -156.3684, -152.3197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-153.0201, -151.0886, -157.2549, -156.4946, -152.2409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-153.4419, -150.9882, -157.2018, -156.6889, -152.2227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-153.7063, -150.8739, -157.1561, -156.7960, -152.2259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-154.1438, -150.7694, -157.1399, -157.0258, -152.2074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-154.4973, -150.6724, -157.0855, -157.1816, -152.3250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-154.9986, -150.6036, -157.0461, -157.4549, -152.4497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-155.3474, -150.5363, -156.9826, -157.6120, -152.5612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-155.1797, -150.3871, -156.9681, -157.5247, -152.4731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-154.6989, -150.2662, -156.8715, -157.1691, -152.4947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-154.4832, -150.2177, -156.7537, -156.9463, -152.6891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-154.5168, -150.2332, -156.6353, -156.8673, -152.9533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-154.6749, -150.3019, -156.5079, -156.8633, -153.3039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-154.6841, -150.3101, -156.4489, -156.8522, -153.5143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-154.5552, -150.3074, -156.4070, -156.7967, -153.6360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-154.4380, -150.2965, -156.3818, -156.7528, -153.7772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-154.3388, -150.3224, -156.3269, -156.6940, -154.0041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-154.0740, -150.3229, -156.3018, -156.5365, -154.0771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-153.8093, -150.3302, -156.2782, -156.3806, -154.1189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-153.6193, -150.3583, -156.2576, -156.2633, -154.1632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-153.4793, -150.3130, -156.2797, -156.2248, -154.0082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-153.4446, -150.2873, -156.2793, -156.2204, -153.8765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-153.4096, -150.2646, -156.2696, -156.2090, -153.7461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-153.4437, -150.2021, -156.2523, -156.2304, -153.6024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-153.5277, -150.0745, -156.3017, -156.3239, -153.2313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-153.8617, -150.0001, -156.3214, -156.5349, -152.9551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-154.2535, -149.9350, -156.3714, -156.8135, -152.6745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-154.6062, -149.8571, -156.4806, -157.1273, -152.3205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-154.8825, -149.7953, -156.6069, -157.4092, -151.9886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-154.8079, -149.7159, -156.7528, -157.5138, -151.5506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-154.8070, -149.6576, -156.9359, -157.7246, -151.1465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-154.6763, -149.6400, -157.1213, -157.8593, -150.7264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-154.6678, -149.5946, -157.2315, -157.9989, -150.4859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-154.8764, -149.6126, -157.3171, -158.2195, -150.3918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-155.0529, -149.6303, -157.3298, -158.3497, -150.3840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-155.0338, -149.6294, -157.2160, -158.2410, -150.4444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-155.0335, -149.6368, -157.0340, -158.0713, -150.5314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-154.8107, -149.5971, -156.8408, -157.7775, -150.5970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-154.3893, -149.5338, -156.5673, -157.2879, -150.7260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-153.7958, -149.4421, -156.2456, -156.6549, -150.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-153.2343, -149.3781, -155.9842, -156.0973, -151.3152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-152.7415, -149.3765, -155.7705, -155.6306, -151.7037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-152.3633, -149.4173, -155.6050, -155.2889, -152.1434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-151.9186, -149.4482, -155.5087, -154.9411, -152.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-151.6597, -149.5140, -155.4128, -154.7208, -152.9638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-151.5256, -149.5415, -155.3582, -154.6447, -153.3230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-151.5747, -149.5514, -155.2992, -154.6831, -153.5661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-151.7633, -149.4774, -155.2423, -154.8281, -153.5623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-152.0729, -149.3422, -155.1905, -155.0713, -153.4642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-152.4231, -149.2173, -155.1617, -155.3399, -153.4074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-153.0836, -149.0911, -155.1480, -155.7686, -153.2337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-153.5905, -148.9868, -155.1672, -156.1161, -153.0523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-153.8275, -148.8725, -155.1967, -156.3183, -152.8329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-154.1004, -148.7858, -155.2116, -156.5144, -152.6643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-154.3811, -148.7147, -155.2080, -156.6960, -152.5497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-154.6438, -148.6389, -155.2543, -156.9115, -152.3814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-154.7675, -148.5850, -155.2655, -157.0198, -152.2495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-154.8295, -148.5416, -155.2543, -157.0545, -152.1296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-154.5953, -148.4743, -155.1992, -156.8920, -151.9376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-154.4085, -148.4223, -155.1657, -156.7764, -151.7121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-153.8741, -148.3117, -155.1542, -156.4729, -151.3820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-153.4878, -148.2104, -155.1290, -156.2429, -151.1647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-152.8603, -148.1031, -155.1059, -155.8697, -150.8950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-151.9555, -147.9552, -155.1435, -155.3775, -150.4579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-151.2566, -147.8402, -155.1590, -154.9704, -150.0872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-150.5955, -147.7651, -155.2007, -154.6308, -149.6923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-150.2520, -147.7268, -155.2322, -154.4770, -149.4178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-150.0376, -147.6910, -155.2474, -154.3745, -149.1936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-149.7950, -147.6530, -155.2620, -154.2537, -149.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-149.9056, -147.7278, -155.1801, -154.2419, -148.9903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-149.9442, -147.8064, -155.0408, -154.1045, -149.0463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-150.0493, -147.9008, -154.8682, -153.9765, -149.1762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-150.1366, -147.9771, -154.6787, -153.8224, -149.3665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-150.2041, -147.9911, -154.5508, -153.7435, -149.4565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-150.3879, -148.0230, -154.4238, -153.7327, -149.5713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-150.6237, -148.0266, -154.2607, -153.7383, -149.8319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-151.3687, -148.0336, -154.0582, -154.0433, -150.2379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-152.0321, -148.0756, -153.8945, -154.3114, -150.6556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-152.6206, -148.1328, -153.7692, -154.5760, -151.0434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-153.1871, -148.2192, -153.6319, -154.8111, -151.4864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-153.8244, -148.3324, -153.5334, -155.0984, -151.8224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-154.1410, -148.3786, -153.4909, -155.2795, -152.0414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-154.4096, -148.4071, -153.4747, -155.4481, -152.1503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-154.2970, -148.3514, -153.4780, -155.3865, -152.0334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-154.0728, -148.2901, -153.4561, -155.2099, -151.9392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-153.8844, -148.2604, -153.4183, -155.0255, -151.8759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-153.7495, -148.2104, -153.4077, -154.9005, -151.7146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-153.2115, -148.0747, -153.4280, -154.5894, -151.3350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-152.8000, -147.9506, -153.4474, -154.3734, -151.0753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-152.0769, -147.8056, -153.4697, -153.9698, -150.6835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-151.4322, -147.6873, -153.4764, -153.6073, -150.3878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-150.6586, -147.5585, -153.4927, -153.1587, -150.1132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-150.0153, -147.4600, -153.4955, -152.7801, -150.0170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-149.4684, -147.3699, -153.4985, -152.4807, -149.9473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-149.0243, -147.2819, -153.5141, -152.2496, -149.8021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-148.8619, -147.1934, -153.5114, -152.1952, -149.7523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-148.9231, -147.0887, -153.4703, -152.2540, -149.6310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-149.1158, -146.9705, -153.4517, -152.3859, -149.4016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-149.4675, -146.8484, -153.4734, -152.6427, -149.1000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-149.7340, -146.7375, -153.5309, -152.8574, -148.7429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-149.8926, -146.6488, -153.6231, -153.0269, -148.3399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-149.8954, -146.5633, -153.7433, -153.1505, -147.9121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-149.7217, -146.4728, -153.8595, -153.1579, -147.5465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-149.6902, -146.4164, -153.9528, -153.2482, -147.2954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-149.8497, -146.4375, -154.1047, -153.5148, -147.0129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-150.1630, -146.4764, -154.2525, -153.8768, -146.8286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-150.1602, -146.5130, -154.2925, -153.9230, -146.6738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-149.8259, -146.5102, -154.3195, -153.8094, -146.5215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-149.4454, -146.4998, -154.3432, -153.6643, -146.3970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-148.9587, -146.4729, -154.3138, -153.3952, -146.3120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-148.4329, -146.3719, -154.0815, -152.9025, -146.4466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-148.0031, -146.2909, -153.8476, -152.4575, -146.6415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-147.6085, -146.1607, -153.6971, -152.1195, -146.8254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-147.4296, -146.0354, -153.5367, -151.8929, -147.1258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-147.3352, -145.9323, -153.3830, -151.7209, -147.4070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-147.2746, -145.8484, -153.2411, -151.6103, -147.7289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-147.2894, -145.8270, -153.0961, -151.5507, -148.0458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-147.4450, -145.7802, -152.9908, -151.6367, -148.2488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-147.9780, -145.7564, -152.8299, -151.9088, -148.6495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-148.5754, -145.7906, -152.6921, -152.2233, -149.0579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-149.2339, -145.9164, -152.5089, -152.5160, -149.5677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-149.9499, -146.0722, -152.3336, -152.8417, -150.1196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-150.3249, -146.1809, -152.1893, -152.9536, -150.4783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-150.6104, -146.3090, -152.0531, -152.9929, -150.8007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-150.6264, -146.3812, -151.9260, -152.8685, -151.0222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-150.6489, -146.4335, -151.8202, -152.7796, -151.2385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-150.4201, -146.4490, -151.7281, -152.5451, -151.4287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-150.1244, -146.3944, -151.6798, -152.2934, -151.4949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-149.7277, -146.3003, -151.6503, -151.9767, -151.4041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-149.3819, -146.1873, -151.6330, -151.6903, -151.1967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-148.9330, -145.9999, -151.6451, -151.3850, -150.7851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-148.7073, -145.8496, -151.6379, -151.2152, -150.3917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-148.5019, -145.6714, -151.6411, -151.0342, -149.9037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-148.3888, -145.5094, -151.6364, -150.9143, -149.4970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-148.4225, -145.3766, -151.6228, -150.8847, -149.2400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-148.5475, -145.2931, -151.6084, -150.9067, -148.9754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-148.7144, -145.2225, -151.6085, -150.9588, -148.6742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-148.9710, -145.1809, -151.5929, -151.0347, -148.3932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-149.1429, -145.1581, -151.5998, -151.0733, -148.0515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-149.3088, -145.0986, -151.6357, -151.1552, -147.7142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-149.4810, -145.0730, -151.6342, -151.2096, -147.4197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-149.3665, -145.0235, -151.6384, -151.1254, -147.0901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-149.3712, -144.9623, -151.6495, -151.1522, -146.8985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-149.3698, -144.9080, -151.6682, -151.1888, -146.7602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-149.2364, -144.8447, -151.6483, -151.1284, -146.6247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-148.7931, -144.7327, -151.6427, -150.9194, -146.3540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-148.3580, -144.6289, -151.6079, -150.6939, -146.1819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-147.8919, -144.5198, -151.5911, -150.4419, -145.9522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-147.6847, -144.4488, -151.5717, -150.3111, -145.7380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-147.6643, -144.3612, -151.5569, -150.3123, -145.5492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-147.3943, -144.2467, -151.5530, -150.1764, -145.3437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-147.0654, -144.1330, -151.5897, -150.0501, -145.0341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-146.9668, -144.0266, -151.6706, -150.1009, -144.7583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-146.8399, -143.9346, -151.6826, -150.0836, -144.6389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-146.5793, -143.8314, -151.6356, -149.9530, -144.5677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-146.2961, -143.6891, -151.5139, -149.7230, -144.6074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-146.2580, -143.5718, -151.4145, -149.6683, -144.6798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-146.0272, -143.4482, -151.3135, -149.5169, -144.7478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-145.4964, -143.2989, -151.2819, -149.2857, -144.7099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-145.0486, -143.1759, -151.2736, -149.1140, -144.6254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-144.6178, -143.0687, -151.2383, -148.9606, -144.5686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-144.2405, -142.9632, -151.1976, -148.8188, -144.5857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-143.9800, -142.9285, -151.1369, -148.7101, -144.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-143.7263, -142.8761, -151.0595, -148.5679, -144.6716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-143.4432, -142.7699, -151.0530, -148.4585, -144.5731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-143.5527, -142.6738, -150.9250, -148.4837, -144.6421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-143.9171, -142.5671, -150.7364, -148.6187, -144.7748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-144.2697, -142.4503, -150.5841, -148.7323, -144.8150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-144.8581, -142.3605, -150.4109, -148.9687, -144.9618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-145.0914, -142.2603, -150.2931, -149.0156, -145.0051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-145.2811, -142.1519, -150.1741, -149.0589, -145.0791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-145.5981, -142.0855, -150.0447, -149.1923, -145.2574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-146.0829, -142.0372, -149.8844, -149.4135, -145.5352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-146.4537, -142.0319, -149.6958, -149.5351, -145.8372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-146.8517, -142.0526, -149.5343, -149.7012, -146.1782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-146.9938, -142.0839, -149.3723, -149.6903, -146.4700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-147.1604, -142.0758, -149.2695, -149.7438, -146.5755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-147.2734, -142.0648, -149.1921, -149.7868, -146.6033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-147.5140, -142.0716, -149.1245, -149.8877, -146.5921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-147.2737, -142.0087, -149.0654, -149.7059, -146.4845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-147.2660, -142.0097, -148.9884, -149.6611, -146.4705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-147.4458, -141.9902, -148.9538, -149.7315, -146.3578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-147.6572, -141.9935, -148.9164, -149.8224, -146.3517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-147.7106, -141.9888, -148.8682, -149.8197, -146.2985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-147.4621, -141.9006, -148.8456, -149.6627, -146.0186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-147.3635, -141.8266, -148.8304, -149.5967, -145.7329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-147.3325, -141.7858, -148.7920, -149.5390, -145.4957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-147.2561, -141.7611, -148.7251, -149.4451, -145.3061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-147.3303, -141.7648, -148.6743, -149.4449, -145.0645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-147.4538, -141.7842, -148.6013, -149.4454, -144.8336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-147.3204, -141.7710, -148.5449, -149.3435, -144.5824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-147.0033, -141.7540, -148.4332, -149.1102, -144.3725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-146.4225, -141.7088, -148.3378, -148.7496, -144.1164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-146.0360, -141.6934, -148.2267, -148.4800, -144.0245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-145.5744, -141.7047, -148.1290, -148.1613, -143.9002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-145.0545, -141.7311, -148.0640, -147.8096, -143.7689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-144.9534, -141.8205, -148.0052, -147.6943, -143.6282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-145.0371, -141.9270, -147.9049, -147.6585, -143.6200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-145.3146, -142.0245, -147.7633, -147.7291, -143.7684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-145.6986, -142.1305, -147.6254, -147.8633, -143.8910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-146.3457, -142.2734, -147.4901, -148.1440, -144.0815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-146.9076, -142.3549, -147.3988, -148.3885, -144.2972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-147.2854, -142.3718, -147.3290, -148.5901, -144.4859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-147.6343, -142.3519, -147.2787, -148.8076, -144.6329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-147.7587, -142.2813, -147.2341, -148.8933, -144.6644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-147.7452, -142.1931, -147.2102, -148.9311, -144.6209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-147.3780, -142.0482, -147.1928, -148.7876, -144.5144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-147.0668, -141.9043, -147.2266, -148.7177, -144.3737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-147.0386, -141.7811, -147.3155, -148.8739, -144.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-146.6916, -141.6013, -147.4049, -148.8752, -143.9988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-146.2341, -141.3945, -147.4669, -148.7833, -143.9031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-145.6020, -141.2328, -147.4921, -148.5482, -143.8052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-145.0063, -141.0986, -147.5089, -148.2960, -143.6933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-144.2905, -140.9502, -147.5437, -147.9663, -143.5041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-143.8075, -140.8259, -147.5974, -147.7941, -143.2764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-143.2473, -140.7090, -147.6484, -147.5608, -143.0210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-142.6366, -140.5743, -147.6958, -147.2545, -142.7447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-142.1636, -140.4803, -147.7660, -147.0497, -142.4828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-141.9219, -140.3628, -147.8441, -147.0124, -142.2239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-141.7450, -140.2736, -147.8491, -146.9451, -142.0783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-141.7057, -140.2110, -147.8270, -146.9418, -142.0065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-141.7114, -140.1526, -147.8160, -146.9601, -141.9150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-141.8675, -140.0995, -147.7572, -147.0154, -141.8987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-142.2773, -140.0391, -147.6840, -147.2142, -141.9349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-142.6218, -140.0132, -147.5757, -147.3133, -142.0436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-143.0541, -139.9819, -147.4983, -147.4806, -142.1426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-143.4997, -139.9750, -147.3810, -147.6123, -142.3484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-143.8223, -139.9807, -147.2894, -147.6782, -142.4525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-143.8107, -139.9394, -147.1975, -147.5542, -142.5207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-143.6458, -139.8758, -147.1255, -147.3655, -142.4688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-143.6563, -139.8210, -147.0511, -147.2940, -142.4404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-143.8513, -139.7442, -147.0160, -147.3512, -142.4155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-143.9087, -139.7001, -146.9871, -147.3421, -142.3256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-144.0498, -139.6577, -146.9142, -147.3176, -142.2857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-144.2878, -139.6117, -146.9103, -147.4246, -142.1793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-144.5531, -139.5724, -146.9187, -147.5699, -142.0788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-144.8839, -139.5529, -146.9205, -147.7237, -142.0570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-145.1024, -139.5278, -146.8772, -147.7730, -142.0495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-145.1803, -139.4963, -146.8756, -147.7585, -141.9464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-145.2505, -139.4679, -146.9341, -147.8190, -141.8145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-144.8169, -139.3999, -146.9193, -147.5392, -141.6083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-144.2590, -139.3017, -146.8401, -147.1586, -141.5250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-143.6629, -139.1674, -146.7729, -146.7416, -141.4819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-143.3160, -139.0426, -146.6841, -146.4516, -141.6423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-142.9015, -138.9204, -146.6595, -146.1565, -141.6613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-142.3007, -138.8127, -146.6355, -145.7780, -141.6697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-141.5545, -138.7252, -146.6354, -145.3028, -141.6419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-140.6564, -138.6388, -146.6919, -144.7536, -141.5420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-139.7996, -138.5630, -146.7840, -144.2294, -141.5012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-139.1882, -138.5169, -146.8707, -143.8492, -141.4784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-138.8565, -138.5089, -146.8849, -143.6101, -141.3514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-138.6772, -138.4842, -146.8729, -143.4586, -141.0962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-138.6133, -138.4361, -146.8340, -143.4044, -140.8118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-138.8189, -138.4032, -146.7622, -143.5190, -140.4414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-139.2808, -138.3788, -146.6531, -143.7944, -140.1448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-139.7897, -138.3676, -146.5807, -144.1114, -139.8871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-140.1903, -138.3347, -146.5707, -144.4234, -139.7213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-140.6325, -138.3638, -146.5616, -144.7436, -139.6134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-141.0407, -138.3922, -146.5323, -145.0304, -139.5905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-141.7782, -138.4571, -146.4604, -145.4528, -139.6527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-142.4959, -138.5233, -146.4266, -145.9096, -139.7463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-143.0430, -138.6010, -146.4105, -146.2298, -139.7588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-143.5684, -138.6629, -146.3273, -146.4496, -139.8391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-144.0161, -138.7106, -146.1905, -146.5968, -139.9932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-144.3276, -138.7229, -146.0058, -146.6069, -140.1886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-144.4061, -138.6949, -145.8018, -146.4774, -140.3803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-144.4671, -138.6675, -145.6162, -146.3249, -140.6056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-144.3978, -138.6323, -145.4708, -146.1604, -140.8032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-144.0302, -138.5598, -145.3417, -145.8545, -140.9184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-143.4809, -138.4628, -145.2440, -145.4936, -141.0103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-142.9352, -138.4141, -145.1612, -145.1478, -141.1168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-142.6848, -138.4141, -145.0794, -144.9538, -141.3035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-142.5911, -138.4190, -145.0200, -144.8535, -141.4677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-142.3435, -138.3877, -144.9962, -144.6929, -141.4917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-141.9931, -138.3474, -145.0009, -144.5013, -141.4646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-141.7683, -138.2971, -145.0330, -144.4406, -141.3141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-141.6014, -138.2465, -145.0664, -144.4099, -141.1159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-141.4304, -138.2181, -145.0898, -144.3704, -140.9575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-141.2091, -138.1840, -145.1372, -144.3262, -140.6964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-141.0653, -138.1731, -145.1390, -144.2877, -140.5607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-141.0426, -138.1298, -145.1466, -144.3438, -140.4279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-141.2838, -138.0986, -145.1123, -144.5044, -140.3447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-141.4457, -138.0449, -145.0815, -144.6555, -140.3007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-141.3363, -137.9584, -145.0838, -144.6924, -140.2414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-141.4232, -137.9027, -145.0694, -144.7852, -140.1690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-141.4811, -137.8390, -144.9918, -144.8086, -140.1695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-141.3164, -137.8078, -144.9160, -144.7049, -140.1475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-141.3494, -137.7608, -144.8234, -144.7102, -140.2389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-141.3841, -137.7218, -144.7325, -144.7078, -140.3083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-141.5643, -137.7084, -144.6968, -144.8164, -140.3420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-141.7075, -137.6639, -144.6480, -144.9024, -140.3901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-141.7672, -137.6019, -144.6353, -144.9497, -140.3387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-141.9163, -137.5662, -144.6825, -145.0693, -140.1242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-142.1425, -137.5570, -144.6790, -145.1824, -140.0561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-142.2747, -137.5189, -144.6966, -145.2700, -139.9567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-142.5127, -137.5200, -144.6953, -145.3846, -139.8263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-143.1771, -137.5783, -144.7249, -145.7455, -139.7772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-143.7825, -137.6596, -144.7482, -146.0642, -139.7093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-144.3995, -137.7578, -144.7712, -146.3979, -139.6704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-144.8570, -137.7939, -144.8132, -146.6592, -139.6359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-144.4715, -137.6926, -144.7818, -146.3844, -139.3216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-143.5273, -137.4651, -144.6899, -145.7685, -138.9697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-142.6128, -137.2366, -144.5884, -145.1640, -138.6760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-141.8803, -137.0511, -144.5196, -144.6835, -138.4506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-141.3521, -136.9022, -144.4783, -144.3298, -138.2644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-140.5841, -136.7463, -144.4074, -143.8071, -138.0195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-140.1407, -136.6512, -144.3029, -143.4178, -137.8098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-139.5739, -136.5555, -144.2594, -143.0336, -137.5515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-139.3190, -136.4856, -144.2125, -142.8421, -137.3985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-139.4027, -136.4398, -144.0891, -142.7890, -137.3605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-139.5679, -136.4459, -143.9489, -142.7648, -137.3094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-139.8234, -136.4259, -143.8004, -142.7967, -137.3071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-139.6581, -136.3174, -143.6366, -142.5637, -137.3287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-139.3996, -136.1844, -143.4777, -142.2997, -137.4197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-139.2738, -136.0787, -143.3354, -142.1256, -137.4989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-139.2061, -136.0072, -143.1828, -141.9876, -137.5714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-139.2425, -135.9337, -142.9767, -141.8510, -137.7879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-139.3231, -135.9115, -142.7933, -141.7332, -137.9387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-139.5225, -135.9276, -142.6225, -141.6675, -137.9874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-139.8912, -135.9766, -142.4424, -141.6791, -137.9879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-140.2732, -135.9815, -142.2861, -141.7456, -138.0875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-140.7331, -135.9884, -142.1221, -141.8543, -138.2070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-141.2549, -136.0110, -141.9680, -142.0057, -138.3325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-141.9391, -136.0378, -141.8603, -142.2835, -138.4784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-142.6547, -136.0587, -141.7943, -142.6127, -138.6495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-143.0953, -136.0194, -141.7793, -142.8163, -138.6358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-143.5039, -135.9426, -141.8318, -143.0716, -138.5459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-144.0206, -135.9024, -141.9164, -143.4066, -138.4768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-144.4801, -135.8517, -142.0355, -143.7277, -138.3695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-144.6100, -135.7341, -142.0790, -143.8058, -138.3268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-144.2628, -135.5729, -142.1266, -143.6694, -138.0697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-143.8301, -135.4034, -142.1942, -143.5116, -137.8314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-143.3365, -135.2550, -142.2291, -143.2685, -137.5455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-142.4475, -135.0319, -142.2205, -142.8018, -137.2254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-141.4033, -134.8297, -142.1772, -142.2062, -136.8814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-140.4547, -134.6314, -142.1435, -141.6868, -136.6347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-139.7034, -134.4593, -142.1237, -141.2757, -136.4658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-139.0768, -134.2979, -142.0552, -140.8439, -136.3703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-138.5320, -134.1586, -142.0239, -140.4783, -136.2126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-138.0531, -134.0011, -141.9844, -140.1471, -136.1165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-137.6792, -133.8318, -141.9612, -139.8917, -136.0120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-137.7060, -133.7022, -141.8881, -139.8210, -136.0528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-137.7657, -133.5930, -141.8283, -139.7864, -136.0733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-137.7409, -133.4955, -141.7888, -139.7018, -136.0285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-137.7067, -133.3767, -141.7681, -139.6599, -135.9499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-137.7205, -133.2501, -141.7202, -139.6328, -135.9951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-137.6210, -133.1156, -141.6746, -139.4978, -136.0567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-137.3811, -132.9594, -141.6343, -139.2830, -136.1049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-136.9183, -132.7635, -141.6306, -139.0071, -136.1025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-136.8447, -132.6258, -141.5490, -138.8474, -136.2486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-136.7212, -132.4672, -141.5029, -138.7405, -136.3758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-136.7215, -132.3095, -141.4885, -138.7216, -136.3788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-136.7190, -132.1395, -141.4729, -138.6793, -136.3528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-136.7076, -131.9998, -141.4842, -138.6701, -136.2406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-136.6559, -131.8625, -141.5328, -138.7013, -136.0393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-136.7092, -131.6888, -141.5715, -138.7971, -135.9899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-136.5158, -131.4771, -141.6834, -138.7765, -135.7717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-136.1955, -131.2545, -141.8030, -138.7092, -135.5440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-136.0893, -131.0861, -141.8858, -138.7519, -135.3632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-135.8900, -130.9256, -142.0416, -138.8203, -135.0585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-135.7656, -130.7934, -142.2055, -138.9565, -134.8070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-135.5396, -130.6733, -142.3462, -139.0467, -134.6199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-135.5766, -130.5917, -142.4545, -139.2270, -134.4609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-135.7837, -130.5866, -142.5662, -139.5138, -134.3547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-135.6921, -130.5338, -142.6709, -139.6189, -134.2458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-135.4420, -130.4622, -142.7297, -139.6273, -134.2032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-135.4085, -130.4487, -142.7729, -139.7322, -134.1925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-135.5079, -130.4957, -142.8432, -139.9532, -134.1935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-135.3849, -130.5557, -142.9451, -140.0841, -134.1116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-135.3089, -130.5701, -142.8980, -140.0744, -134.0717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-135.0571, -130.5774, -142.7936, -139.8847, -133.9863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-134.7989, -130.5416, -142.6344, -139.6570, -133.9689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-134.7294, -130.4913, -142.4032, -139.4778, -134.0420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-134.8603, -130.5182, -142.1989, -139.4114, -134.0751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-134.8145, -130.5322, -142.0064, -139.2838, -134.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-134.8463, -130.5354, -141.7876, -139.1532, -134.2613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-134.7569, -130.5039, -141.5697, -138.9584, -134.3681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-134.5791, -130.5266, -141.3974, -138.7041, -134.3302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-134.5225, -130.5789, -141.2146, -138.4989, -134.3085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-134.4915, -130.5964, -140.9236, -138.1962, -134.5039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-134.2250, -130.6253, -140.7048, -137.8079, -134.6622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-133.8423, -130.6525, -140.5764, -137.4013, -134.7192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-133.3833, -130.6887, -140.5151, -136.9626, -134.7269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-133.2415, -130.7492, -140.4221, -136.7696, -134.6458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-133.3620, -130.7887, -140.2865, -136.7484, -134.5552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-133.4213, -130.8041, -140.1705, -136.7129, -134.4864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-133.5152, -130.8225, -140.0431, -136.6634, -134.4233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-133.5985, -130.8024, -139.9453, -136.6742, -134.3326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-133.9747, -130.7676, -139.8029, -136.8656, -134.4220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-134.4920, -130.7610, -139.6380, -137.0871, -134.4318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-135.1477, -130.7308, -139.4530, -137.3778, -134.6086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-135.8547, -130.7126, -139.3011, -137.7104, -134.7252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-136.2732, -130.7016, -139.1845, -137.9247, -134.8702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-136.3589, -130.6414, -139.1045, -137.9540, -134.9321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-136.2026, -130.5688, -139.0442, -137.8668, -134.8726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-136.2592, -130.5310, -138.9739, -137.9154, -134.8297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-136.6328, -130.5441, -138.8766, -138.1225, -134.9161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-136.5148, -130.4148, -138.8448, -138.1015, -134.8096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-136.1724, -130.2548, -138.8616, -137.9917, -134.5655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-135.7111, -130.1054, -138.9798, -137.8753, -134.1427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-134.9918, -129.9852, -139.1205, -137.6186, -133.6519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-134.3672, -129.8994, -139.2453, -137.4053, -133.2637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-133.6451, -129.7697, -139.3373, -137.1418, -133.0324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-133.2149, -129.6942, -139.4540, -137.0420, -132.8008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-132.5151, -129.6096, -139.6039, -136.8104, -132.5346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-131.6541, -129.5743, -139.8363, -136.5438, -132.2085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-131.0333, -129.5355, -140.0321, -136.3375, -131.9562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-130.4647, -129.4132, -140.1396, -136.1173, -131.8641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-130.1053, -129.3234, -140.1880, -135.9643, -131.8014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-129.7463, -129.1793, -140.2296, -135.8371, -131.8175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-129.7451, -129.0859, -140.2067, -135.8537, -131.7855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-130.2322, -129.0389, -140.1378, -136.1658, -131.7440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-130.6206, -129.0558, -140.1203, -136.4113, -131.6546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-131.2451, -129.0545, -140.0194, -136.6925, -131.6633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-132.1773, -129.0506, -139.8279, -137.0499, -131.7628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-132.9038, -129.0203, -139.6205, -137.3045, -131.9375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-133.9596, -129.0567, -139.4201, -137.7038, -132.1453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-134.5560, -129.0730, -139.3209, -137.9468, -132.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-135.2725, -129.1198, -139.2045, -138.2218, -132.4117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-136.1265, -129.2326, -139.1442, -138.6079, -132.5643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-137.0386, -129.3393, -139.0932, -138.9856, -132.7708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-137.8469, -129.4055, -139.0127, -139.2678, -132.9801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-138.4629, -129.4521, -138.9649, -139.4745, -133.1144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-138.5677, -129.3518, -138.8526, -139.4209, -133.1742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-138.2449, -129.1380, -138.5948, -138.9882, -133.1593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-137.5419, -128.8682, -138.3258, -138.3415, -133.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-136.4186, -128.5006, -138.0951, -137.5561, -132.9029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-135.0515, -128.1463, -137.8824, -136.7190, -132.8263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-134.0087, -127.9450, -137.7734, -136.1007, -132.7627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-133.1777, -127.7800, -137.6999, -135.5995, -132.6921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-132.6241, -127.6480, -137.6277, -135.2680, -132.7603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-131.8040, -127.4602, -137.6775, -134.8617, -132.7173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-131.2548, -127.3087, -137.7320, -134.6127, -132.6287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-130.8579, -127.1516, -137.7995, -134.4775, -132.5532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-130.7425, -127.0262, -137.8546, -134.4705, -132.3397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-130.2437, -126.8831, -137.9650, -134.2474, -132.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-129.9775, -126.7632, -138.0593, -134.1606, -131.8561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-129.8678, -126.6859, -138.1163, -134.1192, -131.6789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-129.7323, -126.5957, -138.1848, -134.0720, -131.5351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-129.5510, -126.4979, -138.2794, -134.0167, -131.3203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-129.4329, -126.3869, -138.3390, -134.0173, -131.1913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-129.6158, -126.3037, -138.4029, -134.1429, -130.9840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-130.0372, -126.2695, -138.4297, -134.3329, -130.7959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-130.2737, -126.1878, -138.4047, -134.3918, -130.6451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-130.3752, -126.0601, -138.3751, -134.3938, -130.5504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-131.0128, -125.9764, -138.2909, -134.6634, -130.6103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-131.5235, -125.9104, -138.2399, -134.8781, -130.6490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-132.0818, -125.8490, -138.2182, -135.1185, -130.6862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-132.6718, -125.8144, -138.1803, -135.3357, -130.7318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-133.0133, -125.7872, -138.1841, -135.4770, -130.6959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-132.7890, -125.6720, -138.0725, -135.2533, -130.5878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-132.7707, -125.6108, -137.9374, -135.1140, -130.5262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-133.0364, -125.6294, -137.8307, -135.1287, -130.4947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-132.7908, -125.5604, -137.6474, -134.8948, -130.4188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-132.3577, -125.4143, -137.4124, -134.5606, -130.4249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-132.1689, -125.2784, -137.2324, -134.3577, -130.4668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-132.1977, -125.2286, -137.1190, -134.2606, -130.4630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-132.2145, -125.1902, -136.9835, -134.0923, -130.4490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-131.8468, -125.1033, -136.8658, -133.7526, -130.3816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-131.5855, -124.9784, -136.8182, -133.5172, -130.3328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-131.3144, -124.8889, -136.7521, -133.2651, -130.3095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-131.1033, -124.8175, -136.7272, -133.0539, -130.2362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-130.8467, -124.7416, -136.6963, -132.8165, -130.1590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-130.5804, -124.6293, -136.6948, -132.5959, -130.0388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-130.4926, -124.5479, -136.6489, -132.4689, -130.0148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-130.5056, -124.4852, -136.6173, -132.4409, -130.1238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-130.6272, -124.4289, -136.6181, -132.4514, -130.0944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-130.6170, -124.3682, -136.6627, -132.3774, -129.9673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-130.7922, -124.3424, -136.6672, -132.4375, -129.9264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-131.1820, -124.3636, -136.6749, -132.6320, -129.9351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-131.3334, -124.3478, -136.6426, -132.7227, -129.9540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-131.6206, -124.3810, -136.6318, -132.8959, -129.9037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-131.6898, -124.4086, -136.5817, -132.9421, -129.8463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-131.7325, -124.4257, -136.5292, -132.9830, -129.7983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-131.7065, -124.4379, -136.5458, -133.0592, -129.6969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-131.7240, -124.5050, -136.5466, -133.1270, -129.5894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-131.8092, -124.4929, -136.4895, -133.2205, -129.6359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-131.7642, -124.4901, -136.4664, -133.2382, -129.5337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-131.5244, -124.4736, -136.5073, -133.2128, -129.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-130.8538, -124.3402, -136.5817, -133.0191, -129.1059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-130.1763, -124.2148, -136.6493, -132.8187, -128.8770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-129.3250, -124.0986, -136.6886, -132.4583, -128.5844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-129.0385, -124.1020, -136.7529, -132.4003, -128.4495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-128.7975, -124.0959, -136.8210, -132.3814, -128.3252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-128.7750, -124.1188, -136.8661, -132.4217, -128.2549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-128.1099, -124.0409, -136.8440, -132.1022, -128.1165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-127.5423, -123.9974, -136.8502, -131.8414, -127.9990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-127.0958, -123.9708, -136.7951, -131.5690, -127.8830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-126.6976, -123.9797, -136.7154, -131.3270, -127.7695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-126.2286, -123.9889, -136.6132, -130.9600, -127.6410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-125.4649, -123.9617, -136.5444, -130.4387, -127.5053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-124.7793, -124.0870, -136.5984, -129.9675, -127.2707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-124.3277, -124.2315, -136.6319, -129.6017, -127.0435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-124.4345, -124.3594, -136.4967, -129.4652, -126.9160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-124.4574, -124.4798, -136.3837, -129.3161, -126.7991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-124.7429, -124.5233, -136.1425, -129.2341, -126.7630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-125.1439, -124.4508, -135.8316, -129.1526, -126.8319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-125.5523, -124.4112, -135.6037, -129.1807, -126.8496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-126.0898, -124.3289, -135.3511, -129.3087, -126.9436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-126.8074, -124.1847, -135.0405, -129.5374, -127.1305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-127.5394, -124.0268, -134.7673, -129.7919, -127.3887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-128.0917, -123.8464, -134.5213, -129.9523, -127.6768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-128.5572, -123.7541, -134.3788, -130.1717, -127.7936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-128.7348, -123.6278, -134.2844, -130.2596, -127.7967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-128.4655, -123.4417, -134.2741, -130.1657, -127.5823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-127.8333, -123.2182, -134.3053, -129.9182, -127.3260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-126.7776, -122.9313, -134.4001, -129.4627, -127.0177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-125.6134, -122.6687, -134.5632, -129.0125, -126.6634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-124.2705, -122.4104, -134.7900, -128.4719, -126.3699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-123.2780, -122.2454, -135.0507, -128.1830, -126.1770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-122.4274, -122.1942, -135.3577, -128.0320, -125.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-121.6553, -122.1023, -135.6198, -127.8908, -125.7485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-120.8993, -122.1341, -135.9560, -127.7905, -125.5656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-120.2223, -122.1590, -136.2519, -127.6675, -125.4288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-119.8955, -122.1386, -136.3883, -127.6223, -125.3035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-119.6279, -122.0602, -136.4382, -127.5092, -125.2417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-119.5120, -121.8048, -136.2864, -127.3312, -125.1989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-119.6998, -121.5246, -136.0171, -127.2668, -125.0096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-119.7369, -121.2047, -135.8184, -127.1652, -124.8692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-120.0428, -120.7841, -135.5019, -127.1755, -124.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-120.4222, -120.4327, -135.1793, -127.1895, -124.7022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-121.1151, -120.0763, -134.7560, -127.2661, -124.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-122.0295, -119.8366, -134.3745, -127.4638, -124.6433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-123.0711, -119.6169, -133.9955, -127.7398, -124.7651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-124.1899, -119.4698, -133.6964, -128.0257, -124.8570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-124.9503, -119.3560, -133.4200, -128.0943, -124.9179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-125.0524, -119.2469, -133.2536, -127.9099, -124.8084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-125.1094, -119.1792, -133.1702, -127.7877, -124.6729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-125.2710, -119.2607, -133.0810, -127.6860, -124.4934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-125.3734, -119.3731, -133.0269, -127.6114, -124.3075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-125.0304, -119.3328, -132.9124, -127.2998, -124.1440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-124.6035, -119.2268, -132.7637, -126.8851, -124.0096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-124.5571, -119.1094, -132.5500, -126.6019, -124.0167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-124.4197, -118.9299, -132.3002, -126.3615, -124.2092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-124.4410, -118.8637, -132.1000, -126.2298, -124.3474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-124.6903, -118.8823, -131.8726, -126.2195, -124.5188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-124.8712, -118.9014, -131.6981, -126.2162, -124.5853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-125.1043, -118.9246, -131.5243, -126.2217, -124.6331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-125.2826, -118.9323, -131.4016, -126.2638, -124.7193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-125.5069, -118.9911, -131.2995, -126.3585, -124.7427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-125.6898, -119.0723, -131.2846, -126.4517, -124.7127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-125.9700, -119.1173, -131.3026, -126.6522, -124.6919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-126.0658, -119.1683, -131.3679, -126.7661, -124.6483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-126.2178, -119.2279, -131.4685, -126.8919, -124.5984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-126.1613, -119.2870, -131.6225, -126.9789, -124.5081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-126.2372, -119.3453, -131.8008, -127.1474, -124.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-126.2160, -119.4818, -132.0646, -127.3224, -124.2651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-125.9651, -119.5532, -132.2734, -127.3712, -124.0998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-125.6030, -119.5449, -132.4292, -127.3231, -123.9895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-124.9063, -119.4370, -132.5574, -127.0660, -123.8476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-124.0101, -119.3307, -132.6409, -126.6863, -123.6375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-122.7731, -119.2104, -132.8088, -126.2123, -123.4388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-121.5517, -119.1778, -133.0494, -125.7473, -123.2456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-120.2961, -119.1407, -133.3005, -125.2295, -123.1080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-119.4071, -119.1072, -133.4982, -124.8394, -123.0682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-119.0809, -119.0719, -133.5128, -124.5509, -122.9796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-118.9498, -119.1042, -133.5449, -124.4325, -122.9220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-119.0490, -119.0825, -133.4118, -124.2890, -122.8484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-119.5252, -118.9828, -133.0710, -124.1878, -122.7476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-120.3852, -119.0066, -132.7619, -124.3661, -122.6814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-121.2072, -119.0058, -132.4887, -124.5521, -122.7277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-122.3613, -119.1910, -132.2338, -124.9368, -122.7806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-123.4939, -119.4263, -132.0273, -125.3144, -122.8874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-124.4741, -119.6403, -131.8927, -125.6283, -122.9796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-125.7780, -119.8701, -131.7650, -126.1307, -123.2108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-126.5977, -120.0316, -131.6492, -126.4348, -123.3432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-127.2803, -120.1812, -131.6081, -126.7233, -123.4171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-128.0012, -120.2933, -131.5313, -127.0151, -123.5057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-128.3484, -120.1803, -131.4100, -127.1017, -123.5400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-128.7791, -120.0944, -131.2828, -127.2416, -123.6094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-128.8255, -120.0314, -131.1981, -127.2646, -123.5436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-128.7362, -119.9864, -131.1164, -127.2413, -123.4490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-127.6823, -119.5498, -130.9573, -126.6893, -123.1840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-126.6135, -119.2116, -130.8268, -126.1099, -122.8669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-125.5476, -118.8406, -130.7241, -125.5098, -122.5646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-124.3065, -118.4250, -130.6059, -124.8268, -122.2755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-123.3120, -118.1276, -130.5764, -124.3302, -122.0789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-122.6557, -117.8912, -130.5350, -123.9914, -121.9921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-121.9384, -117.5653, -130.4609, -123.6130, -121.9694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-121.2577, -117.3046, -130.3881, -123.2172, -121.8868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-120.7108, -116.9815, -130.3125, -122.9380, -121.9501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-120.3476, -116.7775, -130.2921, -122.7765, -122.0150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-120.0601, -116.6196, -130.2709, -122.6463, -122.0884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-119.7551, -116.5241, -130.3258, -122.5605, -122.0406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-119.7104, -116.5082, -130.4298, -122.6739, -121.8848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-119.6947, -116.4330, -130.4834, -122.7781, -121.8164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-119.8496, -116.4411, -130.6219, -123.0457, -121.7721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-119.7731, -116.4382, -130.8124, -123.2622, -121.7207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-119.8570, -116.4478, -131.0302, -123.5463, -121.7439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-120.1651, -116.3636, -131.1533, -123.8978, -121.8295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-120.3738, -116.3789, -131.2842, -124.1664, -121.8429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-120.6643, -116.6246, -131.5381, -124.5356, -121.8046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-120.5089, -116.6775, -131.6016, -124.4963, -121.6889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-120.1380, -116.4774, -131.4890, -124.2068, -121.5852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-119.7961, -116.2225, -131.2891, -123.8943, -121.5091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-119.7922, -116.0545, -131.0341, -123.6598, -121.4500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-119.4965, -115.9304, -130.8092, -123.2855, -121.3750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-119.4739, -115.8022, -130.5717, -123.0417, -121.3228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-119.6902, -115.6089, -130.2891, -122.9060, -121.2577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-119.8263, -115.4483, -130.0650, -122.7954, -121.2174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-119.8461, -115.2148, -129.8518, -122.7155, -121.2635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-119.7819, -115.0219, -129.7092, -122.6286, -121.2686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-119.6805, -114.8022, -129.4959, -122.4492, -121.2900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-119.3069, -114.6033, -129.3598, -122.1681, -121.2899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-119.3162, -114.4714, -129.2245, -122.0501, -121.2629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-119.5689, -114.3572, -129.0778, -122.0936, -121.2952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-119.7603, -114.2984, -129.0419, -122.1671, -121.1340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-119.8618, -114.2574, -129.0351, -122.2408, -120.9737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-120.2972, -114.3261, -129.0692, -122.3827, -120.7043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-120.6985, -114.3490, -129.1011, -122.5445, -120.5173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-121.2979, -114.3668, -129.1564, -122.7735, -120.4248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-121.8640, -114.4253, -129.2889, -123.0287, -120.3332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-122.2759, -114.4916, -129.4750, -123.2462, -120.2568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-122.5289, -114.6253, -129.6461, -123.4072, -120.1344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-122.4918, -114.6873, -129.7802, -123.3971, -119.9805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-122.2317, -114.7413, -129.9123, -123.3004, -119.8103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-122.0841, -114.9181, -130.2316, -123.4214, -119.6780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-122.0729, -114.8263, -130.1950, -123.2727, -119.5746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-121.5166, -114.5347, -130.0356, -122.7546, -119.4179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-120.9994, -114.3252, -129.9140, -122.2968, -119.2549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-120.3492, -114.1422, -129.7866, -121.7917, -119.1277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-119.9466, -113.8999, -129.5671, -121.3066, -119.1190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-119.6712, -113.7726, -129.4512, -120.9790, -119.1488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-119.2580, -113.6725, -129.4152, -120.7386, -119.2462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-119.0827, -113.6761, -129.4000, -120.6509, -119.3631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-118.5527, -113.6708, -129.5184, -120.5306, -119.4334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-117.8113, -113.5824, -129.6180, -120.3247, -119.5604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-117.1980, -113.4727, -129.6707, -120.0746, -119.6102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-117.0086, -113.3625, -129.6401, -120.0029, -119.6549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-116.6523, -113.2659, -129.6819, -119.8954, -119.6913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-116.2386, -113.2700, -129.8413, -119.8383, -119.6622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-115.9796, -113.1485, -129.8828, -119.7907, -119.7444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-115.8715, -113.0316, -129.9212, -119.8330, -119.7762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-115.9259, -112.9385, -129.9396, -119.9237, -119.8207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-115.9209, -112.7514, -129.9415, -120.0097, -119.8410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-116.0772, -112.5093, -129.8408, -120.0254, -119.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-116.0595, -112.3300, -129.8042, -120.0051, -119.7868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-116.1747, -112.2148, -129.7491, -119.9676, -119.7542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-116.2751, -112.0783, -129.6440, -119.8758, -119.7037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-116.4525, -112.0195, -129.6118, -119.8396, -119.5808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-116.2825, -111.8375, -129.5661, -119.6293, -119.4381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-116.0556, -111.6321, -129.5395, -119.4808, -119.3455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-115.6666, -111.5056, -129.6158, -119.2843, -119.2202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-115.3436, -111.3588, -129.6412, -119.1029, -119.0875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-115.1735, -111.1278, -129.4244, -118.8463, -118.9880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-114.9277, -110.7829, -129.1275, -118.6115, -118.9405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-114.8635, -110.5387, -128.8350, -118.4331, -118.8515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-114.9436, -110.2915, -128.4978, -118.3160, -118.7785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-115.0043, -110.1358, -128.2728, -118.2113, -118.6299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-114.8112, -110.0309, -128.1998, -118.0321, -118.4486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-114.8131, -109.8966, -128.1133, -118.0159, -118.3694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-114.9596, -109.7216, -127.9609, -118.0339, -118.2673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-115.1845, -109.6346, -127.8265, -118.0315, -118.0844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-115.4611, -109.5643, -127.6999, -117.9915, -117.8385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-116.3442, -109.5173, -127.4942, -118.1679, -117.6345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-117.1703, -109.5183, -127.3642, -118.3297, -117.4822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-117.3906, -109.4225, -127.2608, -118.2471, -117.2747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-117.7662, -109.3180, -127.0416, -118.1953, -117.1721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-118.0858, -109.2125, -126.8943, -118.0819, -117.0679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-118.0053, -109.0371, -126.7777, -117.8065, -117.0186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-117.5339, -108.9869, -126.8340, -117.4941, -116.8824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-117.0934, -108.9578, -126.9430, -117.2865, -116.7958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-116.2738, -108.8650, -127.0326, -116.8563, -116.6206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-115.5633, -108.7521, -127.1097, -116.4145, -116.4668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-114.9288, -108.6602, -127.2003, -116.0445, -116.3417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-114.2758, -108.5088, -127.2497, -115.7103, -116.2803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-113.4665, -108.3857, -127.3541, -115.4071, -116.2261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-112.9157, -108.2325, -127.4286, -115.2451, -116.2261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-112.3722, -108.2152, -127.5566, -115.1507, -116.1697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-111.9245, -108.2791, -127.7304, -115.1665, -116.0844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-111.7049, -108.3203, -127.8375, -115.2660, -115.9601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-111.2541, -108.4348, -128.1387, -115.4343, -115.9750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-110.9013, -108.7610, -128.6244, -115.7594, -116.0062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-110.4042, -108.8253, -128.9551, -115.8770, -116.0960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-110.0235, -108.8055, -129.2077, -116.0823, -116.2572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-109.5868, -108.6513, -129.3312, -116.1725, -116.3953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-109.4171, -108.6250, -129.5265, -116.4467, -116.5306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-109.3776, -108.5978, -129.6159, -116.7033, -116.6470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-109.4442, -108.4608, -129.4823, -116.8279, -116.7115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-109.5264, -108.1730, -129.1411, -116.7338, -116.7085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-109.3784, -107.9379, -128.8839, -116.5368, -116.7423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-109.7498, -107.6271, -128.4434, -116.4285, -116.6882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-110.1240, -107.3607, -128.0494, -116.3297, -116.5919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-110.0803, -106.9989, -127.7267, -116.1553, -116.6171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-109.9970, -106.6751, -127.4232, -116.0179, -116.7071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-109.9698, -106.4970, -127.2420, -115.9577, -116.7613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-110.0968, -106.3230, -127.0375, -115.9474, -116.8047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-110.4744, -106.1483, -126.8495, -116.0737, -116.8484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-111.1242, -105.9712, -126.5861, -116.2531, -116.8801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-111.7842, -105.8148, -126.3825, -116.5375, -117.0076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-112.5099, -105.6922, -126.1813, -116.7739, -117.0956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-112.9927, -105.6311, -125.9950, -116.8346, -117.0825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-113.1830, -105.5573, -125.8941, -116.7985, -116.9811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-113.1127, -105.4316, -125.8178, -116.6439, -116.8974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-112.6950, -105.3431, -125.8617, -116.4106, -116.7910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-112.1732, -105.2595, -125.9186, -116.1165, -116.6410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-111.7814, -105.2535, -126.0001, -115.8838, -116.4947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-110.5955, -105.1340, -126.0667, -115.3894, -116.3367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-109.6296, -105.0526, -126.2147, -115.0267, -116.2121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-109.0624, -104.9657, -126.2646, -114.8413, -116.1526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-108.5749, -104.9234, -126.2566, -114.5870, -116.0500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-108.1682, -104.9124, -126.2932, -114.3870, -115.8052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-108.0553, -104.8376, -126.1484, -114.1798, -115.5305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-107.8888, -104.8245, -125.9797, -113.8889, -115.1594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-108.0129, -105.0300, -125.9481, -113.7346, -114.6272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-108.4285, -105.1407, -125.7812, -113.6624, -114.2124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-109.0312, -105.2239, -125.5702, -113.6895, -113.9054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-109.3573, -105.1418, -125.2319, -113.4989, -113.6712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-109.4427, -104.9887, -124.8870, -113.2211, -113.4440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-109.6052, -104.8572, -124.5583, -113.0245, -113.2246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-109.4635, -104.5766, -124.1852, -112.7415, -113.1155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-109.4601, -104.3660, -123.8985, -112.6331, -113.0759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-109.1521, -104.2566, -123.7200, -112.4263, -112.9915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-109.3340, -104.1737, -123.4409, -112.3888, -112.9124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-109.9835, -104.0596, -123.0650, -112.5759, -112.9478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-110.3308, -103.8696, -122.7502, -112.7198, -113.0715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-110.9135, -103.8097, -122.4718, -112.8794, -113.1630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-111.7653, -103.9321, -122.2914, -113.1516, -113.1813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-112.4093, -104.0366, -122.2005, -113.3907, -113.1951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-112.7847, -104.0862, -122.1849, -113.6306, -113.2559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-112.6130, -103.9663, -122.1121, -113.6782, -113.3239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-112.4107, -103.8711, -122.1085, -113.6314, -113.3004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-111.7245, -103.6947, -122.2019, -113.4656, -113.2232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-110.7025, -103.5342, -122.4384, -113.2768, -113.1523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-109.6602, -103.3864, -122.6923, -113.0585, -113.1483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-108.3958, -103.2425, -123.0181, -112.7859, -113.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-107.2739, -103.0247, -123.2578, -112.5972, -113.2636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-106.4412, -102.8666, -123.4763, -112.5395, -113.4627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-105.6282, -102.7530, -123.7204, -112.5513, -113.7294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-104.8123, -102.8789, -124.2202, -112.6963, -113.9441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-104.3366, -102.8912, -124.5486, -112.8705, -114.2089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-103.9326, -102.8866, -124.8922, -113.0609, -114.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-103.6961, -102.9072, -125.2046, -113.1663, -114.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-103.3676, -103.2135, -125.8516, -113.3917, -114.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-103.2509, -103.6198, -126.5424, -113.9002, -114.8640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-103.8479, -104.0594, -127.0117, -114.5551, -115.0094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-104.9593, -104.4662, -127.3235, -115.2748, -115.1273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-106.2887, -104.9318, -127.6159, -115.9789, -115.2437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-107.9217, -105.5637, -127.8872, -116.7098, -115.3959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-108.7162, -105.8793, -127.8973, -116.8700, -115.3063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-108.5896, -105.5720, -127.5959, -116.3667, -114.9670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-108.0383, -104.8602, -127.0036, -115.4630, -114.4398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-107.4278, -103.9456, -126.2744, -114.4745, -113.8894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-106.7300, -103.1473, -125.7423, -113.6916, -113.4907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-105.7398, -102.2948, -125.1349, -112.8289, -113.1568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-104.9211, -101.9309, -124.8505, -112.0881, -112.8430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-104.4080, -101.6861, -124.6333, -111.4518, -112.5872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-103.8795, -101.5109, -124.5384, -110.8230, -112.3814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-103.4464, -101.4129, -124.5685, -110.3252, -112.2535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-102.8116, -101.2376, -124.6646, -109.7827, -112.3247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-102.4911, -101.2072, -124.7733, -109.4140, -112.3717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-102.2640, -101.2177, -124.9170, -109.0037, -112.3641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-102.1704, -101.1947, -125.0550, -108.7363, -112.3838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-102.0858, -101.0001, -125.1483, -108.5434, -112.5040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-102.1704, -100.8176, -125.1015, -108.2410, -112.4337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-102.1275, -100.6590, -125.2055, -108.1323, -112.4291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-102.1122, -100.4399, -125.2706, -107.9969, -112.4087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-102.0804, -100.2743, -125.3280, -107.8919, -112.3357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-102.1897,  -99.9512, -125.2182, -107.8590, -112.4193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-102.3109,  -99.7176, -125.1341, -107.7340, -112.3500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-102.5658,  -99.4580, -124.8162, -107.5113, -111.9970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-102.6589,  -99.2100, -124.6564, -107.4141, -111.7416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-103.1389,  -99.0212, -124.3448, -107.2843, -111.3115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-103.7476,  -98.6150, -123.9484, -107.2029, -111.0736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-104.6789,  -98.3037, -123.5633, -107.2432, -110.8638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-105.5375,  -98.1808, -123.3651, -107.3817, -110.7131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-106.1817,  -98.0523, -123.2671, -107.6350, -110.6904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-106.8757,  -97.8575, -123.1594, -107.9091, -110.8149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-107.4121,  -97.7402, -123.1604, -108.1753, -110.9259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-108.0647,  -97.7260, -123.2380, -108.4599, -111.0180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-108.4287,  -97.6729, -123.3362, -108.7426, -111.1543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-108.1599,  -97.3786, -123.2105, -108.6914, -111.1746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-107.5301,  -97.1953, -123.1529, -108.5261, -111.0636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-107.2220,  -96.8086, -122.9028, -108.3602, -111.0026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-106.9174,  -96.5453, -122.7742, -108.3891, -111.0665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-106.4090,  -96.2638, -122.5915, -108.3638, -111.1360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-106.1270,  -96.2064, -122.6862, -108.4983, -111.1641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-105.9285,  -96.2189, -122.7713, -108.5648, -111.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-105.8375,  -96.1971, -122.8639, -108.6459, -111.0878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-105.4065,  -96.2584, -123.0331, -108.5753, -110.9575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-105.0589,  -96.6097, -123.3751, -108.5603, -110.8331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-103.9711,  -96.9945, -123.8780, -108.4360, -110.7583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-102.2885,  -97.2131, -124.4401, -108.1884, -110.7514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-100.4636,  -97.3114, -125.0196, -107.9679, -111.0499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([ -98.9508,  -97.7712, -126.0165, -108.1334, -111.5734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([ -98.0363,  -98.4004, -127.0368, -108.4503, -112.1006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([ -97.3389,  -99.1956, -128.0845, -108.8107, -112.6480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -96.8606, -100.0283, -129.1040, -109.1831, -113.1514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([ -96.7884, -100.9528, -129.9251, -109.5910, -113.3311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([ -96.9951, -101.8869, -130.5428, -109.9431, -113.3575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -97.3165, -102.8924, -131.0414, -110.2352, -113.3373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([ -98.3229, -104.1201, -131.2770, -110.6307, -113.1770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([ -99.2600, -105.0458, -131.4653, -110.9447, -113.1043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-100.2328, -105.4944, -131.3829, -111.0314, -112.9900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-100.8643, -105.4696, -131.1513, -110.8021, -112.7971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-100.8391, -105.0915, -130.9124, -110.2683, -112.5954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-100.5054, -104.1923, -130.3699, -109.4792, -112.3232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-100.4344, -103.2340, -129.7295, -108.6796, -111.9021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-100.4012, -102.2692, -129.0091, -107.8433, -111.4016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-100.5402, -101.6763, -128.4995, -107.2209, -110.9324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-100.8672, -100.9694, -127.8952, -106.8038, -110.5599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-101.4369, -100.0198, -127.0362, -106.2828, -110.0549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-101.4047,  -98.5902, -125.9832, -105.4109, -109.5096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-101.2040,  -96.9445, -124.8385, -104.6173, -109.1387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-101.3124,  -95.7169, -123.8317, -104.1342, -108.9317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-100.7766,  -94.7752, -123.2632, -103.7871, -109.0285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([ -99.9990,  -94.2112, -123.1791, -103.6624, -109.2486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([ -99.3128,  -93.8584, -123.2713, -103.6515, -109.5211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([ -98.6392,  -93.7015, -123.5876, -103.8143, -109.7265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([ -98.2443,  -93.5501, -123.7913, -103.9906, -109.7824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([ -97.9144,  -93.4007, -123.9679, -104.2194, -109.8131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([ -97.9483,  -93.1836, -124.0477, -104.5111, -109.7367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([ -97.7013,  -93.1016, -124.3702, -104.9095, -109.8340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([ -97.6317,  -92.9870, -124.6618, -105.3081, -109.9382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([ -97.7618,  -92.8757, -124.9558, -105.7334, -109.9220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([ -97.8989,  -92.8171, -125.2785, -106.1167, -109.8973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([ -98.3297,  -92.6613, -125.4108, -106.4504, -109.8841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([ -98.1021,  -92.7125, -125.9010, -106.8461, -110.0271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([ -97.9252,  -92.5873, -126.0837, -107.0845, -110.1690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([ -97.2613,  -92.3549, -126.2337, -107.1232, -110.3709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([ -96.7582,  -92.1528, -126.3456, -107.2216, -110.5918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([ -96.2269,  -91.8704, -126.3062, -107.0944, -110.7512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([ -95.8364,  -91.5974, -126.1083, -106.8908, -110.8962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([ -95.3976,  -91.4387, -126.0865, -106.7376, -111.0325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([ -94.9442,  -91.4286, -126.3091, -106.6384, -111.0342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([ -94.7551,  -91.3622, -126.3471, -106.4098, -110.8672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([ -94.6856,  -91.3147, -126.3501, -106.1674, -110.6493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -94.5023,  -91.2166, -126.3435, -105.9240, -110.5636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([ -94.6400,  -91.1518, -126.2073, -105.5947, -110.2367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([ -94.7620,  -91.0391, -125.9465, -105.2183, -110.0113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([ -95.0837,  -90.9395, -125.6067, -104.8127, -109.6934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([ -95.3844,  -91.0165, -125.4566, -104.4807, -109.3881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([ -95.9151,  -91.1267, -125.2203, -104.1881, -109.0993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -96.2979,  -91.2742, -125.0397, -103.9776, -108.8875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([ -96.4316,  -91.3582, -125.0220, -103.9995, -108.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([ -96.7033,  -91.4502, -125.0771, -104.1315, -108.9473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([ -96.9358,  -91.4189, -124.9996, -104.1037, -108.9886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([ -97.2109,  -91.6671, -125.2110, -104.1620, -109.0344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([ -97.5057,  -91.8188, -125.3147, -104.0416, -109.0057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([ -97.2595,  -91.7220, -125.3813, -103.8939, -109.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([ -96.9216,  -91.7233, -125.5141, -103.8034, -109.1224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([ -96.3075,  -91.9574, -126.0483, -103.9491, -109.3536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([ -95.1434,  -92.0375, -126.6310, -104.0347, -109.6126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([ -94.4015,  -91.9898, -127.0611, -104.0980, -109.8616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([ -93.4883,  -92.1337, -127.8712, -104.4938, -110.3312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([ -92.8526,  -92.1995, -128.5910, -104.7740, -110.7633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([ -92.4138,  -92.5263, -129.6229, -105.4292, -111.2771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([ -92.2757,  -92.7020, -130.3324, -105.8575, -111.5899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([ -92.2638,  -92.6438, -130.5776, -105.9623, -111.7232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([ -92.2449,  -93.0330, -131.1716, -106.2421, -111.7302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([ -92.2586,  -93.6702, -131.9124, -106.4998, -111.6888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([ -92.4989,  -94.5893, -132.5006, -106.6784, -111.4420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([ -92.8148,  -95.5734, -133.0943, -107.0465, -111.3027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([ -93.3448,  -96.9855, -133.8216, -107.7159, -111.2878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([ -94.0895,  -97.9509, -134.0425, -107.9714, -111.2217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([ -95.1115,  -98.6628, -133.7799, -107.8444, -110.9804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([ -96.1050,  -99.2316, -133.4542, -107.6442, -110.7841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([ -96.9575, -100.2312, -133.6673, -107.8443, -110.8094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([ -97.2883, -101.0582, -134.1740, -108.0854, -110.8715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([ -97.6454, -102.5650, -135.0378, -108.6864, -111.0898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([ -97.4440, -103.3424, -135.6920, -108.9082, -111.2080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([ -96.8431, -103.5418, -136.0017, -108.4976, -111.0497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([ -96.0362, -103.5494, -136.4028, -108.2459, -110.9810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([ -94.9106, -103.7682, -137.1595, -108.1089, -111.0871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([ -93.4986, -102.9958, -137.6553, -107.7760, -111.0933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([ -92.6795, -101.9535, -137.7764, -107.5361, -111.1632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([ -92.0770, -100.2904, -137.2628, -106.7712, -110.9703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([ -91.6839,  -99.4410, -137.1954, -106.5149, -111.0244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([ -91.7881,  -98.9223, -136.5371, -105.9603, -110.7805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([ -92.1565,  -98.1864, -135.4218, -105.0027, -110.3176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([ -93.4299,  -97.1462, -133.6448, -103.7176, -109.5516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([ -94.5069,  -96.0735, -132.3466, -103.0567, -109.1245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([ -95.0644,  -94.5034, -131.0778, -102.4288, -108.8172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([ -94.4937,  -92.6102, -129.9778, -101.8254, -108.7118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([ -93.9152,  -90.7986, -128.7945, -101.2240, -108.6606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([ -93.1263,  -89.6133, -128.1378, -101.0314, -108.9211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([ -92.4711,  -88.8276, -127.8082, -101.1499, -109.4250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([ -92.0171,  -88.4333, -127.8349, -101.5694, -110.0513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([ -91.7845,  -88.2367, -127.9165, -101.9294, -110.6195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([ -91.8423,  -88.0660, -127.9343, -102.4299, -111.3363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([ -91.8143,  -88.0839, -128.1309, -102.8899, -111.9153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([ -91.5556,  -88.1165, -128.3361, -102.9230, -112.0283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([ -91.1087,  -88.3055, -128.8561, -102.9565, -112.0196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([ -90.7102,  -88.5200, -129.4265, -103.0987, -112.1177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([ -90.1119,  -88.9544, -130.3740, -103.3676, -112.1177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([ -89.6188,  -89.5728, -131.3654, -103.6989, -112.0348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([ -89.3751,  -90.3814, -132.4542, -104.0735, -111.8163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([ -89.3626,  -91.7794, -133.9110, -104.6588, -111.6614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([ -89.5556,  -93.3374, -135.3069, -105.3941, -111.6908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([ -89.8956,  -94.9491, -136.5211, -106.1827, -111.8362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([ -90.2218,  -96.6782, -137.8548, -107.0299, -112.1359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([ -91.0251,  -98.5333, -138.8552, -107.8420, -112.4337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([ -91.6163, -100.0511, -139.9152, -108.7088, -112.8534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([ -92.2559, -100.8308, -140.2787, -108.9716, -112.9343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([ -92.4726, -100.4880, -140.1034, -108.6749, -112.8416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([ -92.9164, -100.3137, -139.8481, -108.3095, -112.6233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([ -92.8945,  -99.1717, -139.1391, -107.4630, -112.2728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([ -92.6604,  -97.4635, -138.0110, -106.3507, -111.9209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([ -92.3154,  -96.1226, -137.0844, -105.3482, -111.6441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([ -91.5968,  -94.8460, -136.2657, -104.2621, -111.3859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([ -91.0911,  -93.6376, -135.3938, -103.1491, -111.1347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([ -90.8061,  -92.7074, -134.7264, -102.2001, -110.9136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([ -90.7260,  -91.8515, -133.8515, -100.9938, -110.4147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([ -90.4867,  -91.1593, -133.3301,  -99.9623, -110.0228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([ -90.1264,  -90.6648, -133.2389,  -99.2355, -109.8440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([ -89.6815,  -90.4288, -133.6290,  -98.9493, -109.8550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([ -89.5947,  -90.3068, -133.7909,  -98.5258, -109.7059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([ -89.5561,  -90.1765, -133.9911,  -98.1346, -109.6110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([ -89.4346,  -90.2047, -134.4666,  -97.8428, -109.6131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([ -89.4870,  -90.3496, -134.7714,  -97.5168, -109.6099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([ -89.5039,  -89.9408, -134.6799,  -97.1289, -109.6349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([ -89.6159,  -89.1538, -134.1509,  -96.6347, -109.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([ -89.9216,  -88.2313, -133.3766,  -96.0587, -109.6000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([ -90.3892,  -87.5076, -132.5886,  -95.6542, -109.5227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([ -91.1321,  -87.3960, -132.0624,  -95.0785, -109.1513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([ -91.3404,  -86.9536, -131.7438,  -94.6779, -109.1217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([ -91.3261,  -86.7832, -131.8706,  -94.5336, -109.1958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([ -91.4282,  -86.5981, -131.8689,  -94.2733, -109.2056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([ -91.0540,  -86.5011, -132.2002,  -94.1883, -109.3863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([ -90.5445,  -86.7925, -132.9609,  -94.3652, -109.5300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([ -90.3528,  -88.1431, -134.2721,  -94.8762, -109.5122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([ -90.2258,  -89.1796, -135.3700,  -95.4848, -109.7132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([ -90.3789,  -89.9119, -136.0646,  -95.8503, -109.8798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([ -90.7013,  -90.3074, -136.3426,  -95.8446, -109.9723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([ -91.0703,  -91.0682, -136.8482,  -95.9056, -110.0242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([ -91.8260,  -92.9542, -137.7698,  -96.5010, -110.1532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([ -91.7274,  -94.4141, -138.9986,  -97.1921, -110.4990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([ -90.7324,  -95.0114, -140.4834,  -97.9645, -111.0151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([ -90.0681,  -96.2276, -142.3242,  -99.1302, -111.6332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([ -89.1078,  -97.5323, -144.9181, -100.9338, -112.4982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([ -88.7358,  -99.0710, -147.2436, -102.7191, -113.3346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([ -88.8414, -100.6886, -148.8975, -104.0458, -113.8175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([ -88.7259, -101.1656, -149.9155, -104.6873, -114.1013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([ -88.8315, -101.3939, -150.2196, -104.8831, -114.1567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([ -89.1457, -101.7434, -150.2406, -104.8680, -114.1098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([ -90.1425, -103.0524, -150.2374, -105.2602, -114.2212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([ -91.6591, -103.7989, -149.3833, -104.9304, -114.2290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([ -92.4543, -103.3600, -148.7005, -104.3177, -114.2015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([ -92.9552, -103.0512, -148.3958, -104.0134, -114.2432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([ -92.2069, -101.2601, -148.1634, -102.9870, -114.0196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([ -91.0981,  -98.1734, -147.4959, -101.2889, -113.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([ -89.7481,  -94.8084, -147.5112, -100.0421, -113.5408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([ -89.0930,  -92.5711, -147.9070,  -99.6062, -113.8789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([ -88.9800,  -91.2776, -148.1259,  -99.2694, -114.1595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([ -89.0283,  -90.9559, -148.6507,  -99.1885, -114.3554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([ -88.9922,  -90.6876, -149.3787,  -99.3582, -114.5998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([ -89.0133,  -90.5665, -150.1953,  -99.4161, -114.8475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([ -89.0100,  -89.8899, -149.7074,  -98.5813, -114.6931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([ -88.9492,  -90.7298, -150.0549,  -98.1119, -114.2408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([ -88.9173,  -91.3152, -149.7445,  -97.1767, -113.5942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([ -89.1651,  -92.0812, -149.2355,  -96.3229, -113.0490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -89.7551,  -94.5457, -149.6560,  -96.4083, -112.6753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -90.6375,  -98.6117, -151.1860,  -97.7383, -112.7974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([ -91.1870, -102.1950, -153.4301,  -99.8856, -113.4357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -91.8083, -105.5722, -155.4904, -101.9268, -114.1997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([ -91.3520, -106.6779, -157.2364, -103.5402, -114.9606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([ -90.5892, -107.1528, -159.2681, -105.1811, -115.7333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([ -89.5400, -106.9069, -161.6570, -106.7041, -116.4193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([ -89.0044, -107.0377, -163.3884, -107.7446, -116.8431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([ -88.6437, -106.8664, -164.6741, -108.4182, -117.1535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([ -88.3958, -105.5858, -164.6611, -108.0698, -117.1256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([ -88.2814, -104.1504, -163.7078, -106.9341, -116.8195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([ -88.5846, -103.4825, -162.0662, -105.6311, -116.4437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([ -88.8232, -102.1993, -160.4392, -104.6082, -116.3475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([ -89.2914, -102.4709, -159.7408, -104.1670, -116.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([ -89.0951, -100.2428, -158.5817, -103.3400, -116.4887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([ -88.3530,  -98.1490, -158.3806, -102.8524, -116.6677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([ -87.5192,  -96.4265, -158.6258, -102.5607, -116.7911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([ -87.3577,  -96.4879, -159.1870, -102.4339, -116.7205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([ -87.2081,  -96.1991, -159.3640, -101.7815, -116.4848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([ -87.0414,  -96.5610, -160.4465, -101.7164, -116.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([ -87.1211,  -98.5562, -162.4117, -102.1521, -116.2006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([ -87.4663, -101.3935, -164.3189, -102.7291, -116.1132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([ -87.7571, -103.3966, -165.8826, -103.1308, -116.1700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([ -88.2148, -106.0194, -167.6439, -103.6246, -116.2289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -88.6997, -107.8996, -168.9581, -104.1293, -116.4978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([ -88.6835, -107.8491, -169.9457, -104.1320, -116.7385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([ -88.4728, -105.2518, -169.6803, -103.4198, -116.9590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([ -88.2347, -102.1279, -169.2733, -102.7347, -117.2102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([ -87.7583,  -97.8119, -168.7328, -102.2045, -117.6579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -87.5879,  -94.5822, -168.6544, -102.5917, -118.5185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([ -87.5995,  -92.2342, -168.6191, -102.9439, -119.1862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([ -87.7279,  -91.5507, -168.8281, -103.3513, -119.6706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([ -87.8382,  -91.0187, -169.5133, -104.0716, -120.2791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([ -87.9392,  -92.2651, -170.5202, -104.5018, -120.4816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([ -88.0451,  -94.1746, -171.6219, -105.1456, -120.6511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([ -88.5859,  -99.0774, -174.5430, -107.6012, -121.1956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([ -89.2757, -103.5820, -177.3785, -110.3580, -121.9843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([ -89.1099, -103.9417, -179.7544, -111.8051, -122.4373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([ -89.3132, -106.0834, -182.0923, -113.3054, -122.7479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([ -89.2837, -107.2241, -184.4077, -114.5880, -123.0555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([ -89.5089, -108.6764, -186.5005, -116.0753, -123.5062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -90.2274, -111.5713, -188.3303, -118.1952, -124.2530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([ -90.6471, -112.4476, -189.1997, -119.5406, -124.9273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([ -90.2630, -111.2552, -189.5836, -119.3808, -124.9674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([ -89.8215, -108.3349, -188.8619, -118.4713, -124.9597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([ -89.5952, -105.4334, -187.6557, -117.4509, -125.0167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([ -89.5716, -103.2203, -186.0739, -116.3211, -124.9978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([ -89.6848, -101.4343, -184.3373, -115.2829, -125.0324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([ -89.8907, -100.3532, -183.8440, -115.5501, -125.5238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([ -89.8349,  -98.2945, -183.4921, -115.6782, -126.0515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([ -89.8952,  -96.8065, -183.6809, -116.2416, -126.7007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([ -90.2127,  -97.4414, -184.7212, -117.7521, -127.5307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([ -90.3720,  -96.8125, -185.3780, -118.5727, -128.2097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([ -90.3544,  -95.8668, -185.9770, -118.7576, -128.5641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([ -90.4487,  -96.8815, -186.9988, -119.2568, -128.7471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([ -90.7478,  -99.4218, -189.6926, -121.7105, -129.4833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([ -91.2468, -104.3428, -193.1785, -124.9902, -130.2238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([ -91.4852, -107.5540, -195.6505, -126.9620, -130.7325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([ -91.3728, -109.2394, -197.7661, -128.3529, -131.2050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([ -91.2413, -111.8199, -200.2007, -129.6227, -131.3340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([ -91.4910, -115.4732, -202.8123, -131.4267, -131.7255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([ -91.8193, -120.4445, -206.2289, -133.6012, -132.1369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([ -92.0877, -123.2348, -209.0998, -135.5698, -132.5755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([ -91.7306, -123.1475, -209.8269, -134.7674, -132.1911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([ -91.2556, -121.5545, -209.8667, -133.2281, -131.5840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([ -90.6659, -117.9510, -208.4969, -130.8990, -130.9415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([ -90.0619, -113.1950, -206.4051, -127.6686, -130.1898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([ -90.0427, -111.9126, -206.0177, -126.9088, -130.1769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([ -90.0704, -111.4375, -206.9063, -126.9792, -130.3165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([ -90.3377, -112.3668, -207.7547, -127.7348, -130.7791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([ -90.5317, -111.9284, -207.2203, -127.3586, -131.0494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([ -91.0257, -112.0476, -206.7456, -127.8863, -131.8754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([ -91.1075, -110.3452, -206.2897, -127.7591, -132.5092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([ -90.9529, -109.2044, -206.8893, -127.1158, -132.6584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([ -91.1023, -112.0677, -208.9163, -128.4264, -133.1129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([ -91.5478, -116.4331, -211.5678, -130.9016, -133.9887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([ -92.4685, -122.5654, -214.7667, -134.4796, -135.2885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([ -93.2199, -127.9866, -218.9430, -138.0334, -136.4649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([ -94.1063, -133.4390, -223.6266, -141.9844, -137.8198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([ -95.1671, -138.6008, -228.5735, -146.5906, -139.6068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([ -95.4178, -139.5510, -232.3097, -148.8375, -140.6312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([ -94.6259, -138.0687, -236.0859, -149.4404, -140.9357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([ -93.3910, -133.3316, -238.8712, -148.2328, -140.8159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([ -92.2181, -127.2691, -239.2283, -145.1996, -140.4449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([ -91.3554, -121.9605, -238.0798, -141.3481, -139.8562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([ -90.9601, -118.7367, -237.4236, -139.0810, -139.5584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([ -90.6307, -115.0164, -235.7066, -136.0733, -139.1586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([ -90.7995, -114.4986, -234.7456, -135.3219, -139.2197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([ -91.3518, -116.5384, -234.8075, -136.5488, -139.7362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([ -92.3523, -119.4835, -235.1909, -138.9119, -140.6065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([ -93.6811, -123.2178, -236.3691, -142.4375, -141.8838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([ -95.7247, -129.9110, -237.8072, -147.2822, -143.6649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([ -97.7660, -135.8159, -239.4667, -151.7866, -145.4736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-100.2985, -143.0637, -242.7368, -157.9435, -147.8678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-101.8076, -148.7927, -246.5660, -162.8677, -149.7015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-100.2623, -145.5589, -247.3761, -160.7746, -149.0628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([ -98.3487, -138.9887, -246.8063, -156.7447, -147.9636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([ -96.6454, -133.6261, -246.6044, -152.6658, -146.8679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([ -95.2539, -128.8952, -247.3053, -149.3081, -146.0795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([ -94.4179, -125.2665, -248.2811, -147.6476, -145.9851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([ -94.0283, -124.7513, -250.6868, -148.1399, -146.4028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([ -94.4422, -126.5069, -251.9854, -149.4041, -146.9464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([ -95.0105, -130.3193, -254.8686, -151.7621, -147.4225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([ -95.3807, -133.0809, -257.0630, -153.6970, -147.9142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([ -95.4617, -134.7287, -258.5263, -154.5719, -148.1314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([ -95.7324, -137.9166, -260.3023, -156.4864, -148.6433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([ -95.7407, -139.8136, -261.6340, -158.0296, -149.1066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([ -95.9156, -143.3756, -263.2524, -159.5197, -149.2995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([ -96.0724, -144.6520, -262.6209, -159.6226, -149.5007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([ -96.3113, -146.3018, -261.2221, -158.7075, -149.3311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([ -96.3242, -146.6504, -260.3391, -157.2599, -149.0739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([ -97.1595, -149.9551, -260.1095, -157.4199, -149.2959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([ -97.3590, -150.3035, -259.2893, -155.6750, -149.0676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([ -97.4937, -149.9777, -258.7407, -154.4885, -148.9445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([ -97.5206, -148.9441, -259.2113, -153.7358, -148.9639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([ -96.9957, -143.5088, -258.0589, -151.2047, -148.4442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([ -96.8867, -140.9560, -258.6550, -150.8649, -148.5681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([ -97.2389, -141.6638, -261.3616, -152.5503, -149.1670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([ -97.7577, -142.5697, -263.5968, -154.4124, -149.8443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([ -99.1333, -150.0366, -269.5275, -160.1840, -151.3456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-101.0167, -159.9192, -276.1605, -167.6570, -153.4658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-103.0615, -170.1115, -282.7368, -175.8561, -155.7805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-104.6741, -176.6443, -288.1392, -182.3750, -157.6426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-104.9629, -175.6313, -290.3166, -184.7450, -158.1919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-103.7444, -164.6560, -288.0571, -181.0077, -157.3846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-103.3557, -155.5666, -285.3933, -178.0669, -157.0093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-103.5783, -151.1888, -285.7695, -179.1430, -157.5224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-104.3756, -154.5376, -289.7465, -183.7255, -158.6887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-105.5553, -162.0990, -295.6422, -190.4139, -160.0706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-106.7073, -169.0891, -299.8946, -194.7377, -160.9548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-107.6640, -175.5204, -303.6226, -198.3134, -161.8432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-109.3823, -185.0725, -306.6254, -201.8188, -162.8556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-110.5692, -191.1290, -307.9429, -202.6899, -163.2838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-111.5551, -195.8289, -308.8844, -203.3877, -163.6634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-112.0305, -198.7451, -309.8259, -204.2968, -164.0476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-112.1714, -199.7997, -310.1966, -204.0576, -164.1928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-111.1273, -196.4624, -309.6239, -201.6821, -163.8998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-109.6222, -190.3010, -308.0231, -198.4362, -163.3007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-108.1007, -181.9617, -305.0521, -193.9106, -162.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-107.4196, -179.0186, -304.5929, -193.2829, -162.6454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-107.3098, -181.0907, -306.3225, -196.3501, -163.7535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-107.2775, -184.3535, -309.1132, -200.4886, -165.2366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-107.3403, -186.6195, -311.2264, -204.7415, -166.7153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-107.4560, -187.7840, -312.8170, -208.2474, -168.0002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-107.6620, -188.6671, -314.0802, -211.3697, -169.2403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-107.3308, -187.1210, -315.4924, -213.9432, -170.2958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-106.9718, -184.3056, -316.8339, -215.6120, -171.2199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-107.2391, -184.2936, -319.1263, -218.9928, -172.7952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-107.7828, -186.0833, -322.1143, -223.3401, -174.6810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-108.4454, -188.7393, -325.9040, -228.3058, -176.7530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-109.6030, -195.3417, -331.9131, -236.1789, -179.4825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-111.8045, -203.2930, -337.2797, -244.5039, -182.6636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-114.1310, -209.6548, -341.7323, -251.3270, -185.4238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-115.8546, -214.7746, -345.5749, -256.5546, -187.6694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-117.5341, -218.3849, -348.5022, -260.5024, -189.5854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-118.1105, -216.2709, -348.7099, -259.5483, -190.2346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-117.7946, -211.5632, -347.9936, -256.9446, -190.0488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-117.7778, -210.7552, -349.2004, -256.3455, -190.1526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-117.0308, -210.5386, -351.3220, -255.9594, -189.8711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-117.2628, -212.9023, -353.9120, -257.2106, -190.3735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-117.7583, -216.8809, -356.7190, -259.3533, -191.1403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-118.2115, -219.4901, -359.0406, -261.1996, -191.8766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-119.1117, -223.4973, -361.9375, -263.9693, -193.1326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-120.0955, -226.8159, -364.0307, -265.8409, -194.5358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-121.1820, -230.1711, -366.0741, -268.0429, -196.1273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-122.5559, -232.5978, -367.7605, -270.7608, -197.9756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-123.0956, -232.4018, -368.9017, -272.4469, -199.2365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-123.8316, -231.8410, -368.9429, -272.8971, -200.4262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-123.5359, -228.5675, -368.3305, -271.9919, -200.9196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-123.1388, -225.4601, -367.9531, -271.6381, -201.4760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-123.0159, -225.5688, -369.4929, -273.9381, -202.5734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-122.9458, -226.6863, -371.6613, -277.2371, -203.7867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-122.9845, -227.1600, -374.4433, -282.6949, -205.3374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0048, device='cuda:0', dtype=torch.float64)
tensor([-122.8116, -227.6615, -377.3388, -288.1368, -206.6877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-123.3133, -230.0714, -380.7983, -294.3738, -208.4215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-123.6606, -231.5289, -383.3748, -298.9658, -209.7788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-124.5169, -236.2329, -387.3860, -305.1203, -211.6077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0043, device='cuda:0', dtype=torch.float64)
tensor([-125.5323, -242.5054, -392.0771, -312.6652, -213.7333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0056, device='cuda:0', dtype=torch.float64)
tensor([-126.9097, -248.5371, -396.7586, -320.8218, -216.1933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-128.0928, -254.1843, -401.5543, -328.3495, -218.2462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-129.5846, -260.0951, -406.6681, -336.4663, -220.4956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-130.9254, -264.6063, -411.8758, -343.8122, -222.2313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-131.5049, -265.5490, -415.0087, -347.4382, -223.1890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-131.7557, -265.0971, -416.7336, -348.1362, -223.5676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-131.6250, -263.4519, -417.7817, -347.1745, -223.5855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-130.9768, -259.6040, -418.0811, -344.6108, -223.1084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-130.4118, -254.6939, -417.5077, -340.5292, -222.3372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-130.5867, -252.9400, -418.4389, -339.5513, -222.1299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-131.2557, -253.0727, -420.6031, -340.3345, -222.6667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-132.2525, -255.0105, -423.0810, -341.8966, -223.5181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0051, device='cuda:0', dtype=torch.float64)
tensor([-133.4889, -259.7194, -426.3595, -344.8729, -224.7556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-135.2774, -265.8670, -430.2224, -349.9948, -226.7225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-136.5115, -270.9036, -434.0586, -354.6468, -228.3151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-137.5118, -275.0930, -436.8172, -358.1661, -229.5506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-138.1609, -278.3517, -439.0750, -360.4675, -230.4233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-138.7824, -282.2887, -442.4073, -363.7287, -231.3734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-141.0319, -291.4118, -447.5656, -370.5044, -233.7965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-142.3782, -296.1514, -450.6541, -374.7088, -235.7020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-143.0274, -298.7890, -452.4202, -376.5868, -237.0616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-142.8663, -299.8170, -454.5501, -378.6519, -238.0119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-142.0604, -295.3925, -454.0559, -377.6286, -238.2789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-141.7753, -292.9985, -454.6118, -378.5542, -239.0753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-141.0172, -292.0138, -456.5342, -381.0111, -239.4638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-139.7231, -290.7936, -458.2173, -384.0758, -239.2914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-139.3063, -294.0452, -463.0236, -392.1604, -239.8864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0047, device='cuda:0', dtype=torch.float64)
tensor([-139.3018, -298.4624, -468.4832, -402.5807, -240.6308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0056, device='cuda:0', dtype=torch.float64)
tensor([-140.1322, -304.3246, -473.2845, -412.4674, -242.1094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-141.9974, -313.4027, -479.5077, -424.2965, -244.6317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-144.4646, -324.6276, -487.4079, -438.0688, -248.0130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-147.2919, -335.3135, -494.5945, -451.7149, -251.6953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-149.9240, -345.9678, -502.2376, -466.3191, -255.4592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0051, device='cuda:0', dtype=torch.float64)
tensor([-152.5688, -355.5280, -508.8971, -478.5335, -259.2941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0047, device='cuda:0', dtype=torch.float64)
tensor([-154.3377, -361.8605, -512.7661, -484.7548, -262.0596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-155.9467, -364.6602, -515.1778, -488.3697, -264.6752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0045, device='cuda:0', dtype=torch.float64)
tensor([-155.8063, -362.6723, -515.1019, -486.2371, -265.5141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-154.9700, -356.9484, -512.5021, -479.3285, -265.3639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-152.8118, -346.3517, -506.5452, -466.0506, -263.6120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0043, device='cuda:0', dtype=torch.float64)
tensor([-150.2047, -336.1407, -500.8429, -454.1907, -261.8161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0029, device='cuda:0', dtype=torch.float64)
tensor([-148.3464, -327.4923, -496.9073, -446.2465, -260.6512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-147.3843, -323.8937, -496.8150, -445.8160, -260.7669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-146.9028, -323.8528, -498.6175, -448.5921, -261.2140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-146.9924, -325.3583, -500.9526, -452.1684, -262.4688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0057, device='cuda:0', dtype=torch.float64)
tensor([-147.6812, -332.2965, -506.5068, -461.6600, -264.5690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-148.7240, -344.0615, -515.2512, -476.1931, -266.9070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-150.3780, -357.3200, -525.0388, -492.9638, -269.4655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0035, device='cuda:0', dtype=torch.float64)
tensor([-152.2531, -367.6972, -533.4721, -508.6021, -271.9429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0030, device='cuda:0', dtype=torch.float64)
tensor([-154.2841, -378.0029, -542.1109, -524.8031, -274.3931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0039, device='cuda:0', dtype=torch.float64)
tensor([-156.2733, -386.6625, -549.9598, -539.6816, -276.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0048, device='cuda:0', dtype=torch.float64)
tensor([-157.2181, -392.1953, -555.0602, -549.4255, -278.3914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-157.4889, -396.9363, -559.9366, -558.4794, -279.1384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-158.1326, -399.5744, -563.5702, -565.2545, -280.1780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-158.6674, -399.7140, -565.3841, -569.5273, -280.9601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-159.6007, -398.2578, -566.7796, -573.1937, -282.2060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-160.3754, -395.8923, -567.5929, -574.6962, -283.5168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0044, device='cuda:0', dtype=torch.float64)
tensor([-161.3739, -393.4417, -568.1539, -574.4399, -285.4262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-161.7972, -390.2937, -569.1037, -574.5595, -286.7520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-160.8244, -385.0966, -568.6410, -570.7639, -286.3821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-160.1123, -381.0419, -567.9906, -566.8550, -286.3085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-160.3885, -380.4547, -569.6736, -566.8114, -287.3792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-160.4368, -379.7566, -572.0365, -567.9801, -287.9793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0040, device='cuda:0', dtype=torch.float64)
tensor([-160.3729, -379.8048, -575.0106, -569.8739, -288.3980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-160.9354, -380.4315, -578.1627, -571.5333, -289.8213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-162.3558, -380.6480, -581.1592, -573.8396, -291.9474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-163.6255, -380.4461, -582.7059, -573.3082, -293.7982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0036, device='cuda:0', dtype=torch.float64)
tensor([-165.2172, -382.8841, -585.3270, -573.9960, -295.8039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-166.1443, -387.0144, -589.2194, -578.3244, -296.9177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0033, device='cuda:0', dtype=torch.float64)
tensor([-166.2845, -389.7060, -591.9917, -581.2764, -297.1973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0036, device='cuda:0', dtype=torch.float64)
tensor([-166.6518, -393.7472, -595.9057, -586.3766, -297.7965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0033, device='cuda:0', dtype=torch.float64)
tensor([-166.7771, -396.2271, -598.7496, -590.5979, -297.9131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-167.2125, -398.2290, -600.6498, -592.1044, -298.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0028, device='cuda:0', dtype=torch.float64)
tensor([-167.8495, -400.3446, -602.9714, -595.7807, -299.0167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0035, device='cuda:0', dtype=torch.float64)
tensor([-168.1582, -402.4864, -605.2293, -599.5514, -299.4463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0051, device='cuda:0', dtype=torch.float64)
tensor([-168.9957, -410.5241, -612.4705, -611.7815, -300.4798],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_024328.csv
